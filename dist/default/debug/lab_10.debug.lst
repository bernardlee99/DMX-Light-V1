

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 18:54:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1
    11                           	psect	stringtext2,global,class=STRCODE,delta=2
    12                           	psect	stringtext3,global,class=STRCODE,delta=2
    13                           	psect	stringtext4,global,class=STRCODE,delta=2
    14                           	psect	stringtext5,global,class=STRCODE,delta=2
    15                           	psect	stringtext6,global,class=STRCODE,delta=2
    16                           	psect	stringtext7,global,class=STRCODE,delta=2
    17                           	psect	stringtext8,global,class=STRCODE,delta=2
    18                           	psect	stringtext9,global,class=STRCODE,delta=2
    19                           	psect	stringtext10,global,class=STRCODE,delta=2
    20                           	psect	stringtext11,global,class=STRCODE,delta=2
    21                           	psect	stringtext12,global,class=STRCODE,delta=2
    22                           	psect	stringtext13,global,class=STRCODE,delta=2
    23                           	psect	stringtext14,global,class=STRCODE,delta=2
    24                           	psect	stringtext15,global,class=STRCODE,delta=2
    25                           	psect	stringtext16,global,class=STRCODE,delta=2
    26                           	psect	stringtext17,global,class=STRCODE,delta=2
    27                           	psect	stringtext18,global,class=STRCODE,delta=2
    28                           	psect	stringtext19,global,class=STRCODE,delta=2
    29                           	psect	stringtext20,global,class=STRCODE,delta=2
    30                           	psect	stringtext21,global,class=STRCODE,delta=2
    31                           	psect	stringtext22,global,class=STRCODE,delta=2
    32                           	psect	stringtext23,global,class=STRCODE,delta=2
    33                           	psect	stringtext24,global,class=STRCODE,delta=2
    34                           	psect	stringtext25,global,class=STRCODE,delta=2
    35                           	psect	stringtext26,global,class=STRCODE,delta=2
    36                           	psect	stringtext27,global,class=STRCODE,delta=2
    37                           	psect	stringtext28,global,class=STRCODE,delta=2
    38                           	psect	stringtext29,global,class=STRCODE,delta=2
    39                           	psect	cinit,global,class=CODE,merge=1,delta=2
    40                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    41                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    42                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    43                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    44                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    45                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    46                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    47                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    48                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    49                           	psect	inittext,global,class=CODE,delta=2
    50                           	psect	clrtext,global,class=CODE,delta=2
    51                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    52                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    53                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    54                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    55                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    56                           	psect	text1,local,class=CODE,merge=1,delta=2
    57                           	psect	text2,local,class=CODE,merge=1,delta=2
    58                           	psect	text3,local,class=CODE,merge=1,delta=2
    59                           	psect	text4,local,class=CODE,merge=1,delta=2
    60                           	psect	text5,local,class=CODE,merge=1,delta=2
    61                           	psect	text6,local,class=CODE,merge=1,delta=2
    62                           	psect	text7,local,class=CODE,merge=1,delta=2
    63                           	psect	text8,local,class=CODE,merge=1,delta=2
    64                           	psect	text9,local,class=CODE,merge=1,delta=2
    65                           	psect	text10,local,class=CODE,merge=1,delta=2
    66                           	psect	text11,local,class=CODE,merge=1,delta=2
    67                           	psect	text12,local,class=CODE,merge=1,delta=2
    68                           	psect	text13,local,class=CODE,merge=1,delta=2
    69                           	psect	text14,local,class=CODE,merge=1,delta=2
    70                           	psect	text15,local,class=CODE,merge=1,delta=2
    71                           	psect	text16,local,class=CODE,merge=1,delta=2
    72                           	psect	text17,local,class=CODE,merge=1,delta=2
    73                           	psect	text18,local,class=CODE,merge=1,delta=2
    74                           	psect	text19,local,class=CODE,merge=1,delta=2
    75                           	psect	text20,local,class=CODE,merge=1,delta=2
    76                           	psect	text21,local,class=CODE,merge=1,delta=2
    77                           	psect	text22,local,class=CODE,merge=1,delta=2
    78                           	psect	text23,local,class=CODE,merge=1,delta=2
    79                           	psect	text24,local,class=CODE,merge=1,delta=2
    80                           	psect	text25,local,class=CODE,merge=1,delta=2
    81                           	psect	text26,local,class=CODE,merge=1,delta=2
    82                           	psect	text27,local,class=CODE,merge=1,delta=2
    83                           	psect	text28,local,class=CODE,merge=1,delta=2
    84                           	psect	text29,local,class=CODE,merge=1,delta=2
    85                           	psect	text30,local,class=CODE,merge=1,delta=2
    86                           	psect	text31,local,class=CODE,merge=1,delta=2
    87                           	psect	text32,local,class=CODE,merge=1,delta=2
    88                           	psect	text33,local,class=CODE,merge=1,delta=2
    89                           	psect	text34,local,class=CODE,merge=1,delta=2
    90                           	psect	text35,local,class=CODE,merge=1,delta=2
    91                           	psect	text36,local,class=CODE,merge=1,delta=2
    92                           	psect	text37,local,class=CODE,merge=1,delta=2
    93                           	psect	text38,local,class=CODE,merge=1,delta=2
    94                           	psect	text39,local,class=CODE,merge=1,delta=2
    95                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    96                           	psect	text41,local,class=CODE,merge=1,delta=2
    97                           	psect	text42,local,class=CODE,merge=1,delta=2
    98                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text44,local,class=CODE,merge=1,delta=2
   100                           	psect	text45,local,class=CODE,merge=1,delta=2
   101                           	psect	text46,local,class=CODE,merge=1,delta=2
   102                           	psect	text47,local,class=CODE,merge=1,delta=2
   103                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
   104                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
   105                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   106                           	psect	text51,local,class=CODE,merge=1,delta=2
   107                           	psect	text52,local,class=CODE,merge=1,delta=2
   108                           	psect	text53,local,class=CODE,merge=1,delta=2
   109                           	psect	text54,local,class=CODE,merge=1,delta=2
   110                           	psect	text55,local,class=CODE,merge=1,delta=2
   111                           	psect	text56,local,class=CODE,merge=1,delta=2
   112                           	psect	text57,local,class=CODE,merge=1,delta=2
   113                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
   115                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
   116                           	psect	text61,local,class=CODE,merge=1,delta=2
   117                           	psect	text62,local,class=CODE,merge=1,delta=2
   118                           	psect	text63,local,class=CODE,merge=1,delta=2
   119                           	psect	text64,local,class=CODE,merge=1,delta=2
   120                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text66,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text67,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text68,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text70,local,class=CODE,merge=1,delta=2
   126                           	psect	text71,local,class=CODE,merge=1,delta=2
   127                           	psect	text72,local,class=CODE,merge=1,delta=2
   128                           	psect	text73,local,class=CODE,merge=1,delta=2
   129                           	psect	text74,local,class=CODE,merge=1,delta=2
   130                           	psect	text75,local,class=CODE,merge=1,delta=2
   131                           	psect	text76,local,class=CODE,merge=1,delta=2
   132                           	psect	text77,local,class=CODE,merge=1,delta=2
   133                           	psect	text78,local,class=CODE,merge=1,delta=2
   134                           	psect	text79,local,class=CODE,merge=1,delta=2
   135                           	psect	text80,local,class=CODE,merge=1,delta=2
   136                           	psect	text81,local,class=CODE,merge=1,delta=2
   137                           	psect	text82,local,class=CODE,merge=1,delta=2
   138                           	psect	text83,local,class=CODE,merge=1,delta=2
   139                           	psect	text84,local,class=CODE,merge=1,delta=2
   140                           	psect	text85,local,class=CODE,merge=1,delta=2
   141                           	psect	text86,local,class=CODE,merge=1,delta=2,group=1
   142                           	psect	text87,local,class=CODE,merge=1,delta=2
   143                           	psect	text88,local,class=CODE,merge=1,delta=2
   144                           	psect	text89,local,class=CODE,merge=1,delta=2
   145                           	psect	text90,local,class=CODE,merge=1,delta=2
   146                           	psect	text91,local,class=CODE,merge=1,delta=2
   147                           	psect	intentry,global,class=CODE,delta=2
   148                           	psect	text93,local,class=CODE,merge=1,delta=2
   149                           	psect	text94,local,class=CODE,merge=1,delta=2
   150                           	psect	text95,local,class=CODE,merge=1,delta=2
   151                           	psect	text96,local,class=CODE,merge=1,delta=2
   152                           	psect	text97,local,class=CODE,merge=1,delta=2
   153                           	psect	text98,local,class=CODE,merge=1,delta=2
   154                           	psect	text99,local,class=CODE,merge=1,delta=2
   155                           	psect	text100,local,class=CODE,merge=1,delta=2
   156                           	psect	text101,local,class=CODE,merge=1,delta=2
   157                           	psect	text102,local,class=CODE,merge=1,delta=2
   158                           	psect	text103,local,class=CODE,merge=1,delta=2
   159                           	psect	text104,local,class=CODE,merge=1,delta=2
   160                           	psect	text105,local,class=CODE,merge=1,delta=2
   161                           	psect	text106,local,class=CODE,merge=1,delta=2
   162                           	psect	text107,local,class=CODE,merge=1,delta=2
   163                           	psect	text108,local,class=CODE,merge=1,delta=2
   164                           	dabs	1,0xCA0,32
   165                           	dabs	1,0xC20,80
   166                           	dabs	1,0xBA0,80
   167                           	dabs	1,0xB20,80
   168                           	dabs	1,0xAA0,80
   169                           	dabs	1,0xA20,80
   170                           	dabs	1,0x9A0,80
   171                           	dabs	1,0x920,80
   172                           	dabs	1,0x8A0,80
   173                           	dabs	1,0x820,80
   174                           	dabs	1,0x7A0,80
   175                           	dabs	1,0x720,80
   176                           	dabs	1,0x6A0,80
   177                           	dabs	1,0x64E,34
   178                           	dabs	1,0x23EE,0,_dmxArray
   179                           	dabs	1,0x7E,2
   180  0000                     
   181                           ; Version 2.05
   182                           ; Generated 20/12/2018 GMT
   183                           ; 
   184                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   185                           ; All rights reserved.
   186                           ; 
   187                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   188                           ; 
   189                           ; Redistribution and use in source and binary forms, with or without modification, are
   190                           ; permitted provided that the following conditions are met:
   191                           ; 
   192                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   193                           ;        conditions and the following disclaimer.
   194                           ; 
   195                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   196                           ;        of conditions and the following disclaimer in the documentation and/or other
   197                           ;        materials provided with the distribution.
   198                           ; 
   199                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   200                           ;        software without specific prior written permission.
   201                           ; 
   202                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   203                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   204                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   205                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   206                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   207                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   208                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   209                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   210                           ; 
   211                           ; 
   212                           ; Code-generator required, PIC16F18446 Definitions
   213                           ; 
   214                           ; SFR Addresses
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  008C                     	;# 
   237  008C                     	;# 
   238  008D                     	;# 
   239  008E                     	;# 
   240  008E                     	;# 
   241  008F                     	;# 
   242  0090                     	;# 
   243  0090                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0092                     	;# 
   247  0093                     	;# 
   248  0094                     	;# 
   249  0094                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  009F                     	;# 
   264  010C                     	;# 
   265  010C                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  010F                     	;# 
   269  010F                     	;# 
   270  0110                     	;# 
   271  0111                     	;# 
   272  0112                     	;# 
   273  0113                     	;# 
   274  0114                     	;# 
   275  0115                     	;# 
   276  0116                     	;# 
   277  0117                     	;# 
   278  0118                     	;# 
   279  0119                     	;# 
   280  0119                     	;# 
   281  0119                     	;# 
   282  011A                     	;# 
   283  011A                     	;# 
   284  011A                     	;# 
   285  011B                     	;# 
   286  011B                     	;# 
   287  011B                     	;# 
   288  011B                     	;# 
   289  011B                     	;# 
   290  011C                     	;# 
   291  011C                     	;# 
   292  011C                     	;# 
   293  011D                     	;# 
   294  011D                     	;# 
   295  011D                     	;# 
   296  011E                     	;# 
   297  011E                     	;# 
   298  011E                     	;# 
   299  011F                     	;# 
   300  011F                     	;# 
   301  011F                     	;# 
   302  011F                     	;# 
   303  011F                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  018E                     	;# 
   307  018F                     	;# 
   308  0190                     	;# 
   309  0191                     	;# 
   310  0192                     	;# 
   311  0196                     	;# 
   312  0197                     	;# 
   313  0198                     	;# 
   314  0199                     	;# 
   315  019A                     	;# 
   316  019B                     	;# 
   317  019C                     	;# 
   318  020C                     	;# 
   319  020D                     	;# 
   320  020E                     	;# 
   321  020E                     	;# 
   322  020F                     	;# 
   323  020F                     	;# 
   324  0210                     	;# 
   325  0210                     	;# 
   326  0211                     	;# 
   327  0211                     	;# 
   328  0212                     	;# 
   329  0213                     	;# 
   330  0214                     	;# 
   331  0214                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  0218                     	;# 
   339  0219                     	;# 
   340  021A                     	;# 
   341  021A                     	;# 
   342  021B                     	;# 
   343  021B                     	;# 
   344  021C                     	;# 
   345  021C                     	;# 
   346  021D                     	;# 
   347  021D                     	;# 
   348  021E                     	;# 
   349  021F                     	;# 
   350  028C                     	;# 
   351  028C                     	;# 
   352  028D                     	;# 
   353  028D                     	;# 
   354  028E                     	;# 
   355  028F                     	;# 
   356  0290                     	;# 
   357  0291                     	;# 
   358  0292                     	;# 
   359  0292                     	;# 
   360  0293                     	;# 
   361  0293                     	;# 
   362  0294                     	;# 
   363  0295                     	;# 
   364  0296                     	;# 
   365  0297                     	;# 
   366  0298                     	;# 
   367  0298                     	;# 
   368  0299                     	;# 
   369  0299                     	;# 
   370  029A                     	;# 
   371  029B                     	;# 
   372  029C                     	;# 
   373  029D                     	;# 
   374  029F                     	;# 
   375  030C                     	;# 
   376  030C                     	;# 
   377  030D                     	;# 
   378  030E                     	;# 
   379  030F                     	;# 
   380  0310                     	;# 
   381  0310                     	;# 
   382  0311                     	;# 
   383  0312                     	;# 
   384  0313                     	;# 
   385  0314                     	;# 
   386  0314                     	;# 
   387  0315                     	;# 
   388  0316                     	;# 
   389  0317                     	;# 
   390  0318                     	;# 
   391  0318                     	;# 
   392  0319                     	;# 
   393  031A                     	;# 
   394  031B                     	;# 
   395  038C                     	;# 
   396  038C                     	;# 
   397  038D                     	;# 
   398  038E                     	;# 
   399  0390                     	;# 
   400  0390                     	;# 
   401  0391                     	;# 
   402  0392                     	;# 
   403  048C                     	;# 
   404  048C                     	;# 
   405  048D                     	;# 
   406  048E                     	;# 
   407  048F                     	;# 
   408  048F                     	;# 
   409  0490                     	;# 
   410  0491                     	;# 
   411  0492                     	;# 
   412  0492                     	;# 
   413  0493                     	;# 
   414  0494                     	;# 
   415  0495                     	;# 
   416  0495                     	;# 
   417  0496                     	;# 
   418  0497                     	;# 
   419  0498                     	;# 
   420  0499                     	;# 
   421  049A                     	;# 
   422  049B                     	;# 
   423  049C                     	;# 
   424  049D                     	;# 
   425  058C                     	;# 
   426  058C                     	;# 
   427  058D                     	;# 
   428  058E                     	;# 
   429  058F                     	;# 
   430  058F                     	;# 
   431  0590                     	;# 
   432  0591                     	;# 
   433  0592                     	;# 
   434  0593                     	;# 
   435  059C                     	;# 
   436  059C                     	;# 
   437  059D                     	;# 
   438  059D                     	;# 
   439  059E                     	;# 
   440  059F                     	;# 
   441  060C                     	;# 
   442  060C                     	;# 
   443  060D                     	;# 
   444  060D                     	;# 
   445  060E                     	;# 
   446  060F                     	;# 
   447  0610                     	;# 
   448  0611                     	;# 
   449  0612                     	;# 
   450  0613                     	;# 
   451  0614                     	;# 
   452  0616                     	;# 
   453  0616                     	;# 
   454  0617                     	;# 
   455  0617                     	;# 
   456  0618                     	;# 
   457  0619                     	;# 
   458  061A                     	;# 
   459  061B                     	;# 
   460  061C                     	;# 
   461  061D                     	;# 
   462  061E                     	;# 
   463  070C                     	;# 
   464  070D                     	;# 
   465  070E                     	;# 
   466  070F                     	;# 
   467  0710                     	;# 
   468  0711                     	;# 
   469  0712                     	;# 
   470  0713                     	;# 
   471  0714                     	;# 
   472  0716                     	;# 
   473  0717                     	;# 
   474  0718                     	;# 
   475  0719                     	;# 
   476  071A                     	;# 
   477  071B                     	;# 
   478  071C                     	;# 
   479  071D                     	;# 
   480  071E                     	;# 
   481  0796                     	;# 
   482  0797                     	;# 
   483  0798                     	;# 
   484  0799                     	;# 
   485  079A                     	;# 
   486  079B                     	;# 
   487  079C                     	;# 
   488  079D                     	;# 
   489  080C                     	;# 
   490  080D                     	;# 
   491  080E                     	;# 
   492  080F                     	;# 
   493  0810                     	;# 
   494  0811                     	;# 
   495  0812                     	;# 
   496  0813                     	;# 
   497  0814                     	;# 
   498  081A                     	;# 
   499  081A                     	;# 
   500  081B                     	;# 
   501  081C                     	;# 
   502  081C                     	;# 
   503  081D                     	;# 
   504  081E                     	;# 
   505  081F                     	;# 
   506  088C                     	;# 
   507  088D                     	;# 
   508  088E                     	;# 
   509  088F                     	;# 
   510  0890                     	;# 
   511  0891                     	;# 
   512  0892                     	;# 
   513  0893                     	;# 
   514  0895                     	;# 
   515  0896                     	;# 
   516  0897                     	;# 
   517  0898                     	;# 
   518  0899                     	;# 
   519  089A                     	;# 
   520  089B                     	;# 
   521  090C                     	;# 
   522  090E                     	;# 
   523  090F                     	;# 
   524  091F                     	;# 
   525  098F                     	;# 
   526  098F                     	;# 
   527  0990                     	;# 
   528  0991                     	;# 
   529  0992                     	;# 
   530  0993                     	;# 
   531  0994                     	;# 
   532  0995                     	;# 
   533  0996                     	;# 
   534  0997                     	;# 
   535  1E0F                     	;# 
   536  1E10                     	;# 
   537  1E11                     	;# 
   538  1E12                     	;# 
   539  1E13                     	;# 
   540  1E14                     	;# 
   541  1E15                     	;# 
   542  1E16                     	;# 
   543  1E17                     	;# 
   544  1E18                     	;# 
   545  1E19                     	;# 
   546  1E1A                     	;# 
   547  1E1B                     	;# 
   548  1E1C                     	;# 
   549  1E1D                     	;# 
   550  1E1E                     	;# 
   551  1E1F                     	;# 
   552  1E20                     	;# 
   553  1E21                     	;# 
   554  1E22                     	;# 
   555  1E23                     	;# 
   556  1E24                     	;# 
   557  1E25                     	;# 
   558  1E26                     	;# 
   559  1E27                     	;# 
   560  1E28                     	;# 
   561  1E29                     	;# 
   562  1E2A                     	;# 
   563  1E2B                     	;# 
   564  1E2C                     	;# 
   565  1E2D                     	;# 
   566  1E2E                     	;# 
   567  1E2F                     	;# 
   568  1E30                     	;# 
   569  1E31                     	;# 
   570  1E32                     	;# 
   571  1E33                     	;# 
   572  1E34                     	;# 
   573  1E35                     	;# 
   574  1E36                     	;# 
   575  1E37                     	;# 
   576  1E8F                     	;# 
   577  1E90                     	;# 
   578  1E91                     	;# 
   579  1E92                     	;# 
   580  1E93                     	;# 
   581  1E94                     	;# 
   582  1E95                     	;# 
   583  1E96                     	;# 
   584  1E97                     	;# 
   585  1E9C                     	;# 
   586  1E9D                     	;# 
   587  1E9E                     	;# 
   588  1EA1                     	;# 
   589  1EA2                     	;# 
   590  1EA3                     	;# 
   591  1EA4                     	;# 
   592  1EA9                     	;# 
   593  1EAA                     	;# 
   594  1EB1                     	;# 
   595  1EB2                     	;# 
   596  1EB8                     	;# 
   597  1EB9                     	;# 
   598  1EBA                     	;# 
   599  1EBB                     	;# 
   600  1EBC                     	;# 
   601  1EBD                     	;# 
   602  1EBE                     	;# 
   603  1EC3                     	;# 
   604  1EC5                     	;# 
   605  1EC6                     	;# 
   606  1EC7                     	;# 
   607  1EC8                     	;# 
   608  1EC9                     	;# 
   609  1ECA                     	;# 
   610  1ECB                     	;# 
   611  1ECB                     	;# 
   612  1ECB                     	;# 
   613  1ECC                     	;# 
   614  1ECC                     	;# 
   615  1ECC                     	;# 
   616  1F10                     	;# 
   617  1F11                     	;# 
   618  1F12                     	;# 
   619  1F14                     	;# 
   620  1F15                     	;# 
   621  1F1C                     	;# 
   622  1F1D                     	;# 
   623  1F1E                     	;# 
   624  1F1F                     	;# 
   625  1F20                     	;# 
   626  1F21                     	;# 
   627  1F22                     	;# 
   628  1F23                     	;# 
   629  1F24                     	;# 
   630  1F25                     	;# 
   631  1F26                     	;# 
   632  1F27                     	;# 
   633  1F38                     	;# 
   634  1F39                     	;# 
   635  1F3A                     	;# 
   636  1F3B                     	;# 
   637  1F3C                     	;# 
   638  1F3D                     	;# 
   639  1F3E                     	;# 
   640  1F3F                     	;# 
   641  1F43                     	;# 
   642  1F44                     	;# 
   643  1F45                     	;# 
   644  1F46                     	;# 
   645  1F47                     	;# 
   646  1F48                     	;# 
   647  1F49                     	;# 
   648  1F4A                     	;# 
   649  1F4E                     	;# 
   650  1F4F                     	;# 
   651  1F50                     	;# 
   652  1F51                     	;# 
   653  1F52                     	;# 
   654  1F53                     	;# 
   655  1F54                     	;# 
   656  1F55                     	;# 
   657  1FE4                     	;# 
   658  1FE5                     	;# 
   659  1FE6                     	;# 
   660  1FE7                     	;# 
   661  1FE8                     	;# 
   662  1FE8                     	;# 
   663  1FE9                     	;# 
   664  1FEA                     	;# 
   665  1FEB                     	;# 
   666  1FED                     	;# 
   667  1FEE                     	;# 
   668  1FEF                     	;# 
   669  0000                     	;# 
   670  0001                     	;# 
   671  0002                     	;# 
   672  0003                     	;# 
   673  0004                     	;# 
   674  0005                     	;# 
   675  0006                     	;# 
   676  0007                     	;# 
   677  0008                     	;# 
   678  0009                     	;# 
   679  000A                     	;# 
   680  000B                     	;# 
   681  000C                     	;# 
   682  000D                     	;# 
   683  000E                     	;# 
   684  0012                     	;# 
   685  0013                     	;# 
   686  0014                     	;# 
   687  0018                     	;# 
   688  0019                     	;# 
   689  001A                     	;# 
   690  008C                     	;# 
   691  008C                     	;# 
   692  008D                     	;# 
   693  008E                     	;# 
   694  008E                     	;# 
   695  008F                     	;# 
   696  0090                     	;# 
   697  0090                     	;# 
   698  0091                     	;# 
   699  0092                     	;# 
   700  0092                     	;# 
   701  0093                     	;# 
   702  0094                     	;# 
   703  0094                     	;# 
   704  0095                     	;# 
   705  0096                     	;# 
   706  0096                     	;# 
   707  0097                     	;# 
   708  0098                     	;# 
   709  0099                     	;# 
   710  009A                     	;# 
   711  009B                     	;# 
   712  009B                     	;# 
   713  009C                     	;# 
   714  009D                     	;# 
   715  009D                     	;# 
   716  009E                     	;# 
   717  009F                     	;# 
   718  010C                     	;# 
   719  010C                     	;# 
   720  010D                     	;# 
   721  010E                     	;# 
   722  010F                     	;# 
   723  010F                     	;# 
   724  0110                     	;# 
   725  0111                     	;# 
   726  0112                     	;# 
   727  0113                     	;# 
   728  0114                     	;# 
   729  0115                     	;# 
   730  0116                     	;# 
   731  0117                     	;# 
   732  0118                     	;# 
   733  0119                     	;# 
   734  0119                     	;# 
   735  0119                     	;# 
   736  011A                     	;# 
   737  011A                     	;# 
   738  011A                     	;# 
   739  011B                     	;# 
   740  011B                     	;# 
   741  011B                     	;# 
   742  011B                     	;# 
   743  011B                     	;# 
   744  011C                     	;# 
   745  011C                     	;# 
   746  011C                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  011D                     	;# 
   750  011E                     	;# 
   751  011E                     	;# 
   752  011E                     	;# 
   753  011F                     	;# 
   754  011F                     	;# 
   755  011F                     	;# 
   756  011F                     	;# 
   757  011F                     	;# 
   758  018C                     	;# 
   759  018D                     	;# 
   760  018E                     	;# 
   761  018F                     	;# 
   762  0190                     	;# 
   763  0191                     	;# 
   764  0192                     	;# 
   765  0196                     	;# 
   766  0197                     	;# 
   767  0198                     	;# 
   768  0199                     	;# 
   769  019A                     	;# 
   770  019B                     	;# 
   771  019C                     	;# 
   772  020C                     	;# 
   773  020D                     	;# 
   774  020E                     	;# 
   775  020E                     	;# 
   776  020F                     	;# 
   777  020F                     	;# 
   778  0210                     	;# 
   779  0210                     	;# 
   780  0211                     	;# 
   781  0211                     	;# 
   782  0212                     	;# 
   783  0213                     	;# 
   784  0214                     	;# 
   785  0214                     	;# 
   786  0215                     	;# 
   787  0215                     	;# 
   788  0216                     	;# 
   789  0216                     	;# 
   790  0217                     	;# 
   791  0217                     	;# 
   792  0218                     	;# 
   793  0219                     	;# 
   794  021A                     	;# 
   795  021A                     	;# 
   796  021B                     	;# 
   797  021B                     	;# 
   798  021C                     	;# 
   799  021C                     	;# 
   800  021D                     	;# 
   801  021D                     	;# 
   802  021E                     	;# 
   803  021F                     	;# 
   804  028C                     	;# 
   805  028C                     	;# 
   806  028D                     	;# 
   807  028D                     	;# 
   808  028E                     	;# 
   809  028F                     	;# 
   810  0290                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0292                     	;# 
   814  0293                     	;# 
   815  0293                     	;# 
   816  0294                     	;# 
   817  0295                     	;# 
   818  0296                     	;# 
   819  0297                     	;# 
   820  0298                     	;# 
   821  0298                     	;# 
   822  0299                     	;# 
   823  0299                     	;# 
   824  029A                     	;# 
   825  029B                     	;# 
   826  029C                     	;# 
   827  029D                     	;# 
   828  029F                     	;# 
   829  030C                     	;# 
   830  030C                     	;# 
   831  030D                     	;# 
   832  030E                     	;# 
   833  030F                     	;# 
   834  0310                     	;# 
   835  0310                     	;# 
   836  0311                     	;# 
   837  0312                     	;# 
   838  0313                     	;# 
   839  0314                     	;# 
   840  0314                     	;# 
   841  0315                     	;# 
   842  0316                     	;# 
   843  0317                     	;# 
   844  0318                     	;# 
   845  0318                     	;# 
   846  0319                     	;# 
   847  031A                     	;# 
   848  031B                     	;# 
   849  038C                     	;# 
   850  038C                     	;# 
   851  038D                     	;# 
   852  038E                     	;# 
   853  0390                     	;# 
   854  0390                     	;# 
   855  0391                     	;# 
   856  0392                     	;# 
   857  048C                     	;# 
   858  048C                     	;# 
   859  048D                     	;# 
   860  048E                     	;# 
   861  048F                     	;# 
   862  048F                     	;# 
   863  0490                     	;# 
   864  0491                     	;# 
   865  0492                     	;# 
   866  0492                     	;# 
   867  0493                     	;# 
   868  0494                     	;# 
   869  0495                     	;# 
   870  0495                     	;# 
   871  0496                     	;# 
   872  0497                     	;# 
   873  0498                     	;# 
   874  0499                     	;# 
   875  049A                     	;# 
   876  049B                     	;# 
   877  049C                     	;# 
   878  049D                     	;# 
   879  058C                     	;# 
   880  058C                     	;# 
   881  058D                     	;# 
   882  058E                     	;# 
   883  058F                     	;# 
   884  058F                     	;# 
   885  0590                     	;# 
   886  0591                     	;# 
   887  0592                     	;# 
   888  0593                     	;# 
   889  059C                     	;# 
   890  059C                     	;# 
   891  059D                     	;# 
   892  059D                     	;# 
   893  059E                     	;# 
   894  059F                     	;# 
   895  060C                     	;# 
   896  060C                     	;# 
   897  060D                     	;# 
   898  060D                     	;# 
   899  060E                     	;# 
   900  060F                     	;# 
   901  0610                     	;# 
   902  0611                     	;# 
   903  0612                     	;# 
   904  0613                     	;# 
   905  0614                     	;# 
   906  0616                     	;# 
   907  0616                     	;# 
   908  0617                     	;# 
   909  0617                     	;# 
   910  0618                     	;# 
   911  0619                     	;# 
   912  061A                     	;# 
   913  061B                     	;# 
   914  061C                     	;# 
   915  061D                     	;# 
   916  061E                     	;# 
   917  070C                     	;# 
   918  070D                     	;# 
   919  070E                     	;# 
   920  070F                     	;# 
   921  0710                     	;# 
   922  0711                     	;# 
   923  0712                     	;# 
   924  0713                     	;# 
   925  0714                     	;# 
   926  0716                     	;# 
   927  0717                     	;# 
   928  0718                     	;# 
   929  0719                     	;# 
   930  071A                     	;# 
   931  071B                     	;# 
   932  071C                     	;# 
   933  071D                     	;# 
   934  071E                     	;# 
   935  0796                     	;# 
   936  0797                     	;# 
   937  0798                     	;# 
   938  0799                     	;# 
   939  079A                     	;# 
   940  079B                     	;# 
   941  079C                     	;# 
   942  079D                     	;# 
   943  080C                     	;# 
   944  080D                     	;# 
   945  080E                     	;# 
   946  080F                     	;# 
   947  0810                     	;# 
   948  0811                     	;# 
   949  0812                     	;# 
   950  0813                     	;# 
   951  0814                     	;# 
   952  081A                     	;# 
   953  081A                     	;# 
   954  081B                     	;# 
   955  081C                     	;# 
   956  081C                     	;# 
   957  081D                     	;# 
   958  081E                     	;# 
   959  081F                     	;# 
   960  088C                     	;# 
   961  088D                     	;# 
   962  088E                     	;# 
   963  088F                     	;# 
   964  0890                     	;# 
   965  0891                     	;# 
   966  0892                     	;# 
   967  0893                     	;# 
   968  0895                     	;# 
   969  0896                     	;# 
   970  0897                     	;# 
   971  0898                     	;# 
   972  0899                     	;# 
   973  089A                     	;# 
   974  089B                     	;# 
   975  090C                     	;# 
   976  090E                     	;# 
   977  090F                     	;# 
   978  091F                     	;# 
   979  098F                     	;# 
   980  098F                     	;# 
   981  0990                     	;# 
   982  0991                     	;# 
   983  0992                     	;# 
   984  0993                     	;# 
   985  0994                     	;# 
   986  0995                     	;# 
   987  0996                     	;# 
   988  0997                     	;# 
   989  1E0F                     	;# 
   990  1E10                     	;# 
   991  1E11                     	;# 
   992  1E12                     	;# 
   993  1E13                     	;# 
   994  1E14                     	;# 
   995  1E15                     	;# 
   996  1E16                     	;# 
   997  1E17                     	;# 
   998  1E18                     	;# 
   999  1E19                     	;# 
  1000  1E1A                     	;# 
  1001  1E1B                     	;# 
  1002  1E1C                     	;# 
  1003  1E1D                     	;# 
  1004  1E1E                     	;# 
  1005  1E1F                     	;# 
  1006  1E20                     	;# 
  1007  1E21                     	;# 
  1008  1E22                     	;# 
  1009  1E23                     	;# 
  1010  1E24                     	;# 
  1011  1E25                     	;# 
  1012  1E26                     	;# 
  1013  1E27                     	;# 
  1014  1E28                     	;# 
  1015  1E29                     	;# 
  1016  1E2A                     	;# 
  1017  1E2B                     	;# 
  1018  1E2C                     	;# 
  1019  1E2D                     	;# 
  1020  1E2E                     	;# 
  1021  1E2F                     	;# 
  1022  1E30                     	;# 
  1023  1E31                     	;# 
  1024  1E32                     	;# 
  1025  1E33                     	;# 
  1026  1E34                     	;# 
  1027  1E35                     	;# 
  1028  1E36                     	;# 
  1029  1E37                     	;# 
  1030  1E8F                     	;# 
  1031  1E90                     	;# 
  1032  1E91                     	;# 
  1033  1E92                     	;# 
  1034  1E93                     	;# 
  1035  1E94                     	;# 
  1036  1E95                     	;# 
  1037  1E96                     	;# 
  1038  1E97                     	;# 
  1039  1E9C                     	;# 
  1040  1E9D                     	;# 
  1041  1E9E                     	;# 
  1042  1EA1                     	;# 
  1043  1EA2                     	;# 
  1044  1EA3                     	;# 
  1045  1EA4                     	;# 
  1046  1EA9                     	;# 
  1047  1EAA                     	;# 
  1048  1EB1                     	;# 
  1049  1EB2                     	;# 
  1050  1EB8                     	;# 
  1051  1EB9                     	;# 
  1052  1EBA                     	;# 
  1053  1EBB                     	;# 
  1054  1EBC                     	;# 
  1055  1EBD                     	;# 
  1056  1EBE                     	;# 
  1057  1EC3                     	;# 
  1058  1EC5                     	;# 
  1059  1EC6                     	;# 
  1060  1EC7                     	;# 
  1061  1EC8                     	;# 
  1062  1EC9                     	;# 
  1063  1ECA                     	;# 
  1064  1ECB                     	;# 
  1065  1ECB                     	;# 
  1066  1ECB                     	;# 
  1067  1ECC                     	;# 
  1068  1ECC                     	;# 
  1069  1ECC                     	;# 
  1070  1F10                     	;# 
  1071  1F11                     	;# 
  1072  1F12                     	;# 
  1073  1F14                     	;# 
  1074  1F15                     	;# 
  1075  1F1C                     	;# 
  1076  1F1D                     	;# 
  1077  1F1E                     	;# 
  1078  1F1F                     	;# 
  1079  1F20                     	;# 
  1080  1F21                     	;# 
  1081  1F22                     	;# 
  1082  1F23                     	;# 
  1083  1F24                     	;# 
  1084  1F25                     	;# 
  1085  1F26                     	;# 
  1086  1F27                     	;# 
  1087  1F38                     	;# 
  1088  1F39                     	;# 
  1089  1F3A                     	;# 
  1090  1F3B                     	;# 
  1091  1F3C                     	;# 
  1092  1F3D                     	;# 
  1093  1F3E                     	;# 
  1094  1F3F                     	;# 
  1095  1F43                     	;# 
  1096  1F44                     	;# 
  1097  1F45                     	;# 
  1098  1F46                     	;# 
  1099  1F47                     	;# 
  1100  1F48                     	;# 
  1101  1F49                     	;# 
  1102  1F4A                     	;# 
  1103  1F4E                     	;# 
  1104  1F4F                     	;# 
  1105  1F50                     	;# 
  1106  1F51                     	;# 
  1107  1F52                     	;# 
  1108  1F53                     	;# 
  1109  1F54                     	;# 
  1110  1F55                     	;# 
  1111  1FE4                     	;# 
  1112  1FE5                     	;# 
  1113  1FE6                     	;# 
  1114  1FE7                     	;# 
  1115  1FE8                     	;# 
  1116  1FE8                     	;# 
  1117  1FE9                     	;# 
  1118  1FEA                     	;# 
  1119  1FEB                     	;# 
  1120  1FED                     	;# 
  1121  1FEE                     	;# 
  1122  1FEF                     	;# 
  1123  0000                     	;# 
  1124  0001                     	;# 
  1125  0002                     	;# 
  1126  0003                     	;# 
  1127  0004                     	;# 
  1128  0005                     	;# 
  1129  0006                     	;# 
  1130  0007                     	;# 
  1131  0008                     	;# 
  1132  0009                     	;# 
  1133  000A                     	;# 
  1134  000B                     	;# 
  1135  000C                     	;# 
  1136  000D                     	;# 
  1137  000E                     	;# 
  1138  0012                     	;# 
  1139  0013                     	;# 
  1140  0014                     	;# 
  1141  0018                     	;# 
  1142  0019                     	;# 
  1143  001A                     	;# 
  1144  008C                     	;# 
  1145  008C                     	;# 
  1146  008D                     	;# 
  1147  008E                     	;# 
  1148  008E                     	;# 
  1149  008F                     	;# 
  1150  0090                     	;# 
  1151  0090                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0092                     	;# 
  1155  0093                     	;# 
  1156  0094                     	;# 
  1157  0094                     	;# 
  1158  0095                     	;# 
  1159  0096                     	;# 
  1160  0096                     	;# 
  1161  0097                     	;# 
  1162  0098                     	;# 
  1163  0099                     	;# 
  1164  009A                     	;# 
  1165  009B                     	;# 
  1166  009B                     	;# 
  1167  009C                     	;# 
  1168  009D                     	;# 
  1169  009D                     	;# 
  1170  009E                     	;# 
  1171  009F                     	;# 
  1172  010C                     	;# 
  1173  010C                     	;# 
  1174  010D                     	;# 
  1175  010E                     	;# 
  1176  010F                     	;# 
  1177  010F                     	;# 
  1178  0110                     	;# 
  1179  0111                     	;# 
  1180  0112                     	;# 
  1181  0113                     	;# 
  1182  0114                     	;# 
  1183  0115                     	;# 
  1184  0116                     	;# 
  1185  0117                     	;# 
  1186  0118                     	;# 
  1187  0119                     	;# 
  1188  0119                     	;# 
  1189  0119                     	;# 
  1190  011A                     	;# 
  1191  011A                     	;# 
  1192  011A                     	;# 
  1193  011B                     	;# 
  1194  011B                     	;# 
  1195  011B                     	;# 
  1196  011B                     	;# 
  1197  011B                     	;# 
  1198  011C                     	;# 
  1199  011C                     	;# 
  1200  011C                     	;# 
  1201  011D                     	;# 
  1202  011D                     	;# 
  1203  011D                     	;# 
  1204  011E                     	;# 
  1205  011E                     	;# 
  1206  011E                     	;# 
  1207  011F                     	;# 
  1208  011F                     	;# 
  1209  011F                     	;# 
  1210  011F                     	;# 
  1211  011F                     	;# 
  1212  018C                     	;# 
  1213  018D                     	;# 
  1214  018E                     	;# 
  1215  018F                     	;# 
  1216  0190                     	;# 
  1217  0191                     	;# 
  1218  0192                     	;# 
  1219  0196                     	;# 
  1220  0197                     	;# 
  1221  0198                     	;# 
  1222  0199                     	;# 
  1223  019A                     	;# 
  1224  019B                     	;# 
  1225  019C                     	;# 
  1226  020C                     	;# 
  1227  020D                     	;# 
  1228  020E                     	;# 
  1229  020E                     	;# 
  1230  020F                     	;# 
  1231  020F                     	;# 
  1232  0210                     	;# 
  1233  0210                     	;# 
  1234  0211                     	;# 
  1235  0211                     	;# 
  1236  0212                     	;# 
  1237  0213                     	;# 
  1238  0214                     	;# 
  1239  0214                     	;# 
  1240  0215                     	;# 
  1241  0215                     	;# 
  1242  0216                     	;# 
  1243  0216                     	;# 
  1244  0217                     	;# 
  1245  0217                     	;# 
  1246  0218                     	;# 
  1247  0219                     	;# 
  1248  021A                     	;# 
  1249  021A                     	;# 
  1250  021B                     	;# 
  1251  021B                     	;# 
  1252  021C                     	;# 
  1253  021C                     	;# 
  1254  021D                     	;# 
  1255  021D                     	;# 
  1256  021E                     	;# 
  1257  021F                     	;# 
  1258  028C                     	;# 
  1259  028C                     	;# 
  1260  028D                     	;# 
  1261  028D                     	;# 
  1262  028E                     	;# 
  1263  028F                     	;# 
  1264  0290                     	;# 
  1265  0291                     	;# 
  1266  0292                     	;# 
  1267  0292                     	;# 
  1268  0293                     	;# 
  1269  0293                     	;# 
  1270  0294                     	;# 
  1271  0295                     	;# 
  1272  0296                     	;# 
  1273  0297                     	;# 
  1274  0298                     	;# 
  1275  0298                     	;# 
  1276  0299                     	;# 
  1277  0299                     	;# 
  1278  029A                     	;# 
  1279  029B                     	;# 
  1280  029C                     	;# 
  1281  029D                     	;# 
  1282  029F                     	;# 
  1283  030C                     	;# 
  1284  030C                     	;# 
  1285  030D                     	;# 
  1286  030E                     	;# 
  1287  030F                     	;# 
  1288  0310                     	;# 
  1289  0310                     	;# 
  1290  0311                     	;# 
  1291  0312                     	;# 
  1292  0313                     	;# 
  1293  0314                     	;# 
  1294  0314                     	;# 
  1295  0315                     	;# 
  1296  0316                     	;# 
  1297  0317                     	;# 
  1298  0318                     	;# 
  1299  0318                     	;# 
  1300  0319                     	;# 
  1301  031A                     	;# 
  1302  031B                     	;# 
  1303  038C                     	;# 
  1304  038C                     	;# 
  1305  038D                     	;# 
  1306  038E                     	;# 
  1307  0390                     	;# 
  1308  0390                     	;# 
  1309  0391                     	;# 
  1310  0392                     	;# 
  1311  048C                     	;# 
  1312  048C                     	;# 
  1313  048D                     	;# 
  1314  048E                     	;# 
  1315  048F                     	;# 
  1316  048F                     	;# 
  1317  0490                     	;# 
  1318  0491                     	;# 
  1319  0492                     	;# 
  1320  0492                     	;# 
  1321  0493                     	;# 
  1322  0494                     	;# 
  1323  0495                     	;# 
  1324  0495                     	;# 
  1325  0496                     	;# 
  1326  0497                     	;# 
  1327  0498                     	;# 
  1328  0499                     	;# 
  1329  049A                     	;# 
  1330  049B                     	;# 
  1331  049C                     	;# 
  1332  049D                     	;# 
  1333  058C                     	;# 
  1334  058C                     	;# 
  1335  058D                     	;# 
  1336  058E                     	;# 
  1337  058F                     	;# 
  1338  058F                     	;# 
  1339  0590                     	;# 
  1340  0591                     	;# 
  1341  0592                     	;# 
  1342  0593                     	;# 
  1343  059C                     	;# 
  1344  059C                     	;# 
  1345  059D                     	;# 
  1346  059D                     	;# 
  1347  059E                     	;# 
  1348  059F                     	;# 
  1349  060C                     	;# 
  1350  060C                     	;# 
  1351  060D                     	;# 
  1352  060D                     	;# 
  1353  060E                     	;# 
  1354  060F                     	;# 
  1355  0610                     	;# 
  1356  0611                     	;# 
  1357  0612                     	;# 
  1358  0613                     	;# 
  1359  0614                     	;# 
  1360  0616                     	;# 
  1361  0616                     	;# 
  1362  0617                     	;# 
  1363  0617                     	;# 
  1364  0618                     	;# 
  1365  0619                     	;# 
  1366  061A                     	;# 
  1367  061B                     	;# 
  1368  061C                     	;# 
  1369  061D                     	;# 
  1370  061E                     	;# 
  1371  070C                     	;# 
  1372  070D                     	;# 
  1373  070E                     	;# 
  1374  070F                     	;# 
  1375  0710                     	;# 
  1376  0711                     	;# 
  1377  0712                     	;# 
  1378  0713                     	;# 
  1379  0714                     	;# 
  1380  0716                     	;# 
  1381  0717                     	;# 
  1382  0718                     	;# 
  1383  0719                     	;# 
  1384  071A                     	;# 
  1385  071B                     	;# 
  1386  071C                     	;# 
  1387  071D                     	;# 
  1388  071E                     	;# 
  1389  0796                     	;# 
  1390  0797                     	;# 
  1391  0798                     	;# 
  1392  0799                     	;# 
  1393  079A                     	;# 
  1394  079B                     	;# 
  1395  079C                     	;# 
  1396  079D                     	;# 
  1397  080C                     	;# 
  1398  080D                     	;# 
  1399  080E                     	;# 
  1400  080F                     	;# 
  1401  0810                     	;# 
  1402  0811                     	;# 
  1403  0812                     	;# 
  1404  0813                     	;# 
  1405  0814                     	;# 
  1406  081A                     	;# 
  1407  081A                     	;# 
  1408  081B                     	;# 
  1409  081C                     	;# 
  1410  081C                     	;# 
  1411  081D                     	;# 
  1412  081E                     	;# 
  1413  081F                     	;# 
  1414  088C                     	;# 
  1415  088D                     	;# 
  1416  088E                     	;# 
  1417  088F                     	;# 
  1418  0890                     	;# 
  1419  0891                     	;# 
  1420  0892                     	;# 
  1421  0893                     	;# 
  1422  0895                     	;# 
  1423  0896                     	;# 
  1424  0897                     	;# 
  1425  0898                     	;# 
  1426  0899                     	;# 
  1427  089A                     	;# 
  1428  089B                     	;# 
  1429  090C                     	;# 
  1430  090E                     	;# 
  1431  090F                     	;# 
  1432  091F                     	;# 
  1433  098F                     	;# 
  1434  098F                     	;# 
  1435  0990                     	;# 
  1436  0991                     	;# 
  1437  0992                     	;# 
  1438  0993                     	;# 
  1439  0994                     	;# 
  1440  0995                     	;# 
  1441  0996                     	;# 
  1442  0997                     	;# 
  1443  1E0F                     	;# 
  1444  1E10                     	;# 
  1445  1E11                     	;# 
  1446  1E12                     	;# 
  1447  1E13                     	;# 
  1448  1E14                     	;# 
  1449  1E15                     	;# 
  1450  1E16                     	;# 
  1451  1E17                     	;# 
  1452  1E18                     	;# 
  1453  1E19                     	;# 
  1454  1E1A                     	;# 
  1455  1E1B                     	;# 
  1456  1E1C                     	;# 
  1457  1E1D                     	;# 
  1458  1E1E                     	;# 
  1459  1E1F                     	;# 
  1460  1E20                     	;# 
  1461  1E21                     	;# 
  1462  1E22                     	;# 
  1463  1E23                     	;# 
  1464  1E24                     	;# 
  1465  1E25                     	;# 
  1466  1E26                     	;# 
  1467  1E27                     	;# 
  1468  1E28                     	;# 
  1469  1E29                     	;# 
  1470  1E2A                     	;# 
  1471  1E2B                     	;# 
  1472  1E2C                     	;# 
  1473  1E2D                     	;# 
  1474  1E2E                     	;# 
  1475  1E2F                     	;# 
  1476  1E30                     	;# 
  1477  1E31                     	;# 
  1478  1E32                     	;# 
  1479  1E33                     	;# 
  1480  1E34                     	;# 
  1481  1E35                     	;# 
  1482  1E36                     	;# 
  1483  1E37                     	;# 
  1484  1E8F                     	;# 
  1485  1E90                     	;# 
  1486  1E91                     	;# 
  1487  1E92                     	;# 
  1488  1E93                     	;# 
  1489  1E94                     	;# 
  1490  1E95                     	;# 
  1491  1E96                     	;# 
  1492  1E97                     	;# 
  1493  1E9C                     	;# 
  1494  1E9D                     	;# 
  1495  1E9E                     	;# 
  1496  1EA1                     	;# 
  1497  1EA2                     	;# 
  1498  1EA3                     	;# 
  1499  1EA4                     	;# 
  1500  1EA9                     	;# 
  1501  1EAA                     	;# 
  1502  1EB1                     	;# 
  1503  1EB2                     	;# 
  1504  1EB8                     	;# 
  1505  1EB9                     	;# 
  1506  1EBA                     	;# 
  1507  1EBB                     	;# 
  1508  1EBC                     	;# 
  1509  1EBD                     	;# 
  1510  1EBE                     	;# 
  1511  1EC3                     	;# 
  1512  1EC5                     	;# 
  1513  1EC6                     	;# 
  1514  1EC7                     	;# 
  1515  1EC8                     	;# 
  1516  1EC9                     	;# 
  1517  1ECA                     	;# 
  1518  1ECB                     	;# 
  1519  1ECB                     	;# 
  1520  1ECB                     	;# 
  1521  1ECC                     	;# 
  1522  1ECC                     	;# 
  1523  1ECC                     	;# 
  1524  1F10                     	;# 
  1525  1F11                     	;# 
  1526  1F12                     	;# 
  1527  1F14                     	;# 
  1528  1F15                     	;# 
  1529  1F1C                     	;# 
  1530  1F1D                     	;# 
  1531  1F1E                     	;# 
  1532  1F1F                     	;# 
  1533  1F20                     	;# 
  1534  1F21                     	;# 
  1535  1F22                     	;# 
  1536  1F23                     	;# 
  1537  1F24                     	;# 
  1538  1F25                     	;# 
  1539  1F26                     	;# 
  1540  1F27                     	;# 
  1541  1F38                     	;# 
  1542  1F39                     	;# 
  1543  1F3A                     	;# 
  1544  1F3B                     	;# 
  1545  1F3C                     	;# 
  1546  1F3D                     	;# 
  1547  1F3E                     	;# 
  1548  1F3F                     	;# 
  1549  1F43                     	;# 
  1550  1F44                     	;# 
  1551  1F45                     	;# 
  1552  1F46                     	;# 
  1553  1F47                     	;# 
  1554  1F48                     	;# 
  1555  1F49                     	;# 
  1556  1F4A                     	;# 
  1557  1F4E                     	;# 
  1558  1F4F                     	;# 
  1559  1F50                     	;# 
  1560  1F51                     	;# 
  1561  1F52                     	;# 
  1562  1F53                     	;# 
  1563  1F54                     	;# 
  1564  1F55                     	;# 
  1565  1FE4                     	;# 
  1566  1FE5                     	;# 
  1567  1FE6                     	;# 
  1568  1FE7                     	;# 
  1569  1FE8                     	;# 
  1570  1FE8                     	;# 
  1571  1FE9                     	;# 
  1572  1FEA                     	;# 
  1573  1FEB                     	;# 
  1574  1FED                     	;# 
  1575  1FEE                     	;# 
  1576  1FEF                     	;# 
  1577  0000                     	;# 
  1578  0001                     	;# 
  1579  0002                     	;# 
  1580  0003                     	;# 
  1581  0004                     	;# 
  1582  0005                     	;# 
  1583  0006                     	;# 
  1584  0007                     	;# 
  1585  0008                     	;# 
  1586  0009                     	;# 
  1587  000A                     	;# 
  1588  000B                     	;# 
  1589  000C                     	;# 
  1590  000D                     	;# 
  1591  000E                     	;# 
  1592  0012                     	;# 
  1593  0013                     	;# 
  1594  0014                     	;# 
  1595  0018                     	;# 
  1596  0019                     	;# 
  1597  001A                     	;# 
  1598  008C                     	;# 
  1599  008C                     	;# 
  1600  008D                     	;# 
  1601  008E                     	;# 
  1602  008E                     	;# 
  1603  008F                     	;# 
  1604  0090                     	;# 
  1605  0090                     	;# 
  1606  0091                     	;# 
  1607  0092                     	;# 
  1608  0092                     	;# 
  1609  0093                     	;# 
  1610  0094                     	;# 
  1611  0094                     	;# 
  1612  0095                     	;# 
  1613  0096                     	;# 
  1614  0096                     	;# 
  1615  0097                     	;# 
  1616  0098                     	;# 
  1617  0099                     	;# 
  1618  009A                     	;# 
  1619  009B                     	;# 
  1620  009B                     	;# 
  1621  009C                     	;# 
  1622  009D                     	;# 
  1623  009D                     	;# 
  1624  009E                     	;# 
  1625  009F                     	;# 
  1626  010C                     	;# 
  1627  010C                     	;# 
  1628  010D                     	;# 
  1629  010E                     	;# 
  1630  010F                     	;# 
  1631  010F                     	;# 
  1632  0110                     	;# 
  1633  0111                     	;# 
  1634  0112                     	;# 
  1635  0113                     	;# 
  1636  0114                     	;# 
  1637  0115                     	;# 
  1638  0116                     	;# 
  1639  0117                     	;# 
  1640  0118                     	;# 
  1641  0119                     	;# 
  1642  0119                     	;# 
  1643  0119                     	;# 
  1644  011A                     	;# 
  1645  011A                     	;# 
  1646  011A                     	;# 
  1647  011B                     	;# 
  1648  011B                     	;# 
  1649  011B                     	;# 
  1650  011B                     	;# 
  1651  011B                     	;# 
  1652  011C                     	;# 
  1653  011C                     	;# 
  1654  011C                     	;# 
  1655  011D                     	;# 
  1656  011D                     	;# 
  1657  011D                     	;# 
  1658  011E                     	;# 
  1659  011E                     	;# 
  1660  011E                     	;# 
  1661  011F                     	;# 
  1662  011F                     	;# 
  1663  011F                     	;# 
  1664  011F                     	;# 
  1665  011F                     	;# 
  1666  018C                     	;# 
  1667  018D                     	;# 
  1668  018E                     	;# 
  1669  018F                     	;# 
  1670  0190                     	;# 
  1671  0191                     	;# 
  1672  0192                     	;# 
  1673  0196                     	;# 
  1674  0197                     	;# 
  1675  0198                     	;# 
  1676  0199                     	;# 
  1677  019A                     	;# 
  1678  019B                     	;# 
  1679  019C                     	;# 
  1680  020C                     	;# 
  1681  020D                     	;# 
  1682  020E                     	;# 
  1683  020E                     	;# 
  1684  020F                     	;# 
  1685  020F                     	;# 
  1686  0210                     	;# 
  1687  0210                     	;# 
  1688  0211                     	;# 
  1689  0211                     	;# 
  1690  0212                     	;# 
  1691  0213                     	;# 
  1692  0214                     	;# 
  1693  0214                     	;# 
  1694  0215                     	;# 
  1695  0215                     	;# 
  1696  0216                     	;# 
  1697  0216                     	;# 
  1698  0217                     	;# 
  1699  0217                     	;# 
  1700  0218                     	;# 
  1701  0219                     	;# 
  1702  021A                     	;# 
  1703  021A                     	;# 
  1704  021B                     	;# 
  1705  021B                     	;# 
  1706  021C                     	;# 
  1707  021C                     	;# 
  1708  021D                     	;# 
  1709  021D                     	;# 
  1710  021E                     	;# 
  1711  021F                     	;# 
  1712  028C                     	;# 
  1713  028C                     	;# 
  1714  028D                     	;# 
  1715  028D                     	;# 
  1716  028E                     	;# 
  1717  028F                     	;# 
  1718  0290                     	;# 
  1719  0291                     	;# 
  1720  0292                     	;# 
  1721  0292                     	;# 
  1722  0293                     	;# 
  1723  0293                     	;# 
  1724  0294                     	;# 
  1725  0295                     	;# 
  1726  0296                     	;# 
  1727  0297                     	;# 
  1728  0298                     	;# 
  1729  0298                     	;# 
  1730  0299                     	;# 
  1731  0299                     	;# 
  1732  029A                     	;# 
  1733  029B                     	;# 
  1734  029C                     	;# 
  1735  029D                     	;# 
  1736  029F                     	;# 
  1737  030C                     	;# 
  1738  030C                     	;# 
  1739  030D                     	;# 
  1740  030E                     	;# 
  1741  030F                     	;# 
  1742  0310                     	;# 
  1743  0310                     	;# 
  1744  0311                     	;# 
  1745  0312                     	;# 
  1746  0313                     	;# 
  1747  0314                     	;# 
  1748  0314                     	;# 
  1749  0315                     	;# 
  1750  0316                     	;# 
  1751  0317                     	;# 
  1752  0318                     	;# 
  1753  0318                     	;# 
  1754  0319                     	;# 
  1755  031A                     	;# 
  1756  031B                     	;# 
  1757  038C                     	;# 
  1758  038C                     	;# 
  1759  038D                     	;# 
  1760  038E                     	;# 
  1761  0390                     	;# 
  1762  0390                     	;# 
  1763  0391                     	;# 
  1764  0392                     	;# 
  1765  048C                     	;# 
  1766  048C                     	;# 
  1767  048D                     	;# 
  1768  048E                     	;# 
  1769  048F                     	;# 
  1770  048F                     	;# 
  1771  0490                     	;# 
  1772  0491                     	;# 
  1773  0492                     	;# 
  1774  0492                     	;# 
  1775  0493                     	;# 
  1776  0494                     	;# 
  1777  0495                     	;# 
  1778  0495                     	;# 
  1779  0496                     	;# 
  1780  0497                     	;# 
  1781  0498                     	;# 
  1782  0499                     	;# 
  1783  049A                     	;# 
  1784  049B                     	;# 
  1785  049C                     	;# 
  1786  049D                     	;# 
  1787  058C                     	;# 
  1788  058C                     	;# 
  1789  058D                     	;# 
  1790  058E                     	;# 
  1791  058F                     	;# 
  1792  058F                     	;# 
  1793  0590                     	;# 
  1794  0591                     	;# 
  1795  0592                     	;# 
  1796  0593                     	;# 
  1797  059C                     	;# 
  1798  059C                     	;# 
  1799  059D                     	;# 
  1800  059D                     	;# 
  1801  059E                     	;# 
  1802  059F                     	;# 
  1803  060C                     	;# 
  1804  060C                     	;# 
  1805  060D                     	;# 
  1806  060D                     	;# 
  1807  060E                     	;# 
  1808  060F                     	;# 
  1809  0610                     	;# 
  1810  0611                     	;# 
  1811  0612                     	;# 
  1812  0613                     	;# 
  1813  0614                     	;# 
  1814  0616                     	;# 
  1815  0616                     	;# 
  1816  0617                     	;# 
  1817  0617                     	;# 
  1818  0618                     	;# 
  1819  0619                     	;# 
  1820  061A                     	;# 
  1821  061B                     	;# 
  1822  061C                     	;# 
  1823  061D                     	;# 
  1824  061E                     	;# 
  1825  070C                     	;# 
  1826  070D                     	;# 
  1827  070E                     	;# 
  1828  070F                     	;# 
  1829  0710                     	;# 
  1830  0711                     	;# 
  1831  0712                     	;# 
  1832  0713                     	;# 
  1833  0714                     	;# 
  1834  0716                     	;# 
  1835  0717                     	;# 
  1836  0718                     	;# 
  1837  0719                     	;# 
  1838  071A                     	;# 
  1839  071B                     	;# 
  1840  071C                     	;# 
  1841  071D                     	;# 
  1842  071E                     	;# 
  1843  0796                     	;# 
  1844  0797                     	;# 
  1845  0798                     	;# 
  1846  0799                     	;# 
  1847  079A                     	;# 
  1848  079B                     	;# 
  1849  079C                     	;# 
  1850  079D                     	;# 
  1851  080C                     	;# 
  1852  080D                     	;# 
  1853  080E                     	;# 
  1854  080F                     	;# 
  1855  0810                     	;# 
  1856  0811                     	;# 
  1857  0812                     	;# 
  1858  0813                     	;# 
  1859  0814                     	;# 
  1860  081A                     	;# 
  1861  081A                     	;# 
  1862  081B                     	;# 
  1863  081C                     	;# 
  1864  081C                     	;# 
  1865  081D                     	;# 
  1866  081E                     	;# 
  1867  081F                     	;# 
  1868  088C                     	;# 
  1869  088D                     	;# 
  1870  088E                     	;# 
  1871  088F                     	;# 
  1872  0890                     	;# 
  1873  0891                     	;# 
  1874  0892                     	;# 
  1875  0893                     	;# 
  1876  0895                     	;# 
  1877  0896                     	;# 
  1878  0897                     	;# 
  1879  0898                     	;# 
  1880  0899                     	;# 
  1881  089A                     	;# 
  1882  089B                     	;# 
  1883  090C                     	;# 
  1884  090E                     	;# 
  1885  090F                     	;# 
  1886  091F                     	;# 
  1887  098F                     	;# 
  1888  098F                     	;# 
  1889  0990                     	;# 
  1890  0991                     	;# 
  1891  0992                     	;# 
  1892  0993                     	;# 
  1893  0994                     	;# 
  1894  0995                     	;# 
  1895  0996                     	;# 
  1896  0997                     	;# 
  1897  1E0F                     	;# 
  1898  1E10                     	;# 
  1899  1E11                     	;# 
  1900  1E12                     	;# 
  1901  1E13                     	;# 
  1902  1E14                     	;# 
  1903  1E15                     	;# 
  1904  1E16                     	;# 
  1905  1E17                     	;# 
  1906  1E18                     	;# 
  1907  1E19                     	;# 
  1908  1E1A                     	;# 
  1909  1E1B                     	;# 
  1910  1E1C                     	;# 
  1911  1E1D                     	;# 
  1912  1E1E                     	;# 
  1913  1E1F                     	;# 
  1914  1E20                     	;# 
  1915  1E21                     	;# 
  1916  1E22                     	;# 
  1917  1E23                     	;# 
  1918  1E24                     	;# 
  1919  1E25                     	;# 
  1920  1E26                     	;# 
  1921  1E27                     	;# 
  1922  1E28                     	;# 
  1923  1E29                     	;# 
  1924  1E2A                     	;# 
  1925  1E2B                     	;# 
  1926  1E2C                     	;# 
  1927  1E2D                     	;# 
  1928  1E2E                     	;# 
  1929  1E2F                     	;# 
  1930  1E30                     	;# 
  1931  1E31                     	;# 
  1932  1E32                     	;# 
  1933  1E33                     	;# 
  1934  1E34                     	;# 
  1935  1E35                     	;# 
  1936  1E36                     	;# 
  1937  1E37                     	;# 
  1938  1E8F                     	;# 
  1939  1E90                     	;# 
  1940  1E91                     	;# 
  1941  1E92                     	;# 
  1942  1E93                     	;# 
  1943  1E94                     	;# 
  1944  1E95                     	;# 
  1945  1E96                     	;# 
  1946  1E97                     	;# 
  1947  1E9C                     	;# 
  1948  1E9D                     	;# 
  1949  1E9E                     	;# 
  1950  1EA1                     	;# 
  1951  1EA2                     	;# 
  1952  1EA3                     	;# 
  1953  1EA4                     	;# 
  1954  1EA9                     	;# 
  1955  1EAA                     	;# 
  1956  1EB1                     	;# 
  1957  1EB2                     	;# 
  1958  1EB8                     	;# 
  1959  1EB9                     	;# 
  1960  1EBA                     	;# 
  1961  1EBB                     	;# 
  1962  1EBC                     	;# 
  1963  1EBD                     	;# 
  1964  1EBE                     	;# 
  1965  1EC3                     	;# 
  1966  1EC5                     	;# 
  1967  1EC6                     	;# 
  1968  1EC7                     	;# 
  1969  1EC8                     	;# 
  1970  1EC9                     	;# 
  1971  1ECA                     	;# 
  1972  1ECB                     	;# 
  1973  1ECB                     	;# 
  1974  1ECB                     	;# 
  1975  1ECC                     	;# 
  1976  1ECC                     	;# 
  1977  1ECC                     	;# 
  1978  1F10                     	;# 
  1979  1F11                     	;# 
  1980  1F12                     	;# 
  1981  1F14                     	;# 
  1982  1F15                     	;# 
  1983  1F1C                     	;# 
  1984  1F1D                     	;# 
  1985  1F1E                     	;# 
  1986  1F1F                     	;# 
  1987  1F20                     	;# 
  1988  1F21                     	;# 
  1989  1F22                     	;# 
  1990  1F23                     	;# 
  1991  1F24                     	;# 
  1992  1F25                     	;# 
  1993  1F26                     	;# 
  1994  1F27                     	;# 
  1995  1F38                     	;# 
  1996  1F39                     	;# 
  1997  1F3A                     	;# 
  1998  1F3B                     	;# 
  1999  1F3C                     	;# 
  2000  1F3D                     	;# 
  2001  1F3E                     	;# 
  2002  1F3F                     	;# 
  2003  1F43                     	;# 
  2004  1F44                     	;# 
  2005  1F45                     	;# 
  2006  1F46                     	;# 
  2007  1F47                     	;# 
  2008  1F48                     	;# 
  2009  1F49                     	;# 
  2010  1F4A                     	;# 
  2011  1F4E                     	;# 
  2012  1F4F                     	;# 
  2013  1F50                     	;# 
  2014  1F51                     	;# 
  2015  1F52                     	;# 
  2016  1F53                     	;# 
  2017  1F54                     	;# 
  2018  1F55                     	;# 
  2019  1FE4                     	;# 
  2020  1FE5                     	;# 
  2021  1FE6                     	;# 
  2022  1FE7                     	;# 
  2023  1FE8                     	;# 
  2024  1FE8                     	;# 
  2025  1FE9                     	;# 
  2026  1FEA                     	;# 
  2027  1FEB                     	;# 
  2028  1FED                     	;# 
  2029  1FEE                     	;# 
  2030  1FEF                     	;# 
  2031  0000                     	;# 
  2032  0001                     	;# 
  2033  0002                     	;# 
  2034  0003                     	;# 
  2035  0004                     	;# 
  2036  0005                     	;# 
  2037  0006                     	;# 
  2038  0007                     	;# 
  2039  0008                     	;# 
  2040  0009                     	;# 
  2041  000A                     	;# 
  2042  000B                     	;# 
  2043  000C                     	;# 
  2044  000D                     	;# 
  2045  000E                     	;# 
  2046  0012                     	;# 
  2047  0013                     	;# 
  2048  0014                     	;# 
  2049  0018                     	;# 
  2050  0019                     	;# 
  2051  001A                     	;# 
  2052  008C                     	;# 
  2053  008C                     	;# 
  2054  008D                     	;# 
  2055  008E                     	;# 
  2056  008E                     	;# 
  2057  008F                     	;# 
  2058  0090                     	;# 
  2059  0090                     	;# 
  2060  0091                     	;# 
  2061  0092                     	;# 
  2062  0092                     	;# 
  2063  0093                     	;# 
  2064  0094                     	;# 
  2065  0094                     	;# 
  2066  0095                     	;# 
  2067  0096                     	;# 
  2068  0096                     	;# 
  2069  0097                     	;# 
  2070  0098                     	;# 
  2071  0099                     	;# 
  2072  009A                     	;# 
  2073  009B                     	;# 
  2074  009B                     	;# 
  2075  009C                     	;# 
  2076  009D                     	;# 
  2077  009D                     	;# 
  2078  009E                     	;# 
  2079  009F                     	;# 
  2080  010C                     	;# 
  2081  010C                     	;# 
  2082  010D                     	;# 
  2083  010E                     	;# 
  2084  010F                     	;# 
  2085  010F                     	;# 
  2086  0110                     	;# 
  2087  0111                     	;# 
  2088  0112                     	;# 
  2089  0113                     	;# 
  2090  0114                     	;# 
  2091  0115                     	;# 
  2092  0116                     	;# 
  2093  0117                     	;# 
  2094  0118                     	;# 
  2095  0119                     	;# 
  2096  0119                     	;# 
  2097  0119                     	;# 
  2098  011A                     	;# 
  2099  011A                     	;# 
  2100  011A                     	;# 
  2101  011B                     	;# 
  2102  011B                     	;# 
  2103  011B                     	;# 
  2104  011B                     	;# 
  2105  011B                     	;# 
  2106  011C                     	;# 
  2107  011C                     	;# 
  2108  011C                     	;# 
  2109  011D                     	;# 
  2110  011D                     	;# 
  2111  011D                     	;# 
  2112  011E                     	;# 
  2113  011E                     	;# 
  2114  011E                     	;# 
  2115  011F                     	;# 
  2116  011F                     	;# 
  2117  011F                     	;# 
  2118  011F                     	;# 
  2119  011F                     	;# 
  2120  018C                     	;# 
  2121  018D                     	;# 
  2122  018E                     	;# 
  2123  018F                     	;# 
  2124  0190                     	;# 
  2125  0191                     	;# 
  2126  0192                     	;# 
  2127  0196                     	;# 
  2128  0197                     	;# 
  2129  0198                     	;# 
  2130  0199                     	;# 
  2131  019A                     	;# 
  2132  019B                     	;# 
  2133  019C                     	;# 
  2134  020C                     	;# 
  2135  020D                     	;# 
  2136  020E                     	;# 
  2137  020E                     	;# 
  2138  020F                     	;# 
  2139  020F                     	;# 
  2140  0210                     	;# 
  2141  0210                     	;# 
  2142  0211                     	;# 
  2143  0211                     	;# 
  2144  0212                     	;# 
  2145  0213                     	;# 
  2146  0214                     	;# 
  2147  0214                     	;# 
  2148  0215                     	;# 
  2149  0215                     	;# 
  2150  0216                     	;# 
  2151  0216                     	;# 
  2152  0217                     	;# 
  2153  0217                     	;# 
  2154  0218                     	;# 
  2155  0219                     	;# 
  2156  021A                     	;# 
  2157  021A                     	;# 
  2158  021B                     	;# 
  2159  021B                     	;# 
  2160  021C                     	;# 
  2161  021C                     	;# 
  2162  021D                     	;# 
  2163  021D                     	;# 
  2164  021E                     	;# 
  2165  021F                     	;# 
  2166  028C                     	;# 
  2167  028C                     	;# 
  2168  028D                     	;# 
  2169  028D                     	;# 
  2170  028E                     	;# 
  2171  028F                     	;# 
  2172  0290                     	;# 
  2173  0291                     	;# 
  2174  0292                     	;# 
  2175  0292                     	;# 
  2176  0293                     	;# 
  2177  0293                     	;# 
  2178  0294                     	;# 
  2179  0295                     	;# 
  2180  0296                     	;# 
  2181  0297                     	;# 
  2182  0298                     	;# 
  2183  0298                     	;# 
  2184  0299                     	;# 
  2185  0299                     	;# 
  2186  029A                     	;# 
  2187  029B                     	;# 
  2188  029C                     	;# 
  2189  029D                     	;# 
  2190  029F                     	;# 
  2191  030C                     	;# 
  2192  030C                     	;# 
  2193  030D                     	;# 
  2194  030E                     	;# 
  2195  030F                     	;# 
  2196  0310                     	;# 
  2197  0310                     	;# 
  2198  0311                     	;# 
  2199  0312                     	;# 
  2200  0313                     	;# 
  2201  0314                     	;# 
  2202  0314                     	;# 
  2203  0315                     	;# 
  2204  0316                     	;# 
  2205  0317                     	;# 
  2206  0318                     	;# 
  2207  0318                     	;# 
  2208  0319                     	;# 
  2209  031A                     	;# 
  2210  031B                     	;# 
  2211  038C                     	;# 
  2212  038C                     	;# 
  2213  038D                     	;# 
  2214  038E                     	;# 
  2215  0390                     	;# 
  2216  0390                     	;# 
  2217  0391                     	;# 
  2218  0392                     	;# 
  2219  048C                     	;# 
  2220  048C                     	;# 
  2221  048D                     	;# 
  2222  048E                     	;# 
  2223  048F                     	;# 
  2224  048F                     	;# 
  2225  0490                     	;# 
  2226  0491                     	;# 
  2227  0492                     	;# 
  2228  0492                     	;# 
  2229  0493                     	;# 
  2230  0494                     	;# 
  2231  0495                     	;# 
  2232  0495                     	;# 
  2233  0496                     	;# 
  2234  0497                     	;# 
  2235  0498                     	;# 
  2236  0499                     	;# 
  2237  049A                     	;# 
  2238  049B                     	;# 
  2239  049C                     	;# 
  2240  049D                     	;# 
  2241  058C                     	;# 
  2242  058C                     	;# 
  2243  058D                     	;# 
  2244  058E                     	;# 
  2245  058F                     	;# 
  2246  058F                     	;# 
  2247  0590                     	;# 
  2248  0591                     	;# 
  2249  0592                     	;# 
  2250  0593                     	;# 
  2251  059C                     	;# 
  2252  059C                     	;# 
  2253  059D                     	;# 
  2254  059D                     	;# 
  2255  059E                     	;# 
  2256  059F                     	;# 
  2257  060C                     	;# 
  2258  060C                     	;# 
  2259  060D                     	;# 
  2260  060D                     	;# 
  2261  060E                     	;# 
  2262  060F                     	;# 
  2263  0610                     	;# 
  2264  0611                     	;# 
  2265  0612                     	;# 
  2266  0613                     	;# 
  2267  0614                     	;# 
  2268  0616                     	;# 
  2269  0616                     	;# 
  2270  0617                     	;# 
  2271  0617                     	;# 
  2272  0618                     	;# 
  2273  0619                     	;# 
  2274  061A                     	;# 
  2275  061B                     	;# 
  2276  061C                     	;# 
  2277  061D                     	;# 
  2278  061E                     	;# 
  2279  070C                     	;# 
  2280  070D                     	;# 
  2281  070E                     	;# 
  2282  070F                     	;# 
  2283  0710                     	;# 
  2284  0711                     	;# 
  2285  0712                     	;# 
  2286  0713                     	;# 
  2287  0714                     	;# 
  2288  0716                     	;# 
  2289  0717                     	;# 
  2290  0718                     	;# 
  2291  0719                     	;# 
  2292  071A                     	;# 
  2293  071B                     	;# 
  2294  071C                     	;# 
  2295  071D                     	;# 
  2296  071E                     	;# 
  2297  0796                     	;# 
  2298  0797                     	;# 
  2299  0798                     	;# 
  2300  0799                     	;# 
  2301  079A                     	;# 
  2302  079B                     	;# 
  2303  079C                     	;# 
  2304  079D                     	;# 
  2305  080C                     	;# 
  2306  080D                     	;# 
  2307  080E                     	;# 
  2308  080F                     	;# 
  2309  0810                     	;# 
  2310  0811                     	;# 
  2311  0812                     	;# 
  2312  0813                     	;# 
  2313  0814                     	;# 
  2314  081A                     	;# 
  2315  081A                     	;# 
  2316  081B                     	;# 
  2317  081C                     	;# 
  2318  081C                     	;# 
  2319  081D                     	;# 
  2320  081E                     	;# 
  2321  081F                     	;# 
  2322  088C                     	;# 
  2323  088D                     	;# 
  2324  088E                     	;# 
  2325  088F                     	;# 
  2326  0890                     	;# 
  2327  0891                     	;# 
  2328  0892                     	;# 
  2329  0893                     	;# 
  2330  0895                     	;# 
  2331  0896                     	;# 
  2332  0897                     	;# 
  2333  0898                     	;# 
  2334  0899                     	;# 
  2335  089A                     	;# 
  2336  089B                     	;# 
  2337  090C                     	;# 
  2338  090E                     	;# 
  2339  090F                     	;# 
  2340  091F                     	;# 
  2341  098F                     	;# 
  2342  098F                     	;# 
  2343  0990                     	;# 
  2344  0991                     	;# 
  2345  0992                     	;# 
  2346  0993                     	;# 
  2347  0994                     	;# 
  2348  0995                     	;# 
  2349  0996                     	;# 
  2350  0997                     	;# 
  2351  1E0F                     	;# 
  2352  1E10                     	;# 
  2353  1E11                     	;# 
  2354  1E12                     	;# 
  2355  1E13                     	;# 
  2356  1E14                     	;# 
  2357  1E15                     	;# 
  2358  1E16                     	;# 
  2359  1E17                     	;# 
  2360  1E18                     	;# 
  2361  1E19                     	;# 
  2362  1E1A                     	;# 
  2363  1E1B                     	;# 
  2364  1E1C                     	;# 
  2365  1E1D                     	;# 
  2366  1E1E                     	;# 
  2367  1E1F                     	;# 
  2368  1E20                     	;# 
  2369  1E21                     	;# 
  2370  1E22                     	;# 
  2371  1E23                     	;# 
  2372  1E24                     	;# 
  2373  1E25                     	;# 
  2374  1E26                     	;# 
  2375  1E27                     	;# 
  2376  1E28                     	;# 
  2377  1E29                     	;# 
  2378  1E2A                     	;# 
  2379  1E2B                     	;# 
  2380  1E2C                     	;# 
  2381  1E2D                     	;# 
  2382  1E2E                     	;# 
  2383  1E2F                     	;# 
  2384  1E30                     	;# 
  2385  1E31                     	;# 
  2386  1E32                     	;# 
  2387  1E33                     	;# 
  2388  1E34                     	;# 
  2389  1E35                     	;# 
  2390  1E36                     	;# 
  2391  1E37                     	;# 
  2392  1E8F                     	;# 
  2393  1E90                     	;# 
  2394  1E91                     	;# 
  2395  1E92                     	;# 
  2396  1E93                     	;# 
  2397  1E94                     	;# 
  2398  1E95                     	;# 
  2399  1E96                     	;# 
  2400  1E97                     	;# 
  2401  1E9C                     	;# 
  2402  1E9D                     	;# 
  2403  1E9E                     	;# 
  2404  1EA1                     	;# 
  2405  1EA2                     	;# 
  2406  1EA3                     	;# 
  2407  1EA4                     	;# 
  2408  1EA9                     	;# 
  2409  1EAA                     	;# 
  2410  1EB1                     	;# 
  2411  1EB2                     	;# 
  2412  1EB8                     	;# 
  2413  1EB9                     	;# 
  2414  1EBA                     	;# 
  2415  1EBB                     	;# 
  2416  1EBC                     	;# 
  2417  1EBD                     	;# 
  2418  1EBE                     	;# 
  2419  1EC3                     	;# 
  2420  1EC5                     	;# 
  2421  1EC6                     	;# 
  2422  1EC7                     	;# 
  2423  1EC8                     	;# 
  2424  1EC9                     	;# 
  2425  1ECA                     	;# 
  2426  1ECB                     	;# 
  2427  1ECB                     	;# 
  2428  1ECB                     	;# 
  2429  1ECC                     	;# 
  2430  1ECC                     	;# 
  2431  1ECC                     	;# 
  2432  1F10                     	;# 
  2433  1F11                     	;# 
  2434  1F12                     	;# 
  2435  1F14                     	;# 
  2436  1F15                     	;# 
  2437  1F1C                     	;# 
  2438  1F1D                     	;# 
  2439  1F1E                     	;# 
  2440  1F1F                     	;# 
  2441  1F20                     	;# 
  2442  1F21                     	;# 
  2443  1F22                     	;# 
  2444  1F23                     	;# 
  2445  1F24                     	;# 
  2446  1F25                     	;# 
  2447  1F26                     	;# 
  2448  1F27                     	;# 
  2449  1F38                     	;# 
  2450  1F39                     	;# 
  2451  1F3A                     	;# 
  2452  1F3B                     	;# 
  2453  1F3C                     	;# 
  2454  1F3D                     	;# 
  2455  1F3E                     	;# 
  2456  1F3F                     	;# 
  2457  1F43                     	;# 
  2458  1F44                     	;# 
  2459  1F45                     	;# 
  2460  1F46                     	;# 
  2461  1F47                     	;# 
  2462  1F48                     	;# 
  2463  1F49                     	;# 
  2464  1F4A                     	;# 
  2465  1F4E                     	;# 
  2466  1F4F                     	;# 
  2467  1F50                     	;# 
  2468  1F51                     	;# 
  2469  1F52                     	;# 
  2470  1F53                     	;# 
  2471  1F54                     	;# 
  2472  1F55                     	;# 
  2473  1FE4                     	;# 
  2474  1FE5                     	;# 
  2475  1FE6                     	;# 
  2476  1FE7                     	;# 
  2477  1FE8                     	;# 
  2478  1FE8                     	;# 
  2479  1FE9                     	;# 
  2480  1FEA                     	;# 
  2481  1FEB                     	;# 
  2482  1FED                     	;# 
  2483  1FEE                     	;# 
  2484  1FEF                     	;# 
  2485  0000                     	;# 
  2486  0001                     	;# 
  2487  0002                     	;# 
  2488  0003                     	;# 
  2489  0004                     	;# 
  2490  0005                     	;# 
  2491  0006                     	;# 
  2492  0007                     	;# 
  2493  0008                     	;# 
  2494  0009                     	;# 
  2495  000A                     	;# 
  2496  000B                     	;# 
  2497  000C                     	;# 
  2498  000D                     	;# 
  2499  000E                     	;# 
  2500  0012                     	;# 
  2501  0013                     	;# 
  2502  0014                     	;# 
  2503  0018                     	;# 
  2504  0019                     	;# 
  2505  001A                     	;# 
  2506  008C                     	;# 
  2507  008C                     	;# 
  2508  008D                     	;# 
  2509  008E                     	;# 
  2510  008E                     	;# 
  2511  008F                     	;# 
  2512  0090                     	;# 
  2513  0090                     	;# 
  2514  0091                     	;# 
  2515  0092                     	;# 
  2516  0092                     	;# 
  2517  0093                     	;# 
  2518  0094                     	;# 
  2519  0094                     	;# 
  2520  0095                     	;# 
  2521  0096                     	;# 
  2522  0096                     	;# 
  2523  0097                     	;# 
  2524  0098                     	;# 
  2525  0099                     	;# 
  2526  009A                     	;# 
  2527  009B                     	;# 
  2528  009B                     	;# 
  2529  009C                     	;# 
  2530  009D                     	;# 
  2531  009D                     	;# 
  2532  009E                     	;# 
  2533  009F                     	;# 
  2534  010C                     	;# 
  2535  010C                     	;# 
  2536  010D                     	;# 
  2537  010E                     	;# 
  2538  010F                     	;# 
  2539  010F                     	;# 
  2540  0110                     	;# 
  2541  0111                     	;# 
  2542  0112                     	;# 
  2543  0113                     	;# 
  2544  0114                     	;# 
  2545  0115                     	;# 
  2546  0116                     	;# 
  2547  0117                     	;# 
  2548  0118                     	;# 
  2549  0119                     	;# 
  2550  0119                     	;# 
  2551  0119                     	;# 
  2552  011A                     	;# 
  2553  011A                     	;# 
  2554  011A                     	;# 
  2555  011B                     	;# 
  2556  011B                     	;# 
  2557  011B                     	;# 
  2558  011B                     	;# 
  2559  011B                     	;# 
  2560  011C                     	;# 
  2561  011C                     	;# 
  2562  011C                     	;# 
  2563  011D                     	;# 
  2564  011D                     	;# 
  2565  011D                     	;# 
  2566  011E                     	;# 
  2567  011E                     	;# 
  2568  011E                     	;# 
  2569  011F                     	;# 
  2570  011F                     	;# 
  2571  011F                     	;# 
  2572  011F                     	;# 
  2573  011F                     	;# 
  2574  018C                     	;# 
  2575  018D                     	;# 
  2576  018E                     	;# 
  2577  018F                     	;# 
  2578  0190                     	;# 
  2579  0191                     	;# 
  2580  0192                     	;# 
  2581  0196                     	;# 
  2582  0197                     	;# 
  2583  0198                     	;# 
  2584  0199                     	;# 
  2585  019A                     	;# 
  2586  019B                     	;# 
  2587  019C                     	;# 
  2588  020C                     	;# 
  2589  020D                     	;# 
  2590  020E                     	;# 
  2591  020E                     	;# 
  2592  020F                     	;# 
  2593  020F                     	;# 
  2594  0210                     	;# 
  2595  0210                     	;# 
  2596  0211                     	;# 
  2597  0211                     	;# 
  2598  0212                     	;# 
  2599  0213                     	;# 
  2600  0214                     	;# 
  2601  0214                     	;# 
  2602  0215                     	;# 
  2603  0215                     	;# 
  2604  0216                     	;# 
  2605  0216                     	;# 
  2606  0217                     	;# 
  2607  0217                     	;# 
  2608  0218                     	;# 
  2609  0219                     	;# 
  2610  021A                     	;# 
  2611  021A                     	;# 
  2612  021B                     	;# 
  2613  021B                     	;# 
  2614  021C                     	;# 
  2615  021C                     	;# 
  2616  021D                     	;# 
  2617  021D                     	;# 
  2618  021E                     	;# 
  2619  021F                     	;# 
  2620  028C                     	;# 
  2621  028C                     	;# 
  2622  028D                     	;# 
  2623  028D                     	;# 
  2624  028E                     	;# 
  2625  028F                     	;# 
  2626  0290                     	;# 
  2627  0291                     	;# 
  2628  0292                     	;# 
  2629  0292                     	;# 
  2630  0293                     	;# 
  2631  0293                     	;# 
  2632  0294                     	;# 
  2633  0295                     	;# 
  2634  0296                     	;# 
  2635  0297                     	;# 
  2636  0298                     	;# 
  2637  0298                     	;# 
  2638  0299                     	;# 
  2639  0299                     	;# 
  2640  029A                     	;# 
  2641  029B                     	;# 
  2642  029C                     	;# 
  2643  029D                     	;# 
  2644  029F                     	;# 
  2645  030C                     	;# 
  2646  030C                     	;# 
  2647  030D                     	;# 
  2648  030E                     	;# 
  2649  030F                     	;# 
  2650  0310                     	;# 
  2651  0310                     	;# 
  2652  0311                     	;# 
  2653  0312                     	;# 
  2654  0313                     	;# 
  2655  0314                     	;# 
  2656  0314                     	;# 
  2657  0315                     	;# 
  2658  0316                     	;# 
  2659  0317                     	;# 
  2660  0318                     	;# 
  2661  0318                     	;# 
  2662  0319                     	;# 
  2663  031A                     	;# 
  2664  031B                     	;# 
  2665  038C                     	;# 
  2666  038C                     	;# 
  2667  038D                     	;# 
  2668  038E                     	;# 
  2669  0390                     	;# 
  2670  0390                     	;# 
  2671  0391                     	;# 
  2672  0392                     	;# 
  2673  048C                     	;# 
  2674  048C                     	;# 
  2675  048D                     	;# 
  2676  048E                     	;# 
  2677  048F                     	;# 
  2678  048F                     	;# 
  2679  0490                     	;# 
  2680  0491                     	;# 
  2681  0492                     	;# 
  2682  0492                     	;# 
  2683  0493                     	;# 
  2684  0494                     	;# 
  2685  0495                     	;# 
  2686  0495                     	;# 
  2687  0496                     	;# 
  2688  0497                     	;# 
  2689  0498                     	;# 
  2690  0499                     	;# 
  2691  049A                     	;# 
  2692  049B                     	;# 
  2693  049C                     	;# 
  2694  049D                     	;# 
  2695  058C                     	;# 
  2696  058C                     	;# 
  2697  058D                     	;# 
  2698  058E                     	;# 
  2699  058F                     	;# 
  2700  058F                     	;# 
  2701  0590                     	;# 
  2702  0591                     	;# 
  2703  0592                     	;# 
  2704  0593                     	;# 
  2705  059C                     	;# 
  2706  059C                     	;# 
  2707  059D                     	;# 
  2708  059D                     	;# 
  2709  059E                     	;# 
  2710  059F                     	;# 
  2711  060C                     	;# 
  2712  060C                     	;# 
  2713  060D                     	;# 
  2714  060D                     	;# 
  2715  060E                     	;# 
  2716  060F                     	;# 
  2717  0610                     	;# 
  2718  0611                     	;# 
  2719  0612                     	;# 
  2720  0613                     	;# 
  2721  0614                     	;# 
  2722  0616                     	;# 
  2723  0616                     	;# 
  2724  0617                     	;# 
  2725  0617                     	;# 
  2726  0618                     	;# 
  2727  0619                     	;# 
  2728  061A                     	;# 
  2729  061B                     	;# 
  2730  061C                     	;# 
  2731  061D                     	;# 
  2732  061E                     	;# 
  2733  070C                     	;# 
  2734  070D                     	;# 
  2735  070E                     	;# 
  2736  070F                     	;# 
  2737  0710                     	;# 
  2738  0711                     	;# 
  2739  0712                     	;# 
  2740  0713                     	;# 
  2741  0714                     	;# 
  2742  0716                     	;# 
  2743  0717                     	;# 
  2744  0718                     	;# 
  2745  0719                     	;# 
  2746  071A                     	;# 
  2747  071B                     	;# 
  2748  071C                     	;# 
  2749  071D                     	;# 
  2750  071E                     	;# 
  2751  0796                     	;# 
  2752  0797                     	;# 
  2753  0798                     	;# 
  2754  0799                     	;# 
  2755  079A                     	;# 
  2756  079B                     	;# 
  2757  079C                     	;# 
  2758  079D                     	;# 
  2759  080C                     	;# 
  2760  080D                     	;# 
  2761  080E                     	;# 
  2762  080F                     	;# 
  2763  0810                     	;# 
  2764  0811                     	;# 
  2765  0812                     	;# 
  2766  0813                     	;# 
  2767  0814                     	;# 
  2768  081A                     	;# 
  2769  081A                     	;# 
  2770  081B                     	;# 
  2771  081C                     	;# 
  2772  081C                     	;# 
  2773  081D                     	;# 
  2774  081E                     	;# 
  2775  081F                     	;# 
  2776  088C                     	;# 
  2777  088D                     	;# 
  2778  088E                     	;# 
  2779  088F                     	;# 
  2780  0890                     	;# 
  2781  0891                     	;# 
  2782  0892                     	;# 
  2783  0893                     	;# 
  2784  0895                     	;# 
  2785  0896                     	;# 
  2786  0897                     	;# 
  2787  0898                     	;# 
  2788  0899                     	;# 
  2789  089A                     	;# 
  2790  089B                     	;# 
  2791  090C                     	;# 
  2792  090E                     	;# 
  2793  090F                     	;# 
  2794  091F                     	;# 
  2795  098F                     	;# 
  2796  098F                     	;# 
  2797  0990                     	;# 
  2798  0991                     	;# 
  2799  0992                     	;# 
  2800  0993                     	;# 
  2801  0994                     	;# 
  2802  0995                     	;# 
  2803  0996                     	;# 
  2804  0997                     	;# 
  2805  1E0F                     	;# 
  2806  1E10                     	;# 
  2807  1E11                     	;# 
  2808  1E12                     	;# 
  2809  1E13                     	;# 
  2810  1E14                     	;# 
  2811  1E15                     	;# 
  2812  1E16                     	;# 
  2813  1E17                     	;# 
  2814  1E18                     	;# 
  2815  1E19                     	;# 
  2816  1E1A                     	;# 
  2817  1E1B                     	;# 
  2818  1E1C                     	;# 
  2819  1E1D                     	;# 
  2820  1E1E                     	;# 
  2821  1E1F                     	;# 
  2822  1E20                     	;# 
  2823  1E21                     	;# 
  2824  1E22                     	;# 
  2825  1E23                     	;# 
  2826  1E24                     	;# 
  2827  1E25                     	;# 
  2828  1E26                     	;# 
  2829  1E27                     	;# 
  2830  1E28                     	;# 
  2831  1E29                     	;# 
  2832  1E2A                     	;# 
  2833  1E2B                     	;# 
  2834  1E2C                     	;# 
  2835  1E2D                     	;# 
  2836  1E2E                     	;# 
  2837  1E2F                     	;# 
  2838  1E30                     	;# 
  2839  1E31                     	;# 
  2840  1E32                     	;# 
  2841  1E33                     	;# 
  2842  1E34                     	;# 
  2843  1E35                     	;# 
  2844  1E36                     	;# 
  2845  1E37                     	;# 
  2846  1E8F                     	;# 
  2847  1E90                     	;# 
  2848  1E91                     	;# 
  2849  1E92                     	;# 
  2850  1E93                     	;# 
  2851  1E94                     	;# 
  2852  1E95                     	;# 
  2853  1E96                     	;# 
  2854  1E97                     	;# 
  2855  1E9C                     	;# 
  2856  1E9D                     	;# 
  2857  1E9E                     	;# 
  2858  1EA1                     	;# 
  2859  1EA2                     	;# 
  2860  1EA3                     	;# 
  2861  1EA4                     	;# 
  2862  1EA9                     	;# 
  2863  1EAA                     	;# 
  2864  1EB1                     	;# 
  2865  1EB2                     	;# 
  2866  1EB8                     	;# 
  2867  1EB9                     	;# 
  2868  1EBA                     	;# 
  2869  1EBB                     	;# 
  2870  1EBC                     	;# 
  2871  1EBD                     	;# 
  2872  1EBE                     	;# 
  2873  1EC3                     	;# 
  2874  1EC5                     	;# 
  2875  1EC6                     	;# 
  2876  1EC7                     	;# 
  2877  1EC8                     	;# 
  2878  1EC9                     	;# 
  2879  1ECA                     	;# 
  2880  1ECB                     	;# 
  2881  1ECB                     	;# 
  2882  1ECB                     	;# 
  2883  1ECC                     	;# 
  2884  1ECC                     	;# 
  2885  1ECC                     	;# 
  2886  1F10                     	;# 
  2887  1F11                     	;# 
  2888  1F12                     	;# 
  2889  1F14                     	;# 
  2890  1F15                     	;# 
  2891  1F1C                     	;# 
  2892  1F1D                     	;# 
  2893  1F1E                     	;# 
  2894  1F1F                     	;# 
  2895  1F20                     	;# 
  2896  1F21                     	;# 
  2897  1F22                     	;# 
  2898  1F23                     	;# 
  2899  1F24                     	;# 
  2900  1F25                     	;# 
  2901  1F26                     	;# 
  2902  1F27                     	;# 
  2903  1F38                     	;# 
  2904  1F39                     	;# 
  2905  1F3A                     	;# 
  2906  1F3B                     	;# 
  2907  1F3C                     	;# 
  2908  1F3D                     	;# 
  2909  1F3E                     	;# 
  2910  1F3F                     	;# 
  2911  1F43                     	;# 
  2912  1F44                     	;# 
  2913  1F45                     	;# 
  2914  1F46                     	;# 
  2915  1F47                     	;# 
  2916  1F48                     	;# 
  2917  1F49                     	;# 
  2918  1F4A                     	;# 
  2919  1F4E                     	;# 
  2920  1F4F                     	;# 
  2921  1F50                     	;# 
  2922  1F51                     	;# 
  2923  1F52                     	;# 
  2924  1F53                     	;# 
  2925  1F54                     	;# 
  2926  1F55                     	;# 
  2927  1FE4                     	;# 
  2928  1FE5                     	;# 
  2929  1FE6                     	;# 
  2930  1FE7                     	;# 
  2931  1FE8                     	;# 
  2932  1FE8                     	;# 
  2933  1FE9                     	;# 
  2934  1FEA                     	;# 
  2935  1FEB                     	;# 
  2936  1FED                     	;# 
  2937  1FEE                     	;# 
  2938  1FEF                     	;# 
  2939  0000                     	;# 
  2940  0001                     	;# 
  2941  0002                     	;# 
  2942  0003                     	;# 
  2943  0004                     	;# 
  2944  0005                     	;# 
  2945  0006                     	;# 
  2946  0007                     	;# 
  2947  0008                     	;# 
  2948  0009                     	;# 
  2949  000A                     	;# 
  2950  000B                     	;# 
  2951  000C                     	;# 
  2952  000D                     	;# 
  2953  000E                     	;# 
  2954  0012                     	;# 
  2955  0013                     	;# 
  2956  0014                     	;# 
  2957  0018                     	;# 
  2958  0019                     	;# 
  2959  001A                     	;# 
  2960  008C                     	;# 
  2961  008C                     	;# 
  2962  008D                     	;# 
  2963  008E                     	;# 
  2964  008E                     	;# 
  2965  008F                     	;# 
  2966  0090                     	;# 
  2967  0090                     	;# 
  2968  0091                     	;# 
  2969  0092                     	;# 
  2970  0092                     	;# 
  2971  0093                     	;# 
  2972  0094                     	;# 
  2973  0094                     	;# 
  2974  0095                     	;# 
  2975  0096                     	;# 
  2976  0096                     	;# 
  2977  0097                     	;# 
  2978  0098                     	;# 
  2979  0099                     	;# 
  2980  009A                     	;# 
  2981  009B                     	;# 
  2982  009B                     	;# 
  2983  009C                     	;# 
  2984  009D                     	;# 
  2985  009D                     	;# 
  2986  009E                     	;# 
  2987  009F                     	;# 
  2988  010C                     	;# 
  2989  010C                     	;# 
  2990  010D                     	;# 
  2991  010E                     	;# 
  2992  010F                     	;# 
  2993  010F                     	;# 
  2994  0110                     	;# 
  2995  0111                     	;# 
  2996  0112                     	;# 
  2997  0113                     	;# 
  2998  0114                     	;# 
  2999  0115                     	;# 
  3000  0116                     	;# 
  3001  0117                     	;# 
  3002  0118                     	;# 
  3003  0119                     	;# 
  3004  0119                     	;# 
  3005  0119                     	;# 
  3006  011A                     	;# 
  3007  011A                     	;# 
  3008  011A                     	;# 
  3009  011B                     	;# 
  3010  011B                     	;# 
  3011  011B                     	;# 
  3012  011B                     	;# 
  3013  011B                     	;# 
  3014  011C                     	;# 
  3015  011C                     	;# 
  3016  011C                     	;# 
  3017  011D                     	;# 
  3018  011D                     	;# 
  3019  011D                     	;# 
  3020  011E                     	;# 
  3021  011E                     	;# 
  3022  011E                     	;# 
  3023  011F                     	;# 
  3024  011F                     	;# 
  3025  011F                     	;# 
  3026  011F                     	;# 
  3027  011F                     	;# 
  3028  018C                     	;# 
  3029  018D                     	;# 
  3030  018E                     	;# 
  3031  018F                     	;# 
  3032  0190                     	;# 
  3033  0191                     	;# 
  3034  0192                     	;# 
  3035  0196                     	;# 
  3036  0197                     	;# 
  3037  0198                     	;# 
  3038  0199                     	;# 
  3039  019A                     	;# 
  3040  019B                     	;# 
  3041  019C                     	;# 
  3042  020C                     	;# 
  3043  020D                     	;# 
  3044  020E                     	;# 
  3045  020E                     	;# 
  3046  020F                     	;# 
  3047  020F                     	;# 
  3048  0210                     	;# 
  3049  0210                     	;# 
  3050  0211                     	;# 
  3051  0211                     	;# 
  3052  0212                     	;# 
  3053  0213                     	;# 
  3054  0214                     	;# 
  3055  0214                     	;# 
  3056  0215                     	;# 
  3057  0215                     	;# 
  3058  0216                     	;# 
  3059  0216                     	;# 
  3060  0217                     	;# 
  3061  0217                     	;# 
  3062  0218                     	;# 
  3063  0219                     	;# 
  3064  021A                     	;# 
  3065  021A                     	;# 
  3066  021B                     	;# 
  3067  021B                     	;# 
  3068  021C                     	;# 
  3069  021C                     	;# 
  3070  021D                     	;# 
  3071  021D                     	;# 
  3072  021E                     	;# 
  3073  021F                     	;# 
  3074  028C                     	;# 
  3075  028C                     	;# 
  3076  028D                     	;# 
  3077  028D                     	;# 
  3078  028E                     	;# 
  3079  028F                     	;# 
  3080  0290                     	;# 
  3081  0291                     	;# 
  3082  0292                     	;# 
  3083  0292                     	;# 
  3084  0293                     	;# 
  3085  0293                     	;# 
  3086  0294                     	;# 
  3087  0295                     	;# 
  3088  0296                     	;# 
  3089  0297                     	;# 
  3090  0298                     	;# 
  3091  0298                     	;# 
  3092  0299                     	;# 
  3093  0299                     	;# 
  3094  029A                     	;# 
  3095  029B                     	;# 
  3096  029C                     	;# 
  3097  029D                     	;# 
  3098  029F                     	;# 
  3099  030C                     	;# 
  3100  030C                     	;# 
  3101  030D                     	;# 
  3102  030E                     	;# 
  3103  030F                     	;# 
  3104  0310                     	;# 
  3105  0310                     	;# 
  3106  0311                     	;# 
  3107  0312                     	;# 
  3108  0313                     	;# 
  3109  0314                     	;# 
  3110  0314                     	;# 
  3111  0315                     	;# 
  3112  0316                     	;# 
  3113  0317                     	;# 
  3114  0318                     	;# 
  3115  0318                     	;# 
  3116  0319                     	;# 
  3117  031A                     	;# 
  3118  031B                     	;# 
  3119  038C                     	;# 
  3120  038C                     	;# 
  3121  038D                     	;# 
  3122  038E                     	;# 
  3123  0390                     	;# 
  3124  0390                     	;# 
  3125  0391                     	;# 
  3126  0392                     	;# 
  3127  048C                     	;# 
  3128  048C                     	;# 
  3129  048D                     	;# 
  3130  048E                     	;# 
  3131  048F                     	;# 
  3132  048F                     	;# 
  3133  0490                     	;# 
  3134  0491                     	;# 
  3135  0492                     	;# 
  3136  0492                     	;# 
  3137  0493                     	;# 
  3138  0494                     	;# 
  3139  0495                     	;# 
  3140  0495                     	;# 
  3141  0496                     	;# 
  3142  0497                     	;# 
  3143  0498                     	;# 
  3144  0499                     	;# 
  3145  049A                     	;# 
  3146  049B                     	;# 
  3147  049C                     	;# 
  3148  049D                     	;# 
  3149  058C                     	;# 
  3150  058C                     	;# 
  3151  058D                     	;# 
  3152  058E                     	;# 
  3153  058F                     	;# 
  3154  058F                     	;# 
  3155  0590                     	;# 
  3156  0591                     	;# 
  3157  0592                     	;# 
  3158  0593                     	;# 
  3159  059C                     	;# 
  3160  059C                     	;# 
  3161  059D                     	;# 
  3162  059D                     	;# 
  3163  059E                     	;# 
  3164  059F                     	;# 
  3165  060C                     	;# 
  3166  060C                     	;# 
  3167  060D                     	;# 
  3168  060D                     	;# 
  3169  060E                     	;# 
  3170  060F                     	;# 
  3171  0610                     	;# 
  3172  0611                     	;# 
  3173  0612                     	;# 
  3174  0613                     	;# 
  3175  0614                     	;# 
  3176  0616                     	;# 
  3177  0616                     	;# 
  3178  0617                     	;# 
  3179  0617                     	;# 
  3180  0618                     	;# 
  3181  0619                     	;# 
  3182  061A                     	;# 
  3183  061B                     	;# 
  3184  061C                     	;# 
  3185  061D                     	;# 
  3186  061E                     	;# 
  3187  070C                     	;# 
  3188  070D                     	;# 
  3189  070E                     	;# 
  3190  070F                     	;# 
  3191  0710                     	;# 
  3192  0711                     	;# 
  3193  0712                     	;# 
  3194  0713                     	;# 
  3195  0714                     	;# 
  3196  0716                     	;# 
  3197  0717                     	;# 
  3198  0718                     	;# 
  3199  0719                     	;# 
  3200  071A                     	;# 
  3201  071B                     	;# 
  3202  071C                     	;# 
  3203  071D                     	;# 
  3204  071E                     	;# 
  3205  0796                     	;# 
  3206  0797                     	;# 
  3207  0798                     	;# 
  3208  0799                     	;# 
  3209  079A                     	;# 
  3210  079B                     	;# 
  3211  079C                     	;# 
  3212  079D                     	;# 
  3213  080C                     	;# 
  3214  080D                     	;# 
  3215  080E                     	;# 
  3216  080F                     	;# 
  3217  0810                     	;# 
  3218  0811                     	;# 
  3219  0812                     	;# 
  3220  0813                     	;# 
  3221  0814                     	;# 
  3222  081A                     	;# 
  3223  081A                     	;# 
  3224  081B                     	;# 
  3225  081C                     	;# 
  3226  081C                     	;# 
  3227  081D                     	;# 
  3228  081E                     	;# 
  3229  081F                     	;# 
  3230  088C                     	;# 
  3231  088D                     	;# 
  3232  088E                     	;# 
  3233  088F                     	;# 
  3234  0890                     	;# 
  3235  0891                     	;# 
  3236  0892                     	;# 
  3237  0893                     	;# 
  3238  0895                     	;# 
  3239  0896                     	;# 
  3240  0897                     	;# 
  3241  0898                     	;# 
  3242  0899                     	;# 
  3243  089A                     	;# 
  3244  089B                     	;# 
  3245  090C                     	;# 
  3246  090E                     	;# 
  3247  090F                     	;# 
  3248  091F                     	;# 
  3249  098F                     	;# 
  3250  098F                     	;# 
  3251  0990                     	;# 
  3252  0991                     	;# 
  3253  0992                     	;# 
  3254  0993                     	;# 
  3255  0994                     	;# 
  3256  0995                     	;# 
  3257  0996                     	;# 
  3258  0997                     	;# 
  3259  1E0F                     	;# 
  3260  1E10                     	;# 
  3261  1E11                     	;# 
  3262  1E12                     	;# 
  3263  1E13                     	;# 
  3264  1E14                     	;# 
  3265  1E15                     	;# 
  3266  1E16                     	;# 
  3267  1E17                     	;# 
  3268  1E18                     	;# 
  3269  1E19                     	;# 
  3270  1E1A                     	;# 
  3271  1E1B                     	;# 
  3272  1E1C                     	;# 
  3273  1E1D                     	;# 
  3274  1E1E                     	;# 
  3275  1E1F                     	;# 
  3276  1E20                     	;# 
  3277  1E21                     	;# 
  3278  1E22                     	;# 
  3279  1E23                     	;# 
  3280  1E24                     	;# 
  3281  1E25                     	;# 
  3282  1E26                     	;# 
  3283  1E27                     	;# 
  3284  1E28                     	;# 
  3285  1E29                     	;# 
  3286  1E2A                     	;# 
  3287  1E2B                     	;# 
  3288  1E2C                     	;# 
  3289  1E2D                     	;# 
  3290  1E2E                     	;# 
  3291  1E2F                     	;# 
  3292  1E30                     	;# 
  3293  1E31                     	;# 
  3294  1E32                     	;# 
  3295  1E33                     	;# 
  3296  1E34                     	;# 
  3297  1E35                     	;# 
  3298  1E36                     	;# 
  3299  1E37                     	;# 
  3300  1E8F                     	;# 
  3301  1E90                     	;# 
  3302  1E91                     	;# 
  3303  1E92                     	;# 
  3304  1E93                     	;# 
  3305  1E94                     	;# 
  3306  1E95                     	;# 
  3307  1E96                     	;# 
  3308  1E97                     	;# 
  3309  1E9C                     	;# 
  3310  1E9D                     	;# 
  3311  1E9E                     	;# 
  3312  1EA1                     	;# 
  3313  1EA2                     	;# 
  3314  1EA3                     	;# 
  3315  1EA4                     	;# 
  3316  1EA9                     	;# 
  3317  1EAA                     	;# 
  3318  1EB1                     	;# 
  3319  1EB2                     	;# 
  3320  1EB8                     	;# 
  3321  1EB9                     	;# 
  3322  1EBA                     	;# 
  3323  1EBB                     	;# 
  3324  1EBC                     	;# 
  3325  1EBD                     	;# 
  3326  1EBE                     	;# 
  3327  1EC3                     	;# 
  3328  1EC5                     	;# 
  3329  1EC6                     	;# 
  3330  1EC7                     	;# 
  3331  1EC8                     	;# 
  3332  1EC9                     	;# 
  3333  1ECA                     	;# 
  3334  1ECB                     	;# 
  3335  1ECB                     	;# 
  3336  1ECB                     	;# 
  3337  1ECC                     	;# 
  3338  1ECC                     	;# 
  3339  1ECC                     	;# 
  3340  1F10                     	;# 
  3341  1F11                     	;# 
  3342  1F12                     	;# 
  3343  1F14                     	;# 
  3344  1F15                     	;# 
  3345  1F1C                     	;# 
  3346  1F1D                     	;# 
  3347  1F1E                     	;# 
  3348  1F1F                     	;# 
  3349  1F20                     	;# 
  3350  1F21                     	;# 
  3351  1F22                     	;# 
  3352  1F23                     	;# 
  3353  1F24                     	;# 
  3354  1F25                     	;# 
  3355  1F26                     	;# 
  3356  1F27                     	;# 
  3357  1F38                     	;# 
  3358  1F39                     	;# 
  3359  1F3A                     	;# 
  3360  1F3B                     	;# 
  3361  1F3C                     	;# 
  3362  1F3D                     	;# 
  3363  1F3E                     	;# 
  3364  1F3F                     	;# 
  3365  1F43                     	;# 
  3366  1F44                     	;# 
  3367  1F45                     	;# 
  3368  1F46                     	;# 
  3369  1F47                     	;# 
  3370  1F48                     	;# 
  3371  1F49                     	;# 
  3372  1F4A                     	;# 
  3373  1F4E                     	;# 
  3374  1F4F                     	;# 
  3375  1F50                     	;# 
  3376  1F51                     	;# 
  3377  1F52                     	;# 
  3378  1F53                     	;# 
  3379  1F54                     	;# 
  3380  1F55                     	;# 
  3381  1FE4                     	;# 
  3382  1FE5                     	;# 
  3383  1FE6                     	;# 
  3384  1FE7                     	;# 
  3385  1FE8                     	;# 
  3386  1FE8                     	;# 
  3387  1FE9                     	;# 
  3388  1FEA                     	;# 
  3389  1FEB                     	;# 
  3390  1FED                     	;# 
  3391  1FEE                     	;# 
  3392  1FEF                     	;# 
  3393  0000                     	;# 
  3394  0001                     	;# 
  3395  0002                     	;# 
  3396  0003                     	;# 
  3397  0004                     	;# 
  3398  0005                     	;# 
  3399  0006                     	;# 
  3400  0007                     	;# 
  3401  0008                     	;# 
  3402  0009                     	;# 
  3403  000A                     	;# 
  3404  000B                     	;# 
  3405  000C                     	;# 
  3406  000D                     	;# 
  3407  000E                     	;# 
  3408  0012                     	;# 
  3409  0013                     	;# 
  3410  0014                     	;# 
  3411  0018                     	;# 
  3412  0019                     	;# 
  3413  001A                     	;# 
  3414  008C                     	;# 
  3415  008C                     	;# 
  3416  008D                     	;# 
  3417  008E                     	;# 
  3418  008E                     	;# 
  3419  008F                     	;# 
  3420  0090                     	;# 
  3421  0090                     	;# 
  3422  0091                     	;# 
  3423  0092                     	;# 
  3424  0092                     	;# 
  3425  0093                     	;# 
  3426  0094                     	;# 
  3427  0094                     	;# 
  3428  0095                     	;# 
  3429  0096                     	;# 
  3430  0096                     	;# 
  3431  0097                     	;# 
  3432  0098                     	;# 
  3433  0099                     	;# 
  3434  009A                     	;# 
  3435  009B                     	;# 
  3436  009B                     	;# 
  3437  009C                     	;# 
  3438  009D                     	;# 
  3439  009D                     	;# 
  3440  009E                     	;# 
  3441  009F                     	;# 
  3442  010C                     	;# 
  3443  010C                     	;# 
  3444  010D                     	;# 
  3445  010E                     	;# 
  3446  010F                     	;# 
  3447  010F                     	;# 
  3448  0110                     	;# 
  3449  0111                     	;# 
  3450  0112                     	;# 
  3451  0113                     	;# 
  3452  0114                     	;# 
  3453  0115                     	;# 
  3454  0116                     	;# 
  3455  0117                     	;# 
  3456  0118                     	;# 
  3457  0119                     	;# 
  3458  0119                     	;# 
  3459  0119                     	;# 
  3460  011A                     	;# 
  3461  011A                     	;# 
  3462  011A                     	;# 
  3463  011B                     	;# 
  3464  011B                     	;# 
  3465  011B                     	;# 
  3466  011B                     	;# 
  3467  011B                     	;# 
  3468  011C                     	;# 
  3469  011C                     	;# 
  3470  011C                     	;# 
  3471  011D                     	;# 
  3472  011D                     	;# 
  3473  011D                     	;# 
  3474  011E                     	;# 
  3475  011E                     	;# 
  3476  011E                     	;# 
  3477  011F                     	;# 
  3478  011F                     	;# 
  3479  011F                     	;# 
  3480  011F                     	;# 
  3481  011F                     	;# 
  3482  018C                     	;# 
  3483  018D                     	;# 
  3484  018E                     	;# 
  3485  018F                     	;# 
  3486  0190                     	;# 
  3487  0191                     	;# 
  3488  0192                     	;# 
  3489  0196                     	;# 
  3490  0197                     	;# 
  3491  0198                     	;# 
  3492  0199                     	;# 
  3493  019A                     	;# 
  3494  019B                     	;# 
  3495  019C                     	;# 
  3496  020C                     	;# 
  3497  020D                     	;# 
  3498  020E                     	;# 
  3499  020E                     	;# 
  3500  020F                     	;# 
  3501  020F                     	;# 
  3502  0210                     	;# 
  3503  0210                     	;# 
  3504  0211                     	;# 
  3505  0211                     	;# 
  3506  0212                     	;# 
  3507  0213                     	;# 
  3508  0214                     	;# 
  3509  0214                     	;# 
  3510  0215                     	;# 
  3511  0215                     	;# 
  3512  0216                     	;# 
  3513  0216                     	;# 
  3514  0217                     	;# 
  3515  0217                     	;# 
  3516  0218                     	;# 
  3517  0219                     	;# 
  3518  021A                     	;# 
  3519  021A                     	;# 
  3520  021B                     	;# 
  3521  021B                     	;# 
  3522  021C                     	;# 
  3523  021C                     	;# 
  3524  021D                     	;# 
  3525  021D                     	;# 
  3526  021E                     	;# 
  3527  021F                     	;# 
  3528  028C                     	;# 
  3529  028C                     	;# 
  3530  028D                     	;# 
  3531  028D                     	;# 
  3532  028E                     	;# 
  3533  028F                     	;# 
  3534  0290                     	;# 
  3535  0291                     	;# 
  3536  0292                     	;# 
  3537  0292                     	;# 
  3538  0293                     	;# 
  3539  0293                     	;# 
  3540  0294                     	;# 
  3541  0295                     	;# 
  3542  0296                     	;# 
  3543  0297                     	;# 
  3544  0298                     	;# 
  3545  0298                     	;# 
  3546  0299                     	;# 
  3547  0299                     	;# 
  3548  029A                     	;# 
  3549  029B                     	;# 
  3550  029C                     	;# 
  3551  029D                     	;# 
  3552  029F                     	;# 
  3553  030C                     	;# 
  3554  030C                     	;# 
  3555  030D                     	;# 
  3556  030E                     	;# 
  3557  030F                     	;# 
  3558  0310                     	;# 
  3559  0310                     	;# 
  3560  0311                     	;# 
  3561  0312                     	;# 
  3562  0313                     	;# 
  3563  0314                     	;# 
  3564  0314                     	;# 
  3565  0315                     	;# 
  3566  0316                     	;# 
  3567  0317                     	;# 
  3568  0318                     	;# 
  3569  0318                     	;# 
  3570  0319                     	;# 
  3571  031A                     	;# 
  3572  031B                     	;# 
  3573  038C                     	;# 
  3574  038C                     	;# 
  3575  038D                     	;# 
  3576  038E                     	;# 
  3577  0390                     	;# 
  3578  0390                     	;# 
  3579  0391                     	;# 
  3580  0392                     	;# 
  3581  048C                     	;# 
  3582  048C                     	;# 
  3583  048D                     	;# 
  3584  048E                     	;# 
  3585  048F                     	;# 
  3586  048F                     	;# 
  3587  0490                     	;# 
  3588  0491                     	;# 
  3589  0492                     	;# 
  3590  0492                     	;# 
  3591  0493                     	;# 
  3592  0494                     	;# 
  3593  0495                     	;# 
  3594  0495                     	;# 
  3595  0496                     	;# 
  3596  0497                     	;# 
  3597  0498                     	;# 
  3598  0499                     	;# 
  3599  049A                     	;# 
  3600  049B                     	;# 
  3601  049C                     	;# 
  3602  049D                     	;# 
  3603  058C                     	;# 
  3604  058C                     	;# 
  3605  058D                     	;# 
  3606  058E                     	;# 
  3607  058F                     	;# 
  3608  058F                     	;# 
  3609  0590                     	;# 
  3610  0591                     	;# 
  3611  0592                     	;# 
  3612  0593                     	;# 
  3613  059C                     	;# 
  3614  059C                     	;# 
  3615  059D                     	;# 
  3616  059D                     	;# 
  3617  059E                     	;# 
  3618  059F                     	;# 
  3619  060C                     	;# 
  3620  060C                     	;# 
  3621  060D                     	;# 
  3622  060D                     	;# 
  3623  060E                     	;# 
  3624  060F                     	;# 
  3625  0610                     	;# 
  3626  0611                     	;# 
  3627  0612                     	;# 
  3628  0613                     	;# 
  3629  0614                     	;# 
  3630  0616                     	;# 
  3631  0616                     	;# 
  3632  0617                     	;# 
  3633  0617                     	;# 
  3634  0618                     	;# 
  3635  0619                     	;# 
  3636  061A                     	;# 
  3637  061B                     	;# 
  3638  061C                     	;# 
  3639  061D                     	;# 
  3640  061E                     	;# 
  3641  070C                     	;# 
  3642  070D                     	;# 
  3643  070E                     	;# 
  3644  070F                     	;# 
  3645  0710                     	;# 
  3646  0711                     	;# 
  3647  0712                     	;# 
  3648  0713                     	;# 
  3649  0714                     	;# 
  3650  0716                     	;# 
  3651  0717                     	;# 
  3652  0718                     	;# 
  3653  0719                     	;# 
  3654  071A                     	;# 
  3655  071B                     	;# 
  3656  071C                     	;# 
  3657  071D                     	;# 
  3658  071E                     	;# 
  3659  0796                     	;# 
  3660  0797                     	;# 
  3661  0798                     	;# 
  3662  0799                     	;# 
  3663  079A                     	;# 
  3664  079B                     	;# 
  3665  079C                     	;# 
  3666  079D                     	;# 
  3667  080C                     	;# 
  3668  080D                     	;# 
  3669  080E                     	;# 
  3670  080F                     	;# 
  3671  0810                     	;# 
  3672  0811                     	;# 
  3673  0812                     	;# 
  3674  0813                     	;# 
  3675  0814                     	;# 
  3676  081A                     	;# 
  3677  081A                     	;# 
  3678  081B                     	;# 
  3679  081C                     	;# 
  3680  081C                     	;# 
  3681  081D                     	;# 
  3682  081E                     	;# 
  3683  081F                     	;# 
  3684  088C                     	;# 
  3685  088D                     	;# 
  3686  088E                     	;# 
  3687  088F                     	;# 
  3688  0890                     	;# 
  3689  0891                     	;# 
  3690  0892                     	;# 
  3691  0893                     	;# 
  3692  0895                     	;# 
  3693  0896                     	;# 
  3694  0897                     	;# 
  3695  0898                     	;# 
  3696  0899                     	;# 
  3697  089A                     	;# 
  3698  089B                     	;# 
  3699  090C                     	;# 
  3700  090E                     	;# 
  3701  090F                     	;# 
  3702  091F                     	;# 
  3703  098F                     	;# 
  3704  098F                     	;# 
  3705  0990                     	;# 
  3706  0991                     	;# 
  3707  0992                     	;# 
  3708  0993                     	;# 
  3709  0994                     	;# 
  3710  0995                     	;# 
  3711  0996                     	;# 
  3712  0997                     	;# 
  3713  1E0F                     	;# 
  3714  1E10                     	;# 
  3715  1E11                     	;# 
  3716  1E12                     	;# 
  3717  1E13                     	;# 
  3718  1E14                     	;# 
  3719  1E15                     	;# 
  3720  1E16                     	;# 
  3721  1E17                     	;# 
  3722  1E18                     	;# 
  3723  1E19                     	;# 
  3724  1E1A                     	;# 
  3725  1E1B                     	;# 
  3726  1E1C                     	;# 
  3727  1E1D                     	;# 
  3728  1E1E                     	;# 
  3729  1E1F                     	;# 
  3730  1E20                     	;# 
  3731  1E21                     	;# 
  3732  1E22                     	;# 
  3733  1E23                     	;# 
  3734  1E24                     	;# 
  3735  1E25                     	;# 
  3736  1E26                     	;# 
  3737  1E27                     	;# 
  3738  1E28                     	;# 
  3739  1E29                     	;# 
  3740  1E2A                     	;# 
  3741  1E2B                     	;# 
  3742  1E2C                     	;# 
  3743  1E2D                     	;# 
  3744  1E2E                     	;# 
  3745  1E2F                     	;# 
  3746  1E30                     	;# 
  3747  1E31                     	;# 
  3748  1E32                     	;# 
  3749  1E33                     	;# 
  3750  1E34                     	;# 
  3751  1E35                     	;# 
  3752  1E36                     	;# 
  3753  1E37                     	;# 
  3754  1E8F                     	;# 
  3755  1E90                     	;# 
  3756  1E91                     	;# 
  3757  1E92                     	;# 
  3758  1E93                     	;# 
  3759  1E94                     	;# 
  3760  1E95                     	;# 
  3761  1E96                     	;# 
  3762  1E97                     	;# 
  3763  1E9C                     	;# 
  3764  1E9D                     	;# 
  3765  1E9E                     	;# 
  3766  1EA1                     	;# 
  3767  1EA2                     	;# 
  3768  1EA3                     	;# 
  3769  1EA4                     	;# 
  3770  1EA9                     	;# 
  3771  1EAA                     	;# 
  3772  1EB1                     	;# 
  3773  1EB2                     	;# 
  3774  1EB8                     	;# 
  3775  1EB9                     	;# 
  3776  1EBA                     	;# 
  3777  1EBB                     	;# 
  3778  1EBC                     	;# 
  3779  1EBD                     	;# 
  3780  1EBE                     	;# 
  3781  1EC3                     	;# 
  3782  1EC5                     	;# 
  3783  1EC6                     	;# 
  3784  1EC7                     	;# 
  3785  1EC8                     	;# 
  3786  1EC9                     	;# 
  3787  1ECA                     	;# 
  3788  1ECB                     	;# 
  3789  1ECB                     	;# 
  3790  1ECB                     	;# 
  3791  1ECC                     	;# 
  3792  1ECC                     	;# 
  3793  1ECC                     	;# 
  3794  1F10                     	;# 
  3795  1F11                     	;# 
  3796  1F12                     	;# 
  3797  1F14                     	;# 
  3798  1F15                     	;# 
  3799  1F1C                     	;# 
  3800  1F1D                     	;# 
  3801  1F1E                     	;# 
  3802  1F1F                     	;# 
  3803  1F20                     	;# 
  3804  1F21                     	;# 
  3805  1F22                     	;# 
  3806  1F23                     	;# 
  3807  1F24                     	;# 
  3808  1F25                     	;# 
  3809  1F26                     	;# 
  3810  1F27                     	;# 
  3811  1F38                     	;# 
  3812  1F39                     	;# 
  3813  1F3A                     	;# 
  3814  1F3B                     	;# 
  3815  1F3C                     	;# 
  3816  1F3D                     	;# 
  3817  1F3E                     	;# 
  3818  1F3F                     	;# 
  3819  1F43                     	;# 
  3820  1F44                     	;# 
  3821  1F45                     	;# 
  3822  1F46                     	;# 
  3823  1F47                     	;# 
  3824  1F48                     	;# 
  3825  1F49                     	;# 
  3826  1F4A                     	;# 
  3827  1F4E                     	;# 
  3828  1F4F                     	;# 
  3829  1F50                     	;# 
  3830  1F51                     	;# 
  3831  1F52                     	;# 
  3832  1F53                     	;# 
  3833  1F54                     	;# 
  3834  1F55                     	;# 
  3835  1FE4                     	;# 
  3836  1FE5                     	;# 
  3837  1FE6                     	;# 
  3838  1FE7                     	;# 
  3839  1FE8                     	;# 
  3840  1FE8                     	;# 
  3841  1FE9                     	;# 
  3842  1FEA                     	;# 
  3843  1FEB                     	;# 
  3844  1FED                     	;# 
  3845  1FEE                     	;# 
  3846  1FEF                     	;# 
  3847  0000                     	;# 
  3848  0001                     	;# 
  3849  0002                     	;# 
  3850  0003                     	;# 
  3851  0004                     	;# 
  3852  0005                     	;# 
  3853  0006                     	;# 
  3854  0007                     	;# 
  3855  0008                     	;# 
  3856  0009                     	;# 
  3857  000A                     	;# 
  3858  000B                     	;# 
  3859  000C                     	;# 
  3860  000D                     	;# 
  3861  000E                     	;# 
  3862  0012                     	;# 
  3863  0013                     	;# 
  3864  0014                     	;# 
  3865  0018                     	;# 
  3866  0019                     	;# 
  3867  001A                     	;# 
  3868  008C                     	;# 
  3869  008C                     	;# 
  3870  008D                     	;# 
  3871  008E                     	;# 
  3872  008E                     	;# 
  3873  008F                     	;# 
  3874  0090                     	;# 
  3875  0090                     	;# 
  3876  0091                     	;# 
  3877  0092                     	;# 
  3878  0092                     	;# 
  3879  0093                     	;# 
  3880  0094                     	;# 
  3881  0094                     	;# 
  3882  0095                     	;# 
  3883  0096                     	;# 
  3884  0096                     	;# 
  3885  0097                     	;# 
  3886  0098                     	;# 
  3887  0099                     	;# 
  3888  009A                     	;# 
  3889  009B                     	;# 
  3890  009B                     	;# 
  3891  009C                     	;# 
  3892  009D                     	;# 
  3893  009D                     	;# 
  3894  009E                     	;# 
  3895  009F                     	;# 
  3896  010C                     	;# 
  3897  010C                     	;# 
  3898  010D                     	;# 
  3899  010E                     	;# 
  3900  010F                     	;# 
  3901  010F                     	;# 
  3902  0110                     	;# 
  3903  0111                     	;# 
  3904  0112                     	;# 
  3905  0113                     	;# 
  3906  0114                     	;# 
  3907  0115                     	;# 
  3908  0116                     	;# 
  3909  0117                     	;# 
  3910  0118                     	;# 
  3911  0119                     	;# 
  3912  0119                     	;# 
  3913  0119                     	;# 
  3914  011A                     	;# 
  3915  011A                     	;# 
  3916  011A                     	;# 
  3917  011B                     	;# 
  3918  011B                     	;# 
  3919  011B                     	;# 
  3920  011B                     	;# 
  3921  011B                     	;# 
  3922  011C                     	;# 
  3923  011C                     	;# 
  3924  011C                     	;# 
  3925  011D                     	;# 
  3926  011D                     	;# 
  3927  011D                     	;# 
  3928  011E                     	;# 
  3929  011E                     	;# 
  3930  011E                     	;# 
  3931  011F                     	;# 
  3932  011F                     	;# 
  3933  011F                     	;# 
  3934  011F                     	;# 
  3935  011F                     	;# 
  3936  018C                     	;# 
  3937  018D                     	;# 
  3938  018E                     	;# 
  3939  018F                     	;# 
  3940  0190                     	;# 
  3941  0191                     	;# 
  3942  0192                     	;# 
  3943  0196                     	;# 
  3944  0197                     	;# 
  3945  0198                     	;# 
  3946  0199                     	;# 
  3947  019A                     	;# 
  3948  019B                     	;# 
  3949  019C                     	;# 
  3950  020C                     	;# 
  3951  020D                     	;# 
  3952  020E                     	;# 
  3953  020E                     	;# 
  3954  020F                     	;# 
  3955  020F                     	;# 
  3956  0210                     	;# 
  3957  0210                     	;# 
  3958  0211                     	;# 
  3959  0211                     	;# 
  3960  0212                     	;# 
  3961  0213                     	;# 
  3962  0214                     	;# 
  3963  0214                     	;# 
  3964  0215                     	;# 
  3965  0215                     	;# 
  3966  0216                     	;# 
  3967  0216                     	;# 
  3968  0217                     	;# 
  3969  0217                     	;# 
  3970  0218                     	;# 
  3971  0219                     	;# 
  3972  021A                     	;# 
  3973  021A                     	;# 
  3974  021B                     	;# 
  3975  021B                     	;# 
  3976  021C                     	;# 
  3977  021C                     	;# 
  3978  021D                     	;# 
  3979  021D                     	;# 
  3980  021E                     	;# 
  3981  021F                     	;# 
  3982  028C                     	;# 
  3983  028C                     	;# 
  3984  028D                     	;# 
  3985  028D                     	;# 
  3986  028E                     	;# 
  3987  028F                     	;# 
  3988  0290                     	;# 
  3989  0291                     	;# 
  3990  0292                     	;# 
  3991  0292                     	;# 
  3992  0293                     	;# 
  3993  0293                     	;# 
  3994  0294                     	;# 
  3995  0295                     	;# 
  3996  0296                     	;# 
  3997  0297                     	;# 
  3998  0298                     	;# 
  3999  0298                     	;# 
  4000  0299                     	;# 
  4001  0299                     	;# 
  4002  029A                     	;# 
  4003  029B                     	;# 
  4004  029C                     	;# 
  4005  029D                     	;# 
  4006  029F                     	;# 
  4007  030C                     	;# 
  4008  030C                     	;# 
  4009  030D                     	;# 
  4010  030E                     	;# 
  4011  030F                     	;# 
  4012  0310                     	;# 
  4013  0310                     	;# 
  4014  0311                     	;# 
  4015  0312                     	;# 
  4016  0313                     	;# 
  4017  0314                     	;# 
  4018  0314                     	;# 
  4019  0315                     	;# 
  4020  0316                     	;# 
  4021  0317                     	;# 
  4022  0318                     	;# 
  4023  0318                     	;# 
  4024  0319                     	;# 
  4025  031A                     	;# 
  4026  031B                     	;# 
  4027  038C                     	;# 
  4028  038C                     	;# 
  4029  038D                     	;# 
  4030  038E                     	;# 
  4031  0390                     	;# 
  4032  0390                     	;# 
  4033  0391                     	;# 
  4034  0392                     	;# 
  4035  048C                     	;# 
  4036  048C                     	;# 
  4037  048D                     	;# 
  4038  048E                     	;# 
  4039  048F                     	;# 
  4040  048F                     	;# 
  4041  0490                     	;# 
  4042  0491                     	;# 
  4043  0492                     	;# 
  4044  0492                     	;# 
  4045  0493                     	;# 
  4046  0494                     	;# 
  4047  0495                     	;# 
  4048  0495                     	;# 
  4049  0496                     	;# 
  4050  0497                     	;# 
  4051  0498                     	;# 
  4052  0499                     	;# 
  4053  049A                     	;# 
  4054  049B                     	;# 
  4055  049C                     	;# 
  4056  049D                     	;# 
  4057  058C                     	;# 
  4058  058C                     	;# 
  4059  058D                     	;# 
  4060  058E                     	;# 
  4061  058F                     	;# 
  4062  058F                     	;# 
  4063  0590                     	;# 
  4064  0591                     	;# 
  4065  0592                     	;# 
  4066  0593                     	;# 
  4067  059C                     	;# 
  4068  059C                     	;# 
  4069  059D                     	;# 
  4070  059D                     	;# 
  4071  059E                     	;# 
  4072  059F                     	;# 
  4073  060C                     	;# 
  4074  060C                     	;# 
  4075  060D                     	;# 
  4076  060D                     	;# 
  4077  060E                     	;# 
  4078  060F                     	;# 
  4079  0610                     	;# 
  4080  0611                     	;# 
  4081  0612                     	;# 
  4082  0613                     	;# 
  4083  0614                     	;# 
  4084  0616                     	;# 
  4085  0616                     	;# 
  4086  0617                     	;# 
  4087  0617                     	;# 
  4088  0618                     	;# 
  4089  0619                     	;# 
  4090  061A                     	;# 
  4091  061B                     	;# 
  4092  061C                     	;# 
  4093  061D                     	;# 
  4094  061E                     	;# 
  4095  070C                     	;# 
  4096  070D                     	;# 
  4097  070E                     	;# 
  4098  070F                     	;# 
  4099  0710                     	;# 
  4100  0711                     	;# 
  4101  0712                     	;# 
  4102  0713                     	;# 
  4103  0714                     	;# 
  4104  0716                     	;# 
  4105  0717                     	;# 
  4106  0718                     	;# 
  4107  0719                     	;# 
  4108  071A                     	;# 
  4109  071B                     	;# 
  4110  071C                     	;# 
  4111  071D                     	;# 
  4112  071E                     	;# 
  4113  0796                     	;# 
  4114  0797                     	;# 
  4115  0798                     	;# 
  4116  0799                     	;# 
  4117  079A                     	;# 
  4118  079B                     	;# 
  4119  079C                     	;# 
  4120  079D                     	;# 
  4121  080C                     	;# 
  4122  080D                     	;# 
  4123  080E                     	;# 
  4124  080F                     	;# 
  4125  0810                     	;# 
  4126  0811                     	;# 
  4127  0812                     	;# 
  4128  0813                     	;# 
  4129  0814                     	;# 
  4130  081A                     	;# 
  4131  081A                     	;# 
  4132  081B                     	;# 
  4133  081C                     	;# 
  4134  081C                     	;# 
  4135  081D                     	;# 
  4136  081E                     	;# 
  4137  081F                     	;# 
  4138  088C                     	;# 
  4139  088D                     	;# 
  4140  088E                     	;# 
  4141  088F                     	;# 
  4142  0890                     	;# 
  4143  0891                     	;# 
  4144  0892                     	;# 
  4145  0893                     	;# 
  4146  0895                     	;# 
  4147  0896                     	;# 
  4148  0897                     	;# 
  4149  0898                     	;# 
  4150  0899                     	;# 
  4151  089A                     	;# 
  4152  089B                     	;# 
  4153  090C                     	;# 
  4154  090E                     	;# 
  4155  090F                     	;# 
  4156  091F                     	;# 
  4157  098F                     	;# 
  4158  098F                     	;# 
  4159  0990                     	;# 
  4160  0991                     	;# 
  4161  0992                     	;# 
  4162  0993                     	;# 
  4163  0994                     	;# 
  4164  0995                     	;# 
  4165  0996                     	;# 
  4166  0997                     	;# 
  4167  1E0F                     	;# 
  4168  1E10                     	;# 
  4169  1E11                     	;# 
  4170  1E12                     	;# 
  4171  1E13                     	;# 
  4172  1E14                     	;# 
  4173  1E15                     	;# 
  4174  1E16                     	;# 
  4175  1E17                     	;# 
  4176  1E18                     	;# 
  4177  1E19                     	;# 
  4178  1E1A                     	;# 
  4179  1E1B                     	;# 
  4180  1E1C                     	;# 
  4181  1E1D                     	;# 
  4182  1E1E                     	;# 
  4183  1E1F                     	;# 
  4184  1E20                     	;# 
  4185  1E21                     	;# 
  4186  1E22                     	;# 
  4187  1E23                     	;# 
  4188  1E24                     	;# 
  4189  1E25                     	;# 
  4190  1E26                     	;# 
  4191  1E27                     	;# 
  4192  1E28                     	;# 
  4193  1E29                     	;# 
  4194  1E2A                     	;# 
  4195  1E2B                     	;# 
  4196  1E2C                     	;# 
  4197  1E2D                     	;# 
  4198  1E2E                     	;# 
  4199  1E2F                     	;# 
  4200  1E30                     	;# 
  4201  1E31                     	;# 
  4202  1E32                     	;# 
  4203  1E33                     	;# 
  4204  1E34                     	;# 
  4205  1E35                     	;# 
  4206  1E36                     	;# 
  4207  1E37                     	;# 
  4208  1E8F                     	;# 
  4209  1E90                     	;# 
  4210  1E91                     	;# 
  4211  1E92                     	;# 
  4212  1E93                     	;# 
  4213  1E94                     	;# 
  4214  1E95                     	;# 
  4215  1E96                     	;# 
  4216  1E97                     	;# 
  4217  1E9C                     	;# 
  4218  1E9D                     	;# 
  4219  1E9E                     	;# 
  4220  1EA1                     	;# 
  4221  1EA2                     	;# 
  4222  1EA3                     	;# 
  4223  1EA4                     	;# 
  4224  1EA9                     	;# 
  4225  1EAA                     	;# 
  4226  1EB1                     	;# 
  4227  1EB2                     	;# 
  4228  1EB8                     	;# 
  4229  1EB9                     	;# 
  4230  1EBA                     	;# 
  4231  1EBB                     	;# 
  4232  1EBC                     	;# 
  4233  1EBD                     	;# 
  4234  1EBE                     	;# 
  4235  1EC3                     	;# 
  4236  1EC5                     	;# 
  4237  1EC6                     	;# 
  4238  1EC7                     	;# 
  4239  1EC8                     	;# 
  4240  1EC9                     	;# 
  4241  1ECA                     	;# 
  4242  1ECB                     	;# 
  4243  1ECB                     	;# 
  4244  1ECB                     	;# 
  4245  1ECC                     	;# 
  4246  1ECC                     	;# 
  4247  1ECC                     	;# 
  4248  1F10                     	;# 
  4249  1F11                     	;# 
  4250  1F12                     	;# 
  4251  1F14                     	;# 
  4252  1F15                     	;# 
  4253  1F1C                     	;# 
  4254  1F1D                     	;# 
  4255  1F1E                     	;# 
  4256  1F1F                     	;# 
  4257  1F20                     	;# 
  4258  1F21                     	;# 
  4259  1F22                     	;# 
  4260  1F23                     	;# 
  4261  1F24                     	;# 
  4262  1F25                     	;# 
  4263  1F26                     	;# 
  4264  1F27                     	;# 
  4265  1F38                     	;# 
  4266  1F39                     	;# 
  4267  1F3A                     	;# 
  4268  1F3B                     	;# 
  4269  1F3C                     	;# 
  4270  1F3D                     	;# 
  4271  1F3E                     	;# 
  4272  1F3F                     	;# 
  4273  1F43                     	;# 
  4274  1F44                     	;# 
  4275  1F45                     	;# 
  4276  1F46                     	;# 
  4277  1F47                     	;# 
  4278  1F48                     	;# 
  4279  1F49                     	;# 
  4280  1F4A                     	;# 
  4281  1F4E                     	;# 
  4282  1F4F                     	;# 
  4283  1F50                     	;# 
  4284  1F51                     	;# 
  4285  1F52                     	;# 
  4286  1F53                     	;# 
  4287  1F54                     	;# 
  4288  1F55                     	;# 
  4289  1FE4                     	;# 
  4290  1FE5                     	;# 
  4291  1FE6                     	;# 
  4292  1FE7                     	;# 
  4293  1FE8                     	;# 
  4294  1FE8                     	;# 
  4295  1FE9                     	;# 
  4296  1FEA                     	;# 
  4297  1FEB                     	;# 
  4298  1FED                     	;# 
  4299  1FEE                     	;# 
  4300  1FEF                     	;# 
  4301  0000                     	;# 
  4302  0001                     	;# 
  4303  0002                     	;# 
  4304  0003                     	;# 
  4305  0004                     	;# 
  4306  0005                     	;# 
  4307  0006                     	;# 
  4308  0007                     	;# 
  4309  0008                     	;# 
  4310  0009                     	;# 
  4311  000A                     	;# 
  4312  000B                     	;# 
  4313  000C                     	;# 
  4314  000D                     	;# 
  4315  000E                     	;# 
  4316  0012                     	;# 
  4317  0013                     	;# 
  4318  0014                     	;# 
  4319  0018                     	;# 
  4320  0019                     	;# 
  4321  001A                     	;# 
  4322  008C                     	;# 
  4323  008C                     	;# 
  4324  008D                     	;# 
  4325  008E                     	;# 
  4326  008E                     	;# 
  4327  008F                     	;# 
  4328  0090                     	;# 
  4329  0090                     	;# 
  4330  0091                     	;# 
  4331  0092                     	;# 
  4332  0092                     	;# 
  4333  0093                     	;# 
  4334  0094                     	;# 
  4335  0094                     	;# 
  4336  0095                     	;# 
  4337  0096                     	;# 
  4338  0096                     	;# 
  4339  0097                     	;# 
  4340  0098                     	;# 
  4341  0099                     	;# 
  4342  009A                     	;# 
  4343  009B                     	;# 
  4344  009B                     	;# 
  4345  009C                     	;# 
  4346  009D                     	;# 
  4347  009D                     	;# 
  4348  009E                     	;# 
  4349  009F                     	;# 
  4350  010C                     	;# 
  4351  010C                     	;# 
  4352  010D                     	;# 
  4353  010E                     	;# 
  4354  010F                     	;# 
  4355  010F                     	;# 
  4356  0110                     	;# 
  4357  0111                     	;# 
  4358  0112                     	;# 
  4359  0113                     	;# 
  4360  0114                     	;# 
  4361  0115                     	;# 
  4362  0116                     	;# 
  4363  0117                     	;# 
  4364  0118                     	;# 
  4365  0119                     	;# 
  4366  0119                     	;# 
  4367  0119                     	;# 
  4368  011A                     	;# 
  4369  011A                     	;# 
  4370  011A                     	;# 
  4371  011B                     	;# 
  4372  011B                     	;# 
  4373  011B                     	;# 
  4374  011B                     	;# 
  4375  011B                     	;# 
  4376  011C                     	;# 
  4377  011C                     	;# 
  4378  011C                     	;# 
  4379  011D                     	;# 
  4380  011D                     	;# 
  4381  011D                     	;# 
  4382  011E                     	;# 
  4383  011E                     	;# 
  4384  011E                     	;# 
  4385  011F                     	;# 
  4386  011F                     	;# 
  4387  011F                     	;# 
  4388  011F                     	;# 
  4389  011F                     	;# 
  4390  018C                     	;# 
  4391  018D                     	;# 
  4392  018E                     	;# 
  4393  018F                     	;# 
  4394  0190                     	;# 
  4395  0191                     	;# 
  4396  0192                     	;# 
  4397  0196                     	;# 
  4398  0197                     	;# 
  4399  0198                     	;# 
  4400  0199                     	;# 
  4401  019A                     	;# 
  4402  019B                     	;# 
  4403  019C                     	;# 
  4404  020C                     	;# 
  4405  020D                     	;# 
  4406  020E                     	;# 
  4407  020E                     	;# 
  4408  020F                     	;# 
  4409  020F                     	;# 
  4410  0210                     	;# 
  4411  0210                     	;# 
  4412  0211                     	;# 
  4413  0211                     	;# 
  4414  0212                     	;# 
  4415  0213                     	;# 
  4416  0214                     	;# 
  4417  0214                     	;# 
  4418  0215                     	;# 
  4419  0215                     	;# 
  4420  0216                     	;# 
  4421  0216                     	;# 
  4422  0217                     	;# 
  4423  0217                     	;# 
  4424  0218                     	;# 
  4425  0219                     	;# 
  4426  021A                     	;# 
  4427  021A                     	;# 
  4428  021B                     	;# 
  4429  021B                     	;# 
  4430  021C                     	;# 
  4431  021C                     	;# 
  4432  021D                     	;# 
  4433  021D                     	;# 
  4434  021E                     	;# 
  4435  021F                     	;# 
  4436  028C                     	;# 
  4437  028C                     	;# 
  4438  028D                     	;# 
  4439  028D                     	;# 
  4440  028E                     	;# 
  4441  028F                     	;# 
  4442  0290                     	;# 
  4443  0291                     	;# 
  4444  0292                     	;# 
  4445  0292                     	;# 
  4446  0293                     	;# 
  4447  0293                     	;# 
  4448  0294                     	;# 
  4449  0295                     	;# 
  4450  0296                     	;# 
  4451  0297                     	;# 
  4452  0298                     	;# 
  4453  0298                     	;# 
  4454  0299                     	;# 
  4455  0299                     	;# 
  4456  029A                     	;# 
  4457  029B                     	;# 
  4458  029C                     	;# 
  4459  029D                     	;# 
  4460  029F                     	;# 
  4461  030C                     	;# 
  4462  030C                     	;# 
  4463  030D                     	;# 
  4464  030E                     	;# 
  4465  030F                     	;# 
  4466  0310                     	;# 
  4467  0310                     	;# 
  4468  0311                     	;# 
  4469  0312                     	;# 
  4470  0313                     	;# 
  4471  0314                     	;# 
  4472  0314                     	;# 
  4473  0315                     	;# 
  4474  0316                     	;# 
  4475  0317                     	;# 
  4476  0318                     	;# 
  4477  0318                     	;# 
  4478  0319                     	;# 
  4479  031A                     	;# 
  4480  031B                     	;# 
  4481  038C                     	;# 
  4482  038C                     	;# 
  4483  038D                     	;# 
  4484  038E                     	;# 
  4485  0390                     	;# 
  4486  0390                     	;# 
  4487  0391                     	;# 
  4488  0392                     	;# 
  4489  048C                     	;# 
  4490  048C                     	;# 
  4491  048D                     	;# 
  4492  048E                     	;# 
  4493  048F                     	;# 
  4494  048F                     	;# 
  4495  0490                     	;# 
  4496  0491                     	;# 
  4497  0492                     	;# 
  4498  0492                     	;# 
  4499  0493                     	;# 
  4500  0494                     	;# 
  4501  0495                     	;# 
  4502  0495                     	;# 
  4503  0496                     	;# 
  4504  0497                     	;# 
  4505  0498                     	;# 
  4506  0499                     	;# 
  4507  049A                     	;# 
  4508  049B                     	;# 
  4509  049C                     	;# 
  4510  049D                     	;# 
  4511  058C                     	;# 
  4512  058C                     	;# 
  4513  058D                     	;# 
  4514  058E                     	;# 
  4515  058F                     	;# 
  4516  058F                     	;# 
  4517  0590                     	;# 
  4518  0591                     	;# 
  4519  0592                     	;# 
  4520  0593                     	;# 
  4521  059C                     	;# 
  4522  059C                     	;# 
  4523  059D                     	;# 
  4524  059D                     	;# 
  4525  059E                     	;# 
  4526  059F                     	;# 
  4527  060C                     	;# 
  4528  060C                     	;# 
  4529  060D                     	;# 
  4530  060D                     	;# 
  4531  060E                     	;# 
  4532  060F                     	;# 
  4533  0610                     	;# 
  4534  0611                     	;# 
  4535  0612                     	;# 
  4536  0613                     	;# 
  4537  0614                     	;# 
  4538  0616                     	;# 
  4539  0616                     	;# 
  4540  0617                     	;# 
  4541  0617                     	;# 
  4542  0618                     	;# 
  4543  0619                     	;# 
  4544  061A                     	;# 
  4545  061B                     	;# 
  4546  061C                     	;# 
  4547  061D                     	;# 
  4548  061E                     	;# 
  4549  070C                     	;# 
  4550  070D                     	;# 
  4551  070E                     	;# 
  4552  070F                     	;# 
  4553  0710                     	;# 
  4554  0711                     	;# 
  4555  0712                     	;# 
  4556  0713                     	;# 
  4557  0714                     	;# 
  4558  0716                     	;# 
  4559  0717                     	;# 
  4560  0718                     	;# 
  4561  0719                     	;# 
  4562  071A                     	;# 
  4563  071B                     	;# 
  4564  071C                     	;# 
  4565  071D                     	;# 
  4566  071E                     	;# 
  4567  0796                     	;# 
  4568  0797                     	;# 
  4569  0798                     	;# 
  4570  0799                     	;# 
  4571  079A                     	;# 
  4572  079B                     	;# 
  4573  079C                     	;# 
  4574  079D                     	;# 
  4575  080C                     	;# 
  4576  080D                     	;# 
  4577  080E                     	;# 
  4578  080F                     	;# 
  4579  0810                     	;# 
  4580  0811                     	;# 
  4581  0812                     	;# 
  4582  0813                     	;# 
  4583  0814                     	;# 
  4584  081A                     	;# 
  4585  081A                     	;# 
  4586  081B                     	;# 
  4587  081C                     	;# 
  4588  081C                     	;# 
  4589  081D                     	;# 
  4590  081E                     	;# 
  4591  081F                     	;# 
  4592  088C                     	;# 
  4593  088D                     	;# 
  4594  088E                     	;# 
  4595  088F                     	;# 
  4596  0890                     	;# 
  4597  0891                     	;# 
  4598  0892                     	;# 
  4599  0893                     	;# 
  4600  0895                     	;# 
  4601  0896                     	;# 
  4602  0897                     	;# 
  4603  0898                     	;# 
  4604  0899                     	;# 
  4605  089A                     	;# 
  4606  089B                     	;# 
  4607  090C                     	;# 
  4608  090E                     	;# 
  4609  090F                     	;# 
  4610  091F                     	;# 
  4611  098F                     	;# 
  4612  098F                     	;# 
  4613  0990                     	;# 
  4614  0991                     	;# 
  4615  0992                     	;# 
  4616  0993                     	;# 
  4617  0994                     	;# 
  4618  0995                     	;# 
  4619  0996                     	;# 
  4620  0997                     	;# 
  4621  1E0F                     	;# 
  4622  1E10                     	;# 
  4623  1E11                     	;# 
  4624  1E12                     	;# 
  4625  1E13                     	;# 
  4626  1E14                     	;# 
  4627  1E15                     	;# 
  4628  1E16                     	;# 
  4629  1E17                     	;# 
  4630  1E18                     	;# 
  4631  1E19                     	;# 
  4632  1E1A                     	;# 
  4633  1E1B                     	;# 
  4634  1E1C                     	;# 
  4635  1E1D                     	;# 
  4636  1E1E                     	;# 
  4637  1E1F                     	;# 
  4638  1E20                     	;# 
  4639  1E21                     	;# 
  4640  1E22                     	;# 
  4641  1E23                     	;# 
  4642  1E24                     	;# 
  4643  1E25                     	;# 
  4644  1E26                     	;# 
  4645  1E27                     	;# 
  4646  1E28                     	;# 
  4647  1E29                     	;# 
  4648  1E2A                     	;# 
  4649  1E2B                     	;# 
  4650  1E2C                     	;# 
  4651  1E2D                     	;# 
  4652  1E2E                     	;# 
  4653  1E2F                     	;# 
  4654  1E30                     	;# 
  4655  1E31                     	;# 
  4656  1E32                     	;# 
  4657  1E33                     	;# 
  4658  1E34                     	;# 
  4659  1E35                     	;# 
  4660  1E36                     	;# 
  4661  1E37                     	;# 
  4662  1E8F                     	;# 
  4663  1E90                     	;# 
  4664  1E91                     	;# 
  4665  1E92                     	;# 
  4666  1E93                     	;# 
  4667  1E94                     	;# 
  4668  1E95                     	;# 
  4669  1E96                     	;# 
  4670  1E97                     	;# 
  4671  1E9C                     	;# 
  4672  1E9D                     	;# 
  4673  1E9E                     	;# 
  4674  1EA1                     	;# 
  4675  1EA2                     	;# 
  4676  1EA3                     	;# 
  4677  1EA4                     	;# 
  4678  1EA9                     	;# 
  4679  1EAA                     	;# 
  4680  1EB1                     	;# 
  4681  1EB2                     	;# 
  4682  1EB8                     	;# 
  4683  1EB9                     	;# 
  4684  1EBA                     	;# 
  4685  1EBB                     	;# 
  4686  1EBC                     	;# 
  4687  1EBD                     	;# 
  4688  1EBE                     	;# 
  4689  1EC3                     	;# 
  4690  1EC5                     	;# 
  4691  1EC6                     	;# 
  4692  1EC7                     	;# 
  4693  1EC8                     	;# 
  4694  1EC9                     	;# 
  4695  1ECA                     	;# 
  4696  1ECB                     	;# 
  4697  1ECB                     	;# 
  4698  1ECB                     	;# 
  4699  1ECC                     	;# 
  4700  1ECC                     	;# 
  4701  1ECC                     	;# 
  4702  1F10                     	;# 
  4703  1F11                     	;# 
  4704  1F12                     	;# 
  4705  1F14                     	;# 
  4706  1F15                     	;# 
  4707  1F1C                     	;# 
  4708  1F1D                     	;# 
  4709  1F1E                     	;# 
  4710  1F1F                     	;# 
  4711  1F20                     	;# 
  4712  1F21                     	;# 
  4713  1F22                     	;# 
  4714  1F23                     	;# 
  4715  1F24                     	;# 
  4716  1F25                     	;# 
  4717  1F26                     	;# 
  4718  1F27                     	;# 
  4719  1F38                     	;# 
  4720  1F39                     	;# 
  4721  1F3A                     	;# 
  4722  1F3B                     	;# 
  4723  1F3C                     	;# 
  4724  1F3D                     	;# 
  4725  1F3E                     	;# 
  4726  1F3F                     	;# 
  4727  1F43                     	;# 
  4728  1F44                     	;# 
  4729  1F45                     	;# 
  4730  1F46                     	;# 
  4731  1F47                     	;# 
  4732  1F48                     	;# 
  4733  1F49                     	;# 
  4734  1F4A                     	;# 
  4735  1F4E                     	;# 
  4736  1F4F                     	;# 
  4737  1F50                     	;# 
  4738  1F51                     	;# 
  4739  1F52                     	;# 
  4740  1F53                     	;# 
  4741  1F54                     	;# 
  4742  1F55                     	;# 
  4743  1FE4                     	;# 
  4744  1FE5                     	;# 
  4745  1FE6                     	;# 
  4746  1FE7                     	;# 
  4747  1FE8                     	;# 
  4748  1FE8                     	;# 
  4749  1FE9                     	;# 
  4750  1FEA                     	;# 
  4751  1FEB                     	;# 
  4752  1FED                     	;# 
  4753  1FEE                     	;# 
  4754  1FEF                     	;# 
  4755  0000                     	;# 
  4756  0001                     	;# 
  4757  0002                     	;# 
  4758  0003                     	;# 
  4759  0004                     	;# 
  4760  0005                     	;# 
  4761  0006                     	;# 
  4762  0007                     	;# 
  4763  0008                     	;# 
  4764  0009                     	;# 
  4765  000A                     	;# 
  4766  000B                     	;# 
  4767  000C                     	;# 
  4768  000D                     	;# 
  4769  000E                     	;# 
  4770  0012                     	;# 
  4771  0013                     	;# 
  4772  0014                     	;# 
  4773  0018                     	;# 
  4774  0019                     	;# 
  4775  001A                     	;# 
  4776  008C                     	;# 
  4777  008C                     	;# 
  4778  008D                     	;# 
  4779  008E                     	;# 
  4780  008E                     	;# 
  4781  008F                     	;# 
  4782  0090                     	;# 
  4783  0090                     	;# 
  4784  0091                     	;# 
  4785  0092                     	;# 
  4786  0092                     	;# 
  4787  0093                     	;# 
  4788  0094                     	;# 
  4789  0094                     	;# 
  4790  0095                     	;# 
  4791  0096                     	;# 
  4792  0096                     	;# 
  4793  0097                     	;# 
  4794  0098                     	;# 
  4795  0099                     	;# 
  4796  009A                     	;# 
  4797  009B                     	;# 
  4798  009B                     	;# 
  4799  009C                     	;# 
  4800  009D                     	;# 
  4801  009D                     	;# 
  4802  009E                     	;# 
  4803  009F                     	;# 
  4804  010C                     	;# 
  4805  010C                     	;# 
  4806  010D                     	;# 
  4807  010E                     	;# 
  4808  010F                     	;# 
  4809  010F                     	;# 
  4810  0110                     	;# 
  4811  0111                     	;# 
  4812  0112                     	;# 
  4813  0113                     	;# 
  4814  0114                     	;# 
  4815  0115                     	;# 
  4816  0116                     	;# 
  4817  0117                     	;# 
  4818  0118                     	;# 
  4819  0119                     	;# 
  4820  0119                     	;# 
  4821  0119                     	;# 
  4822  011A                     	;# 
  4823  011A                     	;# 
  4824  011A                     	;# 
  4825  011B                     	;# 
  4826  011B                     	;# 
  4827  011B                     	;# 
  4828  011B                     	;# 
  4829  011B                     	;# 
  4830  011C                     	;# 
  4831  011C                     	;# 
  4832  011C                     	;# 
  4833  011D                     	;# 
  4834  011D                     	;# 
  4835  011D                     	;# 
  4836  011E                     	;# 
  4837  011E                     	;# 
  4838  011E                     	;# 
  4839  011F                     	;# 
  4840  011F                     	;# 
  4841  011F                     	;# 
  4842  011F                     	;# 
  4843  011F                     	;# 
  4844  018C                     	;# 
  4845  018D                     	;# 
  4846  018E                     	;# 
  4847  018F                     	;# 
  4848  0190                     	;# 
  4849  0191                     	;# 
  4850  0192                     	;# 
  4851  0196                     	;# 
  4852  0197                     	;# 
  4853  0198                     	;# 
  4854  0199                     	;# 
  4855  019A                     	;# 
  4856  019B                     	;# 
  4857  019C                     	;# 
  4858  020C                     	;# 
  4859  020D                     	;# 
  4860  020E                     	;# 
  4861  020E                     	;# 
  4862  020F                     	;# 
  4863  020F                     	;# 
  4864  0210                     	;# 
  4865  0210                     	;# 
  4866  0211                     	;# 
  4867  0211                     	;# 
  4868  0212                     	;# 
  4869  0213                     	;# 
  4870  0214                     	;# 
  4871  0214                     	;# 
  4872  0215                     	;# 
  4873  0215                     	;# 
  4874  0216                     	;# 
  4875  0216                     	;# 
  4876  0217                     	;# 
  4877  0217                     	;# 
  4878  0218                     	;# 
  4879  0219                     	;# 
  4880  021A                     	;# 
  4881  021A                     	;# 
  4882  021B                     	;# 
  4883  021B                     	;# 
  4884  021C                     	;# 
  4885  021C                     	;# 
  4886  021D                     	;# 
  4887  021D                     	;# 
  4888  021E                     	;# 
  4889  021F                     	;# 
  4890  028C                     	;# 
  4891  028C                     	;# 
  4892  028D                     	;# 
  4893  028D                     	;# 
  4894  028E                     	;# 
  4895  028F                     	;# 
  4896  0290                     	;# 
  4897  0291                     	;# 
  4898  0292                     	;# 
  4899  0292                     	;# 
  4900  0293                     	;# 
  4901  0293                     	;# 
  4902  0294                     	;# 
  4903  0295                     	;# 
  4904  0296                     	;# 
  4905  0297                     	;# 
  4906  0298                     	;# 
  4907  0298                     	;# 
  4908  0299                     	;# 
  4909  0299                     	;# 
  4910  029A                     	;# 
  4911  029B                     	;# 
  4912  029C                     	;# 
  4913  029D                     	;# 
  4914  029F                     	;# 
  4915  030C                     	;# 
  4916  030C                     	;# 
  4917  030D                     	;# 
  4918  030E                     	;# 
  4919  030F                     	;# 
  4920  0310                     	;# 
  4921  0310                     	;# 
  4922  0311                     	;# 
  4923  0312                     	;# 
  4924  0313                     	;# 
  4925  0314                     	;# 
  4926  0314                     	;# 
  4927  0315                     	;# 
  4928  0316                     	;# 
  4929  0317                     	;# 
  4930  0318                     	;# 
  4931  0318                     	;# 
  4932  0319                     	;# 
  4933  031A                     	;# 
  4934  031B                     	;# 
  4935  038C                     	;# 
  4936  038C                     	;# 
  4937  038D                     	;# 
  4938  038E                     	;# 
  4939  0390                     	;# 
  4940  0390                     	;# 
  4941  0391                     	;# 
  4942  0392                     	;# 
  4943  048C                     	;# 
  4944  048C                     	;# 
  4945  048D                     	;# 
  4946  048E                     	;# 
  4947  048F                     	;# 
  4948  048F                     	;# 
  4949  0490                     	;# 
  4950  0491                     	;# 
  4951  0492                     	;# 
  4952  0492                     	;# 
  4953  0493                     	;# 
  4954  0494                     	;# 
  4955  0495                     	;# 
  4956  0495                     	;# 
  4957  0496                     	;# 
  4958  0497                     	;# 
  4959  0498                     	;# 
  4960  0499                     	;# 
  4961  049A                     	;# 
  4962  049B                     	;# 
  4963  049C                     	;# 
  4964  049D                     	;# 
  4965  058C                     	;# 
  4966  058C                     	;# 
  4967  058D                     	;# 
  4968  058E                     	;# 
  4969  058F                     	;# 
  4970  058F                     	;# 
  4971  0590                     	;# 
  4972  0591                     	;# 
  4973  0592                     	;# 
  4974  0593                     	;# 
  4975  059C                     	;# 
  4976  059C                     	;# 
  4977  059D                     	;# 
  4978  059D                     	;# 
  4979  059E                     	;# 
  4980  059F                     	;# 
  4981  060C                     	;# 
  4982  060C                     	;# 
  4983  060D                     	;# 
  4984  060D                     	;# 
  4985  060E                     	;# 
  4986  060F                     	;# 
  4987  0610                     	;# 
  4988  0611                     	;# 
  4989  0612                     	;# 
  4990  0613                     	;# 
  4991  0614                     	;# 
  4992  0616                     	;# 
  4993  0616                     	;# 
  4994  0617                     	;# 
  4995  0617                     	;# 
  4996  0618                     	;# 
  4997  0619                     	;# 
  4998  061A                     	;# 
  4999  061B                     	;# 
  5000  061C                     	;# 
  5001  061D                     	;# 
  5002  061E                     	;# 
  5003  070C                     	;# 
  5004  070D                     	;# 
  5005  070E                     	;# 
  5006  070F                     	;# 
  5007  0710                     	;# 
  5008  0711                     	;# 
  5009  0712                     	;# 
  5010  0713                     	;# 
  5011  0714                     	;# 
  5012  0716                     	;# 
  5013  0717                     	;# 
  5014  0718                     	;# 
  5015  0719                     	;# 
  5016  071A                     	;# 
  5017  071B                     	;# 
  5018  071C                     	;# 
  5019  071D                     	;# 
  5020  071E                     	;# 
  5021  0796                     	;# 
  5022  0797                     	;# 
  5023  0798                     	;# 
  5024  0799                     	;# 
  5025  079A                     	;# 
  5026  079B                     	;# 
  5027  079C                     	;# 
  5028  079D                     	;# 
  5029  080C                     	;# 
  5030  080D                     	;# 
  5031  080E                     	;# 
  5032  080F                     	;# 
  5033  0810                     	;# 
  5034  0811                     	;# 
  5035  0812                     	;# 
  5036  0813                     	;# 
  5037  0814                     	;# 
  5038  081A                     	;# 
  5039  081A                     	;# 
  5040  081B                     	;# 
  5041  081C                     	;# 
  5042  081C                     	;# 
  5043  081D                     	;# 
  5044  081E                     	;# 
  5045  081F                     	;# 
  5046  088C                     	;# 
  5047  088D                     	;# 
  5048  088E                     	;# 
  5049  088F                     	;# 
  5050  0890                     	;# 
  5051  0891                     	;# 
  5052  0892                     	;# 
  5053  0893                     	;# 
  5054  0895                     	;# 
  5055  0896                     	;# 
  5056  0897                     	;# 
  5057  0898                     	;# 
  5058  0899                     	;# 
  5059  089A                     	;# 
  5060  089B                     	;# 
  5061  090C                     	;# 
  5062  090E                     	;# 
  5063  090F                     	;# 
  5064  091F                     	;# 
  5065  098F                     	;# 
  5066  098F                     	;# 
  5067  0990                     	;# 
  5068  0991                     	;# 
  5069  0992                     	;# 
  5070  0993                     	;# 
  5071  0994                     	;# 
  5072  0995                     	;# 
  5073  0996                     	;# 
  5074  0997                     	;# 
  5075  1E0F                     	;# 
  5076  1E10                     	;# 
  5077  1E11                     	;# 
  5078  1E12                     	;# 
  5079  1E13                     	;# 
  5080  1E14                     	;# 
  5081  1E15                     	;# 
  5082  1E16                     	;# 
  5083  1E17                     	;# 
  5084  1E18                     	;# 
  5085  1E19                     	;# 
  5086  1E1A                     	;# 
  5087  1E1B                     	;# 
  5088  1E1C                     	;# 
  5089  1E1D                     	;# 
  5090  1E1E                     	;# 
  5091  1E1F                     	;# 
  5092  1E20                     	;# 
  5093  1E21                     	;# 
  5094  1E22                     	;# 
  5095  1E23                     	;# 
  5096  1E24                     	;# 
  5097  1E25                     	;# 
  5098  1E26                     	;# 
  5099  1E27                     	;# 
  5100  1E28                     	;# 
  5101  1E29                     	;# 
  5102  1E2A                     	;# 
  5103  1E2B                     	;# 
  5104  1E2C                     	;# 
  5105  1E2D                     	;# 
  5106  1E2E                     	;# 
  5107  1E2F                     	;# 
  5108  1E30                     	;# 
  5109  1E31                     	;# 
  5110  1E32                     	;# 
  5111  1E33                     	;# 
  5112  1E34                     	;# 
  5113  1E35                     	;# 
  5114  1E36                     	;# 
  5115  1E37                     	;# 
  5116  1E8F                     	;# 
  5117  1E90                     	;# 
  5118  1E91                     	;# 
  5119  1E92                     	;# 
  5120  1E93                     	;# 
  5121  1E94                     	;# 
  5122  1E95                     	;# 
  5123  1E96                     	;# 
  5124  1E97                     	;# 
  5125  1E9C                     	;# 
  5126  1E9D                     	;# 
  5127  1E9E                     	;# 
  5128  1EA1                     	;# 
  5129  1EA2                     	;# 
  5130  1EA3                     	;# 
  5131  1EA4                     	;# 
  5132  1EA9                     	;# 
  5133  1EAA                     	;# 
  5134  1EB1                     	;# 
  5135  1EB2                     	;# 
  5136  1EB8                     	;# 
  5137  1EB9                     	;# 
  5138  1EBA                     	;# 
  5139  1EBB                     	;# 
  5140  1EBC                     	;# 
  5141  1EBD                     	;# 
  5142  1EBE                     	;# 
  5143  1EC3                     	;# 
  5144  1EC5                     	;# 
  5145  1EC6                     	;# 
  5146  1EC7                     	;# 
  5147  1EC8                     	;# 
  5148  1EC9                     	;# 
  5149  1ECA                     	;# 
  5150  1ECB                     	;# 
  5151  1ECB                     	;# 
  5152  1ECB                     	;# 
  5153  1ECC                     	;# 
  5154  1ECC                     	;# 
  5155  1ECC                     	;# 
  5156  1F10                     	;# 
  5157  1F11                     	;# 
  5158  1F12                     	;# 
  5159  1F14                     	;# 
  5160  1F15                     	;# 
  5161  1F1C                     	;# 
  5162  1F1D                     	;# 
  5163  1F1E                     	;# 
  5164  1F1F                     	;# 
  5165  1F20                     	;# 
  5166  1F21                     	;# 
  5167  1F22                     	;# 
  5168  1F23                     	;# 
  5169  1F24                     	;# 
  5170  1F25                     	;# 
  5171  1F26                     	;# 
  5172  1F27                     	;# 
  5173  1F38                     	;# 
  5174  1F39                     	;# 
  5175  1F3A                     	;# 
  5176  1F3B                     	;# 
  5177  1F3C                     	;# 
  5178  1F3D                     	;# 
  5179  1F3E                     	;# 
  5180  1F3F                     	;# 
  5181  1F43                     	;# 
  5182  1F44                     	;# 
  5183  1F45                     	;# 
  5184  1F46                     	;# 
  5185  1F47                     	;# 
  5186  1F48                     	;# 
  5187  1F49                     	;# 
  5188  1F4A                     	;# 
  5189  1F4E                     	;# 
  5190  1F4F                     	;# 
  5191  1F50                     	;# 
  5192  1F51                     	;# 
  5193  1F52                     	;# 
  5194  1F53                     	;# 
  5195  1F54                     	;# 
  5196  1F55                     	;# 
  5197  1FE4                     	;# 
  5198  1FE5                     	;# 
  5199  1FE6                     	;# 
  5200  1FE7                     	;# 
  5201  1FE8                     	;# 
  5202  1FE8                     	;# 
  5203  1FE9                     	;# 
  5204  1FEA                     	;# 
  5205  1FEB                     	;# 
  5206  1FED                     	;# 
  5207  1FEE                     	;# 
  5208  1FEF                     	;# 
  5209  0000                     	;# 
  5210  0001                     	;# 
  5211  0002                     	;# 
  5212  0003                     	;# 
  5213  0004                     	;# 
  5214  0005                     	;# 
  5215  0006                     	;# 
  5216  0007                     	;# 
  5217  0008                     	;# 
  5218  0009                     	;# 
  5219  000A                     	;# 
  5220  000B                     	;# 
  5221  000C                     	;# 
  5222  000D                     	;# 
  5223  000E                     	;# 
  5224  0012                     	;# 
  5225  0013                     	;# 
  5226  0014                     	;# 
  5227  0018                     	;# 
  5228  0019                     	;# 
  5229  001A                     	;# 
  5230  008C                     	;# 
  5231  008C                     	;# 
  5232  008D                     	;# 
  5233  008E                     	;# 
  5234  008E                     	;# 
  5235  008F                     	;# 
  5236  0090                     	;# 
  5237  0090                     	;# 
  5238  0091                     	;# 
  5239  0092                     	;# 
  5240  0092                     	;# 
  5241  0093                     	;# 
  5242  0094                     	;# 
  5243  0094                     	;# 
  5244  0095                     	;# 
  5245  0096                     	;# 
  5246  0096                     	;# 
  5247  0097                     	;# 
  5248  0098                     	;# 
  5249  0099                     	;# 
  5250  009A                     	;# 
  5251  009B                     	;# 
  5252  009B                     	;# 
  5253  009C                     	;# 
  5254  009D                     	;# 
  5255  009D                     	;# 
  5256  009E                     	;# 
  5257  009F                     	;# 
  5258  010C                     	;# 
  5259  010C                     	;# 
  5260  010D                     	;# 
  5261  010E                     	;# 
  5262  010F                     	;# 
  5263  010F                     	;# 
  5264  0110                     	;# 
  5265  0111                     	;# 
  5266  0112                     	;# 
  5267  0113                     	;# 
  5268  0114                     	;# 
  5269  0115                     	;# 
  5270  0116                     	;# 
  5271  0117                     	;# 
  5272  0118                     	;# 
  5273  0119                     	;# 
  5274  0119                     	;# 
  5275  0119                     	;# 
  5276  011A                     	;# 
  5277  011A                     	;# 
  5278  011A                     	;# 
  5279  011B                     	;# 
  5280  011B                     	;# 
  5281  011B                     	;# 
  5282  011B                     	;# 
  5283  011B                     	;# 
  5284  011C                     	;# 
  5285  011C                     	;# 
  5286  011C                     	;# 
  5287  011D                     	;# 
  5288  011D                     	;# 
  5289  011D                     	;# 
  5290  011E                     	;# 
  5291  011E                     	;# 
  5292  011E                     	;# 
  5293  011F                     	;# 
  5294  011F                     	;# 
  5295  011F                     	;# 
  5296  011F                     	;# 
  5297  011F                     	;# 
  5298  018C                     	;# 
  5299  018D                     	;# 
  5300  018E                     	;# 
  5301  018F                     	;# 
  5302  0190                     	;# 
  5303  0191                     	;# 
  5304  0192                     	;# 
  5305  0196                     	;# 
  5306  0197                     	;# 
  5307  0198                     	;# 
  5308  0199                     	;# 
  5309  019A                     	;# 
  5310  019B                     	;# 
  5311  019C                     	;# 
  5312  020C                     	;# 
  5313  020D                     	;# 
  5314  020E                     	;# 
  5315  020E                     	;# 
  5316  020F                     	;# 
  5317  020F                     	;# 
  5318  0210                     	;# 
  5319  0210                     	;# 
  5320  0211                     	;# 
  5321  0211                     	;# 
  5322  0212                     	;# 
  5323  0213                     	;# 
  5324  0214                     	;# 
  5325  0214                     	;# 
  5326  0215                     	;# 
  5327  0215                     	;# 
  5328  0216                     	;# 
  5329  0216                     	;# 
  5330  0217                     	;# 
  5331  0217                     	;# 
  5332  0218                     	;# 
  5333  0219                     	;# 
  5334  021A                     	;# 
  5335  021A                     	;# 
  5336  021B                     	;# 
  5337  021B                     	;# 
  5338  021C                     	;# 
  5339  021C                     	;# 
  5340  021D                     	;# 
  5341  021D                     	;# 
  5342  021E                     	;# 
  5343  021F                     	;# 
  5344  028C                     	;# 
  5345  028C                     	;# 
  5346  028D                     	;# 
  5347  028D                     	;# 
  5348  028E                     	;# 
  5349  028F                     	;# 
  5350  0290                     	;# 
  5351  0291                     	;# 
  5352  0292                     	;# 
  5353  0292                     	;# 
  5354  0293                     	;# 
  5355  0293                     	;# 
  5356  0294                     	;# 
  5357  0295                     	;# 
  5358  0296                     	;# 
  5359  0297                     	;# 
  5360  0298                     	;# 
  5361  0298                     	;# 
  5362  0299                     	;# 
  5363  0299                     	;# 
  5364  029A                     	;# 
  5365  029B                     	;# 
  5366  029C                     	;# 
  5367  029D                     	;# 
  5368  029F                     	;# 
  5369  030C                     	;# 
  5370  030C                     	;# 
  5371  030D                     	;# 
  5372  030E                     	;# 
  5373  030F                     	;# 
  5374  0310                     	;# 
  5375  0310                     	;# 
  5376  0311                     	;# 
  5377  0312                     	;# 
  5378  0313                     	;# 
  5379  0314                     	;# 
  5380  0314                     	;# 
  5381  0315                     	;# 
  5382  0316                     	;# 
  5383  0317                     	;# 
  5384  0318                     	;# 
  5385  0318                     	;# 
  5386  0319                     	;# 
  5387  031A                     	;# 
  5388  031B                     	;# 
  5389  038C                     	;# 
  5390  038C                     	;# 
  5391  038D                     	;# 
  5392  038E                     	;# 
  5393  0390                     	;# 
  5394  0390                     	;# 
  5395  0391                     	;# 
  5396  0392                     	;# 
  5397  048C                     	;# 
  5398  048C                     	;# 
  5399  048D                     	;# 
  5400  048E                     	;# 
  5401  048F                     	;# 
  5402  048F                     	;# 
  5403  0490                     	;# 
  5404  0491                     	;# 
  5405  0492                     	;# 
  5406  0492                     	;# 
  5407  0493                     	;# 
  5408  0494                     	;# 
  5409  0495                     	;# 
  5410  0495                     	;# 
  5411  0496                     	;# 
  5412  0497                     	;# 
  5413  0498                     	;# 
  5414  0499                     	;# 
  5415  049A                     	;# 
  5416  049B                     	;# 
  5417  049C                     	;# 
  5418  049D                     	;# 
  5419  058C                     	;# 
  5420  058C                     	;# 
  5421  058D                     	;# 
  5422  058E                     	;# 
  5423  058F                     	;# 
  5424  058F                     	;# 
  5425  0590                     	;# 
  5426  0591                     	;# 
  5427  0592                     	;# 
  5428  0593                     	;# 
  5429  059C                     	;# 
  5430  059C                     	;# 
  5431  059D                     	;# 
  5432  059D                     	;# 
  5433  059E                     	;# 
  5434  059F                     	;# 
  5435  060C                     	;# 
  5436  060C                     	;# 
  5437  060D                     	;# 
  5438  060D                     	;# 
  5439  060E                     	;# 
  5440  060F                     	;# 
  5441  0610                     	;# 
  5442  0611                     	;# 
  5443  0612                     	;# 
  5444  0613                     	;# 
  5445  0614                     	;# 
  5446  0616                     	;# 
  5447  0616                     	;# 
  5448  0617                     	;# 
  5449  0617                     	;# 
  5450  0618                     	;# 
  5451  0619                     	;# 
  5452  061A                     	;# 
  5453  061B                     	;# 
  5454  061C                     	;# 
  5455  061D                     	;# 
  5456  061E                     	;# 
  5457  070C                     	;# 
  5458  070D                     	;# 
  5459  070E                     	;# 
  5460  070F                     	;# 
  5461  0710                     	;# 
  5462  0711                     	;# 
  5463  0712                     	;# 
  5464  0713                     	;# 
  5465  0714                     	;# 
  5466  0716                     	;# 
  5467  0717                     	;# 
  5468  0718                     	;# 
  5469  0719                     	;# 
  5470  071A                     	;# 
  5471  071B                     	;# 
  5472  071C                     	;# 
  5473  071D                     	;# 
  5474  071E                     	;# 
  5475  0796                     	;# 
  5476  0797                     	;# 
  5477  0798                     	;# 
  5478  0799                     	;# 
  5479  079A                     	;# 
  5480  079B                     	;# 
  5481  079C                     	;# 
  5482  079D                     	;# 
  5483  080C                     	;# 
  5484  080D                     	;# 
  5485  080E                     	;# 
  5486  080F                     	;# 
  5487  0810                     	;# 
  5488  0811                     	;# 
  5489  0812                     	;# 
  5490  0813                     	;# 
  5491  0814                     	;# 
  5492  081A                     	;# 
  5493  081A                     	;# 
  5494  081B                     	;# 
  5495  081C                     	;# 
  5496  081C                     	;# 
  5497  081D                     	;# 
  5498  081E                     	;# 
  5499  081F                     	;# 
  5500  088C                     	;# 
  5501  088D                     	;# 
  5502  088E                     	;# 
  5503  088F                     	;# 
  5504  0890                     	;# 
  5505  0891                     	;# 
  5506  0892                     	;# 
  5507  0893                     	;# 
  5508  0895                     	;# 
  5509  0896                     	;# 
  5510  0897                     	;# 
  5511  0898                     	;# 
  5512  0899                     	;# 
  5513  089A                     	;# 
  5514  089B                     	;# 
  5515  090C                     	;# 
  5516  090E                     	;# 
  5517  090F                     	;# 
  5518  091F                     	;# 
  5519  098F                     	;# 
  5520  098F                     	;# 
  5521  0990                     	;# 
  5522  0991                     	;# 
  5523  0992                     	;# 
  5524  0993                     	;# 
  5525  0994                     	;# 
  5526  0995                     	;# 
  5527  0996                     	;# 
  5528  0997                     	;# 
  5529  1E0F                     	;# 
  5530  1E10                     	;# 
  5531  1E11                     	;# 
  5532  1E12                     	;# 
  5533  1E13                     	;# 
  5534  1E14                     	;# 
  5535  1E15                     	;# 
  5536  1E16                     	;# 
  5537  1E17                     	;# 
  5538  1E18                     	;# 
  5539  1E19                     	;# 
  5540  1E1A                     	;# 
  5541  1E1B                     	;# 
  5542  1E1C                     	;# 
  5543  1E1D                     	;# 
  5544  1E1E                     	;# 
  5545  1E1F                     	;# 
  5546  1E20                     	;# 
  5547  1E21                     	;# 
  5548  1E22                     	;# 
  5549  1E23                     	;# 
  5550  1E24                     	;# 
  5551  1E25                     	;# 
  5552  1E26                     	;# 
  5553  1E27                     	;# 
  5554  1E28                     	;# 
  5555  1E29                     	;# 
  5556  1E2A                     	;# 
  5557  1E2B                     	;# 
  5558  1E2C                     	;# 
  5559  1E2D                     	;# 
  5560  1E2E                     	;# 
  5561  1E2F                     	;# 
  5562  1E30                     	;# 
  5563  1E31                     	;# 
  5564  1E32                     	;# 
  5565  1E33                     	;# 
  5566  1E34                     	;# 
  5567  1E35                     	;# 
  5568  1E36                     	;# 
  5569  1E37                     	;# 
  5570  1E8F                     	;# 
  5571  1E90                     	;# 
  5572  1E91                     	;# 
  5573  1E92                     	;# 
  5574  1E93                     	;# 
  5575  1E94                     	;# 
  5576  1E95                     	;# 
  5577  1E96                     	;# 
  5578  1E97                     	;# 
  5579  1E9C                     	;# 
  5580  1E9D                     	;# 
  5581  1E9E                     	;# 
  5582  1EA1                     	;# 
  5583  1EA2                     	;# 
  5584  1EA3                     	;# 
  5585  1EA4                     	;# 
  5586  1EA9                     	;# 
  5587  1EAA                     	;# 
  5588  1EB1                     	;# 
  5589  1EB2                     	;# 
  5590  1EB8                     	;# 
  5591  1EB9                     	;# 
  5592  1EBA                     	;# 
  5593  1EBB                     	;# 
  5594  1EBC                     	;# 
  5595  1EBD                     	;# 
  5596  1EBE                     	;# 
  5597  1EC3                     	;# 
  5598  1EC5                     	;# 
  5599  1EC6                     	;# 
  5600  1EC7                     	;# 
  5601  1EC8                     	;# 
  5602  1EC9                     	;# 
  5603  1ECA                     	;# 
  5604  1ECB                     	;# 
  5605  1ECB                     	;# 
  5606  1ECB                     	;# 
  5607  1ECC                     	;# 
  5608  1ECC                     	;# 
  5609  1ECC                     	;# 
  5610  1F10                     	;# 
  5611  1F11                     	;# 
  5612  1F12                     	;# 
  5613  1F14                     	;# 
  5614  1F15                     	;# 
  5615  1F1C                     	;# 
  5616  1F1D                     	;# 
  5617  1F1E                     	;# 
  5618  1F1F                     	;# 
  5619  1F20                     	;# 
  5620  1F21                     	;# 
  5621  1F22                     	;# 
  5622  1F23                     	;# 
  5623  1F24                     	;# 
  5624  1F25                     	;# 
  5625  1F26                     	;# 
  5626  1F27                     	;# 
  5627  1F38                     	;# 
  5628  1F39                     	;# 
  5629  1F3A                     	;# 
  5630  1F3B                     	;# 
  5631  1F3C                     	;# 
  5632  1F3D                     	;# 
  5633  1F3E                     	;# 
  5634  1F3F                     	;# 
  5635  1F43                     	;# 
  5636  1F44                     	;# 
  5637  1F45                     	;# 
  5638  1F46                     	;# 
  5639  1F47                     	;# 
  5640  1F48                     	;# 
  5641  1F49                     	;# 
  5642  1F4A                     	;# 
  5643  1F4E                     	;# 
  5644  1F4F                     	;# 
  5645  1F50                     	;# 
  5646  1F51                     	;# 
  5647  1F52                     	;# 
  5648  1F53                     	;# 
  5649  1F54                     	;# 
  5650  1F55                     	;# 
  5651  1FE4                     	;# 
  5652  1FE5                     	;# 
  5653  1FE6                     	;# 
  5654  1FE7                     	;# 
  5655  1FE8                     	;# 
  5656  1FE8                     	;# 
  5657  1FE9                     	;# 
  5658  1FEA                     	;# 
  5659  1FEB                     	;# 
  5660  1FED                     	;# 
  5661  1FEE                     	;# 
  5662  1FEF                     	;# 
  5663  0000                     	;# 
  5664  0001                     	;# 
  5665  0002                     	;# 
  5666  0003                     	;# 
  5667  0004                     	;# 
  5668  0005                     	;# 
  5669  0006                     	;# 
  5670  0007                     	;# 
  5671  0008                     	;# 
  5672  0009                     	;# 
  5673  000A                     	;# 
  5674  000B                     	;# 
  5675  000C                     	;# 
  5676  000D                     	;# 
  5677  000E                     	;# 
  5678  0012                     	;# 
  5679  0013                     	;# 
  5680  0014                     	;# 
  5681  0018                     	;# 
  5682  0019                     	;# 
  5683  001A                     	;# 
  5684  008C                     	;# 
  5685  008C                     	;# 
  5686  008D                     	;# 
  5687  008E                     	;# 
  5688  008E                     	;# 
  5689  008F                     	;# 
  5690  0090                     	;# 
  5691  0090                     	;# 
  5692  0091                     	;# 
  5693  0092                     	;# 
  5694  0092                     	;# 
  5695  0093                     	;# 
  5696  0094                     	;# 
  5697  0094                     	;# 
  5698  0095                     	;# 
  5699  0096                     	;# 
  5700  0096                     	;# 
  5701  0097                     	;# 
  5702  0098                     	;# 
  5703  0099                     	;# 
  5704  009A                     	;# 
  5705  009B                     	;# 
  5706  009B                     	;# 
  5707  009C                     	;# 
  5708  009D                     	;# 
  5709  009D                     	;# 
  5710  009E                     	;# 
  5711  009F                     	;# 
  5712  010C                     	;# 
  5713  010C                     	;# 
  5714  010D                     	;# 
  5715  010E                     	;# 
  5716  010F                     	;# 
  5717  010F                     	;# 
  5718  0110                     	;# 
  5719  0111                     	;# 
  5720  0112                     	;# 
  5721  0113                     	;# 
  5722  0114                     	;# 
  5723  0115                     	;# 
  5724  0116                     	;# 
  5725  0117                     	;# 
  5726  0118                     	;# 
  5727  0119                     	;# 
  5728  0119                     	;# 
  5729  0119                     	;# 
  5730  011A                     	;# 
  5731  011A                     	;# 
  5732  011A                     	;# 
  5733  011B                     	;# 
  5734  011B                     	;# 
  5735  011B                     	;# 
  5736  011B                     	;# 
  5737  011B                     	;# 
  5738  011C                     	;# 
  5739  011C                     	;# 
  5740  011C                     	;# 
  5741  011D                     	;# 
  5742  011D                     	;# 
  5743  011D                     	;# 
  5744  011E                     	;# 
  5745  011E                     	;# 
  5746  011E                     	;# 
  5747  011F                     	;# 
  5748  011F                     	;# 
  5749  011F                     	;# 
  5750  011F                     	;# 
  5751  011F                     	;# 
  5752  018C                     	;# 
  5753  018D                     	;# 
  5754  018E                     	;# 
  5755  018F                     	;# 
  5756  0190                     	;# 
  5757  0191                     	;# 
  5758  0192                     	;# 
  5759  0196                     	;# 
  5760  0197                     	;# 
  5761  0198                     	;# 
  5762  0199                     	;# 
  5763  019A                     	;# 
  5764  019B                     	;# 
  5765  019C                     	;# 
  5766  020C                     	;# 
  5767  020D                     	;# 
  5768  020E                     	;# 
  5769  020E                     	;# 
  5770  020F                     	;# 
  5771  020F                     	;# 
  5772  0210                     	;# 
  5773  0210                     	;# 
  5774  0211                     	;# 
  5775  0211                     	;# 
  5776  0212                     	;# 
  5777  0213                     	;# 
  5778  0214                     	;# 
  5779  0214                     	;# 
  5780  0215                     	;# 
  5781  0215                     	;# 
  5782  0216                     	;# 
  5783  0216                     	;# 
  5784  0217                     	;# 
  5785  0217                     	;# 
  5786  0218                     	;# 
  5787  0219                     	;# 
  5788  021A                     	;# 
  5789  021A                     	;# 
  5790  021B                     	;# 
  5791  021B                     	;# 
  5792  021C                     	;# 
  5793  021C                     	;# 
  5794  021D                     	;# 
  5795  021D                     	;# 
  5796  021E                     	;# 
  5797  021F                     	;# 
  5798  028C                     	;# 
  5799  028C                     	;# 
  5800  028D                     	;# 
  5801  028D                     	;# 
  5802  028E                     	;# 
  5803  028F                     	;# 
  5804  0290                     	;# 
  5805  0291                     	;# 
  5806  0292                     	;# 
  5807  0292                     	;# 
  5808  0293                     	;# 
  5809  0293                     	;# 
  5810  0294                     	;# 
  5811  0295                     	;# 
  5812  0296                     	;# 
  5813  0297                     	;# 
  5814  0298                     	;# 
  5815  0298                     	;# 
  5816  0299                     	;# 
  5817  0299                     	;# 
  5818  029A                     	;# 
  5819  029B                     	;# 
  5820  029C                     	;# 
  5821  029D                     	;# 
  5822  029F                     	;# 
  5823  030C                     	;# 
  5824  030C                     	;# 
  5825  030D                     	;# 
  5826  030E                     	;# 
  5827  030F                     	;# 
  5828  0310                     	;# 
  5829  0310                     	;# 
  5830  0311                     	;# 
  5831  0312                     	;# 
  5832  0313                     	;# 
  5833  0314                     	;# 
  5834  0314                     	;# 
  5835  0315                     	;# 
  5836  0316                     	;# 
  5837  0317                     	;# 
  5838  0318                     	;# 
  5839  0318                     	;# 
  5840  0319                     	;# 
  5841  031A                     	;# 
  5842  031B                     	;# 
  5843  038C                     	;# 
  5844  038C                     	;# 
  5845  038D                     	;# 
  5846  038E                     	;# 
  5847  0390                     	;# 
  5848  0390                     	;# 
  5849  0391                     	;# 
  5850  0392                     	;# 
  5851  048C                     	;# 
  5852  048C                     	;# 
  5853  048D                     	;# 
  5854  048E                     	;# 
  5855  048F                     	;# 
  5856  048F                     	;# 
  5857  0490                     	;# 
  5858  0491                     	;# 
  5859  0492                     	;# 
  5860  0492                     	;# 
  5861  0493                     	;# 
  5862  0494                     	;# 
  5863  0495                     	;# 
  5864  0495                     	;# 
  5865  0496                     	;# 
  5866  0497                     	;# 
  5867  0498                     	;# 
  5868  0499                     	;# 
  5869  049A                     	;# 
  5870  049B                     	;# 
  5871  049C                     	;# 
  5872  049D                     	;# 
  5873  058C                     	;# 
  5874  058C                     	;# 
  5875  058D                     	;# 
  5876  058E                     	;# 
  5877  058F                     	;# 
  5878  058F                     	;# 
  5879  0590                     	;# 
  5880  0591                     	;# 
  5881  0592                     	;# 
  5882  0593                     	;# 
  5883  059C                     	;# 
  5884  059C                     	;# 
  5885  059D                     	;# 
  5886  059D                     	;# 
  5887  059E                     	;# 
  5888  059F                     	;# 
  5889  060C                     	;# 
  5890  060C                     	;# 
  5891  060D                     	;# 
  5892  060D                     	;# 
  5893  060E                     	;# 
  5894  060F                     	;# 
  5895  0610                     	;# 
  5896  0611                     	;# 
  5897  0612                     	;# 
  5898  0613                     	;# 
  5899  0614                     	;# 
  5900  0616                     	;# 
  5901  0616                     	;# 
  5902  0617                     	;# 
  5903  0617                     	;# 
  5904  0618                     	;# 
  5905  0619                     	;# 
  5906  061A                     	;# 
  5907  061B                     	;# 
  5908  061C                     	;# 
  5909  061D                     	;# 
  5910  061E                     	;# 
  5911  070C                     	;# 
  5912  070D                     	;# 
  5913  070E                     	;# 
  5914  070F                     	;# 
  5915  0710                     	;# 
  5916  0711                     	;# 
  5917  0712                     	;# 
  5918  0713                     	;# 
  5919  0714                     	;# 
  5920  0716                     	;# 
  5921  0717                     	;# 
  5922  0718                     	;# 
  5923  0719                     	;# 
  5924  071A                     	;# 
  5925  071B                     	;# 
  5926  071C                     	;# 
  5927  071D                     	;# 
  5928  071E                     	;# 
  5929  0796                     	;# 
  5930  0797                     	;# 
  5931  0798                     	;# 
  5932  0799                     	;# 
  5933  079A                     	;# 
  5934  079B                     	;# 
  5935  079C                     	;# 
  5936  079D                     	;# 
  5937  080C                     	;# 
  5938  080D                     	;# 
  5939  080E                     	;# 
  5940  080F                     	;# 
  5941  0810                     	;# 
  5942  0811                     	;# 
  5943  0812                     	;# 
  5944  0813                     	;# 
  5945  0814                     	;# 
  5946  081A                     	;# 
  5947  081A                     	;# 
  5948  081B                     	;# 
  5949  081C                     	;# 
  5950  081C                     	;# 
  5951  081D                     	;# 
  5952  081E                     	;# 
  5953  081F                     	;# 
  5954  088C                     	;# 
  5955  088D                     	;# 
  5956  088E                     	;# 
  5957  088F                     	;# 
  5958  0890                     	;# 
  5959  0891                     	;# 
  5960  0892                     	;# 
  5961  0893                     	;# 
  5962  0895                     	;# 
  5963  0896                     	;# 
  5964  0897                     	;# 
  5965  0898                     	;# 
  5966  0899                     	;# 
  5967  089A                     	;# 
  5968  089B                     	;# 
  5969  090C                     	;# 
  5970  090E                     	;# 
  5971  090F                     	;# 
  5972  091F                     	;# 
  5973  098F                     	;# 
  5974  098F                     	;# 
  5975  0990                     	;# 
  5976  0991                     	;# 
  5977  0992                     	;# 
  5978  0993                     	;# 
  5979  0994                     	;# 
  5980  0995                     	;# 
  5981  0996                     	;# 
  5982  0997                     	;# 
  5983  1E0F                     	;# 
  5984  1E10                     	;# 
  5985  1E11                     	;# 
  5986  1E12                     	;# 
  5987  1E13                     	;# 
  5988  1E14                     	;# 
  5989  1E15                     	;# 
  5990  1E16                     	;# 
  5991  1E17                     	;# 
  5992  1E18                     	;# 
  5993  1E19                     	;# 
  5994  1E1A                     	;# 
  5995  1E1B                     	;# 
  5996  1E1C                     	;# 
  5997  1E1D                     	;# 
  5998  1E1E                     	;# 
  5999  1E1F                     	;# 
  6000  1E20                     	;# 
  6001  1E21                     	;# 
  6002  1E22                     	;# 
  6003  1E23                     	;# 
  6004  1E24                     	;# 
  6005  1E25                     	;# 
  6006  1E26                     	;# 
  6007  1E27                     	;# 
  6008  1E28                     	;# 
  6009  1E29                     	;# 
  6010  1E2A                     	;# 
  6011  1E2B                     	;# 
  6012  1E2C                     	;# 
  6013  1E2D                     	;# 
  6014  1E2E                     	;# 
  6015  1E2F                     	;# 
  6016  1E30                     	;# 
  6017  1E31                     	;# 
  6018  1E32                     	;# 
  6019  1E33                     	;# 
  6020  1E34                     	;# 
  6021  1E35                     	;# 
  6022  1E36                     	;# 
  6023  1E37                     	;# 
  6024  1E8F                     	;# 
  6025  1E90                     	;# 
  6026  1E91                     	;# 
  6027  1E92                     	;# 
  6028  1E93                     	;# 
  6029  1E94                     	;# 
  6030  1E95                     	;# 
  6031  1E96                     	;# 
  6032  1E97                     	;# 
  6033  1E9C                     	;# 
  6034  1E9D                     	;# 
  6035  1E9E                     	;# 
  6036  1EA1                     	;# 
  6037  1EA2                     	;# 
  6038  1EA3                     	;# 
  6039  1EA4                     	;# 
  6040  1EA9                     	;# 
  6041  1EAA                     	;# 
  6042  1EB1                     	;# 
  6043  1EB2                     	;# 
  6044  1EB8                     	;# 
  6045  1EB9                     	;# 
  6046  1EBA                     	;# 
  6047  1EBB                     	;# 
  6048  1EBC                     	;# 
  6049  1EBD                     	;# 
  6050  1EBE                     	;# 
  6051  1EC3                     	;# 
  6052  1EC5                     	;# 
  6053  1EC6                     	;# 
  6054  1EC7                     	;# 
  6055  1EC8                     	;# 
  6056  1EC9                     	;# 
  6057  1ECA                     	;# 
  6058  1ECB                     	;# 
  6059  1ECB                     	;# 
  6060  1ECB                     	;# 
  6061  1ECC                     	;# 
  6062  1ECC                     	;# 
  6063  1ECC                     	;# 
  6064  1F10                     	;# 
  6065  1F11                     	;# 
  6066  1F12                     	;# 
  6067  1F14                     	;# 
  6068  1F15                     	;# 
  6069  1F1C                     	;# 
  6070  1F1D                     	;# 
  6071  1F1E                     	;# 
  6072  1F1F                     	;# 
  6073  1F20                     	;# 
  6074  1F21                     	;# 
  6075  1F22                     	;# 
  6076  1F23                     	;# 
  6077  1F24                     	;# 
  6078  1F25                     	;# 
  6079  1F26                     	;# 
  6080  1F27                     	;# 
  6081  1F38                     	;# 
  6082  1F39                     	;# 
  6083  1F3A                     	;# 
  6084  1F3B                     	;# 
  6085  1F3C                     	;# 
  6086  1F3D                     	;# 
  6087  1F3E                     	;# 
  6088  1F3F                     	;# 
  6089  1F43                     	;# 
  6090  1F44                     	;# 
  6091  1F45                     	;# 
  6092  1F46                     	;# 
  6093  1F47                     	;# 
  6094  1F48                     	;# 
  6095  1F49                     	;# 
  6096  1F4A                     	;# 
  6097  1F4E                     	;# 
  6098  1F4F                     	;# 
  6099  1F50                     	;# 
  6100  1F51                     	;# 
  6101  1F52                     	;# 
  6102  1F53                     	;# 
  6103  1F54                     	;# 
  6104  1F55                     	;# 
  6105  1FE4                     	;# 
  6106  1FE5                     	;# 
  6107  1FE6                     	;# 
  6108  1FE7                     	;# 
  6109  1FE8                     	;# 
  6110  1FE8                     	;# 
  6111  1FE9                     	;# 
  6112  1FEA                     	;# 
  6113  1FEB                     	;# 
  6114  1FED                     	;# 
  6115  1FEE                     	;# 
  6116  1FEF                     	;# 
  6117  0000                     	;# 
  6118  0001                     	;# 
  6119  0002                     	;# 
  6120  0003                     	;# 
  6121  0004                     	;# 
  6122  0005                     	;# 
  6123  0006                     	;# 
  6124  0007                     	;# 
  6125  0008                     	;# 
  6126  0009                     	;# 
  6127  000A                     	;# 
  6128  000B                     	;# 
  6129  000C                     	;# 
  6130  000D                     	;# 
  6131  000E                     	;# 
  6132  0012                     	;# 
  6133  0013                     	;# 
  6134  0014                     	;# 
  6135  0018                     	;# 
  6136  0019                     	;# 
  6137  001A                     	;# 
  6138  008C                     	;# 
  6139  008C                     	;# 
  6140  008D                     	;# 
  6141  008E                     	;# 
  6142  008E                     	;# 
  6143  008F                     	;# 
  6144  0090                     	;# 
  6145  0090                     	;# 
  6146  0091                     	;# 
  6147  0092                     	;# 
  6148  0092                     	;# 
  6149  0093                     	;# 
  6150  0094                     	;# 
  6151  0094                     	;# 
  6152  0095                     	;# 
  6153  0096                     	;# 
  6154  0096                     	;# 
  6155  0097                     	;# 
  6156  0098                     	;# 
  6157  0099                     	;# 
  6158  009A                     	;# 
  6159  009B                     	;# 
  6160  009B                     	;# 
  6161  009C                     	;# 
  6162  009D                     	;# 
  6163  009D                     	;# 
  6164  009E                     	;# 
  6165  009F                     	;# 
  6166  010C                     	;# 
  6167  010C                     	;# 
  6168  010D                     	;# 
  6169  010E                     	;# 
  6170  010F                     	;# 
  6171  010F                     	;# 
  6172  0110                     	;# 
  6173  0111                     	;# 
  6174  0112                     	;# 
  6175  0113                     	;# 
  6176  0114                     	;# 
  6177  0115                     	;# 
  6178  0116                     	;# 
  6179  0117                     	;# 
  6180  0118                     	;# 
  6181  0119                     	;# 
  6182  0119                     	;# 
  6183  0119                     	;# 
  6184  011A                     	;# 
  6185  011A                     	;# 
  6186  011A                     	;# 
  6187  011B                     	;# 
  6188  011B                     	;# 
  6189  011B                     	;# 
  6190  011B                     	;# 
  6191  011B                     	;# 
  6192  011C                     	;# 
  6193  011C                     	;# 
  6194  011C                     	;# 
  6195  011D                     	;# 
  6196  011D                     	;# 
  6197  011D                     	;# 
  6198  011E                     	;# 
  6199  011E                     	;# 
  6200  011E                     	;# 
  6201  011F                     	;# 
  6202  011F                     	;# 
  6203  011F                     	;# 
  6204  011F                     	;# 
  6205  011F                     	;# 
  6206  018C                     	;# 
  6207  018D                     	;# 
  6208  018E                     	;# 
  6209  018F                     	;# 
  6210  0190                     	;# 
  6211  0191                     	;# 
  6212  0192                     	;# 
  6213  0196                     	;# 
  6214  0197                     	;# 
  6215  0198                     	;# 
  6216  0199                     	;# 
  6217  019A                     	;# 
  6218  019B                     	;# 
  6219  019C                     	;# 
  6220  020C                     	;# 
  6221  020D                     	;# 
  6222  020E                     	;# 
  6223  020E                     	;# 
  6224  020F                     	;# 
  6225  020F                     	;# 
  6226  0210                     	;# 
  6227  0210                     	;# 
  6228  0211                     	;# 
  6229  0211                     	;# 
  6230  0212                     	;# 
  6231  0213                     	;# 
  6232  0214                     	;# 
  6233  0214                     	;# 
  6234  0215                     	;# 
  6235  0215                     	;# 
  6236  0216                     	;# 
  6237  0216                     	;# 
  6238  0217                     	;# 
  6239  0217                     	;# 
  6240  0218                     	;# 
  6241  0219                     	;# 
  6242  021A                     	;# 
  6243  021A                     	;# 
  6244  021B                     	;# 
  6245  021B                     	;# 
  6246  021C                     	;# 
  6247  021C                     	;# 
  6248  021D                     	;# 
  6249  021D                     	;# 
  6250  021E                     	;# 
  6251  021F                     	;# 
  6252  028C                     	;# 
  6253  028C                     	;# 
  6254  028D                     	;# 
  6255  028D                     	;# 
  6256  028E                     	;# 
  6257  028F                     	;# 
  6258  0290                     	;# 
  6259  0291                     	;# 
  6260  0292                     	;# 
  6261  0292                     	;# 
  6262  0293                     	;# 
  6263  0293                     	;# 
  6264  0294                     	;# 
  6265  0295                     	;# 
  6266  0296                     	;# 
  6267  0297                     	;# 
  6268  0298                     	;# 
  6269  0298                     	;# 
  6270  0299                     	;# 
  6271  0299                     	;# 
  6272  029A                     	;# 
  6273  029B                     	;# 
  6274  029C                     	;# 
  6275  029D                     	;# 
  6276  029F                     	;# 
  6277  030C                     	;# 
  6278  030C                     	;# 
  6279  030D                     	;# 
  6280  030E                     	;# 
  6281  030F                     	;# 
  6282  0310                     	;# 
  6283  0310                     	;# 
  6284  0311                     	;# 
  6285  0312                     	;# 
  6286  0313                     	;# 
  6287  0314                     	;# 
  6288  0314                     	;# 
  6289  0315                     	;# 
  6290  0316                     	;# 
  6291  0317                     	;# 
  6292  0318                     	;# 
  6293  0318                     	;# 
  6294  0319                     	;# 
  6295  031A                     	;# 
  6296  031B                     	;# 
  6297  038C                     	;# 
  6298  038C                     	;# 
  6299  038D                     	;# 
  6300  038E                     	;# 
  6301  0390                     	;# 
  6302  0390                     	;# 
  6303  0391                     	;# 
  6304  0392                     	;# 
  6305  048C                     	;# 
  6306  048C                     	;# 
  6307  048D                     	;# 
  6308  048E                     	;# 
  6309  048F                     	;# 
  6310  048F                     	;# 
  6311  0490                     	;# 
  6312  0491                     	;# 
  6313  0492                     	;# 
  6314  0492                     	;# 
  6315  0493                     	;# 
  6316  0494                     	;# 
  6317  0495                     	;# 
  6318  0495                     	;# 
  6319  0496                     	;# 
  6320  0497                     	;# 
  6321  0498                     	;# 
  6322  0499                     	;# 
  6323  049A                     	;# 
  6324  049B                     	;# 
  6325  049C                     	;# 
  6326  049D                     	;# 
  6327  058C                     	;# 
  6328  058C                     	;# 
  6329  058D                     	;# 
  6330  058E                     	;# 
  6331  058F                     	;# 
  6332  058F                     	;# 
  6333  0590                     	;# 
  6334  0591                     	;# 
  6335  0592                     	;# 
  6336  0593                     	;# 
  6337  059C                     	;# 
  6338  059C                     	;# 
  6339  059D                     	;# 
  6340  059D                     	;# 
  6341  059E                     	;# 
  6342  059F                     	;# 
  6343  060C                     	;# 
  6344  060C                     	;# 
  6345  060D                     	;# 
  6346  060D                     	;# 
  6347  060E                     	;# 
  6348  060F                     	;# 
  6349  0610                     	;# 
  6350  0611                     	;# 
  6351  0612                     	;# 
  6352  0613                     	;# 
  6353  0614                     	;# 
  6354  0616                     	;# 
  6355  0616                     	;# 
  6356  0617                     	;# 
  6357  0617                     	;# 
  6358  0618                     	;# 
  6359  0619                     	;# 
  6360  061A                     	;# 
  6361  061B                     	;# 
  6362  061C                     	;# 
  6363  061D                     	;# 
  6364  061E                     	;# 
  6365  070C                     	;# 
  6366  070D                     	;# 
  6367  070E                     	;# 
  6368  070F                     	;# 
  6369  0710                     	;# 
  6370  0711                     	;# 
  6371  0712                     	;# 
  6372  0713                     	;# 
  6373  0714                     	;# 
  6374  0716                     	;# 
  6375  0717                     	;# 
  6376  0718                     	;# 
  6377  0719                     	;# 
  6378  071A                     	;# 
  6379  071B                     	;# 
  6380  071C                     	;# 
  6381  071D                     	;# 
  6382  071E                     	;# 
  6383  0796                     	;# 
  6384  0797                     	;# 
  6385  0798                     	;# 
  6386  0799                     	;# 
  6387  079A                     	;# 
  6388  079B                     	;# 
  6389  079C                     	;# 
  6390  079D                     	;# 
  6391  080C                     	;# 
  6392  080D                     	;# 
  6393  080E                     	;# 
  6394  080F                     	;# 
  6395  0810                     	;# 
  6396  0811                     	;# 
  6397  0812                     	;# 
  6398  0813                     	;# 
  6399  0814                     	;# 
  6400  081A                     	;# 
  6401  081A                     	;# 
  6402  081B                     	;# 
  6403  081C                     	;# 
  6404  081C                     	;# 
  6405  081D                     	;# 
  6406  081E                     	;# 
  6407  081F                     	;# 
  6408  088C                     	;# 
  6409  088D                     	;# 
  6410  088E                     	;# 
  6411  088F                     	;# 
  6412  0890                     	;# 
  6413  0891                     	;# 
  6414  0892                     	;# 
  6415  0893                     	;# 
  6416  0895                     	;# 
  6417  0896                     	;# 
  6418  0897                     	;# 
  6419  0898                     	;# 
  6420  0899                     	;# 
  6421  089A                     	;# 
  6422  089B                     	;# 
  6423  090C                     	;# 
  6424  090E                     	;# 
  6425  090F                     	;# 
  6426  091F                     	;# 
  6427  098F                     	;# 
  6428  098F                     	;# 
  6429  0990                     	;# 
  6430  0991                     	;# 
  6431  0992                     	;# 
  6432  0993                     	;# 
  6433  0994                     	;# 
  6434  0995                     	;# 
  6435  0996                     	;# 
  6436  0997                     	;# 
  6437  1E0F                     	;# 
  6438  1E10                     	;# 
  6439  1E11                     	;# 
  6440  1E12                     	;# 
  6441  1E13                     	;# 
  6442  1E14                     	;# 
  6443  1E15                     	;# 
  6444  1E16                     	;# 
  6445  1E17                     	;# 
  6446  1E18                     	;# 
  6447  1E19                     	;# 
  6448  1E1A                     	;# 
  6449  1E1B                     	;# 
  6450  1E1C                     	;# 
  6451  1E1D                     	;# 
  6452  1E1E                     	;# 
  6453  1E1F                     	;# 
  6454  1E20                     	;# 
  6455  1E21                     	;# 
  6456  1E22                     	;# 
  6457  1E23                     	;# 
  6458  1E24                     	;# 
  6459  1E25                     	;# 
  6460  1E26                     	;# 
  6461  1E27                     	;# 
  6462  1E28                     	;# 
  6463  1E29                     	;# 
  6464  1E2A                     	;# 
  6465  1E2B                     	;# 
  6466  1E2C                     	;# 
  6467  1E2D                     	;# 
  6468  1E2E                     	;# 
  6469  1E2F                     	;# 
  6470  1E30                     	;# 
  6471  1E31                     	;# 
  6472  1E32                     	;# 
  6473  1E33                     	;# 
  6474  1E34                     	;# 
  6475  1E35                     	;# 
  6476  1E36                     	;# 
  6477  1E37                     	;# 
  6478  1E8F                     	;# 
  6479  1E90                     	;# 
  6480  1E91                     	;# 
  6481  1E92                     	;# 
  6482  1E93                     	;# 
  6483  1E94                     	;# 
  6484  1E95                     	;# 
  6485  1E96                     	;# 
  6486  1E97                     	;# 
  6487  1E9C                     	;# 
  6488  1E9D                     	;# 
  6489  1E9E                     	;# 
  6490  1EA1                     	;# 
  6491  1EA2                     	;# 
  6492  1EA3                     	;# 
  6493  1EA4                     	;# 
  6494  1EA9                     	;# 
  6495  1EAA                     	;# 
  6496  1EB1                     	;# 
  6497  1EB2                     	;# 
  6498  1EB8                     	;# 
  6499  1EB9                     	;# 
  6500  1EBA                     	;# 
  6501  1EBB                     	;# 
  6502  1EBC                     	;# 
  6503  1EBD                     	;# 
  6504  1EBE                     	;# 
  6505  1EC3                     	;# 
  6506  1EC5                     	;# 
  6507  1EC6                     	;# 
  6508  1EC7                     	;# 
  6509  1EC8                     	;# 
  6510  1EC9                     	;# 
  6511  1ECA                     	;# 
  6512  1ECB                     	;# 
  6513  1ECB                     	;# 
  6514  1ECB                     	;# 
  6515  1ECC                     	;# 
  6516  1ECC                     	;# 
  6517  1ECC                     	;# 
  6518  1F10                     	;# 
  6519  1F11                     	;# 
  6520  1F12                     	;# 
  6521  1F14                     	;# 
  6522  1F15                     	;# 
  6523  1F1C                     	;# 
  6524  1F1D                     	;# 
  6525  1F1E                     	;# 
  6526  1F1F                     	;# 
  6527  1F20                     	;# 
  6528  1F21                     	;# 
  6529  1F22                     	;# 
  6530  1F23                     	;# 
  6531  1F24                     	;# 
  6532  1F25                     	;# 
  6533  1F26                     	;# 
  6534  1F27                     	;# 
  6535  1F38                     	;# 
  6536  1F39                     	;# 
  6537  1F3A                     	;# 
  6538  1F3B                     	;# 
  6539  1F3C                     	;# 
  6540  1F3D                     	;# 
  6541  1F3E                     	;# 
  6542  1F3F                     	;# 
  6543  1F43                     	;# 
  6544  1F44                     	;# 
  6545  1F45                     	;# 
  6546  1F46                     	;# 
  6547  1F47                     	;# 
  6548  1F48                     	;# 
  6549  1F49                     	;# 
  6550  1F4A                     	;# 
  6551  1F4E                     	;# 
  6552  1F4F                     	;# 
  6553  1F50                     	;# 
  6554  1F51                     	;# 
  6555  1F52                     	;# 
  6556  1F53                     	;# 
  6557  1F54                     	;# 
  6558  1F55                     	;# 
  6559  1FE4                     	;# 
  6560  1FE5                     	;# 
  6561  1FE6                     	;# 
  6562  1FE7                     	;# 
  6563  1FE8                     	;# 
  6564  1FE8                     	;# 
  6565  1FE9                     	;# 
  6566  1FEA                     	;# 
  6567  1FEB                     	;# 
  6568  1FED                     	;# 
  6569  1FEE                     	;# 
  6570  1FEF                     	;# 
  6571  0000                     	;# 
  6572  0001                     	;# 
  6573  0002                     	;# 
  6574  0003                     	;# 
  6575  0004                     	;# 
  6576  0005                     	;# 
  6577  0006                     	;# 
  6578  0007                     	;# 
  6579  0008                     	;# 
  6580  0009                     	;# 
  6581  000A                     	;# 
  6582  000B                     	;# 
  6583  000C                     	;# 
  6584  000D                     	;# 
  6585  000E                     	;# 
  6586  0012                     	;# 
  6587  0013                     	;# 
  6588  0014                     	;# 
  6589  0018                     	;# 
  6590  0019                     	;# 
  6591  001A                     	;# 
  6592  008C                     	;# 
  6593  008C                     	;# 
  6594  008D                     	;# 
  6595  008E                     	;# 
  6596  008E                     	;# 
  6597  008F                     	;# 
  6598  0090                     	;# 
  6599  0090                     	;# 
  6600  0091                     	;# 
  6601  0092                     	;# 
  6602  0092                     	;# 
  6603  0093                     	;# 
  6604  0094                     	;# 
  6605  0094                     	;# 
  6606  0095                     	;# 
  6607  0096                     	;# 
  6608  0096                     	;# 
  6609  0097                     	;# 
  6610  0098                     	;# 
  6611  0099                     	;# 
  6612  009A                     	;# 
  6613  009B                     	;# 
  6614  009B                     	;# 
  6615  009C                     	;# 
  6616  009D                     	;# 
  6617  009D                     	;# 
  6618  009E                     	;# 
  6619  009F                     	;# 
  6620  010C                     	;# 
  6621  010C                     	;# 
  6622  010D                     	;# 
  6623  010E                     	;# 
  6624  010F                     	;# 
  6625  010F                     	;# 
  6626  0110                     	;# 
  6627  0111                     	;# 
  6628  0112                     	;# 
  6629  0113                     	;# 
  6630  0114                     	;# 
  6631  0115                     	;# 
  6632  0116                     	;# 
  6633  0117                     	;# 
  6634  0118                     	;# 
  6635  0119                     	;# 
  6636  0119                     	;# 
  6637  0119                     	;# 
  6638  011A                     	;# 
  6639  011A                     	;# 
  6640  011A                     	;# 
  6641  011B                     	;# 
  6642  011B                     	;# 
  6643  011B                     	;# 
  6644  011B                     	;# 
  6645  011B                     	;# 
  6646  011C                     	;# 
  6647  011C                     	;# 
  6648  011C                     	;# 
  6649  011D                     	;# 
  6650  011D                     	;# 
  6651  011D                     	;# 
  6652  011E                     	;# 
  6653  011E                     	;# 
  6654  011E                     	;# 
  6655  011F                     	;# 
  6656  011F                     	;# 
  6657  011F                     	;# 
  6658  011F                     	;# 
  6659  011F                     	;# 
  6660  018C                     	;# 
  6661  018D                     	;# 
  6662  018E                     	;# 
  6663  018F                     	;# 
  6664  0190                     	;# 
  6665  0191                     	;# 
  6666  0192                     	;# 
  6667  0196                     	;# 
  6668  0197                     	;# 
  6669  0198                     	;# 
  6670  0199                     	;# 
  6671  019A                     	;# 
  6672  019B                     	;# 
  6673  019C                     	;# 
  6674  020C                     	;# 
  6675  020D                     	;# 
  6676  020E                     	;# 
  6677  020E                     	;# 
  6678  020F                     	;# 
  6679  020F                     	;# 
  6680  0210                     	;# 
  6681  0210                     	;# 
  6682  0211                     	;# 
  6683  0211                     	;# 
  6684  0212                     	;# 
  6685  0213                     	;# 
  6686  0214                     	;# 
  6687  0214                     	;# 
  6688  0215                     	;# 
  6689  0215                     	;# 
  6690  0216                     	;# 
  6691  0216                     	;# 
  6692  0217                     	;# 
  6693  0217                     	;# 
  6694  0218                     	;# 
  6695  0219                     	;# 
  6696  021A                     	;# 
  6697  021A                     	;# 
  6698  021B                     	;# 
  6699  021B                     	;# 
  6700  021C                     	;# 
  6701  021C                     	;# 
  6702  021D                     	;# 
  6703  021D                     	;# 
  6704  021E                     	;# 
  6705  021F                     	;# 
  6706  028C                     	;# 
  6707  028C                     	;# 
  6708  028D                     	;# 
  6709  028D                     	;# 
  6710  028E                     	;# 
  6711  028F                     	;# 
  6712  0290                     	;# 
  6713  0291                     	;# 
  6714  0292                     	;# 
  6715  0292                     	;# 
  6716  0293                     	;# 
  6717  0293                     	;# 
  6718  0294                     	;# 
  6719  0295                     	;# 
  6720  0296                     	;# 
  6721  0297                     	;# 
  6722  0298                     	;# 
  6723  0298                     	;# 
  6724  0299                     	;# 
  6725  0299                     	;# 
  6726  029A                     	;# 
  6727  029B                     	;# 
  6728  029C                     	;# 
  6729  029D                     	;# 
  6730  029F                     	;# 
  6731  030C                     	;# 
  6732  030C                     	;# 
  6733  030D                     	;# 
  6734  030E                     	;# 
  6735  030F                     	;# 
  6736  0310                     	;# 
  6737  0310                     	;# 
  6738  0311                     	;# 
  6739  0312                     	;# 
  6740  0313                     	;# 
  6741  0314                     	;# 
  6742  0314                     	;# 
  6743  0315                     	;# 
  6744  0316                     	;# 
  6745  0317                     	;# 
  6746  0318                     	;# 
  6747  0318                     	;# 
  6748  0319                     	;# 
  6749  031A                     	;# 
  6750  031B                     	;# 
  6751  038C                     	;# 
  6752  038C                     	;# 
  6753  038D                     	;# 
  6754  038E                     	;# 
  6755  0390                     	;# 
  6756  0390                     	;# 
  6757  0391                     	;# 
  6758  0392                     	;# 
  6759  048C                     	;# 
  6760  048C                     	;# 
  6761  048D                     	;# 
  6762  048E                     	;# 
  6763  048F                     	;# 
  6764  048F                     	;# 
  6765  0490                     	;# 
  6766  0491                     	;# 
  6767  0492                     	;# 
  6768  0492                     	;# 
  6769  0493                     	;# 
  6770  0494                     	;# 
  6771  0495                     	;# 
  6772  0495                     	;# 
  6773  0496                     	;# 
  6774  0497                     	;# 
  6775  0498                     	;# 
  6776  0499                     	;# 
  6777  049A                     	;# 
  6778  049B                     	;# 
  6779  049C                     	;# 
  6780  049D                     	;# 
  6781  058C                     	;# 
  6782  058C                     	;# 
  6783  058D                     	;# 
  6784  058E                     	;# 
  6785  058F                     	;# 
  6786  058F                     	;# 
  6787  0590                     	;# 
  6788  0591                     	;# 
  6789  0592                     	;# 
  6790  0593                     	;# 
  6791  059C                     	;# 
  6792  059C                     	;# 
  6793  059D                     	;# 
  6794  059D                     	;# 
  6795  059E                     	;# 
  6796  059F                     	;# 
  6797  060C                     	;# 
  6798  060C                     	;# 
  6799  060D                     	;# 
  6800  060D                     	;# 
  6801  060E                     	;# 
  6802  060F                     	;# 
  6803  0610                     	;# 
  6804  0611                     	;# 
  6805  0612                     	;# 
  6806  0613                     	;# 
  6807  0614                     	;# 
  6808  0616                     	;# 
  6809  0616                     	;# 
  6810  0617                     	;# 
  6811  0617                     	;# 
  6812  0618                     	;# 
  6813  0619                     	;# 
  6814  061A                     	;# 
  6815  061B                     	;# 
  6816  061C                     	;# 
  6817  061D                     	;# 
  6818  061E                     	;# 
  6819  070C                     	;# 
  6820  070D                     	;# 
  6821  070E                     	;# 
  6822  070F                     	;# 
  6823  0710                     	;# 
  6824  0711                     	;# 
  6825  0712                     	;# 
  6826  0713                     	;# 
  6827  0714                     	;# 
  6828  0716                     	;# 
  6829  0717                     	;# 
  6830  0718                     	;# 
  6831  0719                     	;# 
  6832  071A                     	;# 
  6833  071B                     	;# 
  6834  071C                     	;# 
  6835  071D                     	;# 
  6836  071E                     	;# 
  6837  0796                     	;# 
  6838  0797                     	;# 
  6839  0798                     	;# 
  6840  0799                     	;# 
  6841  079A                     	;# 
  6842  079B                     	;# 
  6843  079C                     	;# 
  6844  079D                     	;# 
  6845  080C                     	;# 
  6846  080D                     	;# 
  6847  080E                     	;# 
  6848  080F                     	;# 
  6849  0810                     	;# 
  6850  0811                     	;# 
  6851  0812                     	;# 
  6852  0813                     	;# 
  6853  0814                     	;# 
  6854  081A                     	;# 
  6855  081A                     	;# 
  6856  081B                     	;# 
  6857  081C                     	;# 
  6858  081C                     	;# 
  6859  081D                     	;# 
  6860  081E                     	;# 
  6861  081F                     	;# 
  6862  088C                     	;# 
  6863  088D                     	;# 
  6864  088E                     	;# 
  6865  088F                     	;# 
  6866  0890                     	;# 
  6867  0891                     	;# 
  6868  0892                     	;# 
  6869  0893                     	;# 
  6870  0895                     	;# 
  6871  0896                     	;# 
  6872  0897                     	;# 
  6873  0898                     	;# 
  6874  0899                     	;# 
  6875  089A                     	;# 
  6876  089B                     	;# 
  6877  090C                     	;# 
  6878  090E                     	;# 
  6879  090F                     	;# 
  6880  091F                     	;# 
  6881  098F                     	;# 
  6882  098F                     	;# 
  6883  0990                     	;# 
  6884  0991                     	;# 
  6885  0992                     	;# 
  6886  0993                     	;# 
  6887  0994                     	;# 
  6888  0995                     	;# 
  6889  0996                     	;# 
  6890  0997                     	;# 
  6891  1E0F                     	;# 
  6892  1E10                     	;# 
  6893  1E11                     	;# 
  6894  1E12                     	;# 
  6895  1E13                     	;# 
  6896  1E14                     	;# 
  6897  1E15                     	;# 
  6898  1E16                     	;# 
  6899  1E17                     	;# 
  6900  1E18                     	;# 
  6901  1E19                     	;# 
  6902  1E1A                     	;# 
  6903  1E1B                     	;# 
  6904  1E1C                     	;# 
  6905  1E1D                     	;# 
  6906  1E1E                     	;# 
  6907  1E1F                     	;# 
  6908  1E20                     	;# 
  6909  1E21                     	;# 
  6910  1E22                     	;# 
  6911  1E23                     	;# 
  6912  1E24                     	;# 
  6913  1E25                     	;# 
  6914  1E26                     	;# 
  6915  1E27                     	;# 
  6916  1E28                     	;# 
  6917  1E29                     	;# 
  6918  1E2A                     	;# 
  6919  1E2B                     	;# 
  6920  1E2C                     	;# 
  6921  1E2D                     	;# 
  6922  1E2E                     	;# 
  6923  1E2F                     	;# 
  6924  1E30                     	;# 
  6925  1E31                     	;# 
  6926  1E32                     	;# 
  6927  1E33                     	;# 
  6928  1E34                     	;# 
  6929  1E35                     	;# 
  6930  1E36                     	;# 
  6931  1E37                     	;# 
  6932  1E8F                     	;# 
  6933  1E90                     	;# 
  6934  1E91                     	;# 
  6935  1E92                     	;# 
  6936  1E93                     	;# 
  6937  1E94                     	;# 
  6938  1E95                     	;# 
  6939  1E96                     	;# 
  6940  1E97                     	;# 
  6941  1E9C                     	;# 
  6942  1E9D                     	;# 
  6943  1E9E                     	;# 
  6944  1EA1                     	;# 
  6945  1EA2                     	;# 
  6946  1EA3                     	;# 
  6947  1EA4                     	;# 
  6948  1EA9                     	;# 
  6949  1EAA                     	;# 
  6950  1EB1                     	;# 
  6951  1EB2                     	;# 
  6952  1EB8                     	;# 
  6953  1EB9                     	;# 
  6954  1EBA                     	;# 
  6955  1EBB                     	;# 
  6956  1EBC                     	;# 
  6957  1EBD                     	;# 
  6958  1EBE                     	;# 
  6959  1EC3                     	;# 
  6960  1EC5                     	;# 
  6961  1EC6                     	;# 
  6962  1EC7                     	;# 
  6963  1EC8                     	;# 
  6964  1EC9                     	;# 
  6965  1ECA                     	;# 
  6966  1ECB                     	;# 
  6967  1ECB                     	;# 
  6968  1ECB                     	;# 
  6969  1ECC                     	;# 
  6970  1ECC                     	;# 
  6971  1ECC                     	;# 
  6972  1F10                     	;# 
  6973  1F11                     	;# 
  6974  1F12                     	;# 
  6975  1F14                     	;# 
  6976  1F15                     	;# 
  6977  1F1C                     	;# 
  6978  1F1D                     	;# 
  6979  1F1E                     	;# 
  6980  1F1F                     	;# 
  6981  1F20                     	;# 
  6982  1F21                     	;# 
  6983  1F22                     	;# 
  6984  1F23                     	;# 
  6985  1F24                     	;# 
  6986  1F25                     	;# 
  6987  1F26                     	;# 
  6988  1F27                     	;# 
  6989  1F38                     	;# 
  6990  1F39                     	;# 
  6991  1F3A                     	;# 
  6992  1F3B                     	;# 
  6993  1F3C                     	;# 
  6994  1F3D                     	;# 
  6995  1F3E                     	;# 
  6996  1F3F                     	;# 
  6997  1F43                     	;# 
  6998  1F44                     	;# 
  6999  1F45                     	;# 
  7000  1F46                     	;# 
  7001  1F47                     	;# 
  7002  1F48                     	;# 
  7003  1F49                     	;# 
  7004  1F4A                     	;# 
  7005  1F4E                     	;# 
  7006  1F4F                     	;# 
  7007  1F50                     	;# 
  7008  1F51                     	;# 
  7009  1F52                     	;# 
  7010  1F53                     	;# 
  7011  1F54                     	;# 
  7012  1F55                     	;# 
  7013  1FE4                     	;# 
  7014  1FE5                     	;# 
  7015  1FE6                     	;# 
  7016  1FE7                     	;# 
  7017  1FE8                     	;# 
  7018  1FE8                     	;# 
  7019  1FE9                     	;# 
  7020  1FEA                     	;# 
  7021  1FEB                     	;# 
  7022  1FED                     	;# 
  7023  1FEE                     	;# 
  7024  1FEF                     	;# 
  7025  0000                     	;# 
  7026  0001                     	;# 
  7027  0002                     	;# 
  7028  0003                     	;# 
  7029  0004                     	;# 
  7030  0005                     	;# 
  7031  0006                     	;# 
  7032  0007                     	;# 
  7033  0008                     	;# 
  7034  0009                     	;# 
  7035  000A                     	;# 
  7036  000B                     	;# 
  7037  000C                     	;# 
  7038  000D                     	;# 
  7039  000E                     	;# 
  7040  0012                     	;# 
  7041  0013                     	;# 
  7042  0014                     	;# 
  7043  0018                     	;# 
  7044  0019                     	;# 
  7045  001A                     	;# 
  7046  008C                     	;# 
  7047  008C                     	;# 
  7048  008D                     	;# 
  7049  008E                     	;# 
  7050  008E                     	;# 
  7051  008F                     	;# 
  7052  0090                     	;# 
  7053  0090                     	;# 
  7054  0091                     	;# 
  7055  0092                     	;# 
  7056  0092                     	;# 
  7057  0093                     	;# 
  7058  0094                     	;# 
  7059  0094                     	;# 
  7060  0095                     	;# 
  7061  0096                     	;# 
  7062  0096                     	;# 
  7063  0097                     	;# 
  7064  0098                     	;# 
  7065  0099                     	;# 
  7066  009A                     	;# 
  7067  009B                     	;# 
  7068  009B                     	;# 
  7069  009C                     	;# 
  7070  009D                     	;# 
  7071  009D                     	;# 
  7072  009E                     	;# 
  7073  009F                     	;# 
  7074  010C                     	;# 
  7075  010C                     	;# 
  7076  010D                     	;# 
  7077  010E                     	;# 
  7078  010F                     	;# 
  7079  010F                     	;# 
  7080  0110                     	;# 
  7081  0111                     	;# 
  7082  0112                     	;# 
  7083  0113                     	;# 
  7084  0114                     	;# 
  7085  0115                     	;# 
  7086  0116                     	;# 
  7087  0117                     	;# 
  7088  0118                     	;# 
  7089  0119                     	;# 
  7090  0119                     	;# 
  7091  0119                     	;# 
  7092  011A                     	;# 
  7093  011A                     	;# 
  7094  011A                     	;# 
  7095  011B                     	;# 
  7096  011B                     	;# 
  7097  011B                     	;# 
  7098  011B                     	;# 
  7099  011B                     	;# 
  7100  011C                     	;# 
  7101  011C                     	;# 
  7102  011C                     	;# 
  7103  011D                     	;# 
  7104  011D                     	;# 
  7105  011D                     	;# 
  7106  011E                     	;# 
  7107  011E                     	;# 
  7108  011E                     	;# 
  7109  011F                     	;# 
  7110  011F                     	;# 
  7111  011F                     	;# 
  7112  011F                     	;# 
  7113  011F                     	;# 
  7114  018C                     	;# 
  7115  018D                     	;# 
  7116  018E                     	;# 
  7117  018F                     	;# 
  7118  0190                     	;# 
  7119  0191                     	;# 
  7120  0192                     	;# 
  7121  0196                     	;# 
  7122  0197                     	;# 
  7123  0198                     	;# 
  7124  0199                     	;# 
  7125  019A                     	;# 
  7126  019B                     	;# 
  7127  019C                     	;# 
  7128  020C                     	;# 
  7129  020D                     	;# 
  7130  020E                     	;# 
  7131  020E                     	;# 
  7132  020F                     	;# 
  7133  020F                     	;# 
  7134  0210                     	;# 
  7135  0210                     	;# 
  7136  0211                     	;# 
  7137  0211                     	;# 
  7138  0212                     	;# 
  7139  0213                     	;# 
  7140  0214                     	;# 
  7141  0214                     	;# 
  7142  0215                     	;# 
  7143  0215                     	;# 
  7144  0216                     	;# 
  7145  0216                     	;# 
  7146  0217                     	;# 
  7147  0217                     	;# 
  7148  0218                     	;# 
  7149  0219                     	;# 
  7150  021A                     	;# 
  7151  021A                     	;# 
  7152  021B                     	;# 
  7153  021B                     	;# 
  7154  021C                     	;# 
  7155  021C                     	;# 
  7156  021D                     	;# 
  7157  021D                     	;# 
  7158  021E                     	;# 
  7159  021F                     	;# 
  7160  028C                     	;# 
  7161  028C                     	;# 
  7162  028D                     	;# 
  7163  028D                     	;# 
  7164  028E                     	;# 
  7165  028F                     	;# 
  7166  0290                     	;# 
  7167  0291                     	;# 
  7168  0292                     	;# 
  7169  0292                     	;# 
  7170  0293                     	;# 
  7171  0293                     	;# 
  7172  0294                     	;# 
  7173  0295                     	;# 
  7174  0296                     	;# 
  7175  0297                     	;# 
  7176  0298                     	;# 
  7177  0298                     	;# 
  7178  0299                     	;# 
  7179  0299                     	;# 
  7180  029A                     	;# 
  7181  029B                     	;# 
  7182  029C                     	;# 
  7183  029D                     	;# 
  7184  029F                     	;# 
  7185  030C                     	;# 
  7186  030C                     	;# 
  7187  030D                     	;# 
  7188  030E                     	;# 
  7189  030F                     	;# 
  7190  0310                     	;# 
  7191  0310                     	;# 
  7192  0311                     	;# 
  7193  0312                     	;# 
  7194  0313                     	;# 
  7195  0314                     	;# 
  7196  0314                     	;# 
  7197  0315                     	;# 
  7198  0316                     	;# 
  7199  0317                     	;# 
  7200  0318                     	;# 
  7201  0318                     	;# 
  7202  0319                     	;# 
  7203  031A                     	;# 
  7204  031B                     	;# 
  7205  038C                     	;# 
  7206  038C                     	;# 
  7207  038D                     	;# 
  7208  038E                     	;# 
  7209  0390                     	;# 
  7210  0390                     	;# 
  7211  0391                     	;# 
  7212  0392                     	;# 
  7213  048C                     	;# 
  7214  048C                     	;# 
  7215  048D                     	;# 
  7216  048E                     	;# 
  7217  048F                     	;# 
  7218  048F                     	;# 
  7219  0490                     	;# 
  7220  0491                     	;# 
  7221  0492                     	;# 
  7222  0492                     	;# 
  7223  0493                     	;# 
  7224  0494                     	;# 
  7225  0495                     	;# 
  7226  0495                     	;# 
  7227  0496                     	;# 
  7228  0497                     	;# 
  7229  0498                     	;# 
  7230  0499                     	;# 
  7231  049A                     	;# 
  7232  049B                     	;# 
  7233  049C                     	;# 
  7234  049D                     	;# 
  7235  058C                     	;# 
  7236  058C                     	;# 
  7237  058D                     	;# 
  7238  058E                     	;# 
  7239  058F                     	;# 
  7240  058F                     	;# 
  7241  0590                     	;# 
  7242  0591                     	;# 
  7243  0592                     	;# 
  7244  0593                     	;# 
  7245  059C                     	;# 
  7246  059C                     	;# 
  7247  059D                     	;# 
  7248  059D                     	;# 
  7249  059E                     	;# 
  7250  059F                     	;# 
  7251  060C                     	;# 
  7252  060C                     	;# 
  7253  060D                     	;# 
  7254  060D                     	;# 
  7255  060E                     	;# 
  7256  060F                     	;# 
  7257  0610                     	;# 
  7258  0611                     	;# 
  7259  0612                     	;# 
  7260  0613                     	;# 
  7261  0614                     	;# 
  7262  0616                     	;# 
  7263  0616                     	;# 
  7264  0617                     	;# 
  7265  0617                     	;# 
  7266  0618                     	;# 
  7267  0619                     	;# 
  7268  061A                     	;# 
  7269  061B                     	;# 
  7270  061C                     	;# 
  7271  061D                     	;# 
  7272  061E                     	;# 
  7273  070C                     	;# 
  7274  070D                     	;# 
  7275  070E                     	;# 
  7276  070F                     	;# 
  7277  0710                     	;# 
  7278  0711                     	;# 
  7279  0712                     	;# 
  7280  0713                     	;# 
  7281  0714                     	;# 
  7282  0716                     	;# 
  7283  0717                     	;# 
  7284  0718                     	;# 
  7285  0719                     	;# 
  7286  071A                     	;# 
  7287  071B                     	;# 
  7288  071C                     	;# 
  7289  071D                     	;# 
  7290  071E                     	;# 
  7291  0796                     	;# 
  7292  0797                     	;# 
  7293  0798                     	;# 
  7294  0799                     	;# 
  7295  079A                     	;# 
  7296  079B                     	;# 
  7297  079C                     	;# 
  7298  079D                     	;# 
  7299  080C                     	;# 
  7300  080D                     	;# 
  7301  080E                     	;# 
  7302  080F                     	;# 
  7303  0810                     	;# 
  7304  0811                     	;# 
  7305  0812                     	;# 
  7306  0813                     	;# 
  7307  0814                     	;# 
  7308  081A                     	;# 
  7309  081A                     	;# 
  7310  081B                     	;# 
  7311  081C                     	;# 
  7312  081C                     	;# 
  7313  081D                     	;# 
  7314  081E                     	;# 
  7315  081F                     	;# 
  7316  088C                     	;# 
  7317  088D                     	;# 
  7318  088E                     	;# 
  7319  088F                     	;# 
  7320  0890                     	;# 
  7321  0891                     	;# 
  7322  0892                     	;# 
  7323  0893                     	;# 
  7324  0895                     	;# 
  7325  0896                     	;# 
  7326  0897                     	;# 
  7327  0898                     	;# 
  7328  0899                     	;# 
  7329  089A                     	;# 
  7330  089B                     	;# 
  7331  090C                     	;# 
  7332  090E                     	;# 
  7333  090F                     	;# 
  7334  091F                     	;# 
  7335  098F                     	;# 
  7336  098F                     	;# 
  7337  0990                     	;# 
  7338  0991                     	;# 
  7339  0992                     	;# 
  7340  0993                     	;# 
  7341  0994                     	;# 
  7342  0995                     	;# 
  7343  0996                     	;# 
  7344  0997                     	;# 
  7345  1E0F                     	;# 
  7346  1E10                     	;# 
  7347  1E11                     	;# 
  7348  1E12                     	;# 
  7349  1E13                     	;# 
  7350  1E14                     	;# 
  7351  1E15                     	;# 
  7352  1E16                     	;# 
  7353  1E17                     	;# 
  7354  1E18                     	;# 
  7355  1E19                     	;# 
  7356  1E1A                     	;# 
  7357  1E1B                     	;# 
  7358  1E1C                     	;# 
  7359  1E1D                     	;# 
  7360  1E1E                     	;# 
  7361  1E1F                     	;# 
  7362  1E20                     	;# 
  7363  1E21                     	;# 
  7364  1E22                     	;# 
  7365  1E23                     	;# 
  7366  1E24                     	;# 
  7367  1E25                     	;# 
  7368  1E26                     	;# 
  7369  1E27                     	;# 
  7370  1E28                     	;# 
  7371  1E29                     	;# 
  7372  1E2A                     	;# 
  7373  1E2B                     	;# 
  7374  1E2C                     	;# 
  7375  1E2D                     	;# 
  7376  1E2E                     	;# 
  7377  1E2F                     	;# 
  7378  1E30                     	;# 
  7379  1E31                     	;# 
  7380  1E32                     	;# 
  7381  1E33                     	;# 
  7382  1E34                     	;# 
  7383  1E35                     	;# 
  7384  1E36                     	;# 
  7385  1E37                     	;# 
  7386  1E8F                     	;# 
  7387  1E90                     	;# 
  7388  1E91                     	;# 
  7389  1E92                     	;# 
  7390  1E93                     	;# 
  7391  1E94                     	;# 
  7392  1E95                     	;# 
  7393  1E96                     	;# 
  7394  1E97                     	;# 
  7395  1E9C                     	;# 
  7396  1E9D                     	;# 
  7397  1E9E                     	;# 
  7398  1EA1                     	;# 
  7399  1EA2                     	;# 
  7400  1EA3                     	;# 
  7401  1EA4                     	;# 
  7402  1EA9                     	;# 
  7403  1EAA                     	;# 
  7404  1EB1                     	;# 
  7405  1EB2                     	;# 
  7406  1EB8                     	;# 
  7407  1EB9                     	;# 
  7408  1EBA                     	;# 
  7409  1EBB                     	;# 
  7410  1EBC                     	;# 
  7411  1EBD                     	;# 
  7412  1EBE                     	;# 
  7413  1EC3                     	;# 
  7414  1EC5                     	;# 
  7415  1EC6                     	;# 
  7416  1EC7                     	;# 
  7417  1EC8                     	;# 
  7418  1EC9                     	;# 
  7419  1ECA                     	;# 
  7420  1ECB                     	;# 
  7421  1ECB                     	;# 
  7422  1ECB                     	;# 
  7423  1ECC                     	;# 
  7424  1ECC                     	;# 
  7425  1ECC                     	;# 
  7426  1F10                     	;# 
  7427  1F11                     	;# 
  7428  1F12                     	;# 
  7429  1F14                     	;# 
  7430  1F15                     	;# 
  7431  1F1C                     	;# 
  7432  1F1D                     	;# 
  7433  1F1E                     	;# 
  7434  1F1F                     	;# 
  7435  1F20                     	;# 
  7436  1F21                     	;# 
  7437  1F22                     	;# 
  7438  1F23                     	;# 
  7439  1F24                     	;# 
  7440  1F25                     	;# 
  7441  1F26                     	;# 
  7442  1F27                     	;# 
  7443  1F38                     	;# 
  7444  1F39                     	;# 
  7445  1F3A                     	;# 
  7446  1F3B                     	;# 
  7447  1F3C                     	;# 
  7448  1F3D                     	;# 
  7449  1F3E                     	;# 
  7450  1F3F                     	;# 
  7451  1F43                     	;# 
  7452  1F44                     	;# 
  7453  1F45                     	;# 
  7454  1F46                     	;# 
  7455  1F47                     	;# 
  7456  1F48                     	;# 
  7457  1F49                     	;# 
  7458  1F4A                     	;# 
  7459  1F4E                     	;# 
  7460  1F4F                     	;# 
  7461  1F50                     	;# 
  7462  1F51                     	;# 
  7463  1F52                     	;# 
  7464  1F53                     	;# 
  7465  1F54                     	;# 
  7466  1F55                     	;# 
  7467  1FE4                     	;# 
  7468  1FE5                     	;# 
  7469  1FE6                     	;# 
  7470  1FE7                     	;# 
  7471  1FE8                     	;# 
  7472  1FE8                     	;# 
  7473  1FE9                     	;# 
  7474  1FEA                     	;# 
  7475  1FEB                     	;# 
  7476  1FED                     	;# 
  7477  1FEE                     	;# 
  7478  1FEF                     	;# 
  7479  0000                     	;# 
  7480  0001                     	;# 
  7481  0002                     	;# 
  7482  0003                     	;# 
  7483  0004                     	;# 
  7484  0005                     	;# 
  7485  0006                     	;# 
  7486  0007                     	;# 
  7487  0008                     	;# 
  7488  0009                     	;# 
  7489  000A                     	;# 
  7490  000B                     	;# 
  7491  000C                     	;# 
  7492  000D                     	;# 
  7493  000E                     	;# 
  7494  0012                     	;# 
  7495  0013                     	;# 
  7496  0014                     	;# 
  7497  0018                     	;# 
  7498  0019                     	;# 
  7499  001A                     	;# 
  7500  008C                     	;# 
  7501  008C                     	;# 
  7502  008D                     	;# 
  7503  008E                     	;# 
  7504  008E                     	;# 
  7505  008F                     	;# 
  7506  0090                     	;# 
  7507  0090                     	;# 
  7508  0091                     	;# 
  7509  0092                     	;# 
  7510  0092                     	;# 
  7511  0093                     	;# 
  7512  0094                     	;# 
  7513  0094                     	;# 
  7514  0095                     	;# 
  7515  0096                     	;# 
  7516  0096                     	;# 
  7517  0097                     	;# 
  7518  0098                     	;# 
  7519  0099                     	;# 
  7520  009A                     	;# 
  7521  009B                     	;# 
  7522  009B                     	;# 
  7523  009C                     	;# 
  7524  009D                     	;# 
  7525  009D                     	;# 
  7526  009E                     	;# 
  7527  009F                     	;# 
  7528  010C                     	;# 
  7529  010C                     	;# 
  7530  010D                     	;# 
  7531  010E                     	;# 
  7532  010F                     	;# 
  7533  010F                     	;# 
  7534  0110                     	;# 
  7535  0111                     	;# 
  7536  0112                     	;# 
  7537  0113                     	;# 
  7538  0114                     	;# 
  7539  0115                     	;# 
  7540  0116                     	;# 
  7541  0117                     	;# 
  7542  0118                     	;# 
  7543  0119                     	;# 
  7544  0119                     	;# 
  7545  0119                     	;# 
  7546  011A                     	;# 
  7547  011A                     	;# 
  7548  011A                     	;# 
  7549  011B                     	;# 
  7550  011B                     	;# 
  7551  011B                     	;# 
  7552  011B                     	;# 
  7553  011B                     	;# 
  7554  011C                     	;# 
  7555  011C                     	;# 
  7556  011C                     	;# 
  7557  011D                     	;# 
  7558  011D                     	;# 
  7559  011D                     	;# 
  7560  011E                     	;# 
  7561  011E                     	;# 
  7562  011E                     	;# 
  7563  011F                     	;# 
  7564  011F                     	;# 
  7565  011F                     	;# 
  7566  011F                     	;# 
  7567  011F                     	;# 
  7568  018C                     	;# 
  7569  018D                     	;# 
  7570  018E                     	;# 
  7571  018F                     	;# 
  7572  0190                     	;# 
  7573  0191                     	;# 
  7574  0192                     	;# 
  7575  0196                     	;# 
  7576  0197                     	;# 
  7577  0198                     	;# 
  7578  0199                     	;# 
  7579  019A                     	;# 
  7580  019B                     	;# 
  7581  019C                     	;# 
  7582  020C                     	;# 
  7583  020D                     	;# 
  7584  020E                     	;# 
  7585  020E                     	;# 
  7586  020F                     	;# 
  7587  020F                     	;# 
  7588  0210                     	;# 
  7589  0210                     	;# 
  7590  0211                     	;# 
  7591  0211                     	;# 
  7592  0212                     	;# 
  7593  0213                     	;# 
  7594  0214                     	;# 
  7595  0214                     	;# 
  7596  0215                     	;# 
  7597  0215                     	;# 
  7598  0216                     	;# 
  7599  0216                     	;# 
  7600  0217                     	;# 
  7601  0217                     	;# 
  7602  0218                     	;# 
  7603  0219                     	;# 
  7604  021A                     	;# 
  7605  021A                     	;# 
  7606  021B                     	;# 
  7607  021B                     	;# 
  7608  021C                     	;# 
  7609  021C                     	;# 
  7610  021D                     	;# 
  7611  021D                     	;# 
  7612  021E                     	;# 
  7613  021F                     	;# 
  7614  028C                     	;# 
  7615  028C                     	;# 
  7616  028D                     	;# 
  7617  028D                     	;# 
  7618  028E                     	;# 
  7619  028F                     	;# 
  7620  0290                     	;# 
  7621  0291                     	;# 
  7622  0292                     	;# 
  7623  0292                     	;# 
  7624  0293                     	;# 
  7625  0293                     	;# 
  7626  0294                     	;# 
  7627  0295                     	;# 
  7628  0296                     	;# 
  7629  0297                     	;# 
  7630  0298                     	;# 
  7631  0298                     	;# 
  7632  0299                     	;# 
  7633  0299                     	;# 
  7634  029A                     	;# 
  7635  029B                     	;# 
  7636  029C                     	;# 
  7637  029D                     	;# 
  7638  029F                     	;# 
  7639  030C                     	;# 
  7640  030C                     	;# 
  7641  030D                     	;# 
  7642  030E                     	;# 
  7643  030F                     	;# 
  7644  0310                     	;# 
  7645  0310                     	;# 
  7646  0311                     	;# 
  7647  0312                     	;# 
  7648  0313                     	;# 
  7649  0314                     	;# 
  7650  0314                     	;# 
  7651  0315                     	;# 
  7652  0316                     	;# 
  7653  0317                     	;# 
  7654  0318                     	;# 
  7655  0318                     	;# 
  7656  0319                     	;# 
  7657  031A                     	;# 
  7658  031B                     	;# 
  7659  038C                     	;# 
  7660  038C                     	;# 
  7661  038D                     	;# 
  7662  038E                     	;# 
  7663  0390                     	;# 
  7664  0390                     	;# 
  7665  0391                     	;# 
  7666  0392                     	;# 
  7667  048C                     	;# 
  7668  048C                     	;# 
  7669  048D                     	;# 
  7670  048E                     	;# 
  7671  048F                     	;# 
  7672  048F                     	;# 
  7673  0490                     	;# 
  7674  0491                     	;# 
  7675  0492                     	;# 
  7676  0492                     	;# 
  7677  0493                     	;# 
  7678  0494                     	;# 
  7679  0495                     	;# 
  7680  0495                     	;# 
  7681  0496                     	;# 
  7682  0497                     	;# 
  7683  0498                     	;# 
  7684  0499                     	;# 
  7685  049A                     	;# 
  7686  049B                     	;# 
  7687  049C                     	;# 
  7688  049D                     	;# 
  7689  058C                     	;# 
  7690  058C                     	;# 
  7691  058D                     	;# 
  7692  058E                     	;# 
  7693  058F                     	;# 
  7694  058F                     	;# 
  7695  0590                     	;# 
  7696  0591                     	;# 
  7697  0592                     	;# 
  7698  0593                     	;# 
  7699  059C                     	;# 
  7700  059C                     	;# 
  7701  059D                     	;# 
  7702  059D                     	;# 
  7703  059E                     	;# 
  7704  059F                     	;# 
  7705  060C                     	;# 
  7706  060C                     	;# 
  7707  060D                     	;# 
  7708  060D                     	;# 
  7709  060E                     	;# 
  7710  060F                     	;# 
  7711  0610                     	;# 
  7712  0611                     	;# 
  7713  0612                     	;# 
  7714  0613                     	;# 
  7715  0614                     	;# 
  7716  0616                     	;# 
  7717  0616                     	;# 
  7718  0617                     	;# 
  7719  0617                     	;# 
  7720  0618                     	;# 
  7721  0619                     	;# 
  7722  061A                     	;# 
  7723  061B                     	;# 
  7724  061C                     	;# 
  7725  061D                     	;# 
  7726  061E                     	;# 
  7727  070C                     	;# 
  7728  070D                     	;# 
  7729  070E                     	;# 
  7730  070F                     	;# 
  7731  0710                     	;# 
  7732  0711                     	;# 
  7733  0712                     	;# 
  7734  0713                     	;# 
  7735  0714                     	;# 
  7736  0716                     	;# 
  7737  0717                     	;# 
  7738  0718                     	;# 
  7739  0719                     	;# 
  7740  071A                     	;# 
  7741  071B                     	;# 
  7742  071C                     	;# 
  7743  071D                     	;# 
  7744  071E                     	;# 
  7745  0796                     	;# 
  7746  0797                     	;# 
  7747  0798                     	;# 
  7748  0799                     	;# 
  7749  079A                     	;# 
  7750  079B                     	;# 
  7751  079C                     	;# 
  7752  079D                     	;# 
  7753  080C                     	;# 
  7754  080D                     	;# 
  7755  080E                     	;# 
  7756  080F                     	;# 
  7757  0810                     	;# 
  7758  0811                     	;# 
  7759  0812                     	;# 
  7760  0813                     	;# 
  7761  0814                     	;# 
  7762  081A                     	;# 
  7763  081A                     	;# 
  7764  081B                     	;# 
  7765  081C                     	;# 
  7766  081C                     	;# 
  7767  081D                     	;# 
  7768  081E                     	;# 
  7769  081F                     	;# 
  7770  088C                     	;# 
  7771  088D                     	;# 
  7772  088E                     	;# 
  7773  088F                     	;# 
  7774  0890                     	;# 
  7775  0891                     	;# 
  7776  0892                     	;# 
  7777  0893                     	;# 
  7778  0895                     	;# 
  7779  0896                     	;# 
  7780  0897                     	;# 
  7781  0898                     	;# 
  7782  0899                     	;# 
  7783  089A                     	;# 
  7784  089B                     	;# 
  7785  090C                     	;# 
  7786  090E                     	;# 
  7787  090F                     	;# 
  7788  091F                     	;# 
  7789  098F                     	;# 
  7790  098F                     	;# 
  7791  0990                     	;# 
  7792  0991                     	;# 
  7793  0992                     	;# 
  7794  0993                     	;# 
  7795  0994                     	;# 
  7796  0995                     	;# 
  7797  0996                     	;# 
  7798  0997                     	;# 
  7799  1E0F                     	;# 
  7800  1E10                     	;# 
  7801  1E11                     	;# 
  7802  1E12                     	;# 
  7803  1E13                     	;# 
  7804  1E14                     	;# 
  7805  1E15                     	;# 
  7806  1E16                     	;# 
  7807  1E17                     	;# 
  7808  1E18                     	;# 
  7809  1E19                     	;# 
  7810  1E1A                     	;# 
  7811  1E1B                     	;# 
  7812  1E1C                     	;# 
  7813  1E1D                     	;# 
  7814  1E1E                     	;# 
  7815  1E1F                     	;# 
  7816  1E20                     	;# 
  7817  1E21                     	;# 
  7818  1E22                     	;# 
  7819  1E23                     	;# 
  7820  1E24                     	;# 
  7821  1E25                     	;# 
  7822  1E26                     	;# 
  7823  1E27                     	;# 
  7824  1E28                     	;# 
  7825  1E29                     	;# 
  7826  1E2A                     	;# 
  7827  1E2B                     	;# 
  7828  1E2C                     	;# 
  7829  1E2D                     	;# 
  7830  1E2E                     	;# 
  7831  1E2F                     	;# 
  7832  1E30                     	;# 
  7833  1E31                     	;# 
  7834  1E32                     	;# 
  7835  1E33                     	;# 
  7836  1E34                     	;# 
  7837  1E35                     	;# 
  7838  1E36                     	;# 
  7839  1E37                     	;# 
  7840  1E8F                     	;# 
  7841  1E90                     	;# 
  7842  1E91                     	;# 
  7843  1E92                     	;# 
  7844  1E93                     	;# 
  7845  1E94                     	;# 
  7846  1E95                     	;# 
  7847  1E96                     	;# 
  7848  1E97                     	;# 
  7849  1E9C                     	;# 
  7850  1E9D                     	;# 
  7851  1E9E                     	;# 
  7852  1EA1                     	;# 
  7853  1EA2                     	;# 
  7854  1EA3                     	;# 
  7855  1EA4                     	;# 
  7856  1EA9                     	;# 
  7857  1EAA                     	;# 
  7858  1EB1                     	;# 
  7859  1EB2                     	;# 
  7860  1EB8                     	;# 
  7861  1EB9                     	;# 
  7862  1EBA                     	;# 
  7863  1EBB                     	;# 
  7864  1EBC                     	;# 
  7865  1EBD                     	;# 
  7866  1EBE                     	;# 
  7867  1EC3                     	;# 
  7868  1EC5                     	;# 
  7869  1EC6                     	;# 
  7870  1EC7                     	;# 
  7871  1EC8                     	;# 
  7872  1EC9                     	;# 
  7873  1ECA                     	;# 
  7874  1ECB                     	;# 
  7875  1ECB                     	;# 
  7876  1ECB                     	;# 
  7877  1ECC                     	;# 
  7878  1ECC                     	;# 
  7879  1ECC                     	;# 
  7880  1F10                     	;# 
  7881  1F11                     	;# 
  7882  1F12                     	;# 
  7883  1F14                     	;# 
  7884  1F15                     	;# 
  7885  1F1C                     	;# 
  7886  1F1D                     	;# 
  7887  1F1E                     	;# 
  7888  1F1F                     	;# 
  7889  1F20                     	;# 
  7890  1F21                     	;# 
  7891  1F22                     	;# 
  7892  1F23                     	;# 
  7893  1F24                     	;# 
  7894  1F25                     	;# 
  7895  1F26                     	;# 
  7896  1F27                     	;# 
  7897  1F38                     	;# 
  7898  1F39                     	;# 
  7899  1F3A                     	;# 
  7900  1F3B                     	;# 
  7901  1F3C                     	;# 
  7902  1F3D                     	;# 
  7903  1F3E                     	;# 
  7904  1F3F                     	;# 
  7905  1F43                     	;# 
  7906  1F44                     	;# 
  7907  1F45                     	;# 
  7908  1F46                     	;# 
  7909  1F47                     	;# 
  7910  1F48                     	;# 
  7911  1F49                     	;# 
  7912  1F4A                     	;# 
  7913  1F4E                     	;# 
  7914  1F4F                     	;# 
  7915  1F50                     	;# 
  7916  1F51                     	;# 
  7917  1F52                     	;# 
  7918  1F53                     	;# 
  7919  1F54                     	;# 
  7920  1F55                     	;# 
  7921  1FE4                     	;# 
  7922  1FE5                     	;# 
  7923  1FE6                     	;# 
  7924  1FE7                     	;# 
  7925  1FE8                     	;# 
  7926  1FE8                     	;# 
  7927  1FE9                     	;# 
  7928  1FEA                     	;# 
  7929  1FEB                     	;# 
  7930  1FED                     	;# 
  7931  1FEE                     	;# 
  7932  1FEF                     	;# 
  7933  0000                     	;# 
  7934  0001                     	;# 
  7935  0002                     	;# 
  7936  0003                     	;# 
  7937  0004                     	;# 
  7938  0005                     	;# 
  7939  0006                     	;# 
  7940  0007                     	;# 
  7941  0008                     	;# 
  7942  0009                     	;# 
  7943  000A                     	;# 
  7944  000B                     	;# 
  7945  000C                     	;# 
  7946  000D                     	;# 
  7947  000E                     	;# 
  7948  0012                     	;# 
  7949  0013                     	;# 
  7950  0014                     	;# 
  7951  0018                     	;# 
  7952  0019                     	;# 
  7953  001A                     	;# 
  7954  008C                     	;# 
  7955  008C                     	;# 
  7956  008D                     	;# 
  7957  008E                     	;# 
  7958  008E                     	;# 
  7959  008F                     	;# 
  7960  0090                     	;# 
  7961  0090                     	;# 
  7962  0091                     	;# 
  7963  0092                     	;# 
  7964  0092                     	;# 
  7965  0093                     	;# 
  7966  0094                     	;# 
  7967  0094                     	;# 
  7968  0095                     	;# 
  7969  0096                     	;# 
  7970  0096                     	;# 
  7971  0097                     	;# 
  7972  0098                     	;# 
  7973  0099                     	;# 
  7974  009A                     	;# 
  7975  009B                     	;# 
  7976  009B                     	;# 
  7977  009C                     	;# 
  7978  009D                     	;# 
  7979  009D                     	;# 
  7980  009E                     	;# 
  7981  009F                     	;# 
  7982  010C                     	;# 
  7983  010C                     	;# 
  7984  010D                     	;# 
  7985  010E                     	;# 
  7986  010F                     	;# 
  7987  010F                     	;# 
  7988  0110                     	;# 
  7989  0111                     	;# 
  7990  0112                     	;# 
  7991  0113                     	;# 
  7992  0114                     	;# 
  7993  0115                     	;# 
  7994  0116                     	;# 
  7995  0117                     	;# 
  7996  0118                     	;# 
  7997  0119                     	;# 
  7998  0119                     	;# 
  7999  0119                     	;# 
  8000  011A                     	;# 
  8001  011A                     	;# 
  8002  011A                     	;# 
  8003  011B                     	;# 
  8004  011B                     	;# 
  8005  011B                     	;# 
  8006  011B                     	;# 
  8007  011B                     	;# 
  8008  011C                     	;# 
  8009  011C                     	;# 
  8010  011C                     	;# 
  8011  011D                     	;# 
  8012  011D                     	;# 
  8013  011D                     	;# 
  8014  011E                     	;# 
  8015  011E                     	;# 
  8016  011E                     	;# 
  8017  011F                     	;# 
  8018  011F                     	;# 
  8019  011F                     	;# 
  8020  011F                     	;# 
  8021  011F                     	;# 
  8022  018C                     	;# 
  8023  018D                     	;# 
  8024  018E                     	;# 
  8025  018F                     	;# 
  8026  0190                     	;# 
  8027  0191                     	;# 
  8028  0192                     	;# 
  8029  0196                     	;# 
  8030  0197                     	;# 
  8031  0198                     	;# 
  8032  0199                     	;# 
  8033  019A                     	;# 
  8034  019B                     	;# 
  8035  019C                     	;# 
  8036  020C                     	;# 
  8037  020D                     	;# 
  8038  020E                     	;# 
  8039  020E                     	;# 
  8040  020F                     	;# 
  8041  020F                     	;# 
  8042  0210                     	;# 
  8043  0210                     	;# 
  8044  0211                     	;# 
  8045  0211                     	;# 
  8046  0212                     	;# 
  8047  0213                     	;# 
  8048  0214                     	;# 
  8049  0214                     	;# 
  8050  0215                     	;# 
  8051  0215                     	;# 
  8052  0216                     	;# 
  8053  0216                     	;# 
  8054  0217                     	;# 
  8055  0217                     	;# 
  8056  0218                     	;# 
  8057  0219                     	;# 
  8058  021A                     	;# 
  8059  021A                     	;# 
  8060  021B                     	;# 
  8061  021B                     	;# 
  8062  021C                     	;# 
  8063  021C                     	;# 
  8064  021D                     	;# 
  8065  021D                     	;# 
  8066  021E                     	;# 
  8067  021F                     	;# 
  8068  028C                     	;# 
  8069  028C                     	;# 
  8070  028D                     	;# 
  8071  028D                     	;# 
  8072  028E                     	;# 
  8073  028F                     	;# 
  8074  0290                     	;# 
  8075  0291                     	;# 
  8076  0292                     	;# 
  8077  0292                     	;# 
  8078  0293                     	;# 
  8079  0293                     	;# 
  8080  0294                     	;# 
  8081  0295                     	;# 
  8082  0296                     	;# 
  8083  0297                     	;# 
  8084  0298                     	;# 
  8085  0298                     	;# 
  8086  0299                     	;# 
  8087  0299                     	;# 
  8088  029A                     	;# 
  8089  029B                     	;# 
  8090  029C                     	;# 
  8091  029D                     	;# 
  8092  029F                     	;# 
  8093  030C                     	;# 
  8094  030C                     	;# 
  8095  030D                     	;# 
  8096  030E                     	;# 
  8097  030F                     	;# 
  8098  0310                     	;# 
  8099  0310                     	;# 
  8100  0311                     	;# 
  8101  0312                     	;# 
  8102  0313                     	;# 
  8103  0314                     	;# 
  8104  0314                     	;# 
  8105  0315                     	;# 
  8106  0316                     	;# 
  8107  0317                     	;# 
  8108  0318                     	;# 
  8109  0318                     	;# 
  8110  0319                     	;# 
  8111  031A                     	;# 
  8112  031B                     	;# 
  8113  038C                     	;# 
  8114  038C                     	;# 
  8115  038D                     	;# 
  8116  038E                     	;# 
  8117  0390                     	;# 
  8118  0390                     	;# 
  8119  0391                     	;# 
  8120  0392                     	;# 
  8121  048C                     	;# 
  8122  048C                     	;# 
  8123  048D                     	;# 
  8124  048E                     	;# 
  8125  048F                     	;# 
  8126  048F                     	;# 
  8127  0490                     	;# 
  8128  0491                     	;# 
  8129  0492                     	;# 
  8130  0492                     	;# 
  8131  0493                     	;# 
  8132  0494                     	;# 
  8133  0495                     	;# 
  8134  0495                     	;# 
  8135  0496                     	;# 
  8136  0497                     	;# 
  8137  0498                     	;# 
  8138  0499                     	;# 
  8139  049A                     	;# 
  8140  049B                     	;# 
  8141  049C                     	;# 
  8142  049D                     	;# 
  8143  058C                     	;# 
  8144  058C                     	;# 
  8145  058D                     	;# 
  8146  058E                     	;# 
  8147  058F                     	;# 
  8148  058F                     	;# 
  8149  0590                     	;# 
  8150  0591                     	;# 
  8151  0592                     	;# 
  8152  0593                     	;# 
  8153  059C                     	;# 
  8154  059C                     	;# 
  8155  059D                     	;# 
  8156  059D                     	;# 
  8157  059E                     	;# 
  8158  059F                     	;# 
  8159  060C                     	;# 
  8160  060C                     	;# 
  8161  060D                     	;# 
  8162  060D                     	;# 
  8163  060E                     	;# 
  8164  060F                     	;# 
  8165  0610                     	;# 
  8166  0611                     	;# 
  8167  0612                     	;# 
  8168  0613                     	;# 
  8169  0614                     	;# 
  8170  0616                     	;# 
  8171  0616                     	;# 
  8172  0617                     	;# 
  8173  0617                     	;# 
  8174  0618                     	;# 
  8175  0619                     	;# 
  8176  061A                     	;# 
  8177  061B                     	;# 
  8178  061C                     	;# 
  8179  061D                     	;# 
  8180  061E                     	;# 
  8181  070C                     	;# 
  8182  070D                     	;# 
  8183  070E                     	;# 
  8184  070F                     	;# 
  8185  0710                     	;# 
  8186  0711                     	;# 
  8187  0712                     	;# 
  8188  0713                     	;# 
  8189  0714                     	;# 
  8190  0716                     	;# 
  8191  0717                     	;# 
  8192  0718                     	;# 
  8193  0719                     	;# 
  8194  071A                     	;# 
  8195  071B                     	;# 
  8196  071C                     	;# 
  8197  071D                     	;# 
  8198  071E                     	;# 
  8199  0796                     	;# 
  8200  0797                     	;# 
  8201  0798                     	;# 
  8202  0799                     	;# 
  8203  079A                     	;# 
  8204  079B                     	;# 
  8205  079C                     	;# 
  8206  079D                     	;# 
  8207  080C                     	;# 
  8208  080D                     	;# 
  8209  080E                     	;# 
  8210  080F                     	;# 
  8211  0810                     	;# 
  8212  0811                     	;# 
  8213  0812                     	;# 
  8214  0813                     	;# 
  8215  0814                     	;# 
  8216  081A                     	;# 
  8217  081A                     	;# 
  8218  081B                     	;# 
  8219  081C                     	;# 
  8220  081C                     	;# 
  8221  081D                     	;# 
  8222  081E                     	;# 
  8223  081F                     	;# 
  8224  088C                     	;# 
  8225  088D                     	;# 
  8226  088E                     	;# 
  8227  088F                     	;# 
  8228  0890                     	;# 
  8229  0891                     	;# 
  8230  0892                     	;# 
  8231  0893                     	;# 
  8232  0895                     	;# 
  8233  0896                     	;# 
  8234  0897                     	;# 
  8235  0898                     	;# 
  8236  0899                     	;# 
  8237  089A                     	;# 
  8238  089B                     	;# 
  8239  090C                     	;# 
  8240  090E                     	;# 
  8241  090F                     	;# 
  8242  091F                     	;# 
  8243  098F                     	;# 
  8244  098F                     	;# 
  8245  0990                     	;# 
  8246  0991                     	;# 
  8247  0992                     	;# 
  8248  0993                     	;# 
  8249  0994                     	;# 
  8250  0995                     	;# 
  8251  0996                     	;# 
  8252  0997                     	;# 
  8253  1E0F                     	;# 
  8254  1E10                     	;# 
  8255  1E11                     	;# 
  8256  1E12                     	;# 
  8257  1E13                     	;# 
  8258  1E14                     	;# 
  8259  1E15                     	;# 
  8260  1E16                     	;# 
  8261  1E17                     	;# 
  8262  1E18                     	;# 
  8263  1E19                     	;# 
  8264  1E1A                     	;# 
  8265  1E1B                     	;# 
  8266  1E1C                     	;# 
  8267  1E1D                     	;# 
  8268  1E1E                     	;# 
  8269  1E1F                     	;# 
  8270  1E20                     	;# 
  8271  1E21                     	;# 
  8272  1E22                     	;# 
  8273  1E23                     	;# 
  8274  1E24                     	;# 
  8275  1E25                     	;# 
  8276  1E26                     	;# 
  8277  1E27                     	;# 
  8278  1E28                     	;# 
  8279  1E29                     	;# 
  8280  1E2A                     	;# 
  8281  1E2B                     	;# 
  8282  1E2C                     	;# 
  8283  1E2D                     	;# 
  8284  1E2E                     	;# 
  8285  1E2F                     	;# 
  8286  1E30                     	;# 
  8287  1E31                     	;# 
  8288  1E32                     	;# 
  8289  1E33                     	;# 
  8290  1E34                     	;# 
  8291  1E35                     	;# 
  8292  1E36                     	;# 
  8293  1E37                     	;# 
  8294  1E8F                     	;# 
  8295  1E90                     	;# 
  8296  1E91                     	;# 
  8297  1E92                     	;# 
  8298  1E93                     	;# 
  8299  1E94                     	;# 
  8300  1E95                     	;# 
  8301  1E96                     	;# 
  8302  1E97                     	;# 
  8303  1E9C                     	;# 
  8304  1E9D                     	;# 
  8305  1E9E                     	;# 
  8306  1EA1                     	;# 
  8307  1EA2                     	;# 
  8308  1EA3                     	;# 
  8309  1EA4                     	;# 
  8310  1EA9                     	;# 
  8311  1EAA                     	;# 
  8312  1EB1                     	;# 
  8313  1EB2                     	;# 
  8314  1EB8                     	;# 
  8315  1EB9                     	;# 
  8316  1EBA                     	;# 
  8317  1EBB                     	;# 
  8318  1EBC                     	;# 
  8319  1EBD                     	;# 
  8320  1EBE                     	;# 
  8321  1EC3                     	;# 
  8322  1EC5                     	;# 
  8323  1EC6                     	;# 
  8324  1EC7                     	;# 
  8325  1EC8                     	;# 
  8326  1EC9                     	;# 
  8327  1ECA                     	;# 
  8328  1ECB                     	;# 
  8329  1ECB                     	;# 
  8330  1ECB                     	;# 
  8331  1ECC                     	;# 
  8332  1ECC                     	;# 
  8333  1ECC                     	;# 
  8334  1F10                     	;# 
  8335  1F11                     	;# 
  8336  1F12                     	;# 
  8337  1F14                     	;# 
  8338  1F15                     	;# 
  8339  1F1C                     	;# 
  8340  1F1D                     	;# 
  8341  1F1E                     	;# 
  8342  1F1F                     	;# 
  8343  1F20                     	;# 
  8344  1F21                     	;# 
  8345  1F22                     	;# 
  8346  1F23                     	;# 
  8347  1F24                     	;# 
  8348  1F25                     	;# 
  8349  1F26                     	;# 
  8350  1F27                     	;# 
  8351  1F38                     	;# 
  8352  1F39                     	;# 
  8353  1F3A                     	;# 
  8354  1F3B                     	;# 
  8355  1F3C                     	;# 
  8356  1F3D                     	;# 
  8357  1F3E                     	;# 
  8358  1F3F                     	;# 
  8359  1F43                     	;# 
  8360  1F44                     	;# 
  8361  1F45                     	;# 
  8362  1F46                     	;# 
  8363  1F47                     	;# 
  8364  1F48                     	;# 
  8365  1F49                     	;# 
  8366  1F4A                     	;# 
  8367  1F4E                     	;# 
  8368  1F4F                     	;# 
  8369  1F50                     	;# 
  8370  1F51                     	;# 
  8371  1F52                     	;# 
  8372  1F53                     	;# 
  8373  1F54                     	;# 
  8374  1F55                     	;# 
  8375  1FE4                     	;# 
  8376  1FE5                     	;# 
  8377  1FE6                     	;# 
  8378  1FE7                     	;# 
  8379  1FE8                     	;# 
  8380  1FE8                     	;# 
  8381  1FE9                     	;# 
  8382  1FEA                     	;# 
  8383  1FEB                     	;# 
  8384  1FED                     	;# 
  8385  1FEE                     	;# 
  8386  1FEF                     	;# 
  8387  0000                     	;# 
  8388  0001                     	;# 
  8389  0002                     	;# 
  8390  0003                     	;# 
  8391  0004                     	;# 
  8392  0005                     	;# 
  8393  0006                     	;# 
  8394  0007                     	;# 
  8395  0008                     	;# 
  8396  0009                     	;# 
  8397  000A                     	;# 
  8398  000B                     	;# 
  8399  000C                     	;# 
  8400  000D                     	;# 
  8401  000E                     	;# 
  8402  0012                     	;# 
  8403  0013                     	;# 
  8404  0014                     	;# 
  8405  0018                     	;# 
  8406  0019                     	;# 
  8407  001A                     	;# 
  8408  008C                     	;# 
  8409  008C                     	;# 
  8410  008D                     	;# 
  8411  008E                     	;# 
  8412  008E                     	;# 
  8413  008F                     	;# 
  8414  0090                     	;# 
  8415  0090                     	;# 
  8416  0091                     	;# 
  8417  0092                     	;# 
  8418  0092                     	;# 
  8419  0093                     	;# 
  8420  0094                     	;# 
  8421  0094                     	;# 
  8422  0095                     	;# 
  8423  0096                     	;# 
  8424  0096                     	;# 
  8425  0097                     	;# 
  8426  0098                     	;# 
  8427  0099                     	;# 
  8428  009A                     	;# 
  8429  009B                     	;# 
  8430  009B                     	;# 
  8431  009C                     	;# 
  8432  009D                     	;# 
  8433  009D                     	;# 
  8434  009E                     	;# 
  8435  009F                     	;# 
  8436  010C                     	;# 
  8437  010C                     	;# 
  8438  010D                     	;# 
  8439  010E                     	;# 
  8440  010F                     	;# 
  8441  010F                     	;# 
  8442  0110                     	;# 
  8443  0111                     	;# 
  8444  0112                     	;# 
  8445  0113                     	;# 
  8446  0114                     	;# 
  8447  0115                     	;# 
  8448  0116                     	;# 
  8449  0117                     	;# 
  8450  0118                     	;# 
  8451  0119                     	;# 
  8452  0119                     	;# 
  8453  0119                     	;# 
  8454  011A                     	;# 
  8455  011A                     	;# 
  8456  011A                     	;# 
  8457  011B                     	;# 
  8458  011B                     	;# 
  8459  011B                     	;# 
  8460  011B                     	;# 
  8461  011B                     	;# 
  8462  011C                     	;# 
  8463  011C                     	;# 
  8464  011C                     	;# 
  8465  011D                     	;# 
  8466  011D                     	;# 
  8467  011D                     	;# 
  8468  011E                     	;# 
  8469  011E                     	;# 
  8470  011E                     	;# 
  8471  011F                     	;# 
  8472  011F                     	;# 
  8473  011F                     	;# 
  8474  011F                     	;# 
  8475  011F                     	;# 
  8476  018C                     	;# 
  8477  018D                     	;# 
  8478  018E                     	;# 
  8479  018F                     	;# 
  8480  0190                     	;# 
  8481  0191                     	;# 
  8482  0192                     	;# 
  8483  0196                     	;# 
  8484  0197                     	;# 
  8485  0198                     	;# 
  8486  0199                     	;# 
  8487  019A                     	;# 
  8488  019B                     	;# 
  8489  019C                     	;# 
  8490  020C                     	;# 
  8491  020D                     	;# 
  8492  020E                     	;# 
  8493  020E                     	;# 
  8494  020F                     	;# 
  8495  020F                     	;# 
  8496  0210                     	;# 
  8497  0210                     	;# 
  8498  0211                     	;# 
  8499  0211                     	;# 
  8500  0212                     	;# 
  8501  0213                     	;# 
  8502  0214                     	;# 
  8503  0214                     	;# 
  8504  0215                     	;# 
  8505  0215                     	;# 
  8506  0216                     	;# 
  8507  0216                     	;# 
  8508  0217                     	;# 
  8509  0217                     	;# 
  8510  0218                     	;# 
  8511  0219                     	;# 
  8512  021A                     	;# 
  8513  021A                     	;# 
  8514  021B                     	;# 
  8515  021B                     	;# 
  8516  021C                     	;# 
  8517  021C                     	;# 
  8518  021D                     	;# 
  8519  021D                     	;# 
  8520  021E                     	;# 
  8521  021F                     	;# 
  8522  028C                     	;# 
  8523  028C                     	;# 
  8524  028D                     	;# 
  8525  028D                     	;# 
  8526  028E                     	;# 
  8527  028F                     	;# 
  8528  0290                     	;# 
  8529  0291                     	;# 
  8530  0292                     	;# 
  8531  0292                     	;# 
  8532  0293                     	;# 
  8533  0293                     	;# 
  8534  0294                     	;# 
  8535  0295                     	;# 
  8536  0296                     	;# 
  8537  0297                     	;# 
  8538  0298                     	;# 
  8539  0298                     	;# 
  8540  0299                     	;# 
  8541  0299                     	;# 
  8542  029A                     	;# 
  8543  029B                     	;# 
  8544  029C                     	;# 
  8545  029D                     	;# 
  8546  029F                     	;# 
  8547  030C                     	;# 
  8548  030C                     	;# 
  8549  030D                     	;# 
  8550  030E                     	;# 
  8551  030F                     	;# 
  8552  0310                     	;# 
  8553  0310                     	;# 
  8554  0311                     	;# 
  8555  0312                     	;# 
  8556  0313                     	;# 
  8557  0314                     	;# 
  8558  0314                     	;# 
  8559  0315                     	;# 
  8560  0316                     	;# 
  8561  0317                     	;# 
  8562  0318                     	;# 
  8563  0318                     	;# 
  8564  0319                     	;# 
  8565  031A                     	;# 
  8566  031B                     	;# 
  8567  038C                     	;# 
  8568  038C                     	;# 
  8569  038D                     	;# 
  8570  038E                     	;# 
  8571  0390                     	;# 
  8572  0390                     	;# 
  8573  0391                     	;# 
  8574  0392                     	;# 
  8575  048C                     	;# 
  8576  048C                     	;# 
  8577  048D                     	;# 
  8578  048E                     	;# 
  8579  048F                     	;# 
  8580  048F                     	;# 
  8581  0490                     	;# 
  8582  0491                     	;# 
  8583  0492                     	;# 
  8584  0492                     	;# 
  8585  0493                     	;# 
  8586  0494                     	;# 
  8587  0495                     	;# 
  8588  0495                     	;# 
  8589  0496                     	;# 
  8590  0497                     	;# 
  8591  0498                     	;# 
  8592  0499                     	;# 
  8593  049A                     	;# 
  8594  049B                     	;# 
  8595  049C                     	;# 
  8596  049D                     	;# 
  8597  058C                     	;# 
  8598  058C                     	;# 
  8599  058D                     	;# 
  8600  058E                     	;# 
  8601  058F                     	;# 
  8602  058F                     	;# 
  8603  0590                     	;# 
  8604  0591                     	;# 
  8605  0592                     	;# 
  8606  0593                     	;# 
  8607  059C                     	;# 
  8608  059C                     	;# 
  8609  059D                     	;# 
  8610  059D                     	;# 
  8611  059E                     	;# 
  8612  059F                     	;# 
  8613  060C                     	;# 
  8614  060C                     	;# 
  8615  060D                     	;# 
  8616  060D                     	;# 
  8617  060E                     	;# 
  8618  060F                     	;# 
  8619  0610                     	;# 
  8620  0611                     	;# 
  8621  0612                     	;# 
  8622  0613                     	;# 
  8623  0614                     	;# 
  8624  0616                     	;# 
  8625  0616                     	;# 
  8626  0617                     	;# 
  8627  0617                     	;# 
  8628  0618                     	;# 
  8629  0619                     	;# 
  8630  061A                     	;# 
  8631  061B                     	;# 
  8632  061C                     	;# 
  8633  061D                     	;# 
  8634  061E                     	;# 
  8635  070C                     	;# 
  8636  070D                     	;# 
  8637  070E                     	;# 
  8638  070F                     	;# 
  8639  0710                     	;# 
  8640  0711                     	;# 
  8641  0712                     	;# 
  8642  0713                     	;# 
  8643  0714                     	;# 
  8644  0716                     	;# 
  8645  0717                     	;# 
  8646  0718                     	;# 
  8647  0719                     	;# 
  8648  071A                     	;# 
  8649  071B                     	;# 
  8650  071C                     	;# 
  8651  071D                     	;# 
  8652  071E                     	;# 
  8653  0796                     	;# 
  8654  0797                     	;# 
  8655  0798                     	;# 
  8656  0799                     	;# 
  8657  079A                     	;# 
  8658  079B                     	;# 
  8659  079C                     	;# 
  8660  079D                     	;# 
  8661  080C                     	;# 
  8662  080D                     	;# 
  8663  080E                     	;# 
  8664  080F                     	;# 
  8665  0810                     	;# 
  8666  0811                     	;# 
  8667  0812                     	;# 
  8668  0813                     	;# 
  8669  0814                     	;# 
  8670  081A                     	;# 
  8671  081A                     	;# 
  8672  081B                     	;# 
  8673  081C                     	;# 
  8674  081C                     	;# 
  8675  081D                     	;# 
  8676  081E                     	;# 
  8677  081F                     	;# 
  8678  088C                     	;# 
  8679  088D                     	;# 
  8680  088E                     	;# 
  8681  088F                     	;# 
  8682  0890                     	;# 
  8683  0891                     	;# 
  8684  0892                     	;# 
  8685  0893                     	;# 
  8686  0895                     	;# 
  8687  0896                     	;# 
  8688  0897                     	;# 
  8689  0898                     	;# 
  8690  0899                     	;# 
  8691  089A                     	;# 
  8692  089B                     	;# 
  8693  090C                     	;# 
  8694  090E                     	;# 
  8695  090F                     	;# 
  8696  091F                     	;# 
  8697  098F                     	;# 
  8698  098F                     	;# 
  8699  0990                     	;# 
  8700  0991                     	;# 
  8701  0992                     	;# 
  8702  0993                     	;# 
  8703  0994                     	;# 
  8704  0995                     	;# 
  8705  0996                     	;# 
  8706  0997                     	;# 
  8707  1E0F                     	;# 
  8708  1E10                     	;# 
  8709  1E11                     	;# 
  8710  1E12                     	;# 
  8711  1E13                     	;# 
  8712  1E14                     	;# 
  8713  1E15                     	;# 
  8714  1E16                     	;# 
  8715  1E17                     	;# 
  8716  1E18                     	;# 
  8717  1E19                     	;# 
  8718  1E1A                     	;# 
  8719  1E1B                     	;# 
  8720  1E1C                     	;# 
  8721  1E1D                     	;# 
  8722  1E1E                     	;# 
  8723  1E1F                     	;# 
  8724  1E20                     	;# 
  8725  1E21                     	;# 
  8726  1E22                     	;# 
  8727  1E23                     	;# 
  8728  1E24                     	;# 
  8729  1E25                     	;# 
  8730  1E26                     	;# 
  8731  1E27                     	;# 
  8732  1E28                     	;# 
  8733  1E29                     	;# 
  8734  1E2A                     	;# 
  8735  1E2B                     	;# 
  8736  1E2C                     	;# 
  8737  1E2D                     	;# 
  8738  1E2E                     	;# 
  8739  1E2F                     	;# 
  8740  1E30                     	;# 
  8741  1E31                     	;# 
  8742  1E32                     	;# 
  8743  1E33                     	;# 
  8744  1E34                     	;# 
  8745  1E35                     	;# 
  8746  1E36                     	;# 
  8747  1E37                     	;# 
  8748  1E8F                     	;# 
  8749  1E90                     	;# 
  8750  1E91                     	;# 
  8751  1E92                     	;# 
  8752  1E93                     	;# 
  8753  1E94                     	;# 
  8754  1E95                     	;# 
  8755  1E96                     	;# 
  8756  1E97                     	;# 
  8757  1E9C                     	;# 
  8758  1E9D                     	;# 
  8759  1E9E                     	;# 
  8760  1EA1                     	;# 
  8761  1EA2                     	;# 
  8762  1EA3                     	;# 
  8763  1EA4                     	;# 
  8764  1EA9                     	;# 
  8765  1EAA                     	;# 
  8766  1EB1                     	;# 
  8767  1EB2                     	;# 
  8768  1EB8                     	;# 
  8769  1EB9                     	;# 
  8770  1EBA                     	;# 
  8771  1EBB                     	;# 
  8772  1EBC                     	;# 
  8773  1EBD                     	;# 
  8774  1EBE                     	;# 
  8775  1EC3                     	;# 
  8776  1EC5                     	;# 
  8777  1EC6                     	;# 
  8778  1EC7                     	;# 
  8779  1EC8                     	;# 
  8780  1EC9                     	;# 
  8781  1ECA                     	;# 
  8782  1ECB                     	;# 
  8783  1ECB                     	;# 
  8784  1ECB                     	;# 
  8785  1ECC                     	;# 
  8786  1ECC                     	;# 
  8787  1ECC                     	;# 
  8788  1F10                     	;# 
  8789  1F11                     	;# 
  8790  1F12                     	;# 
  8791  1F14                     	;# 
  8792  1F15                     	;# 
  8793  1F1C                     	;# 
  8794  1F1D                     	;# 
  8795  1F1E                     	;# 
  8796  1F1F                     	;# 
  8797  1F20                     	;# 
  8798  1F21                     	;# 
  8799  1F22                     	;# 
  8800  1F23                     	;# 
  8801  1F24                     	;# 
  8802  1F25                     	;# 
  8803  1F26                     	;# 
  8804  1F27                     	;# 
  8805  1F38                     	;# 
  8806  1F39                     	;# 
  8807  1F3A                     	;# 
  8808  1F3B                     	;# 
  8809  1F3C                     	;# 
  8810  1F3D                     	;# 
  8811  1F3E                     	;# 
  8812  1F3F                     	;# 
  8813  1F43                     	;# 
  8814  1F44                     	;# 
  8815  1F45                     	;# 
  8816  1F46                     	;# 
  8817  1F47                     	;# 
  8818  1F48                     	;# 
  8819  1F49                     	;# 
  8820  1F4A                     	;# 
  8821  1F4E                     	;# 
  8822  1F4F                     	;# 
  8823  1F50                     	;# 
  8824  1F51                     	;# 
  8825  1F52                     	;# 
  8826  1F53                     	;# 
  8827  1F54                     	;# 
  8828  1F55                     	;# 
  8829  1FE4                     	;# 
  8830  1FE5                     	;# 
  8831  1FE6                     	;# 
  8832  1FE7                     	;# 
  8833  1FE8                     	;# 
  8834  1FE8                     	;# 
  8835  1FE9                     	;# 
  8836  1FEA                     	;# 
  8837  1FEB                     	;# 
  8838  1FED                     	;# 
  8839  1FEE                     	;# 
  8840  1FEF                     	;# 
  8841  0000                     	;# 
  8842  0001                     	;# 
  8843  0002                     	;# 
  8844  0003                     	;# 
  8845  0004                     	;# 
  8846  0005                     	;# 
  8847  0006                     	;# 
  8848  0007                     	;# 
  8849  0008                     	;# 
  8850  0009                     	;# 
  8851  000A                     	;# 
  8852  000B                     	;# 
  8853  000C                     	;# 
  8854  000D                     	;# 
  8855  000E                     	;# 
  8856  0012                     	;# 
  8857  0013                     	;# 
  8858  0014                     	;# 
  8859  0018                     	;# 
  8860  0019                     	;# 
  8861  001A                     	;# 
  8862  008C                     	;# 
  8863  008C                     	;# 
  8864  008D                     	;# 
  8865  008E                     	;# 
  8866  008E                     	;# 
  8867  008F                     	;# 
  8868  0090                     	;# 
  8869  0090                     	;# 
  8870  0091                     	;# 
  8871  0092                     	;# 
  8872  0092                     	;# 
  8873  0093                     	;# 
  8874  0094                     	;# 
  8875  0094                     	;# 
  8876  0095                     	;# 
  8877  0096                     	;# 
  8878  0096                     	;# 
  8879  0097                     	;# 
  8880  0098                     	;# 
  8881  0099                     	;# 
  8882  009A                     	;# 
  8883  009B                     	;# 
  8884  009B                     	;# 
  8885  009C                     	;# 
  8886  009D                     	;# 
  8887  009D                     	;# 
  8888  009E                     	;# 
  8889  009F                     	;# 
  8890  010C                     	;# 
  8891  010C                     	;# 
  8892  010D                     	;# 
  8893  010E                     	;# 
  8894  010F                     	;# 
  8895  010F                     	;# 
  8896  0110                     	;# 
  8897  0111                     	;# 
  8898  0112                     	;# 
  8899  0113                     	;# 
  8900  0114                     	;# 
  8901  0115                     	;# 
  8902  0116                     	;# 
  8903  0117                     	;# 
  8904  0118                     	;# 
  8905  0119                     	;# 
  8906  0119                     	;# 
  8907  0119                     	;# 
  8908  011A                     	;# 
  8909  011A                     	;# 
  8910  011A                     	;# 
  8911  011B                     	;# 
  8912  011B                     	;# 
  8913  011B                     	;# 
  8914  011B                     	;# 
  8915  011B                     	;# 
  8916  011C                     	;# 
  8917  011C                     	;# 
  8918  011C                     	;# 
  8919  011D                     	;# 
  8920  011D                     	;# 
  8921  011D                     	;# 
  8922  011E                     	;# 
  8923  011E                     	;# 
  8924  011E                     	;# 
  8925  011F                     	;# 
  8926  011F                     	;# 
  8927  011F                     	;# 
  8928  011F                     	;# 
  8929  011F                     	;# 
  8930  018C                     	;# 
  8931  018D                     	;# 
  8932  018E                     	;# 
  8933  018F                     	;# 
  8934  0190                     	;# 
  8935  0191                     	;# 
  8936  0192                     	;# 
  8937  0196                     	;# 
  8938  0197                     	;# 
  8939  0198                     	;# 
  8940  0199                     	;# 
  8941  019A                     	;# 
  8942  019B                     	;# 
  8943  019C                     	;# 
  8944  020C                     	;# 
  8945  020D                     	;# 
  8946  020E                     	;# 
  8947  020E                     	;# 
  8948  020F                     	;# 
  8949  020F                     	;# 
  8950  0210                     	;# 
  8951  0210                     	;# 
  8952  0211                     	;# 
  8953  0211                     	;# 
  8954  0212                     	;# 
  8955  0213                     	;# 
  8956  0214                     	;# 
  8957  0214                     	;# 
  8958  0215                     	;# 
  8959  0215                     	;# 
  8960  0216                     	;# 
  8961  0216                     	;# 
  8962  0217                     	;# 
  8963  0217                     	;# 
  8964  0218                     	;# 
  8965  0219                     	;# 
  8966  021A                     	;# 
  8967  021A                     	;# 
  8968  021B                     	;# 
  8969  021B                     	;# 
  8970  021C                     	;# 
  8971  021C                     	;# 
  8972  021D                     	;# 
  8973  021D                     	;# 
  8974  021E                     	;# 
  8975  021F                     	;# 
  8976  028C                     	;# 
  8977  028C                     	;# 
  8978  028D                     	;# 
  8979  028D                     	;# 
  8980  028E                     	;# 
  8981  028F                     	;# 
  8982  0290                     	;# 
  8983  0291                     	;# 
  8984  0292                     	;# 
  8985  0292                     	;# 
  8986  0293                     	;# 
  8987  0293                     	;# 
  8988  0294                     	;# 
  8989  0295                     	;# 
  8990  0296                     	;# 
  8991  0297                     	;# 
  8992  0298                     	;# 
  8993  0298                     	;# 
  8994  0299                     	;# 
  8995  0299                     	;# 
  8996  029A                     	;# 
  8997  029B                     	;# 
  8998  029C                     	;# 
  8999  029D                     	;# 
  9000  029F                     	;# 
  9001  030C                     	;# 
  9002  030C                     	;# 
  9003  030D                     	;# 
  9004  030E                     	;# 
  9005  030F                     	;# 
  9006  0310                     	;# 
  9007  0310                     	;# 
  9008  0311                     	;# 
  9009  0312                     	;# 
  9010  0313                     	;# 
  9011  0314                     	;# 
  9012  0314                     	;# 
  9013  0315                     	;# 
  9014  0316                     	;# 
  9015  0317                     	;# 
  9016  0318                     	;# 
  9017  0318                     	;# 
  9018  0319                     	;# 
  9019  031A                     	;# 
  9020  031B                     	;# 
  9021  038C                     	;# 
  9022  038C                     	;# 
  9023  038D                     	;# 
  9024  038E                     	;# 
  9025  0390                     	;# 
  9026  0390                     	;# 
  9027  0391                     	;# 
  9028  0392                     	;# 
  9029  048C                     	;# 
  9030  048C                     	;# 
  9031  048D                     	;# 
  9032  048E                     	;# 
  9033  048F                     	;# 
  9034  048F                     	;# 
  9035  0490                     	;# 
  9036  0491                     	;# 
  9037  0492                     	;# 
  9038  0492                     	;# 
  9039  0493                     	;# 
  9040  0494                     	;# 
  9041  0495                     	;# 
  9042  0495                     	;# 
  9043  0496                     	;# 
  9044  0497                     	;# 
  9045  0498                     	;# 
  9046  0499                     	;# 
  9047  049A                     	;# 
  9048  049B                     	;# 
  9049  049C                     	;# 
  9050  049D                     	;# 
  9051  058C                     	;# 
  9052  058C                     	;# 
  9053  058D                     	;# 
  9054  058E                     	;# 
  9055  058F                     	;# 
  9056  058F                     	;# 
  9057  0590                     	;# 
  9058  0591                     	;# 
  9059  0592                     	;# 
  9060  0593                     	;# 
  9061  059C                     	;# 
  9062  059C                     	;# 
  9063  059D                     	;# 
  9064  059D                     	;# 
  9065  059E                     	;# 
  9066  059F                     	;# 
  9067  060C                     	;# 
  9068  060C                     	;# 
  9069  060D                     	;# 
  9070  060D                     	;# 
  9071  060E                     	;# 
  9072  060F                     	;# 
  9073  0610                     	;# 
  9074  0611                     	;# 
  9075  0612                     	;# 
  9076  0613                     	;# 
  9077  0614                     	;# 
  9078  0616                     	;# 
  9079  0616                     	;# 
  9080  0617                     	;# 
  9081  0617                     	;# 
  9082  0618                     	;# 
  9083  0619                     	;# 
  9084  061A                     	;# 
  9085  061B                     	;# 
  9086  061C                     	;# 
  9087  061D                     	;# 
  9088  061E                     	;# 
  9089  070C                     	;# 
  9090  070D                     	;# 
  9091  070E                     	;# 
  9092  070F                     	;# 
  9093  0710                     	;# 
  9094  0711                     	;# 
  9095  0712                     	;# 
  9096  0713                     	;# 
  9097  0714                     	;# 
  9098  0716                     	;# 
  9099  0717                     	;# 
  9100  0718                     	;# 
  9101  0719                     	;# 
  9102  071A                     	;# 
  9103  071B                     	;# 
  9104  071C                     	;# 
  9105  071D                     	;# 
  9106  071E                     	;# 
  9107  0796                     	;# 
  9108  0797                     	;# 
  9109  0798                     	;# 
  9110  0799                     	;# 
  9111  079A                     	;# 
  9112  079B                     	;# 
  9113  079C                     	;# 
  9114  079D                     	;# 
  9115  080C                     	;# 
  9116  080D                     	;# 
  9117  080E                     	;# 
  9118  080F                     	;# 
  9119  0810                     	;# 
  9120  0811                     	;# 
  9121  0812                     	;# 
  9122  0813                     	;# 
  9123  0814                     	;# 
  9124  081A                     	;# 
  9125  081A                     	;# 
  9126  081B                     	;# 
  9127  081C                     	;# 
  9128  081C                     	;# 
  9129  081D                     	;# 
  9130  081E                     	;# 
  9131  081F                     	;# 
  9132  088C                     	;# 
  9133  088D                     	;# 
  9134  088E                     	;# 
  9135  088F                     	;# 
  9136  0890                     	;# 
  9137  0891                     	;# 
  9138  0892                     	;# 
  9139  0893                     	;# 
  9140  0895                     	;# 
  9141  0896                     	;# 
  9142  0897                     	;# 
  9143  0898                     	;# 
  9144  0899                     	;# 
  9145  089A                     	;# 
  9146  089B                     	;# 
  9147  090C                     	;# 
  9148  090E                     	;# 
  9149  090F                     	;# 
  9150  091F                     	;# 
  9151  098F                     	;# 
  9152  098F                     	;# 
  9153  0990                     	;# 
  9154  0991                     	;# 
  9155  0992                     	;# 
  9156  0993                     	;# 
  9157  0994                     	;# 
  9158  0995                     	;# 
  9159  0996                     	;# 
  9160  0997                     	;# 
  9161  1E0F                     	;# 
  9162  1E10                     	;# 
  9163  1E11                     	;# 
  9164  1E12                     	;# 
  9165  1E13                     	;# 
  9166  1E14                     	;# 
  9167  1E15                     	;# 
  9168  1E16                     	;# 
  9169  1E17                     	;# 
  9170  1E18                     	;# 
  9171  1E19                     	;# 
  9172  1E1A                     	;# 
  9173  1E1B                     	;# 
  9174  1E1C                     	;# 
  9175  1E1D                     	;# 
  9176  1E1E                     	;# 
  9177  1E1F                     	;# 
  9178  1E20                     	;# 
  9179  1E21                     	;# 
  9180  1E22                     	;# 
  9181  1E23                     	;# 
  9182  1E24                     	;# 
  9183  1E25                     	;# 
  9184  1E26                     	;# 
  9185  1E27                     	;# 
  9186  1E28                     	;# 
  9187  1E29                     	;# 
  9188  1E2A                     	;# 
  9189  1E2B                     	;# 
  9190  1E2C                     	;# 
  9191  1E2D                     	;# 
  9192  1E2E                     	;# 
  9193  1E2F                     	;# 
  9194  1E30                     	;# 
  9195  1E31                     	;# 
  9196  1E32                     	;# 
  9197  1E33                     	;# 
  9198  1E34                     	;# 
  9199  1E35                     	;# 
  9200  1E36                     	;# 
  9201  1E37                     	;# 
  9202  1E8F                     	;# 
  9203  1E90                     	;# 
  9204  1E91                     	;# 
  9205  1E92                     	;# 
  9206  1E93                     	;# 
  9207  1E94                     	;# 
  9208  1E95                     	;# 
  9209  1E96                     	;# 
  9210  1E97                     	;# 
  9211  1E9C                     	;# 
  9212  1E9D                     	;# 
  9213  1E9E                     	;# 
  9214  1EA1                     	;# 
  9215  1EA2                     	;# 
  9216  1EA3                     	;# 
  9217  1EA4                     	;# 
  9218  1EA9                     	;# 
  9219  1EAA                     	;# 
  9220  1EB1                     	;# 
  9221  1EB2                     	;# 
  9222  1EB8                     	;# 
  9223  1EB9                     	;# 
  9224  1EBA                     	;# 
  9225  1EBB                     	;# 
  9226  1EBC                     	;# 
  9227  1EBD                     	;# 
  9228  1EBE                     	;# 
  9229  1EC3                     	;# 
  9230  1EC5                     	;# 
  9231  1EC6                     	;# 
  9232  1EC7                     	;# 
  9233  1EC8                     	;# 
  9234  1EC9                     	;# 
  9235  1ECA                     	;# 
  9236  1ECB                     	;# 
  9237  1ECB                     	;# 
  9238  1ECB                     	;# 
  9239  1ECC                     	;# 
  9240  1ECC                     	;# 
  9241  1ECC                     	;# 
  9242  1F10                     	;# 
  9243  1F11                     	;# 
  9244  1F12                     	;# 
  9245  1F14                     	;# 
  9246  1F15                     	;# 
  9247  1F1C                     	;# 
  9248  1F1D                     	;# 
  9249  1F1E                     	;# 
  9250  1F1F                     	;# 
  9251  1F20                     	;# 
  9252  1F21                     	;# 
  9253  1F22                     	;# 
  9254  1F23                     	;# 
  9255  1F24                     	;# 
  9256  1F25                     	;# 
  9257  1F26                     	;# 
  9258  1F27                     	;# 
  9259  1F38                     	;# 
  9260  1F39                     	;# 
  9261  1F3A                     	;# 
  9262  1F3B                     	;# 
  9263  1F3C                     	;# 
  9264  1F3D                     	;# 
  9265  1F3E                     	;# 
  9266  1F3F                     	;# 
  9267  1F43                     	;# 
  9268  1F44                     	;# 
  9269  1F45                     	;# 
  9270  1F46                     	;# 
  9271  1F47                     	;# 
  9272  1F48                     	;# 
  9273  1F49                     	;# 
  9274  1F4A                     	;# 
  9275  1F4E                     	;# 
  9276  1F4F                     	;# 
  9277  1F50                     	;# 
  9278  1F51                     	;# 
  9279  1F52                     	;# 
  9280  1F53                     	;# 
  9281  1F54                     	;# 
  9282  1F55                     	;# 
  9283  1FE4                     	;# 
  9284  1FE5                     	;# 
  9285  1FE6                     	;# 
  9286  1FE7                     	;# 
  9287  1FE8                     	;# 
  9288  1FE8                     	;# 
  9289  1FE9                     	;# 
  9290  1FEA                     	;# 
  9291  1FEB                     	;# 
  9292  1FED                     	;# 
  9293  1FEE                     	;# 
  9294  1FEF                     	;# 
  9295  0000                     	;# 
  9296  0001                     	;# 
  9297  0002                     	;# 
  9298  0003                     	;# 
  9299  0004                     	;# 
  9300  0005                     	;# 
  9301  0006                     	;# 
  9302  0007                     	;# 
  9303  0008                     	;# 
  9304  0009                     	;# 
  9305  000A                     	;# 
  9306  000B                     	;# 
  9307  000C                     	;# 
  9308  000D                     	;# 
  9309  000E                     	;# 
  9310  0012                     	;# 
  9311  0013                     	;# 
  9312  0014                     	;# 
  9313  0018                     	;# 
  9314  0019                     	;# 
  9315  001A                     	;# 
  9316  008C                     	;# 
  9317  008C                     	;# 
  9318  008D                     	;# 
  9319  008E                     	;# 
  9320  008E                     	;# 
  9321  008F                     	;# 
  9322  0090                     	;# 
  9323  0090                     	;# 
  9324  0091                     	;# 
  9325  0092                     	;# 
  9326  0092                     	;# 
  9327  0093                     	;# 
  9328  0094                     	;# 
  9329  0094                     	;# 
  9330  0095                     	;# 
  9331  0096                     	;# 
  9332  0096                     	;# 
  9333  0097                     	;# 
  9334  0098                     	;# 
  9335  0099                     	;# 
  9336  009A                     	;# 
  9337  009B                     	;# 
  9338  009B                     	;# 
  9339  009C                     	;# 
  9340  009D                     	;# 
  9341  009D                     	;# 
  9342  009E                     	;# 
  9343  009F                     	;# 
  9344  010C                     	;# 
  9345  010C                     	;# 
  9346  010D                     	;# 
  9347  010E                     	;# 
  9348  010F                     	;# 
  9349  010F                     	;# 
  9350  0110                     	;# 
  9351  0111                     	;# 
  9352  0112                     	;# 
  9353  0113                     	;# 
  9354  0114                     	;# 
  9355  0115                     	;# 
  9356  0116                     	;# 
  9357  0117                     	;# 
  9358  0118                     	;# 
  9359  0119                     	;# 
  9360  0119                     	;# 
  9361  0119                     	;# 
  9362  011A                     	;# 
  9363  011A                     	;# 
  9364  011A                     	;# 
  9365  011B                     	;# 
  9366  011B                     	;# 
  9367  011B                     	;# 
  9368  011B                     	;# 
  9369  011B                     	;# 
  9370  011C                     	;# 
  9371  011C                     	;# 
  9372  011C                     	;# 
  9373  011D                     	;# 
  9374  011D                     	;# 
  9375  011D                     	;# 
  9376  011E                     	;# 
  9377  011E                     	;# 
  9378  011E                     	;# 
  9379  011F                     	;# 
  9380  011F                     	;# 
  9381  011F                     	;# 
  9382  011F                     	;# 
  9383  011F                     	;# 
  9384  018C                     	;# 
  9385  018D                     	;# 
  9386  018E                     	;# 
  9387  018F                     	;# 
  9388  0190                     	;# 
  9389  0191                     	;# 
  9390  0192                     	;# 
  9391  0196                     	;# 
  9392  0197                     	;# 
  9393  0198                     	;# 
  9394  0199                     	;# 
  9395  019A                     	;# 
  9396  019B                     	;# 
  9397  019C                     	;# 
  9398  020C                     	;# 
  9399  020D                     	;# 
  9400  020E                     	;# 
  9401  020E                     	;# 
  9402  020F                     	;# 
  9403  020F                     	;# 
  9404  0210                     	;# 
  9405  0210                     	;# 
  9406  0211                     	;# 
  9407  0211                     	;# 
  9408  0212                     	;# 
  9409  0213                     	;# 
  9410  0214                     	;# 
  9411  0214                     	;# 
  9412  0215                     	;# 
  9413  0215                     	;# 
  9414  0216                     	;# 
  9415  0216                     	;# 
  9416  0217                     	;# 
  9417  0217                     	;# 
  9418  0218                     	;# 
  9419  0219                     	;# 
  9420  021A                     	;# 
  9421  021A                     	;# 
  9422  021B                     	;# 
  9423  021B                     	;# 
  9424  021C                     	;# 
  9425  021C                     	;# 
  9426  021D                     	;# 
  9427  021D                     	;# 
  9428  021E                     	;# 
  9429  021F                     	;# 
  9430  028C                     	;# 
  9431  028C                     	;# 
  9432  028D                     	;# 
  9433  028D                     	;# 
  9434  028E                     	;# 
  9435  028F                     	;# 
  9436  0290                     	;# 
  9437  0291                     	;# 
  9438  0292                     	;# 
  9439  0292                     	;# 
  9440  0293                     	;# 
  9441  0293                     	;# 
  9442  0294                     	;# 
  9443  0295                     	;# 
  9444  0296                     	;# 
  9445  0297                     	;# 
  9446  0298                     	;# 
  9447  0298                     	;# 
  9448  0299                     	;# 
  9449  0299                     	;# 
  9450  029A                     	;# 
  9451  029B                     	;# 
  9452  029C                     	;# 
  9453  029D                     	;# 
  9454  029F                     	;# 
  9455  030C                     	;# 
  9456  030C                     	;# 
  9457  030D                     	;# 
  9458  030E                     	;# 
  9459  030F                     	;# 
  9460  0310                     	;# 
  9461  0310                     	;# 
  9462  0311                     	;# 
  9463  0312                     	;# 
  9464  0313                     	;# 
  9465  0314                     	;# 
  9466  0314                     	;# 
  9467  0315                     	;# 
  9468  0316                     	;# 
  9469  0317                     	;# 
  9470  0318                     	;# 
  9471  0318                     	;# 
  9472  0319                     	;# 
  9473  031A                     	;# 
  9474  031B                     	;# 
  9475  038C                     	;# 
  9476  038C                     	;# 
  9477  038D                     	;# 
  9478  038E                     	;# 
  9479  0390                     	;# 
  9480  0390                     	;# 
  9481  0391                     	;# 
  9482  0392                     	;# 
  9483  048C                     	;# 
  9484  048C                     	;# 
  9485  048D                     	;# 
  9486  048E                     	;# 
  9487  048F                     	;# 
  9488  048F                     	;# 
  9489  0490                     	;# 
  9490  0491                     	;# 
  9491  0492                     	;# 
  9492  0492                     	;# 
  9493  0493                     	;# 
  9494  0494                     	;# 
  9495  0495                     	;# 
  9496  0495                     	;# 
  9497  0496                     	;# 
  9498  0497                     	;# 
  9499  0498                     	;# 
  9500  0499                     	;# 
  9501  049A                     	;# 
  9502  049B                     	;# 
  9503  049C                     	;# 
  9504  049D                     	;# 
  9505  058C                     	;# 
  9506  058C                     	;# 
  9507  058D                     	;# 
  9508  058E                     	;# 
  9509  058F                     	;# 
  9510  058F                     	;# 
  9511  0590                     	;# 
  9512  0591                     	;# 
  9513  0592                     	;# 
  9514  0593                     	;# 
  9515  059C                     	;# 
  9516  059C                     	;# 
  9517  059D                     	;# 
  9518  059D                     	;# 
  9519  059E                     	;# 
  9520  059F                     	;# 
  9521  060C                     	;# 
  9522  060C                     	;# 
  9523  060D                     	;# 
  9524  060D                     	;# 
  9525  060E                     	;# 
  9526  060F                     	;# 
  9527  0610                     	;# 
  9528  0611                     	;# 
  9529  0612                     	;# 
  9530  0613                     	;# 
  9531  0614                     	;# 
  9532  0616                     	;# 
  9533  0616                     	;# 
  9534  0617                     	;# 
  9535  0617                     	;# 
  9536  0618                     	;# 
  9537  0619                     	;# 
  9538  061A                     	;# 
  9539  061B                     	;# 
  9540  061C                     	;# 
  9541  061D                     	;# 
  9542  061E                     	;# 
  9543  070C                     	;# 
  9544  070D                     	;# 
  9545  070E                     	;# 
  9546  070F                     	;# 
  9547  0710                     	;# 
  9548  0711                     	;# 
  9549  0712                     	;# 
  9550  0713                     	;# 
  9551  0714                     	;# 
  9552  0716                     	;# 
  9553  0717                     	;# 
  9554  0718                     	;# 
  9555  0719                     	;# 
  9556  071A                     	;# 
  9557  071B                     	;# 
  9558  071C                     	;# 
  9559  071D                     	;# 
  9560  071E                     	;# 
  9561  0796                     	;# 
  9562  0797                     	;# 
  9563  0798                     	;# 
  9564  0799                     	;# 
  9565  079A                     	;# 
  9566  079B                     	;# 
  9567  079C                     	;# 
  9568  079D                     	;# 
  9569  080C                     	;# 
  9570  080D                     	;# 
  9571  080E                     	;# 
  9572  080F                     	;# 
  9573  0810                     	;# 
  9574  0811                     	;# 
  9575  0812                     	;# 
  9576  0813                     	;# 
  9577  0814                     	;# 
  9578  081A                     	;# 
  9579  081A                     	;# 
  9580  081B                     	;# 
  9581  081C                     	;# 
  9582  081C                     	;# 
  9583  081D                     	;# 
  9584  081E                     	;# 
  9585  081F                     	;# 
  9586  088C                     	;# 
  9587  088D                     	;# 
  9588  088E                     	;# 
  9589  088F                     	;# 
  9590  0890                     	;# 
  9591  0891                     	;# 
  9592  0892                     	;# 
  9593  0893                     	;# 
  9594  0895                     	;# 
  9595  0896                     	;# 
  9596  0897                     	;# 
  9597  0898                     	;# 
  9598  0899                     	;# 
  9599  089A                     	;# 
  9600  089B                     	;# 
  9601  090C                     	;# 
  9602  090E                     	;# 
  9603  090F                     	;# 
  9604  091F                     	;# 
  9605  098F                     	;# 
  9606  098F                     	;# 
  9607  0990                     	;# 
  9608  0991                     	;# 
  9609  0992                     	;# 
  9610  0993                     	;# 
  9611  0994                     	;# 
  9612  0995                     	;# 
  9613  0996                     	;# 
  9614  0997                     	;# 
  9615  1E0F                     	;# 
  9616  1E10                     	;# 
  9617  1E11                     	;# 
  9618  1E12                     	;# 
  9619  1E13                     	;# 
  9620  1E14                     	;# 
  9621  1E15                     	;# 
  9622  1E16                     	;# 
  9623  1E17                     	;# 
  9624  1E18                     	;# 
  9625  1E19                     	;# 
  9626  1E1A                     	;# 
  9627  1E1B                     	;# 
  9628  1E1C                     	;# 
  9629  1E1D                     	;# 
  9630  1E1E                     	;# 
  9631  1E1F                     	;# 
  9632  1E20                     	;# 
  9633  1E21                     	;# 
  9634  1E22                     	;# 
  9635  1E23                     	;# 
  9636  1E24                     	;# 
  9637  1E25                     	;# 
  9638  1E26                     	;# 
  9639  1E27                     	;# 
  9640  1E28                     	;# 
  9641  1E29                     	;# 
  9642  1E2A                     	;# 
  9643  1E2B                     	;# 
  9644  1E2C                     	;# 
  9645  1E2D                     	;# 
  9646  1E2E                     	;# 
  9647  1E2F                     	;# 
  9648  1E30                     	;# 
  9649  1E31                     	;# 
  9650  1E32                     	;# 
  9651  1E33                     	;# 
  9652  1E34                     	;# 
  9653  1E35                     	;# 
  9654  1E36                     	;# 
  9655  1E37                     	;# 
  9656  1E8F                     	;# 
  9657  1E90                     	;# 
  9658  1E91                     	;# 
  9659  1E92                     	;# 
  9660  1E93                     	;# 
  9661  1E94                     	;# 
  9662  1E95                     	;# 
  9663  1E96                     	;# 
  9664  1E97                     	;# 
  9665  1E9C                     	;# 
  9666  1E9D                     	;# 
  9667  1E9E                     	;# 
  9668  1EA1                     	;# 
  9669  1EA2                     	;# 
  9670  1EA3                     	;# 
  9671  1EA4                     	;# 
  9672  1EA9                     	;# 
  9673  1EAA                     	;# 
  9674  1EB1                     	;# 
  9675  1EB2                     	;# 
  9676  1EB8                     	;# 
  9677  1EB9                     	;# 
  9678  1EBA                     	;# 
  9679  1EBB                     	;# 
  9680  1EBC                     	;# 
  9681  1EBD                     	;# 
  9682  1EBE                     	;# 
  9683  1EC3                     	;# 
  9684  1EC5                     	;# 
  9685  1EC6                     	;# 
  9686  1EC7                     	;# 
  9687  1EC8                     	;# 
  9688  1EC9                     	;# 
  9689  1ECA                     	;# 
  9690  1ECB                     	;# 
  9691  1ECB                     	;# 
  9692  1ECB                     	;# 
  9693  1ECC                     	;# 
  9694  1ECC                     	;# 
  9695  1ECC                     	;# 
  9696  1F10                     	;# 
  9697  1F11                     	;# 
  9698  1F12                     	;# 
  9699  1F14                     	;# 
  9700  1F15                     	;# 
  9701  1F1C                     	;# 
  9702  1F1D                     	;# 
  9703  1F1E                     	;# 
  9704  1F1F                     	;# 
  9705  1F20                     	;# 
  9706  1F21                     	;# 
  9707  1F22                     	;# 
  9708  1F23                     	;# 
  9709  1F24                     	;# 
  9710  1F25                     	;# 
  9711  1F26                     	;# 
  9712  1F27                     	;# 
  9713  1F38                     	;# 
  9714  1F39                     	;# 
  9715  1F3A                     	;# 
  9716  1F3B                     	;# 
  9717  1F3C                     	;# 
  9718  1F3D                     	;# 
  9719  1F3E                     	;# 
  9720  1F3F                     	;# 
  9721  1F43                     	;# 
  9722  1F44                     	;# 
  9723  1F45                     	;# 
  9724  1F46                     	;# 
  9725  1F47                     	;# 
  9726  1F48                     	;# 
  9727  1F49                     	;# 
  9728  1F4A                     	;# 
  9729  1F4E                     	;# 
  9730  1F4F                     	;# 
  9731  1F50                     	;# 
  9732  1F51                     	;# 
  9733  1F52                     	;# 
  9734  1F53                     	;# 
  9735  1F54                     	;# 
  9736  1F55                     	;# 
  9737  1FE4                     	;# 
  9738  1FE5                     	;# 
  9739  1FE6                     	;# 
  9740  1FE7                     	;# 
  9741  1FE8                     	;# 
  9742  1FE8                     	;# 
  9743  1FE9                     	;# 
  9744  1FEA                     	;# 
  9745  1FEB                     	;# 
  9746  1FED                     	;# 
  9747  1FEE                     	;# 
  9748  1FEF                     	;_dmxArray
  9749                           
  9750                           	psect	idataBANK1
  9751  1BC3                     __pidataBANK1:	
  9752                           
  9753                           ;initializer for _incInterval
  9754  1BC3  3464               	retlw	100
  9755  1BC4  3400               	retlw	0
  9756                           
  9757                           ;initializer for _address
  9758  1BC5  3401               	retlw	1
  9759  1BC6  3400               	retlw	0
  9760                           
  9761                           ;initializer for _animationBrightness
  9762  1BC7  3405               	retlw	5
  9763                           
  9764                           ;initializer for _animationModeSelected
  9765  1BC8  3401               	retlw	1
  9766                           
  9767                           ;initializer for _startup
  9768  1BC9  3401               	retlw	1
  9769                           
  9770                           ;initializer for _beatBrightness
  9771  1BCA  3405               	retlw	5
  9772                           
  9773                           	psect	idataBANK2
  9774  1BA5                     __pidataBANK2:	
  9775                           
  9776                           ;initializer for _initial
  9777  1BA5  3401               	retlw	1
  9778  1BA6  3400               	retlw	0
  9779                           
  9780                           ;initializer for _delay
  9781  1BA7  340A               	retlw	10
  9782  1BA8  3400               	retlw	0
  9783                           
  9784                           ;initializer for _threshold
  9785  1BA9  3490               	retlw	144
  9786  1BAA  3406               	retlw	6
  9787                           
  9788                           	psect	stringtext1
  9789  1800                     __pstringtext1:	
  9790  1800                     _charTable:	
  9791  1800  3400               	retlw	0
  9792  1801  3482               	retlw	130
  9793  1802  3421               	retlw	33
  9794  1803  3400               	retlw	0
  9795  1804  3400               	retlw	0
  9796  1805  3400               	retlw	0
  9797  1806  3400               	retlw	0
  9798  1807  3402               	retlw	2
  9799  1808  3439               	retlw	57
  9800  1809  340F               	retlw	15
  9801  180A  3400               	retlw	0
  9802  180B  3400               	retlw	0
  9803  180C  3400               	retlw	0
  9804  180D  3440               	retlw	64
  9805  180E  3480               	retlw	128
  9806  180F  3400               	retlw	0
  9807  1810  343F               	retlw	63
  9808  1811  3406               	retlw	6
  9809  1812  345B               	retlw	91
  9810  1813  344F               	retlw	79
  9811  1814  3466               	retlw	102
  9812  1815  346D               	retlw	109
  9813  1816  347D               	retlw	125
  9814  1817  3407               	retlw	7
  9815  1818  347F               	retlw	127
  9816  1819  346F               	retlw	111
  9817  181A  3400               	retlw	0
  9818  181B  3400               	retlw	0
  9819  181C  3400               	retlw	0
  9820  181D  3448               	retlw	72
  9821  181E  3400               	retlw	0
  9822  181F  3453               	retlw	83
  9823  1820  3400               	retlw	0
  9824  1821  3477               	retlw	119
  9825  1822  347C               	retlw	124
  9826  1823  3439               	retlw	57
  9827  1824  345E               	retlw	94
  9828  1825  3479               	retlw	121
  9829  1826  3471               	retlw	113
  9830  1827  346F               	retlw	111
  9831  1828  3476               	retlw	118
  9832  1829  3406               	retlw	6
  9833  182A  341E               	retlw	30
  9834  182B  3400               	retlw	0
  9835  182C  3438               	retlw	56
  9836  182D  3400               	retlw	0
  9837  182E  3454               	retlw	84
  9838  182F  343F               	retlw	63
  9839  1830  3473               	retlw	115
  9840  1831  3467               	retlw	103
  9841  1832  3450               	retlw	80
  9842  1833  346D               	retlw	109
  9843  1834  3478               	retlw	120
  9844  1835  343E               	retlw	62
  9845  1836  3400               	retlw	0
  9846  1837  3400               	retlw	0
  9847  1838  3400               	retlw	0
  9848  1839  346E               	retlw	110
  9849  183A  3400               	retlw	0
  9850  183B  3439               	retlw	57
  9851  183C  3400               	retlw	0
  9852  183D  340F               	retlw	15
  9853  183E  3400               	retlw	0
  9854  183F  3408               	retlw	8
  9855  1840  3463               	retlw	99
  9856  1841  345F               	retlw	95
  9857  1842  347C               	retlw	124
  9858  1843  3458               	retlw	88
  9859  1844  345E               	retlw	94
  9860  1845  347B               	retlw	123
  9861  1846  3471               	retlw	113
  9862  1847  346F               	retlw	111
  9863  1848  3474               	retlw	116
  9864  1849  3402               	retlw	2
  9865  184A  341E               	retlw	30
  9866  184B  3400               	retlw	0
  9867  184C  3406               	retlw	6
  9868  184D  3400               	retlw	0
  9869  184E  3454               	retlw	84
  9870  184F  345C               	retlw	92
  9871  1850  3473               	retlw	115
  9872  1851  3467               	retlw	103
  9873  1852  3450               	retlw	80
  9874  1853  346D               	retlw	109
  9875  1854  3478               	retlw	120
  9876  1855  341C               	retlw	28
  9877  1856  3400               	retlw	0
  9878  1857  3400               	retlw	0
  9879  1858  3400               	retlw	0
  9880  1859  346E               	retlw	110
  9881  185A  3400               	retlw	0
  9882  185B  3439               	retlw	57
  9883  185C  3430               	retlw	48
  9884  185D  340F               	retlw	15
  9885  185E  3400               	retlw	0
  9886  185F  3400               	retlw	0
  9887  1860                     __end_of_charTable:	
  9888                           
  9889                           	psect	nvBANK2
  9890  016B                     __pnvBANK2:	
  9891  016B                     _ADCC_ADTI_InterruptHandler:	
  9892  016B                     	ds	2
  9893  016D                     _TMR0_InterruptHandler:	
  9894  016D                     	ds	2
  9895                           
  9896                           	psect	nvBANK3
  9897  01E8                     __pnvBANK3:	
  9898  01E8                     _EUSART1_FramingErrorHandler:	
  9899  01E8                     	ds	2
  9900  01EA                     _EUSART1_RxDefaultInterruptHandler:	
  9901  01EA                     	ds	2
  9902                           
  9903                           	psect	nvBANK4
  9904  0264                     __pnvBANK4:	
  9905  0264                     _EUSART1_OverrunErrorHandler:	
  9906  0264                     	ds	2
  9907                           
  9908                           	psect	nvBANK5
  9909  02D2                     __pnvBANK5:	
  9910  02D2                     _EUSART1_ErrorHandler:	
  9911  02D2                     	ds	2
  9912  0014                     _TRISCbits	set	20
  9913  0012                     _TRISAbits	set	18
  9914  000B                     _INTCONbits	set	11
  9915  0014                     _TRISC	set	20
  9916  0013                     _TRISB	set	19
  9917  0012                     _TRISA	set	18
  9918  001A                     _LATC	set	26
  9919  0019                     _LATB	set	25
  9920  0018                     _LATA	set	24
  9921  000C                     _PORTA	set	12
  9922  000E                     _PORTC	set	14
  9923  00D5                     _LATC5	set	213
  9924  0090                     _ADERRL	set	144
  9925  0091                     _ADERRH	set	145
  9926  009B                     _ADPREVL	set	155
  9927  009C                     _ADPREVH	set	156
  9928  0094                     _ADFLTRL	set	148
  9929  0095                     _ADFLTRH	set	149
  9930  0096                     _ADACCL	set	150
  9931  0097                     _ADACCH	set	151
  9932  0099                     _ADCNT	set	153
  9933  009D                     _ADRESL	set	157
  9934  009E                     _ADRESH	set	158
  9935  009F                     _ADPCH	set	159
  9936  009A                     _ADRPT	set	154
  9937  0098                     _ADACCU	set	152
  9938  0093                     _ADSTPTH	set	147
  9939  0092                     _ADSTPTL	set	146
  9940  008F                     _ADUTHH	set	143
  9941  008E                     _ADUTHL	set	142
  9942  008D                     _ADLTHH	set	141
  9943  008C                     _ADLTHL	set	140
  9944  0112                     _ADCON1bits	set	274
  9945  0115                     _ADSTATbits	set	277
  9946  0113                     _ADCON2bits	set	275
  9947  0114                     _ADCON3bits	set	276
  9948  0111                     _ADCON0bits	set	273
  9949  0111                     _ADCON0	set	273
  9950  0118                     _ADCLK	set	280
  9951  0117                     _ADACT	set	279
  9952  0116                     _ADREF	set	278
  9953  0115                     _ADSTAT	set	277
  9954  0114                     _ADCON3	set	276
  9955  0113                     _ADCON2	set	275
  9956  0112                     _ADCON1	set	274
  9957  0110                     _ADPREH	set	272
  9958  010F                     _ADPREL	set	271
  9959  010E                     _ADCAP	set	270
  9960  010D                     _ADACQH	set	269
  9961  010C                     _ADACQL	set	268
  9962  0119                     _RC1REG	set	281
  9963  011D                     _RC1STAbits	set	285
  9964  011A                     _TX1REG	set	282
  9965  011E                     _TX1STAbits	set	286
  9966  011C                     _SP1BRGH	set	284
  9967  011B                     _SP1BRGL	set	283
  9968  011E                     _TX1STA	set	286
  9969  011D                     _RC1STA	set	285
  9970  011F                     _BAUD1CON	set	287
  9971  018C                     _SSP1BUF	set	396
  9972  0191                     _SSP1CON2bits	set	401
  9973  0190                     _SSP1CON1bits	set	400
  9974  018D                     _SSP1ADD	set	397
  9975  0192                     _SSP1CON3	set	402
  9976  0190                     _SSP1CON1	set	400
  9977  018F                     _SSP1STAT	set	399
  9978  021E                     _CCPTMRS0bits	set	542
  9979  028D                     _PR2	set	653
  9980  028C                     _TMR2	set	652
  9981  028E                     _T2CONbits	set	654
  9982  0291                     _T2RSTbits	set	657
  9983  028F                     _T2HLTbits	set	655
  9984  028E                     _T2CON	set	654
  9985  028C                     _T2TMR	set	652
  9986  028D                     _T2PR	set	653
  9987  0291                     _T2RST	set	657
  9988  028F                     _T2HLT	set	655
  9989  0290                     _T2CLKCON	set	656
  9990  0312                     _CCP2CONbits	set	786
  9991  0310                     _CCPR2L	set	784
  9992  0311                     _CCPR2H	set	785
  9993  0312                     _CCP2CON	set	786
  9994  030E                     _CCP1CONbits	set	782
  9995  030C                     _CCPR1L	set	780
  9996  030D                     _CCPR1H	set	781
  9997  030E                     _CCP1CON	set	782
  9998  031A                     _CCP4CONbits	set	794
  9999  0318                     _CCPR4L	set	792
 10000  0319                     _CCPR4H	set	793
 10001  031A                     _CCP4CON	set	794
 10002  0316                     _CCP3CONbits	set	790
 10003  0314                     _CCPR3L	set	788
 10004  0315                     _CCPR3H	set	789
 10005  0316                     _CCP3CON	set	790
 10006  059E                     _T0CON0bits	set	1438
 10007  059E                     _T0CON0	set	1438
 10008  059C                     _TMR0L	set	1436
 10009  059D                     _TMR0H	set	1437
 10010  059F                     _T0CON1	set	1439
 10011  070D                     _PIR1bits	set	1805
 10012  0717                     _PIE1bits	set	1815
 10013  070C                     _PIR0bits	set	1804
 10014  0716                     _PIE0bits	set	1814
 10015  070F                     _PIR3bits	set	1807
 10016  0719                     _PIE3bits	set	1817
 10017  0710                     _PIR4bits	set	1808
 10018  079D                     _PMD7	set	1949
 10019  079C                     _PMD6	set	1948
 10020  079B                     _PMD5	set	1947
 10021  079A                     _PMD4	set	1946
 10022  0799                     _PMD3	set	1945
 10023  0798                     _PMD2	set	1944
 10024  0797                     _PMD1	set	1943
 10025  0796                     _PMD0	set	1942
 10026  0892                     _OSCTUNE	set	2194
 10027  0893                     _OSCFRQ	set	2195
 10028  0891                     _OSCEN	set	2193
 10029  088F                     _OSCCON3	set	2191
 10030  088D                     _OSCCON1	set	2189
 10031  1ECB                     _RX1DTPPS	set	7883
 10032  1EC6                     _SSP1DATPPS	set	7878
 10033  1EC5                     _SSP1CLKPPS	set	7877
 10034  1F4F                     _WPUCbits	set	8015
 10035  1F4E                     _ANSELCbits	set	8014
 10036  1F39                     _WPUAbits	set	7993
 10037  1F38                     _ANSELAbits	set	7992
 10038  1F27                     _RC7PPS	set	7975
 10039  1F26                     _RC6PPS	set	7974
 10040  1F15                     _RA5PPS	set	7957
 10041  1F24                     _RC4PPS	set	7972
 10042  1F23                     _RC3PPS	set	7971
 10043  1F14                     _RA4PPS	set	7956
 10044  1F51                     _SLRCONC	set	8017
 10045  1F46                     _SLRCONB	set	8006
 10046  1F3B                     _SLRCONA	set	7995
 10047  1F50                     _ODCONC	set	8016
 10048  1F45                     _ODCONB	set	8005
 10049  1F3A                     _ODCONA	set	7994
 10050  1F4F                     _WPUC	set	8015
 10051  1F39                     _WPUA	set	7993
 10052  1F44                     _WPUB	set	8004
 10053  1F38                     _ANSELA	set	7992
 10054  1F43                     _ANSELB	set	8003
 10055  1F4E                     _ANSELC	set	8014
 10056                           
 10057                           	psect	stringtext2
 10058  2000                     __pstringtext2:	
 10059  2000                     STR_24:	
 10060  2000  3425               	retlw	37	;'%'
 10061  2001  3463               	retlw	99	;'c'
 10062  2002  3425               	retlw	37	;'%'
 10063  2003  3463               	retlw	99	;'c'
 10064  2004  3425               	retlw	37	;'%'
 10065  2005  3463               	retlw	99	;'c'
 10066  2006  3425               	retlw	37	;'%'
 10067  2007  3463               	retlw	99	;'c'
 10068  2008  340D               	retlw	13
 10069  2009  3400               	retlw	0
 10070                           
 10071                           	psect	stringtext3
 10072  200A                     __pstringtext3:	
 10073  200A                     STR_25:	
 10074  200A  3425               	retlw	37	;'%'
 10075  200B  3463               	retlw	99	;'c'
 10076  200C  3425               	retlw	37	;'%'
 10077  200D  3463               	retlw	99	;'c'
 10078  200E  3425               	retlw	37	;'%'
 10079  200F  3463               	retlw	99	;'c'
 10080  2010  3420               	retlw	32	;' '
 10081  2011  340D               	retlw	13
 10082  2012  3400               	retlw	0
 10083                           
 10084                           	psect	stringtext4
 10085  2013                     __pstringtext4:	
 10086  2013                     STR_23:	
 10087  2013  3420               	retlw	32	;' '
 10088  2014  3425               	retlw	37	;'%'
 10089  2015  3463               	retlw	99	;'c'
 10090  2016  3425               	retlw	37	;'%'
 10091  2017  3463               	retlw	99	;'c'
 10092  2018  3425               	retlw	37	;'%'
 10093  2019  3463               	retlw	99	;'c'
 10094  201A  340D               	retlw	13
 10095  201B  3400               	retlw	0
 10096                           
 10097                           	psect	stringtext5
 10098  201C                     __pstringtext5:	
 10099  201C                     STR_20:	
 10100  201C  3448               	retlw	72	;'H'
 10101  201D  3445               	retlw	69	;'E'
 10102  201E  3459               	retlw	89	;'Y'
 10103  201F  3459               	retlw	89	;'Y'
 10104  2020  3459               	retlw	89	;'Y'
 10105  2021  3459               	retlw	89	;'Y'
 10106  2022  3459               	retlw	89	;'Y'
 10107  2023  3459               	retlw	89	;'Y'
 10108  2024  3400               	retlw	0
 10109                           
 10110                           	psect	stringtext6
 10111  2025                     __pstringtext6:	
 10112  2025                     STR_26:	
 10113  2025  3425               	retlw	37	;'%'
 10114  2026  3463               	retlw	99	;'c'
 10115  2027  3425               	retlw	37	;'%'
 10116  2028  3463               	retlw	99	;'c'
 10117  2029  3420               	retlw	32	;' '
 10118  202A  3420               	retlw	32	;' '
 10119  202B  340D               	retlw	13
 10120  202C  3400               	retlw	0
 10121                           
 10122                           	psect	stringtext7
 10123  202D                     __pstringtext7:	
 10124  202D                     STR_22:	
 10125  202D  3420               	retlw	32	;' '
 10126  202E  3420               	retlw	32	;' '
 10127  202F  3425               	retlw	37	;'%'
 10128  2030  3463               	retlw	99	;'c'
 10129  2031  3425               	retlw	37	;'%'
 10130  2032  3463               	retlw	99	;'c'
 10131  2033  340D               	retlw	13
 10132  2034  3400               	retlw	0
 10133                           
 10134                           	psect	stringtext8
 10135  2035                     __pstringtext8:	
 10136  2035                     STR_27:	
 10137  2035  3425               	retlw	37	;'%'
 10138  2036  3463               	retlw	99	;'c'
 10139  2037  3420               	retlw	32	;' '
 10140  2038  3420               	retlw	32	;' '
 10141  2039  3420               	retlw	32	;' '
 10142  203A  340D               	retlw	13
 10143  203B  3400               	retlw	0
 10144                           
 10145                           	psect	stringtext9
 10146  203C                     __pstringtext9:	
 10147  203C                     STR_21:	
 10148  203C  3420               	retlw	32	;' '
 10149  203D  3420               	retlw	32	;' '
 10150  203E  3420               	retlw	32	;' '
 10151  203F  3425               	retlw	37	;'%'
 10152  2040  3463               	retlw	99	;'c'
 10153  2041  340D               	retlw	13
 10154  2042  3400               	retlw	0
 10155                           
 10156                           	psect	stringtext10
 10157  2043                     __pstringtext10:	
 10158  2043                     STR_28:	
 10159  2043  3420               	retlw	32	;' '
 10160  2044  3420               	retlw	32	;' '
 10161  2045  3420               	retlw	32	;' '
 10162  2046  3420               	retlw	32	;' '
 10163  2047  340D               	retlw	13
 10164  2048  3400               	retlw	0
 10165                           
 10166                           	psect	stringtext11
 10167  2049                     __pstringtext11:	
 10168  2049                     STR_5:	
 10169  2049  3442               	retlw	66	;'B'
 10170  204A  3420               	retlw	32	;' '
 10171  204B  3420               	retlw	32	;' '
 10172  204C  3420               	retlw	32	;' '
 10173  204D  340D               	retlw	13
 10174  204E  3400               	retlw	0
 10175                           
 10176                           	psect	stringtext12
 10177  204F                     __pstringtext12:	
 10178  204F                     STR_7:	
 10179  204F  3443               	retlw	67	;'C'
 10180  2050  3420               	retlw	32	;' '
 10181  2051  3420               	retlw	32	;' '
 10182  2052  3420               	retlw	32	;' '
 10183  2053  340D               	retlw	13
 10184  2054  3400               	retlw	0
 10185                           
 10186                           	psect	stringtext13
 10187  2055                     __pstringtext13:	
 10188  2055                     STR_1:	
 10189  2055  3450               	retlw	80	;'P'
 10190  2056  3443               	retlw	67	;'C'
 10191  2057  3420               	retlw	32	;' '
 10192  2058  3420               	retlw	32	;' '
 10193  2059  340D               	retlw	13
 10194  205A  3400               	retlw	0
 10195                           
 10196                           	psect	stringtext14
 10197  205B                     __pstringtext14:	
 10198  205B                     STR_4:	
 10199  205B  344C               	retlw	76	;'L'
 10200  205C  3445               	retlw	69	;'E'
 10201  205D  3444               	retlw	68	;'D'
 10202  205E  3420               	retlw	32	;' '
 10203  205F  340D               	retlw	13
 10204  2060  3400               	retlw	0
 10205                           
 10206                           	psect	stringtext15
 10207  2061                     __pstringtext15:	
 10208  2061                     STR_3:	
 10209  2061  3441               	retlw	65	;'A'
 10210  2062  344E               	retlw	78	;'N'
 10211  2063  3449               	retlw	73	;'I'
 10212  2064  3420               	retlw	32	;' '
 10213  2065  340D               	retlw	13
 10214  2066  3400               	retlw	0
 10215                           
 10216                           	psect	stringtext16
 10217  2067                     __pstringtext16:	
 10218  2067                     STR_8:	
 10219  2067  3441               	retlw	65	;'A'
 10220  2068  344C               	retlw	76	;'L'
 10221  2069  344C               	retlw	76	;'L'
 10222  206A  3420               	retlw	32	;' '
 10223  206B  340D               	retlw	13
 10224  206C  3400               	retlw	0
 10225                           
 10226                           	psect	stringtext17
 10227  206D                     __pstringtext17:	
 10228  206D                     STR_6:	
 10229  206D  3446               	retlw	70	;'F'
 10230  206E  3441               	retlw	65	;'A'
 10231  206F  3444               	retlw	68	;'D'
 10232  2070  3445               	retlw	69	;'E'
 10233  2071  340D               	retlw	13
 10234  2072  3400               	retlw	0
 10235                           
 10236                           	psect	stringtext18
 10237  2073                     __pstringtext18:	
 10238  2073                     STR_2:	
 10239  2073  3442               	retlw	66	;'B'
 10240  2074  3445               	retlw	69	;'E'
 10241  2075  3441               	retlw	65	;'A'
 10242  2076  3454               	retlw	84	;'T'
 10243  2077  340D               	retlw	13
 10244  2078  3400               	retlw	0
 10245                           
 10246                           	psect	stringtext19
 10247  2079                     __pstringtext19:	
 10248  2079                     STR_18:	
 10249  2079  3420               	retlw	32	;' '
 10250  207A  3420               	retlw	32	;' '
 10251  207B  3420               	retlw	32	;' '
 10252  207C  3420               	retlw	32	;' '
 10253  207D  3400               	retlw	0
 10254                           
 10255                           	psect	stringtext20
 10256  207E                     __pstringtext20:	
 10257  207E                     STR_13:	
 10258  207E  3441               	retlw	65	;'A'
 10259  207F  342D               	retlw	45	;'-'
 10260  2080  340D               	retlw	13
 10261  2081  3400               	retlw	0
 10262                           
 10263                           	psect	stringtext21
 10264  2082                     __pstringtext21:	
 10265  2082                     STR_10:	
 10266  2082  3442               	retlw	66	;'B'
 10267  2083  342D               	retlw	45	;'-'
 10268  2084  340D               	retlw	13
 10269  2085  3400               	retlw	0
 10270                           
 10271                           	psect	stringtext22
 10272  2086                     __pstringtext22:	
 10273  2086                     STR_12:	
 10274  2086  3443               	retlw	67	;'C'
 10275  2087  342D               	retlw	45	;'-'
 10276  2088  340D               	retlw	13
 10277  2089  3400               	retlw	0
 10278                           
 10279                           	psect	stringtext23
 10280  208A                     __pstringtext23:	
 10281  208A                     STR_11:	
 10282  208A  3446               	retlw	70	;'F'
 10283  208B  342D               	retlw	45	;'-'
 10284  208C  340D               	retlw	13
 10285  208D  3400               	retlw	0
 10286                           
 10287                           	psect	stringtext24
 10288  208E                     __pstringtext24:	
 10289  208E                     STR_16:	
 10290  208E  3462               	retlw	98	;'b'
 10291  208F  340D               	retlw	13
 10292  2090  3400               	retlw	0
 10293                           
 10294                           	psect	stringtext25
 10295  2091                     __pstringtext25:	
 10296  2091                     STR_9:	
 10297  2091  3464               	retlw	100	;'d'
 10298  2092  340D               	retlw	13
 10299  2093  3400               	retlw	0
 10300                           
 10301                           	psect	stringtext26
 10302  2094                     __pstringtext26:	
 10303  2094                     STR_15:	
 10304  2094  3467               	retlw	103	;'g'
 10305  2095  340D               	retlw	13
 10306  2096  3400               	retlw	0
 10307                           
 10308                           	psect	stringtext27
 10309  2097                     __pstringtext27:	
 10310  2097                     STR_17:	
 10311  2097  3468               	retlw	104	;'h'
 10312  2098  340D               	retlw	13
 10313  2099  3400               	retlw	0
 10314                           
 10315                           	psect	stringtext28
 10316  209A                     __pstringtext28:	
 10317  209A                     STR_14:	
 10318  209A  3472               	retlw	114	;'r'
 10319  209B  340D               	retlw	13
 10320  209C  3400               	retlw	0
 10321                           
 10322                           	psect	stringtext29
 10323  0000                     __pstringtext29:	
 10324  2047                     
 10325                           ; #config settings
 10326  0000                     
 10327                           	psect	cinit
 10328  0032                     start_initialization:	
 10329  0032                     __initialization:		;BIGRAM
 10330                           
 10331                           ; Initialize objects allocated to BANK1
 10332  0032  30C3               	movlw	low __pidataBANK1
 10333  0033  0084               	movwf	4
 10334  0034  309B               	movlw	(high __pidataBANK1)| (0+128)
 10335  0035  0085               	movwf	5
 10336  0036  30E8               	movlw	low __pdataBANK1
 10337  0037  0086               	movwf	6
 10338  0038  3000               	movlw	high __pdataBANK1
 10339  0039  0087               	movwf	7
 10340  003A  3000               	movlw	0
 10341  003B  00FF               	movwf	btemp+1
 10342  003C  3008               	movlw	8
 10343  003D  319C  2472  3180   	fcall	init_ram
 10344                           
 10345                           ; Initialize objects allocated to BANK2
 10346  0040  30A5               	movlw	low __pidataBANK2
 10347  0041  0084               	movwf	4
 10348  0042  309B               	movlw	(high __pidataBANK2)| (0+128)
 10349  0043  0085               	movwf	5
 10350  0044  305F               	movlw	low __pdataBANK2
 10351  0045  0086               	movwf	6
 10352  0046  3001               	movlw	high __pdataBANK2
 10353  0047  0087               	movwf	7
 10354  0048  3000               	movlw	0
 10355  0049  00FF               	movwf	btemp+1
 10356  004A  3006               	movlw	6
 10357  004B  319C  2472  3180   	fcall	init_ram
 10358                           
 10359                           ; Clear objects allocated to BIGRAM
 10360  004E  30EE               	movlw	low (0+9198)
 10361  004F  0084               	movwf	4
 10362  0050  3023               	movlw	high (0+9198)
 10363  0051  0085               	movwf	5
 10364  0052  3002               	movlw	2
 10365  0053  00FE               	movwf	btemp
 10366  0054  3004               	movlw	4
 10367  0055  00FF               	movwf	btemp+1
 10368  0056  319C  2466  3180   	fcall	clear_ram0
 10369                           
 10370                           ; Clear objects allocated to COMMON
 10371  0059  01F0               	clrf	__pbssCOMMON& (0+127)
 10372  005A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
 10373  005B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
 10374  005C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
 10375  005D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
 10376  005E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
 10377  005F  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
 10378                           
 10379                           ; Clear objects allocated to BANK1
 10380  0060  30C5               	movlw	low __pbssBANK1
 10381  0061  0084               	movwf	4
 10382  0062  3000               	movlw	high __pbssBANK1
 10383  0063  0085               	movwf	5
 10384  0064  3023               	movlw	35
 10385  0065  00FE               	movwf	btemp
 10386  0066  3000               	movlw	0
 10387  0067  00FF               	movwf	btemp+1
 10388  0068  319C  2466  3180   	fcall	clear_ram0
 10389                           
 10390                           ; Clear objects allocated to BANK2
 10391  006B  3020               	movlw	low __pbssBANK2
 10392  006C  0084               	movwf	4
 10393  006D  3001               	movlw	high __pbssBANK2
 10394  006E  0085               	movwf	5
 10395  006F  303F               	movlw	63
 10396  0070  00FE               	movwf	btemp
 10397  0071  3000               	movlw	0
 10398  0072  00FF               	movwf	btemp+1
 10399  0073  319C  2466  3180   	fcall	clear_ram0
 10400                           
 10401                           ; Clear objects allocated to BANK3
 10402  0076  30A0               	movlw	low __pbssBANK3
 10403  0077  0084               	movwf	4
 10404  0078  3001               	movlw	high __pbssBANK3
 10405  0079  0085               	movwf	5
 10406  007A  3048               	movlw	72
 10407  007B  00FE               	movwf	btemp
 10408  007C  3000               	movlw	0
 10409  007D  00FF               	movwf	btemp+1
 10410  007E  319C  2466  3180   	fcall	clear_ram0
 10411                           
 10412                           ; Clear objects allocated to BANK4
 10413  0081  3020               	movlw	low __pbssBANK4
 10414  0082  0084               	movwf	4
 10415  0083  3002               	movlw	high __pbssBANK4
 10416  0084  0085               	movwf	5
 10417  0085  3044               	movlw	68
 10418  0086  00FE               	movwf	btemp
 10419  0087  3000               	movlw	0
 10420  0088  00FF               	movwf	btemp+1
 10421  0089  319C  2466  3180   	fcall	clear_ram0
 10422                           
 10423                           ; Clear objects allocated to BANK5
 10424  008C  30A0               	movlw	low __pbssBANK5
 10425  008D  0084               	movwf	4
 10426  008E  3002               	movlw	high __pbssBANK5
 10427  008F  0085               	movwf	5
 10428  0090  3032               	movlw	50
 10429  0091  00FE               	movwf	btemp
 10430  0092  3000               	movlw	0
 10431  0093  00FF               	movwf	btemp+1
 10432  0094  319C  2466  3180   	fcall	clear_ram0
 10433                           
 10434                           ; Clear objects allocated to BANK6
 10435  0097  3020               	movlw	low __pbssBANK6
 10436  0098  0084               	movwf	4
 10437  0099  3003               	movlw	high __pbssBANK6
 10438  009A  0085               	movwf	5
 10439  009B  3040               	movlw	64
 10440  009C  00FE               	movwf	btemp
 10441  009D  3000               	movlw	0
 10442  009E  00FF               	movwf	btemp+1
 10443  009F  319C  2466         	fcall	clear_ram0
 10444  00A1                     end_of_initialization:	
 10445                           ;End of C runtime variable initialization code
 10446                           
 10447  00A1                     __end_of__initialization:	
 10448  00A1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10449  00A2  0140               	movlb	0
 10450  00A3  3191  29AB         	ljmp	_main	;jump to C main() function
 10451                           
 10452                           	psect	bssCOMMON
 10453  0070                     __pbssCOMMON:	
 10454  0070                     _animationBrightnessControl:	
 10455  0070                     	ds	1
 10456  0071                     _p_i2c1_current:	
 10457  0071                     	ds	1
 10458  0072                     _p_i2c1_trb_current:	
 10459  0072                     	ds	1
 10460  0073                     _eusart1RxTail:	
 10461  0073                     	ds	1
 10462  0074                     _eusart1RxHead:	
 10463  0074                     	ds	1
 10464  0075                     I2C1_ISR@i2c_address:	
 10465  0075                     	ds	2
 10466                           
 10467                           	psect	bssBANK1
 10468  00C5                     __pbssBANK1:	
 10469  00C5                     _i2c1_object:	
 10470  00C5                     	ds	5
 10471  00CA                     _manualColor:	
 10472  00CA                     	ds	4
 10473  00CE                     _currentState:	
 10474  00CE                     	ds	2
 10475  00D0                     _lastIncTime:	
 10476  00D0                     	ds	2
 10477  00D2                     _currentMenu:	
 10478  00D2                     	ds	2
 10479  00D4                     _lastDetected:	
 10480  00D4                     	ds	1
 10481  00D5                     _thresholdExceeded:	
 10482  00D5                     	ds	1
 10483  00D6                     _detected:	
 10484  00D6                     	ds	1
 10485  00D7                     _position:	
 10486  00D7                     	ds	1
 10487  00D8                     _beatHold:	
 10488  00D8                     	ds	1
 10489  00D9                     _currentSelection:	
 10490  00D9                     	ds	1
 10491  00DA                     _enterState:	
 10492  00DA                     	ds	1
 10493  00DB                     _menuState:	
 10494  00DB                     	ds	1
 10495  00DC                     _downState:	
 10496  00DC                     	ds	1
 10497  00DD                     _upState:	
 10498  00DD                     	ds	1
 10499  00DE                     _enter:	
 10500  00DE                     	ds	1
 10501  00DF                     _down:	
 10502  00DF                     	ds	1
 10503  00E0                     _up:	
 10504  00E0                     	ds	1
 10505  00E1                     _menu:	
 10506  00E1                     	ds	1
 10507  00E2                     I2C1_ISR@i2c_10bit_address_restart:	
 10508  00E2                     	ds	1
 10509  00E3                     I2C1_ISR@i2c_bytes_left:	
 10510  00E3                     	ds	1
 10511  00E4                     I2C1_ISR@pi2c_buf_ptr:	
 10512  00E4                     	ds	1
 10513  00E5                     _i2c1_trb_count:	
 10514  00E5                     	ds	1
 10515  00E6                     _i2c1_state:	
 10516  00E6                     	ds	1
 10517  00E7                     _eusart1RxCount:	
 10518  00E7                     	ds	1
 10519                           
 10520                           	psect	dataBANK1
 10521  00E8                     __pdataBANK1:	
 10522  00E8                     _incInterval:	
 10523  00E8                     	ds	2
 10524  00EA                     _address:	
 10525  00EA                     	ds	2
 10526  00EC                     _animationBrightness:	
 10527  00EC                     	ds	1
 10528  00ED                     _animationModeSelected:	
 10529  00ED                     	ds	1
 10530  00EE                     _startup:	
 10531  00EE                     	ds	1
 10532  00EF                     _beatBrightness:	
 10533  00EF                     	ds	1
 10534                           
 10535                           	psect	bssBANK2
 10536  0120                     __pbssBANK2:	
 10537  0120                     _nout:	
 10538  0120                     	ds	2
 10539  0122                     _width:	
 10540  0122                     	ds	2
 10541  0124                     _prec:	
 10542  0124                     	ds	2
 10543  0126                     _flags:	
 10544  0126                     	ds	2
 10545  0128                     _lastLedActiveTime:	
 10546  0128                     	ds	2
 10547  012A                     _arrayIndex:	
 10548  012A                     	ds	2
 10549  012C                     _thresholdCount:	
 10550  012C                     	ds	2
 10551  012E                     _lastRun:	
 10552  012E                     	ds	2
 10553  0130                     _bpm:	
 10554  0130                     	ds	2
 10555  0132                     _lastBeat:	
 10556  0132                     	ds	2
 10557  0134                     _lastActiveTime:	
 10558  0134                     	ds	2
 10559  0136                     _previousTask:	
 10560  0136                     	ds	2
 10561  0138                     _currentTime:	
 10562  0138                     	ds	2
 10563  013A                     _lastTime:	
 10564  013A                     	ds	2
 10565  013C                     _startTime:	
 10566  013C                     	ds	2
 10567  013E                     _tm1650_status:	
 10568  013E                     	ds	1
 10569  013F                     _colorModeSelected:	
 10570  013F                     	ds	1
 10571  0140                     _enterPressed:	
 10572  0140                     	ds	1
 10573  0141                     _menuPressed:	
 10574  0141                     	ds	1
 10575  0142                     _menuSelected:	
 10576  0142                     	ds	1
 10577  0143                     _eusart1RxLastError:	
 10578  0143                     	ds	1
 10579  0144                     _manual:	
 10580  0144                     	ds	10
 10581  014E                     _beat:	
 10582  014E                     	ds	10
 10583  0158                     I2C1_MasterWrite@trBlock:	
 10584  0158                     	ds	4
 10585  015C                     _i2c1_tr_queue:	
 10586  015C                     	ds	3
 10587                           
 10588                           	psect	dataBANK2
 10589  015F                     __pdataBANK2:	
 10590  015F                     _initial:	
 10591  015F                     	ds	2
 10592  0161                     _delay:	
 10593  0161                     	ds	2
 10594  0163                     _threshold:	
 10595  0163                     	ds	2
 10596                           
 10597                           	psect	bssBANK3
 10598  01A0                     __pbssBANK3:	
 10599  01A0                     _eusart1RxStatusBuffer:	
 10600  01A0                     	ds	8
 10601  01A8                     _manualRed:	
 10602  01A8                     	ds	10
 10603  01B2                     _animationBrightnessCtrl:	
 10604  01B2                     	ds	10
 10605  01BC                     _animationType:	
 10606  01BC                     	ds	10
 10607  01C6                     _beatStrobe:	
 10608  01C6                     	ds	10
 10609  01D0                     _animation:	
 10610  01D0                     	ds	10
 10611  01DA                     _dmx:	
 10612  01DA                     	ds	10
 10613  01E4                     I2C1_MasterRead@trBlock:	
 10614  01E4                     	ds	4
 10615                           
 10616                           	psect	bssBANK4
 10617  0220                     __pbssBANK4:	
 10618  0220                     _eusart1RxBuffer:	
 10619  0220                     	ds	8
 10620  0228                     _beatFadeTask:	
 10621  0228                     	ds	10
 10622  0232                     _beatStrobeTask:	
 10623  0232                     	ds	10
 10624  023C                     _beatMixed:	
 10625  023C                     	ds	10
 10626  0246                     _beatCont:	
 10627  0246                     	ds	10
 10628  0250                     _beatFade:	
 10629  0250                     	ds	10
 10630  025A                     _dmx_task:	
 10631  025A                     	ds	10
 10632                           
 10633                           	psect	bssBANK5
 10634  02A0                     __pbssBANK5:	
 10635  02A0                     _manualWhite:	
 10636  02A0                     	ds	10
 10637  02AA                     _manualBlue:	
 10638  02AA                     	ds	10
 10639  02B4                     _manualGreen:	
 10640  02B4                     	ds	10
 10641  02BE                     _beatMixedTask:	
 10642  02BE                     	ds	10
 10643  02C8                     _beatContTask:	
 10644  02C8                     	ds	10
 10645                           
 10646                           	psect	bssBANK6
 10647  0320                     __pbssBANK6:	
 10648  0320                     _dbuf:	
 10649  0320                     	ds	32
 10650  0340                     _buttons:	
 10651  0340                     	ds	32
 10652                           
 10653                           	psect	inittext
 10654  1C72                     init_ram:	
 10655  1C72  00FE               	movwf	126
 10656  1C73                     initloop:	
 10657  1C73  0012               	moviw fsr0++
 10658  1C74  001E               	movwi fsr1++
 10659  1C75  3001               	movlw	1
 10660  1C76  02FE               	subwf	126,f
 10661  1C77  3000               	movlw	0
 10662  1C78  3BFF               	subwfb	127,f
 10663  1C79  087F               	movf	127,w
 10664  1C7A  047E               	iorwf	126,w
 10665  1C7B  1903               	btfsc	3,2
 10666  1C7C  3400               	retlw	0
 10667  1C7D  2C73               	goto	initloop
 10668                           
 10669                           	psect	clrtext
 10670  1C66                     clear_ram0:	
 10671                           ;	Called with FSR0 containing the base address, and
 10672                           ;	btemp/btemp+1 has the size to clear
 10673                           
 10674  1C66  0064               	clrwdt	;clear the watchdog before getting into this loop
 10675  1C67                     clrloop0:	
 10676  1C67  0180               	clrf	0	;clear RAM location pointed to by FSR
 10677  1C68  3101               	addfsr 0,1
 10678  1C69  3001               	movlw	1
 10679  1C6A  02FE               	subwf	126,f
 10680  1C6B  3000               	movlw	0
 10681  1C6C  3BFF               	subwfb	127,f
 10682  1C6D  087F               	movf	127,w
 10683  1C6E  047E               	iorwf	126,w
 10684  1C6F  1903               	btfsc	3,2
 10685  1C70  3400               	retlw	0	;all done for this memory range, return
 10686  1C71  2C67               	goto	clrloop0	;have we reached the end yet?
 10687                           
 10688                           	psect	cstackBANK2
 10689  0165                     __pcstackBANK2:	
 10690  0165                     LED_task_DMX@dmx:	
 10691                           
 10692                           ; 4 bytes @ 0x0
 10693  0165                     	ds	4
 10694  0169                     ??_main:	
 10695                           
 10696                           ; 1 bytes @ 0x4
 10697  0169                     	ds	2
 10698                           
 10699                           	psect	cstackBANK1
 10700  00A0                     __pcstackBANK1:	
 10701  00A0                     ?_PWM3_LoadDutyValue:	
 10702  00A0                     ?_PWM4_LoadDutyValue:	
 10703                           ; 1 bytes @ 0x0
 10704                           
 10705  00A0                     ?_PWM1_LoadDutyValue:	
 10706                           ; 1 bytes @ 0x0
 10707                           
 10708  00A0                     ?_PWM2_LoadDutyValue:	
 10709                           ; 1 bytes @ 0x0
 10710                           
 10711  00A0                     ?_printf:	
 10712                           ; 1 bytes @ 0x0
 10713                           
 10714  00A0                     ?_beatBrightnessCalculation:	
 10715                           ; 2 bytes @ 0x0
 10716                           
 10717  00A0                     PWM3_LoadDutyValue@dutyValue:	
 10718                           ; 4 bytes @ 0x0
 10719                           
 10720  00A0                     PWM4_LoadDutyValue@dutyValue:	
 10721                           ; 2 bytes @ 0x0
 10722                           
 10723  00A0                     PWM1_LoadDutyValue@dutyValue:	
 10724                           ; 2 bytes @ 0x0
 10725                           
 10726  00A0                     PWM2_LoadDutyValue@dutyValue:	
 10727                           ; 2 bytes @ 0x0
 10728                           
 10729  00A0                     printf@fmt:	
 10730                           ; 2 bytes @ 0x0
 10731                           
 10732                           
 10733                           ; 2 bytes @ 0x0
 10734  00A0                     	ds	4
 10735  00A4                     ??_beatBrightnessCalculation:	
 10736                           
 10737                           ; 1 bytes @ 0x4
 10738  00A4                     	ds	5
 10739  00A9                     ?_beatColorCreator:	
 10740  00A9                     beatColorCreator@inGreen:	
 10741                           ; 4 bytes @ 0x9
 10742                           
 10743                           
 10744                           ; 1 bytes @ 0x9
 10745  00A9                     	ds	1
 10746  00AA                     ??_CONTROL_DMX:	
 10747  00AA                     beatColorCreator@inBlue:	
 10748                           ; 1 bytes @ 0xA
 10749                           
 10750                           
 10751                           ; 1 bytes @ 0xA
 10752  00AA                     	ds	1
 10753  00AB                     beatColorCreator@inWhite:	
 10754                           
 10755                           ; 1 bytes @ 0xB
 10756  00AB                     	ds	2
 10757  00AD                     beatColorCreator@inRed:	
 10758                           
 10759                           ; 1 bytes @ 0xD
 10760  00AD                     	ds	1
 10761  00AE                     _beatColorCreator$4114:	
 10762                           
 10763                           ; 4 bytes @ 0xE
 10764  00AE                     	ds	4
 10765  00B2                     beatColorCreator@tempColor:	
 10766                           
 10767                           ; 4 bytes @ 0x12
 10768  00B2                     	ds	4
 10769  00B6                     ?_LED_setColor:	
 10770  00B6                     LED_setColor@input:	
 10771                           ; 1 bytes @ 0x16
 10772                           
 10773                           
 10774                           ; 4 bytes @ 0x16
 10775  00B6                     	ds	4
 10776  00BA                     ??_LED_setColor:	
 10777                           
 10778                           ; 1 bytes @ 0x1A
 10779  00BA                     	ds	4
 10780  00BE                     ??_CONTROL_MANUAL:	
 10781  00BE                     ??_LED_task_BEAT_STROBE:	
 10782                           ; 1 bytes @ 0x1E
 10783                           
 10784  00BE                     ??_LED_task_DMX:	
 10785                           ; 1 bytes @ 0x1E
 10786                           
 10787                           
 10788                           ; 1 bytes @ 0x1E
 10789  00BE                     	ds	2
 10790  00C0                     ??_CONTROL_BEAT:	
 10791                           
 10792                           ; 1 bytes @ 0x20
 10793  00C0                     	ds	2
 10794  00C2                     ??_CONTROLLER_task:	
 10795                           
 10796                           ; 1 bytes @ 0x22
 10797  00C2                     	ds	1
 10798  00C3                     ??_LED_task:	
 10799                           
 10800                           ; 1 bytes @ 0x23
 10801  00C3                     	ds	2
 10802                           
 10803                           	psect	cstackCOMMON
 10804  0077                     __pcstackCOMMON:	
 10805  0077                     ?_PMD_Initialize:	
 10806  0077                     ?_PIN_MANAGER_Initialize:	
 10807                           ; 1 bytes @ 0x0
 10808                           
 10809  0077                     ?_OSCILLATOR_Initialize:	
 10810                           ; 1 bytes @ 0x0
 10811                           
 10812  0077                     ?_I2C1_Initialize:	
 10813                           ; 1 bytes @ 0x0
 10814                           
 10815  0077                     ?_PWM1_Initialize:	
 10816                           ; 1 bytes @ 0x0
 10817                           
 10818  0077                     ?_PWM2_Initialize:	
 10819                           ; 1 bytes @ 0x0
 10820                           
 10821  0077                     ?_ADCC_Initialize:	
 10822                           ; 1 bytes @ 0x0
 10823                           
 10824  0077                     ?_PWM4_Initialize:	
 10825                           ; 1 bytes @ 0x0
 10826                           
 10827  0077                     ?_PWM3_Initialize:	
 10828                           ; 1 bytes @ 0x0
 10829                           
 10830  0077                     ?_TMR2_Initialize:	
 10831                           ; 1 bytes @ 0x0
 10832                           
 10833  0077                     ?_TMR0_Initialize:	
 10834                           ; 1 bytes @ 0x0
 10835                           
 10836  0077                     ?_EUSART1_Initialize:	
 10837                           ; 1 bytes @ 0x0
 10838                           
 10839  0077                     ?_EUSART1_Receive_ISR:	
 10840                           ; 1 bytes @ 0x0
 10841                           
 10842  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
 10843                           ; 1 bytes @ 0x0
 10844                           
 10845  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
 10846                           ; 1 bytes @ 0x0
 10847                           
 10848  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10849                           ; 1 bytes @ 0x0
 10850                           
 10851  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10852                           ; 1 bytes @ 0x0
 10853                           
 10854  0077                     ?_EUSART1_DefaultErrorHandler:	
 10855                           ; 1 bytes @ 0x0
 10856                           
 10857  0077                     ?_EUSART1_RxDataHandler:	
 10858                           ; 1 bytes @ 0x0
 10859                           
 10860  0077                     ??_EUSART1_RxDataHandler:	
 10861                           ; 1 bytes @ 0x0
 10862                           
 10863  0077                     ?_TMR0_ISR:	
 10864                           ; 1 bytes @ 0x0
 10865                           
 10866  0077                     ??_TMR0_ISR:	
 10867                           ; 1 bytes @ 0x0
 10868                           
 10869  0077                     ?_I2C1_BusCollisionISR:	
 10870                           ; 1 bytes @ 0x0
 10871                           
 10872  0077                     ??_I2C1_BusCollisionISR:	
 10873                           ; 1 bytes @ 0x0
 10874                           
 10875  0077                     ?_I2C1_ISR:	
 10876                           ; 1 bytes @ 0x0
 10877                           
 10878  0077                     ?_ADCC_ThresholdISR:	
 10879                           ; 1 bytes @ 0x0
 10880                           
 10881  0077                     ??_ADCC_ThresholdISR:	
 10882                           ; 1 bytes @ 0x0
 10883                           
 10884  0077                     ?_TMR0_DefaultInterruptHandler:	
 10885                           ; 1 bytes @ 0x0
 10886                           
 10887  0077                     ??_TMR0_DefaultInterruptHandler:	
 10888                           ; 1 bytes @ 0x0
 10889                           
 10890  0077                     ?_I2C1_Stop:	
 10891                           ; 1 bytes @ 0x0
 10892                           
 10893  0077                     ??_I2C1_Stop:	
 10894                           ; 1 bytes @ 0x0
 10895                           
 10896  0077                     ?_I2C1_FunctionComplete:	
 10897                           ; 1 bytes @ 0x0
 10898                           
 10899  0077                     ??_I2C1_FunctionComplete:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902  0077                     ?_ADCC_DefaultInterruptHandler:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905  0077                     ??_ADCC_DefaultInterruptHandler:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908  0077                     ?_CLOCK_init:	
 10909                           ; 1 bytes @ 0x0
 10910                           
 10911  0077                     ?_BUTTONS_init:	
 10912                           ; 1 bytes @ 0x0
 10913                           
 10914  0077                     ?_BEAT_init:	
 10915                           ; 1 bytes @ 0x0
 10916                           
 10917  0077                     ?_LED_init:	
 10918                           ; 1 bytes @ 0x0
 10919                           
 10920  0077                     ?_CONTROLLER_init:	
 10921                           ; 1 bytes @ 0x0
 10922                           
 10923  0077                     ?_TM1650_init:	
 10924                           ; 1 bytes @ 0x0
 10925                           
 10926  0077                     ?_DMX_init:	
 10927                           ; 1 bytes @ 0x0
 10928                           
 10929  0077                     ?_BUTTONS_task:	
 10930                           ; 1 bytes @ 0x0
 10931                           
 10932  0077                     ?_CONTROLLER_task:	
 10933                           ; 1 bytes @ 0x0
 10934                           
 10935  0077                     ?_BEAT_task:	
 10936                           ; 1 bytes @ 0x0
 10937                           
 10938  0077                     ?_LED_task:	
 10939                           ; 1 bytes @ 0x0
 10940                           
 10941  0077                     ?_GPIO_init:	
 10942                           ; 1 bytes @ 0x0
 10943                           
 10944  0077                     ?_CLOCK_timerCallback:	
 10945                           ; 1 bytes @ 0x0
 10946                           
 10947  0077                     ??_CLOCK_timerCallback:	
 10948                           ; 1 bytes @ 0x0
 10949                           
 10950  0077                     ?_CONTROL_DMX:	
 10951                           ; 1 bytes @ 0x0
 10952                           
 10953  0077                     ?_LED_task_ANIMATION:	
 10954                           ; 1 bytes @ 0x0
 10955                           
 10956  0077                     ?_CONTROL_MANUAL:	
 10957                           ; 1 bytes @ 0x0
 10958                           
 10959  0077                     ?_CONTROL_BEAT:	
 10960                           ; 1 bytes @ 0x0
 10961                           
 10962  0077                     ?_DMX_getAddress:	
 10963                           ; 1 bytes @ 0x0
 10964                           
 10965  0077                     ?_address_inc:	
 10966                           ; 1 bytes @ 0x0
 10967                           
 10968  0077                     ?_address_dec:	
 10969                           ; 1 bytes @ 0x0
 10970                           
 10971  0077                     ?_LED_task_BEAT_STROBE:	
 10972                           ; 1 bytes @ 0x0
 10973                           
 10974  0077                     ?_LED_task_BEAT_FADE:	
 10975                           ; 1 bytes @ 0x0
 10976                           
 10977  0077                     ?_LED_task_BEAT_MIXED:	
 10978                           ; 1 bytes @ 0x0
 10979                           
 10980  0077                     ?_TM1650_fastPrintNum_2digit:	
 10981                           ; 1 bytes @ 0x0
 10982                           
 10983  0077                     ?_colorInc:	
 10984                           ; 1 bytes @ 0x0
 10985                           
 10986  0077                     ?_colorDec:	
 10987                           ; 1 bytes @ 0x0
 10988                           
 10989  0077                     ?_LED_task_MANUAL:	
 10990                           ; 1 bytes @ 0x0
 10991                           
 10992  0077                     ?_DMX_interrupt:	
 10993                           ; 1 bytes @ 0x0
 10994                           
 10995  0077                     ??_DMX_interrupt:	
 10996                           ; 1 bytes @ 0x0
 10997                           
 10998  0077                     ?_LED_task_BEAT_CONTINUOUS:	
 10999                           ; 1 bytes @ 0x0
 11000                           
 11001  0077                     ?_SYSTEM_Initialize:	
 11002                           ; 1 bytes @ 0x0
 11003                           
 11004  0077                     ?_INTERRUPT_InterruptManager:	
 11005                           ; 1 bytes @ 0x0
 11006                           
 11007  0077                     ?_I2C1_WaitForLastPacketToComplete:	
 11008                           ; 1 bytes @ 0x0
 11009                           
 11010  0077                     ?_ADCC_StartConversion:	
 11011                           ; 1 bytes @ 0x0
 11012                           
 11013  0077                     ?_main:	
 11014                           ; 1 bytes @ 0x0
 11015                           
 11016  0077                     ?_BUTTONS_isClicked:	
 11017                           ; 1 bytes @ 0x0
 11018                           
 11019  0077                     ?_BUTTONS_isHeld:	
 11020                           ; 1 bytes @ 0x0
 11021                           
 11022  0077                     ?_getMode:	
 11023                           ; 1 bytes @ 0x0
 11024                           
 11025  0077                     ?_getIsHold:	
 11026                           ; 1 bytes @ 0x0
 11027                           
 11028  0077                     ?_getCurrentMenu:	
 11029                           ; 1 bytes @ 0x0
 11030                           
 11031  0077                     ?_TM1650_enable:	
 11032                           ; 1 bytes @ 0x0
 11033                           
 11034  0077                     ?_putch:	
 11035                           ; 1 bytes @ 0x0
 11036                           
 11037  0077                     ?_adcThresholdHandler:	
 11038                           ; 1 bytes @ 0x0
 11039                           
 11040  0077                     ??_adcThresholdHandler:	
 11041                           ; 1 bytes @ 0x0
 11042                           
 11043  0077                     ?_BEAT_detected:	
 11044                           ; 1 bytes @ 0x0
 11045                           
 11046  0077                     ?_LED_task_DMX:	
 11047                           ; 1 bytes @ 0x0
 11048                           
 11049                           
 11050                           ; 1 bytes @ 0x0
 11051  0077                     	ds	1
 11052  0078                     ??_EUSART1_Receive_ISR:	
 11053  0078                     ??_EUSART1_DefaultErrorHandler:	
 11054                           ; 1 bytes @ 0x1
 11055                           
 11056  0078                     I2C1_Stop@completion_code:	
 11057                           ; 1 bytes @ 0x1
 11058                           
 11059                           
 11060                           ; 1 bytes @ 0x1
 11061  0078                     	ds	1
 11062  0079                     ??_I2C1_ISR:	
 11063                           
 11064                           ; 1 bytes @ 0x2
 11065  0079                     	ds	4
 11066  007D                     DMX_interrupt@dummy:	
 11067                           
 11068                           ; 1 bytes @ 0x6
 11069  007D                     	ds	1
 11070  007E                     ??_INTERRUPT_InterruptManager:	
 11071                           
 11072                           	psect	cstackBANK0
 11073  0020                     __pcstackBANK0:	
 11074                           ; 1 bytes @ 0x7
 11075                           
 11076  0020                     ??_PMD_Initialize:	
 11077  0020                     ??_PIN_MANAGER_Initialize:	
 11078                           ; 1 bytes @ 0x0
 11079                           
 11080  0020                     ??_OSCILLATOR_Initialize:	
 11081                           ; 1 bytes @ 0x0
 11082                           
 11083  0020                     ??_I2C1_Initialize:	
 11084                           ; 1 bytes @ 0x0
 11085                           
 11086  0020                     ??_PWM1_Initialize:	
 11087                           ; 1 bytes @ 0x0
 11088                           
 11089  0020                     ??_PWM2_Initialize:	
 11090                           ; 1 bytes @ 0x0
 11091                           
 11092  0020                     ??_PWM4_Initialize:	
 11093                           ; 1 bytes @ 0x0
 11094                           
 11095  0020                     ??_PWM3_Initialize:	
 11096                           ; 1 bytes @ 0x0
 11097                           
 11098  0020                     ??_TMR2_Initialize:	
 11099                           ; 1 bytes @ 0x0
 11100                           
 11101  0020                     ?_EUSART1_SetRxInterruptHandler:	
 11102                           ; 1 bytes @ 0x0
 11103                           
 11104  0020                     ?_EUSART1_SetFramingErrorHandler:	
 11105                           ; 1 bytes @ 0x0
 11106                           
 11107  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 11108                           ; 1 bytes @ 0x0
 11109                           
 11110  0020                     ?_EUSART1_SetErrorHandler:	
 11111                           ; 1 bytes @ 0x0
 11112                           
 11113  0020                     ?_TMR0_SetInterruptHandler:	
 11114                           ; 1 bytes @ 0x0
 11115                           
 11116  0020                     ?_I2C1_MasterWriteTRBBuild:	
 11117                           ; 1 bytes @ 0x0
 11118                           
 11119  0020                     ?_I2C1_MasterTRBInsert:	
 11120                           ; 1 bytes @ 0x0
 11121                           
 11122  0020                     ?_ADCC_SetADTIInterruptHandler:	
 11123                           ; 1 bytes @ 0x0
 11124                           
 11125  0020                     ??_LED_init:	
 11126                           ; 1 bytes @ 0x0
 11127                           
 11128  0020                     ??_CONTROLLER_init:	
 11129                           ; 1 bytes @ 0x0
 11130                           
 11131  0020                     ??_GPIO_init:	
 11132                           ; 1 bytes @ 0x0
 11133                           
 11134  0020                     ??_LED_task_ANIMATION:	
 11135                           ; 1 bytes @ 0x0
 11136                           
 11137  0020                     ??_DMX_getAddress:	
 11138                           ; 1 bytes @ 0x0
 11139                           
 11140  0020                     ??_address_inc:	
 11141                           ; 1 bytes @ 0x0
 11142                           
 11143  0020                     ??_address_dec:	
 11144                           ; 1 bytes @ 0x0
 11145                           
 11146  0020                     ??_LED_task_BEAT_FADE:	
 11147                           ; 1 bytes @ 0x0
 11148                           
 11149  0020                     ??_LED_task_BEAT_MIXED:	
 11150                           ; 1 bytes @ 0x0
 11151                           
 11152  0020                     ??_colorInc:	
 11153                           ; 1 bytes @ 0x0
 11154                           
 11155  0020                     ??_colorDec:	
 11156                           ; 1 bytes @ 0x0
 11157                           
 11158  0020                     ??_LED_task_BEAT_CONTINUOUS:	
 11159                           ; 1 bytes @ 0x0
 11160                           
 11161  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 11162                           ; 1 bytes @ 0x0
 11163                           
 11164  0020                     ??_ADCC_StartConversion:	
 11165                           ; 1 bytes @ 0x0
 11166                           
 11167  0020                     ?_ADCC_SetUpperThreshold:	
 11168                           ; 1 bytes @ 0x0
 11169                           
 11170  0020                     ?_init:	
 11171                           ; 1 bytes @ 0x0
 11172                           
 11173  0020                     ??_BUTTONS_isClicked:	
 11174                           ; 1 bytes @ 0x0
 11175                           
 11176  0020                     ??_BUTTONS_isHeld:	
 11177                           ; 1 bytes @ 0x0
 11178                           
 11179  0020                     ??_getMode:	
 11180                           ; 1 bytes @ 0x0
 11181                           
 11182  0020                     ??_getIsHold:	
 11183                           ; 1 bytes @ 0x0
 11184                           
 11185  0020                     ??_getCurrentMenu:	
 11186                           ; 1 bytes @ 0x0
 11187                           
 11188  0020                     ??_BEAT_detected:	
 11189                           ; 1 bytes @ 0x0
 11190                           
 11191  0020                     ?_CLOCK_getTime:	
 11192                           ; 1 bytes @ 0x0
 11193                           
 11194  0020                     ?_strlen:	
 11195                           ; 2 bytes @ 0x0
 11196                           
 11197  0020                     ?__Umul8_16:	
 11198                           ; 2 bytes @ 0x0
 11199                           
 11200  0020                     ?___awdiv:	
 11201                           ; 2 bytes @ 0x0
 11202                           
 11203  0020                     ?___lwdiv:	
 11204                           ; 2 bytes @ 0x0
 11205                           
 11206  0020                     ?___xxtofl:	
 11207                           ; 2 bytes @ 0x0
 11208                           
 11209  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 11210                           ; 4 bytes @ 0x0
 11211                           
 11212  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 11213                           ; 1 bytes @ 0x0
 11214                           
 11215  0020                     ADCC_StartConversion@channel:	
 11216                           ; 1 bytes @ 0x0
 11217                           
 11218  0020                     BUTTONS_isClicked@button:	
 11219                           ; 1 bytes @ 0x0
 11220                           
 11221  0020                     BUTTONS_isHeld@button:	
 11222                           ; 1 bytes @ 0x0
 11223                           
 11224  0020                     __Umul8_16@multiplicand:	
 11225                           ; 1 bytes @ 0x0
 11226                           
 11227  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11228                           ; 1 bytes @ 0x0
 11229                           
 11230  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11231                           ; 2 bytes @ 0x0
 11232                           
 11233  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 11234                           ; 2 bytes @ 0x0
 11235                           
 11236  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11237                           ; 2 bytes @ 0x0
 11238                           
 11239  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11240                           ; 2 bytes @ 0x0
 11241                           
 11242  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 11243                           ; 2 bytes @ 0x0
 11244                           
 11245  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 11246                           ; 2 bytes @ 0x0
 11247                           
 11248  0020                     init@port:	
 11249                           ; 2 bytes @ 0x0
 11250                           
 11251  0020                     ___awdiv@divisor:	
 11252                           ; 2 bytes @ 0x0
 11253                           
 11254  0020                     ___lwdiv@divisor:	
 11255                           ; 2 bytes @ 0x0
 11256                           
 11257  0020                     strlen@s:	
 11258                           ; 2 bytes @ 0x0
 11259                           
 11260  0020                     ___xxtofl@val:	
 11261                           ; 2 bytes @ 0x0
 11262                           
 11263                           
 11264                           ; 4 bytes @ 0x0
 11265  0020                     	ds	1
 11266  0021                     I2C1_MasterTRBInsert@pflag:	
 11267  0021                     I2C1_MasterWriteTRBBuild@length:	
 11268                           ; 1 bytes @ 0x1
 11269                           
 11270                           
 11271                           ; 1 bytes @ 0x1
 11272  0021                     	ds	1
 11273  0022                     ??_ADCC_Initialize:	
 11274  0022                     ??_TMR0_Initialize:	
 11275                           ; 1 bytes @ 0x2
 11276                           
 11277  0022                     ??_EUSART1_Initialize:	
 11278                           ; 1 bytes @ 0x2
 11279                           
 11280  0022                     ??_EUSART1_SetRxInterruptHandler:	
 11281                           ; 1 bytes @ 0x2
 11282                           
 11283  0022                     ??_EUSART1_SetFramingErrorHandler:	
 11284                           ; 1 bytes @ 0x2
 11285                           
 11286  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 11287                           ; 1 bytes @ 0x2
 11288                           
 11289  0022                     ??_EUSART1_SetErrorHandler:	
 11290                           ; 1 bytes @ 0x2
 11291                           
 11292  0022                     ??_TMR0_SetInterruptHandler:	
 11293                           ; 1 bytes @ 0x2
 11294                           
 11295  0022                     ??_I2C1_MasterTRBInsert:	
 11296                           ; 1 bytes @ 0x2
 11297                           
 11298  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11299                           ; 1 bytes @ 0x2
 11300                           
 11301  0022                     ??_CLOCK_init:	
 11302                           ; 1 bytes @ 0x2
 11303                           
 11304  0022                     ??_BEAT_init:	
 11305                           ; 1 bytes @ 0x2
 11306                           
 11307  0022                     ??_CLOCK_getTime:	
 11308                           ; 1 bytes @ 0x2
 11309                           
 11310  0022                     ??_BUTTONS_task:	
 11311                           ; 1 bytes @ 0x2
 11312                           
 11313  0022                     ??_strlen:	
 11314                           ; 1 bytes @ 0x2
 11315                           
 11316  0022                     ??__Umul8_16:	
 11317                           ; 1 bytes @ 0x2
 11318                           
 11319  0022                     ??_SYSTEM_Initialize:	
 11320                           ; 1 bytes @ 0x2
 11321                           
 11322  0022                     ??_ADCC_SetUpperThreshold:	
 11323                           ; 1 bytes @ 0x2
 11324                           
 11325  0022                     init@pin:	
 11326                           ; 1 bytes @ 0x2
 11327                           
 11328  0022                     I2C1_MasterWriteTRBBuild@address:	
 11329                           ; 1 bytes @ 0x2
 11330                           
 11331  0022                     ___awdiv@dividend:	
 11332                           ; 2 bytes @ 0x2
 11333                           
 11334  0022                     ___lwdiv@dividend:	
 11335                           ; 2 bytes @ 0x2
 11336                           
 11337                           
 11338                           ; 2 bytes @ 0x2
 11339  0022                     	ds	1
 11340  0023                     ??_init:	
 11341  0023                     I2C1_MasterTRBInsert@count:	
 11342                           ; 1 bytes @ 0x3
 11343                           
 11344  0023                     strlen@a:	
 11345                           ; 1 bytes @ 0x3
 11346                           
 11347                           
 11348                           ; 2 bytes @ 0x3
 11349  0023                     	ds	1
 11350  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11351  0024                     ??___awdiv:	
 11352                           ; 1 bytes @ 0x4
 11353                           
 11354  0024                     ??___lwdiv:	
 11355                           ; 1 bytes @ 0x4
 11356                           
 11357  0024                     ??___xxtofl:	
 11358                           ; 1 bytes @ 0x4
 11359                           
 11360  0024                     init@btn:	
 11361                           ; 1 bytes @ 0x4
 11362                           
 11363  0024                     __Umul8_16@product:	
 11364                           ; 1 bytes @ 0x4
 11365                           
 11366                           
 11367                           ; 2 bytes @ 0x4
 11368  0024                     	ds	1
 11369  0025                     ??_BUTTONS_init:	
 11370  0025                     BUTTONS_task@i:	
 11371                           ; 1 bytes @ 0x5
 11372                           
 11373  0025                     ___awdiv@counter:	
 11374                           ; 1 bytes @ 0x5
 11375                           
 11376  0025                     ___lwdiv@counter:	
 11377                           ; 1 bytes @ 0x5
 11378                           
 11379                           
 11380                           ; 1 bytes @ 0x5
 11381  0025                     	ds	1
 11382  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11383  0026                     ___awdiv@sign:	
 11384                           ; 1 bytes @ 0x6
 11385                           
 11386  0026                     BUTTONS_task@time:	
 11387                           ; 1 bytes @ 0x6
 11388                           
 11389  0026                     ___lwdiv@quotient:	
 11390                           ; 2 bytes @ 0x6
 11391                           
 11392  0026                     __Umul8_16@word_mpld:	
 11393                           ; 2 bytes @ 0x6
 11394                           
 11395                           
 11396                           ; 2 bytes @ 0x6
 11397  0026                     	ds	1
 11398  0027                     ?_I2C1_MasterWrite:	
 11399  0027                     I2C1_MasterWrite@length:	
 11400                           ; 1 bytes @ 0x7
 11401                           
 11402  0027                     ___awdiv@quotient:	
 11403                           ; 1 bytes @ 0x7
 11404                           
 11405                           
 11406                           ; 2 bytes @ 0x7
 11407  0027                     	ds	1
 11408  0028                     ??_BEAT_task:	
 11409  0028                     ?___lwmod:	
 11410                           ; 1 bytes @ 0x8
 11411                           
 11412  0028                     BUTTONS_task@btn:	
 11413                           ; 2 bytes @ 0x8
 11414                           
 11415  0028                     ___xxtofl@sign:	
 11416                           ; 1 bytes @ 0x8
 11417                           
 11418  0028                     __Umul8_16@multiplier:	
 11419                           ; 1 bytes @ 0x8
 11420                           
 11421  0028                     I2C1_MasterWrite@address:	
 11422                           ; 1 bytes @ 0x8
 11423                           
 11424  0028                     ___lwmod@divisor:	
 11425                           ; 2 bytes @ 0x8
 11426                           
 11427                           
 11428                           ; 2 bytes @ 0x8
 11429  0028                     	ds	1
 11430  0029                     ?___awmod:	
 11431  0029                     ___xxtofl@exp:	
 11432                           ; 2 bytes @ 0x9
 11433                           
 11434  0029                     ___awmod@divisor:	
 11435                           ; 1 bytes @ 0x9
 11436                           
 11437                           
 11438                           ; 2 bytes @ 0x9
 11439  0029                     	ds	1
 11440  002A                     I2C1_MasterWrite@pflag:	
 11441  002A                     BEAT_task@offset:	
 11442                           ; 1 bytes @ 0xA
 11443                           
 11444  002A                     ___lwmod@dividend:	
 11445                           ; 2 bytes @ 0xA
 11446                           
 11447  002A                     ___xxtofl@arg:	
 11448                           ; 2 bytes @ 0xA
 11449                           
 11450                           
 11451                           ; 4 bytes @ 0xA
 11452  002A                     	ds	1
 11453  002B                     ??_I2C1_MasterWrite:	
 11454  002B                     ___awmod@dividend:	
 11455                           ; 1 bytes @ 0xB
 11456                           
 11457                           
 11458                           ; 2 bytes @ 0xB
 11459  002B                     	ds	1
 11460  002C                     ??___lwmod:	
 11461                           
 11462                           ; 1 bytes @ 0xC
 11463  002C                     	ds	1
 11464  002D                     ??___awmod:	
 11465  002D                     I2C1_MasterWrite@pdata:	
 11466                           ; 1 bytes @ 0xD
 11467                           
 11468  002D                     ___lwmod@counter:	
 11469                           ; 1 bytes @ 0xD
 11470                           
 11471                           
 11472                           ; 1 bytes @ 0xD
 11473  002D                     	ds	1
 11474  002E                     ?___fldiv:	
 11475  002E                     ___awmod@counter:	
 11476                           ; 4 bytes @ 0xE
 11477                           
 11478  002E                     ___fldiv@a:	
 11479                           ; 1 bytes @ 0xE
 11480                           
 11481                           
 11482                           ; 4 bytes @ 0xE
 11483  002E                     	ds	1
 11484  002F                     ___awmod@sign:	
 11485                           
 11486                           ; 1 bytes @ 0xF
 11487  002F                     	ds	1
 11488  0030                     ?_writeData:	
 11489  0030                     writeData@data:	
 11490                           ; 1 bytes @ 0x10
 11491                           
 11492                           
 11493                           ; 1 bytes @ 0x10
 11494  0030                     	ds	1
 11495  0031                     ??_writeData:	
 11496                           
 11497                           ; 1 bytes @ 0x11
 11498  0031                     	ds	1
 11499  0032                     ___fldiv@b:	
 11500                           
 11501                           ; 4 bytes @ 0x12
 11502  0032                     	ds	2
 11503  0034                     writeData@address:	
 11504                           
 11505                           ; 1 bytes @ 0x14
 11506  0034                     	ds	1
 11507  0035                     writeData@status:	
 11508                           
 11509                           ; 1 bytes @ 0x15
 11510  0035                     	ds	1
 11511  0036                     ?_TM1650_fastPrintNum_3digit:	
 11512  0036                     ??_TM1650_fastPrintNum_2digit:	
 11513                           ; 1 bytes @ 0x16
 11514                           
 11515  0036                     ??_TM1650_enable:	
 11516                           ; 1 bytes @ 0x16
 11517                           
 11518  0036                     ?_TM1650_setDigit:	
 11519                           ; 1 bytes @ 0x16
 11520                           
 11521  0036                     ?_TM1650_fastPrintNum:	
 11522                           ; 1 bytes @ 0x16
 11523                           
 11524  0036                     ??___fldiv:	
 11525                           ; 1 bytes @ 0x16
 11526                           
 11527  0036                     TM1650_enable@enable:	
 11528                           ; 1 bytes @ 0x16
 11529                           
 11530  0036                     TM1650_setDigit@data:	
 11531                           ; 1 bytes @ 0x16
 11532                           
 11533  0036                     TM1650_fastPrintNum@num:	
 11534                           ; 1 bytes @ 0x16
 11535                           
 11536  0036                     TM1650_fastPrintNum_3digit@num:	
 11537                           ; 2 bytes @ 0x16
 11538                           
 11539                           
 11540                           ; 2 bytes @ 0x16
 11541  0036                     	ds	1
 11542  0037                     ??_TM1650_setDigit:	
 11543                           
 11544                           ; 1 bytes @ 0x17
 11545  0037                     	ds	1
 11546  0038                     ??_TM1650_fastPrintNum_3digit:	
 11547  0038                     ??_TM1650_fastPrintNum:	
 11548                           ; 1 bytes @ 0x18
 11549                           
 11550  0038                     TM1650_setDigit@digit:	
 11551                           ; 1 bytes @ 0x18
 11552                           
 11553                           
 11554                           ; 1 bytes @ 0x18
 11555  0038                     	ds	1
 11556  0039                     ??_DMX_init:	
 11557  0039                     ??_putch:	
 11558                           ; 1 bytes @ 0x19
 11559                           
 11560  0039                     TM1650_fastPrintNum_2digit@num:	
 11561                           ; 1 bytes @ 0x19
 11562                           
 11563                           
 11564                           ; 1 bytes @ 0x19
 11565  0039                     	ds	1
 11566  003A                     putch@n:	
 11567                           
 11568                           ; 1 bytes @ 0x1A
 11569  003A                     	ds	1
 11570  003B                     ?_fputc:	
 11571  003B                     fputc@c:	
 11572                           ; 2 bytes @ 0x1B
 11573                           
 11574  003B                     ___fldiv@rem:	
 11575                           ; 2 bytes @ 0x1B
 11576                           
 11577                           
 11578                           ; 4 bytes @ 0x1B
 11579  003B                     	ds	2
 11580  003D                     fputc@fp:	
 11581                           
 11582                           ; 1 bytes @ 0x1D
 11583  003D                     	ds	1
 11584  003E                     ??_fputc:	
 11585                           
 11586                           ; 1 bytes @ 0x1E
 11587  003E                     	ds	1
 11588  003F                     ___fldiv@sign:	
 11589                           
 11590                           ; 1 bytes @ 0x1F
 11591  003F                     	ds	1
 11592  0040                     ___fldiv@new_exp:	
 11593                           
 11594                           ; 2 bytes @ 0x20
 11595  0040                     	ds	2
 11596  0042                     ___fldiv@grs:	
 11597                           
 11598                           ; 4 bytes @ 0x22
 11599  0042                     	ds	1
 11600  0043                     ?_fputs:	
 11601  0043                     fputs@fp:	
 11602                           ; 2 bytes @ 0x23
 11603                           
 11604                           
 11605                           ; 1 bytes @ 0x23
 11606  0043                     	ds	1
 11607  0044                     ??_fputs:	
 11608                           
 11609                           ; 1 bytes @ 0x24
 11610  0044                     	ds	2
 11611  0046                     ___fldiv@bexp:	
 11612                           
 11613                           ; 1 bytes @ 0x26
 11614  0046                     	ds	1
 11615  0047                     ___fldiv@aexp:	
 11616  0047                     fputs@c:	
 11617                           ; 1 bytes @ 0x27
 11618                           
 11619                           
 11620                           ; 1 bytes @ 0x27
 11621  0047                     	ds	1
 11622  0048                     ?___flmul:	
 11623  0048                     fputs@s:	
 11624                           ; 4 bytes @ 0x28
 11625                           
 11626  0048                     ___flmul@b:	
 11627                           ; 1 bytes @ 0x28
 11628                           
 11629                           
 11630                           ; 4 bytes @ 0x28
 11631  0048                     	ds	1
 11632  0049                     fputs@i:	
 11633                           
 11634                           ; 2 bytes @ 0x29
 11635  0049                     	ds	2
 11636  004B                     ?_pad:	
 11637  004B                     pad@buf:	
 11638                           ; 2 bytes @ 0x2B
 11639                           
 11640                           
 11641                           ; 1 bytes @ 0x2B
 11642  004B                     	ds	1
 11643  004C                     pad@p:	
 11644  004C                     ___flmul@a:	
 11645                           ; 2 bytes @ 0x2C
 11646                           
 11647                           
 11648                           ; 4 bytes @ 0x2C
 11649  004C                     	ds	2
 11650  004E                     ??_pad:	
 11651                           
 11652                           ; 1 bytes @ 0x2E
 11653  004E                     	ds	1
 11654  004F                     pad@i:	
 11655                           
 11656                           ; 2 bytes @ 0x2F
 11657  004F                     	ds	1
 11658  0050                     ??___flmul:	
 11659                           
 11660                           ; 1 bytes @ 0x30
 11661  0050                     	ds	1
 11662  0051                     pad@w:	
 11663                           
 11664                           ; 2 bytes @ 0x31
 11665  0051                     	ds	2
 11666  0053                     pad@fp:	
 11667                           
 11668                           ; 1 bytes @ 0x33
 11669  0053                     	ds	1
 11670  0054                     ?_ctoa:	
 11671  0054                     ctoa@c:	
 11672                           ; 2 bytes @ 0x34
 11673                           
 11674                           
 11675                           ; 1 bytes @ 0x34
 11676  0054                     	ds	1
 11677  0055                     ___flmul@sign:	
 11678                           
 11679                           ; 1 bytes @ 0x35
 11680  0055                     	ds	1
 11681  0056                     ??_ctoa:	
 11682  0056                     ___flmul@aexp:	
 11683                           ; 1 bytes @ 0x36
 11684                           
 11685                           
 11686                           ; 1 bytes @ 0x36
 11687  0056                     	ds	1
 11688  0057                     ctoa@fp:	
 11689  0057                     ___flmul@bexp:	
 11690                           ; 1 bytes @ 0x37
 11691                           
 11692                           
 11693                           ; 1 bytes @ 0x37
 11694  0057                     	ds	1
 11695  0058                     ctoa@w:	
 11696  0058                     ___flmul@grs:	
 11697                           ; 2 bytes @ 0x38
 11698                           
 11699                           
 11700                           ; 4 bytes @ 0x38
 11701  0058                     	ds	2
 11702  005A                     ?_vfpfcnvrt:	
 11703  005A                     vfpfcnvrt@fmt:	
 11704                           ; 2 bytes @ 0x3A
 11705                           
 11706                           
 11707                           ; 1 bytes @ 0x3A
 11708  005A                     	ds	1
 11709  005B                     vfpfcnvrt@ap:	
 11710                           
 11711                           ; 1 bytes @ 0x3B
 11712  005B                     	ds	1
 11713  005C                     ??_vfpfcnvrt:	
 11714  005C                     ___flmul@prod:	
 11715                           ; 1 bytes @ 0x3C
 11716                           
 11717                           
 11718                           ; 4 bytes @ 0x3C
 11719  005C                     	ds	4
 11720  0060                     ___flmul@temp:	
 11721                           
 11722                           ; 2 bytes @ 0x40
 11723  0060                     	ds	1
 11724  0061                     vfpfcnvrt@c:	
 11725                           
 11726                           ; 1 bytes @ 0x41
 11727  0061                     	ds	1
 11728  0062                     ?___fltol:	
 11729  0062                     vfpfcnvrt@fp:	
 11730                           ; 4 bytes @ 0x42
 11731                           
 11732  0062                     ___fltol@f1:	
 11733                           ; 1 bytes @ 0x42
 11734                           
 11735                           
 11736                           ; 4 bytes @ 0x42
 11737  0062                     	ds	1
 11738  0063                     ?_vfprintf:	
 11739  0063                     vfprintf@fmt:	
 11740                           ; 2 bytes @ 0x43
 11741                           
 11742                           
 11743                           ; 2 bytes @ 0x43
 11744  0063                     	ds	2
 11745  0065                     vfprintf@ap:	
 11746                           
 11747                           ; 1 bytes @ 0x45
 11748  0065                     	ds	1
 11749  0066                     ??_vfprintf:	
 11750  0066                     ??___fltol:	
 11751                           ; 1 bytes @ 0x46
 11752                           
 11753                           
 11754                           ; 1 bytes @ 0x46
 11755  0066                     	ds	2
 11756  0068                     vfprintf@fp:	
 11757                           
 11758                           ; 1 bytes @ 0x48
 11759  0068                     	ds	1
 11760  0069                     vfprintf@cfmt:	
 11761                           
 11762                           ; 2 bytes @ 0x49
 11763  0069                     	ds	2
 11764  006B                     ??_printf:	
 11765  006B                     ___fltol@sign1:	
 11766                           ; 1 bytes @ 0x4B
 11767                           
 11768                           
 11769                           ; 1 bytes @ 0x4B
 11770  006B                     	ds	1
 11771  006C                     ___fltol@exp1:	
 11772                           
 11773                           ; 1 bytes @ 0x4C
 11774  006C                     	ds	1
 11775  006D                     ??_PWM3_LoadDutyValue:	
 11776  006D                     ??_PWM4_LoadDutyValue:	
 11777                           ; 1 bytes @ 0x4D
 11778                           
 11779  006D                     ??_PWM1_LoadDutyValue:	
 11780                           ; 1 bytes @ 0x4D
 11781                           
 11782  006D                     ??_PWM2_LoadDutyValue:	
 11783                           ; 1 bytes @ 0x4D
 11784                           
 11785  006D                     beatBrightnessCalculation@temp:	
 11786                           ; 1 bytes @ 0x4D
 11787                           
 11788                           
 11789                           ; 1 bytes @ 0x4D
 11790  006D                     	ds	1
 11791  006E                     ??_beatColorCreator:	
 11792  006E                     printf@ap:	
 11793                           ; 1 bytes @ 0x4E
 11794                           
 11795                           
 11796                           ; 1 bytes @ 0x4E
 11797  006E                     	ds	1
 11798  006F                     ??_TM1650_init:	
 11799  006F                     ??_LED_task_MANUAL:	
 11800                           ; 1 bytes @ 0x4F
 11801                           
 11802  006F                     LED_task_BEAT_STROBE@beatState:	
 11803                           ; 1 bytes @ 0x4F
 11804                           
 11805                           
 11806                           ; 1 bytes @ 0x4F
 11807  006F                     	ds	1
 11808                           
 11809                           	psect	maintext
 11810  11AB                     __pmaintext:	
 11811 ;;
 11812 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11813 ;;
 11814 ;; *************** function _main *****************
 11815 ;; Defined at:
 11816 ;;		line 58 in file "main.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;		None
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;		None
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : B3F/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11832 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11833 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11834 ;;Total ram usage:        2 bytes
 11835 ;; Hardware stack levels required when called:   19
 11836 ;; This function calls:
 11837 ;;		_BEAT_init
 11838 ;;		_BEAT_task
 11839 ;;		_BUTTONS_init
 11840 ;;		_BUTTONS_task
 11841 ;;		_CLOCK_getTime
 11842 ;;		_CLOCK_init
 11843 ;;		_CONTROLLER_init
 11844 ;;		_CONTROLLER_task
 11845 ;;		_DMX_init
 11846 ;;		_LED_init
 11847 ;;		_LED_task
 11848 ;;		_SYSTEM_Initialize
 11849 ;;		_TM1650_init
 11850 ;; This function is called by:
 11851 ;;		Startup code after reset
 11852 ;; This function uses a non-reentrant model
 11853 ;;
 11854                           
 11855                           
 11856                           ;psect for function _main
 11857  11AB                     _main:	
 11858                           
 11859                           ;main.c: 61:     SYSTEM_Initialize();
 11860                           
 11861                           ;incstack = 0
 11862 ;; hardware stack exceeded
 11863                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11864  11AB  319F  270A  3191   	fcall	_SYSTEM_Initialize
 11865                           
 11866                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11867  11AE  3015               	movlw	21
 11868  11AF  0142               	movlb	2	; select bank2
 11869  11B0  00EA               	movwf	(??_main^(0+256)+1)
 11870  11B1  304B               	movlw	75
 11871  11B2  00E9               	movwf	??_main^(0+256)
 11872  11B3  30BE               	movlw	190
 11873  11B4                     u13057:	
 11874  11B4  0B89               	decfsz	9,f
 11875  11B5  29B4               	goto	u13057
 11876  11B6  0BE9               	decfsz	??_main^(0+256),f
 11877  11B7  29B4               	goto	u13057
 11878  11B8  0BEA               	decfsz	(??_main^(0+256)+1),f
 11879  11B9  29B4               	goto	u13057
 11880  11BA  0000               	nop
 11881                           
 11882                           ;main.c: 63:     CLOCK_init();
 11883  11BB  319B  23AB  3191   	fcall	_CLOCK_init
 11884                           
 11885                           ;main.c: 64:     BUTTONS_init();
 11886  11BE  3192  2277  3191   	fcall	_BUTTONS_init
 11887                           
 11888                           ;main.c: 65:     BEAT_init();
 11889  11C1  319D  2571  3191   	fcall	_BEAT_init
 11890                           
 11891                           ;main.c: 66:     LED_init();
 11892  11C4  319B  23BB  3191   	fcall	_LED_init
 11893                           
 11894                           ;main.c: 67:     CONTROLLER_init();
 11895  11C7  3182  22D1  3191   	fcall	_CONTROLLER_init
 11896                           
 11897                           ;main.c: 69:     (INTCONbits.GIE = 1);
 11898  11CA  178B               	bsf	11,7	;volatile
 11899                           
 11900                           ;main.c: 70:     (INTCONbits.PEIE = 1);
 11901  11CB  170B               	bsf	11,6	;volatile
 11902                           
 11903                           ;main.c: 72:     TM1650_init();
 11904  11CC  319D  2533  3191   	fcall	_TM1650_init
 11905                           
 11906                           ;main.c: 73:     DMX_init();
 11907  11CF  319C  24F8  3191   	fcall	_DMX_init
 11908                           
 11909                           ;main.c: 74:     startTime = CLOCK_getTime();
 11910  11D2  319B  23E6  3191   	fcall	_CLOCK_getTime
 11911  11D5  0140               	movlb	0	; select bank0
 11912  11D6  0821               	movf	?_CLOCK_getTime+1,w
 11913  11D7  0142               	movlb	2	; select bank2
 11914  11D8  00BD               	movwf	(_startTime+1)^(0+256)
 11915  11D9  0140               	movlb	0	; select bank0
 11916  11DA  0820               	movf	?_CLOCK_getTime,w
 11917  11DB  0142               	movlb	2	; select bank2
 11918  11DC  00BC               	movwf	_startTime^(0+256)
 11919  11DD                     l12313:	
 11920                           
 11921                           ;main.c: 79:     {;main.c: 80:         BUTTONS_task();
 11922  11DD  318C  24B6  3191   	fcall	_BUTTONS_task
 11923                           
 11924                           ;main.c: 81:         CONTROLLER_task();
 11925  11E0  318A  22F9  3191   	fcall	_CONTROLLER_task
 11926                           
 11927                           ;main.c: 82:         BEAT_task();
 11928  11E3  318A  2227  3191   	fcall	_BEAT_task
 11929                           
 11930                           ;main.c: 83:         LED_task();
 11931  11E6  3188  20AA  3191   	fcall	_LED_task
 11932  11E9  29DD               	goto	l12313
 11933  11EA                     __end_of_main:	
 11934                           
 11935                           	psect	text1
 11936  1D33                     __ptext1:	
 11937 ;; *************** function _TM1650_init *****************
 11938 ;; Defined at:
 11939 ;;		line 51 in file "tm1650.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;		None
 11942 ;; Auto vars:     Size  Location     Type
 11943 ;;		None
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  1    wreg      void 
 11946 ;; Registers used:
 11947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11957 ;;Total ram usage:        0 bytes
 11958 ;; Hardware stack levels used:    1
 11959 ;; Hardware stack levels required when called:   17
 11960 ;; This function calls:
 11961 ;;		_TM1650_enable
 11962 ;;		_printf
 11963 ;; This function is called by:
 11964 ;;		_main
 11965 ;; This function uses a non-reentrant model
 11966 ;;
 11967                           
 11968                           
 11969                           ;psect for function _TM1650_init
 11970  1D33                     _TM1650_init:	
 11971                           
 11972                           ;tm1650.c: 53:     TM1650_enable(1);
 11973                           
 11974                           ;incstack = 0
 11975 ;; hardware stack exceeded
 11976                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11977  1D33  3001               	movlw	1
 11978  1D34  319D  255C  319D   	fcall	_TM1650_enable
 11979                           
 11980                           ;tm1650.c: 54:     printf("    ");
 11981  1D37  3079               	movlw	low (STR_18| (0+32768))
 11982  1D38  0141               	movlb	1	; select bank1
 11983  1D39  00A0               	movwf	printf@fmt^(0+128)
 11984  1D3A  30A0               	movlw	high (STR_18| (0+32768))
 11985  1D3B  00A1               	movwf	(printf@fmt^(0+128)+1)
 11986  1D3C  319D  2547  319D   	fcall	_printf
 11987                           
 11988                           ;tm1650.c: 55:     printf("\r");
 11989  1D3F  3047               	movlw	low ((STR_28+4)| (0+32768))
 11990  1D40  0141               	movlb	1	; select bank1
 11991  1D41  00A0               	movwf	printf@fmt^(0+128)
 11992  1D42  30A0               	movlw	high ((STR_28+4)| (0+32768))
 11993  1D43  00A1               	movwf	(printf@fmt^(0+128)+1)
 11994  1D44  319D  2547         	fcall	_printf
 11995  1D46  0008               	return
 11996  1D47                     __end_of_TM1650_init:	
 11997                           
 11998                           	psect	text2
 11999  1D5C                     __ptext2:	
 12000 ;; *************** function _TM1650_enable *****************
 12001 ;; Defined at:
 12002 ;;		line 41 in file "tm1650.c"
 12003 ;; Parameters:    Size  Location     Type
 12004 ;;  enable          1    wreg     _Bool 
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;  enable          1   22[BANK0 ] _Bool 
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  1    wreg      void 
 12009 ;; Registers used:
 12010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12017 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12019 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12020 ;;Total ram usage:        1 bytes
 12021 ;; Hardware stack levels used:    1
 12022 ;; Hardware stack levels required when called:    8
 12023 ;; This function calls:
 12024 ;;		_writeData
 12025 ;; This function is called by:
 12026 ;;		_TM1650_init
 12027 ;; This function uses a non-reentrant model
 12028 ;;
 12029                           
 12030                           
 12031                           ;psect for function _TM1650_enable
 12032  1D5C                     _TM1650_enable:	
 12033                           
 12034                           ;incstack = 0
 12035                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12036                           ;TM1650_enable@enable stored from wreg
 12037  1D5C  0140               	movlb	0	; select bank0
 12038  1D5D  00B6               	movwf	TM1650_enable@enable
 12039                           
 12040                           ;tm1650.c: 42:     if(enable){
 12041  1D5E  0836               	movf	TM1650_enable@enable,w
 12042  1D5F  1903               	btfsc	3,2
 12043  1D60  2D6A               	goto	l10559
 12044                           
 12045                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 12046  1D61  01B0               	clrf	writeData@data
 12047  1D62  0AB0               	incf	writeData@data,f
 12048  1D63  3024               	movlw	36
 12049  1D64  319D  25EE         	fcall	_writeData
 12050                           
 12051                           ;tm1650.c: 44:         tm1650_status = 1;
 12052  1D66  0142               	movlb	2	; select bank2
 12053  1D67  01BE               	clrf	_tm1650_status^(0+256)
 12054  1D68  0ABE               	incf	_tm1650_status^(0+256),f
 12055                           
 12056                           ;tm1650.c: 45:     } else {
 12057  1D69  0008               	return
 12058  1D6A                     l10559:	
 12059                           
 12060                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 12061  1D6A  01B0               	clrf	writeData@data
 12062  1D6B  3024               	movlw	36
 12063  1D6C  319D  25EE         	fcall	_writeData
 12064                           
 12065                           ;tm1650.c: 47:         tm1650_status = 0;
 12066  1D6E  0142               	movlb	2	; select bank2
 12067  1D6F  01BE               	clrf	_tm1650_status^(0+256)
 12068  1D70  0008               	return
 12069  1D71                     __end_of_TM1650_enable:	
 12070                           
 12071                           	psect	text3
 12072  1F0A                     __ptext3:	
 12073 ;; *************** function _SYSTEM_Initialize *****************
 12074 ;; Defined at:
 12075 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;		None
 12078 ;; Auto vars:     Size  Location     Type
 12079 ;;		None
 12080 ;; Return value:  Size  Location     Type
 12081 ;;                  1    wreg      void 
 12082 ;; Registers used:
 12083 ;;		wreg, status,2, status,0, pclath, cstack
 12084 ;; Tracked objects:
 12085 ;;		On entry : 0/0
 12086 ;;		On exit  : 0/0
 12087 ;;		Unchanged: 0/0
 12088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12093 ;;Total ram usage:        0 bytes
 12094 ;; Hardware stack levels used:    1
 12095 ;; Hardware stack levels required when called:    6
 12096 ;; This function calls:
 12097 ;;		_ADCC_Initialize
 12098 ;;		_EUSART1_Initialize
 12099 ;;		_I2C1_Initialize
 12100 ;;		_OSCILLATOR_Initialize
 12101 ;;		_PIN_MANAGER_Initialize
 12102 ;;		_PMD_Initialize
 12103 ;;		_PWM1_Initialize
 12104 ;;		_PWM2_Initialize
 12105 ;;		_PWM3_Initialize
 12106 ;;		_PWM4_Initialize
 12107 ;;		_TMR0_Initialize
 12108 ;;		_TMR2_Initialize
 12109 ;; This function is called by:
 12110 ;;		_main
 12111 ;; This function uses a non-reentrant model
 12112 ;;
 12113                           
 12114                           
 12115                           ;psect for function _SYSTEM_Initialize
 12116  1F0A                     _SYSTEM_Initialize:	
 12117                           
 12118                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12119                           
 12120                           ;incstack = 0
 12121                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12122  1F0A  3190  2000  319F   	fcall	_PMD_Initialize
 12123                           
 12124                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12125  1F0D  3190  206B  319F   	fcall	_PIN_MANAGER_Initialize
 12126                           
 12127                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12128  1F10  319C  2425  319F   	fcall	_OSCILLATOR_Initialize
 12129                           
 12130                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 12131  1F13  319D  25D2  319F   	fcall	_I2C1_Initialize
 12132                           
 12133                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 12134  1F16  319C  242E  319F   	fcall	_PWM1_Initialize
 12135                           
 12136                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 12137  1F19  319C  2439  319F   	fcall	_PWM2_Initialize
 12138                           
 12139                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 12140  1F1C  319F  2754  319F   	fcall	_ADCC_Initialize
 12141                           
 12142                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 12143  1F1F  319C  244F  319F   	fcall	_PWM4_Initialize
 12144                           
 12145                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 12146  1F22  319C  2444  319F   	fcall	_PWM3_Initialize
 12147                           
 12148                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 12149  1F25  319C  2498  319F   	fcall	_TMR2_Initialize
 12150                           
 12151                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 12152  1F28  319D  251F  319F   	fcall	_TMR0_Initialize
 12153                           
 12154                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 12155  1F2B  3190  209E         	fcall	_EUSART1_Initialize
 12156  1F2D  0008               	return
 12157  1F2E                     __end_of_SYSTEM_Initialize:	
 12158                           
 12159                           	psect	text4
 12160  1C98                     __ptext4:	
 12161 ;; *************** function _TMR2_Initialize *****************
 12162 ;; Defined at:
 12163 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12164 ;; Parameters:    Size  Location     Type
 12165 ;;		None
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;		None
 12168 ;; Return value:  Size  Location     Type
 12169 ;;                  1    wreg      void 
 12170 ;; Registers used:
 12171 ;;		wreg, status,2
 12172 ;; Tracked objects:
 12173 ;;		On entry : 0/0
 12174 ;;		On exit  : 0/0
 12175 ;;		Unchanged: 0/0
 12176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12181 ;;Total ram usage:        0 bytes
 12182 ;; Hardware stack levels used:    1
 12183 ;; Hardware stack levels required when called:    4
 12184 ;; This function calls:
 12185 ;;		Nothing
 12186 ;; This function is called by:
 12187 ;;		_SYSTEM_Initialize
 12188 ;; This function uses a non-reentrant model
 12189 ;;
 12190                           
 12191                           
 12192                           ;psect for function _TMR2_Initialize
 12193  1C98                     _TMR2_Initialize:	
 12194                           
 12195                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 12196                           
 12197                           ;incstack = 0
 12198                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12199  1C98  3001               	movlw	1
 12200  1C99  0145               	movlb	5	; select bank5
 12201  1C9A  0090               	movwf	16	;volatile
 12202                           
 12203                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 12204  1C9B  018F               	clrf	15	;volatile
 12205                           
 12206                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12207  1C9C  0191               	clrf	17	;volatile
 12208                           
 12209                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 12210  1C9D  30FF               	movlw	255
 12211  1C9E  008D               	movwf	13	;volatile
 12212                           
 12213                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12214  1C9F  018C               	clrf	12	;volatile
 12215                           
 12216                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 12217  1CA0  014E               	movlb	14	; select bank14
 12218  1CA1  1090               	bcf	16,1	;volatile
 12219                           
 12220                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 12221  1CA2  30F0               	movlw	240
 12222  1CA3  0145               	movlb	5	; select bank5
 12223  1CA4  008E               	movwf	14	;volatile
 12224  1CA5  0008               	return
 12225  1CA6                     __end_of_TMR2_Initialize:	
 12226                           
 12227                           	psect	text5
 12228  1D1F                     __ptext5:	
 12229 ;; *************** function _TMR0_Initialize *****************
 12230 ;; Defined at:
 12231 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12232 ;; Parameters:    Size  Location     Type
 12233 ;;		None
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;		None
 12236 ;; Return value:  Size  Location     Type
 12237 ;;                  1    wreg      void 
 12238 ;; Registers used:
 12239 ;;		wreg, status,2, status,0, pclath, cstack
 12240 ;; Tracked objects:
 12241 ;;		On entry : 0/0
 12242 ;;		On exit  : 0/0
 12243 ;;		Unchanged: 0/0
 12244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12249 ;;Total ram usage:        0 bytes
 12250 ;; Hardware stack levels used:    1
 12251 ;; Hardware stack levels required when called:    5
 12252 ;; This function calls:
 12253 ;;		_TMR0_SetInterruptHandler
 12254 ;; This function is called by:
 12255 ;;		_SYSTEM_Initialize
 12256 ;; This function uses a non-reentrant model
 12257 ;;
 12258                           
 12259                           
 12260                           ;psect for function _TMR0_Initialize
 12261  1D1F                     _TMR0_Initialize:	
 12262                           
 12263                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 12264                           
 12265                           ;incstack = 0
 12266                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12267  1D1F  3045               	movlw	69
 12268  1D20  014B               	movlb	11	; select bank11
 12269  1D21  009F               	movwf	31	;volatile
 12270                           
 12271                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 12272  1D22  30F9               	movlw	249
 12273  1D23  009D               	movwf	29	;volatile
 12274                           
 12275                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12276  1D24  019C               	clrf	28	;volatile
 12277                           
 12278                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12279  1D25  014E               	movlb	14	; select bank14
 12280  1D26  128C               	bcf	12,5	;volatile
 12281                           
 12282                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12283  1D27  1696               	bsf	22,5	;volatile
 12284                           
 12285                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12286  1D28  3082               	movlw	low _TMR0_DefaultInterruptHandler
 12287  1D29  0140               	movlb	0	; select bank0
 12288  1D2A  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12289  1D2B  301B               	movlw	high _TMR0_DefaultInterruptHandler
 12290  1D2C  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12291  1D2D  319B  23EF         	fcall	_TMR0_SetInterruptHandler
 12292                           
 12293                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12294  1D2F  3080               	movlw	128
 12295  1D30  014B               	movlb	11	; select bank11
 12296  1D31  009E               	movwf	30	;volatile
 12297  1D32  0008               	return
 12298  1D33                     __end_of_TMR0_Initialize:	
 12299                           
 12300                           	psect	text6
 12301  1C4F                     __ptext6:	
 12302 ;; *************** function _PWM4_Initialize *****************
 12303 ;; Defined at:
 12304 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12305 ;; Parameters:    Size  Location     Type
 12306 ;;		None
 12307 ;; Auto vars:     Size  Location     Type
 12308 ;;		None
 12309 ;; Return value:  Size  Location     Type
 12310 ;;                  1    wreg      void 
 12311 ;; Registers used:
 12312 ;;		wreg, status,2, status,0
 12313 ;; Tracked objects:
 12314 ;;		On entry : 0/0
 12315 ;;		On exit  : 0/0
 12316 ;;		Unchanged: 0/0
 12317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12322 ;;Total ram usage:        0 bytes
 12323 ;; Hardware stack levels used:    1
 12324 ;; Hardware stack levels required when called:    4
 12325 ;; This function calls:
 12326 ;;		Nothing
 12327 ;; This function is called by:
 12328 ;;		_SYSTEM_Initialize
 12329 ;; This function uses a non-reentrant model
 12330 ;;
 12331                           
 12332                           
 12333                           ;psect for function _PWM4_Initialize
 12334  1C4F                     _PWM4_Initialize:	
 12335                           
 12336                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12337                           
 12338                           ;incstack = 0
 12339                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12340  1C4F  308C               	movlw	140
 12341  1C50  0146               	movlb	6	; select bank6
 12342  1C51  009A               	movwf	26	;volatile
 12343                           
 12344                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12345  1C52  0199               	clrf	25	;volatile
 12346                           
 12347                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12348  1C53  0198               	clrf	24	;volatile
 12349                           
 12350                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12351  1C54  0144               	movlb	4	; select bank4
 12352  1C55  081E               	movf	30,w	;volatile
 12353  1C56  393F               	andlw	-193
 12354  1C57  3840               	iorlw	64
 12355  1C58  009E               	movwf	30	;volatile
 12356  1C59  0008               	return
 12357  1C5A                     __end_of_PWM4_Initialize:	
 12358                           
 12359                           	psect	text7
 12360  1C44                     __ptext7:	
 12361 ;; *************** function _PWM3_Initialize *****************
 12362 ;; Defined at:
 12363 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;		None
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;		None
 12368 ;; Return value:  Size  Location     Type
 12369 ;;                  1    wreg      void 
 12370 ;; Registers used:
 12371 ;;		wreg, status,2, status,0
 12372 ;; Tracked objects:
 12373 ;;		On entry : 0/0
 12374 ;;		On exit  : 0/0
 12375 ;;		Unchanged: 0/0
 12376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12381 ;;Total ram usage:        0 bytes
 12382 ;; Hardware stack levels used:    1
 12383 ;; Hardware stack levels required when called:    4
 12384 ;; This function calls:
 12385 ;;		Nothing
 12386 ;; This function is called by:
 12387 ;;		_SYSTEM_Initialize
 12388 ;; This function uses a non-reentrant model
 12389 ;;
 12390                           
 12391                           
 12392                           ;psect for function _PWM3_Initialize
 12393  1C44                     _PWM3_Initialize:	
 12394                           
 12395                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12396                           
 12397                           ;incstack = 0
 12398                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12399  1C44  308C               	movlw	140
 12400  1C45  0146               	movlb	6	; select bank6
 12401  1C46  0096               	movwf	22	;volatile
 12402                           
 12403                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12404  1C47  0195               	clrf	21	;volatile
 12405                           
 12406                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12407  1C48  0194               	clrf	20	;volatile
 12408                           
 12409                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12410  1C49  0144               	movlb	4	; select bank4
 12411  1C4A  081E               	movf	30,w	;volatile
 12412  1C4B  39CF               	andlw	-49
 12413  1C4C  3810               	iorlw	16
 12414  1C4D  009E               	movwf	30	;volatile
 12415  1C4E  0008               	return
 12416  1C4F                     __end_of_PWM3_Initialize:	
 12417                           
 12418                           	psect	text8
 12419  1C39                     __ptext8:	
 12420 ;; *************** function _PWM2_Initialize *****************
 12421 ;; Defined at:
 12422 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12423 ;; Parameters:    Size  Location     Type
 12424 ;;		None
 12425 ;; Auto vars:     Size  Location     Type
 12426 ;;		None
 12427 ;; Return value:  Size  Location     Type
 12428 ;;                  1    wreg      void 
 12429 ;; Registers used:
 12430 ;;		wreg, status,2, status,0
 12431 ;; Tracked objects:
 12432 ;;		On entry : 0/0
 12433 ;;		On exit  : 0/0
 12434 ;;		Unchanged: 0/0
 12435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12440 ;;Total ram usage:        0 bytes
 12441 ;; Hardware stack levels used:    1
 12442 ;; Hardware stack levels required when called:    4
 12443 ;; This function calls:
 12444 ;;		Nothing
 12445 ;; This function is called by:
 12446 ;;		_SYSTEM_Initialize
 12447 ;; This function uses a non-reentrant model
 12448 ;;
 12449                           
 12450                           
 12451                           ;psect for function _PWM2_Initialize
 12452  1C39                     _PWM2_Initialize:	
 12453                           
 12454                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12455                           
 12456                           ;incstack = 0
 12457                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12458  1C39  308C               	movlw	140
 12459  1C3A  0146               	movlb	6	; select bank6
 12460  1C3B  0092               	movwf	18	;volatile
 12461                           
 12462                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12463  1C3C  0191               	clrf	17	;volatile
 12464                           
 12465                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12466  1C3D  0190               	clrf	16	;volatile
 12467                           
 12468                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12469  1C3E  0144               	movlb	4	; select bank4
 12470  1C3F  081E               	movf	30,w	;volatile
 12471  1C40  39F3               	andlw	-13
 12472  1C41  3804               	iorlw	4
 12473  1C42  009E               	movwf	30	;volatile
 12474  1C43  0008               	return
 12475  1C44                     __end_of_PWM2_Initialize:	
 12476                           
 12477                           	psect	text9
 12478  1C2E                     __ptext9:	
 12479 ;; *************** function _PWM1_Initialize *****************
 12480 ;; Defined at:
 12481 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12482 ;; Parameters:    Size  Location     Type
 12483 ;;		None
 12484 ;; Auto vars:     Size  Location     Type
 12485 ;;		None
 12486 ;; Return value:  Size  Location     Type
 12487 ;;                  1    wreg      void 
 12488 ;; Registers used:
 12489 ;;		wreg, status,2, status,0
 12490 ;; Tracked objects:
 12491 ;;		On entry : 0/0
 12492 ;;		On exit  : 0/0
 12493 ;;		Unchanged: 0/0
 12494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12499 ;;Total ram usage:        0 bytes
 12500 ;; Hardware stack levels used:    1
 12501 ;; Hardware stack levels required when called:    4
 12502 ;; This function calls:
 12503 ;;		Nothing
 12504 ;; This function is called by:
 12505 ;;		_SYSTEM_Initialize
 12506 ;; This function uses a non-reentrant model
 12507 ;;
 12508                           
 12509                           
 12510                           ;psect for function _PWM1_Initialize
 12511  1C2E                     _PWM1_Initialize:	
 12512                           
 12513                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12514                           
 12515                           ;incstack = 0
 12516                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12517  1C2E  308C               	movlw	140
 12518  1C2F  0146               	movlb	6	; select bank6
 12519  1C30  008E               	movwf	14	;volatile
 12520                           
 12521                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12522  1C31  018D               	clrf	13	;volatile
 12523                           
 12524                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12525  1C32  018C               	clrf	12	;volatile
 12526                           
 12527                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12528  1C33  0144               	movlb	4	; select bank4
 12529  1C34  081E               	movf	30,w	;volatile
 12530  1C35  39FC               	andlw	-4
 12531  1C36  3801               	iorlw	1
 12532  1C37  009E               	movwf	30	;volatile
 12533  1C38  0008               	return
 12534  1C39                     __end_of_PWM1_Initialize:	
 12535                           
 12536                           	psect	text10
 12537  1000                     __ptext10:	
 12538 ;; *************** function _PMD_Initialize *****************
 12539 ;; Defined at:
 12540 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;		None
 12543 ;; Auto vars:     Size  Location     Type
 12544 ;;		None
 12545 ;; Return value:  Size  Location     Type
 12546 ;;                  1    wreg      void 
 12547 ;; Registers used:
 12548 ;;		status,2
 12549 ;; Tracked objects:
 12550 ;;		On entry : 0/0
 12551 ;;		On exit  : 0/0
 12552 ;;		Unchanged: 0/0
 12553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12558 ;;Total ram usage:        0 bytes
 12559 ;; Hardware stack levels used:    1
 12560 ;; Hardware stack levels required when called:    4
 12561 ;; This function calls:
 12562 ;;		Nothing
 12563 ;; This function is called by:
 12564 ;;		_SYSTEM_Initialize
 12565 ;; This function uses a non-reentrant model
 12566 ;;
 12567                           
 12568                           
 12569                           ;psect for function _PMD_Initialize
 12570  1000                     _PMD_Initialize:	
 12571                           
 12572                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12573                           
 12574                           ;incstack = 0
 12575                           ; Regs used in _PMD_Initialize: [status,2]
 12576  1000  014F               	movlb	15	; select bank15
 12577  1001  0196               	clrf	22	;volatile
 12578                           
 12579                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12580  1002  0197               	clrf	23	;volatile
 12581                           
 12582                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12583  1003  0198               	clrf	24	;volatile
 12584                           
 12585                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12586  1004  0199               	clrf	25	;volatile
 12587                           
 12588                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12589  1005  019A               	clrf	26	;volatile
 12590                           
 12591                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12592  1006  019B               	clrf	27	;volatile
 12593                           
 12594                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12595  1007  019C               	clrf	28	;volatile
 12596                           
 12597                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12598  1008  019D               	clrf	29	;volatile
 12599  1009  0008               	return
 12600  100A                     __end_of_PMD_Initialize:	
 12601                           
 12602                           	psect	text11
 12603  106B                     __ptext11:	
 12604 ;; *************** function _PIN_MANAGER_Initialize *****************
 12605 ;; Defined at:
 12606 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12607 ;; Parameters:    Size  Location     Type
 12608 ;;		None
 12609 ;; Auto vars:     Size  Location     Type
 12610 ;;		None
 12611 ;; Return value:  Size  Location     Type
 12612 ;;                  1    wreg      void 
 12613 ;; Registers used:
 12614 ;;		wreg, status,2
 12615 ;; Tracked objects:
 12616 ;;		On entry : 0/0
 12617 ;;		On exit  : 0/0
 12618 ;;		Unchanged: 0/0
 12619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12624 ;;Total ram usage:        0 bytes
 12625 ;; Hardware stack levels used:    1
 12626 ;; Hardware stack levels required when called:    4
 12627 ;; This function calls:
 12628 ;;		Nothing
 12629 ;; This function is called by:
 12630 ;;		_SYSTEM_Initialize
 12631 ;; This function uses a non-reentrant model
 12632 ;;
 12633                           
 12634                           
 12635                           ;psect for function _PIN_MANAGER_Initialize
 12636  106B                     _PIN_MANAGER_Initialize:	
 12637                           
 12638                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12639                           
 12640                           ;incstack = 0
 12641                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12642  106B  0140               	movlb	0	; select bank0
 12643  106C  0198               	clrf	24	;volatile
 12644                           
 12645                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12646  106D  0199               	clrf	25	;volatile
 12647                           
 12648                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12649  106E  019A               	clrf	26	;volatile
 12650                           
 12651                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12652  106F  303F               	movlw	63
 12653  1070  0092               	movwf	18	;volatile
 12654                           
 12655                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12656  1071  30F0               	movlw	240
 12657  1072  0093               	movwf	19	;volatile
 12658                           
 12659                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x26;
 12660  1073  3026               	movlw	38
 12661  1074  0094               	movwf	20	;volatile
 12662                           
 12663                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12664  1075  30FF               	movlw	255
 12665  1076  017E               	movlb	62	; select bank62
 12666  1077  00CE               	movwf	78	;volatile
 12667                           
 12668                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12669  1078  30E0               	movlw	224
 12670  1079  00C3               	movwf	67	;volatile
 12671                           
 12672                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12673  107A  3007               	movlw	7
 12674  107B  00B8               	movwf	56	;volatile
 12675                           
 12676                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12677  107C  01C4               	clrf	68	;volatile
 12678                           
 12679                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12680  107D  01B9               	clrf	57	;volatile
 12681                           
 12682                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12683  107E  01CF               	clrf	79	;volatile
 12684                           
 12685                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12686  107F  01BA               	clrf	58	;volatile
 12687                           
 12688                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12689  1080  01C5               	clrf	69	;volatile
 12690                           
 12691                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12692  1081  01D0               	clrf	80	;volatile
 12693                           
 12694                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12695  1082  3037               	movlw	55
 12696  1083  00BB               	movwf	59	;volatile
 12697                           
 12698                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12699  1084  30F0               	movlw	240
 12700  1085  00C6               	movwf	70	;volatile
 12701                           
 12702                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12703  1086  30FF               	movlw	255
 12704  1087  00D1               	movwf	81	;volatile
 12705                           
 12706                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12707  1088  3005               	movlw	5
 12708  1089  017D               	movlb	61	; select bank61
 12709  108A  00C5               	movwf	69	;volatile
 12710                           
 12711                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12712  108B  3014               	movlw	20
 12713  108C  017E               	movlb	62	; select bank62
 12714  108D  0094               	movwf	20	;volatile
 12715                           
 12716                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12717  108E  300B               	movlw	11
 12718  108F  00A3               	movwf	35	;volatile
 12719                           
 12720                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12721  1090  300C               	movlw	12
 12722  1091  00A4               	movwf	36	;volatile
 12723                           
 12724                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12725  1092  3013               	movlw	19
 12726  1093  0095               	movwf	21	;volatile
 12727                           
 12728                           ;mcc_generated_files/pin_manager.c: 111:     RC6PPS = 0x0A;
 12729  1094  300A               	movlw	10
 12730  1095  00A6               	movwf	38	;volatile
 12731                           
 12732                           ;mcc_generated_files/pin_manager.c: 112:     RC7PPS = 0x09;
 12733  1096  3009               	movlw	9
 12734  1097  00A7               	movwf	39	;volatile
 12735                           
 12736                           ;mcc_generated_files/pin_manager.c: 113:     SSP1DATPPS = 0x04;
 12737  1098  3004               	movlw	4
 12738  1099  017D               	movlb	61	; select bank61
 12739  109A  00C6               	movwf	70	;volatile
 12740                           
 12741                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0C;
 12742  109B  300C               	movlw	12
 12743  109C  00CB               	movwf	75	;volatile
 12744  109D  0008               	return
 12745  109E                     __end_of_PIN_MANAGER_Initialize:	
 12746                           
 12747                           	psect	text12
 12748  1C25                     __ptext12:	
 12749 ;; *************** function _OSCILLATOR_Initialize *****************
 12750 ;; Defined at:
 12751 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;		None
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;		None
 12756 ;; Return value:  Size  Location     Type
 12757 ;;                  1    wreg      void 
 12758 ;; Registers used:
 12759 ;;		wreg, status,2
 12760 ;; Tracked objects:
 12761 ;;		On entry : 0/0
 12762 ;;		On exit  : 0/0
 12763 ;;		Unchanged: 0/0
 12764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12769 ;;Total ram usage:        0 bytes
 12770 ;; Hardware stack levels used:    1
 12771 ;; Hardware stack levels required when called:    4
 12772 ;; This function calls:
 12773 ;;		Nothing
 12774 ;; This function is called by:
 12775 ;;		_SYSTEM_Initialize
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           
 12780                           ;psect for function _OSCILLATOR_Initialize
 12781  1C25                     _OSCILLATOR_Initialize:	
 12782                           
 12783                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12784                           
 12785                           ;incstack = 0
 12786                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12787  1C25  3060               	movlw	96
 12788  1C26  0151               	movlb	17	; select bank17
 12789  1C27  008D               	movwf	13	;volatile
 12790                           
 12791                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12792  1C28  018F               	clrf	15	;volatile
 12793                           
 12794                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12795  1C29  0191               	clrf	17	;volatile
 12796                           
 12797                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12798  1C2A  3006               	movlw	6
 12799  1C2B  0093               	movwf	19	;volatile
 12800                           
 12801                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12802  1C2C  0192               	clrf	18	;volatile
 12803  1C2D  0008               	return
 12804  1C2E                     __end_of_OSCILLATOR_Initialize:	
 12805                           
 12806                           	psect	text13
 12807  1DD2                     __ptext13:	
 12808 ;; *************** function _I2C1_Initialize *****************
 12809 ;; Defined at:
 12810 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;		None
 12813 ;; Auto vars:     Size  Location     Type
 12814 ;;		None
 12815 ;; Return value:  Size  Location     Type
 12816 ;;                  1    wreg      void 
 12817 ;; Registers used:
 12818 ;;		wreg, status,2
 12819 ;; Tracked objects:
 12820 ;;		On entry : 0/0
 12821 ;;		On exit  : 0/0
 12822 ;;		Unchanged: 0/0
 12823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12826 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12827 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12828 ;;Total ram usage:        1 bytes
 12829 ;; Hardware stack levels used:    1
 12830 ;; Hardware stack levels required when called:    4
 12831 ;; This function calls:
 12832 ;;		Nothing
 12833 ;; This function is called by:
 12834 ;;		_SYSTEM_Initialize
 12835 ;; This function uses a non-reentrant model
 12836 ;;
 12837                           
 12838                           
 12839                           ;psect for function _I2C1_Initialize
 12840  1DD2                     _I2C1_Initialize:	
 12841                           
 12842                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12843                           
 12844                           ;incstack = 0
 12845                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12846  1DD2  305C               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12847  1DD3  0140               	movlb	0	; select bank0
 12848  1DD4  00A0               	movwf	??_I2C1_Initialize
 12849  1DD5  0820               	movf	??_I2C1_Initialize,w
 12850  1DD6  0141               	movlb	1	; select bank1
 12851  1DD7  00C6               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12852                           
 12853                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12854  1DD8  305C               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12855  1DD9  0140               	movlb	0	; select bank0
 12856  1DDA  00A0               	movwf	??_I2C1_Initialize
 12857  1DDB  0820               	movf	??_I2C1_Initialize,w
 12858  1DDC  0141               	movlb	1	; select bank1
 12859  1DDD  00C5               	movwf	_i2c1_object^(0+128)
 12860                           
 12861                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12862  1DDE  14C7               	bsf	(_i2c1_object^(0+128)+2),1
 12863                           
 12864                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12865  1DDF  1047               	bcf	(_i2c1_object^(0+128)+2),0
 12866                           
 12867                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12868  1DE0  01C9               	clrf	(_i2c1_object^(0+128)+4)
 12869                           
 12870                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12871  1DE1  0143               	movlb	3	; select bank3
 12872  1DE2  018F               	clrf	15	;volatile
 12873                           
 12874                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12875  1DE3  3028               	movlw	40
 12876  1DE4  0090               	movwf	16	;volatile
 12877                           
 12878                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12879  1DE5  0192               	clrf	18	;volatile
 12880                           
 12881                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12882  1DE6  304F               	movlw	79
 12883  1DE7  008D               	movwf	13	;volatile
 12884                           
 12885                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12886  1DE8  014E               	movlb	14	; select bank14
 12887  1DE9  100F               	bcf	15,0	;volatile
 12888                           
 12889                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12890  1DEA  108F               	bcf	15,1	;volatile
 12891                           
 12892                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12893  1DEB  1419               	bsf	25,0	;volatile
 12894                           
 12895                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12896  1DEC  1499               	bsf	25,1	;volatile
 12897  1DED  0008               	return
 12898  1DEE                     __end_of_I2C1_Initialize:	
 12899                           
 12900                           	psect	text14
 12901  109E                     __ptext14:	
 12902 ;; *************** function _EUSART1_Initialize *****************
 12903 ;; Defined at:
 12904 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;		None
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;		None
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  1    wreg      void 
 12911 ;; Registers used:
 12912 ;;		wreg, status,2, status,0, pclath, cstack
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12922 ;;Total ram usage:        0 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:    5
 12925 ;; This function calls:
 12926 ;;		_EUSART1_SetErrorHandler
 12927 ;;		_EUSART1_SetFramingErrorHandler
 12928 ;;		_EUSART1_SetOverrunErrorHandler
 12929 ;;		_EUSART1_SetRxInterruptHandler
 12930 ;; This function is called by:
 12931 ;;		_SYSTEM_Initialize
 12932 ;; This function uses a non-reentrant model
 12933 ;;
 12934                           
 12935                           
 12936                           ;psect for function _EUSART1_Initialize
 12937  109E                     _EUSART1_Initialize:	
 12938                           
 12939                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12940                           
 12941                           ;incstack = 0
 12942                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12943  109E  014E               	movlb	14	; select bank14
 12944  109F  1299               	bcf	25,5	;volatile
 12945                           
 12946                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12947  10A0  3007               	movlw	low _EUSART1_Receive_ISR
 12948  10A1  0140               	movlb	0	; select bank0
 12949  10A2  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12950  10A3  3011               	movlw	high _EUSART1_Receive_ISR
 12951  10A4  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12952  10A5  319C  2401  3190   	fcall	_EUSART1_SetRxInterruptHandler
 12953                           
 12954                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12955  10A8  3008               	movlw	8
 12956  10A9  0142               	movlb	2	; select bank2
 12957  10AA  009F               	movwf	31	;volatile
 12958                           
 12959                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12960  10AB  3090               	movlw	144
 12961  10AC  009D               	movwf	29	;volatile
 12962                           
 12963                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12964  10AD  3004               	movlw	4
 12965  10AE  009E               	movwf	30	;volatile
 12966                           
 12967                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12968  10AF  301F               	movlw	31
 12969  10B0  009B               	movwf	27	;volatile
 12970                           
 12971                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12972  10B1  019C               	clrf	28	;volatile
 12973                           
 12974                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12975  10B2  3081               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12976  10B3  0140               	movlb	0	; select bank0
 12977  10B4  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12978  10B5  301B               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12979  10B6  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12980  10B7  319C  2413  3190   	fcall	_EUSART1_SetFramingErrorHandler
 12981                           
 12982                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12983  10BA  3096               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12984  10BB  0140               	movlb	0	; select bank0
 12985  10BC  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12986  10BD  301B               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12987  10BE  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12988  10BF  319C  241C  3190   	fcall	_EUSART1_SetOverrunErrorHandler
 12989                           
 12990                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12991  10C2  3083               	movlw	low _EUSART1_DefaultErrorHandler
 12992  10C3  0140               	movlb	0	; select bank0
 12993  10C4  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12994  10C5  301B               	movlw	high _EUSART1_DefaultErrorHandler
 12995  10C6  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12996  10C7  319C  240A         	fcall	_EUSART1_SetErrorHandler
 12997                           
 12998                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12999  10C9  0142               	movlb	2	; select bank2
 13000  10CA  01C3               	clrf	_eusart1RxLastError^(0+256)	;volatile
 13001                           
 13002                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 13003  10CB  01F4               	clrf	_eusart1RxHead	;volatile
 13004                           
 13005                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 13006  10CC  01F3               	clrf	_eusart1RxTail	;volatile
 13007                           
 13008                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 13009  10CD  0141               	movlb	1	; select bank1
 13010  10CE  01E7               	clrf	_eusart1RxCount^(0+128)	;volatile
 13011                           
 13012                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 13013  10CF  014E               	movlb	14	; select bank14
 13014  10D0  1699               	bsf	25,5	;volatile
 13015  10D1  0008               	return
 13016  10D2                     __end_of_EUSART1_Initialize:	
 13017                           
 13018                           	psect	text15
 13019  1C1C                     __ptext15:	
 13020 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 13021 ;; Defined at:
 13022 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 13023 ;; Parameters:    Size  Location     Type
 13024 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13025 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 13026 ;; Auto vars:     Size  Location     Type
 13027 ;;		None
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  1    wreg      void 
 13030 ;; Registers used:
 13031 ;;		wreg
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13037 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13040 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13041 ;;Total ram usage:        2 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; Hardware stack levels required when called:    4
 13044 ;; This function calls:
 13045 ;;		Nothing
 13046 ;; This function is called by:
 13047 ;;		_EUSART1_Initialize
 13048 ;; This function uses a non-reentrant model
 13049 ;;
 13050                           
 13051                           
 13052                           ;psect for function _EUSART1_SetOverrunErrorHandler
 13053  1C1C                     _EUSART1_SetOverrunErrorHandler:	
 13054                           
 13055                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 13056                           
 13057                           ;incstack = 0
 13058                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 13059  1C1C  0140               	movlb	0	; select bank0
 13060  1C1D  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 13061  1C1E  0144               	movlb	4	; select bank4
 13062  1C1F  00E5               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+512)
 13063  1C20  0140               	movlb	0	; select bank0
 13064  1C21  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 13065  1C22  0144               	movlb	4	; select bank4
 13066  1C23  00E4               	movwf	_EUSART1_OverrunErrorHandler^(0+512)
 13067  1C24  0008               	return
 13068  1C25                     __end_of_EUSART1_SetOverrunErrorHandler:	
 13069                           
 13070                           	psect	text16
 13071  1C13                     __ptext16:	
 13072 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13073 ;; Defined at:
 13074 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 13075 ;; Parameters:    Size  Location     Type
 13076 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13077 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13078 ;; Auto vars:     Size  Location     Type
 13079 ;;		None
 13080 ;; Return value:  Size  Location     Type
 13081 ;;                  1    wreg      void 
 13082 ;; Registers used:
 13083 ;;		wreg
 13084 ;; Tracked objects:
 13085 ;;		On entry : 0/0
 13086 ;;		On exit  : 0/0
 13087 ;;		Unchanged: 0/0
 13088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13092 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13093 ;;Total ram usage:        2 bytes
 13094 ;; Hardware stack levels used:    1
 13095 ;; Hardware stack levels required when called:    4
 13096 ;; This function calls:
 13097 ;;		Nothing
 13098 ;; This function is called by:
 13099 ;;		_EUSART1_Initialize
 13100 ;; This function uses a non-reentrant model
 13101 ;;
 13102                           
 13103                           
 13104                           ;psect for function _EUSART1_SetFramingErrorHandler
 13105  1C13                     _EUSART1_SetFramingErrorHandler:	
 13106                           
 13107                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 13108                           
 13109                           ;incstack = 0
 13110                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13111  1C13  0140               	movlb	0	; select bank0
 13112  1C14  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13113  1C15  0143               	movlb	3	; select bank3
 13114  1C16  00E9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
 13115  1C17  0140               	movlb	0	; select bank0
 13116  1C18  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13117  1C19  0143               	movlb	3	; select bank3
 13118  1C1A  00E8               	movwf	_EUSART1_FramingErrorHandler^(0+384)
 13119  1C1B  0008               	return
 13120  1C1C                     __end_of_EUSART1_SetFramingErrorHandler:	
 13121                           
 13122                           	psect	text17
 13123  1C0A                     __ptext17:	
 13124 ;; *************** function _EUSART1_SetErrorHandler *****************
 13125 ;; Defined at:
 13126 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 13127 ;; Parameters:    Size  Location     Type
 13128 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13129 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;		None
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  1    wreg      void 
 13134 ;; Registers used:
 13135 ;;		wreg
 13136 ;; Tracked objects:
 13137 ;;		On entry : 0/0
 13138 ;;		On exit  : 0/0
 13139 ;;		Unchanged: 0/0
 13140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13144 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13145 ;;Total ram usage:        2 bytes
 13146 ;; Hardware stack levels used:    1
 13147 ;; Hardware stack levels required when called:    4
 13148 ;; This function calls:
 13149 ;;		Nothing
 13150 ;; This function is called by:
 13151 ;;		_EUSART1_Initialize
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155                           
 13156                           ;psect for function _EUSART1_SetErrorHandler
 13157  1C0A                     _EUSART1_SetErrorHandler:	
 13158                           
 13159                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 13160                           
 13161                           ;incstack = 0
 13162                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13163  1C0A  0140               	movlb	0	; select bank0
 13164  1C0B  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13165  1C0C  0145               	movlb	5	; select bank5
 13166  1C0D  00D3               	movwf	(_EUSART1_ErrorHandler+1)^(0+640)
 13167  1C0E  0140               	movlb	0	; select bank0
 13168  1C0F  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13169  1C10  0145               	movlb	5	; select bank5
 13170  1C11  00D2               	movwf	_EUSART1_ErrorHandler^(0+640)
 13171  1C12  0008               	return
 13172  1C13                     __end_of_EUSART1_SetErrorHandler:	
 13173                           
 13174                           	psect	text18
 13175  1F54                     __ptext18:	
 13176 ;; *************** function _ADCC_Initialize *****************
 13177 ;; Defined at:
 13178 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;		None
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;		None
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      void 
 13185 ;; Registers used:
 13186 ;;		wreg, status,2, status,0, pclath, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13196 ;;Total ram usage:        0 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    5
 13199 ;; This function calls:
 13200 ;;		_ADCC_SetADTIInterruptHandler
 13201 ;; This function is called by:
 13202 ;;		_SYSTEM_Initialize
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           
 13207                           ;psect for function _ADCC_Initialize
 13208  1F54                     _ADCC_Initialize:	
 13209                           
 13210                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13211                           
 13212                           ;incstack = 0
 13213                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13214  1F54  0141               	movlb	1	; select bank1
 13215  1F55  018C               	clrf	12	;volatile
 13216                           
 13217                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13218  1F56  018D               	clrf	13	;volatile
 13219                           
 13220                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13221  1F57  018E               	clrf	14	;volatile
 13222                           
 13223                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13224  1F58  018F               	clrf	15	;volatile
 13225                           
 13226                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13227  1F59  0192               	clrf	18	;volatile
 13228                           
 13229                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13230  1F5A  0193               	clrf	19	;volatile
 13231                           
 13232                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13233  1F5B  0198               	clrf	24	;volatile
 13234                           
 13235                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13236  1F5C  019A               	clrf	26	;volatile
 13237                           
 13238                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13239  1F5D  019F               	clrf	31	;volatile
 13240                           
 13241                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13242  1F5E  0142               	movlb	2	; select bank2
 13243  1F5F  018C               	clrf	12	;volatile
 13244                           
 13245                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13246  1F60  018D               	clrf	13	;volatile
 13247                           
 13248                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13249  1F61  018E               	clrf	14	;volatile
 13250                           
 13251                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13252  1F62  018F               	clrf	15	;volatile
 13253                           
 13254                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13255  1F63  0190               	clrf	16	;volatile
 13256                           
 13257                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13258  1F64  0192               	clrf	18	;volatile
 13259                           
 13260                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 13261  1F65  3054               	movlw	84
 13262  1F66  0093               	movwf	19	;volatile
 13263                           
 13264                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 13265  1F67  3056               	movlw	86
 13266  1F68  0094               	movwf	20	;volatile
 13267                           
 13268                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13269  1F69  0195               	clrf	21	;volatile
 13270                           
 13271                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 13272  1F6A  0196               	clrf	22	;volatile
 13273                           
 13274                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13275  1F6B  0197               	clrf	23	;volatile
 13276                           
 13277                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13278  1F6C  0198               	clrf	24	;volatile
 13279                           
 13280                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 13281  1F6D  30D4               	movlw	212
 13282  1F6E  0091               	movwf	17	;volatile
 13283                           
 13284                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 13285  1F6F  014E               	movlb	14	; select bank14
 13286  1F70  108D               	bcf	13,1	;volatile
 13287                           
 13288                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 13289  1F71  1497               	bsf	23,1	;volatile
 13290                           
 13291                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 13292  1F72  3080               	movlw	low _ADCC_DefaultInterruptHandler
 13293  1F73  0140               	movlb	0	; select bank0
 13294  1F74  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13295  1F75  301B               	movlw	high _ADCC_DefaultInterruptHandler
 13296  1F76  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13297  1F77  319B  23CB         	fcall	_ADCC_SetADTIInterruptHandler
 13298  1F79  0008               	return
 13299  1F7A                     __end_of_ADCC_Initialize:	
 13300                           
 13301                           	psect	text19
 13302  08AA                     __ptext19:	
 13303 ;; *************** function _LED_task *****************
 13304 ;; Defined at:
 13305 ;;		line 56 in file "led.c"
 13306 ;; Parameters:    Size  Location     Type
 13307 ;;		None
 13308 ;; Auto vars:     Size  Location     Type
 13309 ;;		None
 13310 ;; Return value:  Size  Location     Type
 13311 ;;                  1    wreg      void 
 13312 ;; Registers used:
 13313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13314 ;; Tracked objects:
 13315 ;;		On entry : 0/0
 13316 ;;		On exit  : 0/0
 13317 ;;		Unchanged: 0/0
 13318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13321 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13322 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13323 ;;Total ram usage:        2 bytes
 13324 ;; Hardware stack levels used:    1
 13325 ;; Hardware stack levels required when called:    9
 13326 ;; This function calls:
 13327 ;;		_LED_setColor
 13328 ;;		_LED_task_ANIMATION
 13329 ;;		_LED_task_BEAT_CONTINUOUS
 13330 ;;		_LED_task_BEAT_FADE
 13331 ;;		_LED_task_BEAT_MIXED
 13332 ;;		_LED_task_BEAT_STROBE
 13333 ;;		_LED_task_DMX
 13334 ;;		_LED_task_MANUAL
 13335 ;;		_beatColorCreator
 13336 ;;		_getIsHold
 13337 ;;		_getMode
 13338 ;; This function is called by:
 13339 ;;		_main
 13340 ;; This function uses a non-reentrant model
 13341 ;;
 13342                           
 13343                           
 13344                           ;psect for function _LED_task
 13345  08AA                     _LED_task:	
 13346                           
 13347                           ;led.c: 58:     switch(getMode()) {
 13348                           
 13349                           ;incstack = 0
 13350                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13351  08AA  2942               	goto	l12281
 13352  08AB                     l12245:	
 13353                           
 13354                           ;led.c: 60:             LED_task_DMX();
 13355  08AB  3194  2489         	fcall	_LED_task_DMX
 13356                           
 13357                           ;led.c: 61:             break;
 13358  08AD  0008               	return
 13359  08AE                     l12247:	
 13360                           
 13361                           ;led.c: 64:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13362  08AE  319B  238C  3188   	fcall	_getIsHold
 13363  08B1  3A00               	xorlw	0
 13364  08B2  1903               	skipnz
 13365  08B3  28C8               	goto	l12251
 13366  08B4  0141               	movlb	1	; select bank1
 13367  08B5  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13368  08B6  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13369  08B7  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13370  08B8  3000               	movlw	0
 13371  08B9  3196  269A  3188   	fcall	_beatColorCreator
 13372  08BC  0141               	movlb	1	; select bank1
 13373  08BD  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13374  08BE  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13375  08BF  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13376  08C0  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13377  08C1  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13378  08C2  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13379  08C3  0829               	movf	?_beatColorCreator^(0+128),w
 13380  08C4  00B6               	movwf	LED_setColor@input^(0+128)
 13381  08C5  3186  2610         	fcall	_LED_setColor
 13382  08C7  0008               	return
 13383  08C8                     l12251:	
 13384  08C8  318B  23D7         	fcall	_LED_task_BEAT_STROBE
 13385  08CA  0008               	return
 13386  08CB                     l12253:	
 13387                           
 13388                           ;led.c: 69:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13389  08CB  319B  238C  3188   	fcall	_getIsHold
 13390  08CE  3A00               	xorlw	0
 13391  08CF  1903               	skipnz
 13392  08D0  28E5               	goto	l12257
 13393  08D1  0141               	movlb	1	; select bank1
 13394  08D2  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13395  08D3  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13396  08D4  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13397  08D5  3000               	movlw	0
 13398  08D6  3196  269A  3188   	fcall	_beatColorCreator
 13399  08D9  0141               	movlb	1	; select bank1
 13400  08DA  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13401  08DB  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13402  08DC  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13403  08DD  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13404  08DE  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13405  08DF  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13406  08E0  0829               	movf	?_beatColorCreator^(0+128),w
 13407  08E1  00B6               	movwf	LED_setColor@input^(0+128)
 13408  08E2  3186  2610         	fcall	_LED_setColor
 13409  08E4  0008               	return
 13410  08E5                     l12257:	
 13411  08E5  3188  2000         	fcall	_LED_task_BEAT_FADE
 13412  08E7  0008               	return
 13413  08E8                     l12259:	
 13414                           
 13415                           ;led.c: 74:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13416  08E8  319B  238C  3188   	fcall	_getIsHold
 13417  08EB  3A00               	xorlw	0
 13418  08EC  1903               	skipnz
 13419  08ED  2902               	goto	l12263
 13420  08EE  0141               	movlb	1	; select bank1
 13421  08EF  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13422  08F0  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13423  08F1  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13424  08F2  3000               	movlw	0
 13425  08F3  3196  269A  3188   	fcall	_beatColorCreator
 13426  08F6  0141               	movlb	1	; select bank1
 13427  08F7  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13428  08F8  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13429  08F9  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13430  08FA  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13431  08FB  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13432  08FC  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13433  08FD  0829               	movf	?_beatColorCreator^(0+128),w
 13434  08FE  00B6               	movwf	LED_setColor@input^(0+128)
 13435  08FF  3186  2610         	fcall	_LED_setColor
 13436  0901  0008               	return
 13437  0902                     l12263:	
 13438  0902  3180  2003         	fcall	_LED_task_BEAT_CONTINUOUS
 13439  0904  0008               	return
 13440  0905                     l12265:	
 13441                           
 13442                           ;led.c: 79:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13443  0905  319B  238C  3188   	fcall	_getIsHold
 13444  0908  3A00               	xorlw	0
 13445  0909  1903               	skipnz
 13446  090A  291F               	goto	l12269
 13447  090B  0141               	movlb	1	; select bank1
 13448  090C  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13449  090D  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13450  090E  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13451  090F  3000               	movlw	0
 13452  0910  3196  269A  3188   	fcall	_beatColorCreator
 13453  0913  0141               	movlb	1	; select bank1
 13454  0914  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13455  0915  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13456  0916  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13457  0917  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13458  0918  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13459  0919  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13460  091A  0829               	movf	?_beatColorCreator^(0+128),w
 13461  091B  00B6               	movwf	LED_setColor@input^(0+128)
 13462  091C  3186  2610         	fcall	_LED_setColor
 13463  091E  0008               	return
 13464  091F                     l12269:	
 13465  091F  3188  2001         	fcall	_LED_task_BEAT_MIXED
 13466  0921  0008               	return
 13467  0922                     l12271:	
 13468                           
 13469                           ;led.c: 84:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13470  0922  319B  238C  3188   	fcall	_getIsHold
 13471  0925  3A00               	xorlw	0
 13472  0926  1903               	skipnz
 13473  0927  293C               	goto	l12275
 13474  0928  0141               	movlb	1	; select bank1
 13475  0929  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 13476  092A  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 13477  092B  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 13478  092C  3000               	movlw	0
 13479  092D  3196  269A  3188   	fcall	_beatColorCreator
 13480  0930  0141               	movlb	1	; select bank1
 13481  0931  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 13482  0932  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13483  0933  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 13484  0934  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13485  0935  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 13486  0936  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13487  0937  0829               	movf	?_beatColorCreator^(0+128),w
 13488  0938  00B6               	movwf	LED_setColor@input^(0+128)
 13489  0939  3186  2610         	fcall	_LED_setColor
 13490  093B  0008               	return
 13491  093C                     l12275:	
 13492  093C  3180  2002         	fcall	_LED_task_ANIMATION
 13493  093E  0008               	return
 13494  093F                     l12277:	
 13495                           
 13496                           ;led.c: 89:             LED_task_MANUAL();
 13497  093F  319C  245A         	fcall	_LED_task_MANUAL
 13498                           
 13499                           ;led.c: 90:             break;
 13500  0941  0008               	return
 13501  0942                     l12281:	
 13502  0942  319B  238F  3188   	fcall	_getMode
 13503  0945  0141               	movlb	1	; select bank1
 13504  0946  00C3               	movwf	??_LED_task^(0+128)
 13505  0947  01C4               	clrf	(??_LED_task^(0+128)+1)
 13506                           
 13507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13508                           ; Switch size 1, requested type "simple"
 13509                           ; Number of cases is 1, Range of values is 0 to 0
 13510                           ; switch strategies available:
 13511                           ; Name         Instructions Cycles
 13512                           ; simple_byte            4     3 (average)
 13513                           ; direct_byte            8     6 (fixed)
 13514                           ; jumptable            260     6 (fixed)
 13515                           ;	Chosen strategy is simple_byte
 13516  0948  0844               	movf	(??_LED_task+1)^(0+128),w
 13517  0949  3A00               	xorlw	0	; case 0
 13518  094A  1903               	skipnz
 13519  094B  294D               	goto	l12511
 13520  094C  2964               	goto	l1429
 13521  094D                     l12511:	
 13522                           
 13523                           ; Switch size 1, requested type "simple"
 13524                           ; Number of cases is 7, Range of values is 0 to 6
 13525                           ; switch strategies available:
 13526                           ; Name         Instructions Cycles
 13527                           ; direct_byte           20     6 (fixed)
 13528                           ; simple_byte           22    12 (average)
 13529                           ; jumptable            260     6 (fixed)
 13530                           ;	Chosen strategy is simple_byte
 13531  094D  0843               	movf	??_LED_task^(0+128),w
 13532  094E  3A00               	xorlw	0	; case 0
 13533  094F  1903               	skipnz
 13534  0950  28AB               	goto	l12245
 13535  0951  3A01               	xorlw	1	; case 1
 13536  0952  1903               	skipnz
 13537  0953  28AE               	goto	l12247
 13538  0954  3A03               	xorlw	3	; case 2
 13539  0955  1903               	skipnz
 13540  0956  2922               	goto	l12271
 13541  0957  3A01               	xorlw	1	; case 3
 13542  0958  1903               	skipnz
 13543  0959  293F               	goto	l12277
 13544  095A  3A07               	xorlw	7	; case 4
 13545  095B  1903               	skipnz
 13546  095C  28CB               	goto	l12253
 13547  095D  3A01               	xorlw	1	; case 5
 13548  095E  1903               	skipnz
 13549  095F  28E8               	goto	l12259
 13550  0960  3A03               	xorlw	3	; case 6
 13551  0961  1903               	skipnz
 13552  0962  2905               	goto	l12265
 13553  0963  2964               	goto	l1429
 13554  0964                     l1429:	
 13555  0964  0008               	return
 13556  0965                     __end_of_LED_task:	
 13557                           
 13558                           	psect	text20
 13559  1B8F                     __ptext20:	
 13560 ;; *************** function _getMode *****************
 13561 ;; Defined at:
 13562 ;;		line 291 in file "controller.c"
 13563 ;; Parameters:    Size  Location     Type
 13564 ;;		None
 13565 ;; Auto vars:     Size  Location     Type
 13566 ;;		None
 13567 ;; Return value:  Size  Location     Type
 13568 ;;                  1    wreg      enum E11209
 13569 ;; Registers used:
 13570 ;;		wreg
 13571 ;; Tracked objects:
 13572 ;;		On entry : 0/0
 13573 ;;		On exit  : 0/0
 13574 ;;		Unchanged: 0/0
 13575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13580 ;;Total ram usage:        0 bytes
 13581 ;; Hardware stack levels used:    1
 13582 ;; Hardware stack levels required when called:    4
 13583 ;; This function calls:
 13584 ;;		Nothing
 13585 ;; This function is called by:
 13586 ;;		_LED_task
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           
 13591                           ;psect for function _getMode
 13592  1B8F                     _getMode:	
 13593                           
 13594                           ;controller.c: 292:     return currentSelection;
 13595                           
 13596                           ;incstack = 0
 13597                           ; Regs used in _getMode: [wreg]
 13598  1B8F  0141               	movlb	1	; select bank1
 13599  1B90  0859               	movf	_currentSelection^(0+128),w
 13600  1B91  0008               	return
 13601  1B92                     __end_of_getMode:	
 13602                           
 13603                           	psect	text21
 13604  1B8C                     __ptext21:	
 13605 ;; *************** function _getIsHold *****************
 13606 ;; Defined at:
 13607 ;;		line 380 in file "controller.c"
 13608 ;; Parameters:    Size  Location     Type
 13609 ;;		None
 13610 ;; Auto vars:     Size  Location     Type
 13611 ;;		None
 13612 ;; Return value:  Size  Location     Type
 13613 ;;                  1    wreg      _Bool 
 13614 ;; Registers used:
 13615 ;;		wreg
 13616 ;; Tracked objects:
 13617 ;;		On entry : 0/0
 13618 ;;		On exit  : 0/0
 13619 ;;		Unchanged: 0/0
 13620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13625 ;;Total ram usage:        0 bytes
 13626 ;; Hardware stack levels used:    1
 13627 ;; Hardware stack levels required when called:    4
 13628 ;; This function calls:
 13629 ;;		Nothing
 13630 ;; This function is called by:
 13631 ;;		_LED_task
 13632 ;; This function uses a non-reentrant model
 13633 ;;
 13634                           
 13635                           
 13636                           ;psect for function _getIsHold
 13637  1B8C                     _getIsHold:	
 13638                           
 13639                           ;controller.c: 381:     return beatHold;
 13640                           
 13641                           ;incstack = 0
 13642                           ; Regs used in _getIsHold: [wreg]
 13643  1B8C  0141               	movlb	1	; select bank1
 13644  1B8D  0858               	movf	_beatHold^(0+128),w
 13645  1B8E  0008               	return
 13646  1B8F                     __end_of_getIsHold:	
 13647                           
 13648                           	psect	text22
 13649  1489                     __ptext22:	
 13650 ;; *************** function _LED_task_DMX *****************
 13651 ;; Defined at:
 13652 ;;		line 35 in file "led.c"
 13653 ;; Parameters:    Size  Location     Type
 13654 ;;		None
 13655 ;; Auto vars:     Size  Location     Type
 13656 ;;  dmx             4    0[BANK2 ] struct .
 13657 ;; Return value:  Size  Location     Type
 13658 ;;                  1    wreg      void 
 13659 ;; Registers used:
 13660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13661 ;; Tracked objects:
 13662 ;;		On entry : 0/0
 13663 ;;		On exit  : 0/0
 13664 ;;		Unchanged: 0/0
 13665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13667 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13668 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13669 ;;      Totals:         0       0       5       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13670 ;;Total ram usage:        9 bytes
 13671 ;; Hardware stack levels used:    1
 13672 ;; Hardware stack levels required when called:    7
 13673 ;; This function calls:
 13674 ;;		_DMX_getAddress
 13675 ;;		_LED_setColor
 13676 ;; This function is called by:
 13677 ;;		_LED_task
 13678 ;; This function uses a non-reentrant model
 13679 ;;
 13680                           
 13681                           
 13682                           ;psect for function _LED_task_DMX
 13683  1489                     _LED_task_DMX:	
 13684                           
 13685                           ;led.c: 37:     color_t dmx;;led.c: 39:     dmx.red = dmxArray[DMX_getAddress()];
 13686                           
 13687                           ;incstack = 0
 13688                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13689  1489  319B  2389  3194   	fcall	_DMX_getAddress
 13690  148C  0141               	movlb	1	; select bank1
 13691  148D  00BE               	movwf	??_LED_task_DMX^(0+128)
 13692  148E  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13693  148F  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13694  1490  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13695  1491  30EE               	movlw	238
 13696  1492  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13697  1493  3023               	movlw	35
 13698  1494  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13699  1495  083E               	movf	??_LED_task_DMX^(0+128),w
 13700  1496  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13701  1497  0086               	movwf	6
 13702  1498  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13703  1499  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13704  149A  0087               	movwf	7
 13705  149B  0801               	movf	1,w
 13706  149C  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13707  149D  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13708  149E  0142               	movlb	2	; select bank2
 13709  149F  00E6               	movwf	(LED_task_DMX@dmx^(0+256)+1)
 13710                           
 13711                           ;led.c: 40:     dmx.green = dmxArray[DMX_getAddress() + 1];
 13712  14A0  319B  2389  3194   	fcall	_DMX_getAddress
 13713  14A3  0141               	movlb	1	; select bank1
 13714  14A4  00BE               	movwf	??_LED_task_DMX^(0+128)
 13715  14A5  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13716  14A6  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13717  14A7  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13718  14A8  30F0               	movlw	240
 13719  14A9  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13720  14AA  3023               	movlw	35
 13721  14AB  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13722  14AC  083E               	movf	??_LED_task_DMX^(0+128),w
 13723  14AD  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13724  14AE  0086               	movwf	6
 13725  14AF  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13726  14B0  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13727  14B1  0087               	movwf	7
 13728  14B2  0801               	movf	1,w
 13729  14B3  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13730  14B4  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13731  14B5  0142               	movlb	2	; select bank2
 13732  14B6  00E7               	movwf	(LED_task_DMX@dmx^(0+256)+2)
 13733                           
 13734                           ;led.c: 41:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 13735  14B7  319B  2389  3194   	fcall	_DMX_getAddress
 13736  14BA  0141               	movlb	1	; select bank1
 13737  14BB  00BE               	movwf	??_LED_task_DMX^(0+128)
 13738  14BC  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13739  14BD  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13740  14BE  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13741  14BF  30F2               	movlw	242
 13742  14C0  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13743  14C1  3023               	movlw	35
 13744  14C2  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13745  14C3  083E               	movf	??_LED_task_DMX^(0+128),w
 13746  14C4  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13747  14C5  0086               	movwf	6
 13748  14C6  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13749  14C7  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13750  14C8  0087               	movwf	7
 13751  14C9  0801               	movf	1,w
 13752  14CA  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13753  14CB  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13754  14CC  0142               	movlb	2	; select bank2
 13755  14CD  00E8               	movwf	(LED_task_DMX@dmx^(0+256)+3)
 13756                           
 13757                           ;led.c: 42:     dmx.white = dmxArray[DMX_getAddress() + 3];
 13758  14CE  319B  2389  3194   	fcall	_DMX_getAddress
 13759  14D1  0141               	movlb	1	; select bank1
 13760  14D2  00BE               	movwf	??_LED_task_DMX^(0+128)
 13761  14D3  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 13762  14D4  35BE               	lslf	??_LED_task_DMX^(0+128),f
 13763  14D5  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13764  14D6  30F4               	movlw	244
 13765  14D7  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 13766  14D8  3023               	movlw	35
 13767  14D9  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13768  14DA  083E               	movf	??_LED_task_DMX^(0+128),w
 13769  14DB  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13770  14DC  0086               	movwf	6
 13771  14DD  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 13772  14DE  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13773  14DF  0087               	movwf	7
 13774  14E0  0801               	movf	1,w
 13775  14E1  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 13776  14E2  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 13777  14E3  0142               	movlb	2	; select bank2
 13778  14E4  00E5               	movwf	LED_task_DMX@dmx^(0+256)
 13779                           
 13780                           ;led.c: 44:     LED_setColor(dmx);
 13781  14E5  0868               	movf	(LED_task_DMX@dmx+3)^(0+256),w
 13782  14E6  0141               	movlb	1	; select bank1
 13783  14E7  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 13784  14E8  0142               	movlb	2	; select bank2
 13785  14E9  0867               	movf	(LED_task_DMX@dmx+2)^(0+256),w
 13786  14EA  0141               	movlb	1	; select bank1
 13787  14EB  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 13788  14EC  0142               	movlb	2	; select bank2
 13789  14ED  0866               	movf	(LED_task_DMX@dmx+1)^(0+256),w
 13790  14EE  0141               	movlb	1	; select bank1
 13791  14EF  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 13792  14F0  0142               	movlb	2	; select bank2
 13793  14F1  0865               	movf	LED_task_DMX@dmx^(0+256),w
 13794  14F2  0141               	movlb	1	; select bank1
 13795  14F3  00B6               	movwf	LED_setColor@input^(0+128)
 13796  14F4  3186  2610         	fcall	_LED_setColor
 13797  14F6  0008               	return
 13798  14F7                     __end_of_LED_task_DMX:	
 13799                           
 13800                           	psect	text23
 13801  0003                     __ptext23:	
 13802 ;; *************** function _LED_task_BEAT_CONTINUOUS *****************
 13803 ;; Defined at:
 13804 ;;		line 212 in file "led.c"
 13805 ;; Parameters:    Size  Location     Type
 13806 ;;		None
 13807 ;; Auto vars:     Size  Location     Type
 13808 ;;		None
 13809 ;; Return value:  Size  Location     Type
 13810 ;;                  1    wreg      void 
 13811 ;; Registers used:
 13812 ;;		None
 13813 ;; Tracked objects:
 13814 ;;		On entry : 0/0
 13815 ;;		On exit  : 0/0
 13816 ;;		Unchanged: 0/0
 13817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13822 ;;Total ram usage:        0 bytes
 13823 ;; Hardware stack levels used:    1
 13824 ;; Hardware stack levels required when called:    4
 13825 ;; This function calls:
 13826 ;;		Nothing
 13827 ;; This function is called by:
 13828 ;;		_LED_task
 13829 ;; This function uses a non-reentrant model
 13830 ;;
 13831                           
 13832                           
 13833                           ;psect for function _LED_task_BEAT_CONTINUOUS
 13834  0003                     _LED_task_BEAT_CONTINUOUS:	
 13835                           
 13836                           ;incstack = 0
 13837                           ; Regs used in _LED_task_BEAT_CONTINUOUS: []
 13838  0003  0008               	return
 13839  0004                     __end_of_LED_task_BEAT_CONTINUOUS:	
 13840                           
 13841                           	psect	text24
 13842  1BBB                     __ptext24:	
 13843 ;; *************** function _LED_init *****************
 13844 ;; Defined at:
 13845 ;;		line 48 in file "led.c"
 13846 ;; Parameters:    Size  Location     Type
 13847 ;;		None
 13848 ;; Auto vars:     Size  Location     Type
 13849 ;;		None
 13850 ;; Return value:  Size  Location     Type
 13851 ;;                  1    wreg      void 
 13852 ;; Registers used:
 13853 ;;		status,2
 13854 ;; Tracked objects:
 13855 ;;		On entry : 0/0
 13856 ;;		On exit  : 0/0
 13857 ;;		Unchanged: 0/0
 13858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13863 ;;Total ram usage:        0 bytes
 13864 ;; Hardware stack levels used:    1
 13865 ;; Hardware stack levels required when called:    4
 13866 ;; This function calls:
 13867 ;;		Nothing
 13868 ;; This function is called by:
 13869 ;;		_main
 13870 ;; This function uses a non-reentrant model
 13871 ;;
 13872                           
 13873                           
 13874                           ;psect for function _LED_init
 13875  1BBB                     _LED_init:	
 13876                           
 13877                           ;led.c: 49:     manualColor.red = 0;
 13878                           
 13879                           ;incstack = 0
 13880                           ; Regs used in _LED_init: [status,2]
 13881  1BBB  0141               	movlb	1	; select bank1
 13882  1BBC  01CB               	clrf	(_manualColor^(0+128)+1)
 13883                           
 13884                           ;led.c: 50:     manualColor.green = 0;
 13885  1BBD  01CC               	clrf	(_manualColor^(0+128)+2)
 13886                           
 13887                           ;led.c: 51:     manualColor.blue = 0;
 13888  1BBE  01CD               	clrf	(_manualColor^(0+128)+3)
 13889                           
 13890                           ;led.c: 52:     manualColor.white = 0;
 13891  1BBF  01CA               	clrf	_manualColor^(0+128)
 13892                           
 13893                           ;led.c: 53:     TRISCbits.TRISC5 = 0;
 13894  1BC0  0140               	movlb	0	; select bank0
 13895  1BC1  1294               	bcf	20,5	;volatile
 13896  1BC2  0008               	return
 13897  1BC3                     __end_of_LED_init:	
 13898                           
 13899                           	psect	text25
 13900  1CF8                     __ptext25:	
 13901 ;; *************** function _DMX_init *****************
 13902 ;; Defined at:
 13903 ;;		line 21 in file "dmx.c"
 13904 ;; Parameters:    Size  Location     Type
 13905 ;;		None
 13906 ;; Auto vars:     Size  Location     Type
 13907 ;;		None
 13908 ;; Return value:  Size  Location     Type
 13909 ;;                  1    wreg      void 
 13910 ;; Registers used:
 13911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13912 ;; Tracked objects:
 13913 ;;		On entry : 0/0
 13914 ;;		On exit  : 0/0
 13915 ;;		Unchanged: 0/0
 13916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13921 ;;Total ram usage:        0 bytes
 13922 ;; Hardware stack levels used:    1
 13923 ;; Hardware stack levels required when called:    9
 13924 ;; This function calls:
 13925 ;;		_EUSART1_SetRxInterruptHandler
 13926 ;;		_TM1650_fastPrintNum
 13927 ;; This function is called by:
 13928 ;;		_main
 13929 ;; This function uses a non-reentrant model
 13930 ;;
 13931                           
 13932                           
 13933                           ;psect for function _DMX_init
 13934  1CF8                     _DMX_init:	
 13935                           
 13936                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 13937                           
 13938                           ;incstack = 0
 13939                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13940  1CF8  303A               	movlw	low _DMX_interrupt
 13941  1CF9  0140               	movlb	0	; select bank0
 13942  1CFA  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13943  1CFB  3010               	movlw	high _DMX_interrupt
 13944  1CFC  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13945  1CFD  319C  2401  319C   	fcall	_EUSART1_SetRxInterruptHandler
 13946                           
 13947                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 13948  1D00  0141               	movlb	1	; select bank1
 13949  1D01  086B               	movf	(_address+1)^(0+128),w
 13950  1D02  0140               	movlb	0	; select bank0
 13951  1D03  00B7               	movwf	TM1650_fastPrintNum@num+1
 13952  1D04  0141               	movlb	1	; select bank1
 13953  1D05  086A               	movf	_address^(0+128),w
 13954  1D06  0140               	movlb	0	; select bank0
 13955  1D07  00B6               	movwf	TM1650_fastPrintNum@num
 13956  1D08  3189  2165         	fcall	_TM1650_fastPrintNum
 13957  1D0A  0008               	return
 13958  1D0B                     __end_of_DMX_init:	
 13959                           
 13960                           	psect	text26
 13961  0965                     __ptext26:	
 13962 ;; *************** function _TM1650_fastPrintNum *****************
 13963 ;; Defined at:
 13964 ;;		line 101 in file "tm1650.c"
 13965 ;; Parameters:    Size  Location     Type
 13966 ;;  num             2   22[BANK0 ] unsigned short 
 13967 ;; Auto vars:     Size  Location     Type
 13968 ;;		None
 13969 ;; Return value:  Size  Location     Type
 13970 ;;                  1    wreg      void 
 13971 ;; Registers used:
 13972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13973 ;; Tracked objects:
 13974 ;;		On entry : 0/0
 13975 ;;		On exit  : 0/0
 13976 ;;		Unchanged: 0/0
 13977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13981 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13982 ;;Total ram usage:        3 bytes
 13983 ;; Hardware stack levels used:    1
 13984 ;; Hardware stack levels required when called:    8
 13985 ;; This function calls:
 13986 ;;		___lwdiv
 13987 ;;		___lwmod
 13988 ;;		_writeData
 13989 ;; This function is called by:
 13990 ;;		_DMX_init
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           
 13995                           ;psect for function _TM1650_fastPrintNum
 13996  0965                     _TM1650_fastPrintNum:	
 13997                           
 13998                           ;tm1650.c: 103:     if(num > 9999){
 13999                           
 14000                           ;incstack = 0
 14001                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14002  0965  3027               	movlw	39
 14003  0966  0140               	movlb	0	; select bank0
 14004  0967  0237               	subwf	TM1650_fastPrintNum@num+1,w
 14005  0968  3010               	movlw	16
 14006  0969  1903               	skipnz
 14007  096A  0236               	subwf	TM1650_fastPrintNum@num,w
 14008  096B  1C03               	skipc
 14009  096C  2990               	goto	l10569
 14010                           
 14011                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 14012  096D  3079               	movlw	121
 14013  096E  00B8               	movwf	??_TM1650_fastPrintNum
 14014  096F  0838               	movf	??_TM1650_fastPrintNum,w
 14015  0970  00B0               	movwf	writeData@data
 14016  0971  3034               	movlw	52
 14017  0972  319D  25EE  3189   	fcall	_writeData
 14018                           
 14019                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 14020  0975  3079               	movlw	121
 14021  0976  0140               	movlb	0	; select bank0
 14022  0977  00B8               	movwf	??_TM1650_fastPrintNum
 14023  0978  0838               	movf	??_TM1650_fastPrintNum,w
 14024  0979  00B0               	movwf	writeData@data
 14025  097A  3035               	movlw	53
 14026  097B  319D  25EE  3189   	fcall	_writeData
 14027                           
 14028                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 14029  097E  3079               	movlw	121
 14030  097F  0140               	movlb	0	; select bank0
 14031  0980  00B8               	movwf	??_TM1650_fastPrintNum
 14032  0981  0838               	movf	??_TM1650_fastPrintNum,w
 14033  0982  00B0               	movwf	writeData@data
 14034  0983  3036               	movlw	54
 14035  0984  319D  25EE  3189   	fcall	_writeData
 14036                           
 14037                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 14038  0987  3079               	movlw	121
 14039  0988  0140               	movlb	0	; select bank0
 14040  0989  00B8               	movwf	??_TM1650_fastPrintNum
 14041  098A  0838               	movf	??_TM1650_fastPrintNum,w
 14042  098B  00B0               	movwf	writeData@data
 14043  098C  3037               	movlw	55
 14044  098D  319D  25EE         	fcall	_writeData
 14045  098F  0008               	return
 14046  0990                     l10569:	
 14047                           
 14048                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 14049  0990  300A               	movlw	10
 14050  0991  00A8               	movwf	___lwmod@divisor
 14051  0992  3000               	movlw	0
 14052  0993  00A9               	movwf	___lwmod@divisor+1
 14053  0994  0837               	movf	TM1650_fastPrintNum@num+1,w
 14054  0995  00AB               	movwf	___lwmod@dividend+1
 14055  0996  0836               	movf	TM1650_fastPrintNum@num,w
 14056  0997  00AA               	movwf	___lwmod@dividend
 14057  0998  319F  27A4  3189   	fcall	___lwmod
 14058  099B  0140               	movlb	0	; select bank0
 14059  099C  0829               	movf	?___lwmod+1,w
 14060  099D  0085               	movwf	5
 14061  099E  0828               	movf	?___lwmod,w
 14062  099F  0084               	movwf	4
 14063  09A0  3010               	movlw	low ((_charTable+16)| (0+32768))
 14064  09A1  0784               	addwf	4,f
 14065  09A2  3098               	movlw	high ((_charTable+16)| (0+32768))
 14066  09A3  3D85               	addwfc	5,f
 14067  09A4  0800               	movf	0,w	;code access
 14068  09A5  00B8               	movwf	??_TM1650_fastPrintNum
 14069  09A6  0838               	movf	??_TM1650_fastPrintNum,w
 14070  09A7  00B0               	movwf	writeData@data
 14071  09A8  3037               	movlw	55
 14072  09A9  319D  25EE  3189   	fcall	_writeData
 14073                           
 14074                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 14075  09AC  300A               	movlw	10
 14076  09AD  0140               	movlb	0	; select bank0
 14077  09AE  00A8               	movwf	___lwmod@divisor
 14078  09AF  3000               	movlw	0
 14079  09B0  00A9               	movwf	___lwmod@divisor+1
 14080  09B1  300A               	movlw	10
 14081  09B2  00A0               	movwf	___lwdiv@divisor
 14082  09B3  3000               	movlw	0
 14083  09B4  00A1               	movwf	___lwdiv@divisor+1
 14084  09B5  0837               	movf	TM1650_fastPrintNum@num+1,w
 14085  09B6  00A3               	movwf	___lwdiv@dividend+1
 14086  09B7  0836               	movf	TM1650_fastPrintNum@num,w
 14087  09B8  00A2               	movwf	___lwdiv@dividend
 14088  09B9  3190  20D2  3189   	fcall	___lwdiv
 14089  09BC  0140               	movlb	0	; select bank0
 14090  09BD  0821               	movf	?___lwdiv+1,w
 14091  09BE  00AB               	movwf	___lwmod@dividend+1
 14092  09BF  0820               	movf	?___lwdiv,w
 14093  09C0  00AA               	movwf	___lwmod@dividend
 14094  09C1  319F  27A4  3189   	fcall	___lwmod
 14095  09C4  0140               	movlb	0	; select bank0
 14096  09C5  0829               	movf	?___lwmod+1,w
 14097  09C6  0085               	movwf	5
 14098  09C7  0828               	movf	?___lwmod,w
 14099  09C8  0084               	movwf	4
 14100  09C9  3010               	movlw	low ((_charTable+16)| (0+32768))
 14101  09CA  0784               	addwf	4,f
 14102  09CB  3098               	movlw	high ((_charTable+16)| (0+32768))
 14103  09CC  3D85               	addwfc	5,f
 14104  09CD  0800               	movf	0,w	;code access
 14105  09CE  00B8               	movwf	??_TM1650_fastPrintNum
 14106  09CF  0838               	movf	??_TM1650_fastPrintNum,w
 14107  09D0  00B0               	movwf	writeData@data
 14108  09D1  3036               	movlw	54
 14109  09D2  319D  25EE  3189   	fcall	_writeData
 14110                           
 14111                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 14112  09D5  300A               	movlw	10
 14113  09D6  0140               	movlb	0	; select bank0
 14114  09D7  00A8               	movwf	___lwmod@divisor
 14115  09D8  3000               	movlw	0
 14116  09D9  00A9               	movwf	___lwmod@divisor+1
 14117  09DA  3064               	movlw	100
 14118  09DB  00A0               	movwf	___lwdiv@divisor
 14119  09DC  3000               	movlw	0
 14120  09DD  00A1               	movwf	___lwdiv@divisor+1
 14121  09DE  0837               	movf	TM1650_fastPrintNum@num+1,w
 14122  09DF  00A3               	movwf	___lwdiv@dividend+1
 14123  09E0  0836               	movf	TM1650_fastPrintNum@num,w
 14124  09E1  00A2               	movwf	___lwdiv@dividend
 14125  09E2  3190  20D2  3189   	fcall	___lwdiv
 14126  09E5  0140               	movlb	0	; select bank0
 14127  09E6  0821               	movf	?___lwdiv+1,w
 14128  09E7  00AB               	movwf	___lwmod@dividend+1
 14129  09E8  0820               	movf	?___lwdiv,w
 14130  09E9  00AA               	movwf	___lwmod@dividend
 14131  09EA  319F  27A4  3189   	fcall	___lwmod
 14132  09ED  0140               	movlb	0	; select bank0
 14133  09EE  0829               	movf	?___lwmod+1,w
 14134  09EF  0085               	movwf	5
 14135  09F0  0828               	movf	?___lwmod,w
 14136  09F1  0084               	movwf	4
 14137  09F2  3010               	movlw	low ((_charTable+16)| (0+32768))
 14138  09F3  0784               	addwf	4,f
 14139  09F4  3098               	movlw	high ((_charTable+16)| (0+32768))
 14140  09F5  3D85               	addwfc	5,f
 14141  09F6  0800               	movf	0,w	;code access
 14142  09F7  00B8               	movwf	??_TM1650_fastPrintNum
 14143  09F8  0838               	movf	??_TM1650_fastPrintNum,w
 14144  09F9  00B0               	movwf	writeData@data
 14145  09FA  3035               	movlw	53
 14146  09FB  319D  25EE  3189   	fcall	_writeData
 14147                           
 14148                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 14149  09FE  300A               	movlw	10
 14150  09FF  0140               	movlb	0	; select bank0
 14151  0A00  00A8               	movwf	___lwmod@divisor
 14152  0A01  3000               	movlw	0
 14153  0A02  00A9               	movwf	___lwmod@divisor+1
 14154  0A03  30E8               	movlw	232
 14155  0A04  00A0               	movwf	___lwdiv@divisor
 14156  0A05  3003               	movlw	3
 14157  0A06  00A1               	movwf	___lwdiv@divisor+1
 14158  0A07  0837               	movf	TM1650_fastPrintNum@num+1,w
 14159  0A08  00A3               	movwf	___lwdiv@dividend+1
 14160  0A09  0836               	movf	TM1650_fastPrintNum@num,w
 14161  0A0A  00A2               	movwf	___lwdiv@dividend
 14162  0A0B  3190  20D2  3189   	fcall	___lwdiv
 14163  0A0E  0140               	movlb	0	; select bank0
 14164  0A0F  0821               	movf	?___lwdiv+1,w
 14165  0A10  00AB               	movwf	___lwmod@dividend+1
 14166  0A11  0820               	movf	?___lwdiv,w
 14167  0A12  00AA               	movwf	___lwmod@dividend
 14168  0A13  319F  27A4  3189   	fcall	___lwmod
 14169  0A16  0140               	movlb	0	; select bank0
 14170  0A17  0829               	movf	?___lwmod+1,w
 14171  0A18  0085               	movwf	5
 14172  0A19  0828               	movf	?___lwmod,w
 14173  0A1A  0084               	movwf	4
 14174  0A1B  3010               	movlw	low ((_charTable+16)| (0+32768))
 14175  0A1C  0784               	addwf	4,f
 14176  0A1D  3098               	movlw	high ((_charTable+16)| (0+32768))
 14177  0A1E  3D85               	addwfc	5,f
 14178  0A1F  0800               	movf	0,w	;code access
 14179  0A20  00B8               	movwf	??_TM1650_fastPrintNum
 14180  0A21  0838               	movf	??_TM1650_fastPrintNum,w
 14181  0A22  00B0               	movwf	writeData@data
 14182  0A23  3034               	movlw	52
 14183  0A24  319D  25EE         	fcall	_writeData
 14184  0A26  0008               	return
 14185  0A27                     __end_of_TM1650_fastPrintNum:	
 14186                           
 14187                           	psect	text27
 14188  1C01                     __ptext27:	
 14189 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 14190 ;; Defined at:
 14191 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 14192 ;; Parameters:    Size  Location     Type
 14193 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 14194 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 14195 ;; Auto vars:     Size  Location     Type
 14196 ;;		None
 14197 ;; Return value:  Size  Location     Type
 14198 ;;                  1    wreg      void 
 14199 ;; Registers used:
 14200 ;;		wreg
 14201 ;; Tracked objects:
 14202 ;;		On entry : 0/0
 14203 ;;		On exit  : 0/0
 14204 ;;		Unchanged: 0/0
 14205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14209 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14210 ;;Total ram usage:        2 bytes
 14211 ;; Hardware stack levels used:    1
 14212 ;; Hardware stack levels required when called:    4
 14213 ;; This function calls:
 14214 ;;		Nothing
 14215 ;; This function is called by:
 14216 ;;		_EUSART1_Initialize
 14217 ;;		_DMX_init
 14218 ;; This function uses a non-reentrant model
 14219 ;;
 14220                           
 14221                           
 14222                           ;psect for function _EUSART1_SetRxInterruptHandler
 14223  1C01                     _EUSART1_SetRxInterruptHandler:	
 14224                           
 14225                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 14226                           
 14227                           ;incstack = 0
 14228                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 14229  1C01  0140               	movlb	0	; select bank0
 14230  1C02  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 14231  1C03  0143               	movlb	3	; select bank3
 14232  1C04  00EB               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
 14233  1C05  0140               	movlb	0	; select bank0
 14234  1C06  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 14235  1C07  0143               	movlb	3	; select bank3
 14236  1C08  00EA               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
 14237  1C09  0008               	return
 14238  1C0A                     __end_of_EUSART1_SetRxInterruptHandler:	
 14239                           
 14240                           	psect	text28
 14241  0AF9                     __ptext28:	
 14242 ;; *************** function _CONTROLLER_task *****************
 14243 ;; Defined at:
 14244 ;;		line 228 in file "controller.c"
 14245 ;; Parameters:    Size  Location     Type
 14246 ;;		None
 14247 ;; Auto vars:     Size  Location     Type
 14248 ;;		None
 14249 ;; Return value:  Size  Location     Type
 14250 ;;                  1    wreg      void 
 14251 ;; Registers used:
 14252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14253 ;; Tracked objects:
 14254 ;;		On entry : 0/0
 14255 ;;		On exit  : 0/0
 14256 ;;		Unchanged: 0/0
 14257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14260 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14261 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14262 ;;Total ram usage:        2 bytes
 14263 ;; Hardware stack levels used:    1
 14264 ;; Hardware stack levels required when called:   18
 14265 ;; This function calls:
 14266 ;;		_BUTTONS_isClicked
 14267 ;;		_CONTROL_BEAT
 14268 ;;		_CONTROL_DMX
 14269 ;;		_CONTROL_MANUAL
 14270 ;;		_LED_task_ANIMATION
 14271 ;;		_printf
 14272 ;; This function is called by:
 14273 ;;		_main
 14274 ;; This function uses a non-reentrant model
 14275 ;;
 14276                           
 14277                           
 14278                           ;psect for function _CONTROLLER_task
 14279  0AF9                     _CONTROLLER_task:	
 14280                           
 14281                           ;controller.c: 230:     if(startup == 1){
 14282                           
 14283                           ;incstack = 0
 14284 ;; hardware stack exceeded
 14285                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14286  0AF9  0141               	movlb	1	; select bank1
 14287  0AFA  036E               	decf	_startup^(0+128),w
 14288  0AFB  1D03               	btfss	3,2
 14289  0AFC  2B02               	goto	l12185
 14290                           
 14291                           ;controller.c: 231:         currentMenu = &dmx;
 14292  0AFD  30DA               	movlw	low _dmx
 14293  0AFE  00D2               	movwf	_currentMenu^(0+128)
 14294  0AFF  3001               	movlw	high _dmx
 14295  0B00  00D3               	movwf	(_currentMenu+1)^(0+128)
 14296                           
 14297                           ;controller.c: 232:         startup = 0;
 14298  0B01  01EE               	clrf	_startup^(0+128)
 14299  0B02                     l12185:	
 14300                           
 14301                           ;controller.c: 235:     upState = BUTTONS_isClicked(up);
 14302  0B02  0860               	movf	_up^(0+128),w
 14303  0B03  319D  250B  318A   	fcall	_BUTTONS_isClicked
 14304  0B06  0141               	movlb	1	; select bank1
 14305  0B07  00C2               	movwf	??_CONTROLLER_task^(0+128)
 14306  0B08  0842               	movf	??_CONTROLLER_task^(0+128),w
 14307  0B09  00DD               	movwf	_upState^(0+128)
 14308                           
 14309                           ;controller.c: 236:     downState = BUTTONS_isClicked(down);
 14310  0B0A  085F               	movf	_down^(0+128),w
 14311  0B0B  319D  250B  318A   	fcall	_BUTTONS_isClicked
 14312  0B0E  0141               	movlb	1	; select bank1
 14313  0B0F  00C2               	movwf	??_CONTROLLER_task^(0+128)
 14314  0B10  0842               	movf	??_CONTROLLER_task^(0+128),w
 14315  0B11  00DC               	movwf	_downState^(0+128)
 14316                           
 14317                           ;controller.c: 237:     menuState = BUTTONS_isClicked(menu);
 14318  0B12  0861               	movf	_menu^(0+128),w
 14319  0B13  319D  250B  318A   	fcall	_BUTTONS_isClicked
 14320  0B16  0141               	movlb	1	; select bank1
 14321  0B17  00C2               	movwf	??_CONTROLLER_task^(0+128)
 14322  0B18  0842               	movf	??_CONTROLLER_task^(0+128),w
 14323  0B19  00DB               	movwf	_menuState^(0+128)
 14324                           
 14325                           ;controller.c: 238:     enterState = BUTTONS_isClicked(enter);
 14326  0B1A  085E               	movf	_enter^(0+128),w
 14327  0B1B  319D  250B  318A   	fcall	_BUTTONS_isClicked
 14328  0B1E  0141               	movlb	1	; select bank1
 14329  0B1F  00C2               	movwf	??_CONTROLLER_task^(0+128)
 14330  0B20  0842               	movf	??_CONTROLLER_task^(0+128),w
 14331  0B21  00DA               	movwf	_enterState^(0+128)
 14332                           
 14333                           ;controller.c: 240:     if(menuState){
 14334  0B22  085B               	movf	_menuState^(0+128),w
 14335  0B23  1903               	btfsc	3,2
 14336  0B24  2B2E               	goto	l12197
 14337                           
 14338                           ;controller.c: 241:         currentMenu = currentMenu->parent;
 14339  0B25  0852               	movf	_currentMenu^(0+128),w
 14340  0B26  0086               	movwf	6
 14341  0B27  0853               	movf	(_currentMenu+1)^(0+128),w
 14342  0B28  0087               	movwf	7
 14343  0B29  3146               	addfsr 1,6
 14344  0B2A  0801               	movf	1,w
 14345  0B2B  00D2               	movwf	_currentMenu^(0+128)
 14346  0B2C  3001               	movlw	1
 14347  0B2D  2B6A               	goto	L3
 14348  0B2E                     l12197:	
 14349                           ;controller.c: 242:     } else if(upState && currentMenu->nextItem != ((void*)0)){
 14350                           
 14351  0B2E  085D               	movf	_upState^(0+128),w
 14352  0B2F  1903               	btfsc	3,2
 14353  0B30  2B41               	goto	l12203
 14354  0B31  0852               	movf	_currentMenu^(0+128),w
 14355  0B32  0086               	movwf	6
 14356  0B33  0853               	movf	(_currentMenu+1)^(0+128),w
 14357  0B34  0087               	movwf	7
 14358  0B35  0016               	moviw fsr1++
 14359  0B36  0401               	iorwf	1,w
 14360  0B37  1903               	btfsc	3,2
 14361  0B38  2B41               	goto	l12203
 14362                           
 14363                           ;controller.c: 243:         currentMenu = currentMenu->nextItem;
 14364  0B39  0852               	movf	_currentMenu^(0+128),w
 14365  0B3A  0086               	movwf	6
 14366  0B3B  0853               	movf	(_currentMenu+1)^(0+128),w
 14367  0B3C  0087               	movwf	7
 14368  0B3D  3F40               	moviw [0]fsr1
 14369  0B3E  00D2               	movwf	_currentMenu^(0+128)
 14370  0B3F  3F41               	moviw [1]fsr1
 14371  0B40  2B6A               	goto	L3
 14372  0B41                     l12203:	
 14373                           ;controller.c: 244:     } else if(downState && currentMenu->prevItem != ((void*)0)){
 14374                           
 14375  0B41  085C               	movf	_downState^(0+128),w
 14376  0B42  1903               	btfsc	3,2
 14377  0B43  2B56               	goto	l12209
 14378  0B44  0852               	movf	_currentMenu^(0+128),w
 14379  0B45  0086               	movwf	6
 14380  0B46  0853               	movf	(_currentMenu+1)^(0+128),w
 14381  0B47  0087               	movwf	7
 14382  0B48  3142               	addfsr 1,2
 14383  0B49  0016               	moviw fsr1++
 14384  0B4A  0401               	iorwf	1,w
 14385  0B4B  1903               	btfsc	3,2
 14386  0B4C  2B56               	goto	l12209
 14387                           
 14388                           ;controller.c: 245:         currentMenu = currentMenu->prevItem;
 14389  0B4D  0852               	movf	_currentMenu^(0+128),w
 14390  0B4E  0086               	movwf	6
 14391  0B4F  0853               	movf	(_currentMenu+1)^(0+128),w
 14392  0B50  0087               	movwf	7
 14393  0B51  3142               	addfsr 1,2
 14394  0B52  3F40               	moviw [0]fsr1
 14395  0B53  00D2               	movwf	_currentMenu^(0+128)
 14396  0B54  3F41               	moviw [1]fsr1
 14397  0B55  2B6A               	goto	L3
 14398  0B56                     l12209:	
 14399                           ;controller.c: 246:     } else if(enterState && currentMenu->config != ((void*)0)){
 14400                           
 14401  0B56  085A               	movf	_enterState^(0+128),w
 14402  0B57  1903               	btfsc	3,2
 14403  0B58  2BAF               	goto	l12235
 14404  0B59  0852               	movf	_currentMenu^(0+128),w
 14405  0B5A  0086               	movwf	6
 14406  0B5B  0853               	movf	(_currentMenu+1)^(0+128),w
 14407  0B5C  0087               	movwf	7
 14408  0B5D  3144               	addfsr 1,4
 14409  0B5E  0016               	moviw fsr1++
 14410  0B5F  0401               	iorwf	1,w
 14411  0B60  1903               	btfsc	3,2
 14412  0B61  2BAF               	goto	l12235
 14413                           
 14414                           ;controller.c: 247:         currentMenu = currentMenu->config;
 14415  0B62  0852               	movf	_currentMenu^(0+128),w
 14416  0B63  0086               	movwf	6
 14417  0B64  0853               	movf	(_currentMenu+1)^(0+128),w
 14418  0B65  0087               	movwf	7
 14419  0B66  3144               	addfsr 1,4
 14420  0B67  3F40               	moviw [0]fsr1
 14421  0B68  00D2               	movwf	_currentMenu^(0+128)
 14422  0B69  3F41               	moviw [1]fsr1
 14423  0B6A                     L3:	
 14424  0B6A  00D3               	movwf	(_currentMenu+1)^(0+128)
 14425                           
 14426                           ;controller.c: 250:     switch(currentMenu->name){
 14427  0B6B  2BAF               	goto	l12235
 14428  0B6C                     l12215:	
 14429                           
 14430                           ;controller.c: 252:             printf("PC  \r");
 14431  0B6C  3055               	movlw	low (STR_1| (0+32768))
 14432  0B6D  00A0               	movwf	printf@fmt^(0+128)
 14433  0B6E  30A0               	movlw	high (STR_1| (0+32768))
 14434  0B6F  00A1               	movwf	(printf@fmt^(0+128)+1)
 14435  0B70  319D  2547         	fcall	_printf
 14436                           
 14437                           ;controller.c: 253:             break;
 14438  0B72  0008               	return
 14439  0B73                     l12217:	
 14440                           
 14441                           ;controller.c: 256:             printf("BEAT\r");
 14442  0B73  3073               	movlw	low (STR_2| (0+32768))
 14443  0B74  00A0               	movwf	printf@fmt^(0+128)
 14444  0B75  30A0               	movlw	high (STR_2| (0+32768))
 14445  0B76  00A1               	movwf	(printf@fmt^(0+128)+1)
 14446  0B77  319D  2547         	fcall	_printf
 14447                           
 14448                           ;controller.c: 257:             break;
 14449  0B79  0008               	return
 14450  0B7A                     l12219:	
 14451                           
 14452                           ;controller.c: 260:             printf("ANI \r");
 14453  0B7A  3061               	movlw	low (STR_3| (0+32768))
 14454  0B7B  00A0               	movwf	printf@fmt^(0+128)
 14455  0B7C  30A0               	movlw	high (STR_3| (0+32768))
 14456  0B7D  00A1               	movwf	(printf@fmt^(0+128)+1)
 14457  0B7E  319D  2547         	fcall	_printf
 14458                           
 14459                           ;controller.c: 261:             break;
 14460  0B80  0008               	return
 14461  0B81                     l12221:	
 14462                           
 14463                           ;controller.c: 264:             printf("LED \r");
 14464  0B81  305B               	movlw	low (STR_4| (0+32768))
 14465  0B82  00A0               	movwf	printf@fmt^(0+128)
 14466  0B83  30A0               	movlw	high (STR_4| (0+32768))
 14467  0B84  00A1               	movwf	(printf@fmt^(0+128)+1)
 14468  0B85  319D  2547         	fcall	_printf
 14469                           
 14470                           ;controller.c: 265:             break;
 14471  0B87  0008               	return
 14472  0B88                     l12223:	
 14473                           
 14474                           ;controller.c: 268:             printf("B   \r");
 14475  0B88  3049               	movlw	low (STR_5| (0+32768))
 14476  0B89  00A0               	movwf	printf@fmt^(0+128)
 14477  0B8A  30A0               	movlw	high (STR_5| (0+32768))
 14478  0B8B  00A1               	movwf	(printf@fmt^(0+128)+1)
 14479  0B8C  319D  2547         	fcall	_printf
 14480                           
 14481                           ;controller.c: 269:             break;
 14482  0B8E  0008               	return
 14483  0B8F                     l12225:	
 14484                           
 14485                           ;controller.c: 272:             printf("FADE\r");
 14486  0B8F  306D               	movlw	low (STR_6| (0+32768))
 14487  0B90  00A0               	movwf	printf@fmt^(0+128)
 14488  0B91  30A0               	movlw	high (STR_6| (0+32768))
 14489  0B92  00A1               	movwf	(printf@fmt^(0+128)+1)
 14490  0B93  319D  2547         	fcall	_printf
 14491                           
 14492                           ;controller.c: 273:             break;
 14493  0B95  0008               	return
 14494  0B96                     l12227:	
 14495                           
 14496                           ;controller.c: 276:             printf("C   \r");
 14497  0B96  304F               	movlw	low (STR_7| (0+32768))
 14498  0B97  00A0               	movwf	printf@fmt^(0+128)
 14499  0B98  30A0               	movlw	high (STR_7| (0+32768))
 14500  0B99  00A1               	movwf	(printf@fmt^(0+128)+1)
 14501  0B9A  319D  2547         	fcall	_printf
 14502                           
 14503                           ;controller.c: 277:             break;
 14504  0B9C  0008               	return
 14505  0B9D                     l12229:	
 14506                           
 14507                           ;controller.c: 280:             printf("ALL \r");
 14508  0B9D  3067               	movlw	low (STR_8| (0+32768))
 14509  0B9E  00A0               	movwf	printf@fmt^(0+128)
 14510  0B9F  30A0               	movlw	high (STR_8| (0+32768))
 14511  0BA0  00A1               	movwf	(printf@fmt^(0+128)+1)
 14512  0BA1  319D  2547         	fcall	_printf
 14513                           
 14514                           ;controller.c: 281:             break;
 14515  0BA3  0008               	return
 14516  0BA4                     l12231:	
 14517                           
 14518                           ;controller.c: 284:             currentMenu->task();
 14519  0BA4  0852               	movf	_currentMenu^(0+128),w
 14520  0BA5  0086               	movwf	6
 14521  0BA6  0853               	movf	(_currentMenu+1)^(0+128),w
 14522  0BA7  0087               	movwf	7
 14523  0BA8  3148               	addfsr 1,8
 14524  0BA9  3F41               	moviw [1]fsr1
 14525  0BAA  008A               	movwf	10
 14526  0BAB  3F40               	moviw [0]fsr1
 14527  0BAC  000A               	callw
 14528  0BAD  318A               	pagesel	$
 14529                           
 14530                           ;controller.c: 285:             break;
 14531  0BAE  0008               	return
 14532  0BAF                     l12235:	
 14533  0BAF  0852               	movf	_currentMenu^(0+128),w
 14534  0BB0  0086               	movwf	6
 14535  0BB1  0853               	movf	(_currentMenu+1)^(0+128),w
 14536  0BB2  0087               	movwf	7
 14537  0BB3  3147               	addfsr 1,7
 14538  0BB4  0801               	movf	1,w
 14539  0BB5  00C2               	movwf	??_CONTROLLER_task^(0+128)
 14540  0BB6  01C3               	clrf	(??_CONTROLLER_task^(0+128)+1)
 14541                           
 14542                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14543                           ; Switch size 1, requested type "simple"
 14544                           ; Number of cases is 1, Range of values is 0 to 0
 14545                           ; switch strategies available:
 14546                           ; Name         Instructions Cycles
 14547                           ; simple_byte            4     3 (average)
 14548                           ; direct_byte            8     6 (fixed)
 14549                           ; jumptable            260     6 (fixed)
 14550                           ;	Chosen strategy is simple_byte
 14551  0BB7  0843               	movf	(??_CONTROLLER_task+1)^(0+128),w
 14552  0BB8  3A00               	xorlw	0	; case 0
 14553  0BB9  1903               	skipnz
 14554  0BBA  2BBC               	goto	l12513
 14555  0BBB  2BA4               	goto	l12231
 14556  0BBC                     l12513:	
 14557                           
 14558                           ; Switch size 1, requested type "simple"
 14559                           ; Number of cases is 8, Range of values is 0 to 8
 14560                           ; switch strategies available:
 14561                           ; Name         Instructions Cycles
 14562                           ; direct_byte           24     6 (fixed)
 14563                           ; simple_byte           25    13 (average)
 14564                           ; jumptable            260     6 (fixed)
 14565                           ;	Chosen strategy is simple_byte
 14566  0BBC  0842               	movf	??_CONTROLLER_task^(0+128),w
 14567  0BBD  3A00               	xorlw	0	; case 0
 14568  0BBE  1903               	skipnz
 14569  0BBF  2B6C               	goto	l12215
 14570  0BC0  3A01               	xorlw	1	; case 1
 14571  0BC1  1903               	skipnz
 14572  0BC2  2B73               	goto	l12217
 14573  0BC3  3A03               	xorlw	3	; case 2
 14574  0BC4  1903               	skipnz
 14575  0BC5  2B7A               	goto	l12219
 14576  0BC6  3A01               	xorlw	1	; case 3
 14577  0BC7  1903               	skipnz
 14578  0BC8  2B81               	goto	l12221
 14579  0BC9  3A06               	xorlw	6	; case 5
 14580  0BCA  1903               	skipnz
 14581  0BCB  2B88               	goto	l12223
 14582  0BCC  3A03               	xorlw	3	; case 6
 14583  0BCD  1903               	skipnz
 14584  0BCE  2B8F               	goto	l12225
 14585  0BCF  3A01               	xorlw	1	; case 7
 14586  0BD0  1903               	skipnz
 14587  0BD1  2B96               	goto	l12227
 14588  0BD2  3A0F               	xorlw	15	; case 8
 14589  0BD3  1903               	skipnz
 14590  0BD4  2B9D               	goto	l12229
 14591  0BD5  2BA4               	goto	l12231
 14592  0BD6  0008               	return
 14593  0BD7                     __end_of_CONTROLLER_task:	
 14594                           
 14595                           	psect	text29
 14596  13BF                     __ptext29:	
 14597 ;; *************** function _CONTROL_BEAT *****************
 14598 ;; Defined at:
 14599 ;;		line 327 in file "controller.c"
 14600 ;; Parameters:    Size  Location     Type
 14601 ;;		None
 14602 ;; Auto vars:     Size  Location     Type
 14603 ;;		None
 14604 ;; Return value:  Size  Location     Type
 14605 ;;                  1    wreg      void 
 14606 ;; Registers used:
 14607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14608 ;; Tracked objects:
 14609 ;;		On entry : 0/0
 14610 ;;		On exit  : 0/0
 14611 ;;		Unchanged: 0/0
 14612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14615 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14616 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14617 ;;Total ram usage:        2 bytes
 14618 ;; Hardware stack levels used:    1
 14619 ;; Hardware stack levels required when called:   17
 14620 ;; This function calls:
 14621 ;;		_LED_task_BEAT_FADE
 14622 ;;		_LED_task_BEAT_MIXED
 14623 ;;		_LED_task_BEAT_STROBE
 14624 ;;		_TM1650_fastPrintNum_2digit
 14625 ;;		_printf
 14626 ;; This function is called by:
 14627 ;;		_CONTROLLER_init
 14628 ;;		_CONTROLLER_task
 14629 ;; This function uses a non-reentrant model
 14630 ;;
 14631                           
 14632                           
 14633                           ;psect for function _CONTROL_BEAT
 14634  13BF                     _CONTROL_BEAT:	
 14635                           
 14636                           ;controller.c: 329:     switch(currentMenu->name){
 14637                           
 14638                           ;incstack = 0
 14639 ;; hardware stack exceeded
 14640                           ; Regs used in _CONTROL_BEAT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14641  13BF  2BE5               	goto	l11913
 14642  13C0                     l11895:	
 14643                           
 14644                           ;controller.c: 332:             printf("B-\r");
 14645  13C0  3082               	movlw	low (STR_10| (0+32768))
 14646  13C1  00A0               	movwf	printf@fmt^(0+128)
 14647  13C2  30A0               	movlw	high (STR_10| (0+32768))
 14648  13C3  00A1               	movwf	(printf@fmt^(0+128)+1)
 14649  13C4  319D  2547  3193   	fcall	_printf
 14650                           
 14651                           ;controller.c: 333:             LED_task_BEAT_STROBE();
 14652  13C7  318B  23D7  3193   	fcall	_LED_task_BEAT_STROBE
 14653                           
 14654                           ;controller.c: 334:             break;
 14655  13CA  2C01               	goto	l11915
 14656  13CB                     l11899:	
 14657                           
 14658                           ;controller.c: 337:             printf("F-\r");
 14659  13CB  308A               	movlw	low (STR_11| (0+32768))
 14660  13CC  00A0               	movwf	printf@fmt^(0+128)
 14661  13CD  30A0               	movlw	high (STR_11| (0+32768))
 14662  13CE                     L4:	
 14663  13CE  00A1               	movwf	(printf@fmt^(0+128)+1)
 14664  13CF  319D  2547  3193   	fcall	_printf
 14665                           
 14666                           ;controller.c: 338:             LED_task_BEAT_FADE();
 14667  13D2  3188  2000  3193   	fcall	_LED_task_BEAT_FADE
 14668                           
 14669                           ;controller.c: 339:             break;
 14670  13D5  2C01               	goto	l11915
 14671  13D6                     l11903:	
 14672                           
 14673                           ;controller.c: 342:             printf("C-\r");
 14674  13D6  3086               	movlw	low (STR_12| (0+32768))
 14675  13D7  00A0               	movwf	printf@fmt^(0+128)
 14676  13D8  30A0               	movlw	high (STR_12| (0+32768))
 14677  13D9  2BCE               	goto	L4
 14678  13DA                     l11907:	
 14679                           
 14680                           ;controller.c: 347:             printf("A-\r");
 14681  13DA  307E               	movlw	low (STR_13| (0+32768))
 14682  13DB  00A0               	movwf	printf@fmt^(0+128)
 14683  13DC  30A0               	movlw	high (STR_13| (0+32768))
 14684  13DD  00A1               	movwf	(printf@fmt^(0+128)+1)
 14685  13DE  319D  2547  3193   	fcall	_printf
 14686                           
 14687                           ;controller.c: 348:             LED_task_BEAT_MIXED();
 14688  13E1  3188  2001  3193   	fcall	_LED_task_BEAT_MIXED
 14689                           
 14690                           ;controller.c: 349:             break;
 14691  13E4  2C01               	goto	l11915
 14692  13E5                     l11913:	
 14693  13E5  0141               	movlb	1	; select bank1
 14694  13E6  0852               	movf	_currentMenu^(0+128),w
 14695  13E7  0086               	movwf	6
 14696  13E8  0853               	movf	(_currentMenu+1)^(0+128),w
 14697  13E9  0087               	movwf	7
 14698  13EA  3147               	addfsr 1,7
 14699  13EB  0801               	movf	1,w
 14700  13EC  00C0               	movwf	??_CONTROL_BEAT^(0+128)
 14701  13ED  01C1               	clrf	(??_CONTROL_BEAT^(0+128)+1)
 14702                           
 14703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14704                           ; Switch size 1, requested type "simple"
 14705                           ; Number of cases is 1, Range of values is 0 to 0
 14706                           ; switch strategies available:
 14707                           ; Name         Instructions Cycles
 14708                           ; simple_byte            4     3 (average)
 14709                           ; direct_byte            8     6 (fixed)
 14710                           ; jumptable            260     6 (fixed)
 14711                           ;	Chosen strategy is simple_byte
 14712  13EE  0841               	movf	(??_CONTROL_BEAT+1)^(0+128),w
 14713  13EF  3A00               	xorlw	0	; case 0
 14714  13F0  1903               	skipnz
 14715  13F1  2BF3               	goto	l12515
 14716  13F2  2C01               	goto	l11915
 14717  13F3                     l12515:	
 14718                           
 14719                           ; Switch size 1, requested type "simple"
 14720                           ; Number of cases is 4, Range of values is 9 to 12
 14721                           ; switch strategies available:
 14722                           ; Name         Instructions Cycles
 14723                           ; simple_byte           13     7 (average)
 14724                           ; direct_byte           17     9 (fixed)
 14725                           ; jumptable            263     9 (fixed)
 14726                           ;	Chosen strategy is simple_byte
 14727  13F3  0840               	movf	??_CONTROL_BEAT^(0+128),w
 14728  13F4  3A09               	xorlw	9	; case 9
 14729  13F5  1903               	skipnz
 14730  13F6  2BC0               	goto	l11895
 14731  13F7  3A03               	xorlw	3	; case 10
 14732  13F8  1903               	skipnz
 14733  13F9  2BCB               	goto	l11899
 14734  13FA  3A01               	xorlw	1	; case 11
 14735  13FB  1903               	skipnz
 14736  13FC  2BD6               	goto	l11903
 14737  13FD  3A07               	xorlw	7	; case 12
 14738  13FE  1903               	skipnz
 14739  13FF  2BDA               	goto	l11907
 14740  1400  2C01               	goto	l11915
 14741  1401                     l11915:	
 14742                           
 14743                           ;controller.c: 353:     TM1650_fastPrintNum_2digit(beatBrightness);
 14744  1401  0141               	movlb	1	; select bank1
 14745  1402  086F               	movf	_beatBrightness^(0+128),w
 14746  1403  3194  24F7  3193   	fcall	_TM1650_fastPrintNum_2digit
 14747                           
 14748                           ;controller.c: 355:     if (upState) {
 14749  1406  0141               	movlb	1	; select bank1
 14750  1407  085D               	movf	_upState^(0+128),w
 14751  1408  1903               	btfsc	3,2
 14752  1409  2C18               	goto	l11925
 14753                           
 14754                           ;controller.c: 356:         if(beatBrightness < 9){
 14755  140A  3009               	movlw	9
 14756  140B  026F               	subwf	_beatBrightness^(0+128),w
 14757  140C  1803               	skipnc
 14758  140D  2C13               	goto	l11923
 14759                           
 14760                           ;controller.c: 357:             beatBrightness++;
 14761  140E  3001               	movlw	1
 14762  140F  00C0               	movwf	??_CONTROL_BEAT^(0+128)
 14763  1410  0840               	movf	??_CONTROL_BEAT^(0+128),w
 14764  1411  07EF               	addwf	_beatBrightness^(0+128),f
 14765                           
 14766                           ;controller.c: 358:         } else {
 14767  1412  0008               	return
 14768  1413                     l11923:	
 14769                           
 14770                           ;controller.c: 359:             beatBrightness = 9;
 14771  1413  3009               	movlw	9
 14772  1414  00C0               	movwf	??_CONTROL_BEAT^(0+128)
 14773  1415  0840               	movf	??_CONTROL_BEAT^(0+128),w
 14774  1416  00EF               	movwf	_beatBrightness^(0+128)
 14775  1417  0008               	return
 14776  1418                     l11925:	
 14777  1418  085C               	movf	_downState^(0+128),w
 14778  1419  1903               	btfsc	3,2
 14779  141A  0008               	return
 14780                           
 14781                           ;controller.c: 362:         if(beatBrightness > 0){
 14782  141B  086F               	movf	_beatBrightness^(0+128),w
 14783  141C  1903               	btfsc	3,2
 14784  141D  2C21               	goto	l11931
 14785                           
 14786                           ;controller.c: 363:             beatBrightness--;
 14787  141E  3001               	movlw	1
 14788  141F  02EF               	subwf	_beatBrightness^(0+128),f
 14789                           
 14790                           ;controller.c: 364:         } else {
 14791  1420  0008               	return
 14792  1421                     l11931:	
 14793                           
 14794                           ;controller.c: 365:             beatBrightness = 0;
 14795  1421  01EF               	clrf	_beatBrightness^(0+128)
 14796  1422  0008               	return
 14797  1423                     __end_of_CONTROL_BEAT:	
 14798                           
 14799                           	psect	text30
 14800  0DA4                     __ptext30:	
 14801 ;; *************** function _CONTROL_MANUAL *****************
 14802 ;; Defined at:
 14803 ;;		line 384 in file "controller.c"
 14804 ;; Parameters:    Size  Location     Type
 14805 ;;		None
 14806 ;; Auto vars:     Size  Location     Type
 14807 ;;		None
 14808 ;; Return value:  Size  Location     Type
 14809 ;;                  1    wreg      void 
 14810 ;; Registers used:
 14811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14812 ;; Tracked objects:
 14813 ;;		On entry : 0/0
 14814 ;;		On exit  : 0/0
 14815 ;;		Unchanged: 0/0
 14816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14819 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14820 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14821 ;;Total ram usage:        2 bytes
 14822 ;; Hardware stack levels used:    1
 14823 ;; Hardware stack levels required when called:   17
 14824 ;; This function calls:
 14825 ;;		_BUTTONS_isHeld
 14826 ;;		_CLOCK_getTime
 14827 ;;		_LED_task_MANUAL
 14828 ;;		_TM1650_fastPrintNum_3digit
 14829 ;;		_colorDec
 14830 ;;		_colorInc
 14831 ;;		_printf
 14832 ;; This function is called by:
 14833 ;;		_CONTROLLER_init
 14834 ;;		_CONTROLLER_task
 14835 ;; This function uses a non-reentrant model
 14836 ;;
 14837                           
 14838                           
 14839                           ;psect for function _CONTROL_MANUAL
 14840  0DA4                     _CONTROL_MANUAL:	
 14841                           
 14842                           ;controller.c: 386:        switch(currentMenu->name){
 14843                           
 14844                           ;incstack = 0
 14845 ;; hardware stack exceeded
 14846                           ; Regs used in _CONTROL_MANUAL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14847  0DA4  2DFD               	goto	l11951
 14848  0DA5                     l11941:	
 14849                           
 14850                           ;controller.c: 389:             printf("r\r");
 14851  0DA5  309A               	movlw	low (STR_14| (0+32768))
 14852  0DA6  00A0               	movwf	printf@fmt^(0+128)
 14853  0DA7  30A0               	movlw	high (STR_14| (0+32768))
 14854  0DA8  00A1               	movwf	(printf@fmt^(0+128)+1)
 14855  0DA9  319D  2547  318D   	fcall	_printf
 14856                           
 14857                           ;controller.c: 390:             TM1650_fastPrintNum_3digit(manualColor.red);
 14858  0DAC  0141               	movlb	1	; select bank1
 14859  0DAD  084B               	movf	(_manualColor^(0+128)+1),w
 14860  0DAE  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14861  0DAF  01BF               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 14862  0DB0  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14863  0DB1  0140               	movlb	0	; select bank0
 14864  0DB2  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 14865  0DB3  0141               	movlb	1	; select bank1
 14866  0DB4  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14867  0DB5  0140               	movlb	0	; select bank0
 14868  0DB6  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 14869  0DB7  3196  2601  318D   	fcall	_TM1650_fastPrintNum_3digit
 14870                           
 14871                           ;controller.c: 391:             break;
 14872  0DBA  2E19               	goto	l11953
 14873  0DBB                     l11943:	
 14874                           
 14875                           ;controller.c: 394:             printf("g\r");
 14876  0DBB  3094               	movlw	low (STR_15| (0+32768))
 14877  0DBC  00A0               	movwf	printf@fmt^(0+128)
 14878  0DBD  30A0               	movlw	high (STR_15| (0+32768))
 14879  0DBE  00A1               	movwf	(printf@fmt^(0+128)+1)
 14880  0DBF  319D  2547  318D   	fcall	_printf
 14881                           
 14882                           ;controller.c: 395:             TM1650_fastPrintNum_3digit(manualColor.green);
 14883  0DC2  0141               	movlb	1	; select bank1
 14884  0DC3  084C               	movf	(_manualColor^(0+128)+2),w
 14885  0DC4  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14886  0DC5  01BF               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 14887  0DC6  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14888  0DC7  0140               	movlb	0	; select bank0
 14889  0DC8  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 14890  0DC9  0141               	movlb	1	; select bank1
 14891  0DCA  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14892  0DCB  0140               	movlb	0	; select bank0
 14893  0DCC  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 14894  0DCD  3196  2601  318D   	fcall	_TM1650_fastPrintNum_3digit
 14895                           
 14896                           ;controller.c: 396:             break;
 14897  0DD0  2E19               	goto	l11953
 14898  0DD1                     l11945:	
 14899                           
 14900                           ;controller.c: 399:             printf("b\r");
 14901  0DD1  308E               	movlw	low (STR_16| (0+32768))
 14902  0DD2  00A0               	movwf	printf@fmt^(0+128)
 14903  0DD3  30A0               	movlw	high (STR_16| (0+32768))
 14904  0DD4  00A1               	movwf	(printf@fmt^(0+128)+1)
 14905  0DD5  319D  2547  318D   	fcall	_printf
 14906                           
 14907                           ;controller.c: 400:             TM1650_fastPrintNum_3digit(manualColor.blue);
 14908  0DD8  0141               	movlb	1	; select bank1
 14909  0DD9  084D               	movf	(_manualColor^(0+128)+3),w
 14910  0DDA  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14911  0DDB  01BF               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 14912  0DDC  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14913  0DDD  0140               	movlb	0	; select bank0
 14914  0DDE  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 14915  0DDF  0141               	movlb	1	; select bank1
 14916  0DE0  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14917  0DE1  0140               	movlb	0	; select bank0
 14918  0DE2  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 14919  0DE3  3196  2601  318D   	fcall	_TM1650_fastPrintNum_3digit
 14920                           
 14921                           ;controller.c: 401:             break;
 14922  0DE6  2E19               	goto	l11953
 14923  0DE7                     l11947:	
 14924                           
 14925                           ;controller.c: 404:             printf("h\r");
 14926  0DE7  3097               	movlw	low (STR_17| (0+32768))
 14927  0DE8  00A0               	movwf	printf@fmt^(0+128)
 14928  0DE9  30A0               	movlw	high (STR_17| (0+32768))
 14929  0DEA  00A1               	movwf	(printf@fmt^(0+128)+1)
 14930  0DEB  319D  2547  318D   	fcall	_printf
 14931                           
 14932                           ;controller.c: 405:             TM1650_fastPrintNum_3digit(manualColor.white);
 14933  0DEE  0141               	movlb	1	; select bank1
 14934  0DEF  084A               	movf	_manualColor^(0+128),w
 14935  0DF0  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14936  0DF1  01BF               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 14937  0DF2  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14938  0DF3  0140               	movlb	0	; select bank0
 14939  0DF4  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 14940  0DF5  0141               	movlb	1	; select bank1
 14941  0DF6  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14942  0DF7  0140               	movlb	0	; select bank0
 14943  0DF8  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 14944  0DF9  3196  2601  318D   	fcall	_TM1650_fastPrintNum_3digit
 14945                           
 14946                           ;controller.c: 406:             break;
 14947  0DFC  2E19               	goto	l11953
 14948  0DFD                     l11951:	
 14949  0DFD  0141               	movlb	1	; select bank1
 14950  0DFE  0852               	movf	_currentMenu^(0+128),w
 14951  0DFF  0086               	movwf	6
 14952  0E00  0853               	movf	(_currentMenu+1)^(0+128),w
 14953  0E01  0087               	movwf	7
 14954  0E02  3147               	addfsr 1,7
 14955  0E03  0801               	movf	1,w
 14956  0E04  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14957  0E05  01BF               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 14958                           
 14959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14960                           ; Switch size 1, requested type "simple"
 14961                           ; Number of cases is 1, Range of values is 0 to 0
 14962                           ; switch strategies available:
 14963                           ; Name         Instructions Cycles
 14964                           ; simple_byte            4     3 (average)
 14965                           ; direct_byte            8     6 (fixed)
 14966                           ; jumptable            260     6 (fixed)
 14967                           ;	Chosen strategy is simple_byte
 14968  0E06  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14969  0E07  3A00               	xorlw	0	; case 0
 14970  0E08  1903               	skipnz
 14971  0E09  2E0B               	goto	l12517
 14972  0E0A  2E19               	goto	l11953
 14973  0E0B                     l12517:	
 14974                           
 14975                           ; Switch size 1, requested type "simple"
 14976                           ; Number of cases is 4, Range of values is 13 to 16
 14977                           ; switch strategies available:
 14978                           ; Name         Instructions Cycles
 14979                           ; simple_byte           13     7 (average)
 14980                           ; direct_byte           17     9 (fixed)
 14981                           ; jumptable            263     9 (fixed)
 14982                           ;	Chosen strategy is simple_byte
 14983  0E0B  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14984  0E0C  3A0D               	xorlw	13	; case 13
 14985  0E0D  1903               	skipnz
 14986  0E0E  2DA5               	goto	l11941
 14987  0E0F  3A03               	xorlw	3	; case 14
 14988  0E10  1903               	skipnz
 14989  0E11  2DBB               	goto	l11943
 14990  0E12  3A01               	xorlw	1	; case 15
 14991  0E13  1903               	skipnz
 14992  0E14  2DD1               	goto	l11945
 14993  0E15  3A1F               	xorlw	31	; case 16
 14994  0E16  1903               	skipnz
 14995  0E17  2DE7               	goto	l11947
 14996  0E18  2E19               	goto	l11953
 14997  0E19                     l11953:	
 14998                           
 14999                           ;controller.c: 410:      if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incIn
      +                          terval)){
 15000  0E19  0141               	movlb	1	; select bank1
 15001  0E1A  0860               	movf	_up^(0+128),w
 15002  0E1B  319C  24A6  318D   	fcall	_BUTTONS_isHeld
 15003  0E1E  3A00               	xorlw	0
 15004  0E1F  1903               	skipnz
 15005  0E20  2E56               	goto	l11965
 15006  0E21  319B  23E6  318D   	fcall	_CLOCK_getTime
 15007  0E24  0141               	movlb	1	; select bank1
 15008  0E25  0850               	movf	_lastIncTime^(0+128),w
 15009  0E26  0140               	movlb	0	; select bank0
 15010  0E27  0220               	subwf	?_CLOCK_getTime,w
 15011  0E28  0141               	movlb	1	; select bank1
 15012  0E29  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 15013  0E2A  0851               	movf	(_lastIncTime+1)^(0+128),w
 15014  0E2B  0140               	movlb	0	; select bank0
 15015  0E2C  3B21               	subwfb	?_CLOCK_getTime+1,w
 15016  0E2D  0141               	movlb	1	; select bank1
 15017  0E2E  00BF               	movwf	(??_CONTROL_MANUAL+1)^(0+128)
 15018  0E2F  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 15019  0E30  0269               	subwf	(_incInterval+1)^(0+128),w
 15020  0E31  1D03               	skipz
 15021  0E32  2E35               	goto	u12815
 15022  0E33  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 15023  0E34  0268               	subwf	_incInterval^(0+128),w
 15024  0E35                     u12815:	
 15025  0E35  1803               	skipnc
 15026  0E36  2E56               	goto	l11965
 15027                           
 15028                           ;controller.c: 411:         colorInc();
 15029  0E37  3192  2230  318D   	fcall	_colorInc
 15030  0E3A                     L5:	
 15031                           
 15032                           ;controller.c: 412:         lastIncTime = CLOCK_getTime();
 15033  0E3A  319B  23E6  318D   	fcall	_CLOCK_getTime
 15034  0E3D  0140               	movlb	0	; select bank0
 15035  0E3E  0821               	movf	?_CLOCK_getTime+1,w
 15036  0E3F  0141               	movlb	1	; select bank1
 15037  0E40  00D1               	movwf	(_lastIncTime+1)^(0+128)
 15038  0E41  0140               	movlb	0	; select bank0
 15039  0E42  0820               	movf	?_CLOCK_getTime,w
 15040  0E43  0141               	movlb	1	; select bank1
 15041  0E44  00D0               	movwf	_lastIncTime^(0+128)
 15042                           
 15043                           ;controller.c: 413:         if(incInterval > 10){
 15044  0E45  0869               	movf	(_incInterval+1)^(0+128),w
 15045  0E46  3A80               	xorlw	128
 15046  0E47  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 15047  0E48  3080               	movlw	128
 15048  0E49  023E               	subwf	??_CONTROL_MANUAL^(0+128),w
 15049  0E4A  1D03               	skipz
 15050  0E4B  2E4E               	goto	u12825
 15051  0E4C  300B               	movlw	11
 15052  0E4D  0268               	subwf	_incInterval^(0+128),w
 15053  0E4E                     u12825:	
 15054  0E4E  1C03               	skipc
 15055  0E4F  2EAB               	goto	l11997
 15056                           
 15057                           ;controller.c: 414:             incInterval-=1;
 15058  0E50  30FF               	movlw	255
 15059  0E51  0141               	movlb	1	; select bank1
 15060  0E52  07E8               	addwf	_incInterval^(0+128),f
 15061  0E53  30FF               	movlw	255
 15062  0E54  3DE9               	addwfc	(_incInterval+1)^(0+128),f
 15063  0E55  2EAB               	goto	l11997
 15064  0E56                     l11965:	
 15065  0E56  0141               	movlb	1	; select bank1
 15066  0E57  085F               	movf	_down^(0+128),w
 15067  0E58  319C  24A6  318D   	fcall	_BUTTONS_isHeld
 15068  0E5B  3A00               	xorlw	0
 15069  0E5C  1903               	skipnz
 15070  0E5D  2E78               	goto	l11977
 15071  0E5E  319B  23E6  318D   	fcall	_CLOCK_getTime
 15072  0E61  0141               	movlb	1	; select bank1
 15073  0E62  0850               	movf	_lastIncTime^(0+128),w
 15074  0E63  0140               	movlb	0	; select bank0
 15075  0E64  0220               	subwf	?_CLOCK_getTime,w
 15076  0E65  0141               	movlb	1	; select bank1
 15077  0E66  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 15078  0E67  0851               	movf	(_lastIncTime+1)^(0+128),w
 15079  0E68  0140               	movlb	0	; select bank0
 15080  0E69  3B21               	subwfb	?_CLOCK_getTime+1,w
 15081  0E6A  0141               	movlb	1	; select bank1
 15082  0E6B  00BF               	movwf	(??_CONTROL_MANUAL+1)^(0+128)
 15083  0E6C  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 15084  0E6D  0269               	subwf	(_incInterval+1)^(0+128),w
 15085  0E6E  1D03               	skipz
 15086  0E6F  2E72               	goto	u12845
 15087  0E70  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 15088  0E71  0268               	subwf	_incInterval^(0+128),w
 15089  0E72                     u12845:	
 15090  0E72  1803               	skipnc
 15091  0E73  2E78               	goto	l11977
 15092                           
 15093                           ;controller.c: 417:         colorDec();
 15094  0E74  3191  2174  318D   	fcall	_colorDec
 15095  0E77  2E3A               	goto	L5
 15096  0E78                     l11977:	
 15097                           ;controller.c: 419:         if(incInterval > 10){
 15098                           
 15099                           ;controller.c: 418:         lastIncTime = CLOCK_getTime();
 15100                           
 15101  0E78  0141               	movlb	1	; select bank1
 15102  0E79  085D               	movf	_upState^(0+128),w
 15103  0E7A  1903               	btfsc	3,2
 15104  0E7B  2E8B               	goto	l11983
 15105                           
 15106                           ;controller.c: 423:         colorInc();
 15107  0E7C  3192  2230  318D   	fcall	_colorInc
 15108                           
 15109                           ;controller.c: 424:         lastActiveTime = CLOCK_getTime();
 15110  0E7F  319B  23E6  318D   	fcall	_CLOCK_getTime
 15111  0E82  0140               	movlb	0	; select bank0
 15112  0E83  0821               	movf	?_CLOCK_getTime+1,w
 15113  0E84  0142               	movlb	2	; select bank2
 15114  0E85  00B5               	movwf	(_lastActiveTime+1)^(0+256)
 15115  0E86  0140               	movlb	0	; select bank0
 15116  0E87  0820               	movf	?_CLOCK_getTime,w
 15117  0E88  0142               	movlb	2	; select bank2
 15118  0E89  00B4               	movwf	_lastActiveTime^(0+256)
 15119                           
 15120                           ;controller.c: 425:     } else if (downState) {
 15121  0E8A  2EAB               	goto	l11997
 15122  0E8B                     l11983:	
 15123  0E8B  085C               	movf	_downState^(0+128),w
 15124  0E8C  1903               	btfsc	3,2
 15125  0E8D  2E92               	goto	l11987
 15126                           
 15127                           ;controller.c: 426:         colorDec();
 15128  0E8E  3191  2174  318D   	fcall	_colorDec
 15129                           
 15130                           ;controller.c: 427:     } else if((!upState || !downState) && !(BUTTONS_isHeld(down) || 
      +                          BUTTONS_isHeld(up))){
 15131  0E91  2EAB               	goto	l11997
 15132  0E92                     l11987:	
 15133  0E92  085D               	movf	_upState^(0+128),w
 15134  0E93  1D03               	btfss	3,2
 15135  0E94  085C               	movf	_downState^(0+128),w
 15136  0E95  1D03               	btfss	3,2
 15137  0E96  2EAB               	goto	l11997
 15138  0E97  085F               	movf	_down^(0+128),w
 15139  0E98  319C  24A6  318D   	fcall	_BUTTONS_isHeld
 15140  0E9B  3A00               	xorlw	0
 15141  0E9C  1D03               	skipz
 15142  0E9D  2EAB               	goto	l11997
 15143  0E9E  0141               	movlb	1	; select bank1
 15144  0E9F  0860               	movf	_up^(0+128),w
 15145  0EA0  319C  24A6  318D   	fcall	_BUTTONS_isHeld
 15146  0EA3  3A00               	xorlw	0
 15147  0EA4  1D03               	skipz
 15148  0EA5  2EAB               	goto	l11997
 15149                           
 15150                           ;controller.c: 428:         incInterval = 100;
 15151  0EA6  3064               	movlw	100
 15152  0EA7  0141               	movlb	1	; select bank1
 15153  0EA8  00E8               	movwf	_incInterval^(0+128)
 15154  0EA9  3000               	movlw	0
 15155  0EAA  00E9               	movwf	(_incInterval^(0+128)+1)
 15156  0EAB                     l11997:	
 15157                           
 15158                           ;controller.c: 431:     LED_task_MANUAL();
 15159  0EAB  319C  245A         	fcall	_LED_task_MANUAL
 15160  0EAD  0008               	return
 15161  0EAE                     __end_of_CONTROL_MANUAL:	
 15162                           
 15163                           	psect	text31
 15164  1749                     __ptext31:	
 15165 ;; *************** function _CONTROL_DMX *****************
 15166 ;; Defined at:
 15167 ;;		line 295 in file "controller.c"
 15168 ;; Parameters:    Size  Location     Type
 15169 ;;		None
 15170 ;; Auto vars:     Size  Location     Type
 15171 ;;		None
 15172 ;; Return value:  Size  Location     Type
 15173 ;;                  1    wreg      void 
 15174 ;; Registers used:
 15175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15176 ;; Tracked objects:
 15177 ;;		On entry : 0/0
 15178 ;;		On exit  : 0/0
 15179 ;;		Unchanged: 0/0
 15180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15183 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15184 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15185 ;;Total ram usage:        2 bytes
 15186 ;; Hardware stack levels used:    1
 15187 ;; Hardware stack levels required when called:   17
 15188 ;; This function calls:
 15189 ;;		_BUTTONS_isHeld
 15190 ;;		_CLOCK_getTime
 15191 ;;		_DMX_getAddress
 15192 ;;		_TM1650_fastPrintNum_3digit
 15193 ;;		_address_dec
 15194 ;;		_address_inc
 15195 ;;		_printf
 15196 ;; This function is called by:
 15197 ;;		_CONTROLLER_init
 15198 ;;		_CONTROLLER_task
 15199 ;; This function uses a non-reentrant model
 15200 ;;
 15201                           
 15202                           
 15203                           ;psect for function _CONTROL_DMX
 15204  1749                     _CONTROL_DMX:	
 15205                           
 15206                           ;controller.c: 297:     printf("d\r");
 15207                           
 15208                           ;incstack = 0
 15209 ;; hardware stack exceeded
 15210                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15211  1749  3091               	movlw	low (STR_9| (0+32768))
 15212  174A  0141               	movlb	1	; select bank1
 15213  174B  00A0               	movwf	printf@fmt^(0+128)
 15214  174C  30A0               	movlw	high (STR_9| (0+32768))
 15215  174D  00A1               	movwf	(printf@fmt^(0+128)+1)
 15216  174E  319D  2547  3197   	fcall	_printf
 15217                           
 15218                           ;controller.c: 298:     TM1650_fastPrintNum_3digit(DMX_getAddress());
 15219  1751  319B  2389  3197   	fcall	_DMX_getAddress
 15220  1754  0141               	movlb	1	; select bank1
 15221  1755  00AA               	movwf	??_CONTROL_DMX^(0+128)
 15222  1756  01AB               	clrf	(??_CONTROL_DMX^(0+128)+1)
 15223  1757  082A               	movf	??_CONTROL_DMX^(0+128),w
 15224  1758  0140               	movlb	0	; select bank0
 15225  1759  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 15226  175A  0141               	movlb	1	; select bank1
 15227  175B  082B               	movf	(??_CONTROL_DMX+1)^(0+128),w
 15228  175C  0140               	movlb	0	; select bank0
 15229  175D  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 15230  175E  3196  2601  3197   	fcall	_TM1650_fastPrintNum_3digit
 15231                           
 15232                           ;controller.c: 300:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 15233  1761  0141               	movlb	1	; select bank1
 15234  1762  0860               	movf	_up^(0+128),w
 15235  1763  319C  24A6  3197   	fcall	_BUTTONS_isHeld
 15236  1766  3A00               	xorlw	0
 15237  1767  1903               	skipnz
 15238  1768  2FB8               	goto	l11857
 15239  1769  319B  23E6  3197   	fcall	_CLOCK_getTime
 15240  176C  0141               	movlb	1	; select bank1
 15241  176D  0850               	movf	_lastIncTime^(0+128),w
 15242  176E  0140               	movlb	0	; select bank0
 15243  176F  0220               	subwf	?_CLOCK_getTime,w
 15244  1770  0141               	movlb	1	; select bank1
 15245  1771  00AA               	movwf	??_CONTROL_DMX^(0+128)
 15246  1772  0851               	movf	(_lastIncTime+1)^(0+128),w
 15247  1773  0140               	movlb	0	; select bank0
 15248  1774  3B21               	subwfb	?_CLOCK_getTime+1,w
 15249  1775  0141               	movlb	1	; select bank1
 15250  1776  00AB               	movwf	(??_CONTROL_DMX+1)^(0+128)
 15251  1777  082B               	movf	(??_CONTROL_DMX+1)^(0+128),w
 15252  1778  0269               	subwf	(_incInterval+1)^(0+128),w
 15253  1779  1D03               	skipz
 15254  177A  2F7D               	goto	u12645
 15255  177B  082A               	movf	??_CONTROL_DMX^(0+128),w
 15256  177C  0268               	subwf	_incInterval^(0+128),w
 15257  177D                     u12645:	
 15258  177D  1803               	skipnc
 15259  177E  2FB8               	goto	l11857
 15260                           
 15261                           ;controller.c: 301:         address_inc();
 15262  177F  3187  27F0  3197   	fcall	_address_inc
 15263  1782  2F9C               	goto	L6
 15264  1783                     l11859:	
 15265                           ;controller.c: 303:         if(incInterval > 20){
 15266                           
 15267                           ;controller.c: 302:         lastIncTime = CLOCK_getTime();
 15268                           
 15269  1783  319B  23E6  3197   	fcall	_CLOCK_getTime
 15270  1786  0141               	movlb	1	; select bank1
 15271  1787  0850               	movf	_lastIncTime^(0+128),w
 15272  1788  0140               	movlb	0	; select bank0
 15273  1789  0220               	subwf	?_CLOCK_getTime,w
 15274  178A  0141               	movlb	1	; select bank1
 15275  178B  00AA               	movwf	??_CONTROL_DMX^(0+128)
 15276  178C  0851               	movf	(_lastIncTime+1)^(0+128),w
 15277  178D  0140               	movlb	0	; select bank0
 15278  178E  3B21               	subwfb	?_CLOCK_getTime+1,w
 15279  178F  0141               	movlb	1	; select bank1
 15280  1790  00AB               	movwf	(??_CONTROL_DMX+1)^(0+128)
 15281  1791  082B               	movf	(??_CONTROL_DMX+1)^(0+128),w
 15282  1792  0269               	subwf	(_incInterval+1)^(0+128),w
 15283  1793  1D03               	skipz
 15284  1794  2F97               	goto	u12675
 15285  1795  082A               	movf	??_CONTROL_DMX^(0+128),w
 15286  1796  0268               	subwf	_incInterval^(0+128),w
 15287  1797                     u12675:	
 15288  1797  1803               	skipnc
 15289  1798  2FC0               	goto	l11869
 15290                           
 15291                           ;controller.c: 307:         address_dec();
 15292  1799  319C  24B5  3197   	fcall	_address_dec
 15293  179C                     L6:	
 15294                           
 15295                           ;controller.c: 308:         lastIncTime = CLOCK_getTime();
 15296  179C  319B  23E6  3197   	fcall	_CLOCK_getTime
 15297  179F  0140               	movlb	0	; select bank0
 15298  17A0  0821               	movf	?_CLOCK_getTime+1,w
 15299  17A1  0141               	movlb	1	; select bank1
 15300  17A2  00D1               	movwf	(_lastIncTime+1)^(0+128)
 15301  17A3  0140               	movlb	0	; select bank0
 15302  17A4  0820               	movf	?_CLOCK_getTime,w
 15303  17A5  0141               	movlb	1	; select bank1
 15304  17A6  00D0               	movwf	_lastIncTime^(0+128)
 15305                           
 15306                           ;controller.c: 309:         if(incInterval > 20){
 15307  17A7  0869               	movf	(_incInterval+1)^(0+128),w
 15308  17A8  3A80               	xorlw	128
 15309  17A9  00AA               	movwf	??_CONTROL_DMX^(0+128)
 15310  17AA  3080               	movlw	128
 15311  17AB  022A               	subwf	??_CONTROL_DMX^(0+128),w
 15312  17AC  1D03               	skipz
 15313  17AD  2FB0               	goto	u12685
 15314  17AE  3015               	movlw	21
 15315  17AF  0268               	subwf	_incInterval^(0+128),w
 15316  17B0                     u12685:	
 15317  17B0  1C03               	skipc
 15318  17B1  0008               	return
 15319                           
 15320                           ;controller.c: 304:             incInterval-=1;
 15321  17B2  30FF               	movlw	255
 15322  17B3  0141               	movlb	1	; select bank1
 15323  17B4  07E8               	addwf	_incInterval^(0+128),f
 15324  17B5  30FF               	movlw	255
 15325  17B6  3DE9               	addwfc	(_incInterval+1)^(0+128),f
 15326  17B7  0008               	return
 15327  17B8                     l11857:	
 15328  17B8  0141               	movlb	1	; select bank1
 15329  17B9  085F               	movf	_down^(0+128),w
 15330  17BA  319C  24A6  3197   	fcall	_BUTTONS_isHeld
 15331  17BD  3A00               	xorlw	0
 15332  17BE  1D03               	btfss	3,2
 15333  17BF  2F83               	goto	l11859
 15334  17C0                     l11869:	
 15335  17C0  0141               	movlb	1	; select bank1
 15336  17C1  085E               	movf	_enter^(0+128),w
 15337  17C2  319C  24A6  3197   	fcall	_BUTTONS_isHeld
 15338  17C5  3A00               	xorlw	0
 15339  17C6  1903               	skipnz
 15340  17C7  2FCE               	goto	l11873
 15341                           
 15342                           ;controller.c: 313:         address = 1;
 15343  17C8  3001               	movlw	1
 15344  17C9  0141               	movlb	1	; select bank1
 15345  17CA  00EA               	movwf	_address^(0+128)
 15346  17CB  3000               	movlw	0
 15347  17CC  00EB               	movwf	(_address^(0+128)+1)
 15348                           
 15349                           ;controller.c: 314:     } else if (upState) {
 15350  17CD  0008               	return
 15351  17CE                     l11873:	
 15352  17CE  0141               	movlb	1	; select bank1
 15353  17CF  085D               	movf	_upState^(0+128),w
 15354  17D0  1903               	btfsc	3,2
 15355  17D1  2FE0               	goto	l11879
 15356                           
 15357                           ;controller.c: 315:         address_inc();
 15358  17D2  3187  27F0  3197   	fcall	_address_inc
 15359                           
 15360                           ;controller.c: 316:         lastActiveTime = CLOCK_getTime();
 15361  17D5  319B  23E6         	fcall	_CLOCK_getTime
 15362  17D7  0140               	movlb	0	; select bank0
 15363  17D8  0821               	movf	?_CLOCK_getTime+1,w
 15364  17D9  0142               	movlb	2	; select bank2
 15365  17DA  00B5               	movwf	(_lastActiveTime+1)^(0+256)
 15366  17DB  0140               	movlb	0	; select bank0
 15367  17DC  0820               	movf	?_CLOCK_getTime,w
 15368  17DD  0142               	movlb	2	; select bank2
 15369  17DE  00B4               	movwf	_lastActiveTime^(0+256)
 15370                           
 15371                           ;controller.c: 317:     } else if (downState) {
 15372  17DF  0008               	return
 15373  17E0                     l11879:	
 15374  17E0  085C               	movf	_downState^(0+128),w
 15375  17E1  1903               	btfsc	3,2
 15376  17E2  2FE6               	goto	l11883
 15377                           
 15378                           ;controller.c: 318:         address_dec();
 15379  17E3  319C  24B5         	fcall	_address_dec
 15380                           
 15381                           ;controller.c: 319:     } else if((!upState || !downState) && !(BUTTONS_isHeld(down) || 
      +                          BUTTONS_isHeld(up))){
 15382  17E5  0008               	return
 15383  17E6                     l11883:	
 15384  17E6  085D               	movf	_upState^(0+128),w
 15385  17E7  1D03               	btfss	3,2
 15386  17E8  085C               	movf	_downState^(0+128),w
 15387  17E9  1D03               	btfss	3,2
 15388  17EA  0008               	return
 15389  17EB  085F               	movf	_down^(0+128),w
 15390  17EC  319C  24A6  3197   	fcall	_BUTTONS_isHeld
 15391  17EF  3A00               	xorlw	0
 15392  17F0  1D03               	skipz
 15393  17F1  0008               	return
 15394  17F2  0141               	movlb	1	; select bank1
 15395  17F3  0860               	movf	_up^(0+128),w
 15396  17F4  319C  24A6  3197   	fcall	_BUTTONS_isHeld
 15397  17F7  3A00               	xorlw	0
 15398  17F8  1D03               	skipz
 15399  17F9  0008               	return
 15400                           
 15401                           ;controller.c: 320:         incInterval = 100;
 15402  17FA  3064               	movlw	100
 15403  17FB  0141               	movlb	1	; select bank1
 15404  17FC  00E8               	movwf	_incInterval^(0+128)
 15405  17FD  3000               	movlw	0
 15406  17FE  00E9               	movwf	(_incInterval^(0+128)+1)
 15407                           
 15408                           ;controller.c: 321:     } else {
 15409  17FF  0008               	return
 15410  1800                     __end_of_CONTROL_DMX:	
 15411                           
 15412                           	psect	text32
 15413  0002                     __ptext32:	
 15414 ;; *************** function _LED_task_ANIMATION *****************
 15415 ;; Defined at:
 15416 ;;		line 208 in file "led.c"
 15417 ;; Parameters:    Size  Location     Type
 15418 ;;		None
 15419 ;; Auto vars:     Size  Location     Type
 15420 ;;		None
 15421 ;; Return value:  Size  Location     Type
 15422 ;;                  1    wreg      void 
 15423 ;; Registers used:
 15424 ;;		None
 15425 ;; Tracked objects:
 15426 ;;		On entry : 0/0
 15427 ;;		On exit  : 0/0
 15428 ;;		Unchanged: 0/0
 15429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15434 ;;Total ram usage:        0 bytes
 15435 ;; Hardware stack levels used:    1
 15436 ;; Hardware stack levels required when called:    4
 15437 ;; This function calls:
 15438 ;;		Nothing
 15439 ;; This function is called by:
 15440 ;;		_CONTROLLER_init
 15441 ;;		_LED_task
 15442 ;;		_CONTROLLER_task
 15443 ;; This function uses a non-reentrant model
 15444 ;;
 15445                           
 15446                           
 15447                           ;psect for function _LED_task_ANIMATION
 15448  0002                     _LED_task_ANIMATION:	
 15449                           
 15450                           ;incstack = 0
 15451                           ; Regs used in _LED_task_ANIMATION: []
 15452  0002  0008               	return
 15453  0003                     __end_of_LED_task_ANIMATION:	
 15454                           
 15455                           	psect	text33
 15456  1230                     __ptext33:	
 15457 ;; *************** function _colorInc *****************
 15458 ;; Defined at:
 15459 ;;		line 220 in file "led.c"
 15460 ;; Parameters:    Size  Location     Type
 15461 ;;		None
 15462 ;; Auto vars:     Size  Location     Type
 15463 ;;		None
 15464 ;; Return value:  Size  Location     Type
 15465 ;;                  1    wreg      void 
 15466 ;; Registers used:
 15467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15468 ;; Tracked objects:
 15469 ;;		On entry : 0/0
 15470 ;;		On exit  : 0/0
 15471 ;;		Unchanged: 0/0
 15472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15475 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15477 ;;Total ram usage:        2 bytes
 15478 ;; Hardware stack levels used:    1
 15479 ;; Hardware stack levels required when called:    5
 15480 ;; This function calls:
 15481 ;;		_getCurrentMenu
 15482 ;; This function is called by:
 15483 ;;		_CONTROL_MANUAL
 15484 ;; This function uses a non-reentrant model
 15485 ;;
 15486                           
 15487                           
 15488                           ;psect for function _colorInc
 15489  1230                     _colorInc:	
 15490                           
 15491                           ;led.c: 222:     switch(getCurrentMenu()){
 15492                           
 15493                           ;incstack = 0
 15494                           ; Regs used in _colorInc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15495  1230  2A5D               	goto	l10335
 15496  1231                     l10317:	
 15497                           
 15498                           ;led.c: 225:             if(!(manualColor.red > 254))
 15499  1231  0141               	movlb	1	; select bank1
 15500  1232  0A4B               	incf	(_manualColor^(0+128)+1),w
 15501  1233  1903               	btfsc	3,2
 15502  1234  0008               	return
 15503                           
 15504                           ;led.c: 226:             manualColor.red++;
 15505  1235  3001               	movlw	1
 15506  1236  0140               	movlb	0	; select bank0
 15507  1237  00A0               	movwf	??_colorInc
 15508  1238  0820               	movf	??_colorInc,w
 15509  1239  0141               	movlb	1	; select bank1
 15510  123A  07CB               	addwf	(_manualColor^(0+128)+1),f
 15511  123B  0008               	return
 15512  123C                     l10321:	
 15513                           
 15514                           ;led.c: 230:             if(!(manualColor.green > 254))
 15515  123C  0141               	movlb	1	; select bank1
 15516  123D  0A4C               	incf	(_manualColor^(0+128)+2),w
 15517  123E  1903               	btfsc	3,2
 15518  123F  0008               	return
 15519                           
 15520                           ;led.c: 231:             manualColor.green++;
 15521  1240  3001               	movlw	1
 15522  1241  0140               	movlb	0	; select bank0
 15523  1242  00A0               	movwf	??_colorInc
 15524  1243  0820               	movf	??_colorInc,w
 15525  1244  0141               	movlb	1	; select bank1
 15526  1245  07CC               	addwf	(_manualColor^(0+128)+2),f
 15527  1246  0008               	return
 15528  1247                     l10325:	
 15529                           
 15530                           ;led.c: 235:             if(!(manualColor.blue > 254))
 15531  1247  0141               	movlb	1	; select bank1
 15532  1248  0A4D               	incf	(_manualColor^(0+128)+3),w
 15533  1249  1903               	btfsc	3,2
 15534  124A  0008               	return
 15535                           
 15536                           ;led.c: 236:             manualColor.blue++;
 15537  124B  3001               	movlw	1
 15538  124C  0140               	movlb	0	; select bank0
 15539  124D  00A0               	movwf	??_colorInc
 15540  124E  0820               	movf	??_colorInc,w
 15541  124F  0141               	movlb	1	; select bank1
 15542  1250  07CD               	addwf	(_manualColor^(0+128)+3),f
 15543  1251  0008               	return
 15544  1252                     l10329:	
 15545                           
 15546                           ;led.c: 240:             if(!(manualColor.white > 254))
 15547  1252  0141               	movlb	1	; select bank1
 15548  1253  0A4A               	incf	_manualColor^(0+128),w
 15549  1254  1903               	btfsc	3,2
 15550  1255  0008               	return
 15551                           
 15552                           ;led.c: 241:             manualColor.white++;
 15553  1256  3001               	movlw	1
 15554  1257  0140               	movlb	0	; select bank0
 15555  1258  00A0               	movwf	??_colorInc
 15556  1259  0820               	movf	??_colorInc,w
 15557  125A  0141               	movlb	1	; select bank1
 15558  125B  07CA               	addwf	_manualColor^(0+128),f
 15559  125C  0008               	return
 15560  125D                     l10335:	
 15561  125D  319B  23B3  3192   	fcall	_getCurrentMenu
 15562  1260  0140               	movlb	0	; select bank0
 15563  1261  00A0               	movwf	??_colorInc
 15564  1262  01A1               	clrf	??_colorInc+1
 15565                           
 15566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15567                           ; Switch size 1, requested type "simple"
 15568                           ; Number of cases is 1, Range of values is 0 to 0
 15569                           ; switch strategies available:
 15570                           ; Name         Instructions Cycles
 15571                           ; simple_byte            4     3 (average)
 15572                           ; direct_byte            8     6 (fixed)
 15573                           ; jumptable            260     6 (fixed)
 15574                           ;	Chosen strategy is simple_byte
 15575  1263  0821               	movf	??_colorInc+1,w
 15576  1264  3A00               	xorlw	0	; case 0
 15577  1265  1903               	skipnz
 15578  1266  2A68               	goto	l12519
 15579  1267  2A76               	goto	l1507
 15580  1268                     l12519:	
 15581                           
 15582                           ; Switch size 1, requested type "simple"
 15583                           ; Number of cases is 4, Range of values is 13 to 16
 15584                           ; switch strategies available:
 15585                           ; Name         Instructions Cycles
 15586                           ; simple_byte           13     7 (average)
 15587                           ; direct_byte           17     9 (fixed)
 15588                           ; jumptable            263     9 (fixed)
 15589                           ;	Chosen strategy is simple_byte
 15590  1268  0820               	movf	??_colorInc,w
 15591  1269  3A0D               	xorlw	13	; case 13
 15592  126A  1903               	skipnz
 15593  126B  2A31               	goto	l10317
 15594  126C  3A03               	xorlw	3	; case 14
 15595  126D  1903               	skipnz
 15596  126E  2A3C               	goto	l10321
 15597  126F  3A01               	xorlw	1	; case 15
 15598  1270  1903               	skipnz
 15599  1271  2A47               	goto	l10325
 15600  1272  3A1F               	xorlw	31	; case 16
 15601  1273  1903               	skipnz
 15602  1274  2A52               	goto	l10329
 15603  1275  2A76               	goto	l1507
 15604  1276                     l1507:	
 15605  1276  0008               	return
 15606  1277                     __end_of_colorInc:	
 15607                           
 15608                           	psect	text34
 15609  1174                     __ptext34:	
 15610 ;; *************** function _colorDec *****************
 15611 ;; Defined at:
 15612 ;;		line 248 in file "led.c"
 15613 ;; Parameters:    Size  Location     Type
 15614 ;;		None
 15615 ;; Auto vars:     Size  Location     Type
 15616 ;;		None
 15617 ;; Return value:  Size  Location     Type
 15618 ;;                  1    wreg      void 
 15619 ;; Registers used:
 15620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15621 ;; Tracked objects:
 15622 ;;		On entry : 0/0
 15623 ;;		On exit  : 0/0
 15624 ;;		Unchanged: 0/0
 15625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15628 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15629 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15630 ;;Total ram usage:        2 bytes
 15631 ;; Hardware stack levels used:    1
 15632 ;; Hardware stack levels required when called:    5
 15633 ;; This function calls:
 15634 ;;		_getCurrentMenu
 15635 ;; This function is called by:
 15636 ;;		_CONTROL_MANUAL
 15637 ;; This function uses a non-reentrant model
 15638 ;;
 15639                           
 15640                           
 15641                           ;psect for function _colorDec
 15642  1174                     _colorDec:	
 15643                           
 15644                           ;led.c: 250:     switch(getCurrentMenu()){
 15645                           
 15646                           ;incstack = 0
 15647                           ; Regs used in _colorDec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15648  1174  2991               	goto	l10361
 15649  1175                     l10343:	
 15650                           
 15651                           ;led.c: 253:             if(!(manualColor.red < 1))
 15652  1175  0141               	movlb	1	; select bank1
 15653  1176  084B               	movf	(_manualColor^(0+128)+1),w
 15654  1177  1903               	btfsc	3,2
 15655  1178  0008               	return
 15656                           
 15657                           ;led.c: 254:             manualColor.red--;
 15658  1179  3001               	movlw	1
 15659  117A  02CB               	subwf	(_manualColor^(0+128)+1),f
 15660  117B  0008               	return
 15661  117C                     l10347:	
 15662                           
 15663                           ;led.c: 258:             if(!(manualColor.green < 1))
 15664  117C  0141               	movlb	1	; select bank1
 15665  117D  084C               	movf	(_manualColor^(0+128)+2),w
 15666  117E  1903               	btfsc	3,2
 15667  117F  0008               	return
 15668                           
 15669                           ;led.c: 259:             manualColor.green--;
 15670  1180  3001               	movlw	1
 15671  1181  02CC               	subwf	(_manualColor^(0+128)+2),f
 15672  1182  0008               	return
 15673  1183                     l10351:	
 15674                           
 15675                           ;led.c: 263:             if(!(manualColor.blue < 1))
 15676  1183  0141               	movlb	1	; select bank1
 15677  1184  084D               	movf	(_manualColor^(0+128)+3),w
 15678  1185  1903               	btfsc	3,2
 15679  1186  0008               	return
 15680                           
 15681                           ;led.c: 264:             manualColor.blue--;
 15682  1187  3001               	movlw	1
 15683  1188  02CD               	subwf	(_manualColor^(0+128)+3),f
 15684  1189  0008               	return
 15685  118A                     l10355:	
 15686                           
 15687                           ;led.c: 268:             if(!(manualColor.white < 1))
 15688  118A  0141               	movlb	1	; select bank1
 15689  118B  084A               	movf	_manualColor^(0+128),w
 15690  118C  1903               	btfsc	3,2
 15691  118D  0008               	return
 15692                           
 15693                           ;led.c: 269:             manualColor.white--;
 15694  118E  3001               	movlw	1
 15695  118F  02CA               	subwf	_manualColor^(0+128),f
 15696  1190  0008               	return
 15697  1191                     l10361:	
 15698  1191  319B  23B3  3191   	fcall	_getCurrentMenu
 15699  1194  0140               	movlb	0	; select bank0
 15700  1195  00A0               	movwf	??_colorDec
 15701  1196  01A1               	clrf	??_colorDec+1
 15702                           
 15703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15704                           ; Switch size 1, requested type "simple"
 15705                           ; Number of cases is 1, Range of values is 0 to 0
 15706                           ; switch strategies available:
 15707                           ; Name         Instructions Cycles
 15708                           ; simple_byte            4     3 (average)
 15709                           ; direct_byte            8     6 (fixed)
 15710                           ; jumptable            260     6 (fixed)
 15711                           ;	Chosen strategy is simple_byte
 15712  1197  0821               	movf	??_colorDec+1,w
 15713  1198  3A00               	xorlw	0	; case 0
 15714  1199  1903               	skipnz
 15715  119A  299C               	goto	l12521
 15716  119B  29AA               	goto	l1520
 15717  119C                     l12521:	
 15718                           
 15719                           ; Switch size 1, requested type "simple"
 15720                           ; Number of cases is 4, Range of values is 13 to 16
 15721                           ; switch strategies available:
 15722                           ; Name         Instructions Cycles
 15723                           ; simple_byte           13     7 (average)
 15724                           ; direct_byte           17     9 (fixed)
 15725                           ; jumptable            263     9 (fixed)
 15726                           ;	Chosen strategy is simple_byte
 15727  119C  0820               	movf	??_colorDec,w
 15728  119D  3A0D               	xorlw	13	; case 13
 15729  119E  1903               	skipnz
 15730  119F  2975               	goto	l10343
 15731  11A0  3A03               	xorlw	3	; case 14
 15732  11A1  1903               	skipnz
 15733  11A2  297C               	goto	l10347
 15734  11A3  3A01               	xorlw	1	; case 15
 15735  11A4  1903               	skipnz
 15736  11A5  2983               	goto	l10351
 15737  11A6  3A1F               	xorlw	31	; case 16
 15738  11A7  1903               	skipnz
 15739  11A8  298A               	goto	l10355
 15740  11A9  29AA               	goto	l1520
 15741  11AA                     l1520:	
 15742  11AA  0008               	return
 15743  11AB                     __end_of_colorDec:	
 15744                           
 15745                           	psect	text35
 15746  1BB3                     __ptext35:	
 15747 ;; *************** function _getCurrentMenu *****************
 15748 ;; Defined at:
 15749 ;;		line 469 in file "controller.c"
 15750 ;; Parameters:    Size  Location     Type
 15751 ;;		None
 15752 ;; Auto vars:     Size  Location     Type
 15753 ;;		None
 15754 ;; Return value:  Size  Location     Type
 15755 ;;                  1    wreg      enum E11188
 15756 ;; Registers used:
 15757 ;;		wreg, fsr1l, fsr1h
 15758 ;; Tracked objects:
 15759 ;;		On entry : 0/0
 15760 ;;		On exit  : 0/0
 15761 ;;		Unchanged: 0/0
 15762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15767 ;;Total ram usage:        0 bytes
 15768 ;; Hardware stack levels used:    1
 15769 ;; Hardware stack levels required when called:    4
 15770 ;; This function calls:
 15771 ;;		Nothing
 15772 ;; This function is called by:
 15773 ;;		_colorInc
 15774 ;;		_colorDec
 15775 ;; This function uses a non-reentrant model
 15776 ;;
 15777                           
 15778                           
 15779                           ;psect for function _getCurrentMenu
 15780  1BB3                     _getCurrentMenu:	
 15781                           
 15782                           ;controller.c: 470:     return currentMenu->name;
 15783                           
 15784                           ;incstack = 0
 15785                           ; Regs used in _getCurrentMenu: [wregfsr1]
 15786  1BB3  0141               	movlb	1	; select bank1
 15787  1BB4  0852               	movf	_currentMenu^(0+128),w
 15788  1BB5  0086               	movwf	6
 15789  1BB6  0853               	movf	(_currentMenu+1)^(0+128),w
 15790  1BB7  0087               	movwf	7
 15791  1BB8  3147               	addfsr 1,7
 15792  1BB9  0801               	movf	1,w
 15793  1BBA  0008               	return
 15794  1BBB                     __end_of_getCurrentMenu:	
 15795                           
 15796                           	psect	text36
 15797  1C5A                     __ptext36:	
 15798 ;; *************** function _LED_task_MANUAL *****************
 15799 ;; Defined at:
 15800 ;;		line 95 in file "led.c"
 15801 ;; Parameters:    Size  Location     Type
 15802 ;;		None
 15803 ;; Auto vars:     Size  Location     Type
 15804 ;;		None
 15805 ;; Return value:  Size  Location     Type
 15806 ;;                  1    wreg      void 
 15807 ;; Registers used:
 15808 ;;		wreg, status,2, status,0, pclath, cstack
 15809 ;; Tracked objects:
 15810 ;;		On entry : 0/0
 15811 ;;		On exit  : 0/0
 15812 ;;		Unchanged: 0/0
 15813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15818 ;;Total ram usage:        0 bytes
 15819 ;; Hardware stack levels used:    1
 15820 ;; Hardware stack levels required when called:    7
 15821 ;; This function calls:
 15822 ;;		_LED_setColor
 15823 ;; This function is called by:
 15824 ;;		_CONTROL_MANUAL
 15825 ;;		_LED_task
 15826 ;; This function uses a non-reentrant model
 15827 ;;
 15828                           
 15829                           
 15830                           ;psect for function _LED_task_MANUAL
 15831  1C5A                     _LED_task_MANUAL:	
 15832                           
 15833                           ;led.c: 97:     LED_setColor(manualColor);
 15834                           
 15835                           ;incstack = 0
 15836                           ; Regs used in _LED_task_MANUAL: [wreg+status,2+status,0+pclath+cstack]
 15837  1C5A  0141               	movlb	1	; select bank1
 15838  1C5B  084D               	movf	(_manualColor+3)^(0+128),w
 15839  1C5C  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 15840  1C5D  084C               	movf	(_manualColor+2)^(0+128),w
 15841  1C5E  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 15842  1C5F  084B               	movf	(_manualColor+1)^(0+128),w
 15843  1C60  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 15844  1C61  084A               	movf	_manualColor^(0+128),w
 15845  1C62  00B6               	movwf	LED_setColor@input^(0+128)
 15846  1C63  3186  2610         	fcall	_LED_setColor
 15847  1C65  0008               	return
 15848  1C66                     __end_of_LED_task_MANUAL:	
 15849                           
 15850                           	psect	text37
 15851  07F0                     __ptext37:	
 15852 ;; *************** function _address_inc *****************
 15853 ;; Defined at:
 15854 ;;		line 29 in file "dmx.c"
 15855 ;; Parameters:    Size  Location     Type
 15856 ;;		None
 15857 ;; Auto vars:     Size  Location     Type
 15858 ;;		None
 15859 ;; Return value:  Size  Location     Type
 15860 ;;                  1    wreg      void 
 15861 ;; Registers used:
 15862 ;;		wreg, status,2, status,0
 15863 ;; Tracked objects:
 15864 ;;		On entry : 0/0
 15865 ;;		On exit  : 0/0
 15866 ;;		Unchanged: 0/0
 15867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15872 ;;Total ram usage:        0 bytes
 15873 ;; Hardware stack levels used:    1
 15874 ;; Hardware stack levels required when called:    4
 15875 ;; This function calls:
 15876 ;;		Nothing
 15877 ;; This function is called by:
 15878 ;;		_CONTROL_DMX
 15879 ;; This function uses a non-reentrant model
 15880 ;;
 15881                           
 15882                           
 15883                           ;psect for function _address_inc
 15884  07F0                     _address_inc:	
 15885                           
 15886                           ;dmx.c: 31:     if(address == 512)
 15887                           
 15888                           ;incstack = 0
 15889                           ; Regs used in _address_inc: [wreg+status,2+status,0]
 15890  07F0  3002               	movlw	2
 15891  07F1  0141               	movlb	1	; select bank1
 15892  07F2  066B               	xorwf	(_address+1)^(0+128),w
 15893  07F3  046A               	iorwf	_address^(0+128),w
 15894  07F4  1D03               	btfss	3,2
 15895  07F5  2FFB               	goto	l10199
 15896                           
 15897                           ;dmx.c: 32:         address = 1;
 15898  07F6  3001               	movlw	1
 15899  07F7  00EA               	movwf	_address^(0+128)
 15900  07F8  3000               	movlw	0
 15901  07F9  00EB               	movwf	(_address^(0+128)+1)
 15902  07FA  0008               	return
 15903  07FB                     l10199:	
 15904                           
 15905                           ;dmx.c: 34:         address++;
 15906  07FB  3001               	movlw	1
 15907  07FC  07EA               	addwf	_address^(0+128),f
 15908  07FD  3000               	movlw	0
 15909  07FE  3DEB               	addwfc	(_address+1)^(0+128),f
 15910  07FF  0008               	return
 15911  0800                     __end_of_address_inc:	
 15912                           
 15913                           	psect	text38
 15914  1CB5                     __ptext38:	
 15915 ;; *************** function _address_dec *****************
 15916 ;; Defined at:
 15917 ;;		line 43 in file "dmx.c"
 15918 ;; Parameters:    Size  Location     Type
 15919 ;;		None
 15920 ;; Auto vars:     Size  Location     Type
 15921 ;;		None
 15922 ;; Return value:  Size  Location     Type
 15923 ;;                  1    wreg      void 
 15924 ;; Registers used:
 15925 ;;		wreg, status,2, status,0
 15926 ;; Tracked objects:
 15927 ;;		On entry : 0/0
 15928 ;;		On exit  : 0/0
 15929 ;;		Unchanged: 0/0
 15930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15935 ;;Total ram usage:        0 bytes
 15936 ;; Hardware stack levels used:    1
 15937 ;; Hardware stack levels required when called:    4
 15938 ;; This function calls:
 15939 ;;		Nothing
 15940 ;; This function is called by:
 15941 ;;		_CONTROL_DMX
 15942 ;; This function uses a non-reentrant model
 15943 ;;
 15944                           
 15945                           
 15946                           ;psect for function _address_dec
 15947  1CB5                     _address_dec:	
 15948                           
 15949                           ;dmx.c: 45:     if(address == 1)
 15950                           
 15951                           ;incstack = 0
 15952                           ; Regs used in _address_dec: [wreg+status,2+status,0]
 15953  1CB5  0141               	movlb	1	; select bank1
 15954  1CB6  036A               	decf	_address^(0+128),w
 15955  1CB7  046B               	iorwf	(_address+1)^(0+128),w
 15956  1CB8  1D03               	btfss	3,2
 15957  1CB9  2CBF               	goto	l10205
 15958                           
 15959                           ;dmx.c: 46:         address = 512;
 15960  1CBA  3000               	movlw	0
 15961  1CBB  00EA               	movwf	_address^(0+128)
 15962  1CBC  3002               	movlw	2
 15963  1CBD  00EB               	movwf	(_address^(0+128)+1)
 15964  1CBE  0008               	return
 15965  1CBF                     l10205:	
 15966                           
 15967                           ;dmx.c: 48:         address--;
 15968  1CBF  3001               	movlw	1
 15969  1CC0  02EA               	subwf	_address^(0+128),f
 15970  1CC1  3000               	movlw	0
 15971  1CC2  3BEB               	subwfb	(_address+1)^(0+128),f
 15972  1CC3  0008               	return
 15973  1CC4                     __end_of_address_dec:	
 15974                           
 15975                           	psect	text39
 15976  1601                     __ptext39:	
 15977 ;; *************** function _TM1650_fastPrintNum_3digit *****************
 15978 ;; Defined at:
 15979 ;;		line 120 in file "tm1650.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;  num             2   22[BANK0 ] unsigned short 
 15982 ;; Auto vars:     Size  Location     Type
 15983 ;;		None
 15984 ;; Return value:  Size  Location     Type
 15985 ;;                  1    wreg      void 
 15986 ;; Registers used:
 15987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15988 ;; Tracked objects:
 15989 ;;		On entry : 0/0
 15990 ;;		On exit  : 0/0
 15991 ;;		Unchanged: 0/0
 15992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15993 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15995 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15996 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15997 ;;Total ram usage:        3 bytes
 15998 ;; Hardware stack levels used:    1
 15999 ;; Hardware stack levels required when called:    8
 16000 ;; This function calls:
 16001 ;;		___lwdiv
 16002 ;;		___lwmod
 16003 ;;		_writeData
 16004 ;; This function is called by:
 16005 ;;		_CONTROL_DMX
 16006 ;;		_CONTROL_MANUAL
 16007 ;; This function uses a non-reentrant model
 16008 ;;
 16009                           
 16010                           
 16011                           ;psect for function _TM1650_fastPrintNum_3digit
 16012  1601                     _TM1650_fastPrintNum_3digit:	
 16013                           
 16014                           ;tm1650.c: 122:     if(num > 999){
 16015                           
 16016                           ;incstack = 0
 16017                           ; Regs used in _TM1650_fastPrintNum_3digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16018  1601  3003               	movlw	3
 16019  1602  0140               	movlb	0	; select bank0
 16020  1603  0237               	subwf	TM1650_fastPrintNum_3digit@num+1,w
 16021  1604  30E8               	movlw	232
 16022  1605  1903               	skipnz
 16023  1606  0236               	subwf	TM1650_fastPrintNum_3digit@num,w
 16024  1607  1C03               	skipc
 16025  1608  2E2C               	goto	l10193
 16026                           
 16027                           ;tm1650.c: 123:         writeData(0x34, 0x79);
 16028  1609  3079               	movlw	121
 16029  160A  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16030  160B  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16031  160C  00B0               	movwf	writeData@data
 16032  160D  3034               	movlw	52
 16033  160E  319D  25EE  3196   	fcall	_writeData
 16034                           
 16035                           ;tm1650.c: 124:         writeData(0x35, 0x79);
 16036  1611  3079               	movlw	121
 16037  1612  0140               	movlb	0	; select bank0
 16038  1613  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16039  1614  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16040  1615  00B0               	movwf	writeData@data
 16041  1616  3035               	movlw	53
 16042  1617  319D  25EE  3196   	fcall	_writeData
 16043                           
 16044                           ;tm1650.c: 125:         writeData(0x36, 0x79);
 16045  161A  3079               	movlw	121
 16046  161B  0140               	movlb	0	; select bank0
 16047  161C  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16048  161D  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16049  161E  00B0               	movwf	writeData@data
 16050  161F  3036               	movlw	54
 16051  1620  319D  25EE  3196   	fcall	_writeData
 16052                           
 16053                           ;tm1650.c: 126:         writeData(0x37, 0x79);
 16054  1623  3079               	movlw	121
 16055  1624  0140               	movlb	0	; select bank0
 16056  1625  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16057  1626  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16058  1627  00B0               	movwf	writeData@data
 16059  1628  3037               	movlw	55
 16060  1629  319D  25EE         	fcall	_writeData
 16061  162B  0008               	return
 16062  162C                     l10193:	
 16063                           
 16064                           ;tm1650.c: 130:     writeData(0x37, charTable[(num % 10) + 16]);
 16065  162C  300A               	movlw	10
 16066  162D  00A8               	movwf	___lwmod@divisor
 16067  162E  3000               	movlw	0
 16068  162F  00A9               	movwf	___lwmod@divisor+1
 16069  1630  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 16070  1631  00AB               	movwf	___lwmod@dividend+1
 16071  1632  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 16072  1633  00AA               	movwf	___lwmod@dividend
 16073  1634  319F  27A4  3196   	fcall	___lwmod
 16074  1637  0140               	movlb	0	; select bank0
 16075  1638  0829               	movf	?___lwmod+1,w
 16076  1639  0085               	movwf	5
 16077  163A  0828               	movf	?___lwmod,w
 16078  163B  0084               	movwf	4
 16079  163C  3010               	movlw	low ((_charTable+16)| (0+32768))
 16080  163D  0784               	addwf	4,f
 16081  163E  3098               	movlw	high ((_charTable+16)| (0+32768))
 16082  163F  3D85               	addwfc	5,f
 16083  1640  0800               	movf	0,w	;code access
 16084  1641  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16085  1642  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16086  1643  00B0               	movwf	writeData@data
 16087  1644  3037               	movlw	55
 16088  1645  319D  25EE  3196   	fcall	_writeData
 16089                           
 16090                           ;tm1650.c: 131:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 16091  1648  300A               	movlw	10
 16092  1649  0140               	movlb	0	; select bank0
 16093  164A  00A8               	movwf	___lwmod@divisor
 16094  164B  3000               	movlw	0
 16095  164C  00A9               	movwf	___lwmod@divisor+1
 16096  164D  300A               	movlw	10
 16097  164E  00A0               	movwf	___lwdiv@divisor
 16098  164F  3000               	movlw	0
 16099  1650  00A1               	movwf	___lwdiv@divisor+1
 16100  1651  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 16101  1652  00A3               	movwf	___lwdiv@dividend+1
 16102  1653  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 16103  1654  00A2               	movwf	___lwdiv@dividend
 16104  1655  3190  20D2  3196   	fcall	___lwdiv
 16105  1658  0140               	movlb	0	; select bank0
 16106  1659  0821               	movf	?___lwdiv+1,w
 16107  165A  00AB               	movwf	___lwmod@dividend+1
 16108  165B  0820               	movf	?___lwdiv,w
 16109  165C  00AA               	movwf	___lwmod@dividend
 16110  165D  319F  27A4  3196   	fcall	___lwmod
 16111  1660  0140               	movlb	0	; select bank0
 16112  1661  0829               	movf	?___lwmod+1,w
 16113  1662  0085               	movwf	5
 16114  1663  0828               	movf	?___lwmod,w
 16115  1664  0084               	movwf	4
 16116  1665  3010               	movlw	low ((_charTable+16)| (0+32768))
 16117  1666  0784               	addwf	4,f
 16118  1667  3098               	movlw	high ((_charTable+16)| (0+32768))
 16119  1668  3D85               	addwfc	5,f
 16120  1669  0800               	movf	0,w	;code access
 16121  166A  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16122  166B  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16123  166C  00B0               	movwf	writeData@data
 16124  166D  3036               	movlw	54
 16125  166E  319D  25EE  3196   	fcall	_writeData
 16126                           
 16127                           ;tm1650.c: 132:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 16128  1671  300A               	movlw	10
 16129  1672  0140               	movlb	0	; select bank0
 16130  1673  00A8               	movwf	___lwmod@divisor
 16131  1674  3000               	movlw	0
 16132  1675  00A9               	movwf	___lwmod@divisor+1
 16133  1676  3064               	movlw	100
 16134  1677  00A0               	movwf	___lwdiv@divisor
 16135  1678  3000               	movlw	0
 16136  1679  00A1               	movwf	___lwdiv@divisor+1
 16137  167A  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 16138  167B  00A3               	movwf	___lwdiv@dividend+1
 16139  167C  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 16140  167D  00A2               	movwf	___lwdiv@dividend
 16141  167E  3190  20D2  3196   	fcall	___lwdiv
 16142  1681  0140               	movlb	0	; select bank0
 16143  1682  0821               	movf	?___lwdiv+1,w
 16144  1683  00AB               	movwf	___lwmod@dividend+1
 16145  1684  0820               	movf	?___lwdiv,w
 16146  1685  00AA               	movwf	___lwmod@dividend
 16147  1686  319F  27A4  3196   	fcall	___lwmod
 16148  1689  0140               	movlb	0	; select bank0
 16149  168A  0829               	movf	?___lwmod+1,w
 16150  168B  0085               	movwf	5
 16151  168C  0828               	movf	?___lwmod,w
 16152  168D  0084               	movwf	4
 16153  168E  3010               	movlw	low ((_charTable+16)| (0+32768))
 16154  168F  0784               	addwf	4,f
 16155  1690  3098               	movlw	high ((_charTable+16)| (0+32768))
 16156  1691  3D85               	addwfc	5,f
 16157  1692  0800               	movf	0,w	;code access
 16158  1693  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 16159  1694  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 16160  1695  00B0               	movwf	writeData@data
 16161  1696  3035               	movlw	53
 16162  1697  319D  25EE         	fcall	_writeData
 16163  1699  0008               	return
 16164  169A                     __end_of_TM1650_fastPrintNum_3digit:	
 16165                           
 16166                           	psect	text40
 16167  1FA4                     __ptext40:	
 16168 ;; *************** function ___lwmod *****************
 16169 ;; Defined at:
 16170 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 16171 ;; Parameters:    Size  Location     Type
 16172 ;;  divisor         2    8[BANK0 ] unsigned int 
 16173 ;;  dividend        2   10[BANK0 ] unsigned int 
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;  counter         1   13[BANK0 ] unsigned char 
 16176 ;; Return value:  Size  Location     Type
 16177 ;;                  2    8[BANK0 ] unsigned int 
 16178 ;; Registers used:
 16179 ;;		wreg, status,2, status,0
 16180 ;; Tracked objects:
 16181 ;;		On entry : 0/0
 16182 ;;		On exit  : 0/0
 16183 ;;		Unchanged: 0/0
 16184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16185 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16187 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16188 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16189 ;;Total ram usage:        6 bytes
 16190 ;; Hardware stack levels used:    1
 16191 ;; Hardware stack levels required when called:    4
 16192 ;; This function calls:
 16193 ;;		Nothing
 16194 ;; This function is called by:
 16195 ;;		_TM1650_fastPrintNum
 16196 ;;		_TM1650_fastPrintNum_3digit
 16197 ;; This function uses a non-reentrant model
 16198 ;;
 16199                           
 16200                           
 16201                           ;psect for function ___lwmod
 16202  1FA4                     ___lwmod:	
 16203                           
 16204                           ;incstack = 0
 16205                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16206  1FA4  0140               	movlb	0	; select bank0
 16207  1FA5  0828               	movf	___lwmod@divisor,w
 16208  1FA6  0429               	iorwf	___lwmod@divisor+1,w
 16209  1FA7  1903               	btfsc	3,2
 16210  1FA8  2FCC               	goto	l10163
 16211  1FA9  01AD               	clrf	___lwmod@counter
 16212  1FAA  0AAD               	incf	___lwmod@counter,f
 16213  1FAB                     l10153:	
 16214  1FAB  1BA9               	btfsc	___lwmod@divisor+1,7
 16215  1FAC  2FB7               	goto	l10155
 16216  1FAD  3001               	movlw	1
 16217  1FAE                     u10435:	
 16218  1FAE  35A8               	lslf	___lwmod@divisor,f
 16219  1FAF  0DA9               	rlf	___lwmod@divisor+1,f
 16220  1FB0  0B89               	decfsz	9,f
 16221  1FB1  2FAE               	goto	u10435
 16222  1FB2  3001               	movlw	1
 16223  1FB3  00AC               	movwf	??___lwmod
 16224  1FB4  082C               	movf	??___lwmod,w
 16225  1FB5  07AD               	addwf	___lwmod@counter,f
 16226  1FB6  2FAB               	goto	l10153
 16227  1FB7                     l10155:	
 16228  1FB7  0829               	movf	___lwmod@divisor+1,w
 16229  1FB8  022B               	subwf	___lwmod@dividend+1,w
 16230  1FB9  1D03               	skipz
 16231  1FBA  2FBD               	goto	u10455
 16232  1FBB  0828               	movf	___lwmod@divisor,w
 16233  1FBC  022A               	subwf	___lwmod@dividend,w
 16234  1FBD                     u10455:	
 16235  1FBD  1C03               	skipc
 16236  1FBE  2FC3               	goto	l10159
 16237  1FBF  0828               	movf	___lwmod@divisor,w
 16238  1FC0  02AA               	subwf	___lwmod@dividend,f
 16239  1FC1  0829               	movf	___lwmod@divisor+1,w
 16240  1FC2  3BAB               	subwfb	___lwmod@dividend+1,f
 16241  1FC3                     l10159:	
 16242  1FC3  3001               	movlw	1
 16243  1FC4                     u10465:	
 16244  1FC4  36A9               	lsrf	___lwmod@divisor+1,f
 16245  1FC5  0CA8               	rrf	___lwmod@divisor,f
 16246  1FC6  0B89               	decfsz	9,f
 16247  1FC7  2FC4               	goto	u10465
 16248  1FC8  3001               	movlw	1
 16249  1FC9  02AD               	subwf	___lwmod@counter,f
 16250  1FCA  1D03               	btfss	3,2
 16251  1FCB  2FB7               	goto	l10155
 16252  1FCC                     l10163:	
 16253  1FCC  082B               	movf	___lwmod@dividend+1,w
 16254  1FCD  00A9               	movwf	?___lwmod+1
 16255  1FCE  082A               	movf	___lwmod@dividend,w
 16256  1FCF  00A8               	movwf	?___lwmod
 16257  1FD0  0008               	return
 16258  1FD1                     __end_of___lwmod:	
 16259                           
 16260                           	psect	text41
 16261  1B89                     __ptext41:	
 16262 ;; *************** function _DMX_getAddress *****************
 16263 ;; Defined at:
 16264 ;;		line 73 in file "dmx.c"
 16265 ;; Parameters:    Size  Location     Type
 16266 ;;		None
 16267 ;; Auto vars:     Size  Location     Type
 16268 ;;		None
 16269 ;; Return value:  Size  Location     Type
 16270 ;;                  1    wreg      unsigned char 
 16271 ;; Registers used:
 16272 ;;		wreg
 16273 ;; Tracked objects:
 16274 ;;		On entry : 0/0
 16275 ;;		On exit  : 0/0
 16276 ;;		Unchanged: 0/0
 16277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16282 ;;Total ram usage:        0 bytes
 16283 ;; Hardware stack levels used:    1
 16284 ;; Hardware stack levels required when called:    4
 16285 ;; This function calls:
 16286 ;;		Nothing
 16287 ;; This function is called by:
 16288 ;;		_CONTROL_DMX
 16289 ;;		_LED_task_DMX
 16290 ;; This function uses a non-reentrant model
 16291 ;;
 16292                           
 16293                           
 16294                           ;psect for function _DMX_getAddress
 16295  1B89                     _DMX_getAddress:	
 16296                           
 16297                           ;dmx.c: 74:     return address;
 16298                           
 16299                           ;incstack = 0
 16300                           ; Regs used in _DMX_getAddress: [wreg]
 16301  1B89  0141               	movlb	1	; select bank1
 16302  1B8A  086A               	movf	_address^(0+128),w
 16303  1B8B  0008               	return
 16304  1B8C                     __end_of_DMX_getAddress:	
 16305                           
 16306                           	psect	text42
 16307  1CA6                     __ptext42:	
 16308 ;; *************** function _BUTTONS_isHeld *****************
 16309 ;; Defined at:
 16310 ;;		line 106 in file "buttons.c"
 16311 ;; Parameters:    Size  Location     Type
 16312 ;;  button          1    wreg     PTR struct .
 16313 ;;		 -> buttons(32), NULL(0), 
 16314 ;; Auto vars:     Size  Location     Type
 16315 ;;  button          1    0[BANK0 ] PTR struct .
 16316 ;;		 -> buttons(32), NULL(0), 
 16317 ;; Return value:  Size  Location     Type
 16318 ;;                  1    wreg      _Bool 
 16319 ;; Registers used:
 16320 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16321 ;; Tracked objects:
 16322 ;;		On entry : 0/0
 16323 ;;		On exit  : 0/0
 16324 ;;		Unchanged: 0/0
 16325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16329 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16330 ;;Total ram usage:        1 bytes
 16331 ;; Hardware stack levels used:    1
 16332 ;; Hardware stack levels required when called:    4
 16333 ;; This function calls:
 16334 ;;		Nothing
 16335 ;; This function is called by:
 16336 ;;		_CONTROL_DMX
 16337 ;;		_CONTROL_MANUAL
 16338 ;; This function uses a non-reentrant model
 16339 ;;
 16340                           
 16341                           
 16342                           ;psect for function _BUTTONS_isHeld
 16343  1CA6                     _BUTTONS_isHeld:	
 16344                           
 16345                           ;incstack = 0
 16346                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 16347                           ;BUTTONS_isHeld@button stored from wreg
 16348  1CA6  0140               	movlb	0	; select bank0
 16349  1CA7  00A0               	movwf	BUTTONS_isHeld@button
 16350                           
 16351                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 16352  1CA8  0820               	movf	BUTTONS_isHeld@button,w
 16353  1CA9  3E07               	addlw	7
 16354  1CAA  0086               	movwf	6
 16355  1CAB  3003               	movlw	3	; select bank6/7
 16356  1CAC  0087               	movwf	7
 16357  1CAD  3003               	movlw	3
 16358  1CAE  0601               	xorwf	1,w
 16359  1CAF  1D03               	btfss	3,2
 16360  1CB0  2CB3               	goto	l10173
 16361                           
 16362                           ;buttons.c: 108:         return 1;
 16363  1CB1  3001               	movlw	1
 16364  1CB2  0008               	return
 16365  1CB3                     l10173:	
 16366                           
 16367                           ;buttons.c: 111:     return 0;
 16368  1CB3  3000               	movlw	0
 16369  1CB4  0008               	return
 16370  1CB5                     __end_of_BUTTONS_isHeld:	
 16371                           
 16372                           	psect	text43
 16373  1D47                     __ptext43:	
 16374 ;; *************** function _printf *****************
 16375 ;; Defined at:
 16376 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
 16377 ;; Parameters:    Size  Location     Type
 16378 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 16379 ;;		 -> STR_28(6), STR_27(7), STR_26(8), STR_25(9), 
 16380 ;;		 -> STR_24(10), STR_23(9), STR_22(8), STR_21(7), 
 16381 ;;		 -> STR_19(2), STR_18(5), STR_17(3), STR_16(3), 
 16382 ;;		 -> STR_15(3), STR_14(3), STR_13(4), STR_12(4), 
 16383 ;;		 -> STR_11(4), STR_10(4), STR_9(3), STR_8(6), 
 16384 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
 16385 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 16386 ;; Auto vars:     Size  Location     Type
 16387 ;;  ret             2    0        int 
 16388 ;;  ap              1   78[BANK0 ] PTR void [1]
 16389 ;;		 -> ?_printf(2), 
 16390 ;; Return value:  Size  Location     Type
 16391 ;;                  2    0[BANK1 ] int 
 16392 ;; Registers used:
 16393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16394 ;; Tracked objects:
 16395 ;;		On entry : 0/0
 16396 ;;		On exit  : 0/0
 16397 ;;		Unchanged: 0/0
 16398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16399 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16400 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16401 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16402 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16403 ;;Total ram usage:       14 bytes
 16404 ;; Hardware stack levels used:    1
 16405 ;; Hardware stack levels required when called:   16
 16406 ;; This function calls:
 16407 ;;		_vfprintf
 16408 ;; This function is called by:
 16409 ;;		_CONTROLLER_task
 16410 ;;		_CONTROL_DMX
 16411 ;;		_CONTROL_BEAT
 16412 ;;		_CONTROL_MANUAL
 16413 ;;		_TM1650_init
 16414 ;;		_TM1650_scrollPrint
 16415 ;; This function uses a non-reentrant model
 16416 ;;
 16417                           
 16418                           
 16419                           ;psect for function _printf
 16420  1D47                     _printf:	
 16421                           
 16422                           ;incstack = 0
 16423 ;; hardware stack exceeded
 16424                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16425  1D47  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 16426  1D48  0140               	movlb	0	; select bank0
 16427  1D49  00EB               	movwf	??_printf
 16428  1D4A  086B               	movf	??_printf,w
 16429  1D4B  00EE               	movwf	printf@ap
 16430  1D4C  0141               	movlb	1	; select bank1
 16431  1D4D  0821               	movf	(printf@fmt+1)^(0+128),w
 16432  1D4E  0140               	movlb	0	; select bank0
 16433  1D4F  00E4               	movwf	vfprintf@fmt+1
 16434  1D50  0141               	movlb	1	; select bank1
 16435  1D51  0820               	movf	printf@fmt^(0+128),w
 16436  1D52  0140               	movlb	0	; select bank0
 16437  1D53  00E3               	movwf	vfprintf@fmt
 16438  1D54  306E               	movlw	(low (printf@ap| 0))& (0+255)
 16439  1D55  00EB               	movwf	??_printf
 16440  1D56  086B               	movf	??_printf,w
 16441  1D57  00E5               	movwf	vfprintf@ap
 16442  1D58  3000               	movlw	0
 16443  1D59  319F  27D1         	fcall	_vfprintf
 16444  1D5B  0008               	return
 16445  1D5C                     __end_of_printf:	
 16446                           
 16447                           	psect	text44
 16448  1FD1                     __ptext44:	
 16449 ;; *************** function _vfprintf *****************
 16450 ;; Defined at:
 16451 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 16452 ;; Parameters:    Size  Location     Type
 16453 ;;  fp              1    wreg     PTR struct _IO_FILE
 16454 ;;		 -> NULL(0), 
 16455 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
 16456 ;;		 -> STR_28(6), STR_27(7), STR_26(8), STR_25(9), 
 16457 ;;		 -> STR_24(10), STR_23(9), STR_22(8), STR_21(7), 
 16458 ;;		 -> STR_19(2), STR_18(5), STR_17(3), STR_16(3), 
 16459 ;;		 -> STR_15(3), STR_14(3), STR_13(4), STR_12(4), 
 16460 ;;		 -> STR_11(4), STR_10(4), STR_9(3), STR_8(6), 
 16461 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
 16462 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 16463 ;;  ap              1   69[BANK0 ] PTR PTR void 
 16464 ;;		 -> printf@ap(1), 
 16465 ;; Auto vars:     Size  Location     Type
 16466 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
 16467 ;;		 -> NULL(0), 
 16468 ;;  cfmt            2   73[BANK0 ] PTR unsigned char 
 16469 ;;		 -> STR_28(6), STR_27(7), STR_26(8), STR_25(9), 
 16470 ;;		 -> STR_24(10), STR_23(9), STR_22(8), STR_21(7), 
 16471 ;;		 -> STR_19(2), STR_18(5), STR_17(3), STR_16(3), 
 16472 ;;		 -> STR_15(3), STR_14(3), STR_13(4), STR_12(4), 
 16473 ;;		 -> STR_11(4), STR_10(4), STR_9(3), STR_8(6), 
 16474 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
 16475 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 16476 ;; Return value:  Size  Location     Type
 16477 ;;                  2   67[BANK0 ] int 
 16478 ;; Registers used:
 16479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16480 ;; Tracked objects:
 16481 ;;		On entry : 0/0
 16482 ;;		On exit  : 0/0
 16483 ;;		Unchanged: 0/0
 16484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16485 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16486 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16488 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16489 ;;Total ram usage:        8 bytes
 16490 ;; Hardware stack levels used:    1
 16491 ;; Hardware stack levels required when called:   15
 16492 ;; This function calls:
 16493 ;;		_vfpfcnvrt
 16494 ;; This function is called by:
 16495 ;;		_printf
 16496 ;; This function uses a non-reentrant model
 16497 ;;
 16498                           
 16499                           
 16500                           ;psect for function _vfprintf
 16501  1FD1                     _vfprintf:	
 16502                           
 16503                           ;incstack = 0
 16504 ;; hardware stack exceeded
 16505                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16506                           ;vfprintf@fp stored from wreg
 16507  1FD1  0140               	movlb	0	; select bank0
 16508  1FD2  00E8               	movwf	vfprintf@fp
 16509                           
 16510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 16511  1FD3  0864               	movf	vfprintf@fmt+1,w
 16512  1FD4  00EA               	movwf	vfprintf@cfmt+1
 16513  1FD5  0863               	movf	vfprintf@fmt,w
 16514  1FD6  00E9               	movwf	vfprintf@cfmt
 16515                           
 16516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 16517  1FD7  0142               	movlb	2	; select bank2
 16518  1FD8  01A0               	clrf	_nout^(0+256)
 16519  1FD9  01A1               	clrf	(_nout+1)^(0+256)
 16520  1FDA                     l10031:	
 16521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 16522                           
 16523                           
 16524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 16525  1FDA  0140               	movlb	0	; select bank0
 16526  1FDB  0869               	movf	vfprintf@cfmt,w
 16527  1FDC  0084               	movwf	4
 16528  1FDD  086A               	movf	vfprintf@cfmt+1,w
 16529  1FDE  0085               	movwf	5
 16530  1FDF  0012               	moviw fsr0++
 16531  1FE0  1903               	btfsc	3,2
 16532  1FE1  2FF7               	goto	l10033
 16533                           
 16534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 16535  1FE2  3069               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 16536  1FE3  00E6               	movwf	??_vfprintf
 16537  1FE4  0866               	movf	??_vfprintf,w
 16538  1FE5  00DA               	movwf	vfpfcnvrt@fmt
 16539  1FE6  0865               	movf	vfprintf@ap,w
 16540  1FE7  00E7               	movwf	??_vfprintf+1
 16541  1FE8  0867               	movf	??_vfprintf+1,w
 16542  1FE9  00DB               	movwf	vfpfcnvrt@ap
 16543  1FEA  0868               	movf	vfprintf@fp,w
 16544  1FEB  3188  2002  319F   	fcall	_vfpfcnvrt
 16545  1FEE  0140               	movlb	0	; select bank0
 16546  1FEF  085A               	movf	?_vfpfcnvrt,w
 16547  1FF0  0142               	movlb	2	; select bank2
 16548  1FF1  07A0               	addwf	_nout^(0+256),f
 16549  1FF2  0140               	movlb	0	; select bank0
 16550  1FF3  085B               	movf	?_vfpfcnvrt+1,w
 16551  1FF4  0142               	movlb	2	; select bank2
 16552  1FF5  3DA1               	addwfc	(_nout+1)^(0+256),f
 16553  1FF6  2FDA               	goto	l10031
 16554  1FF7                     l10033:	
 16555                           
 16556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 16557  1FF7  0142               	movlb	2	; select bank2
 16558  1FF8  0821               	movf	(_nout+1)^(0+256),w
 16559  1FF9  0140               	movlb	0	; select bank0
 16560  1FFA  00E4               	movwf	?_vfprintf+1
 16561  1FFB  0142               	movlb	2	; select bank2
 16562  1FFC  0820               	movf	_nout^(0+256),w
 16563  1FFD  0140               	movlb	0	; select bank0
 16564  1FFE  00E3               	movwf	?_vfprintf
 16565  1FFF  0008               	return
 16566  2000                     __end_of_vfprintf:	
 16567                           
 16568                           	psect	text45
 16569  0802                     __ptext45:	
 16570 ;; *************** function _vfpfcnvrt *****************
 16571 ;; Defined at:
 16572 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;  fp              1    wreg     PTR struct _IO_FILE
 16575 ;;		 -> NULL(0), 
 16576 ;;  fmt             1   58[BANK0 ] PTR PTR unsigned char 
 16577 ;;		 -> vfprintf@cfmt(2), 
 16578 ;;  ap              1   59[BANK0 ] PTR PTR void 
 16579 ;;		 -> printf@ap(1), 
 16580 ;; Auto vars:     Size  Location     Type
 16581 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
 16582 ;;		 -> NULL(0), 
 16583 ;;  llu             8    0        unsigned long long 
 16584 ;;  ll              8    0        long long 
 16585 ;;  f               4    0        long long 
 16586 ;;  ct              3    0        unsigned char [3]
 16587 ;;  vp              2    0        PTR void 
 16588 ;;  i               2    0        int 
 16589 ;;  done            2    0        int 
 16590 ;;  cp              2    0        PTR unsigned char 
 16591 ;;  c               1   65[BANK0 ] unsigned char 
 16592 ;; Return value:  Size  Location     Type
 16593 ;;                  2   58[BANK0 ] int 
 16594 ;; Registers used:
 16595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16596 ;; Tracked objects:
 16597 ;;		On entry : 0/0
 16598 ;;		On exit  : 0/0
 16599 ;;		Unchanged: 0/0
 16600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16602 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16603 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16604 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16605 ;;Total ram usage:        9 bytes
 16606 ;; Hardware stack levels used:    1
 16607 ;; Hardware stack levels required when called:   14
 16608 ;; This function calls:
 16609 ;;		_ctoa
 16610 ;;		_fputc
 16611 ;; This function is called by:
 16612 ;;		_vfprintf
 16613 ;; This function uses a non-reentrant model
 16614 ;;
 16615                           
 16616                           
 16617                           ;psect for function _vfpfcnvrt
 16618  0802                     _vfpfcnvrt:	
 16619                           
 16620                           ;incstack = 0
 16621 ;; hardware stack exceeded
 16622                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16623                           ;vfpfcnvrt@fp stored from wreg
 16624  0802  0140               	movlb	0	; select bank0
 16625  0803  00E2               	movwf	vfpfcnvrt@fp
 16626                           
 16627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 16628  0804  085A               	movf	vfpfcnvrt@fmt,w
 16629  0805  0086               	movwf	6
 16630  0806  0187               	clrf	7
 16631  0807  3F40               	moviw [0]fsr1
 16632  0808  00DC               	movwf	??_vfpfcnvrt
 16633  0809  3F41               	moviw [1]fsr1
 16634  080A  00DD               	movwf	??_vfpfcnvrt+1
 16635  080B  085C               	movf	??_vfpfcnvrt,w
 16636  080C  0084               	movwf	4
 16637  080D  085D               	movf	??_vfpfcnvrt+1,w
 16638  080E  0085               	movwf	5
 16639  080F  0012               	moviw fsr0++
 16640  0810  3A25               	xorlw	37
 16641  0811  1D03               	btfss	3,2
 16642  0812  2887               	goto	l9965
 16643                           
 16644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 16645  0813  085A               	movf	vfpfcnvrt@fmt,w
 16646  0814  0086               	movwf	6
 16647  0815  0187               	clrf	7
 16648  0816  3001               	movlw	1
 16649  0817  0781               	addwf	1,f
 16650  0818  3141               	addfsr 1,1
 16651  0819  1803               	skipnc
 16652  081A  0A81               	incf	1,f
 16653                           
 16654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 16655  081B  0142               	movlb	2	; select bank2
 16656  081C  01A2               	clrf	_width^(0+256)
 16657  081D  01A3               	clrf	(_width+1)^(0+256)
 16658  081E  01A6               	clrf	_flags^(0+256)
 16659  081F  01A7               	clrf	(_flags+1)^(0+256)
 16660                           
 16661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 16662  0820  30FF               	movlw	255
 16663  0821  00A4               	movwf	_prec^(0+256)
 16664  0822  30FF               	movlw	255
 16665  0823  00A5               	movwf	(_prec^(0+256)+1)
 16666                           
 16667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 16668  0824  0140               	movlb	0	; select bank0
 16669  0825  085A               	movf	vfpfcnvrt@fmt,w
 16670  0826  0086               	movwf	6
 16671  0827  0187               	clrf	7
 16672  0828  3F40               	moviw [0]fsr1
 16673  0829  00DC               	movwf	??_vfpfcnvrt
 16674  082A  3F41               	moviw [1]fsr1
 16675  082B  00DD               	movwf	??_vfpfcnvrt+1
 16676  082C  085C               	movf	??_vfpfcnvrt,w
 16677  082D  0084               	movwf	4
 16678  082E  085D               	movf	??_vfpfcnvrt+1,w
 16679  082F  0085               	movwf	5
 16680  0830  0012               	moviw fsr0++
 16681  0831  3A63               	xorlw	99
 16682  0832  1D03               	btfss	3,2
 16683  0833  2855               	goto	l9949
 16684                           
 16685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 16686  0834  085A               	movf	vfpfcnvrt@fmt,w
 16687  0835  0086               	movwf	6
 16688  0836  0187               	clrf	7
 16689  0837  3001               	movlw	1
 16690  0838  0781               	addwf	1,f
 16691  0839  3141               	addfsr 1,1
 16692  083A  1803               	skipnc
 16693  083B  0A81               	incf	1,f
 16694                           
 16695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 16696  083C  085B               	movf	vfpfcnvrt@ap,w
 16697  083D  0086               	movwf	6
 16698  083E  0187               	clrf	7
 16699  083F  0801               	movf	1,w
 16700  0840  0084               	movwf	4
 16701  0841  0185               	clrf	5
 16702  0842  3002               	movlw	2
 16703  0843  0781               	addwf	1,f
 16704  0844  0800               	movf	0,w
 16705  0845  00DC               	movwf	??_vfpfcnvrt
 16706  0846  085C               	movf	??_vfpfcnvrt,w
 16707  0847  00E1               	movwf	vfpfcnvrt@c
 16708                           
 16709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 16710  0848  0861               	movf	vfpfcnvrt@c,w
 16711  0849  00DC               	movwf	??_vfpfcnvrt
 16712  084A  085C               	movf	??_vfpfcnvrt,w
 16713  084B  00D4               	movwf	ctoa@c
 16714  084C  0862               	movf	vfpfcnvrt@fp,w
 16715  084D  3190  200A         	fcall	_ctoa
 16716  084F  0140               	movlb	0	; select bank0
 16717  0850  0855               	movf	?_ctoa+1,w
 16718  0851  00DB               	movwf	?_vfpfcnvrt+1
 16719  0852  0854               	movf	?_ctoa,w
 16720  0853  00DA               	movwf	?_vfpfcnvrt
 16721  0854  0008               	return
 16722  0855                     l9949:	
 16723                           
 16724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 16725  0855  085A               	movf	vfpfcnvrt@fmt,w
 16726  0856  0086               	movwf	6
 16727  0857  0187               	clrf	7
 16728  0858  3F40               	moviw [0]fsr1
 16729  0859  00DC               	movwf	??_vfpfcnvrt
 16730  085A  3F41               	moviw [1]fsr1
 16731  085B  00DD               	movwf	??_vfpfcnvrt+1
 16732  085C  085C               	movf	??_vfpfcnvrt,w
 16733  085D  0084               	movwf	4
 16734  085E  085D               	movf	??_vfpfcnvrt+1,w
 16735  085F  0085               	movwf	5
 16736  0860  0012               	moviw fsr0++
 16737  0861  3A25               	xorlw	37
 16738  0862  1D03               	btfss	3,2
 16739  0863  287C               	goto	l9959
 16740                           
 16741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 16742  0864  085A               	movf	vfpfcnvrt@fmt,w
 16743  0865  0086               	movwf	6
 16744  0866  0187               	clrf	7
 16745  0867  3001               	movlw	1
 16746  0868  0781               	addwf	1,f
 16747  0869  3141               	addfsr 1,1
 16748  086A  1803               	skipnc
 16749  086B  0A81               	incf	1,f
 16750                           
 16751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 16752  086C  3025               	movlw	37
 16753  086D  00BB               	movwf	fputc@c
 16754  086E  3000               	movlw	0
 16755  086F  00BC               	movwf	fputc@c+1
 16756  0870  0862               	movf	vfpfcnvrt@fp,w
 16757  0871  00DC               	movwf	??_vfpfcnvrt
 16758  0872  085C               	movf	??_vfpfcnvrt,w
 16759  0873  00BD               	movwf	fputc@fp
 16760  0874  3191  213D         	fcall	_fputc
 16761  0876                     l9955:	
 16762                           
 16763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 16764  0876  3001               	movlw	1
 16765  0877  0140               	movlb	0	; select bank0
 16766  0878  00DA               	movwf	?_vfpfcnvrt
 16767  0879  3000               	movlw	0
 16768  087A  00DB               	movwf	?_vfpfcnvrt+1
 16769  087B  0008               	return
 16770  087C                     l9959:	
 16771                           
 16772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 16773  087C  085A               	movf	vfpfcnvrt@fmt,w
 16774  087D  0086               	movwf	6
 16775  087E  0187               	clrf	7
 16776  087F  3001               	movlw	1
 16777  0880  0781               	addwf	1,f
 16778  0881  3141               	addfsr 1,1
 16779  0882  1803               	skipnc
 16780  0883  0A81               	incf	1,f
 16781                           
 16782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 16783  0884  01DA               	clrf	?_vfpfcnvrt
 16784  0885  01DB               	clrf	?_vfpfcnvrt+1
 16785  0886  0008               	return
 16786  0887                     l9965:	
 16787                           
 16788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 16789  0887  085A               	movf	vfpfcnvrt@fmt,w
 16790  0888  0086               	movwf	6
 16791  0889  0187               	clrf	7
 16792  088A  3F40               	moviw [0]fsr1
 16793  088B  00DC               	movwf	??_vfpfcnvrt
 16794  088C  3F41               	moviw [1]fsr1
 16795  088D  00DD               	movwf	??_vfpfcnvrt+1
 16796  088E  085C               	movf	??_vfpfcnvrt,w
 16797  088F  0084               	movwf	4
 16798  0890  085D               	movf	??_vfpfcnvrt+1,w
 16799  0891  0085               	movwf	5
 16800  0892  0800               	movf	0,w	;code access
 16801  0893  00DE               	movwf	??_vfpfcnvrt+2
 16802  0894  01DF               	clrf	??_vfpfcnvrt+3
 16803  0895  085E               	movf	??_vfpfcnvrt+2,w
 16804  0896  00BB               	movwf	fputc@c
 16805  0897  085F               	movf	??_vfpfcnvrt+3,w
 16806  0898  00BC               	movwf	fputc@c+1
 16807  0899  0862               	movf	vfpfcnvrt@fp,w
 16808  089A  00E0               	movwf	??_vfpfcnvrt+4
 16809  089B  0860               	movf	??_vfpfcnvrt+4,w
 16810  089C  00BD               	movwf	fputc@fp
 16811  089D  3191  213D  3188   	fcall	_fputc
 16812                           
 16813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 16814  08A0  0140               	movlb	0	; select bank0
 16815  08A1  085A               	movf	vfpfcnvrt@fmt,w
 16816  08A2  0086               	movwf	6
 16817  08A3  0187               	clrf	7
 16818  08A4  3001               	movlw	1
 16819  08A5  0781               	addwf	1,f
 16820  08A6  3141               	addfsr 1,1
 16821  08A7  1803               	skipnc
 16822  08A8  0A81               	incf	1,f
 16823  08A9  2876               	goto	l9955
 16824  08AA                     __end_of_vfpfcnvrt:	
 16825                           
 16826                           	psect	text46
 16827  100A                     __ptext46:	
 16828 ;; *************** function _ctoa *****************
 16829 ;; Defined at:
 16830 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 16831 ;; Parameters:    Size  Location     Type
 16832 ;;  fp              1    wreg     PTR struct _IO_FILE
 16833 ;;		 -> NULL(0), 
 16834 ;;  c               1   52[BANK0 ] unsigned char 
 16835 ;; Auto vars:     Size  Location     Type
 16836 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 16837 ;;		 -> NULL(0), 
 16838 ;;  w               2   56[BANK0 ] int 
 16839 ;;  l               2    0        int 
 16840 ;; Return value:  Size  Location     Type
 16841 ;;                  2   52[BANK0 ] int 
 16842 ;; Registers used:
 16843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16844 ;; Tracked objects:
 16845 ;;		On entry : 0/0
 16846 ;;		On exit  : 0/0
 16847 ;;		Unchanged: 0/0
 16848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16849 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16850 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16851 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16852 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16853 ;;Total ram usage:        6 bytes
 16854 ;; Hardware stack levels used:    1
 16855 ;; Hardware stack levels required when called:   13
 16856 ;; This function calls:
 16857 ;;		_pad
 16858 ;; This function is called by:
 16859 ;;		_vfpfcnvrt
 16860 ;; This function uses a non-reentrant model
 16861 ;;
 16862                           
 16863                           
 16864                           ;psect for function _ctoa
 16865  100A                     _ctoa:	
 16866                           
 16867                           ;incstack = 0
 16868 ;; hardware stack exceeded
 16869                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16870                           ;ctoa@fp stored from wreg
 16871  100A  0140               	movlb	0	; select bank0
 16872  100B  00D7               	movwf	ctoa@fp
 16873                           
 16874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 16875  100C  0142               	movlb	2	; select bank2
 16876  100D  0822               	movf	_width^(0+256),w
 16877  100E  0423               	iorwf	(_width+1)^(0+256),w
 16878  100F  1D03               	btfss	3,2
 16879  1010  2819               	goto	l9493
 16880  1011  0823               	movf	(_width+1)^(0+256),w
 16881  1012  0140               	movlb	0	; select bank0
 16882  1013  00D9               	movwf	ctoa@w+1
 16883  1014  0142               	movlb	2	; select bank2
 16884  1015  0822               	movf	_width^(0+256),w
 16885  1016  0140               	movlb	0	; select bank0
 16886  1017  00D8               	movwf	ctoa@w
 16887  1018  2822               	goto	l9495
 16888  1019                     l9493:	
 16889  1019  0822               	movf	_width^(0+256),w
 16890  101A  3EFF               	addlw	255
 16891  101B  0140               	movlb	0	; select bank0
 16892  101C  00D8               	movwf	ctoa@w
 16893  101D  30FF               	movlw	255
 16894  101E  0142               	movlb	2	; select bank2
 16895  101F  3D23               	addwfc	(_width+1)^(0+256),w
 16896  1020  0140               	movlb	0	; select bank0
 16897  1021  00D9               	movwf	ctoa@w+1
 16898  1022                     l9495:	
 16899                           
 16900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 16901  1022  0854               	movf	ctoa@c,w
 16902  1023  00D6               	movwf	??_ctoa
 16903  1024  0856               	movf	??_ctoa,w
 16904  1025  0146               	movlb	6	; select bank6
 16905  1026  00A0               	movwf	_dbuf^(0+768)
 16906                           
 16907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 16908  1027  01A1               	clrf	(_dbuf^(0+768)+1)
 16909                           
 16910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 16911  1028  3020               	movlw	(low (_dbuf| (0+768)))& (0+255)
 16912  1029  0140               	movlb	0	; select bank0
 16913  102A  00D6               	movwf	??_ctoa
 16914  102B  0856               	movf	??_ctoa,w
 16915  102C  00CB               	movwf	pad@buf
 16916  102D  0859               	movf	ctoa@w+1,w
 16917  102E  00CD               	movwf	pad@p+1
 16918  102F  0858               	movf	ctoa@w,w
 16919  1030  00CC               	movwf	pad@p
 16920  1031  0857               	movf	ctoa@fp,w
 16921  1032  3193  2317         	fcall	_pad
 16922  1034  0140               	movlb	0	; select bank0
 16923  1035  084C               	movf	?_pad+1,w
 16924  1036  00D5               	movwf	?_ctoa+1
 16925  1037  084B               	movf	?_pad,w
 16926  1038  00D4               	movwf	?_ctoa
 16927  1039  0008               	return
 16928  103A                     __end_of_ctoa:	
 16929                           
 16930                           	psect	text47
 16931  1317                     __ptext47:	
 16932 ;; *************** function _pad *****************
 16933 ;; Defined at:
 16934 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 16935 ;; Parameters:    Size  Location     Type
 16936 ;;  fp              1    wreg     PTR struct _IO_FILE
 16937 ;;		 -> NULL(0), 
 16938 ;;  buf             1   43[BANK0 ] PTR unsigned char 
 16939 ;;		 -> dbuf(32), 
 16940 ;;  p               2   44[BANK0 ] int 
 16941 ;; Auto vars:     Size  Location     Type
 16942 ;;  fp              1   51[BANK0 ] PTR struct _IO_FILE
 16943 ;;		 -> NULL(0), 
 16944 ;;  w               2   49[BANK0 ] int 
 16945 ;;  i               2   47[BANK0 ] int 
 16946 ;; Return value:  Size  Location     Type
 16947 ;;                  2   43[BANK0 ] int 
 16948 ;; Registers used:
 16949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16950 ;; Tracked objects:
 16951 ;;		On entry : 0/0
 16952 ;;		On exit  : 0/0
 16953 ;;		Unchanged: 0/0
 16954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16955 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16956 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16957 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16958 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16959 ;;Total ram usage:        9 bytes
 16960 ;; Hardware stack levels used:    1
 16961 ;; Hardware stack levels required when called:   12
 16962 ;; This function calls:
 16963 ;;		_fputc
 16964 ;;		_fputs
 16965 ;;		_strlen
 16966 ;; This function is called by:
 16967 ;;		_ctoa
 16968 ;; This function uses a non-reentrant model
 16969 ;;
 16970                           
 16971                           
 16972                           ;psect for function _pad
 16973  1317                     _pad:	
 16974                           
 16975                           ;incstack = 0
 16976 ;; hardware stack exceeded
 16977                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16978                           ;pad@fp stored from wreg
 16979  1317  0140               	movlb	0	; select bank0
 16980  1318  00D3               	movwf	pad@fp
 16981                           
 16982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 16983  1319  0142               	movlb	2	; select bank2
 16984  131A  1C26               	btfss	_flags^(0+256),0
 16985  131B  2B25               	goto	l9457
 16986                           
 16987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 16988  131C  0140               	movlb	0	; select bank0
 16989  131D  0853               	movf	pad@fp,w
 16990  131E  00CE               	movwf	??_pad
 16991  131F  084E               	movf	??_pad,w
 16992  1320  00C3               	movwf	fputs@fp
 16993  1321  084B               	movf	pad@buf,w
 16994  1322  319F  272E  3193   	fcall	_fputs
 16995  1325                     l9457:	
 16996                           
 16997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 16998  1325  0140               	movlb	0	; select bank0
 16999  1326  1BCD               	btfsc	pad@p+1,7
 17000  1327  2B2D               	goto	l9461
 17001  1328  084D               	movf	pad@p+1,w
 17002  1329  00D2               	movwf	pad@w+1
 17003  132A  084C               	movf	pad@p,w
 17004  132B  00D1               	movwf	pad@w
 17005  132C  2B2F               	goto	l1702
 17006  132D                     l9461:	
 17007  132D  01D1               	clrf	pad@w
 17008  132E  01D2               	clrf	pad@w+1
 17009  132F                     l1702:	
 17010                           
 17011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 17012  132F  01CF               	clrf	pad@i
 17013  1330  01D0               	clrf	pad@i+1
 17014  1331                     l9467:	
 17015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 17016                           
 17017                           
 17018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 17019  1331  0850               	movf	pad@i+1,w
 17020  1332  3A80               	xorlw	128
 17021  1333  00CE               	movwf	??_pad
 17022  1334  0852               	movf	pad@w+1,w
 17023  1335  3A80               	xorlw	128
 17024  1336  024E               	subwf	??_pad,w
 17025  1337  1D03               	skipz
 17026  1338  2B3B               	goto	u9095
 17027  1339  0851               	movf	pad@w,w
 17028  133A  024F               	subwf	pad@i,w
 17029  133B                     u9095:	
 17030  133B  1803               	btfsc	3,0
 17031  133C  2B4F               	goto	l1705
 17032                           
 17033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 17034  133D  3020               	movlw	32
 17035  133E  0140               	movlb	0	; select bank0
 17036  133F  00BB               	movwf	fputc@c
 17037  1340  3000               	movlw	0
 17038  1341  00BC               	movwf	fputc@c+1
 17039  1342  0853               	movf	pad@fp,w
 17040  1343  00CE               	movwf	??_pad
 17041  1344  084E               	movf	??_pad,w
 17042  1345  00BD               	movwf	fputc@fp
 17043  1346  3191  213D  3193   	fcall	_fputc
 17044                           
 17045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 17046  1349  3001               	movlw	1
 17047  134A  0140               	movlb	0	; select bank0
 17048  134B  07CF               	addwf	pad@i,f
 17049  134C  3000               	movlw	0
 17050  134D  3DD0               	addwfc	pad@i+1,f
 17051  134E  2B31               	goto	l9467
 17052  134F                     l1705:	
 17053                           
 17054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 17055  134F  0142               	movlb	2	; select bank2
 17056  1350  1826               	btfsc	_flags^(0+256),0
 17057  1351  2B5B               	goto	l9471
 17058                           
 17059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 17060  1352  0140               	movlb	0	; select bank0
 17061  1353  0853               	movf	pad@fp,w
 17062  1354  00CE               	movwf	??_pad
 17063  1355  084E               	movf	??_pad,w
 17064  1356  00C3               	movwf	fputs@fp
 17065  1357  084B               	movf	pad@buf,w
 17066  1358  319F  272E  3193   	fcall	_fputs
 17067  135B                     l9471:	
 17068                           
 17069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 17070  135B  0140               	movlb	0	; select bank0
 17071  135C  084B               	movf	pad@buf,w
 17072  135D  00A0               	movwf	strlen@s
 17073  135E  3003               	movlw	3
 17074  135F  00A1               	movwf	strlen@s+1
 17075  1360  319D  25A0         	fcall	_strlen
 17076  1362  0140               	movlb	0	; select bank0
 17077  1363  0851               	movf	pad@w,w
 17078  1364  0720               	addwf	?_strlen,w
 17079  1365  00CB               	movwf	?_pad
 17080  1366  0852               	movf	pad@w+1,w
 17081  1367  3D21               	addwfc	?_strlen+1,w
 17082  1368  00CC               	movwf	?_pad+1
 17083  1369  0008               	return
 17084  136A                     __end_of_pad:	
 17085                           
 17086                           	psect	text48
 17087  1DA0                     __ptext48:	
 17088 ;; *************** function _strlen *****************
 17089 ;; Defined at:
 17090 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 17091 ;; Parameters:    Size  Location     Type
 17092 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 17093 ;;		 -> dbuf(32), STR_20(9), 
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 17096 ;;		 -> dbuf(32), STR_20(9), 
 17097 ;; Return value:  Size  Location     Type
 17098 ;;                  2    0[BANK0 ] unsigned int 
 17099 ;; Registers used:
 17100 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 17101 ;; Tracked objects:
 17102 ;;		On entry : 0/0
 17103 ;;		On exit  : 0/0
 17104 ;;		Unchanged: 0/0
 17105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17106 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17107 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17108 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17109 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17110 ;;Total ram usage:        5 bytes
 17111 ;; Hardware stack levels used:    1
 17112 ;; Hardware stack levels required when called:    4
 17113 ;; This function calls:
 17114 ;;		Nothing
 17115 ;; This function is called by:
 17116 ;;		_pad
 17117 ;;		_TM1650_scrollPrint
 17118 ;; This function uses a non-reentrant model
 17119 ;;
 17120                           
 17121                           
 17122                           ;psect for function _strlen
 17123  1DA0                     _strlen:	
 17124                           
 17125                           ;incstack = 0
 17126                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 17127  1DA0  0140               	movlb	0	; select bank0
 17128  1DA1  0821               	movf	strlen@s+1,w
 17129  1DA2  00A4               	movwf	strlen@a+1
 17130  1DA3  0820               	movf	strlen@s,w
 17131  1DA4  00A3               	movwf	strlen@a
 17132  1DA5                     l9439:	
 17133  1DA5  0820               	movf	strlen@s,w
 17134  1DA6  0084               	movwf	4
 17135  1DA7  0821               	movf	strlen@s+1,w
 17136  1DA8  0085               	movwf	5
 17137  1DA9  0012               	moviw fsr0++
 17138  1DAA  1903               	btfsc	3,2
 17139  1DAB  2DB1               	goto	l9441
 17140  1DAC  3001               	movlw	1
 17141  1DAD  07A0               	addwf	strlen@s,f
 17142  1DAE  3000               	movlw	0
 17143  1DAF  3DA1               	addwfc	strlen@s+1,f
 17144  1DB0  2DA5               	goto	l9439
 17145  1DB1                     l9441:	
 17146  1DB1  0823               	movf	strlen@a,w
 17147  1DB2  0220               	subwf	strlen@s,w
 17148  1DB3  00A0               	movwf	?_strlen
 17149  1DB4  0824               	movf	strlen@a+1,w
 17150  1DB5  3B21               	subwfb	strlen@s+1,w
 17151  1DB6  00A1               	movwf	?_strlen+1
 17152  1DB7  0008               	return
 17153  1DB8                     __end_of_strlen:	
 17154                           
 17155                           	psect	text49
 17156  1F2E                     __ptext49:	
 17157 ;; *************** function _fputs *****************
 17158 ;; Defined at:
 17159 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 17160 ;; Parameters:    Size  Location     Type
 17161 ;;  s               1    wreg     PTR const unsigned char 
 17162 ;;		 -> dbuf(32), 
 17163 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
 17164 ;;		 -> NULL(0), 
 17165 ;; Auto vars:     Size  Location     Type
 17166 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 17167 ;;		 -> dbuf(32), 
 17168 ;;  i               2   41[BANK0 ] int 
 17169 ;;  c               1   39[BANK0 ] unsigned char 
 17170 ;; Return value:  Size  Location     Type
 17171 ;;                  2   35[BANK0 ] int 
 17172 ;; Registers used:
 17173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17174 ;; Tracked objects:
 17175 ;;		On entry : 0/0
 17176 ;;		On exit  : 0/0
 17177 ;;		Unchanged: 0/0
 17178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17179 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17180 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17181 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17182 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17183 ;;Total ram usage:        8 bytes
 17184 ;; Hardware stack levels used:    1
 17185 ;; Hardware stack levels required when called:   11
 17186 ;; This function calls:
 17187 ;;		_fputc
 17188 ;; This function is called by:
 17189 ;;		_pad
 17190 ;; This function uses a non-reentrant model
 17191 ;;
 17192                           
 17193                           
 17194                           ;psect for function _fputs
 17195  1F2E                     _fputs:	
 17196                           
 17197                           ;incstack = 0
 17198 ;; hardware stack exceeded
 17199                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17200                           ;fputs@s stored from wreg
 17201  1F2E  0140               	movlb	0	; select bank0
 17202  1F2F  00C8               	movwf	fputs@s
 17203  1F30  01C9               	clrf	fputs@i
 17204  1F31  01CA               	clrf	fputs@i+1
 17205  1F32                     l9451:	
 17206  1F32  0849               	movf	fputs@i,w
 17207  1F33  0748               	addwf	fputs@s,w
 17208  1F34  00C4               	movwf	??_fputs
 17209  1F35  0844               	movf	??_fputs,w
 17210  1F36  0086               	movwf	6
 17211  1F37  3003               	movlw	3	; select bank6/7
 17212  1F38  0087               	movwf	7
 17213  1F39  0801               	movf	1,w
 17214  1F3A  00C5               	movwf	??_fputs+1
 17215  1F3B  0845               	movf	??_fputs+1,w
 17216  1F3C  00C7               	movwf	fputs@c
 17217  1F3D  0847               	movf	fputs@c,w
 17218  1F3E  1903               	btfsc	3,2
 17219  1F3F  0008               	return
 17220  1F40  0847               	movf	fputs@c,w
 17221  1F41  00C4               	movwf	??_fputs
 17222  1F42  01C5               	clrf	??_fputs+1
 17223  1F43  0844               	movf	??_fputs,w
 17224  1F44  00BB               	movwf	fputc@c
 17225  1F45  0845               	movf	??_fputs+1,w
 17226  1F46  00BC               	movwf	fputc@c+1
 17227  1F47  0843               	movf	fputs@fp,w
 17228  1F48  00C6               	movwf	??_fputs+2
 17229  1F49  0846               	movf	??_fputs+2,w
 17230  1F4A  00BD               	movwf	fputc@fp
 17231  1F4B  3191  213D  319F   	fcall	_fputc
 17232  1F4E  3001               	movlw	1
 17233  1F4F  0140               	movlb	0	; select bank0
 17234  1F50  07C9               	addwf	fputs@i,f
 17235  1F51  3000               	movlw	0
 17236  1F52  3DCA               	addwfc	fputs@i+1,f
 17237  1F53  2F32               	goto	l9451
 17238  1F54                     __end_of_fputs:	
 17239                           
 17240                           	psect	text50
 17241  113D                     __ptext50:	
 17242 ;; *************** function _fputc *****************
 17243 ;; Defined at:
 17244 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 17245 ;; Parameters:    Size  Location     Type
 17246 ;;  c               2   27[BANK0 ] int 
 17247 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
 17248 ;;		 -> NULL(0), 
 17249 ;; Auto vars:     Size  Location     Type
 17250 ;;		None
 17251 ;; Return value:  Size  Location     Type
 17252 ;;                  2   27[BANK0 ] int 
 17253 ;; Registers used:
 17254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17255 ;; Tracked objects:
 17256 ;;		On entry : 0/0
 17257 ;;		On exit  : 0/0
 17258 ;;		Unchanged: 0/0
 17259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17260 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17262 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17263 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17264 ;;Total ram usage:        8 bytes
 17265 ;; Hardware stack levels used:    1
 17266 ;; Hardware stack levels required when called:   10
 17267 ;; This function calls:
 17268 ;;		_putch
 17269 ;; This function is called by:
 17270 ;;		_pad
 17271 ;;		_vfpfcnvrt
 17272 ;;		_fputs
 17273 ;; This function uses a non-reentrant model
 17274 ;;
 17275                           
 17276                           
 17277                           ;psect for function _fputc
 17278  113D                     _fputc:	
 17279                           
 17280                           ;incstack = 0
 17281                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17282  113D  0140               	movlb	0	; select bank0
 17283  113E  083D               	movf	fputc@fp,w
 17284  113F  1D03               	btfss	3,2
 17285  1140  083D               	movf	fputc@fp,w
 17286  1141  1D03               	btfss	3,2
 17287  1142  2947               	goto	l9427
 17288  1143  083B               	movf	fputc@c,w
 17289  1144  319E  26E6         	fcall	_putch
 17290  1146  0008               	return
 17291  1147                     l9427:	
 17292  1147  083D               	movf	fputc@fp,w
 17293  1148  3E03               	addlw	3
 17294  1149  0086               	movwf	6
 17295  114A  0187               	clrf	7
 17296  114B  0016               	moviw fsr1++
 17297  114C  0401               	iorwf	1,w
 17298  114D  1903               	btfsc	3,2
 17299  114E  296A               	goto	l9431
 17300  114F  083D               	movf	fputc@fp,w
 17301  1150  3E03               	addlw	3
 17302  1151  0086               	movwf	6
 17303  1152  0187               	clrf	7
 17304  1153  3F40               	moviw [0]fsr1
 17305  1154  00BE               	movwf	??_fputc
 17306  1155  3F41               	moviw [1]fsr1
 17307  1156  00BF               	movwf	??_fputc+1
 17308  1157  0A3D               	incf	fputc@fp,w
 17309  1158  0086               	movwf	6
 17310  1159  0187               	clrf	7
 17311  115A  3F40               	moviw [0]fsr1
 17312  115B  00C0               	movwf	??_fputc+2
 17313  115C  3F41               	moviw [1]fsr1
 17314  115D  00C1               	movwf	??_fputc+3
 17315  115E  0841               	movf	??_fputc+3,w
 17316  115F  3A80               	xorlw	128
 17317  1160  00C2               	movwf	??_fputc+4
 17318  1161  083F               	movf	??_fputc+1,w
 17319  1162  3A80               	xorlw	128
 17320  1163  0242               	subwf	??_fputc+4,w
 17321  1164  1D03               	skipz
 17322  1165  2968               	goto	u9045
 17323  1166  083E               	movf	??_fputc,w
 17324  1167  0240               	subwf	??_fputc+2,w
 17325  1168                     u9045:	
 17326  1168  1803               	skipnc
 17327  1169  0008               	return
 17328  116A                     l9431:	
 17329  116A  0140               	movlb	0	; select bank0
 17330  116B  0A3D               	incf	fputc@fp,w
 17331  116C  0086               	movwf	6
 17332  116D  0187               	clrf	7
 17333  116E  3001               	movlw	1
 17334  116F  0781               	addwf	1,f
 17335  1170  3141               	addfsr 1,1
 17336  1171  1803               	skipnc
 17337  1172  0A81               	incf	1,f
 17338  1173  0008               	return
 17339  1174                     __end_of_fputc:	
 17340                           
 17341                           	psect	text51
 17342  1EE6                     __ptext51:	
 17343 ;; *************** function _putch *****************
 17344 ;; Defined at:
 17345 ;;		line 166 in file "tm1650.c"
 17346 ;; Parameters:    Size  Location     Type
 17347 ;;  n               1    wreg     unsigned char 
 17348 ;; Auto vars:     Size  Location     Type
 17349 ;;  n               1   26[BANK0 ] unsigned char 
 17350 ;; Return value:  Size  Location     Type
 17351 ;;                  1    wreg      void 
 17352 ;; Registers used:
 17353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17354 ;; Tracked objects:
 17355 ;;		On entry : 0/0
 17356 ;;		On exit  : 0/0
 17357 ;;		Unchanged: 0/0
 17358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17362 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17363 ;;Total ram usage:        2 bytes
 17364 ;; Hardware stack levels used:    1
 17365 ;; Hardware stack levels required when called:    9
 17366 ;; This function calls:
 17367 ;;		_TM1650_setDigit
 17368 ;; This function is called by:
 17369 ;;		_fputc
 17370 ;; This function uses a non-reentrant model
 17371 ;;
 17372                           
 17373                           
 17374                           ;psect for function _putch
 17375  1EE6                     _putch:	
 17376                           
 17377                           ;incstack = 0
 17378                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17379                           ;putch@n stored from wreg
 17380  1EE6  0140               	movlb	0	; select bank0
 17381  1EE7  00BA               	movwf	putch@n
 17382                           
 17383                           ;tm1650.c: 168:     if(position > 3 || n == '\r' || n == '\0')
 17384  1EE8  3004               	movlw	4
 17385  1EE9  0141               	movlb	1	; select bank1
 17386  1EEA  0257               	subwf	_position^(0+128),w
 17387  1EEB  1803               	skipnc
 17388  1EEC  2EF4               	goto	l9413
 17389  1EED  300D               	movlw	13
 17390  1EEE  0140               	movlb	0	; select bank0
 17391  1EEF  063A               	xorwf	putch@n,w
 17392  1EF0  1D03               	btfss	3,2
 17393  1EF1  083A               	movf	putch@n,w
 17394  1EF2  1D03               	btfss	3,2
 17395  1EF3  2EF6               	goto	l9415
 17396  1EF4                     l9413:	
 17397                           
 17398                           ;tm1650.c: 169:         position = 0;
 17399  1EF4  0141               	movlb	1	; select bank1
 17400  1EF5  01D7               	clrf	_position^(0+128)
 17401  1EF6                     l9415:	
 17402                           
 17403                           ;tm1650.c: 171:     if(n != '\r'){
 17404  1EF6  300D               	movlw	13
 17405  1EF7  0140               	movlb	0	; select bank0
 17406  1EF8  063A               	xorwf	putch@n,w
 17407  1EF9  1903               	btfsc	3,2
 17408  1EFA  0008               	return
 17409                           
 17410                           ;tm1650.c: 172:         TM1650_setDigit(position, n);
 17411  1EFB  083A               	movf	putch@n,w
 17412  1EFC  00B9               	movwf	??_putch
 17413  1EFD  0839               	movf	??_putch,w
 17414  1EFE  00B6               	movwf	TM1650_setDigit@data
 17415  1EFF  0141               	movlb	1	; select bank1
 17416  1F00  0857               	movf	_position^(0+128),w
 17417  1F01  319C  24E6         	fcall	_TM1650_setDigit
 17418                           
 17419                           ;tm1650.c: 173:         position++;
 17420  1F03  3001               	movlw	1
 17421  1F04  0140               	movlb	0	; select bank0
 17422  1F05  00B9               	movwf	??_putch
 17423  1F06  0839               	movf	??_putch,w
 17424  1F07  0141               	movlb	1	; select bank1
 17425  1F08  07D7               	addwf	_position^(0+128),f
 17426  1F09  0008               	return
 17427  1F0A                     __end_of_putch:	
 17428                           
 17429                           	psect	text52
 17430  1CE6                     __ptext52:	
 17431 ;; *************** function _TM1650_setDigit *****************
 17432 ;; Defined at:
 17433 ;;		line 95 in file "tm1650.c"
 17434 ;; Parameters:    Size  Location     Type
 17435 ;;  digit           1    wreg     unsigned char 
 17436 ;;  data            1   22[BANK0 ] unsigned char 
 17437 ;; Auto vars:     Size  Location     Type
 17438 ;;  digit           1   24[BANK0 ] unsigned char 
 17439 ;; Return value:  Size  Location     Type
 17440 ;;                  1    wreg      void 
 17441 ;; Registers used:
 17442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17443 ;; Tracked objects:
 17444 ;;		On entry : 0/0
 17445 ;;		On exit  : 0/0
 17446 ;;		Unchanged: 0/0
 17447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17448 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17450 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17451 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17452 ;;Total ram usage:        3 bytes
 17453 ;; Hardware stack levels used:    1
 17454 ;; Hardware stack levels required when called:    8
 17455 ;; This function calls:
 17456 ;;		_writeData
 17457 ;; This function is called by:
 17458 ;;		_putch
 17459 ;; This function uses a non-reentrant model
 17460 ;;
 17461                           
 17462                           
 17463                           ;psect for function _TM1650_setDigit
 17464  1CE6                     _TM1650_setDigit:	
 17465                           
 17466                           ;incstack = 0
 17467                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17468                           ;TM1650_setDigit@digit stored from wreg
 17469  1CE6  0140               	movlb	0	; select bank0
 17470  1CE7  00B8               	movwf	TM1650_setDigit@digit
 17471                           
 17472                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 17473  1CE8  0836               	movf	TM1650_setDigit@data,w
 17474  1CE9  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 17475  1CEA  0084               	movwf	4
 17476  1CEB  3097               	movlw	high ((_charTable+65504)| (0+32768))
 17477  1CEC  1803               	skipnc
 17478  1CED  3E01               	addlw	1
 17479  1CEE  0085               	movwf	5
 17480  1CEF  0800               	movf	0,w	;code access
 17481  1CF0  00B7               	movwf	??_TM1650_setDigit
 17482  1CF1  0837               	movf	??_TM1650_setDigit,w
 17483  1CF2  00B0               	movwf	writeData@data
 17484  1CF3  0838               	movf	TM1650_setDigit@digit,w
 17485  1CF4  3E34               	addlw	52
 17486  1CF5  319D  25EE         	fcall	_writeData
 17487  1CF7  0008               	return
 17488  1CF8                     __end_of_TM1650_setDigit:	
 17489                           
 17490                           	psect	text53
 17491  14F7                     __ptext53:	
 17492 ;; *************** function _TM1650_fastPrintNum_2digit *****************
 17493 ;; Defined at:
 17494 ;;		line 136 in file "tm1650.c"
 17495 ;; Parameters:    Size  Location     Type
 17496 ;;  num             1    wreg     unsigned char 
 17497 ;; Auto vars:     Size  Location     Type
 17498 ;;  num             1   25[BANK0 ] unsigned char 
 17499 ;; Return value:  Size  Location     Type
 17500 ;;                  1    wreg      void 
 17501 ;; Registers used:
 17502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17503 ;; Tracked objects:
 17504 ;;		On entry : 0/0
 17505 ;;		On exit  : 0/0
 17506 ;;		Unchanged: 0/0
 17507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17510 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17511 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17512 ;;Total ram usage:        4 bytes
 17513 ;; Hardware stack levels used:    1
 17514 ;; Hardware stack levels required when called:    8
 17515 ;; This function calls:
 17516 ;;		___awdiv
 17517 ;;		___awmod
 17518 ;;		_writeData
 17519 ;; This function is called by:
 17520 ;;		_CONTROL_BEAT
 17521 ;; This function uses a non-reentrant model
 17522 ;;
 17523                           
 17524                           
 17525                           ;psect for function _TM1650_fastPrintNum_2digit
 17526  14F7                     _TM1650_fastPrintNum_2digit:	
 17527                           
 17528                           ;incstack = 0
 17529                           ; Regs used in _TM1650_fastPrintNum_2digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17530                           ;TM1650_fastPrintNum_2digit@num stored from wreg
 17531  14F7  0140               	movlb	0	; select bank0
 17532  14F8  00B9               	movwf	TM1650_fastPrintNum_2digit@num
 17533                           
 17534                           ;tm1650.c: 138:     if(num > 99){
 17535  14F9  3064               	movlw	100
 17536  14FA  0239               	subwf	TM1650_fastPrintNum_2digit@num,w
 17537  14FB  1C03               	skipc
 17538  14FC  2D20               	goto	l10313
 17539                           
 17540                           ;tm1650.c: 139:         writeData(0x34, 0x79);
 17541  14FD  3079               	movlw	121
 17542  14FE  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 17543  14FF  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 17544  1500  00B0               	movwf	writeData@data
 17545  1501  3034               	movlw	52
 17546  1502  319D  25EE  3194   	fcall	_writeData
 17547                           
 17548                           ;tm1650.c: 140:         writeData(0x35, 0x79);
 17549  1505  3079               	movlw	121
 17550  1506  0140               	movlb	0	; select bank0
 17551  1507  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 17552  1508  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 17553  1509  00B0               	movwf	writeData@data
 17554  150A  3035               	movlw	53
 17555  150B  319D  25EE  3194   	fcall	_writeData
 17556                           
 17557                           ;tm1650.c: 141:         writeData(0x36, 0x79);
 17558  150E  3079               	movlw	121
 17559  150F  0140               	movlb	0	; select bank0
 17560  1510  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 17561  1511  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 17562  1512  00B0               	movwf	writeData@data
 17563  1513  3036               	movlw	54
 17564  1514  319D  25EE  3194   	fcall	_writeData
 17565                           
 17566                           ;tm1650.c: 142:         writeData(0x37, 0x79);
 17567  1517  3079               	movlw	121
 17568  1518  0140               	movlb	0	; select bank0
 17569  1519  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 17570  151A  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 17571  151B  00B0               	movwf	writeData@data
 17572  151C  3037               	movlw	55
 17573  151D  319D  25EE         	fcall	_writeData
 17574  151F  0008               	return
 17575  1520                     l10313:	
 17576                           
 17577                           ;tm1650.c: 146:     writeData(0x37, charTable[(num % 10) + 16]);
 17578  1520  300A               	movlw	10
 17579  1521  00A9               	movwf	___awmod@divisor
 17580  1522  3000               	movlw	0
 17581  1523  00AA               	movwf	___awmod@divisor+1
 17582  1524  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 17583  1525  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 17584  1526  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 17585  1527  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 17586  1528  00AB               	movwf	___awmod@dividend
 17587  1529  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 17588  152A  00AC               	movwf	___awmod@dividend+1
 17589  152B  3191  21EA  3194   	fcall	___awmod
 17590  152E  0140               	movlb	0	; select bank0
 17591  152F  082A               	movf	?___awmod+1,w
 17592  1530  0085               	movwf	5
 17593  1531  0829               	movf	?___awmod,w
 17594  1532  0084               	movwf	4
 17595  1533  3010               	movlw	low ((_charTable+16)| (0+32768))
 17596  1534  0784               	addwf	4,f
 17597  1535  3098               	movlw	high ((_charTable+16)| (0+32768))
 17598  1536  3D85               	addwfc	5,f
 17599  1537  0800               	movf	0,w	;code access
 17600  1538  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 17601  1539  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 17602  153A  00B0               	movwf	writeData@data
 17603  153B  3037               	movlw	55
 17604  153C  319D  25EE  3194   	fcall	_writeData
 17605                           
 17606                           ;tm1650.c: 147:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 17607  153F  300A               	movlw	10
 17608  1540  0140               	movlb	0	; select bank0
 17609  1541  00A9               	movwf	___awmod@divisor
 17610  1542  3000               	movlw	0
 17611  1543  00AA               	movwf	___awmod@divisor+1
 17612  1544  300A               	movlw	10
 17613  1545  00A0               	movwf	___awdiv@divisor
 17614  1546  3000               	movlw	0
 17615  1547  00A1               	movwf	___awdiv@divisor+1
 17616  1548  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 17617  1549  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 17618  154A  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 17619  154B  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 17620  154C  00A2               	movwf	___awdiv@dividend
 17621  154D  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 17622  154E  00A3               	movwf	___awdiv@dividend+1
 17623  154F  3192  22C5  3194   	fcall	___awdiv
 17624  1552  0140               	movlb	0	; select bank0
 17625  1553  0821               	movf	?___awdiv+1,w
 17626  1554  00AC               	movwf	___awmod@dividend+1
 17627  1555  0820               	movf	?___awdiv,w
 17628  1556  00AB               	movwf	___awmod@dividend
 17629  1557  3191  21EA  3194   	fcall	___awmod
 17630  155A  0140               	movlb	0	; select bank0
 17631  155B  082A               	movf	?___awmod+1,w
 17632  155C  0085               	movwf	5
 17633  155D  0829               	movf	?___awmod,w
 17634  155E  0084               	movwf	4
 17635  155F  3010               	movlw	low ((_charTable+16)| (0+32768))
 17636  1560  0784               	addwf	4,f
 17637  1561  3098               	movlw	high ((_charTable+16)| (0+32768))
 17638  1562  3D85               	addwfc	5,f
 17639  1563  0800               	movf	0,w	;code access
 17640  1564  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 17641  1565  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 17642  1566  00B0               	movwf	writeData@data
 17643  1567  3036               	movlw	54
 17644  1568  319D  25EE         	fcall	_writeData
 17645  156A  0008               	return
 17646  156B                     __end_of_TM1650_fastPrintNum_2digit:	
 17647                           
 17648                           	psect	text54
 17649  1DEE                     __ptext54:	
 17650 ;; *************** function _writeData *****************
 17651 ;; Defined at:
 17652 ;;		line 31 in file "tm1650.c"
 17653 ;; Parameters:    Size  Location     Type
 17654 ;;  address         1    wreg     unsigned char 
 17655 ;;  data            1   16[BANK0 ] unsigned char 
 17656 ;; Auto vars:     Size  Location     Type
 17657 ;;  address         1   20[BANK0 ] unsigned char 
 17658 ;;  status          1   21[BANK0 ] enum E11376
 17659 ;; Return value:  Size  Location     Type
 17660 ;;                  1    wreg      void 
 17661 ;; Registers used:
 17662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17663 ;; Tracked objects:
 17664 ;;		On entry : 0/0
 17665 ;;		On exit  : 0/0
 17666 ;;		Unchanged: 0/0
 17667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17668 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17670 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17671 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17672 ;;Total ram usage:        6 bytes
 17673 ;; Hardware stack levels used:    1
 17674 ;; Hardware stack levels required when called:    7
 17675 ;; This function calls:
 17676 ;;		_I2C1_MasterWrite
 17677 ;; This function is called by:
 17678 ;;		_TM1650_enable
 17679 ;;		_TM1650_setDigit
 17680 ;;		_TM1650_fastPrintNum
 17681 ;;		_TM1650_fastPrintNum_3digit
 17682 ;;		_TM1650_fastPrintNum_2digit
 17683 ;;		_TM1650_brightness
 17684 ;;		_TM1650_fastPrintNum_1digit
 17685 ;; This function uses a non-reentrant model
 17686 ;;
 17687                           
 17688                           
 17689                           ;psect for function _writeData
 17690  1DEE                     _writeData:	
 17691                           
 17692                           ;incstack = 0
 17693                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17694                           ;writeData@address stored from wreg
 17695  1DEE  0140               	movlb	0	; select bank0
 17696  1DEF  00B4               	movwf	writeData@address
 17697                           
 17698                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 17699  1DF0  3002               	movlw	2
 17700  1DF1  00B1               	movwf	??_writeData
 17701  1DF2  0831               	movf	??_writeData,w
 17702  1DF3  00B5               	movwf	writeData@status
 17703                           
 17704                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 17705  1DF4  01A7               	clrf	I2C1_MasterWrite@length
 17706  1DF5  0AA7               	incf	I2C1_MasterWrite@length,f
 17707  1DF6  0834               	movf	writeData@address,w
 17708  1DF7  00B1               	movwf	??_writeData
 17709  1DF8  01B2               	clrf	??_writeData+1
 17710  1DF9  0831               	movf	??_writeData,w
 17711  1DFA  00A8               	movwf	I2C1_MasterWrite@address
 17712  1DFB  0832               	movf	??_writeData+1,w
 17713  1DFC  00A9               	movwf	I2C1_MasterWrite@address+1
 17714  1DFD  3035               	movlw	(low (writeData@status| 0))& (0+255)
 17715  1DFE  00B3               	movwf	??_writeData+2
 17716  1DFF  0833               	movf	??_writeData+2,w
 17717  1E00  00AA               	movwf	I2C1_MasterWrite@pflag
 17718  1E01  3030               	movlw	(low (writeData@data| 0))& (0+255)
 17719  1E02  319F  277A  319D   	fcall	_I2C1_MasterWrite
 17720  1E05                     l9403:	
 17721                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 17722                           
 17723  1E05  3002               	movlw	2
 17724  1E06  0140               	movlb	0	; select bank0
 17725  1E07  0635               	xorwf	writeData@status,w
 17726  1E08  1D03               	btfss	3,2
 17727  1E09  0008               	return
 17728  1E0A  2E05               	goto	l9403
 17729  1E0B                     __end_of_writeData:	
 17730                           
 17731                           	psect	text55
 17732  1F7A                     __ptext55:	
 17733 ;; *************** function _I2C1_MasterWrite *****************
 17734 ;; Defined at:
 17735 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 17736 ;; Parameters:    Size  Location     Type
 17737 ;;  pdata           1    wreg     PTR unsigned char 
 17738 ;;		 -> writeData@data(1), 
 17739 ;;  length          1    7[BANK0 ] unsigned char 
 17740 ;;  address         2    8[BANK0 ] unsigned short 
 17741 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 17742 ;;		 -> writeData@status(1), 
 17743 ;; Auto vars:     Size  Location     Type
 17744 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 17745 ;;		 -> writeData@data(1), 
 17746 ;; Return value:  Size  Location     Type
 17747 ;;                  1    wreg      void 
 17748 ;; Registers used:
 17749 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17750 ;; Tracked objects:
 17751 ;;		On entry : 0/0
 17752 ;;		On exit  : 0/0
 17753 ;;		Unchanged: 0/0
 17754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17756 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17757 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17758 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17759 ;;Total ram usage:        7 bytes
 17760 ;; Hardware stack levels used:    1
 17761 ;; Hardware stack levels required when called:    6
 17762 ;; This function calls:
 17763 ;;		_I2C1_MasterTRBInsert
 17764 ;;		_I2C1_MasterWriteTRBBuild
 17765 ;; This function is called by:
 17766 ;;		_writeData
 17767 ;; This function uses a non-reentrant model
 17768 ;;
 17769                           
 17770                           
 17771                           ;psect for function _I2C1_MasterWrite
 17772  1F7A                     _I2C1_MasterWrite:	
 17773                           
 17774                           ;incstack = 0
 17775                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17776                           ;I2C1_MasterWrite@pdata stored from wreg
 17777  1F7A  0140               	movlb	0	; select bank0
 17778  1F7B  00AD               	movwf	I2C1_MasterWrite@pdata
 17779                           
 17780                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 17781  1F7C  0141               	movlb	1	; select bank1
 17782  1F7D  1847               	btfsc	(_i2c1_object^(0+128)+2),0
 17783  1F7E  2F9D               	goto	l9397
 17784                           
 17785                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 17786  1F7F  0140               	movlb	0	; select bank0
 17787  1F80  082D               	movf	I2C1_MasterWrite@pdata,w
 17788  1F81  00AB               	movwf	??_I2C1_MasterWrite
 17789  1F82  082B               	movf	??_I2C1_MasterWrite,w
 17790  1F83  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 17791  1F84  0827               	movf	I2C1_MasterWrite@length,w
 17792  1F85  00AC               	movwf	??_I2C1_MasterWrite+1
 17793  1F86  082C               	movf	??_I2C1_MasterWrite+1,w
 17794  1F87  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 17795  1F88  0829               	movf	I2C1_MasterWrite@address+1,w
 17796  1F89  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 17797  1F8A  0828               	movf	I2C1_MasterWrite@address,w
 17798  1F8B  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 17799  1F8C  3058               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 17800  1F8D  319E  26C3  319F   	fcall	_I2C1_MasterWriteTRBBuild
 17801                           
 17802                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 17803  1F90  3058               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 17804  1F91  0140               	movlb	0	; select bank0
 17805  1F92  00AB               	movwf	??_I2C1_MasterWrite
 17806  1F93  082B               	movf	??_I2C1_MasterWrite,w
 17807  1F94  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 17808  1F95  082A               	movf	I2C1_MasterWrite@pflag,w
 17809  1F96  00AC               	movwf	??_I2C1_MasterWrite+1
 17810  1F97  082C               	movf	??_I2C1_MasterWrite+1,w
 17811  1F98  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 17812  1F99  3001               	movlw	1
 17813  1F9A  3193  236A         	fcall	_I2C1_MasterTRBInsert
 17814                           
 17815                           ;mcc_generated_files/i2c1.c: 613:     }
 17816  1F9C  0008               	return
 17817  1F9D                     l9397:	
 17818                           
 17819                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 17820  1F9D  0140               	movlb	0	; select bank0
 17821  1F9E  082A               	movf	I2C1_MasterWrite@pflag,w
 17822  1F9F  0086               	movwf	6
 17823  1FA0  0187               	clrf	7
 17824  1FA1  0181               	clrf	1
 17825  1FA2  0A81               	incf	1,f
 17826  1FA3  0008               	return
 17827  1FA4                     __end_of_I2C1_MasterWrite:	
 17828                           
 17829                           	psect	text56
 17830  1EC3                     __ptext56:	
 17831 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 17832 ;; Defined at:
 17833 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 17834 ;; Parameters:    Size  Location     Type
 17835 ;;  ptrb            1    wreg     PTR struct .
 17836 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 17837 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 17838 ;;		 -> writeData@data(1), 
 17839 ;;  length          1    1[BANK0 ] unsigned char 
 17840 ;;  address         2    2[BANK0 ] unsigned short 
 17841 ;; Auto vars:     Size  Location     Type
 17842 ;;  ptrb            1    6[BANK0 ] PTR struct .
 17843 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 17844 ;; Return value:  Size  Location     Type
 17845 ;;                  1    wreg      void 
 17846 ;; Registers used:
 17847 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17848 ;; Tracked objects:
 17849 ;;		On entry : 0/0
 17850 ;;		On exit  : 0/0
 17851 ;;		Unchanged: 0/0
 17852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17854 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17855 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17856 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17857 ;;Total ram usage:        7 bytes
 17858 ;; Hardware stack levels used:    1
 17859 ;; Hardware stack levels required when called:    4
 17860 ;; This function calls:
 17861 ;;		Nothing
 17862 ;; This function is called by:
 17863 ;;		_I2C1_MasterWrite
 17864 ;; This function uses a non-reentrant model
 17865 ;;
 17866                           
 17867                           
 17868                           ;psect for function _I2C1_MasterWriteTRBBuild
 17869  1EC3                     _I2C1_MasterWriteTRBBuild:	
 17870                           
 17871                           ;incstack = 0
 17872                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 17873                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 17874  1EC3  0140               	movlb	0	; select bank0
 17875  1EC4  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 17876                           
 17877                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 17878  1EC5  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 17879  1EC6  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 17880  1EC7  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 17881  1EC8  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 17882  1EC9  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 17883  1ECA  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 17884  1ECB  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 17885  1ECC  0086               	movwf	6
 17886  1ECD  3001               	movlw	1	; select bank2/3
 17887  1ECE  0087               	movwf	7
 17888  1ECF  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 17889  1ED0  3FC0               	movwi [0]fsr1
 17890  1ED1  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 17891  1ED2  3FC1               	movwi [1]fsr1
 17892                           
 17893                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 17894  1ED3  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 17895  1ED4  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 17896  1ED5  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 17897  1ED6  3E02               	addlw	2
 17898  1ED7  0086               	movwf	6
 17899  1ED8  3001               	movlw	1	; select bank2/3
 17900  1ED9  0087               	movwf	7
 17901  1EDA  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 17902  1EDB  0081               	movwf	1
 17903                           
 17904                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 17905  1EDC  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 17906  1EDD  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 17907  1EDE  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 17908  1EDF  3E03               	addlw	3
 17909  1EE0  0086               	movwf	6
 17910  1EE1  3001               	movlw	1	; select bank2/3
 17911  1EE2  0087               	movwf	7
 17912  1EE3  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 17913  1EE4  0081               	movwf	1
 17914  1EE5  0008               	return
 17915  1EE6                     __end_of_I2C1_MasterWriteTRBBuild:	
 17916                           
 17917                           	psect	text57
 17918  136A                     __ptext57:	
 17919 ;; *************** function _I2C1_MasterTRBInsert *****************
 17920 ;; Defined at:
 17921 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 17922 ;; Parameters:    Size  Location     Type
 17923 ;;  count           1    wreg     unsigned char 
 17924 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 17925 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 17926 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 17927 ;;		 -> writeData@status(1), 
 17928 ;; Auto vars:     Size  Location     Type
 17929 ;;  count           1    3[BANK0 ] unsigned char 
 17930 ;; Return value:  Size  Location     Type
 17931 ;;                  1    wreg      void 
 17932 ;; Registers used:
 17933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17934 ;; Tracked objects:
 17935 ;;		On entry : 0/0
 17936 ;;		On exit  : 0/0
 17937 ;;		Unchanged: 0/0
 17938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17939 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17942 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17943 ;;Total ram usage:        4 bytes
 17944 ;; Hardware stack levels used:    1
 17945 ;; Hardware stack levels required when called:    5
 17946 ;; This function calls:
 17947 ;;		_I2C1_WaitForLastPacketToComplete
 17948 ;; This function is called by:
 17949 ;;		_I2C1_MasterWrite
 17950 ;;		_I2C1_MasterRead
 17951 ;; This function uses a non-reentrant model
 17952 ;;
 17953                           
 17954                           
 17955                           ;psect for function _I2C1_MasterTRBInsert
 17956  136A                     _I2C1_MasterTRBInsert:	
 17957                           
 17958                           ;incstack = 0
 17959                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17960                           ;I2C1_MasterTRBInsert@count stored from wreg
 17961  136A  0140               	movlb	0	; select bank0
 17962  136B  00A3               	movwf	I2C1_MasterTRBInsert@count
 17963                           
 17964                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 17965  136C  0141               	movlb	1	; select bank1
 17966  136D  1847               	btfsc	(_i2c1_object^(0+128)+2),0
 17967  136E  2BAC               	goto	l9385
 17968                           
 17969                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 17970  136F  3002               	movlw	2
 17971  1370  0140               	movlb	0	; select bank0
 17972  1371  00A2               	movwf	??_I2C1_MasterTRBInsert
 17973  1372  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 17974  1373  0086               	movwf	6
 17975  1374  0187               	clrf	7
 17976  1375  0822               	movf	??_I2C1_MasterTRBInsert,w
 17977  1376  0081               	movwf	1
 17978                           
 17979                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 17980  1377  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 17981  1378  00A2               	movwf	??_I2C1_MasterTRBInsert
 17982  1379  0141               	movlb	1	; select bank1
 17983  137A  0A45               	incf	_i2c1_object^(0+128),w
 17984  137B  0086               	movwf	6
 17985  137C  3001               	movlw	1	; select bank2/3
 17986  137D  0087               	movwf	7
 17987  137E  0140               	movlb	0	; select bank0
 17988  137F  0822               	movf	??_I2C1_MasterTRBInsert,w
 17989  1380  0081               	movwf	1
 17990                           
 17991                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 17992  1381  0823               	movf	I2C1_MasterTRBInsert@count,w
 17993  1382  00A2               	movwf	??_I2C1_MasterTRBInsert
 17994  1383  0141               	movlb	1	; select bank1
 17995  1384  0845               	movf	_i2c1_object^(0+128),w
 17996  1385  0086               	movwf	6
 17997  1386  3001               	movlw	1	; select bank2/3
 17998  1387  0087               	movwf	7
 17999  1388  0140               	movlb	0	; select bank0
 18000  1389  0822               	movf	??_I2C1_MasterTRBInsert,w
 18001  138A  0081               	movwf	1
 18002                           
 18003                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 18004  138B  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 18005  138C  00A2               	movwf	??_I2C1_MasterTRBInsert
 18006  138D  0141               	movlb	1	; select bank1
 18007  138E  0845               	movf	_i2c1_object^(0+128),w
 18008  138F  3E02               	addlw	2
 18009  1390  0086               	movwf	6
 18010  1391  3001               	movlw	1	; select bank2/3
 18011  1392  0087               	movwf	7
 18012  1393  0140               	movlb	0	; select bank0
 18013  1394  0822               	movf	??_I2C1_MasterTRBInsert,w
 18014  1395  0081               	movwf	1
 18015                           
 18016                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 18017  1396  3003               	movlw	3
 18018  1397  00A2               	movwf	??_I2C1_MasterTRBInsert
 18019  1398  0822               	movf	??_I2C1_MasterTRBInsert,w
 18020  1399  0141               	movlb	1	; select bank1
 18021  139A  07C5               	addwf	_i2c1_object^(0+128),f
 18022                           
 18023                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 18024  139B  0845               	movf	_i2c1_object^(0+128),w
 18025  139C  3A5F               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 18026  139D  1D03               	skipz
 18027  139E  2BA5               	goto	l9381
 18028                           
 18029                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 18030  139F  305C               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 18031  13A0  0140               	movlb	0	; select bank0
 18032  13A1  00A2               	movwf	??_I2C1_MasterTRBInsert
 18033  13A2  0822               	movf	??_I2C1_MasterTRBInsert,w
 18034  13A3  0141               	movlb	1	; select bank1
 18035  13A4  00C5               	movwf	_i2c1_object^(0+128)
 18036  13A5                     l9381:	
 18037                           
 18038                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 18039  13A5  10C7               	bcf	(_i2c1_object^(0+128)+2),1
 18040                           
 18041                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 18042  13A6  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18043  13A7  0645               	xorwf	_i2c1_object^(0+128),w
 18044  13A8  1D03               	skipz
 18045  13A9  2BB2               	goto	l9387
 18046                           
 18047                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 18048  13AA  1447               	bsf	(_i2c1_object^(0+128)+2),0
 18049  13AB  2BB2               	goto	l9387
 18050  13AC                     l9385:	
 18051                           
 18052                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 18053  13AC  0140               	movlb	0	; select bank0
 18054  13AD  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 18055  13AE  0086               	movwf	6
 18056  13AF  0187               	clrf	7
 18057  13B0  0181               	clrf	1
 18058  13B1  0A81               	incf	1,f
 18059  13B2                     l9387:	
 18060                           
 18061                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 18062  13B2  0140               	movlb	0	; select bank0
 18063  13B3  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 18064  13B4  0086               	movwf	6
 18065  13B5  0187               	clrf	7
 18066  13B6  3002               	movlw	2
 18067  13B7  0601               	xorwf	1,w
 18068  13B8  1D03               	btfss	3,2
 18069  13B9  0008               	return
 18070                           
 18071                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 18072  13BA  319B  239A         	fcall	_I2C1_WaitForLastPacketToComplete
 18073                           
 18074                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 18075  13BC  014E               	movlb	14	; select bank14
 18076  13BD  140F               	bsf	15,0	;volatile
 18077  13BE  0008               	return
 18078  13BF                     __end_of_I2C1_MasterTRBInsert:	
 18079                           
 18080                           	psect	text58
 18081  1B9A                     __ptext58:	
 18082 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 18083 ;; Defined at:
 18084 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 18085 ;; Parameters:    Size  Location     Type
 18086 ;;		None
 18087 ;; Auto vars:     Size  Location     Type
 18088 ;;		None
 18089 ;; Return value:  Size  Location     Type
 18090 ;;                  1    wreg      void 
 18091 ;; Registers used:
 18092 ;;		wreg, status,2, status,0
 18093 ;; Tracked objects:
 18094 ;;		On entry : 0/0
 18095 ;;		On exit  : 0/0
 18096 ;;		Unchanged: 0/0
 18097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18102 ;;Total ram usage:        0 bytes
 18103 ;; Hardware stack levels used:    1
 18104 ;; Hardware stack levels required when called:    4
 18105 ;; This function calls:
 18106 ;;		Nothing
 18107 ;; This function is called by:
 18108 ;;		_I2C1_MasterTRBInsert
 18109 ;; This function uses a non-reentrant model
 18110 ;;
 18111                           
 18112                           
 18113                           ;psect for function _I2C1_WaitForLastPacketToComplete
 18114  1B9A                     _I2C1_WaitForLastPacketToComplete:	
 18115  1B9A                     l9367:	
 18116                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 18117                           
 18118                           ;incstack = 0
 18119                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 18120                           
 18121                           
 18122                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 18123  1B9A  0141               	movlb	1	; select bank1
 18124  1B9B  0866               	movf	_i2c1_state^(0+128),w
 18125  1B9C  1903               	btfsc	3,2
 18126  1B9D  0008               	return
 18127  1B9E  2B9A               	goto	l9367
 18128  1B9F                     __end_of_I2C1_WaitForLastPacketToComplete:	
 18129                           
 18130                           	psect	text59
 18131  11EA                     __ptext59:	
 18132 ;; *************** function ___awmod *****************
 18133 ;; Defined at:
 18134 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 18135 ;; Parameters:    Size  Location     Type
 18136 ;;  divisor         2    9[BANK0 ] int 
 18137 ;;  dividend        2   11[BANK0 ] int 
 18138 ;; Auto vars:     Size  Location     Type
 18139 ;;  sign            1   15[BANK0 ] unsigned char 
 18140 ;;  counter         1   14[BANK0 ] unsigned char 
 18141 ;; Return value:  Size  Location     Type
 18142 ;;                  2    9[BANK0 ] int 
 18143 ;; Registers used:
 18144 ;;		wreg, status,2, status,0
 18145 ;; Tracked objects:
 18146 ;;		On entry : 0/0
 18147 ;;		On exit  : 0/0
 18148 ;;		Unchanged: 0/0
 18149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18150 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18151 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18152 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18153 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18154 ;;Total ram usage:        7 bytes
 18155 ;; Hardware stack levels used:    1
 18156 ;; Hardware stack levels required when called:    4
 18157 ;; This function calls:
 18158 ;;		Nothing
 18159 ;; This function is called by:
 18160 ;;		_TM1650_fastPrintNum_2digit
 18161 ;; This function uses a non-reentrant model
 18162 ;;
 18163                           
 18164                           
 18165                           ;psect for function ___awmod
 18166  11EA                     ___awmod:	
 18167                           
 18168                           ;incstack = 0
 18169                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 18170  11EA  0140               	movlb	0	; select bank0
 18171  11EB  01AF               	clrf	___awmod@sign
 18172  11EC  1FAC               	btfss	___awmod@dividend+1,7
 18173  11ED  29F5               	goto	l10089
 18174  11EE  09AB               	comf	___awmod@dividend,f
 18175  11EF  09AC               	comf	___awmod@dividend+1,f
 18176  11F0  0AAB               	incf	___awmod@dividend,f
 18177  11F1  1903               	skipnz
 18178  11F2  0AAC               	incf	___awmod@dividend+1,f
 18179  11F3  01AF               	clrf	___awmod@sign
 18180  11F4  0AAF               	incf	___awmod@sign,f
 18181  11F5                     l10089:	
 18182  11F5  1FAA               	btfss	___awmod@divisor+1,7
 18183  11F6  29FC               	goto	l10093
 18184  11F7  09A9               	comf	___awmod@divisor,f
 18185  11F8  09AA               	comf	___awmod@divisor+1,f
 18186  11F9  0AA9               	incf	___awmod@divisor,f
 18187  11FA  1903               	skipnz
 18188  11FB  0AAA               	incf	___awmod@divisor+1,f
 18189  11FC                     l10093:	
 18190  11FC  0829               	movf	___awmod@divisor,w
 18191  11FD  042A               	iorwf	___awmod@divisor+1,w
 18192  11FE  1903               	btfsc	3,2
 18193  11FF  2A23               	goto	l10111
 18194  1200  01AE               	clrf	___awmod@counter
 18195  1201  0AAE               	incf	___awmod@counter,f
 18196  1202                     l10101:	
 18197  1202  1BAA               	btfsc	___awmod@divisor+1,7
 18198  1203  2A0E               	goto	l10103
 18199  1204  3001               	movlw	1
 18200  1205                     u10295:	
 18201  1205  35A9               	lslf	___awmod@divisor,f
 18202  1206  0DAA               	rlf	___awmod@divisor+1,f
 18203  1207  0B89               	decfsz	9,f
 18204  1208  2A05               	goto	u10295
 18205  1209  3001               	movlw	1
 18206  120A  00AD               	movwf	??___awmod
 18207  120B  082D               	movf	??___awmod,w
 18208  120C  07AE               	addwf	___awmod@counter,f
 18209  120D  2A02               	goto	l10101
 18210  120E                     l10103:	
 18211  120E  082A               	movf	___awmod@divisor+1,w
 18212  120F  022C               	subwf	___awmod@dividend+1,w
 18213  1210  1D03               	skipz
 18214  1211  2A14               	goto	u10315
 18215  1212  0829               	movf	___awmod@divisor,w
 18216  1213  022B               	subwf	___awmod@dividend,w
 18217  1214                     u10315:	
 18218  1214  1C03               	skipc
 18219  1215  2A1A               	goto	l10107
 18220  1216  0829               	movf	___awmod@divisor,w
 18221  1217  02AB               	subwf	___awmod@dividend,f
 18222  1218  082A               	movf	___awmod@divisor+1,w
 18223  1219  3BAC               	subwfb	___awmod@dividend+1,f
 18224  121A                     l10107:	
 18225  121A  3001               	movlw	1
 18226  121B                     u10325:	
 18227  121B  36AA               	lsrf	___awmod@divisor+1,f
 18228  121C  0CA9               	rrf	___awmod@divisor,f
 18229  121D  0B89               	decfsz	9,f
 18230  121E  2A1B               	goto	u10325
 18231  121F  3001               	movlw	1
 18232  1220  02AE               	subwf	___awmod@counter,f
 18233  1221  1D03               	btfss	3,2
 18234  1222  2A0E               	goto	l10103
 18235  1223                     l10111:	
 18236  1223  082F               	movf	___awmod@sign,w
 18237  1224  1903               	btfsc	3,2
 18238  1225  2A2B               	goto	l10115
 18239  1226  09AB               	comf	___awmod@dividend,f
 18240  1227  09AC               	comf	___awmod@dividend+1,f
 18241  1228  0AAB               	incf	___awmod@dividend,f
 18242  1229  1903               	skipnz
 18243  122A  0AAC               	incf	___awmod@dividend+1,f
 18244  122B                     l10115:	
 18245  122B  082C               	movf	___awmod@dividend+1,w
 18246  122C  00AA               	movwf	?___awmod+1
 18247  122D  082B               	movf	___awmod@dividend,w
 18248  122E  00A9               	movwf	?___awmod
 18249  122F  0008               	return
 18250  1230                     __end_of___awmod:	
 18251                           
 18252                           	psect	text60
 18253  12C5                     __ptext60:	
 18254 ;; *************** function ___awdiv *****************
 18255 ;; Defined at:
 18256 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 18257 ;; Parameters:    Size  Location     Type
 18258 ;;  divisor         2    0[BANK0 ] int 
 18259 ;;  dividend        2    2[BANK0 ] int 
 18260 ;; Auto vars:     Size  Location     Type
 18261 ;;  quotient        2    7[BANK0 ] int 
 18262 ;;  sign            1    6[BANK0 ] unsigned char 
 18263 ;;  counter         1    5[BANK0 ] unsigned char 
 18264 ;; Return value:  Size  Location     Type
 18265 ;;                  2    0[BANK0 ] int 
 18266 ;; Registers used:
 18267 ;;		wreg, status,2, status,0
 18268 ;; Tracked objects:
 18269 ;;		On entry : 0/0
 18270 ;;		On exit  : 0/0
 18271 ;;		Unchanged: 0/0
 18272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18273 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18274 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18275 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18276 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18277 ;;Total ram usage:        9 bytes
 18278 ;; Hardware stack levels used:    1
 18279 ;; Hardware stack levels required when called:    4
 18280 ;; This function calls:
 18281 ;;		Nothing
 18282 ;; This function is called by:
 18283 ;;		_TM1650_fastPrintNum_2digit
 18284 ;; This function uses a non-reentrant model
 18285 ;;
 18286                           
 18287                           
 18288                           ;psect for function ___awdiv
 18289  12C5                     ___awdiv:	
 18290                           
 18291                           ;incstack = 0
 18292                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 18293  12C5  0140               	movlb	0	; select bank0
 18294  12C6  01A6               	clrf	___awdiv@sign
 18295  12C7  1FA1               	btfss	___awdiv@divisor+1,7
 18296  12C8  2AD0               	goto	l10045
 18297  12C9  09A0               	comf	___awdiv@divisor,f
 18298  12CA  09A1               	comf	___awdiv@divisor+1,f
 18299  12CB  0AA0               	incf	___awdiv@divisor,f
 18300  12CC  1903               	skipnz
 18301  12CD  0AA1               	incf	___awdiv@divisor+1,f
 18302  12CE  01A6               	clrf	___awdiv@sign
 18303  12CF  0AA6               	incf	___awdiv@sign,f
 18304  12D0                     l10045:	
 18305  12D0  1FA3               	btfss	___awdiv@dividend+1,7
 18306  12D1  2ADB               	goto	l10051
 18307  12D2  09A2               	comf	___awdiv@dividend,f
 18308  12D3  09A3               	comf	___awdiv@dividend+1,f
 18309  12D4  0AA2               	incf	___awdiv@dividend,f
 18310  12D5  1903               	skipnz
 18311  12D6  0AA3               	incf	___awdiv@dividend+1,f
 18312  12D7  3001               	movlw	1
 18313  12D8  00A4               	movwf	??___awdiv
 18314  12D9  0824               	movf	??___awdiv,w
 18315  12DA  06A6               	xorwf	___awdiv@sign,f
 18316  12DB                     l10051:	
 18317  12DB  01A7               	clrf	___awdiv@quotient
 18318  12DC  01A8               	clrf	___awdiv@quotient+1
 18319  12DD  0820               	movf	___awdiv@divisor,w
 18320  12DE  0421               	iorwf	___awdiv@divisor+1,w
 18321  12DF  1903               	btfsc	3,2
 18322  12E0  2B0A               	goto	l10073
 18323  12E1  01A5               	clrf	___awdiv@counter
 18324  12E2  0AA5               	incf	___awdiv@counter,f
 18325  12E3                     l10061:	
 18326  12E3  1BA1               	btfsc	___awdiv@divisor+1,7
 18327  12E4  2AEF               	goto	l10063
 18328  12E5  3001               	movlw	1
 18329  12E6                     u10195:	
 18330  12E6  35A0               	lslf	___awdiv@divisor,f
 18331  12E7  0DA1               	rlf	___awdiv@divisor+1,f
 18332  12E8  0B89               	decfsz	9,f
 18333  12E9  2AE6               	goto	u10195
 18334  12EA  3001               	movlw	1
 18335  12EB  00A4               	movwf	??___awdiv
 18336  12EC  0824               	movf	??___awdiv,w
 18337  12ED  07A5               	addwf	___awdiv@counter,f
 18338  12EE  2AE3               	goto	l10061
 18339  12EF                     l10063:	
 18340  12EF  3001               	movlw	1
 18341  12F0                     u10215:	
 18342  12F0  35A7               	lslf	___awdiv@quotient,f
 18343  12F1  0DA8               	rlf	___awdiv@quotient+1,f
 18344  12F2  0B89               	decfsz	9,f
 18345  12F3  2AF0               	goto	u10215
 18346  12F4  0821               	movf	___awdiv@divisor+1,w
 18347  12F5  0223               	subwf	___awdiv@dividend+1,w
 18348  12F6  1D03               	skipz
 18349  12F7  2AFA               	goto	u10225
 18350  12F8  0820               	movf	___awdiv@divisor,w
 18351  12F9  0222               	subwf	___awdiv@dividend,w
 18352  12FA                     u10225:	
 18353  12FA  1C03               	skipc
 18354  12FB  2B01               	goto	l10069
 18355  12FC  0820               	movf	___awdiv@divisor,w
 18356  12FD  02A2               	subwf	___awdiv@dividend,f
 18357  12FE  0821               	movf	___awdiv@divisor+1,w
 18358  12FF  3BA3               	subwfb	___awdiv@dividend+1,f
 18359  1300  1427               	bsf	___awdiv@quotient,0
 18360  1301                     l10069:	
 18361  1301  3001               	movlw	1
 18362  1302                     u10235:	
 18363  1302  36A1               	lsrf	___awdiv@divisor+1,f
 18364  1303  0CA0               	rrf	___awdiv@divisor,f
 18365  1304  0B89               	decfsz	9,f
 18366  1305  2B02               	goto	u10235
 18367  1306  3001               	movlw	1
 18368  1307  02A5               	subwf	___awdiv@counter,f
 18369  1308  1D03               	btfss	3,2
 18370  1309  2AEF               	goto	l10063
 18371  130A                     l10073:	
 18372  130A  0826               	movf	___awdiv@sign,w
 18373  130B  1903               	btfsc	3,2
 18374  130C  2B12               	goto	l10077
 18375  130D  09A7               	comf	___awdiv@quotient,f
 18376  130E  09A8               	comf	___awdiv@quotient+1,f
 18377  130F  0AA7               	incf	___awdiv@quotient,f
 18378  1310  1903               	skipnz
 18379  1311  0AA8               	incf	___awdiv@quotient+1,f
 18380  1312                     l10077:	
 18381  1312  0828               	movf	___awdiv@quotient+1,w
 18382  1313  00A1               	movwf	?___awdiv+1
 18383  1314  0827               	movf	___awdiv@quotient,w
 18384  1315  00A0               	movwf	?___awdiv
 18385  1316  0008               	return
 18386  1317                     __end_of___awdiv:	
 18387                           
 18388                           	psect	text61
 18389  0BD7                     __ptext61:	
 18390 ;; *************** function _LED_task_BEAT_STROBE *****************
 18391 ;; Defined at:
 18392 ;;		line 100 in file "led.c"
 18393 ;; Parameters:    Size  Location     Type
 18394 ;;		None
 18395 ;; Auto vars:     Size  Location     Type
 18396 ;;  beatState       1   79[BANK0 ] _Bool 
 18397 ;; Return value:  Size  Location     Type
 18398 ;;                  1    wreg      void 
 18399 ;; Registers used:
 18400 ;;		wreg, status,2, status,0, pclath, cstack
 18401 ;; Tracked objects:
 18402 ;;		On entry : 0/0
 18403 ;;		On exit  : 0/0
 18404 ;;		Unchanged: 0/0
 18405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18408 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18409 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18410 ;;Total ram usage:        3 bytes
 18411 ;; Hardware stack levels used:    1
 18412 ;; Hardware stack levels required when called:    8
 18413 ;; This function calls:
 18414 ;;		_BEAT_detected
 18415 ;;		_CLOCK_getTime
 18416 ;;		_LED_setColor
 18417 ;;		_beatColorCreator
 18418 ;; This function is called by:
 18419 ;;		_CONTROL_BEAT
 18420 ;;		_LED_task
 18421 ;; This function uses a non-reentrant model
 18422 ;;
 18423                           
 18424                           
 18425                           ;psect for function _LED_task_BEAT_STROBE
 18426  0BD7                     _LED_task_BEAT_STROBE:	
 18427                           
 18428                           ;led.c: 102:     if(CLOCK_getTime() - lastLedActiveTime < 50){
 18429                           
 18430                           ;incstack = 0
 18431                           ; Regs used in _LED_task_BEAT_STROBE: [wreg+status,2+status,0+pclath+cstack]
 18432  0BD7  319B  23E6  318B   	fcall	_CLOCK_getTime
 18433  0BDA  0142               	movlb	2	; select bank2
 18434  0BDB  0828               	movf	_lastLedActiveTime^(0+256),w
 18435  0BDC  0140               	movlb	0	; select bank0
 18436  0BDD  0220               	subwf	?_CLOCK_getTime,w
 18437  0BDE  0141               	movlb	1	; select bank1
 18438  0BDF  00BE               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 18439  0BE0  0142               	movlb	2	; select bank2
 18440  0BE1  0829               	movf	(_lastLedActiveTime+1)^(0+256),w
 18441  0BE2  0140               	movlb	0	; select bank0
 18442  0BE3  3B21               	subwfb	?_CLOCK_getTime+1,w
 18443  0BE4  0141               	movlb	1	; select bank1
 18444  0BE5  00BF               	movwf	(??_LED_task_BEAT_STROBE+1)^(0+128)
 18445  0BE6  3000               	movlw	0
 18446  0BE7  023F               	subwf	(??_LED_task_BEAT_STROBE+1)^(0+128),w
 18447  0BE8  3032               	movlw	50
 18448  0BE9  1903               	skipnz
 18449  0BEA  023E               	subwf	??_LED_task_BEAT_STROBE^(0+128),w
 18450  0BEB  1C03               	btfss	3,0
 18451  0BEC  0008               	return
 18452                           
 18453                           ;led.c: 106:     lastLedActiveTime = CLOCK_getTime();
 18454  0BED  319B  23E6  318B   	fcall	_CLOCK_getTime
 18455  0BF0  0140               	movlb	0	; select bank0
 18456  0BF1  0821               	movf	?_CLOCK_getTime+1,w
 18457  0BF2  0142               	movlb	2	; select bank2
 18458  0BF3  00A9               	movwf	(_lastLedActiveTime+1)^(0+256)
 18459  0BF4  0140               	movlb	0	; select bank0
 18460  0BF5  0820               	movf	?_CLOCK_getTime,w
 18461  0BF6  0142               	movlb	2	; select bank2
 18462  0BF7  00A8               	movwf	_lastLedActiveTime^(0+256)
 18463                           
 18464                           ;led.c: 108:     LATC5 = 0;
 18465  0BF8  0140               	movlb	0	; select bank0
 18466  0BF9  129A               	bcf	26,5	;volatile
 18467                           
 18468                           ;led.c: 109:     _Bool beatState = BEAT_detected();
 18469  0BFA  319B  23F8  318B   	fcall	_BEAT_detected
 18470  0BFD  0141               	movlb	1	; select bank1
 18471  0BFE  00BE               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 18472  0BFF  083E               	movf	??_LED_task_BEAT_STROBE^(0+128),w
 18473  0C00  0140               	movlb	0	; select bank0
 18474  0C01  00EF               	movwf	LED_task_BEAT_STROBE@beatState
 18475                           
 18476                           ;led.c: 111:     if (beatState) {
 18477  0C02  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 18478  0C03  1D03               	btfss	3,2
 18479                           
 18480                           ;led.c: 112:         LATC5 = 1;
 18481  0C04  169A               	bsf	26,5	;volatile
 18482                           
 18483                           ;led.c: 115:      if(!beatState){
 18484  0C05  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 18485  0C06  1D03               	btfss	3,2
 18486  0C07  2C1C               	goto	l11759
 18487                           
 18488                           ;led.c: 116:          LED_setColor(beatColorCreator(0,0,0,0));
 18489  0C08  0141               	movlb	1	; select bank1
 18490  0C09  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18491  0C0A  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 18492  0C0B  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 18493  0C0C  3000               	movlw	0
 18494  0C0D  3196  269A  318B   	fcall	_beatColorCreator
 18495  0C10  0141               	movlb	1	; select bank1
 18496  0C11  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 18497  0C12  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 18498  0C13  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 18499  0C14  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 18500  0C15  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 18501  0C16  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 18502  0C17  0829               	movf	?_beatColorCreator^(0+128),w
 18503  0C18  00B6               	movwf	LED_setColor@input^(0+128)
 18504  0C19  3186  2610         	fcall	_LED_setColor
 18505                           
 18506                           ;led.c: 117:     } else if (currentState == 1){
 18507  0C1B  0008               	return
 18508  0C1C                     l11759:	
 18509  0C1C  0141               	movlb	1	; select bank1
 18510  0C1D  034E               	decf	_currentState^(0+128),w
 18511  0C1E  044F               	iorwf	(_currentState+1)^(0+128),w
 18512  0C1F  1D03               	btfss	3,2
 18513  0C20  2C5F               	goto	l11765
 18514                           
 18515                           ;led.c: 118:         LED_setColor(beatColorCreator(0,0,0,1));
 18516  0C21  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18517  0C22  2C47               	goto	L7
 18518  0C23                     l11779:	
 18519                           ;led.c: 124:          LED_setColor(beatColorCreator(0,1,1,0));
 18520                           
 18521                           ;led.c: 121:          LED_setColor(beatColorCreator(0,1,0,1));
 18522                           
 18523                           
 18524                           ;led.c: 127:          LED_setColor(beatColorCreator(1,0,1,1));
 18525  0C23  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18526  0C24  2C3F               	goto	L19
 18527  0C25                     l11785:	
 18528                           
 18529                           ;led.c: 130:         LED_setColor(beatColorCreator(0,1,1,0));
 18530  0C25  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18531  0C26  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 18532  0C27  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 18533  0C28  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 18534  0C29  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 18535  0C2A  2C4A               	goto	L8
 18536  0C2B                     l11791:	
 18537                           
 18538                           ;led.c: 133:         LED_setColor(beatColorCreator(1,1,1,0));
 18539  0C2B  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18540  0C2C  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 18541  0C2D  2C36               	goto	L16
 18542  0C2E                     l11797:	
 18543                           
 18544                           ;led.c: 136:         LED_setColor(beatColorCreator(1,1,0,1));
 18545  0C2E  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18546  0C2F  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 18547  0C30  2C3B               	goto	L18
 18548  0C31                     l11809:	
 18549                           ;led.c: 139:          LED_setColor(beatColorCreator(0,1,0,1));
 18550                           
 18551                           
 18552                           ;led.c: 142:          LED_setColor(beatColorCreator(0,0,1,1));
 18553  0C31  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18554  0C32  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 18555  0C33  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 18556  0C34  2C48               	goto	L15
 18557  0C35                     l11815:	
 18558                           
 18559                           ;led.c: 145:          LED_setColor(beatColorCreator(1,0,1,0));
 18560  0C35  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18561  0C36                     L16:	
 18562  0C36  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 18563  0C37  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 18564  0C38  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 18565  0C39  2C43               	goto	L14
 18566  0C3A                     l11821:	
 18567                           
 18568                           ;led.c: 148:         LED_setColor(beatColorCreator(1,0,0,1));
 18569  0C3A  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18570  0C3B                     L18:	
 18571  0C3B  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 18572  0C3C  2C41               	goto	L17
 18573  0C3D                     l11827:	
 18574                           
 18575                           ;led.c: 151:         LED_setColor(beatColorCreator(1,1,1,1));
 18576  0C3D  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18577  0C3E  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 18578  0C3F                     L19:	
 18579  0C3F  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 18580  0C40  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 18581  0C41                     L17:	
 18582  0C41  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 18583  0C42  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 18584  0C43                     L14:	
 18585  0C43  3001               	movlw	1
 18586  0C44  2C4B               	goto	L9
 18587  0C45                     l11833:	
 18588                           
 18589                           ;led.c: 154:         LED_setColor(beatColorCreator(0,1,0,1));
 18590  0C45  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18591  0C46  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 18592  0C47                     L7:	
 18593  0C47  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 18594  0C48                     L15:	
 18595  0C48  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 18596  0C49  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 18597  0C4A                     L8:	
 18598  0C4A  3000               	movlw	0
 18599  0C4B                     L9:	
 18600  0C4B  3196  269A  318B   	fcall	_beatColorCreator
 18601  0C4E  0141               	movlb	1	; select bank1
 18602  0C4F  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 18603  0C50  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 18604  0C51  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 18605  0C52  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 18606  0C53  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 18607  0C54  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 18608  0C55  0829               	movf	?_beatColorCreator^(0+128),w
 18609  0C56  00B6               	movwf	LED_setColor@input^(0+128)
 18610  0C57  3186  2610         	fcall	_LED_setColor
 18611                           
 18612                           ;led.c: 119:         currentState++;
 18613  0C59  3001               	movlw	1
 18614  0C5A  0141               	movlb	1	; select bank1
 18615  0C5B  07CE               	addwf	_currentState^(0+128),f
 18616  0C5C  3000               	movlw	0
 18617  0C5D  3DCF               	addwfc	(_currentState+1)^(0+128),f
 18618                           
 18619                           ;led.c: 120:     } else if(currentState == 2){
 18620  0C5E  0008               	return
 18621  0C5F                     l11765:	
 18622  0C5F  3002               	movlw	2
 18623  0C60  064E               	xorwf	_currentState^(0+128),w
 18624  0C61  044F               	iorwf	(_currentState+1)^(0+128),w
 18625  0C62  1903               	btfsc	3,2
 18626  0C63  2C45               	goto	l11833
 18627  0C64  3003               	movlw	3
 18628  0C65  064E               	xorwf	_currentState^(0+128),w
 18629  0C66  044F               	iorwf	(_currentState+1)^(0+128),w
 18630  0C67  1903               	btfsc	3,2
 18631  0C68  2C25               	goto	l11785
 18632  0C69  3004               	movlw	4
 18633  0C6A  064E               	xorwf	_currentState^(0+128),w
 18634  0C6B  044F               	iorwf	(_currentState+1)^(0+128),w
 18635  0C6C  1903               	btfsc	3,2
 18636  0C6D  2C23               	goto	l11779
 18637  0C6E  3005               	movlw	5
 18638  0C6F  064E               	xorwf	_currentState^(0+128),w
 18639  0C70  044F               	iorwf	(_currentState+1)^(0+128),w
 18640  0C71  1903               	btfsc	3,2
 18641  0C72  2C25               	goto	l11785
 18642  0C73  3006               	movlw	6
 18643  0C74  064E               	xorwf	_currentState^(0+128),w
 18644  0C75  044F               	iorwf	(_currentState+1)^(0+128),w
 18645  0C76  1903               	btfsc	3,2
 18646  0C77  2C2B               	goto	l11791
 18647  0C78  3008               	movlw	8
 18648  0C79  064E               	xorwf	_currentState^(0+128),w
 18649  0C7A  044F               	iorwf	(_currentState+1)^(0+128),w
 18650  0C7B  1903               	btfsc	3,2
 18651  0C7C  2C2E               	goto	l11797
 18652  0C7D  3009               	movlw	9
 18653  0C7E  064E               	xorwf	_currentState^(0+128),w
 18654  0C7F  044F               	iorwf	(_currentState+1)^(0+128),w
 18655  0C80  1903               	btfsc	3,2
 18656  0C81  2C45               	goto	l11833
 18657  0C82  300A               	movlw	10
 18658  0C83  064E               	xorwf	_currentState^(0+128),w
 18659  0C84  044F               	iorwf	(_currentState+1)^(0+128),w
 18660  0C85  1903               	btfsc	3,2
 18661  0C86  2C31               	goto	l11809
 18662  0C87  300B               	movlw	11
 18663  0C88  064E               	xorwf	_currentState^(0+128),w
 18664  0C89  044F               	iorwf	(_currentState+1)^(0+128),w
 18665  0C8A  1903               	btfsc	3,2
 18666  0C8B  2C35               	goto	l11815
 18667  0C8C  300C               	movlw	12
 18668  0C8D  064E               	xorwf	_currentState^(0+128),w
 18669  0C8E  044F               	iorwf	(_currentState+1)^(0+128),w
 18670  0C8F  1903               	btfsc	3,2
 18671  0C90  2C3A               	goto	l11821
 18672  0C91  300D               	movlw	13
 18673  0C92  064E               	xorwf	_currentState^(0+128),w
 18674  0C93  044F               	iorwf	(_currentState+1)^(0+128),w
 18675  0C94  1903               	btfsc	3,2
 18676  0C95  2C3D               	goto	l11827
 18677  0C96  300E               	movlw	14
 18678  0C97  064E               	xorwf	_currentState^(0+128),w
 18679  0C98  044F               	iorwf	(_currentState+1)^(0+128),w
 18680  0C99  1903               	btfsc	3,2
 18681  0C9A  2C45               	goto	l11833
 18682                           
 18683                           ;led.c: 157:         LED_setColor(beatColorCreator(0,1,1,1));
 18684  0C9B  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 18685  0C9C  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 18686  0C9D  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 18687  0C9E  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 18688  0C9F  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 18689  0CA0  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 18690  0CA1  3000               	movlw	0
 18691  0CA2  3196  269A  318B   	fcall	_beatColorCreator
 18692  0CA5  0141               	movlb	1	; select bank1
 18693  0CA6  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 18694  0CA7  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 18695  0CA8  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 18696  0CA9  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 18697  0CAA  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 18698  0CAB  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 18699  0CAC  0829               	movf	?_beatColorCreator^(0+128),w
 18700  0CAD  00B6               	movwf	LED_setColor@input^(0+128)
 18701  0CAE  3186  2610         	fcall	_LED_setColor
 18702                           
 18703                           ;led.c: 158:         currentState = 1;
 18704  0CB0  3001               	movlw	1
 18705  0CB1  0141               	movlb	1	; select bank1
 18706  0CB2  00CE               	movwf	_currentState^(0+128)
 18707  0CB3  3000               	movlw	0
 18708  0CB4  00CF               	movwf	(_currentState^(0+128)+1)
 18709  0CB5  0008               	return
 18710  0CB6                     __end_of_LED_task_BEAT_STROBE:	
 18711                           
 18712                           	psect	text62
 18713  169A                     __ptext62:	
 18714 ;; *************** function _beatColorCreator *****************
 18715 ;; Defined at:
 18716 ;;		line 178 in file "led.c"
 18717 ;; Parameters:    Size  Location     Type
 18718 ;;  inRed           1    wreg     _Bool 
 18719 ;;  inGreen         1    9[BANK1 ] _Bool 
 18720 ;;  inBlue          1   10[BANK1 ] _Bool 
 18721 ;;  inWhite         1   11[BANK1 ] _Bool 
 18722 ;; Auto vars:     Size  Location     Type
 18723 ;;  inRed           1   13[BANK1 ] _Bool 
 18724 ;;  tempColor       4   18[BANK1 ] struct .
 18725 ;; Return value:  Size  Location     Type
 18726 ;;                  4    9[BANK1 ] struct .
 18727 ;; Registers used:
 18728 ;;		wreg, status,2, status,0, pclath, cstack
 18729 ;; Tracked objects:
 18730 ;;		On entry : 0/0
 18731 ;;		On exit  : 0/0
 18732 ;;		Unchanged: 0/0
 18733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18734 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18735 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18736 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18737 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18738 ;;Total ram usage:       14 bytes
 18739 ;; Hardware stack levels used:    1
 18740 ;; Hardware stack levels required when called:    7
 18741 ;; This function calls:
 18742 ;;		___fltol
 18743 ;;		_beatBrightnessCalculation
 18744 ;; This function is called by:
 18745 ;;		_LED_task
 18746 ;;		_LED_task_BEAT_STROBE
 18747 ;; This function uses a non-reentrant model
 18748 ;;
 18749                           
 18750                           
 18751                           ;psect for function _beatColorCreator
 18752  169A                     _beatColorCreator:	
 18753                           
 18754                           ;incstack = 0
 18755                           ; Regs used in _beatColorCreator: [wreg+status,2+status,0+pclath+cstack]
 18756                           ;beatColorCreator@inRed stored from wreg
 18757  169A  0141               	movlb	1	; select bank1
 18758  169B  00AD               	movwf	beatColorCreator@inRed^(0+128)
 18759                           
 18760                           ;led.c: 179:     color_t tempColor;;led.c: 181:     if(inRed)
 18761  169C  082D               	movf	beatColorCreator@inRed^(0+128),w
 18762  169D  1903               	btfsc	3,2
 18763  169E  2EC4               	goto	l11713
 18764                           
 18765                           ;led.c: 182:         tempColor.red = beatBrightnessCalculation();
 18766  169F  3187  2773  3196   	fcall	_beatBrightnessCalculation
 18767  16A2  0141               	movlb	1	; select bank1
 18768  16A3  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 18769  16A4  00B1               	movwf	(_beatColorCreator$4114+3)^(0+128)
 18770  16A5  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 18771  16A6  00B0               	movwf	(_beatColorCreator$4114+2)^(0+128)
 18772  16A7  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 18773  16A8  00AF               	movwf	(_beatColorCreator$4114+1)^(0+128)
 18774  16A9  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 18775  16AA  00AE               	movwf	_beatColorCreator$4114^(0+128)
 18776                           
 18777                           ;led.c: 182:         tempColor.red = beatBrightnessCalculation();
 18778  16AB  0831               	movf	(_beatColorCreator$4114+3)^(0+128),w
 18779  16AC  0140               	movlb	0	; select bank0
 18780  16AD  00E5               	movwf	___fltol@f1+3
 18781  16AE  0141               	movlb	1	; select bank1
 18782  16AF  0830               	movf	(_beatColorCreator$4114+2)^(0+128),w
 18783  16B0  0140               	movlb	0	; select bank0
 18784  16B1  00E4               	movwf	___fltol@f1+2
 18785  16B2  0141               	movlb	1	; select bank1
 18786  16B3  082F               	movf	(_beatColorCreator$4114+1)^(0+128),w
 18787  16B4  0140               	movlb	0	; select bank0
 18788  16B5  00E3               	movwf	___fltol@f1+1
 18789  16B6  0141               	movlb	1	; select bank1
 18790  16B7  082E               	movf	_beatColorCreator$4114^(0+128),w
 18791  16B8  0140               	movlb	0	; select bank0
 18792  16B9  00E2               	movwf	___fltol@f1
 18793  16BA  3194  2423  3196   	fcall	___fltol
 18794  16BD  0140               	movlb	0	; select bank0
 18795  16BE  0862               	movf	?___fltol,w
 18796  16BF  00EE               	movwf	??_beatColorCreator
 18797  16C0  086E               	movf	??_beatColorCreator,w
 18798  16C1  0141               	movlb	1	; select bank1
 18799  16C2  00B3               	movwf	(beatColorCreator@tempColor^(0+128)+1)
 18800  16C3  2EC5               	goto	l11715
 18801  16C4                     l11713:	
 18802                           
 18803                           ;led.c: 184:         tempColor.red = 0;
 18804  16C4  01B3               	clrf	(beatColorCreator@tempColor^(0+128)+1)
 18805  16C5                     l11715:	
 18806                           
 18807                           ;led.c: 186:     if(inBlue)
 18808  16C5  082A               	movf	beatColorCreator@inBlue^(0+128),w
 18809  16C6  1903               	btfsc	3,2
 18810  16C7  2EED               	goto	l11719
 18811                           
 18812                           ;led.c: 187:         tempColor.blue = beatBrightnessCalculation();
 18813  16C8  3187  2773  3196   	fcall	_beatBrightnessCalculation
 18814  16CB  0141               	movlb	1	; select bank1
 18815  16CC  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 18816  16CD  00B1               	movwf	(_beatColorCreator$4114+3)^(0+128)
 18817  16CE  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 18818  16CF  00B0               	movwf	(_beatColorCreator$4114+2)^(0+128)
 18819  16D0  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 18820  16D1  00AF               	movwf	(_beatColorCreator$4114+1)^(0+128)
 18821  16D2  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 18822  16D3  00AE               	movwf	_beatColorCreator$4114^(0+128)
 18823                           
 18824                           ;led.c: 187:         tempColor.blue = beatBrightnessCalculation();
 18825  16D4  0831               	movf	(_beatColorCreator$4114+3)^(0+128),w
 18826  16D5  0140               	movlb	0	; select bank0
 18827  16D6  00E5               	movwf	___fltol@f1+3
 18828  16D7  0141               	movlb	1	; select bank1
 18829  16D8  0830               	movf	(_beatColorCreator$4114+2)^(0+128),w
 18830  16D9  0140               	movlb	0	; select bank0
 18831  16DA  00E4               	movwf	___fltol@f1+2
 18832  16DB  0141               	movlb	1	; select bank1
 18833  16DC  082F               	movf	(_beatColorCreator$4114+1)^(0+128),w
 18834  16DD  0140               	movlb	0	; select bank0
 18835  16DE  00E3               	movwf	___fltol@f1+1
 18836  16DF  0141               	movlb	1	; select bank1
 18837  16E0  082E               	movf	_beatColorCreator$4114^(0+128),w
 18838  16E1  0140               	movlb	0	; select bank0
 18839  16E2  00E2               	movwf	___fltol@f1
 18840  16E3  3194  2423  3196   	fcall	___fltol
 18841  16E6  0140               	movlb	0	; select bank0
 18842  16E7  0862               	movf	?___fltol,w
 18843  16E8  00EE               	movwf	??_beatColorCreator
 18844  16E9  086E               	movf	??_beatColorCreator,w
 18845  16EA  0141               	movlb	1	; select bank1
 18846  16EB  00B5               	movwf	(beatColorCreator@tempColor^(0+128)+3)
 18847  16EC  2EEE               	goto	l11721
 18848  16ED                     l11719:	
 18849                           
 18850                           ;led.c: 189:         tempColor.blue = 0;
 18851  16ED  01B5               	clrf	(beatColorCreator@tempColor^(0+128)+3)
 18852  16EE                     l11721:	
 18853                           
 18854                           ;led.c: 191:     if(inGreen)
 18855  16EE  0829               	movf	beatColorCreator@inGreen^(0+128),w
 18856  16EF  1903               	btfsc	3,2
 18857  16F0  2F16               	goto	l11725
 18858                           
 18859                           ;led.c: 192:         tempColor.green = beatBrightnessCalculation();
 18860  16F1  3187  2773  3196   	fcall	_beatBrightnessCalculation
 18861  16F4  0141               	movlb	1	; select bank1
 18862  16F5  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 18863  16F6  00B1               	movwf	(_beatColorCreator$4114+3)^(0+128)
 18864  16F7  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 18865  16F8  00B0               	movwf	(_beatColorCreator$4114+2)^(0+128)
 18866  16F9  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 18867  16FA  00AF               	movwf	(_beatColorCreator$4114+1)^(0+128)
 18868  16FB  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 18869  16FC  00AE               	movwf	_beatColorCreator$4114^(0+128)
 18870                           
 18871                           ;led.c: 192:         tempColor.green = beatBrightnessCalculation();
 18872  16FD  0831               	movf	(_beatColorCreator$4114+3)^(0+128),w
 18873  16FE  0140               	movlb	0	; select bank0
 18874  16FF  00E5               	movwf	___fltol@f1+3
 18875  1700  0141               	movlb	1	; select bank1
 18876  1701  0830               	movf	(_beatColorCreator$4114+2)^(0+128),w
 18877  1702  0140               	movlb	0	; select bank0
 18878  1703  00E4               	movwf	___fltol@f1+2
 18879  1704  0141               	movlb	1	; select bank1
 18880  1705  082F               	movf	(_beatColorCreator$4114+1)^(0+128),w
 18881  1706  0140               	movlb	0	; select bank0
 18882  1707  00E3               	movwf	___fltol@f1+1
 18883  1708  0141               	movlb	1	; select bank1
 18884  1709  082E               	movf	_beatColorCreator$4114^(0+128),w
 18885  170A  0140               	movlb	0	; select bank0
 18886  170B  00E2               	movwf	___fltol@f1
 18887  170C  3194  2423  3196   	fcall	___fltol
 18888  170F  0140               	movlb	0	; select bank0
 18889  1710  0862               	movf	?___fltol,w
 18890  1711  00EE               	movwf	??_beatColorCreator
 18891  1712  086E               	movf	??_beatColorCreator,w
 18892  1713  0141               	movlb	1	; select bank1
 18893  1714  00B4               	movwf	(beatColorCreator@tempColor^(0+128)+2)
 18894  1715  2F17               	goto	l11727
 18895  1716                     l11725:	
 18896                           
 18897                           ;led.c: 194:         tempColor.green = 0;
 18898  1716  01B4               	clrf	(beatColorCreator@tempColor^(0+128)+2)
 18899  1717                     l11727:	
 18900                           
 18901                           ;led.c: 196:     if(inWhite)
 18902  1717  082B               	movf	beatColorCreator@inWhite^(0+128),w
 18903  1718  1903               	btfsc	3,2
 18904  1719  2F3F               	goto	l11731
 18905                           
 18906                           ;led.c: 197:         tempColor.white = beatBrightnessCalculation();
 18907  171A  3187  2773  3196   	fcall	_beatBrightnessCalculation
 18908  171D  0141               	movlb	1	; select bank1
 18909  171E  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 18910  171F  00B1               	movwf	(_beatColorCreator$4114+3)^(0+128)
 18911  1720  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 18912  1721  00B0               	movwf	(_beatColorCreator$4114+2)^(0+128)
 18913  1722  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 18914  1723  00AF               	movwf	(_beatColorCreator$4114+1)^(0+128)
 18915  1724  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 18916  1725  00AE               	movwf	_beatColorCreator$4114^(0+128)
 18917                           
 18918                           ;led.c: 197:         tempColor.white = beatBrightnessCalculation();
 18919  1726  0831               	movf	(_beatColorCreator$4114+3)^(0+128),w
 18920  1727  0140               	movlb	0	; select bank0
 18921  1728  00E5               	movwf	___fltol@f1+3
 18922  1729  0141               	movlb	1	; select bank1
 18923  172A  0830               	movf	(_beatColorCreator$4114+2)^(0+128),w
 18924  172B  0140               	movlb	0	; select bank0
 18925  172C  00E4               	movwf	___fltol@f1+2
 18926  172D  0141               	movlb	1	; select bank1
 18927  172E  082F               	movf	(_beatColorCreator$4114+1)^(0+128),w
 18928  172F  0140               	movlb	0	; select bank0
 18929  1730  00E3               	movwf	___fltol@f1+1
 18930  1731  0141               	movlb	1	; select bank1
 18931  1732  082E               	movf	_beatColorCreator$4114^(0+128),w
 18932  1733  0140               	movlb	0	; select bank0
 18933  1734  00E2               	movwf	___fltol@f1
 18934  1735  3194  2423  3196   	fcall	___fltol
 18935  1738  0140               	movlb	0	; select bank0
 18936  1739  0862               	movf	?___fltol,w
 18937  173A  00EE               	movwf	??_beatColorCreator
 18938  173B  086E               	movf	??_beatColorCreator,w
 18939  173C  0141               	movlb	1	; select bank1
 18940  173D  00B2               	movwf	beatColorCreator@tempColor^(0+128)
 18941  173E  2F40               	goto	l11733
 18942  173F                     l11731:	
 18943                           
 18944                           ;led.c: 199:         tempColor.white = 0;
 18945  173F  01B2               	clrf	beatColorCreator@tempColor^(0+128)
 18946  1740                     l11733:	
 18947                           
 18948                           ;led.c: 201:     return tempColor;
 18949  1740  0835               	movf	(beatColorCreator@tempColor+3)^(0+128),w
 18950  1741  00AC               	movwf	(?_beatColorCreator+3)^(0+128)
 18951  1742  0834               	movf	(beatColorCreator@tempColor+2)^(0+128),w
 18952  1743  00AB               	movwf	(?_beatColorCreator+2)^(0+128)
 18953  1744  0833               	movf	(beatColorCreator@tempColor+1)^(0+128),w
 18954  1745  00AA               	movwf	(?_beatColorCreator+1)^(0+128)
 18955  1746  0832               	movf	beatColorCreator@tempColor^(0+128),w
 18956  1747  00A9               	movwf	?_beatColorCreator^(0+128)
 18957  1748  0008               	return
 18958  1749                     __end_of_beatColorCreator:	
 18959                           
 18960                           	psect	text63
 18961  0773                     __ptext63:	
 18962 ;; *************** function _beatBrightnessCalculation *****************
 18963 ;; Defined at:
 18964 ;;		line 163 in file "led.c"
 18965 ;; Parameters:    Size  Location     Type
 18966 ;;		None
 18967 ;; Auto vars:     Size  Location     Type
 18968 ;;  temp            1   77[BANK0 ] unsigned char 
 18969 ;; Return value:  Size  Location     Type
 18970 ;;                  4    0[BANK1 ] float 
 18971 ;; Registers used:
 18972 ;;		wreg, status,2, status,0, pclath, cstack
 18973 ;; Tracked objects:
 18974 ;;		On entry : 0/0
 18975 ;;		On exit  : 0/0
 18976 ;;		Unchanged: 0/0
 18977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18978 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18980 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18981 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18982 ;;Total ram usage:       10 bytes
 18983 ;; Hardware stack levels used:    1
 18984 ;; Hardware stack levels required when called:    6
 18985 ;; This function calls:
 18986 ;;		___fldiv
 18987 ;;		___flmul
 18988 ;;		___fltol
 18989 ;;		___xxtofl
 18990 ;; This function is called by:
 18991 ;;		_beatColorCreator
 18992 ;; This function uses a non-reentrant model
 18993 ;;
 18994                           
 18995                           
 18996                           ;psect for function _beatBrightnessCalculation
 18997  0773                     _beatBrightnessCalculation:	
 18998                           
 18999                           ;led.c: 164:     uint8_t temp = (float)(beatBrightness/9.0) * 255;
 19000                           
 19001                           ;incstack = 0
 19002                           ; Regs used in _beatBrightnessCalculation: [wreg+status,2+status,0+pclath+cstack]
 19003  0773  0141               	movlb	1	; select bank1
 19004  0774  086F               	movf	_beatBrightness^(0+128),w
 19005  0775  00A4               	movwf	??_beatBrightnessCalculation^(0+128)
 19006  0776  01A5               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 19007  0777  01A6               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 19008  0778  01A7               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 19009  0779  0827               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 19010  077A  0140               	movlb	0	; select bank0
 19011  077B  00A3               	movwf	___xxtofl@val+3
 19012  077C  0141               	movlb	1	; select bank1
 19013  077D  0826               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 19014  077E  0140               	movlb	0	; select bank0
 19015  077F  00A2               	movwf	___xxtofl@val+2
 19016  0780  0141               	movlb	1	; select bank1
 19017  0781  0825               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 19018  0782  0140               	movlb	0	; select bank0
 19019  0783  00A1               	movwf	___xxtofl@val+1
 19020  0784  0141               	movlb	1	; select bank1
 19021  0785  0824               	movf	??_beatBrightnessCalculation^(0+128),w
 19022  0786  0140               	movlb	0	; select bank0
 19023  0787  00A0               	movwf	___xxtofl@val
 19024  0788  3001               	movlw	1
 19025  0789  3195  256B  3187   	fcall	___xxtofl
 19026  078C  0140               	movlb	0	; select bank0
 19027  078D  0823               	movf	?___xxtofl+3,w
 19028  078E  00B5               	movwf	___fldiv@b+3
 19029  078F  0822               	movf	?___xxtofl+2,w
 19030  0790  00B4               	movwf	___fldiv@b+2
 19031  0791  0821               	movf	?___xxtofl+1,w
 19032  0792  00B3               	movwf	___fldiv@b+1
 19033  0793  0820               	movf	?___xxtofl,w
 19034  0794  00B2               	movwf	___fldiv@b
 19035  0795  3041               	movlw	65
 19036  0796  00B1               	movwf	___fldiv@a+3
 19037  0797  3010               	movlw	16
 19038  0798  00B0               	movwf	___fldiv@a+2
 19039  0799  3000               	movlw	0
 19040  079A  00AF               	movwf	___fldiv@a+1
 19041  079B  3000               	movlw	0
 19042  079C  00AE               	movwf	___fldiv@a
 19043  079D  3184  2496  3187   	fcall	___fldiv
 19044  07A0  0140               	movlb	0	; select bank0
 19045  07A1  0831               	movf	?___fldiv+3,w
 19046  07A2  00CF               	movwf	___flmul@a+3
 19047  07A3  0830               	movf	?___fldiv+2,w
 19048  07A4  00CE               	movwf	___flmul@a+2
 19049  07A5  082F               	movf	?___fldiv+1,w
 19050  07A6  00CD               	movwf	___flmul@a+1
 19051  07A7  082E               	movf	?___fldiv,w
 19052  07A8  00CC               	movwf	___flmul@a
 19053  07A9  3043               	movlw	67
 19054  07AA  00CB               	movwf	___flmul@b+3
 19055  07AB  307F               	movlw	127
 19056  07AC  00CA               	movwf	___flmul@b+2
 19057  07AD  3000               	movlw	0
 19058  07AE  00C9               	movwf	___flmul@b+1
 19059  07AF  3000               	movlw	0
 19060  07B0  00C8               	movwf	___flmul@b
 19061  07B1  3180  20A5  3187   	fcall	___flmul
 19062  07B4  0140               	movlb	0	; select bank0
 19063  07B5  084B               	movf	?___flmul+3,w
 19064  07B6  00E5               	movwf	___fltol@f1+3
 19065  07B7  084A               	movf	?___flmul+2,w
 19066  07B8  00E4               	movwf	___fltol@f1+2
 19067  07B9  0849               	movf	?___flmul+1,w
 19068  07BA  00E3               	movwf	___fltol@f1+1
 19069  07BB  0848               	movf	?___flmul,w
 19070  07BC  00E2               	movwf	___fltol@f1
 19071  07BD  3194  2423  3187   	fcall	___fltol
 19072  07C0  0140               	movlb	0	; select bank0
 19073  07C1  0862               	movf	?___fltol,w
 19074  07C2  0141               	movlb	1	; select bank1
 19075  07C3  00A8               	movwf	(??_beatBrightnessCalculation+4)^(0+128)
 19076  07C4  0828               	movf	(??_beatBrightnessCalculation+4)^(0+128),w
 19077  07C5  0140               	movlb	0	; select bank0
 19078  07C6  00ED               	movwf	beatBrightnessCalculation@temp
 19079                           
 19080                           ;led.c: 165:     return temp;
 19081  07C7  086D               	movf	beatBrightnessCalculation@temp,w
 19082  07C8  0141               	movlb	1	; select bank1
 19083  07C9  00A4               	movwf	??_beatBrightnessCalculation^(0+128)
 19084  07CA  01A5               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 19085  07CB  01A6               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 19086  07CC  01A7               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 19087  07CD  0827               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 19088  07CE  0140               	movlb	0	; select bank0
 19089  07CF  00A3               	movwf	___xxtofl@val+3
 19090  07D0  0141               	movlb	1	; select bank1
 19091  07D1  0826               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 19092  07D2  0140               	movlb	0	; select bank0
 19093  07D3  00A2               	movwf	___xxtofl@val+2
 19094  07D4  0141               	movlb	1	; select bank1
 19095  07D5  0825               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 19096  07D6  0140               	movlb	0	; select bank0
 19097  07D7  00A1               	movwf	___xxtofl@val+1
 19098  07D8  0141               	movlb	1	; select bank1
 19099  07D9  0824               	movf	??_beatBrightnessCalculation^(0+128),w
 19100  07DA  0140               	movlb	0	; select bank0
 19101  07DB  00A0               	movwf	___xxtofl@val
 19102  07DC  3000               	movlw	0
 19103  07DD  3195  256B         	fcall	___xxtofl
 19104  07DF  0140               	movlb	0	; select bank0
 19105  07E0  0823               	movf	?___xxtofl+3,w
 19106  07E1  0141               	movlb	1	; select bank1
 19107  07E2  00A3               	movwf	(?_beatBrightnessCalculation+3)^(0+128)
 19108  07E3  0140               	movlb	0	; select bank0
 19109  07E4  0822               	movf	?___xxtofl+2,w
 19110  07E5  0141               	movlb	1	; select bank1
 19111  07E6  00A2               	movwf	(?_beatBrightnessCalculation+2)^(0+128)
 19112  07E7  0140               	movlb	0	; select bank0
 19113  07E8  0821               	movf	?___xxtofl+1,w
 19114  07E9  0141               	movlb	1	; select bank1
 19115  07EA  00A1               	movwf	(?_beatBrightnessCalculation+1)^(0+128)
 19116  07EB  0140               	movlb	0	; select bank0
 19117  07EC  0820               	movf	?___xxtofl,w
 19118  07ED  0141               	movlb	1	; select bank1
 19119  07EE  00A0               	movwf	?_beatBrightnessCalculation^(0+128)
 19120  07EF  0008               	return
 19121  07F0                     __end_of_beatBrightnessCalculation:	
 19122                           
 19123                           	psect	text64
 19124  0610                     __ptext64:	
 19125 ;; *************** function _LED_setColor *****************
 19126 ;; Defined at:
 19127 ;;		line 26 in file "led.c"
 19128 ;; Parameters:    Size  Location     Type
 19129 ;;  input           4   22[BANK1 ] struct .
 19130 ;; Auto vars:     Size  Location     Type
 19131 ;;		None
 19132 ;; Return value:  Size  Location     Type
 19133 ;;                  1    wreg      void 
 19134 ;; Registers used:
 19135 ;;		wreg, status,2, status,0, pclath, cstack
 19136 ;; Tracked objects:
 19137 ;;		On entry : 0/0
 19138 ;;		On exit  : 0/0
 19139 ;;		Unchanged: 0/0
 19140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19141 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19143 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19144 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19145 ;;Total ram usage:        8 bytes
 19146 ;; Hardware stack levels used:    1
 19147 ;; Hardware stack levels required when called:    6
 19148 ;; This function calls:
 19149 ;;		_PWM1_LoadDutyValue
 19150 ;;		_PWM2_LoadDutyValue
 19151 ;;		_PWM3_LoadDutyValue
 19152 ;;		_PWM4_LoadDutyValue
 19153 ;;		___fldiv
 19154 ;;		___flmul
 19155 ;;		___fltol
 19156 ;;		___xxtofl
 19157 ;; This function is called by:
 19158 ;;		_LED_task_DMX
 19159 ;;		_LED_task
 19160 ;;		_LED_task_MANUAL
 19161 ;;		_LED_task_BEAT_STROBE
 19162 ;; This function uses a non-reentrant model
 19163 ;;
 19164                           
 19165                           
 19166                           ;psect for function _LED_setColor
 19167  0610                     _LED_setColor:	
 19168                           
 19169                           ;led.c: 27:     if(!startup){
 19170                           
 19171                           ;incstack = 0
 19172                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 19173  0610  0141               	movlb	1	; select bank1
 19174  0611  086E               	movf	_startup^(0+128),w
 19175  0612  1D03               	btfss	3,2
 19176  0613  0008               	return
 19177                           
 19178                           ;led.c: 28:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 127 );
 19179  0614  0837               	movf	(LED_setColor@input^(0+128)+1),w
 19180  0615  00BA               	movwf	??_LED_setColor^(0+128)
 19181  0616  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 19182  0617  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 19183  0618  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 19184  0619  083D               	movf	(??_LED_setColor+3)^(0+128),w
 19185  061A  0140               	movlb	0	; select bank0
 19186  061B  00A3               	movwf	___xxtofl@val+3
 19187  061C  0141               	movlb	1	; select bank1
 19188  061D  083C               	movf	(??_LED_setColor+2)^(0+128),w
 19189  061E  0140               	movlb	0	; select bank0
 19190  061F  00A2               	movwf	___xxtofl@val+2
 19191  0620  0141               	movlb	1	; select bank1
 19192  0621  083B               	movf	(??_LED_setColor+1)^(0+128),w
 19193  0622  0140               	movlb	0	; select bank0
 19194  0623  00A1               	movwf	___xxtofl@val+1
 19195  0624  0141               	movlb	1	; select bank1
 19196  0625  083A               	movf	??_LED_setColor^(0+128),w
 19197  0626  0140               	movlb	0	; select bank0
 19198  0627  00A0               	movwf	___xxtofl@val
 19199  0628  3001               	movlw	1
 19200  0629  3195  256B  3186   	fcall	___xxtofl
 19201  062C  0140               	movlb	0	; select bank0
 19202  062D  0823               	movf	?___xxtofl+3,w
 19203  062E  00B5               	movwf	___fldiv@b+3
 19204  062F  0822               	movf	?___xxtofl+2,w
 19205  0630  00B4               	movwf	___fldiv@b+2
 19206  0631  0821               	movf	?___xxtofl+1,w
 19207  0632  00B3               	movwf	___fldiv@b+1
 19208  0633  0820               	movf	?___xxtofl,w
 19209  0634  00B2               	movwf	___fldiv@b
 19210  0635  3043               	movlw	67
 19211  0636  00B1               	movwf	___fldiv@a+3
 19212  0637  307F               	movlw	127
 19213  0638  00B0               	movwf	___fldiv@a+2
 19214  0639  3000               	movlw	0
 19215  063A  00AF               	movwf	___fldiv@a+1
 19216  063B  3000               	movlw	0
 19217  063C  00AE               	movwf	___fldiv@a
 19218  063D  3184  2496  3186   	fcall	___fldiv
 19219  0640  0140               	movlb	0	; select bank0
 19220  0641  0831               	movf	?___fldiv+3,w
 19221  0642  00CF               	movwf	___flmul@a+3
 19222  0643  0830               	movf	?___fldiv+2,w
 19223  0644  00CE               	movwf	___flmul@a+2
 19224  0645  082F               	movf	?___fldiv+1,w
 19225  0646  00CD               	movwf	___flmul@a+1
 19226  0647  082E               	movf	?___fldiv,w
 19227  0648  00CC               	movwf	___flmul@a
 19228  0649  3042               	movlw	66
 19229  064A  00CB               	movwf	___flmul@b+3
 19230  064B  30FE               	movlw	254
 19231  064C  00CA               	movwf	___flmul@b+2
 19232  064D  3000               	movlw	0
 19233  064E  00C9               	movwf	___flmul@b+1
 19234  064F  3000               	movlw	0
 19235  0650  00C8               	movwf	___flmul@b
 19236  0651  3180  20A5  3186   	fcall	___flmul
 19237  0654  0140               	movlb	0	; select bank0
 19238  0655  084B               	movf	?___flmul+3,w
 19239  0656  00E5               	movwf	___fltol@f1+3
 19240  0657  084A               	movf	?___flmul+2,w
 19241  0658  00E4               	movwf	___fltol@f1+2
 19242  0659  0849               	movf	?___flmul+1,w
 19243  065A  00E3               	movwf	___fltol@f1+1
 19244  065B  0848               	movf	?___flmul,w
 19245  065C  00E2               	movwf	___fltol@f1
 19246  065D  3194  2423  3186   	fcall	___fltol
 19247  0660  0140               	movlb	0	; select bank0
 19248  0661  0863               	movf	?___fltol+1,w
 19249  0662  0141               	movlb	1	; select bank1
 19250  0663  00A1               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128)
 19251  0664  0140               	movlb	0	; select bank0
 19252  0665  0862               	movf	?___fltol,w
 19253  0666  0141               	movlb	1	; select bank1
 19254  0667  00A0               	movwf	PWM1_LoadDutyValue@dutyValue^(0+128)
 19255  0668  319E  260B  3186   	fcall	_PWM1_LoadDutyValue
 19256                           
 19257                           ;led.c: 29:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 127 );
 19258  066B  0141               	movlb	1	; select bank1
 19259  066C  0838               	movf	(LED_setColor@input^(0+128)+2),w
 19260  066D  00BA               	movwf	??_LED_setColor^(0+128)
 19261  066E  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 19262  066F  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 19263  0670  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 19264  0671  083D               	movf	(??_LED_setColor+3)^(0+128),w
 19265  0672  0140               	movlb	0	; select bank0
 19266  0673  00A3               	movwf	___xxtofl@val+3
 19267  0674  0141               	movlb	1	; select bank1
 19268  0675  083C               	movf	(??_LED_setColor+2)^(0+128),w
 19269  0676  0140               	movlb	0	; select bank0
 19270  0677  00A2               	movwf	___xxtofl@val+2
 19271  0678  0141               	movlb	1	; select bank1
 19272  0679  083B               	movf	(??_LED_setColor+1)^(0+128),w
 19273  067A  0140               	movlb	0	; select bank0
 19274  067B  00A1               	movwf	___xxtofl@val+1
 19275  067C  0141               	movlb	1	; select bank1
 19276  067D  083A               	movf	??_LED_setColor^(0+128),w
 19277  067E  0140               	movlb	0	; select bank0
 19278  067F  00A0               	movwf	___xxtofl@val
 19279  0680  3001               	movlw	1
 19280  0681  3195  256B  3186   	fcall	___xxtofl
 19281  0684  0140               	movlb	0	; select bank0
 19282  0685  0823               	movf	?___xxtofl+3,w
 19283  0686  00B5               	movwf	___fldiv@b+3
 19284  0687  0822               	movf	?___xxtofl+2,w
 19285  0688  00B4               	movwf	___fldiv@b+2
 19286  0689  0821               	movf	?___xxtofl+1,w
 19287  068A  00B3               	movwf	___fldiv@b+1
 19288  068B  0820               	movf	?___xxtofl,w
 19289  068C  00B2               	movwf	___fldiv@b
 19290  068D  3043               	movlw	67
 19291  068E  00B1               	movwf	___fldiv@a+3
 19292  068F  307F               	movlw	127
 19293  0690  00B0               	movwf	___fldiv@a+2
 19294  0691  3000               	movlw	0
 19295  0692  00AF               	movwf	___fldiv@a+1
 19296  0693  3000               	movlw	0
 19297  0694  00AE               	movwf	___fldiv@a
 19298  0695  3184  2496  3186   	fcall	___fldiv
 19299  0698  0140               	movlb	0	; select bank0
 19300  0699  0831               	movf	?___fldiv+3,w
 19301  069A  00CF               	movwf	___flmul@a+3
 19302  069B  0830               	movf	?___fldiv+2,w
 19303  069C  00CE               	movwf	___flmul@a+2
 19304  069D  082F               	movf	?___fldiv+1,w
 19305  069E  00CD               	movwf	___flmul@a+1
 19306  069F  082E               	movf	?___fldiv,w
 19307  06A0  00CC               	movwf	___flmul@a
 19308  06A1  3042               	movlw	66
 19309  06A2  00CB               	movwf	___flmul@b+3
 19310  06A3  30FE               	movlw	254
 19311  06A4  00CA               	movwf	___flmul@b+2
 19312  06A5  3000               	movlw	0
 19313  06A6  00C9               	movwf	___flmul@b+1
 19314  06A7  3000               	movlw	0
 19315  06A8  00C8               	movwf	___flmul@b
 19316  06A9  3180  20A5  3186   	fcall	___flmul
 19317  06AC  0140               	movlb	0	; select bank0
 19318  06AD  084B               	movf	?___flmul+3,w
 19319  06AE  00E5               	movwf	___fltol@f1+3
 19320  06AF  084A               	movf	?___flmul+2,w
 19321  06B0  00E4               	movwf	___fltol@f1+2
 19322  06B1  0849               	movf	?___flmul+1,w
 19323  06B2  00E3               	movwf	___fltol@f1+1
 19324  06B3  0848               	movf	?___flmul,w
 19325  06B4  00E2               	movwf	___fltol@f1
 19326  06B5  3194  2423  3186   	fcall	___fltol
 19327  06B8  0140               	movlb	0	; select bank0
 19328  06B9  0863               	movf	?___fltol+1,w
 19329  06BA  0141               	movlb	1	; select bank1
 19330  06BB  00A1               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128)
 19331  06BC  0140               	movlb	0	; select bank0
 19332  06BD  0862               	movf	?___fltol,w
 19333  06BE  0141               	movlb	1	; select bank1
 19334  06BF  00A0               	movwf	PWM2_LoadDutyValue@dutyValue^(0+128)
 19335  06C0  319E  2629  3186   	fcall	_PWM2_LoadDutyValue
 19336                           
 19337                           ;led.c: 30:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 127 );
 19338  06C3  0141               	movlb	1	; select bank1
 19339  06C4  0839               	movf	(LED_setColor@input^(0+128)+3),w
 19340  06C5  00BA               	movwf	??_LED_setColor^(0+128)
 19341  06C6  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 19342  06C7  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 19343  06C8  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 19344  06C9  083D               	movf	(??_LED_setColor+3)^(0+128),w
 19345  06CA  0140               	movlb	0	; select bank0
 19346  06CB  00A3               	movwf	___xxtofl@val+3
 19347  06CC  0141               	movlb	1	; select bank1
 19348  06CD  083C               	movf	(??_LED_setColor+2)^(0+128),w
 19349  06CE  0140               	movlb	0	; select bank0
 19350  06CF  00A2               	movwf	___xxtofl@val+2
 19351  06D0  0141               	movlb	1	; select bank1
 19352  06D1  083B               	movf	(??_LED_setColor+1)^(0+128),w
 19353  06D2  0140               	movlb	0	; select bank0
 19354  06D3  00A1               	movwf	___xxtofl@val+1
 19355  06D4  0141               	movlb	1	; select bank1
 19356  06D5  083A               	movf	??_LED_setColor^(0+128),w
 19357  06D6  0140               	movlb	0	; select bank0
 19358  06D7  00A0               	movwf	___xxtofl@val
 19359  06D8  3001               	movlw	1
 19360  06D9  3195  256B  3186   	fcall	___xxtofl
 19361  06DC  0140               	movlb	0	; select bank0
 19362  06DD  0823               	movf	?___xxtofl+3,w
 19363  06DE  00B5               	movwf	___fldiv@b+3
 19364  06DF  0822               	movf	?___xxtofl+2,w
 19365  06E0  00B4               	movwf	___fldiv@b+2
 19366  06E1  0821               	movf	?___xxtofl+1,w
 19367  06E2  00B3               	movwf	___fldiv@b+1
 19368  06E3  0820               	movf	?___xxtofl,w
 19369  06E4  00B2               	movwf	___fldiv@b
 19370  06E5  3043               	movlw	67
 19371  06E6  00B1               	movwf	___fldiv@a+3
 19372  06E7  307F               	movlw	127
 19373  06E8  00B0               	movwf	___fldiv@a+2
 19374  06E9  3000               	movlw	0
 19375  06EA  00AF               	movwf	___fldiv@a+1
 19376  06EB  3000               	movlw	0
 19377  06EC  00AE               	movwf	___fldiv@a
 19378  06ED  3184  2496  3186   	fcall	___fldiv
 19379  06F0  0140               	movlb	0	; select bank0
 19380  06F1  0831               	movf	?___fldiv+3,w
 19381  06F2  00CF               	movwf	___flmul@a+3
 19382  06F3  0830               	movf	?___fldiv+2,w
 19383  06F4  00CE               	movwf	___flmul@a+2
 19384  06F5  082F               	movf	?___fldiv+1,w
 19385  06F6  00CD               	movwf	___flmul@a+1
 19386  06F7  082E               	movf	?___fldiv,w
 19387  06F8  00CC               	movwf	___flmul@a
 19388  06F9  3042               	movlw	66
 19389  06FA  00CB               	movwf	___flmul@b+3
 19390  06FB  30FE               	movlw	254
 19391  06FC  00CA               	movwf	___flmul@b+2
 19392  06FD  3000               	movlw	0
 19393  06FE  00C9               	movwf	___flmul@b+1
 19394  06FF  3000               	movlw	0
 19395  0700  00C8               	movwf	___flmul@b
 19396  0701  3180  20A5  3186   	fcall	___flmul
 19397  0704  0140               	movlb	0	; select bank0
 19398  0705  084B               	movf	?___flmul+3,w
 19399  0706  00E5               	movwf	___fltol@f1+3
 19400  0707  084A               	movf	?___flmul+2,w
 19401  0708  00E4               	movwf	___fltol@f1+2
 19402  0709  0849               	movf	?___flmul+1,w
 19403  070A  00E3               	movwf	___fltol@f1+1
 19404  070B  0848               	movf	?___flmul,w
 19405  070C  00E2               	movwf	___fltol@f1
 19406  070D  3194  2423  3186   	fcall	___fltol
 19407  0710  0140               	movlb	0	; select bank0
 19408  0711  0863               	movf	?___fltol+1,w
 19409  0712  0141               	movlb	1	; select bank1
 19410  0713  00A1               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
 19411  0714  0140               	movlb	0	; select bank0
 19412  0715  0862               	movf	?___fltol,w
 19413  0716  0141               	movlb	1	; select bank1
 19414  0717  00A0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
 19415  0718  319E  2647  3186   	fcall	_PWM3_LoadDutyValue
 19416                           
 19417                           ;led.c: 31:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 127 );
 19418  071B  0141               	movlb	1	; select bank1
 19419  071C  0836               	movf	LED_setColor@input^(0+128),w
 19420  071D  00BA               	movwf	??_LED_setColor^(0+128)
 19421  071E  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 19422  071F  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 19423  0720  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 19424  0721  083D               	movf	(??_LED_setColor+3)^(0+128),w
 19425  0722  0140               	movlb	0	; select bank0
 19426  0723  00A3               	movwf	___xxtofl@val+3
 19427  0724  0141               	movlb	1	; select bank1
 19428  0725  083C               	movf	(??_LED_setColor+2)^(0+128),w
 19429  0726  0140               	movlb	0	; select bank0
 19430  0727  00A2               	movwf	___xxtofl@val+2
 19431  0728  0141               	movlb	1	; select bank1
 19432  0729  083B               	movf	(??_LED_setColor+1)^(0+128),w
 19433  072A  0140               	movlb	0	; select bank0
 19434  072B  00A1               	movwf	___xxtofl@val+1
 19435  072C  0141               	movlb	1	; select bank1
 19436  072D  083A               	movf	??_LED_setColor^(0+128),w
 19437  072E  0140               	movlb	0	; select bank0
 19438  072F  00A0               	movwf	___xxtofl@val
 19439  0730  3001               	movlw	1
 19440  0731  3195  256B  3186   	fcall	___xxtofl
 19441  0734  0140               	movlb	0	; select bank0
 19442  0735  0823               	movf	?___xxtofl+3,w
 19443  0736  00B5               	movwf	___fldiv@b+3
 19444  0737  0822               	movf	?___xxtofl+2,w
 19445  0738  00B4               	movwf	___fldiv@b+2
 19446  0739  0821               	movf	?___xxtofl+1,w
 19447  073A  00B3               	movwf	___fldiv@b+1
 19448  073B  0820               	movf	?___xxtofl,w
 19449  073C  00B2               	movwf	___fldiv@b
 19450  073D  3043               	movlw	67
 19451  073E  00B1               	movwf	___fldiv@a+3
 19452  073F  307F               	movlw	127
 19453  0740  00B0               	movwf	___fldiv@a+2
 19454  0741  3000               	movlw	0
 19455  0742  00AF               	movwf	___fldiv@a+1
 19456  0743  3000               	movlw	0
 19457  0744  00AE               	movwf	___fldiv@a
 19458  0745  3184  2496  3186   	fcall	___fldiv
 19459  0748  0140               	movlb	0	; select bank0
 19460  0749  0831               	movf	?___fldiv+3,w
 19461  074A  00CF               	movwf	___flmul@a+3
 19462  074B  0830               	movf	?___fldiv+2,w
 19463  074C  00CE               	movwf	___flmul@a+2
 19464  074D  082F               	movf	?___fldiv+1,w
 19465  074E  00CD               	movwf	___flmul@a+1
 19466  074F  082E               	movf	?___fldiv,w
 19467  0750  00CC               	movwf	___flmul@a
 19468  0751  3042               	movlw	66
 19469  0752  00CB               	movwf	___flmul@b+3
 19470  0753  30FE               	movlw	254
 19471  0754  00CA               	movwf	___flmul@b+2
 19472  0755  3000               	movlw	0
 19473  0756  00C9               	movwf	___flmul@b+1
 19474  0757  3000               	movlw	0
 19475  0758  00C8               	movwf	___flmul@b
 19476  0759  3180  20A5  3186   	fcall	___flmul
 19477  075C  0140               	movlb	0	; select bank0
 19478  075D  084B               	movf	?___flmul+3,w
 19479  075E  00E5               	movwf	___fltol@f1+3
 19480  075F  084A               	movf	?___flmul+2,w
 19481  0760  00E4               	movwf	___fltol@f1+2
 19482  0761  0849               	movf	?___flmul+1,w
 19483  0762  00E3               	movwf	___fltol@f1+1
 19484  0763  0848               	movf	?___flmul,w
 19485  0764  00E2               	movwf	___fltol@f1
 19486  0765  3194  2423  3186   	fcall	___fltol
 19487  0768  0140               	movlb	0	; select bank0
 19488  0769  0863               	movf	?___fltol+1,w
 19489  076A  0141               	movlb	1	; select bank1
 19490  076B  00A1               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128)
 19491  076C  0140               	movlb	0	; select bank0
 19492  076D  0862               	movf	?___fltol,w
 19493  076E  0141               	movlb	1	; select bank1
 19494  076F  00A0               	movwf	PWM4_LoadDutyValue@dutyValue^(0+128)
 19495  0770  319E  2665         	fcall	_PWM4_LoadDutyValue
 19496  0772  0008               	return
 19497  0773                     __end_of_LED_setColor:	
 19498                           
 19499                           	psect	text65
 19500  156B                     __ptext65:	
 19501 ;; *************** function ___xxtofl *****************
 19502 ;; Defined at:
 19503 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 19504 ;; Parameters:    Size  Location     Type
 19505 ;;  sign            1    wreg     unsigned char 
 19506 ;;  val             4    0[BANK0 ] long 
 19507 ;; Auto vars:     Size  Location     Type
 19508 ;;  sign            1    8[BANK0 ] unsigned char 
 19509 ;;  arg             4   10[BANK0 ] unsigned long 
 19510 ;;  exp             1    9[BANK0 ] unsigned char 
 19511 ;; Return value:  Size  Location     Type
 19512 ;;                  4    0[BANK0 ] unsigned char 
 19513 ;; Registers used:
 19514 ;;		wreg, status,2, status,0
 19515 ;; Tracked objects:
 19516 ;;		On entry : 0/0
 19517 ;;		On exit  : 0/0
 19518 ;;		Unchanged: 0/0
 19519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19520 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19521 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19522 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19523 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19524 ;;Total ram usage:       14 bytes
 19525 ;; Hardware stack levels used:    1
 19526 ;; Hardware stack levels required when called:    4
 19527 ;; This function calls:
 19528 ;;		Nothing
 19529 ;; This function is called by:
 19530 ;;		_LED_setColor
 19531 ;;		_beatBrightnessCalculation
 19532 ;; This function uses a non-reentrant model
 19533 ;;
 19534                           
 19535                           
 19536                           ;psect for function ___xxtofl
 19537  156B                     ___xxtofl:	
 19538                           
 19539                           ;incstack = 0
 19540                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 19541                           ;___xxtofl@sign stored from wreg
 19542  156B  0140               	movlb	0	; select bank0
 19543  156C  00A8               	movwf	___xxtofl@sign
 19544  156D  0828               	movf	___xxtofl@sign,w
 19545  156E  1D03               	btfss	3,2
 19546  156F  1FA3               	btfss	___xxtofl@val+3,7
 19547  1570  2D81               	goto	l11599
 19548  1571  0920               	comf	___xxtofl@val,w
 19549  1572  00AA               	movwf	___xxtofl@arg
 19550  1573  0921               	comf	___xxtofl@val+1,w
 19551  1574  00AB               	movwf	___xxtofl@arg+1
 19552  1575  0922               	comf	___xxtofl@val+2,w
 19553  1576  00AC               	movwf	___xxtofl@arg+2
 19554  1577  0923               	comf	___xxtofl@val+3,w
 19555  1578  00AD               	movwf	___xxtofl@arg+3
 19556  1579  0AAA               	incf	___xxtofl@arg,f
 19557  157A  1903               	skipnz
 19558  157B  0AAB               	incf	___xxtofl@arg+1,f
 19559  157C  1903               	skipnz
 19560  157D  0AAC               	incf	___xxtofl@arg+2,f
 19561  157E  1903               	skipnz
 19562  157F  0AAD               	incf	___xxtofl@arg+3,f
 19563  1580  2D89               	goto	l2165
 19564  1581                     l11599:	
 19565  1581  0823               	movf	___xxtofl@val+3,w
 19566  1582  00AD               	movwf	___xxtofl@arg+3
 19567  1583  0822               	movf	___xxtofl@val+2,w
 19568  1584  00AC               	movwf	___xxtofl@arg+2
 19569  1585  0821               	movf	___xxtofl@val+1,w
 19570  1586  00AB               	movwf	___xxtofl@arg+1
 19571  1587  0820               	movf	___xxtofl@val,w
 19572  1588  00AA               	movwf	___xxtofl@arg
 19573  1589                     l2165:	
 19574  1589  0823               	movf	___xxtofl@val+3,w
 19575  158A  0422               	iorwf	___xxtofl@val+2,w
 19576  158B  0421               	iorwf	___xxtofl@val+1,w
 19577  158C  0420               	iorwf	___xxtofl@val,w
 19578  158D  1D03               	skipz
 19579  158E  2D98               	goto	l11605
 19580  158F  3000               	movlw	0
 19581  1590  00A3               	movwf	?___xxtofl+3
 19582  1591  3000               	movlw	0
 19583  1592  00A2               	movwf	?___xxtofl+2
 19584  1593  3000               	movlw	0
 19585  1594  00A1               	movwf	?___xxtofl+1
 19586  1595  3000               	movlw	0
 19587  1596  00A0               	movwf	?___xxtofl
 19588  1597  0008               	return
 19589  1598                     l11605:	
 19590  1598  3096               	movlw	150
 19591  1599  00A4               	movwf	??___xxtofl
 19592  159A  0824               	movf	??___xxtofl,w
 19593  159B  00A9               	movwf	___xxtofl@exp
 19594  159C                     l11609:	
 19595  159C  30FE               	movlw	254
 19596  159D  052D               	andwf	___xxtofl@arg+3,w
 19597  159E  1903               	btfsc	3,2
 19598  159F  2DBF               	goto	l2171
 19599  15A0  3001               	movlw	1
 19600  15A1  00A4               	movwf	??___xxtofl
 19601  15A2  0824               	movf	??___xxtofl,w
 19602  15A3  07A9               	addwf	___xxtofl@exp,f
 19603  15A4  3001               	movlw	1
 19604  15A5                     u12195:	
 19605  15A5  36AD               	lsrf	___xxtofl@arg+3,f
 19606  15A6  0CAC               	rrf	___xxtofl@arg+2,f
 19607  15A7  0CAB               	rrf	___xxtofl@arg+1,f
 19608  15A8  0CAA               	rrf	___xxtofl@arg,f
 19609  15A9  0B89               	decfsz	9,f
 19610  15AA  2DA5               	goto	u12195
 19611  15AB  2D9C               	goto	l11609
 19612  15AC                     l11611:	
 19613  15AC  3001               	movlw	1
 19614  15AD  00A4               	movwf	??___xxtofl
 19615  15AE  0824               	movf	??___xxtofl,w
 19616  15AF  07A9               	addwf	___xxtofl@exp,f
 19617  15B0  3001               	movlw	1
 19618  15B1  07AA               	addwf	___xxtofl@arg,f
 19619  15B2  3000               	movlw	0
 19620  15B3  3DAB               	addwfc	___xxtofl@arg+1,f
 19621  15B4  3000               	movlw	0
 19622  15B5  3DAC               	addwfc	___xxtofl@arg+2,f
 19623  15B6  3000               	movlw	0
 19624  15B7  3DAD               	addwfc	___xxtofl@arg+3,f
 19625  15B8  3001               	movlw	1
 19626  15B9                     u12215:	
 19627  15B9  36AD               	lsrf	___xxtofl@arg+3,f
 19628  15BA  0CAC               	rrf	___xxtofl@arg+2,f
 19629  15BB  0CAB               	rrf	___xxtofl@arg+1,f
 19630  15BC  0CAA               	rrf	___xxtofl@arg,f
 19631  15BD  0B89               	decfsz	9,f
 19632  15BE  2DB9               	goto	u12215
 19633  15BF                     l2171:	
 19634  15BF  30FF               	movlw	255
 19635  15C0  052D               	andwf	___xxtofl@arg+3,w
 19636  15C1  1903               	btfsc	3,2
 19637  15C2  2DD1               	goto	l11619
 19638  15C3  2DAC               	goto	l11611
 19639  15C4                     l11621:	
 19640  15C4  3002               	movlw	2
 19641  15C5  0229               	subwf	___xxtofl@exp,w
 19642  15C6  1C03               	btfss	3,0
 19643  15C7  2DD3               	goto	l2178
 19644  15C8  3001               	movlw	1
 19645  15C9  02A9               	subwf	___xxtofl@exp,f
 19646  15CA  3001               	movlw	1
 19647  15CB                     u12235:	
 19648  15CB  35AA               	lslf	___xxtofl@arg,f
 19649  15CC  0DAB               	rlf	___xxtofl@arg+1,f
 19650  15CD  0DAC               	rlf	___xxtofl@arg+2,f
 19651  15CE  0DAD               	rlf	___xxtofl@arg+3,f
 19652  15CF  0B89               	decfsz	9,f
 19653  15D0  2DCB               	goto	u12235
 19654  15D1                     l11619:	
 19655  15D1  1FAC               	btfss	___xxtofl@arg+2,7
 19656  15D2  2DC4               	goto	l11621
 19657  15D3                     l2178:	
 19658  15D3  1829               	btfsc	___xxtofl@exp,0
 19659  15D4  2DDD               	goto	l2179
 19660  15D5  30FF               	movlw	255
 19661  15D6  05AA               	andwf	___xxtofl@arg,f
 19662  15D7  30FF               	movlw	255
 19663  15D8  05AB               	andwf	___xxtofl@arg+1,f
 19664  15D9  307F               	movlw	127
 19665  15DA  05AC               	andwf	___xxtofl@arg+2,f
 19666  15DB  30FF               	movlw	255
 19667  15DC  05AD               	andwf	___xxtofl@arg+3,f
 19668  15DD                     l2179:	
 19669  15DD  1003               	clrc
 19670  15DE  0CA9               	rrf	___xxtofl@exp,f
 19671  15DF  0829               	movf	___xxtofl@exp,w
 19672  15E0  00A4               	movwf	??___xxtofl
 19673  15E1  01A5               	clrf	??___xxtofl+1
 19674  15E2  01A6               	clrf	??___xxtofl+2
 19675  15E3  01A7               	clrf	??___xxtofl+3
 19676  15E4  3018               	movlw	24
 19677  15E5                     u12275:	
 19678  15E5  35A4               	lslf	??___xxtofl,f
 19679  15E6  0DA5               	rlf	??___xxtofl+1,f
 19680  15E7  0DA6               	rlf	??___xxtofl+2,f
 19681  15E8  0DA7               	rlf	??___xxtofl+3,f
 19682  15E9  0B89               	decfsz	9,f
 19683  15EA  2DE5               	goto	u12275
 19684  15EB  0824               	movf	??___xxtofl,w
 19685  15EC  04AA               	iorwf	___xxtofl@arg,f
 19686  15ED  0825               	movf	??___xxtofl+1,w
 19687  15EE  04AB               	iorwf	___xxtofl@arg+1,f
 19688  15EF  0826               	movf	??___xxtofl+2,w
 19689  15F0  04AC               	iorwf	___xxtofl@arg+2,f
 19690  15F1  0827               	movf	??___xxtofl+3,w
 19691  15F2  04AD               	iorwf	___xxtofl@arg+3,f
 19692  15F3  0828               	movf	___xxtofl@sign,w
 19693  15F4  1D03               	btfss	3,2
 19694  15F5  1FA3               	btfss	___xxtofl@val+3,7
 19695  15F6  2DF8               	goto	l11633
 19696  15F7  17AD               	bsf	___xxtofl@arg+3,7
 19697  15F8                     l11633:	
 19698  15F8  082D               	movf	___xxtofl@arg+3,w
 19699  15F9  00A3               	movwf	?___xxtofl+3
 19700  15FA  082C               	movf	___xxtofl@arg+2,w
 19701  15FB  00A2               	movwf	?___xxtofl+2
 19702  15FC  082B               	movf	___xxtofl@arg+1,w
 19703  15FD  00A1               	movwf	?___xxtofl+1
 19704  15FE  082A               	movf	___xxtofl@arg,w
 19705  15FF  00A0               	movwf	?___xxtofl
 19706  1600  0008               	return
 19707  1601                     __end_of___xxtofl:	
 19708                           
 19709                           	psect	text66
 19710  1423                     __ptext66:	
 19711 ;; *************** function ___fltol *****************
 19712 ;; Defined at:
 19713 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 19714 ;; Parameters:    Size  Location     Type
 19715 ;;  f1              4   66[BANK0 ] unsigned char 
 19716 ;; Auto vars:     Size  Location     Type
 19717 ;;  exp1            1   76[BANK0 ] unsigned char 
 19718 ;;  sign1           1   75[BANK0 ] unsigned char 
 19719 ;; Return value:  Size  Location     Type
 19720 ;;                  4   66[BANK0 ] long 
 19721 ;; Registers used:
 19722 ;;		wreg, status,2, status,0
 19723 ;; Tracked objects:
 19724 ;;		On entry : 0/0
 19725 ;;		On exit  : 0/0
 19726 ;;		Unchanged: 0/0
 19727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19728 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19729 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19730 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19731 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19732 ;;Total ram usage:       11 bytes
 19733 ;; Hardware stack levels used:    1
 19734 ;; Hardware stack levels required when called:    4
 19735 ;; This function calls:
 19736 ;;		Nothing
 19737 ;; This function is called by:
 19738 ;;		_LED_setColor
 19739 ;;		_beatColorCreator
 19740 ;;		_beatBrightnessCalculation
 19741 ;; This function uses a non-reentrant model
 19742 ;;
 19743                           
 19744                           
 19745                           ;psect for function ___fltol
 19746  1423                     ___fltol:	
 19747                           
 19748                           ;incstack = 0
 19749                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 19750  1423  1003               	clrc
 19751  1424  0140               	movlb	0	; select bank0
 19752  1425  0D64               	rlf	___fltol@f1+2,w
 19753  1426  0D65               	rlf	___fltol@f1+3,w
 19754  1427  00E6               	movwf	??___fltol
 19755  1428  0866               	movf	??___fltol,w
 19756  1429  00EC               	movwf	___fltol@exp1
 19757  142A  086C               	movf	___fltol@exp1,w
 19758  142B  1D03               	btfss	3,2
 19759  142C  2C36               	goto	l11283
 19760  142D                     l11279:	
 19761  142D  3000               	movlw	0
 19762  142E  00E5               	movwf	?___fltol+3
 19763  142F  3000               	movlw	0
 19764  1430  00E4               	movwf	?___fltol+2
 19765  1431  3000               	movlw	0
 19766  1432  00E3               	movwf	?___fltol+1
 19767  1433  3000               	movlw	0
 19768  1434  00E2               	movwf	?___fltol
 19769  1435  0008               	return
 19770  1436                     l11283:	
 19771  1436  0862               	movf	___fltol@f1,w
 19772  1437  00E6               	movwf	??___fltol
 19773  1438  0863               	movf	___fltol@f1+1,w
 19774  1439  00E7               	movwf	??___fltol+1
 19775  143A  0864               	movf	___fltol@f1+2,w
 19776  143B  00E8               	movwf	??___fltol+2
 19777  143C  0865               	movf	___fltol@f1+3,w
 19778  143D  00E9               	movwf	??___fltol+3
 19779  143E  301F               	movlw	31
 19780  143F                     u11525:	
 19781  143F  36E9               	lsrf	??___fltol+3,f
 19782  1440  0CE8               	rrf	??___fltol+2,f
 19783  1441  0CE7               	rrf	??___fltol+1,f
 19784  1442  0CE6               	rrf	??___fltol,f
 19785  1443  0B89               	decfsz	9,f
 19786  1444  2C3F               	goto	u11525
 19787  1445  0866               	movf	??___fltol,w
 19788  1446  00EA               	movwf	??___fltol+4
 19789  1447  086A               	movf	??___fltol+4,w
 19790  1448  00EB               	movwf	___fltol@sign1
 19791  1449  17E4               	bsf	___fltol@f1+2,7
 19792  144A  30FF               	movlw	255
 19793  144B  05E2               	andwf	___fltol@f1,f
 19794  144C  30FF               	movlw	255
 19795  144D  05E3               	andwf	___fltol@f1+1,f
 19796  144E  30FF               	movlw	255
 19797  144F  05E4               	andwf	___fltol@f1+2,f
 19798  1450  3000               	movlw	0
 19799  1451  05E5               	andwf	___fltol@f1+3,f
 19800  1452  3096               	movlw	150
 19801  1453  02EC               	subwf	___fltol@exp1,f
 19802  1454  1FEC               	btfss	___fltol@exp1,7
 19803  1455  2C69               	goto	l11301
 19804  1456  086C               	movf	___fltol@exp1,w
 19805  1457  3A80               	xorlw	128
 19806  1458  3E97               	addlw	151
 19807  1459  1C03               	btfss	3,0
 19808  145A  2C2D               	goto	l11279
 19809  145B                     l11299:	
 19810  145B  3001               	movlw	1
 19811  145C                     u11555:	
 19812  145C  36E5               	lsrf	___fltol@f1+3,f
 19813  145D  0CE4               	rrf	___fltol@f1+2,f
 19814  145E  0CE3               	rrf	___fltol@f1+1,f
 19815  145F  0CE2               	rrf	___fltol@f1,f
 19816  1460  0B89               	decfsz	9,f
 19817  1461  2C5C               	goto	u11555
 19818  1462  3001               	movlw	1
 19819  1463  00E6               	movwf	??___fltol
 19820  1464  0866               	movf	??___fltol,w
 19821  1465  07EC               	addwf	___fltol@exp1,f
 19822  1466  1903               	btfsc	3,2
 19823  1467  2C7A               	goto	l11309
 19824  1468  2C5B               	goto	l11299
 19825  1469                     l11301:	
 19826  1469  3020               	movlw	32
 19827  146A  026C               	subwf	___fltol@exp1,w
 19828  146B  1803               	btfsc	3,0
 19829  146C  2C2D               	goto	l11279
 19830  146D                     l1931:	
 19831  146D  086C               	movf	___fltol@exp1,w
 19832  146E  1903               	btfsc	3,2
 19833  146F  2C7A               	goto	l11309
 19834  1470  3001               	movlw	1
 19835  1471                     u11585:	
 19836  1471  35E2               	lslf	___fltol@f1,f
 19837  1472  0DE3               	rlf	___fltol@f1+1,f
 19838  1473  0DE4               	rlf	___fltol@f1+2,f
 19839  1474  0DE5               	rlf	___fltol@f1+3,f
 19840  1475  0B89               	decfsz	9,f
 19841  1476  2C71               	goto	u11585
 19842  1477  3001               	movlw	1
 19843  1478  02EC               	subwf	___fltol@exp1,f
 19844  1479  2C6D               	goto	l1931
 19845  147A                     l11309:	
 19846  147A  086B               	movf	___fltol@sign1,w
 19847  147B  1903               	btfsc	3,2
 19848  147C  0008               	return
 19849  147D  09E2               	comf	___fltol@f1,f
 19850  147E  09E3               	comf	___fltol@f1+1,f
 19851  147F  09E4               	comf	___fltol@f1+2,f
 19852  1480  09E5               	comf	___fltol@f1+3,f
 19853  1481  0AE2               	incf	___fltol@f1,f
 19854  1482  1903               	skipnz
 19855  1483  0AE3               	incf	___fltol@f1+1,f
 19856  1484  1903               	skipnz
 19857  1485  0AE4               	incf	___fltol@f1+2,f
 19858  1486  1903               	skipnz
 19859  1487  0AE5               	incf	___fltol@f1+3,f
 19860  1488  0008               	return
 19861  1489                     __end_of___fltol:	
 19862                           
 19863                           	psect	text67
 19864  00A5                     __ptext67:	
 19865 ;; *************** function ___flmul *****************
 19866 ;; Defined at:
 19867 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 19868 ;; Parameters:    Size  Location     Type
 19869 ;;  b               4   40[BANK0 ] long 
 19870 ;;  a               4   44[BANK0 ] long 
 19871 ;; Auto vars:     Size  Location     Type
 19872 ;;  prod            4   60[BANK0 ] struct .
 19873 ;;  grs             4   56[BANK0 ] unsigned long 
 19874 ;;  temp            2   64[BANK0 ] struct .
 19875 ;;  bexp            1   55[BANK0 ] unsigned char 
 19876 ;;  aexp            1   54[BANK0 ] unsigned char 
 19877 ;;  sign            1   53[BANK0 ] unsigned char 
 19878 ;; Return value:  Size  Location     Type
 19879 ;;                  4   40[BANK0 ] unsigned char 
 19880 ;; Registers used:
 19881 ;;		wreg, status,2, status,0, pclath, cstack
 19882 ;; Tracked objects:
 19883 ;;		On entry : 0/0
 19884 ;;		On exit  : 0/0
 19885 ;;		Unchanged: 0/0
 19886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19887 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19888 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19889 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19890 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19891 ;;Total ram usage:       26 bytes
 19892 ;; Hardware stack levels used:    1
 19893 ;; Hardware stack levels required when called:    5
 19894 ;; This function calls:
 19895 ;;		__Umul8_16
 19896 ;; This function is called by:
 19897 ;;		_LED_setColor
 19898 ;;		_beatBrightnessCalculation
 19899 ;; This function uses a non-reentrant model
 19900 ;;
 19901                           
 19902                           
 19903                           ;psect for function ___flmul
 19904  00A5                     ___flmul:	
 19905                           
 19906                           ;incstack = 0
 19907                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 19908  00A5  0140               	movlb	0	; select bank0
 19909  00A6  084B               	movf	___flmul@b+3,w
 19910  00A7  3980               	andlw	128
 19911  00A8  00D0               	movwf	??___flmul
 19912  00A9  0850               	movf	??___flmul,w
 19913  00AA  00D5               	movwf	___flmul@sign
 19914  00AB  354B               	lslf	___flmul@b+3,w
 19915  00AC  00D0               	movwf	??___flmul
 19916  00AD  0850               	movf	??___flmul,w
 19917  00AE  00D7               	movwf	___flmul@bexp
 19918  00AF  1BCA               	btfsc	___flmul@b+2,7
 19919  00B0  1457               	bsf	___flmul@bexp,0
 19920  00B1  0857               	movf	___flmul@bexp,w
 19921  00B2  1903               	btfsc	3,2
 19922  00B3  28C1               	goto	l11469
 19923  00B4  0A57               	incf	___flmul@bexp,w
 19924  00B5  1D03               	btfss	3,2
 19925  00B6  28BF               	goto	l11467
 19926  00B7  3000               	movlw	0
 19927  00B8  00CB               	movwf	___flmul@b+3
 19928  00B9  3000               	movlw	0
 19929  00BA  00CA               	movwf	___flmul@b+2
 19930  00BB  3000               	movlw	0
 19931  00BC  00C9               	movwf	___flmul@b+1
 19932  00BD  3000               	movlw	0
 19933  00BE  00C8               	movwf	___flmul@b
 19934  00BF                     l11467:	
 19935  00BF  17CA               	bsf	___flmul@b+2,7
 19936  00C0  28C9               	goto	l11471
 19937  00C1                     l11469:	
 19938  00C1  3000               	movlw	0
 19939  00C2  00CB               	movwf	___flmul@b+3
 19940  00C3  3000               	movlw	0
 19941  00C4  00CA               	movwf	___flmul@b+2
 19942  00C5  3000               	movlw	0
 19943  00C6  00C9               	movwf	___flmul@b+1
 19944  00C7  3000               	movlw	0
 19945  00C8  00C8               	movwf	___flmul@b
 19946  00C9                     l11471:	
 19947  00C9  084F               	movf	___flmul@a+3,w
 19948  00CA  3980               	andlw	128
 19949  00CB  00D0               	movwf	??___flmul
 19950  00CC  0850               	movf	??___flmul,w
 19951  00CD  06D5               	xorwf	___flmul@sign,f
 19952  00CE  354F               	lslf	___flmul@a+3,w
 19953  00CF  00D0               	movwf	??___flmul
 19954  00D0  0850               	movf	??___flmul,w
 19955  00D1  00D6               	movwf	___flmul@aexp
 19956  00D2  1BCE               	btfsc	___flmul@a+2,7
 19957  00D3  1456               	bsf	___flmul@aexp,0
 19958  00D4  0856               	movf	___flmul@aexp,w
 19959  00D5  1903               	btfsc	3,2
 19960  00D6  28E4               	goto	l11487
 19961  00D7  0A56               	incf	___flmul@aexp,w
 19962  00D8  1D03               	btfss	3,2
 19963  00D9  28E2               	goto	l11485
 19964  00DA  3000               	movlw	0
 19965  00DB  00CF               	movwf	___flmul@a+3
 19966  00DC  3000               	movlw	0
 19967  00DD  00CE               	movwf	___flmul@a+2
 19968  00DE  3000               	movlw	0
 19969  00DF  00CD               	movwf	___flmul@a+1
 19970  00E0  3000               	movlw	0
 19971  00E1  00CC               	movwf	___flmul@a
 19972  00E2                     l11485:	
 19973  00E2  17CE               	bsf	___flmul@a+2,7
 19974  00E3  28EC               	goto	l11489
 19975  00E4                     l11487:	
 19976  00E4  3000               	movlw	0
 19977  00E5  00CF               	movwf	___flmul@a+3
 19978  00E6  3000               	movlw	0
 19979  00E7  00CE               	movwf	___flmul@a+2
 19980  00E8  3000               	movlw	0
 19981  00E9  00CD               	movwf	___flmul@a+1
 19982  00EA  3000               	movlw	0
 19983  00EB  00CC               	movwf	___flmul@a
 19984  00EC                     l11489:	
 19985  00EC  0856               	movf	___flmul@aexp,w
 19986  00ED  1D03               	btfss	3,2
 19987  00EE  0857               	movf	___flmul@bexp,w
 19988  00EF  1D03               	btfss	3,2
 19989  00F0  28FA               	goto	l11497
 19990  00F1  3000               	movlw	0
 19991  00F2  00CB               	movwf	?___flmul+3
 19992  00F3  3000               	movlw	0
 19993  00F4  00CA               	movwf	?___flmul+2
 19994  00F5  3000               	movlw	0
 19995  00F6  00C9               	movwf	?___flmul+1
 19996  00F7  3000               	movlw	0
 19997  00F8  00C8               	movwf	?___flmul
 19998  00F9  0008               	return
 19999  00FA                     l11497:	
 20000  00FA  0848               	movf	___flmul@b,w
 20001  00FB  00D0               	movwf	??___flmul
 20002  00FC  0850               	movf	??___flmul,w
 20003  00FD  00A0               	movwf	__Umul8_16@multiplicand
 20004  00FE  084E               	movf	___flmul@a+2,w
 20005  00FF  319E  26A3  3180   	fcall	__Umul8_16
 20006  0102  0140               	movlb	0	; select bank0
 20007  0103  0821               	movf	?__Umul8_16+1,w
 20008  0104  00E1               	movwf	___flmul@temp+1
 20009  0105  0820               	movf	?__Umul8_16,w
 20010  0106  00E0               	movwf	___flmul@temp
 20011  0107  0860               	movf	___flmul@temp,w
 20012  0108  00D0               	movwf	??___flmul
 20013  0109  01D1               	clrf	??___flmul+1
 20014  010A  01D2               	clrf	??___flmul+2
 20015  010B  01D3               	clrf	??___flmul+3
 20016  010C  0853               	movf	??___flmul+3,w
 20017  010D  00DB               	movwf	___flmul@grs+3
 20018  010E  0852               	movf	??___flmul+2,w
 20019  010F  00DA               	movwf	___flmul@grs+2
 20020  0110  0851               	movf	??___flmul+1,w
 20021  0111  00D9               	movwf	___flmul@grs+1
 20022  0112  0850               	movf	??___flmul,w
 20023  0113  00D8               	movwf	___flmul@grs
 20024  0114  0861               	movf	___flmul@temp+1,w
 20025  0115  00D0               	movwf	??___flmul
 20026  0116  01D1               	clrf	??___flmul+1
 20027  0117  01D2               	clrf	??___flmul+2
 20028  0118  01D3               	clrf	??___flmul+3
 20029  0119  0853               	movf	??___flmul+3,w
 20030  011A  00DF               	movwf	___flmul@prod+3
 20031  011B  0852               	movf	??___flmul+2,w
 20032  011C  00DE               	movwf	___flmul@prod+2
 20033  011D  0851               	movf	??___flmul+1,w
 20034  011E  00DD               	movwf	___flmul@prod+1
 20035  011F  0850               	movf	??___flmul,w
 20036  0120  00DC               	movwf	___flmul@prod
 20037  0121  0849               	movf	___flmul@b+1,w
 20038  0122  00D0               	movwf	??___flmul
 20039  0123  0850               	movf	??___flmul,w
 20040  0124  00A0               	movwf	__Umul8_16@multiplicand
 20041  0125  084D               	movf	___flmul@a+1,w
 20042  0126  319E  26A3  3180   	fcall	__Umul8_16
 20043  0129  0140               	movlb	0	; select bank0
 20044  012A  0821               	movf	?__Umul8_16+1,w
 20045  012B  00E1               	movwf	___flmul@temp+1
 20046  012C  0820               	movf	?__Umul8_16,w
 20047  012D  00E0               	movwf	___flmul@temp
 20048  012E  0860               	movf	___flmul@temp,w
 20049  012F  00D0               	movwf	??___flmul
 20050  0130  01D1               	clrf	??___flmul+1
 20051  0131  01D2               	clrf	??___flmul+2
 20052  0132  01D3               	clrf	??___flmul+3
 20053  0133  0850               	movf	??___flmul,w
 20054  0134  07D8               	addwf	___flmul@grs,f
 20055  0135  0851               	movf	??___flmul+1,w
 20056  0136  3DD9               	addwfc	___flmul@grs+1,f
 20057  0137  0852               	movf	??___flmul+2,w
 20058  0138  3DDA               	addwfc	___flmul@grs+2,f
 20059  0139  0853               	movf	??___flmul+3,w
 20060  013A  3DDB               	addwfc	___flmul@grs+3,f
 20061  013B  0861               	movf	___flmul@temp+1,w
 20062  013C  00D0               	movwf	??___flmul
 20063  013D  01D1               	clrf	??___flmul+1
 20064  013E  01D2               	clrf	??___flmul+2
 20065  013F  01D3               	clrf	??___flmul+3
 20066  0140  0850               	movf	??___flmul,w
 20067  0141  07DC               	addwf	___flmul@prod,f
 20068  0142  0851               	movf	??___flmul+1,w
 20069  0143  3DDD               	addwfc	___flmul@prod+1,f
 20070  0144  0852               	movf	??___flmul+2,w
 20071  0145  3DDE               	addwfc	___flmul@prod+2,f
 20072  0146  0853               	movf	??___flmul+3,w
 20073  0147  3DDF               	addwfc	___flmul@prod+3,f
 20074  0148  084A               	movf	___flmul@b+2,w
 20075  0149  00D0               	movwf	??___flmul
 20076  014A  0850               	movf	??___flmul,w
 20077  014B  00A0               	movwf	__Umul8_16@multiplicand
 20078  014C  084C               	movf	___flmul@a,w
 20079  014D  319E  26A3  3180   	fcall	__Umul8_16
 20080  0150  0140               	movlb	0	; select bank0
 20081  0151  0821               	movf	?__Umul8_16+1,w
 20082  0152  00E1               	movwf	___flmul@temp+1
 20083  0153  0820               	movf	?__Umul8_16,w
 20084  0154  00E0               	movwf	___flmul@temp
 20085  0155  0860               	movf	___flmul@temp,w
 20086  0156  00D0               	movwf	??___flmul
 20087  0157  01D1               	clrf	??___flmul+1
 20088  0158  01D2               	clrf	??___flmul+2
 20089  0159  01D3               	clrf	??___flmul+3
 20090  015A  0850               	movf	??___flmul,w
 20091  015B  07D8               	addwf	___flmul@grs,f
 20092  015C  0851               	movf	??___flmul+1,w
 20093  015D  3DD9               	addwfc	___flmul@grs+1,f
 20094  015E  0852               	movf	??___flmul+2,w
 20095  015F  3DDA               	addwfc	___flmul@grs+2,f
 20096  0160  0853               	movf	??___flmul+3,w
 20097  0161  3DDB               	addwfc	___flmul@grs+3,f
 20098  0162  0861               	movf	___flmul@temp+1,w
 20099  0163  00D0               	movwf	??___flmul
 20100  0164  01D1               	clrf	??___flmul+1
 20101  0165  01D2               	clrf	??___flmul+2
 20102  0166  01D3               	clrf	??___flmul+3
 20103  0167  0850               	movf	??___flmul,w
 20104  0168  07DC               	addwf	___flmul@prod,f
 20105  0169  0851               	movf	??___flmul+1,w
 20106  016A  3DDD               	addwfc	___flmul@prod+1,f
 20107  016B  0852               	movf	??___flmul+2,w
 20108  016C  3DDE               	addwfc	___flmul@prod+2,f
 20109  016D  0853               	movf	??___flmul+3,w
 20110  016E  3DDF               	addwfc	___flmul@prod+3,f
 20111  016F  3008               	movlw	8
 20112  0170                     u11985:	
 20113  0170  35D8               	lslf	___flmul@grs,f
 20114  0171  0DD9               	rlf	___flmul@grs+1,f
 20115  0172  0DDA               	rlf	___flmul@grs+2,f
 20116  0173  0DDB               	rlf	___flmul@grs+3,f
 20117  0174  0B89               	decfsz	9,f
 20118  0175  2970               	goto	u11985
 20119  0176  0849               	movf	___flmul@b+1,w
 20120  0177  00D0               	movwf	??___flmul
 20121  0178  0850               	movf	??___flmul,w
 20122  0179  00A0               	movwf	__Umul8_16@multiplicand
 20123  017A  084C               	movf	___flmul@a,w
 20124  017B  319E  26A3  3180   	fcall	__Umul8_16
 20125  017E  0140               	movlb	0	; select bank0
 20126  017F  0821               	movf	?__Umul8_16+1,w
 20127  0180  00E1               	movwf	___flmul@temp+1
 20128  0181  0820               	movf	?__Umul8_16,w
 20129  0182  00E0               	movwf	___flmul@temp
 20130  0183  0860               	movf	___flmul@temp,w
 20131  0184  07D8               	addwf	___flmul@grs,f
 20132  0185  0861               	movf	___flmul@temp+1,w
 20133  0186  3DD9               	addwfc	___flmul@grs+1,f
 20134  0187  3000               	movlw	0
 20135  0188  3DDA               	addwfc	___flmul@grs+2,f
 20136  0189  3DDB               	addwfc	___flmul@grs+3,f
 20137  018A  0848               	movf	___flmul@b,w
 20138  018B  00D0               	movwf	??___flmul
 20139  018C  0850               	movf	??___flmul,w
 20140  018D  00A0               	movwf	__Umul8_16@multiplicand
 20141  018E  084D               	movf	___flmul@a+1,w
 20142  018F  319E  26A3  3180   	fcall	__Umul8_16
 20143  0192  0140               	movlb	0	; select bank0
 20144  0193  0821               	movf	?__Umul8_16+1,w
 20145  0194  00E1               	movwf	___flmul@temp+1
 20146  0195  0820               	movf	?__Umul8_16,w
 20147  0196  00E0               	movwf	___flmul@temp
 20148  0197  0860               	movf	___flmul@temp,w
 20149  0198  07D8               	addwf	___flmul@grs,f
 20150  0199  0861               	movf	___flmul@temp+1,w
 20151  019A  3DD9               	addwfc	___flmul@grs+1,f
 20152  019B  3000               	movlw	0
 20153  019C  3DDA               	addwfc	___flmul@grs+2,f
 20154  019D  3DDB               	addwfc	___flmul@grs+3,f
 20155  019E  3008               	movlw	8
 20156  019F                     u11995:	
 20157  019F  35D8               	lslf	___flmul@grs,f
 20158  01A0  0DD9               	rlf	___flmul@grs+1,f
 20159  01A1  0DDA               	rlf	___flmul@grs+2,f
 20160  01A2  0DDB               	rlf	___flmul@grs+3,f
 20161  01A3  0B89               	decfsz	9,f
 20162  01A4  299F               	goto	u11995
 20163  01A5  0848               	movf	___flmul@b,w
 20164  01A6  00D0               	movwf	??___flmul
 20165  01A7  0850               	movf	??___flmul,w
 20166  01A8  00A0               	movwf	__Umul8_16@multiplicand
 20167  01A9  084C               	movf	___flmul@a,w
 20168  01AA  319E  26A3  3180   	fcall	__Umul8_16
 20169  01AD  0140               	movlb	0	; select bank0
 20170  01AE  0821               	movf	?__Umul8_16+1,w
 20171  01AF  00E1               	movwf	___flmul@temp+1
 20172  01B0  0820               	movf	?__Umul8_16,w
 20173  01B1  00E0               	movwf	___flmul@temp
 20174  01B2  0860               	movf	___flmul@temp,w
 20175  01B3  07D8               	addwf	___flmul@grs,f
 20176  01B4  0861               	movf	___flmul@temp+1,w
 20177  01B5  3DD9               	addwfc	___flmul@grs+1,f
 20178  01B6  3000               	movlw	0
 20179  01B7  3DDA               	addwfc	___flmul@grs+2,f
 20180  01B8  3DDB               	addwfc	___flmul@grs+3,f
 20181  01B9  0849               	movf	___flmul@b+1,w
 20182  01BA  00D0               	movwf	??___flmul
 20183  01BB  0850               	movf	??___flmul,w
 20184  01BC  00A0               	movwf	__Umul8_16@multiplicand
 20185  01BD  084E               	movf	___flmul@a+2,w
 20186  01BE  319E  26A3  3180   	fcall	__Umul8_16
 20187  01C1  0140               	movlb	0	; select bank0
 20188  01C2  0821               	movf	?__Umul8_16+1,w
 20189  01C3  00E1               	movwf	___flmul@temp+1
 20190  01C4  0820               	movf	?__Umul8_16,w
 20191  01C5  00E0               	movwf	___flmul@temp
 20192  01C6  0860               	movf	___flmul@temp,w
 20193  01C7  07DC               	addwf	___flmul@prod,f
 20194  01C8  0861               	movf	___flmul@temp+1,w
 20195  01C9  3DDD               	addwfc	___flmul@prod+1,f
 20196  01CA  3000               	movlw	0
 20197  01CB  3DDE               	addwfc	___flmul@prod+2,f
 20198  01CC  3DDF               	addwfc	___flmul@prod+3,f
 20199  01CD  084A               	movf	___flmul@b+2,w
 20200  01CE  00D0               	movwf	??___flmul
 20201  01CF  0850               	movf	??___flmul,w
 20202  01D0  00A0               	movwf	__Umul8_16@multiplicand
 20203  01D1  084D               	movf	___flmul@a+1,w
 20204  01D2  319E  26A3  3180   	fcall	__Umul8_16
 20205  01D5  0140               	movlb	0	; select bank0
 20206  01D6  0821               	movf	?__Umul8_16+1,w
 20207  01D7  00E1               	movwf	___flmul@temp+1
 20208  01D8  0820               	movf	?__Umul8_16,w
 20209  01D9  00E0               	movwf	___flmul@temp
 20210  01DA  0860               	movf	___flmul@temp,w
 20211  01DB  07DC               	addwf	___flmul@prod,f
 20212  01DC  0861               	movf	___flmul@temp+1,w
 20213  01DD  3DDD               	addwfc	___flmul@prod+1,f
 20214  01DE  3000               	movlw	0
 20215  01DF  3DDE               	addwfc	___flmul@prod+2,f
 20216  01E0  3DDF               	addwfc	___flmul@prod+3,f
 20217  01E1  084A               	movf	___flmul@b+2,w
 20218  01E2  00D0               	movwf	??___flmul
 20219  01E3  0850               	movf	??___flmul,w
 20220  01E4  00A0               	movwf	__Umul8_16@multiplicand
 20221  01E5  084E               	movf	___flmul@a+2,w
 20222  01E6  319E  26A3  3180   	fcall	__Umul8_16
 20223  01E9  0140               	movlb	0	; select bank0
 20224  01EA  0821               	movf	?__Umul8_16+1,w
 20225  01EB  00E1               	movwf	___flmul@temp+1
 20226  01EC  0820               	movf	?__Umul8_16,w
 20227  01ED  00E0               	movwf	___flmul@temp
 20228  01EE  0860               	movf	___flmul@temp,w
 20229  01EF  00D0               	movwf	??___flmul
 20230  01F0  0861               	movf	___flmul@temp+1,w
 20231  01F1  00D1               	movwf	??___flmul+1
 20232  01F2  01D2               	clrf	??___flmul+2
 20233  01F3  01D3               	clrf	??___flmul+3
 20234  01F4  3008               	movlw	8
 20235  01F5                     u12005:	
 20236  01F5  35D0               	lslf	??___flmul,f
 20237  01F6  0DD1               	rlf	??___flmul+1,f
 20238  01F7  0DD2               	rlf	??___flmul+2,f
 20239  01F8  0DD3               	rlf	??___flmul+3,f
 20240  01F9  0B89               	decfsz	9,f
 20241  01FA  29F5               	goto	u12005
 20242  01FB  0850               	movf	??___flmul,w
 20243  01FC  07DC               	addwf	___flmul@prod,f
 20244  01FD  0851               	movf	??___flmul+1,w
 20245  01FE  3DDD               	addwfc	___flmul@prod+1,f
 20246  01FF  0852               	movf	??___flmul+2,w
 20247  0200  3DDE               	addwfc	___flmul@prod+2,f
 20248  0201  0853               	movf	??___flmul+3,w
 20249  0202  3DDF               	addwfc	___flmul@prod+3,f
 20250  0203  0858               	movf	___flmul@grs,w
 20251  0204  00D0               	movwf	??___flmul
 20252  0205  0859               	movf	___flmul@grs+1,w
 20253  0206  00D1               	movwf	??___flmul+1
 20254  0207  085A               	movf	___flmul@grs+2,w
 20255  0208  00D2               	movwf	??___flmul+2
 20256  0209  085B               	movf	___flmul@grs+3,w
 20257  020A  00D3               	movwf	??___flmul+3
 20258  020B  3018               	movlw	24
 20259  020C                     u12015:	
 20260  020C  36D3               	lsrf	??___flmul+3,f
 20261  020D  0CD2               	rrf	??___flmul+2,f
 20262  020E  0CD1               	rrf	??___flmul+1,f
 20263  020F  0CD0               	rrf	??___flmul,f
 20264  0210  0B89               	decfsz	9,f
 20265  0211  2A0C               	goto	u12015
 20266  0212  0850               	movf	??___flmul,w
 20267  0213  07DC               	addwf	___flmul@prod,f
 20268  0214  0851               	movf	??___flmul+1,w
 20269  0215  3DDD               	addwfc	___flmul@prod+1,f
 20270  0216  0852               	movf	??___flmul+2,w
 20271  0217  3DDE               	addwfc	___flmul@prod+2,f
 20272  0218  0853               	movf	??___flmul+3,w
 20273  0219  3DDF               	addwfc	___flmul@prod+3,f
 20274  021A  3008               	movlw	8
 20275  021B                     u12025:	
 20276  021B  35D8               	lslf	___flmul@grs,f
 20277  021C  0DD9               	rlf	___flmul@grs+1,f
 20278  021D  0DDA               	rlf	___flmul@grs+2,f
 20279  021E  0DDB               	rlf	___flmul@grs+3,f
 20280  021F  0B89               	decfsz	9,f
 20281  0220  2A1B               	goto	u12025
 20282  0221  0857               	movf	___flmul@bexp,w
 20283  0222  0756               	addwf	___flmul@aexp,w
 20284  0223  00D0               	movwf	??___flmul
 20285  0224  01D1               	clrf	??___flmul+1
 20286  0225  0DD1               	rlf	??___flmul+1,f
 20287  0226  0850               	movf	??___flmul,w
 20288  0227  3E82               	addlw	130
 20289  0228  00E0               	movwf	___flmul@temp
 20290  0229  30FF               	movlw	255
 20291  022A  3D51               	addwfc	??___flmul+1,w
 20292  022B  00E1               	movwf	___flmul@temp+1
 20293  022C                     l11549:	
 20294  022C  1BDE               	btfsc	___flmul@prod+2,7
 20295  022D  2A43               	goto	l11551
 20296  022E  3001               	movlw	1
 20297  022F                     u12035:	
 20298  022F  35DC               	lslf	___flmul@prod,f
 20299  0230  0DDD               	rlf	___flmul@prod+1,f
 20300  0231  0DDE               	rlf	___flmul@prod+2,f
 20301  0232  0DDF               	rlf	___flmul@prod+3,f
 20302  0233  0B89               	decfsz	9,f
 20303  0234  2A2F               	goto	u12035
 20304  0235  1BDB               	btfsc	___flmul@grs+3,7
 20305  0236  145C               	bsf	___flmul@prod,0
 20306  0237  3001               	movlw	1
 20307  0238                     u12055:	
 20308  0238  35D8               	lslf	___flmul@grs,f
 20309  0239  0DD9               	rlf	___flmul@grs+1,f
 20310  023A  0DDA               	rlf	___flmul@grs+2,f
 20311  023B  0DDB               	rlf	___flmul@grs+3,f
 20312  023C  0B89               	decfsz	9,f
 20313  023D  2A38               	goto	u12055
 20314  023E  30FF               	movlw	255
 20315  023F  07E0               	addwf	___flmul@temp,f
 20316  0240  30FF               	movlw	255
 20317  0241  3DE1               	addwfc	___flmul@temp+1,f
 20318  0242  2A2C               	goto	l11549
 20319  0243                     l11551:	
 20320  0243  01D6               	clrf	___flmul@aexp
 20321  0244  1FDB               	btfss	___flmul@grs+3,7
 20322  0245  2A5C               	goto	l11561
 20323  0246  30FF               	movlw	255
 20324  0247  0558               	andwf	___flmul@grs,w
 20325  0248  00D0               	movwf	??___flmul
 20326  0249  30FF               	movlw	255
 20327  024A  0559               	andwf	___flmul@grs+1,w
 20328  024B  00D1               	movwf	??___flmul+1
 20329  024C  30FF               	movlw	255
 20330  024D  055A               	andwf	___flmul@grs+2,w
 20331  024E  00D2               	movwf	??___flmul+2
 20332  024F  307F               	movlw	127
 20333  0250  055B               	andwf	___flmul@grs+3,w
 20334  0251  00D3               	movwf	??___flmul+3
 20335  0252  0853               	movf	??___flmul+3,w
 20336  0253  0452               	iorwf	??___flmul+2,w
 20337  0254  0451               	iorwf	??___flmul+1,w
 20338  0255  0450               	iorwf	??___flmul,w
 20339  0256  1903               	skipnz
 20340  0257  185C               	btfsc	___flmul@prod,0
 20341  0258  2A5A               	goto	l11557
 20342  0259  2A5C               	goto	l11561
 20343  025A                     l11557:	
 20344  025A  01D6               	clrf	___flmul@aexp
 20345  025B  0AD6               	incf	___flmul@aexp,f
 20346  025C                     l11561:	
 20347  025C  0856               	movf	___flmul@aexp,w
 20348  025D  1903               	btfsc	3,2
 20349  025E  2A85               	goto	l11571
 20350  025F  3001               	movlw	1
 20351  0260  07DC               	addwf	___flmul@prod,f
 20352  0261  3000               	movlw	0
 20353  0262  3DDD               	addwfc	___flmul@prod+1,f
 20354  0263  3000               	movlw	0
 20355  0264  3DDE               	addwfc	___flmul@prod+2,f
 20356  0265  3000               	movlw	0
 20357  0266  3DDF               	addwfc	___flmul@prod+3,f
 20358  0267  1C5F               	btfss	___flmul@prod+3,0
 20359  0268  2A85               	goto	l11571
 20360  0269  085C               	movf	___flmul@prod,w
 20361  026A  00D0               	movwf	??___flmul
 20362  026B  085D               	movf	___flmul@prod+1,w
 20363  026C  00D1               	movwf	??___flmul+1
 20364  026D  085E               	movf	___flmul@prod+2,w
 20365  026E  00D2               	movwf	??___flmul+2
 20366  026F  085F               	movf	___flmul@prod+3,w
 20367  0270  00D3               	movwf	??___flmul+3
 20368  0271  3001               	movlw	1
 20369  0272  00D4               	movwf	??___flmul+4
 20370  0273                     u12125:	
 20371  0273  37D3               	asrf	??___flmul+3,f
 20372  0274  0CD2               	rrf	??___flmul+2,f
 20373  0275  0CD1               	rrf	??___flmul+1,f
 20374  0276  0CD0               	rrf	??___flmul,f
 20375  0277  0BD4               	decfsz	??___flmul+4,f
 20376  0278  2A73               	goto	u12125
 20377  0279  0853               	movf	??___flmul+3,w
 20378  027A  00DF               	movwf	___flmul@prod+3
 20379  027B  0852               	movf	??___flmul+2,w
 20380  027C  00DE               	movwf	___flmul@prod+2
 20381  027D  0851               	movf	??___flmul+1,w
 20382  027E  00DD               	movwf	___flmul@prod+1
 20383  027F  0850               	movf	??___flmul,w
 20384  0280  00DC               	movwf	___flmul@prod
 20385  0281  3001               	movlw	1
 20386  0282  07E0               	addwf	___flmul@temp,f
 20387  0283  3000               	movlw	0
 20388  0284  3DE1               	addwfc	___flmul@temp+1,f
 20389  0285                     l11571:	
 20390  0285  0861               	movf	___flmul@temp+1,w
 20391  0286  3A80               	xorlw	128
 20392  0287  00D0               	movwf	??___flmul
 20393  0288  3080               	movlw	128
 20394  0289  0250               	subwf	??___flmul,w
 20395  028A  1D03               	skipz
 20396  028B  2A8E               	goto	u12135
 20397  028C  30FF               	movlw	255
 20398  028D  0260               	subwf	___flmul@temp,w
 20399  028E                     u12135:	
 20400  028E  1C03               	skipc
 20401  028F  2A9A               	goto	l11575
 20402  0290  307F               	movlw	127
 20403  0291  0140               	movlb	0	; select bank0
 20404  0292  00DF               	movwf	___flmul@prod+3
 20405  0293  3080               	movlw	128
 20406  0294  00DE               	movwf	___flmul@prod+2
 20407  0295  3000               	movlw	0
 20408  0296  00DD               	movwf	___flmul@prod+1
 20409  0297  3000               	movlw	0
 20410  0298  00DC               	movwf	___flmul@prod
 20411  0299  2AC4               	goto	l2139
 20412  029A                     l11575:	
 20413  029A  0140               	movlb	0	; select bank0
 20414  029B  0861               	movf	___flmul@temp+1,w
 20415  029C  3A80               	xorlw	128
 20416  029D  00D0               	movwf	??___flmul
 20417  029E  3080               	movlw	128
 20418  029F  0250               	subwf	??___flmul,w
 20419  02A0  1D03               	skipz
 20420  02A1  2AA4               	goto	u12145
 20421  02A2  3001               	movlw	1
 20422  02A3  0260               	subwf	___flmul@temp,w
 20423  02A4                     u12145:	
 20424  02A4  1803               	skipnc
 20425  02A5  2AB1               	goto	l11581
 20426  02A6  3000               	movlw	0
 20427  02A7  0140               	movlb	0	; select bank0
 20428  02A8  00DF               	movwf	___flmul@prod+3
 20429  02A9  3000               	movlw	0
 20430  02AA  00DE               	movwf	___flmul@prod+2
 20431  02AB  3000               	movlw	0
 20432  02AC  00DD               	movwf	___flmul@prod+1
 20433  02AD  3000               	movlw	0
 20434  02AE  00DC               	movwf	___flmul@prod
 20435  02AF  01D5               	clrf	___flmul@sign
 20436  02B0  2AC4               	goto	l2139
 20437  02B1                     l11581:	
 20438  02B1  0140               	movlb	0	; select bank0
 20439  02B2  0860               	movf	___flmul@temp,w
 20440  02B3  00D0               	movwf	??___flmul
 20441  02B4  0850               	movf	??___flmul,w
 20442  02B5  00D7               	movwf	___flmul@bexp
 20443  02B6  30FF               	movlw	255
 20444  02B7  05DC               	andwf	___flmul@prod,f
 20445  02B8  30FF               	movlw	255
 20446  02B9  05DD               	andwf	___flmul@prod+1,f
 20447  02BA  307F               	movlw	127
 20448  02BB  05DE               	andwf	___flmul@prod+2,f
 20449  02BC  3000               	movlw	0
 20450  02BD  05DF               	andwf	___flmul@prod+3,f
 20451  02BE  1857               	btfsc	___flmul@bexp,0
 20452  02BF  17DE               	bsf	___flmul@prod+2,7
 20453  02C0  3657               	lsrf	___flmul@bexp,w
 20454  02C1  00D0               	movwf	??___flmul
 20455  02C2  0850               	movf	??___flmul,w
 20456  02C3  00DF               	movwf	___flmul@prod+3
 20457  02C4                     l2139:	
 20458  02C4  0855               	movf	___flmul@sign,w
 20459  02C5  00D0               	movwf	??___flmul
 20460  02C6  0850               	movf	??___flmul,w
 20461  02C7  04DF               	iorwf	___flmul@prod+3,f
 20462  02C8  085F               	movf	___flmul@prod+3,w
 20463  02C9  00CB               	movwf	?___flmul+3
 20464  02CA  085E               	movf	___flmul@prod+2,w
 20465  02CB  00CA               	movwf	?___flmul+2
 20466  02CC  085D               	movf	___flmul@prod+1,w
 20467  02CD  00C9               	movwf	?___flmul+1
 20468  02CE  085C               	movf	___flmul@prod,w
 20469  02CF  00C8               	movwf	?___flmul
 20470  02D0  0008               	return
 20471  02D1                     __end_of___flmul:	
 20472                           
 20473                           	psect	text68
 20474  1EA3                     __ptext68:	
 20475 ;; *************** function __Umul8_16 *****************
 20476 ;; Defined at:
 20477 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 20478 ;; Parameters:    Size  Location     Type
 20479 ;;  multiplier      1    wreg     unsigned char 
 20480 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 20481 ;; Auto vars:     Size  Location     Type
 20482 ;;  multiplier      1    8[BANK0 ] unsigned char 
 20483 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 20484 ;;  product         2    4[BANK0 ] unsigned int 
 20485 ;; Return value:  Size  Location     Type
 20486 ;;                  2    0[BANK0 ] unsigned int 
 20487 ;; Registers used:
 20488 ;;		wreg, status,2, status,0
 20489 ;; Tracked objects:
 20490 ;;		On entry : 0/0
 20491 ;;		On exit  : 0/0
 20492 ;;		Unchanged: 0/0
 20493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20494 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20495 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20496 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20497 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20498 ;;Total ram usage:        9 bytes
 20499 ;; Hardware stack levels used:    1
 20500 ;; Hardware stack levels required when called:    4
 20501 ;; This function calls:
 20502 ;;		Nothing
 20503 ;; This function is called by:
 20504 ;;		___flmul
 20505 ;; This function uses a non-reentrant model
 20506 ;;
 20507                           
 20508                           
 20509                           ;psect for function __Umul8_16
 20510  1EA3                     __Umul8_16:	
 20511                           
 20512                           ;incstack = 0
 20513                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 20514                           ;__Umul8_16@multiplier stored from wreg
 20515  1EA3  0140               	movlb	0	; select bank0
 20516  1EA4  00A8               	movwf	__Umul8_16@multiplier
 20517  1EA5  01A4               	clrf	__Umul8_16@product
 20518  1EA6  01A5               	clrf	__Umul8_16@product+1
 20519  1EA7  0820               	movf	__Umul8_16@multiplicand,w
 20520  1EA8  00A2               	movwf	??__Umul8_16
 20521  1EA9  01A3               	clrf	??__Umul8_16+1
 20522  1EAA  0822               	movf	??__Umul8_16,w
 20523  1EAB  00A6               	movwf	__Umul8_16@word_mpld
 20524  1EAC  0823               	movf	??__Umul8_16+1,w
 20525  1EAD  00A7               	movwf	__Umul8_16@word_mpld+1
 20526  1EAE                     l11267:	
 20527  1EAE  1C28               	btfss	__Umul8_16@multiplier,0
 20528  1EAF  2EB4               	goto	l2217
 20529  1EB0  0826               	movf	__Umul8_16@word_mpld,w
 20530  1EB1  07A4               	addwf	__Umul8_16@product,f
 20531  1EB2  0827               	movf	__Umul8_16@word_mpld+1,w
 20532  1EB3  3DA5               	addwfc	__Umul8_16@product+1,f
 20533  1EB4                     l2217:	
 20534  1EB4  3001               	movlw	1
 20535  1EB5                     u11495:	
 20536  1EB5  35A6               	lslf	__Umul8_16@word_mpld,f
 20537  1EB6  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 20538  1EB7  0B89               	decfsz	9,f
 20539  1EB8  2EB5               	goto	u11495
 20540  1EB9  1003               	clrc
 20541  1EBA  0CA8               	rrf	__Umul8_16@multiplier,f
 20542  1EBB  0828               	movf	__Umul8_16@multiplier,w
 20543  1EBC  1D03               	btfss	3,2
 20544  1EBD  2EAE               	goto	l11267
 20545  1EBE  0825               	movf	__Umul8_16@product+1,w
 20546  1EBF  00A1               	movwf	?__Umul8_16+1
 20547  1EC0  0824               	movf	__Umul8_16@product,w
 20548  1EC1  00A0               	movwf	?__Umul8_16
 20549  1EC2  0008               	return
 20550  1EC3                     __end_of__Umul8_16:	
 20551                           
 20552                           	psect	text69
 20553  0496                     __ptext69:	
 20554 ;; *************** function ___fldiv *****************
 20555 ;; Defined at:
 20556 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 20557 ;; Parameters:    Size  Location     Type
 20558 ;;  a               4   14[BANK0 ] unsigned int 
 20559 ;;  b               4   18[BANK0 ] unsigned int 
 20560 ;; Auto vars:     Size  Location     Type
 20561 ;;  grs             4   34[BANK0 ] unsigned long 
 20562 ;;  rem             4   27[BANK0 ] unsigned long 
 20563 ;;  new_exp         2   32[BANK0 ] int 
 20564 ;;  aexp            1   39[BANK0 ] unsigned char 
 20565 ;;  bexp            1   38[BANK0 ] unsigned char 
 20566 ;;  sign            1   31[BANK0 ] unsigned char 
 20567 ;; Return value:  Size  Location     Type
 20568 ;;                  4   14[BANK0 ] unsigned char 
 20569 ;; Registers used:
 20570 ;;		wreg, status,2, status,0
 20571 ;; Tracked objects:
 20572 ;;		On entry : 0/0
 20573 ;;		On exit  : 0/0
 20574 ;;		Unchanged: 0/0
 20575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20576 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20577 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20578 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20579 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20580 ;;Total ram usage:       26 bytes
 20581 ;; Hardware stack levels used:    1
 20582 ;; Hardware stack levels required when called:    4
 20583 ;; This function calls:
 20584 ;;		Nothing
 20585 ;; This function is called by:
 20586 ;;		_LED_setColor
 20587 ;;		_beatBrightnessCalculation
 20588 ;; This function uses a non-reentrant model
 20589 ;;
 20590                           
 20591                           
 20592                           ;psect for function ___fldiv
 20593  0496                     ___fldiv:	
 20594                           
 20595                           ;incstack = 0
 20596                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 20597  0496  0140               	movlb	0	; select bank0
 20598  0497  0835               	movf	___fldiv@b+3,w
 20599  0498  3980               	andlw	128
 20600  0499  00B6               	movwf	??___fldiv
 20601  049A  0836               	movf	??___fldiv,w
 20602  049B  00BF               	movwf	___fldiv@sign
 20603  049C  3535               	lslf	___fldiv@b+3,w
 20604  049D  00B6               	movwf	??___fldiv
 20605  049E  0836               	movf	??___fldiv,w
 20606  049F  00C6               	movwf	___fldiv@bexp
 20607  04A0  1BB4               	btfsc	___fldiv@b+2,7
 20608  04A1  1446               	bsf	___fldiv@bexp,0
 20609  04A2  0846               	movf	___fldiv@bexp,w
 20610  04A3  1903               	btfsc	3,2
 20611  04A4  2CB3               	goto	l11331
 20612  04A5  0A46               	incf	___fldiv@bexp,w
 20613  04A6  1D03               	btfss	3,2
 20614  04A7  2CB0               	goto	l11327
 20615  04A8  3000               	movlw	0
 20616  04A9  00B5               	movwf	___fldiv@b+3
 20617  04AA  3000               	movlw	0
 20618  04AB  00B4               	movwf	___fldiv@b+2
 20619  04AC  3000               	movlw	0
 20620  04AD  00B3               	movwf	___fldiv@b+1
 20621  04AE  3000               	movlw	0
 20622  04AF  00B2               	movwf	___fldiv@b
 20623  04B0                     l11327:	
 20624  04B0  17B4               	bsf	___fldiv@b+2,7
 20625  04B1  01B5               	clrf	___fldiv@b+3
 20626  04B2  2CBB               	goto	l11333
 20627  04B3                     l11331:	
 20628  04B3  3000               	movlw	0
 20629  04B4  00B5               	movwf	___fldiv@b+3
 20630  04B5  3000               	movlw	0
 20631  04B6  00B4               	movwf	___fldiv@b+2
 20632  04B7  3000               	movlw	0
 20633  04B8  00B3               	movwf	___fldiv@b+1
 20634  04B9  3000               	movlw	0
 20635  04BA  00B2               	movwf	___fldiv@b
 20636  04BB                     l11333:	
 20637  04BB  0831               	movf	___fldiv@a+3,w
 20638  04BC  3980               	andlw	128
 20639  04BD  00B6               	movwf	??___fldiv
 20640  04BE  0836               	movf	??___fldiv,w
 20641  04BF  06BF               	xorwf	___fldiv@sign,f
 20642  04C0  3531               	lslf	___fldiv@a+3,w
 20643  04C1  00B6               	movwf	??___fldiv
 20644  04C2  0836               	movf	??___fldiv,w
 20645  04C3  00C7               	movwf	___fldiv@aexp
 20646  04C4  1BB0               	btfsc	___fldiv@a+2,7
 20647  04C5  1447               	bsf	___fldiv@aexp,0
 20648  04C6  0847               	movf	___fldiv@aexp,w
 20649  04C7  1903               	btfsc	3,2
 20650  04C8  2CD7               	goto	l11351
 20651  04C9  0A47               	incf	___fldiv@aexp,w
 20652  04CA  1D03               	btfss	3,2
 20653  04CB  2CD4               	goto	l11347
 20654  04CC  3000               	movlw	0
 20655  04CD  00B1               	movwf	___fldiv@a+3
 20656  04CE  3000               	movlw	0
 20657  04CF  00B0               	movwf	___fldiv@a+2
 20658  04D0  3000               	movlw	0
 20659  04D1  00AF               	movwf	___fldiv@a+1
 20660  04D2  3000               	movlw	0
 20661  04D3  00AE               	movwf	___fldiv@a
 20662  04D4                     l11347:	
 20663  04D4  17B0               	bsf	___fldiv@a+2,7
 20664  04D5  01B1               	clrf	___fldiv@a+3
 20665  04D6  2CDF               	goto	l2087
 20666  04D7                     l11351:	
 20667  04D7  3000               	movlw	0
 20668  04D8  00B1               	movwf	___fldiv@a+3
 20669  04D9  3000               	movlw	0
 20670  04DA  00B0               	movwf	___fldiv@a+2
 20671  04DB  3000               	movlw	0
 20672  04DC  00AF               	movwf	___fldiv@a+1
 20673  04DD  3000               	movlw	0
 20674  04DE  00AE               	movwf	___fldiv@a
 20675  04DF                     l2087:	
 20676  04DF  0831               	movf	___fldiv@a+3,w
 20677  04E0  0430               	iorwf	___fldiv@a+2,w
 20678  04E1  042F               	iorwf	___fldiv@a+1,w
 20679  04E2  042E               	iorwf	___fldiv@a,w
 20680  04E3  1D03               	skipz
 20681  04E4  2CFE               	goto	l11361
 20682  04E5  3000               	movlw	0
 20683  04E6  00B5               	movwf	___fldiv@b+3
 20684  04E7  3000               	movlw	0
 20685  04E8  00B4               	movwf	___fldiv@b+2
 20686  04E9  3000               	movlw	0
 20687  04EA  00B3               	movwf	___fldiv@b+1
 20688  04EB  3000               	movlw	0
 20689  04EC  00B2               	movwf	___fldiv@b
 20690  04ED  3080               	movlw	128
 20691  04EE  04B4               	iorwf	___fldiv@b+2,f
 20692  04EF  307F               	movlw	127
 20693  04F0  04B5               	iorwf	___fldiv@b+3,f
 20694  04F1                     L20:	
 20695  04F1  083F               	movf	___fldiv@sign,w
 20696  04F2  00B6               	movwf	??___fldiv
 20697  04F3  0836               	movf	??___fldiv,w
 20698  04F4  04B5               	iorwf	___fldiv@b+3,f
 20699  04F5  0835               	movf	___fldiv@b+3,w
 20700  04F6  00B1               	movwf	?___fldiv+3
 20701  04F7  0834               	movf	___fldiv@b+2,w
 20702  04F8  00B0               	movwf	?___fldiv+2
 20703  04F9  0833               	movf	___fldiv@b+1,w
 20704  04FA  00AF               	movwf	?___fldiv+1
 20705  04FB  0832               	movf	___fldiv@b,w
 20706  04FC  00AE               	movwf	?___fldiv
 20707  04FD  0008               	return
 20708  04FE                     l11361:	
 20709  04FE  0846               	movf	___fldiv@bexp,w
 20710  04FF  1D03               	btfss	3,2
 20711  0500  2D0A               	goto	l11367
 20712  0501  3000               	movlw	0
 20713  0502  00B1               	movwf	?___fldiv+3
 20714  0503  3000               	movlw	0
 20715  0504  00B0               	movwf	?___fldiv+2
 20716  0505  3000               	movlw	0
 20717  0506  00AF               	movwf	?___fldiv+1
 20718  0507  3000               	movlw	0
 20719  0508  00AE               	movwf	?___fldiv
 20720  0509  0008               	return
 20721  050A                     l11367:	
 20722  050A  0846               	movf	___fldiv@bexp,w
 20723  050B  00B6               	movwf	??___fldiv
 20724  050C  01B7               	clrf	??___fldiv+1
 20725  050D  0837               	movf	??___fldiv+1,w
 20726  050E  00B9               	movwf	??___fldiv+3
 20727  050F  0847               	movf	___fldiv@aexp,w
 20728  0510  0236               	subwf	??___fldiv,w
 20729  0511  00B8               	movwf	??___fldiv+2
 20730  0512  1C03               	skipc
 20731  0513  03B9               	decf	??___fldiv+3,f
 20732  0514  0838               	movf	??___fldiv+2,w
 20733  0515  3E7F               	addlw	127
 20734  0516  00C0               	movwf	___fldiv@new_exp
 20735  0517  3000               	movlw	0
 20736  0518  3D39               	addwfc	??___fldiv+3,w
 20737  0519  00C1               	movwf	___fldiv@new_exp+1
 20738  051A  0835               	movf	___fldiv@b+3,w
 20739  051B  00BE               	movwf	___fldiv@rem+3
 20740  051C  0834               	movf	___fldiv@b+2,w
 20741  051D  00BD               	movwf	___fldiv@rem+2
 20742  051E  0833               	movf	___fldiv@b+1,w
 20743  051F  00BC               	movwf	___fldiv@rem+1
 20744  0520  0832               	movf	___fldiv@b,w
 20745  0521  00BB               	movwf	___fldiv@rem
 20746  0522  3000               	movlw	0
 20747  0523  00B5               	movwf	___fldiv@b+3
 20748  0524  3000               	movlw	0
 20749  0525  00B4               	movwf	___fldiv@b+2
 20750  0526  3000               	movlw	0
 20751  0527  00B3               	movwf	___fldiv@b+1
 20752  0528  3000               	movlw	0
 20753  0529  00B2               	movwf	___fldiv@b
 20754  052A  3000               	movlw	0
 20755  052B  00C5               	movwf	___fldiv@grs+3
 20756  052C  3000               	movlw	0
 20757  052D  00C4               	movwf	___fldiv@grs+2
 20758  052E  3000               	movlw	0
 20759  052F  00C3               	movwf	___fldiv@grs+1
 20760  0530  3000               	movlw	0
 20761  0531  00C2               	movwf	___fldiv@grs
 20762  0532  01C7               	clrf	___fldiv@aexp
 20763  0533                     l11395:	
 20764  0533  301A               	movlw	26
 20765  0534  0247               	subwf	___fldiv@aexp,w
 20766  0535  1803               	btfsc	3,0
 20767  0536  2D6F               	goto	l11397
 20768  0537  0847               	movf	___fldiv@aexp,w
 20769  0538  1903               	btfsc	3,2
 20770  0539  2D51               	goto	l11387
 20771  053A  3001               	movlw	1
 20772  053B                     u11705:	
 20773  053B  35BB               	lslf	___fldiv@rem,f
 20774  053C  0DBC               	rlf	___fldiv@rem+1,f
 20775  053D  0DBD               	rlf	___fldiv@rem+2,f
 20776  053E  0DBE               	rlf	___fldiv@rem+3,f
 20777  053F  0B89               	decfsz	9,f
 20778  0540  2D3B               	goto	u11705
 20779  0541  3001               	movlw	1
 20780  0542                     u11715:	
 20781  0542  35B2               	lslf	___fldiv@b,f
 20782  0543  0DB3               	rlf	___fldiv@b+1,f
 20783  0544  0DB4               	rlf	___fldiv@b+2,f
 20784  0545  0DB5               	rlf	___fldiv@b+3,f
 20785  0546  0B89               	decfsz	9,f
 20786  0547  2D42               	goto	u11715
 20787  0548  1BC5               	btfsc	___fldiv@grs+3,7
 20788  0549  1432               	bsf	___fldiv@b,0
 20789  054A  3001               	movlw	1
 20790  054B                     u11735:	
 20791  054B  35C2               	lslf	___fldiv@grs,f
 20792  054C  0DC3               	rlf	___fldiv@grs+1,f
 20793  054D  0DC4               	rlf	___fldiv@grs+2,f
 20794  054E  0DC5               	rlf	___fldiv@grs+3,f
 20795  054F  0B89               	decfsz	9,f
 20796  0550  2D4B               	goto	u11735
 20797  0551                     l11387:	
 20798  0551  0831               	movf	___fldiv@a+3,w
 20799  0552  023E               	subwf	___fldiv@rem+3,w
 20800  0553  1D03               	skipz
 20801  0554  2D5F               	goto	u11745
 20802  0555  0830               	movf	___fldiv@a+2,w
 20803  0556  023D               	subwf	___fldiv@rem+2,w
 20804  0557  1D03               	skipz
 20805  0558  2D5F               	goto	u11745
 20806  0559  082F               	movf	___fldiv@a+1,w
 20807  055A  023C               	subwf	___fldiv@rem+1,w
 20808  055B  1D03               	skipz
 20809  055C  2D5F               	goto	u11745
 20810  055D  082E               	movf	___fldiv@a,w
 20811  055E  023B               	subwf	___fldiv@rem,w
 20812  055F                     u11745:	
 20813  055F  1C03               	skipc
 20814  0560  2D6A               	goto	l11393
 20815  0561  1745               	bsf	___fldiv@grs+3,6
 20816  0562  082E               	movf	___fldiv@a,w
 20817  0563  02BB               	subwf	___fldiv@rem,f
 20818  0564  082F               	movf	___fldiv@a+1,w
 20819  0565  3BBC               	subwfb	___fldiv@rem+1,f
 20820  0566  0830               	movf	___fldiv@a+2,w
 20821  0567  3BBD               	subwfb	___fldiv@rem+2,f
 20822  0568  0831               	movf	___fldiv@a+3,w
 20823  0569  3BBE               	subwfb	___fldiv@rem+3,f
 20824  056A                     l11393:	
 20825  056A  3001               	movlw	1
 20826  056B  00B6               	movwf	??___fldiv
 20827  056C  0836               	movf	??___fldiv,w
 20828  056D  07C7               	addwf	___fldiv@aexp,f
 20829  056E  2D33               	goto	l11395
 20830  056F                     l11397:	
 20831  056F  083E               	movf	___fldiv@rem+3,w
 20832  0570  043D               	iorwf	___fldiv@rem+2,w
 20833  0571  043C               	iorwf	___fldiv@rem+1,w
 20834  0572  043B               	iorwf	___fldiv@rem,w
 20835  0573  1D03               	btfss	3,2
 20836  0574  1442               	bsf	___fldiv@grs,0
 20837  0575                     l11411:	
 20838  0575  1BB4               	btfsc	___fldiv@b+2,7
 20839  0576  2D8C               	goto	l11413
 20840  0577  3001               	movlw	1
 20841  0578                     u11775:	
 20842  0578  35B2               	lslf	___fldiv@b,f
 20843  0579  0DB3               	rlf	___fldiv@b+1,f
 20844  057A  0DB4               	rlf	___fldiv@b+2,f
 20845  057B  0DB5               	rlf	___fldiv@b+3,f
 20846  057C  0B89               	decfsz	9,f
 20847  057D  2D78               	goto	u11775
 20848  057E  1BC5               	btfsc	___fldiv@grs+3,7
 20849  057F  1432               	bsf	___fldiv@b,0
 20850  0580  3001               	movlw	1
 20851  0581                     u11795:	
 20852  0581  35C2               	lslf	___fldiv@grs,f
 20853  0582  0DC3               	rlf	___fldiv@grs+1,f
 20854  0583  0DC4               	rlf	___fldiv@grs+2,f
 20855  0584  0DC5               	rlf	___fldiv@grs+3,f
 20856  0585  0B89               	decfsz	9,f
 20857  0586  2D81               	goto	u11795
 20858  0587  30FF               	movlw	255
 20859  0588  07C0               	addwf	___fldiv@new_exp,f
 20860  0589  30FF               	movlw	255
 20861  058A  3DC1               	addwfc	___fldiv@new_exp+1,f
 20862  058B  2D75               	goto	l11411
 20863  058C                     l11413:	
 20864  058C  01C7               	clrf	___fldiv@aexp
 20865  058D  1FC5               	btfss	___fldiv@grs+3,7
 20866  058E  2DA5               	goto	l11423
 20867  058F  30FF               	movlw	255
 20868  0590  0542               	andwf	___fldiv@grs,w
 20869  0591  00B6               	movwf	??___fldiv
 20870  0592  30FF               	movlw	255
 20871  0593  0543               	andwf	___fldiv@grs+1,w
 20872  0594  00B7               	movwf	??___fldiv+1
 20873  0595  30FF               	movlw	255
 20874  0596  0544               	andwf	___fldiv@grs+2,w
 20875  0597  00B8               	movwf	??___fldiv+2
 20876  0598  307F               	movlw	127
 20877  0599  0545               	andwf	___fldiv@grs+3,w
 20878  059A  00B9               	movwf	??___fldiv+3
 20879  059B  0839               	movf	??___fldiv+3,w
 20880  059C  0438               	iorwf	??___fldiv+2,w
 20881  059D  0437               	iorwf	??___fldiv+1,w
 20882  059E  0436               	iorwf	??___fldiv,w
 20883  059F  1903               	skipnz
 20884  05A0  1832               	btfsc	___fldiv@b,0
 20885  05A1  2DA3               	goto	l11419
 20886  05A2  2DA5               	goto	l11423
 20887  05A3                     l11419:	
 20888  05A3  01C7               	clrf	___fldiv@aexp
 20889  05A4  0AC7               	incf	___fldiv@aexp,f
 20890  05A5                     l11423:	
 20891  05A5  0847               	movf	___fldiv@aexp,w
 20892  05A6  1903               	btfsc	3,2
 20893  05A7  2DCE               	goto	l11433
 20894  05A8  3001               	movlw	1
 20895  05A9  07B2               	addwf	___fldiv@b,f
 20896  05AA  3000               	movlw	0
 20897  05AB  3DB3               	addwfc	___fldiv@b+1,f
 20898  05AC  3000               	movlw	0
 20899  05AD  3DB4               	addwfc	___fldiv@b+2,f
 20900  05AE  3000               	movlw	0
 20901  05AF  3DB5               	addwfc	___fldiv@b+3,f
 20902  05B0  1C35               	btfss	___fldiv@b+3,0
 20903  05B1  2DCE               	goto	l11433
 20904  05B2  0832               	movf	___fldiv@b,w
 20905  05B3  00B6               	movwf	??___fldiv
 20906  05B4  0833               	movf	___fldiv@b+1,w
 20907  05B5  00B7               	movwf	??___fldiv+1
 20908  05B6  0834               	movf	___fldiv@b+2,w
 20909  05B7  00B8               	movwf	??___fldiv+2
 20910  05B8  0835               	movf	___fldiv@b+3,w
 20911  05B9  00B9               	movwf	??___fldiv+3
 20912  05BA  3001               	movlw	1
 20913  05BB  00BA               	movwf	??___fldiv+4
 20914  05BC                     u11865:	
 20915  05BC  37B9               	asrf	??___fldiv+3,f
 20916  05BD  0CB8               	rrf	??___fldiv+2,f
 20917  05BE  0CB7               	rrf	??___fldiv+1,f
 20918  05BF  0CB6               	rrf	??___fldiv,f
 20919  05C0  0BBA               	decfsz	??___fldiv+4,f
 20920  05C1  2DBC               	goto	u11865
 20921  05C2  0839               	movf	??___fldiv+3,w
 20922  05C3  00B5               	movwf	___fldiv@b+3
 20923  05C4  0838               	movf	??___fldiv+2,w
 20924  05C5  00B4               	movwf	___fldiv@b+2
 20925  05C6  0837               	movf	??___fldiv+1,w
 20926  05C7  00B3               	movwf	___fldiv@b+1
 20927  05C8  0836               	movf	??___fldiv,w
 20928  05C9  00B2               	movwf	___fldiv@b
 20929  05CA  3001               	movlw	1
 20930  05CB  07C0               	addwf	___fldiv@new_exp,f
 20931  05CC  3000               	movlw	0
 20932  05CD  3DC1               	addwfc	___fldiv@new_exp+1,f
 20933  05CE                     l11433:	
 20934  05CE  0841               	movf	___fldiv@new_exp+1,w
 20935  05CF  3A80               	xorlw	128
 20936  05D0  00B6               	movwf	??___fldiv
 20937  05D1  3080               	movlw	128
 20938  05D2  0236               	subwf	??___fldiv,w
 20939  05D3  1D03               	skipz
 20940  05D4  2DD7               	goto	u11875
 20941  05D5  30FF               	movlw	255
 20942  05D6  0240               	subwf	___fldiv@new_exp,w
 20943  05D7                     u11875:	
 20944  05D7  1C03               	skipc
 20945  05D8  2DE6               	goto	l2108
 20946  05D9  30FF               	movlw	255
 20947  05DA  0140               	movlb	0	; select bank0
 20948  05DB  00C0               	movwf	___fldiv@new_exp
 20949  05DC  3000               	movlw	0
 20950  05DD  00C1               	movwf	___fldiv@new_exp+1
 20951  05DE  3000               	movlw	0
 20952  05DF  00B5               	movwf	___fldiv@b+3
 20953  05E0  3000               	movlw	0
 20954  05E1  00B4               	movwf	___fldiv@b+2
 20955  05E2  3000               	movlw	0
 20956  05E3  00B3               	movwf	___fldiv@b+1
 20957  05E4  3000               	movlw	0
 20958  05E5  00B2               	movwf	___fldiv@b
 20959  05E6                     l2108:	
 20960  05E6  0140               	movlb	0	; select bank0
 20961  05E7  0841               	movf	___fldiv@new_exp+1,w
 20962  05E8  3A80               	xorlw	128
 20963  05E9  00B6               	movwf	??___fldiv
 20964  05EA  3080               	movlw	128
 20965  05EB  0236               	subwf	??___fldiv,w
 20966  05EC  1D03               	skipz
 20967  05ED  2DF0               	goto	u11885
 20968  05EE  3001               	movlw	1
 20969  05EF  0240               	subwf	___fldiv@new_exp,w
 20970  05F0                     u11885:	
 20971  05F0  1803               	skipnc
 20972  05F1  2DFE               	goto	l2109
 20973  05F2  0140               	movlb	0	; select bank0
 20974  05F3  01C0               	clrf	___fldiv@new_exp
 20975  05F4  01C1               	clrf	___fldiv@new_exp+1
 20976  05F5  3000               	movlw	0
 20977  05F6  00B5               	movwf	___fldiv@b+3
 20978  05F7  3000               	movlw	0
 20979  05F8  00B4               	movwf	___fldiv@b+2
 20980  05F9  3000               	movlw	0
 20981  05FA  00B3               	movwf	___fldiv@b+1
 20982  05FB  3000               	movlw	0
 20983  05FC  00B2               	movwf	___fldiv@b
 20984  05FD  01BF               	clrf	___fldiv@sign
 20985  05FE                     l2109:	
 20986  05FE  0140               	movlb	0	; select bank0
 20987  05FF  0840               	movf	___fldiv@new_exp,w
 20988  0600  00B6               	movwf	??___fldiv
 20989  0601  0836               	movf	??___fldiv,w
 20990  0602  00C6               	movwf	___fldiv@bexp
 20991  0603  1C46               	btfss	___fldiv@bexp,0
 20992  0604  2E07               	goto	l11447
 20993  0605  17B4               	bsf	___fldiv@b+2,7
 20994  0606  2E0B               	goto	l2111
 20995  0607                     l11447:	
 20996  0607  307F               	movlw	127
 20997  0608  00B6               	movwf	??___fldiv
 20998  0609  0836               	movf	??___fldiv,w
 20999  060A  05B4               	andwf	___fldiv@b+2,f
 21000  060B                     l2111:	
 21001  060B  3646               	lsrf	___fldiv@bexp,w
 21002  060C  00B6               	movwf	??___fldiv
 21003  060D  0836               	movf	??___fldiv,w
 21004  060E  00B5               	movwf	___fldiv@b+3
 21005  060F  2CF1               	goto	L20
 21006  0610                     __end_of___fldiv:	
 21007                           
 21008                           	psect	text70
 21009  1E65                     __ptext70:	
 21010 ;; *************** function _PWM4_LoadDutyValue *****************
 21011 ;; Defined at:
 21012 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 21013 ;; Parameters:    Size  Location     Type
 21014 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 21015 ;; Auto vars:     Size  Location     Type
 21016 ;;		None
 21017 ;; Return value:  Size  Location     Type
 21018 ;;                  1    wreg      void 
 21019 ;; Registers used:
 21020 ;;		wreg, status,2
 21021 ;; Tracked objects:
 21022 ;;		On entry : 0/0
 21023 ;;		On exit  : 0/0
 21024 ;;		Unchanged: 0/0
 21025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21026 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21029 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21030 ;;Total ram usage:        2 bytes
 21031 ;; Hardware stack levels used:    1
 21032 ;; Hardware stack levels required when called:    4
 21033 ;; This function calls:
 21034 ;;		Nothing
 21035 ;; This function is called by:
 21036 ;;		_LED_setColor
 21037 ;; This function uses a non-reentrant model
 21038 ;;
 21039                           
 21040                           
 21041                           ;psect for function _PWM4_LoadDutyValue
 21042  1E65                     _PWM4_LoadDutyValue:	
 21043                           
 21044                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 127){
 21045                           
 21046                           ;incstack = 0
 21047                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 21048  1E65  3000               	movlw	0
 21049  1E66  0141               	movlb	1	; select bank1
 21050  1E67  0221               	subwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 21051  1E68  3080               	movlw	128
 21052  1E69  1903               	skipnz
 21053  1E6A  0220               	subwf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 21054  1E6B  1803               	skipnc
 21055  1E6C  0008               	return
 21056                           
 21057                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 21058  1E6D  30FF               	movlw	255
 21059  1E6E  05A0               	andwf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 21060  1E6F  3003               	movlw	3
 21061  1E70  05A1               	andwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 21062                           
 21063                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 21064  1E71  0146               	movlb	6	; select bank6
 21065  1E72  1E1A               	btfss	26,4	;volatile
 21066  1E73  2E7A               	goto	l11661
 21067                           
 21068                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 21069  1E74  3006               	movlw	6
 21070  1E75  0141               	movlb	1	; select bank1
 21071  1E76                     u12355:	
 21072  1E76  35A0               	lslf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 21073  1E77  0DA1               	rlf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 21074  1E78  0B89               	decfsz	9,f
 21075  1E79  2E76               	goto	u12355
 21076  1E7A                     l11661:	
 21077                           
 21078                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 21079  1E7A  0141               	movlb	1	; select bank1
 21080  1E7B  0821               	movf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 21081  1E7C  0146               	movlb	6	; select bank6
 21082  1E7D  0099               	movwf	25	;volatile
 21083                           
 21084                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 21085  1E7E  0141               	movlb	1	; select bank1
 21086  1E7F  0820               	movf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 21087  1E80  0146               	movlb	6	; select bank6
 21088  1E81  0098               	movwf	24	;volatile
 21089                           
 21090                           ;mcc_generated_files/pwm4.c: 93:         }
 21091  1E82  0008               	return
 21092  1E83                     __end_of_PWM4_LoadDutyValue:	
 21093                           
 21094                           	psect	text71
 21095  1E47                     __ptext71:	
 21096 ;; *************** function _PWM3_LoadDutyValue *****************
 21097 ;; Defined at:
 21098 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 21099 ;; Parameters:    Size  Location     Type
 21100 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 21101 ;; Auto vars:     Size  Location     Type
 21102 ;;		None
 21103 ;; Return value:  Size  Location     Type
 21104 ;;                  1    wreg      void 
 21105 ;; Registers used:
 21106 ;;		wreg, status,2
 21107 ;; Tracked objects:
 21108 ;;		On entry : 0/0
 21109 ;;		On exit  : 0/0
 21110 ;;		Unchanged: 0/0
 21111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21112 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21115 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21116 ;;Total ram usage:        2 bytes
 21117 ;; Hardware stack levels used:    1
 21118 ;; Hardware stack levels required when called:    4
 21119 ;; This function calls:
 21120 ;;		Nothing
 21121 ;; This function is called by:
 21122 ;;		_LED_setColor
 21123 ;; This function uses a non-reentrant model
 21124 ;;
 21125                           
 21126                           
 21127                           ;psect for function _PWM3_LoadDutyValue
 21128  1E47                     _PWM3_LoadDutyValue:	
 21129                           
 21130                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 127){
 21131                           
 21132                           ;incstack = 0
 21133                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 21134  1E47  3000               	movlw	0
 21135  1E48  0141               	movlb	1	; select bank1
 21136  1E49  0221               	subwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 21137  1E4A  3080               	movlw	128
 21138  1E4B  1903               	skipnz
 21139  1E4C  0220               	subwf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 21140  1E4D  1803               	skipnc
 21141  1E4E  0008               	return
 21142                           
 21143                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 21144  1E4F  30FF               	movlw	255
 21145  1E50  05A0               	andwf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 21146  1E51  3003               	movlw	3
 21147  1E52  05A1               	andwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 21148                           
 21149                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 21150  1E53  0146               	movlb	6	; select bank6
 21151  1E54  1E16               	btfss	22,4	;volatile
 21152  1E55  2E5C               	goto	l11645
 21153                           
 21154                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 21155  1E56  3006               	movlw	6
 21156  1E57  0141               	movlb	1	; select bank1
 21157  1E58                     u12325:	
 21158  1E58  35A0               	lslf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 21159  1E59  0DA1               	rlf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 21160  1E5A  0B89               	decfsz	9,f
 21161  1E5B  2E58               	goto	u12325
 21162  1E5C                     l11645:	
 21163                           
 21164                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 21165  1E5C  0141               	movlb	1	; select bank1
 21166  1E5D  0821               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 21167  1E5E  0146               	movlb	6	; select bank6
 21168  1E5F  0095               	movwf	21	;volatile
 21169                           
 21170                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 21171  1E60  0141               	movlb	1	; select bank1
 21172  1E61  0820               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 21173  1E62  0146               	movlb	6	; select bank6
 21174  1E63  0094               	movwf	20	;volatile
 21175                           
 21176                           ;mcc_generated_files/pwm3.c: 93:         }
 21177  1E64  0008               	return
 21178  1E65                     __end_of_PWM3_LoadDutyValue:	
 21179                           
 21180                           	psect	text72
 21181  1E29                     __ptext72:	
 21182 ;; *************** function _PWM2_LoadDutyValue *****************
 21183 ;; Defined at:
 21184 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 21185 ;; Parameters:    Size  Location     Type
 21186 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 21187 ;; Auto vars:     Size  Location     Type
 21188 ;;		None
 21189 ;; Return value:  Size  Location     Type
 21190 ;;                  1    wreg      void 
 21191 ;; Registers used:
 21192 ;;		wreg, status,2
 21193 ;; Tracked objects:
 21194 ;;		On entry : 0/0
 21195 ;;		On exit  : 0/0
 21196 ;;		Unchanged: 0/0
 21197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21198 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21201 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21202 ;;Total ram usage:        2 bytes
 21203 ;; Hardware stack levels used:    1
 21204 ;; Hardware stack levels required when called:    4
 21205 ;; This function calls:
 21206 ;;		Nothing
 21207 ;; This function is called by:
 21208 ;;		_LED_setColor
 21209 ;; This function uses a non-reentrant model
 21210 ;;
 21211                           
 21212                           
 21213                           ;psect for function _PWM2_LoadDutyValue
 21214  1E29                     _PWM2_LoadDutyValue:	
 21215                           
 21216                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 127){
 21217                           
 21218                           ;incstack = 0
 21219                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 21220  1E29  3000               	movlw	0
 21221  1E2A  0141               	movlb	1	; select bank1
 21222  1E2B  0221               	subwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 21223  1E2C  3080               	movlw	128
 21224  1E2D  1903               	skipnz
 21225  1E2E  0220               	subwf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 21226  1E2F  1803               	skipnc
 21227  1E30  0008               	return
 21228                           
 21229                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 21230  1E31  30FF               	movlw	255
 21231  1E32  05A0               	andwf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 21232  1E33  3003               	movlw	3
 21233  1E34  05A1               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 21234                           
 21235                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 21236  1E35  0146               	movlb	6	; select bank6
 21237  1E36  1E12               	btfss	18,4	;volatile
 21238  1E37  2E3E               	goto	l11693
 21239                           
 21240                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 21241  1E38  3006               	movlw	6
 21242  1E39  0141               	movlb	1	; select bank1
 21243  1E3A                     u12415:	
 21244  1E3A  35A0               	lslf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 21245  1E3B  0DA1               	rlf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 21246  1E3C  0B89               	decfsz	9,f
 21247  1E3D  2E3A               	goto	u12415
 21248  1E3E                     l11693:	
 21249                           
 21250                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 21251  1E3E  0141               	movlb	1	; select bank1
 21252  1E3F  0821               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 21253  1E40  0146               	movlb	6	; select bank6
 21254  1E41  0091               	movwf	17	;volatile
 21255                           
 21256                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 21257  1E42  0141               	movlb	1	; select bank1
 21258  1E43  0820               	movf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 21259  1E44  0146               	movlb	6	; select bank6
 21260  1E45  0090               	movwf	16	;volatile
 21261                           
 21262                           ;mcc_generated_files/pwm2.c: 93:         }
 21263  1E46  0008               	return
 21264  1E47                     __end_of_PWM2_LoadDutyValue:	
 21265                           
 21266                           	psect	text73
 21267  1E0B                     __ptext73:	
 21268 ;; *************** function _PWM1_LoadDutyValue *****************
 21269 ;; Defined at:
 21270 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 21271 ;; Parameters:    Size  Location     Type
 21272 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 21273 ;; Auto vars:     Size  Location     Type
 21274 ;;		None
 21275 ;; Return value:  Size  Location     Type
 21276 ;;                  1    wreg      void 
 21277 ;; Registers used:
 21278 ;;		wreg, status,2
 21279 ;; Tracked objects:
 21280 ;;		On entry : 0/0
 21281 ;;		On exit  : 0/0
 21282 ;;		Unchanged: 0/0
 21283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21284 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21287 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21288 ;;Total ram usage:        2 bytes
 21289 ;; Hardware stack levels used:    1
 21290 ;; Hardware stack levels required when called:    4
 21291 ;; This function calls:
 21292 ;;		Nothing
 21293 ;; This function is called by:
 21294 ;;		_LED_setColor
 21295 ;; This function uses a non-reentrant model
 21296 ;;
 21297                           
 21298                           
 21299                           ;psect for function _PWM1_LoadDutyValue
 21300  1E0B                     _PWM1_LoadDutyValue:	
 21301                           
 21302                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 127){
 21303                           
 21304                           ;incstack = 0
 21305                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 21306  1E0B  3000               	movlw	0
 21307  1E0C  0141               	movlb	1	; select bank1
 21308  1E0D  0221               	subwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 21309  1E0E  3080               	movlw	128
 21310  1E0F  1903               	skipnz
 21311  1E10  0220               	subwf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 21312  1E11  1803               	skipnc
 21313  1E12  0008               	return
 21314                           
 21315                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 21316  1E13  30FF               	movlw	255
 21317  1E14  05A0               	andwf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 21318  1E15  3003               	movlw	3
 21319  1E16  05A1               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 21320                           
 21321                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 21322  1E17  0146               	movlb	6	; select bank6
 21323  1E18  1E0E               	btfss	14,4	;volatile
 21324  1E19  2E20               	goto	l11677
 21325                           
 21326                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 21327  1E1A  3006               	movlw	6
 21328  1E1B  0141               	movlb	1	; select bank1
 21329  1E1C                     u12385:	
 21330  1E1C  35A0               	lslf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 21331  1E1D  0DA1               	rlf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 21332  1E1E  0B89               	decfsz	9,f
 21333  1E1F  2E1C               	goto	u12385
 21334  1E20                     l11677:	
 21335                           
 21336                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 21337  1E20  0141               	movlb	1	; select bank1
 21338  1E21  0821               	movf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 21339  1E22  0146               	movlb	6	; select bank6
 21340  1E23  008D               	movwf	13	;volatile
 21341                           
 21342                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 21343  1E24  0141               	movlb	1	; select bank1
 21344  1E25  0820               	movf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 21345  1E26  0146               	movlb	6	; select bank6
 21346  1E27  008C               	movwf	12	;volatile
 21347                           
 21348                           ;mcc_generated_files/pwm1.c: 93:         }
 21349  1E28  0008               	return
 21350  1E29                     __end_of_PWM1_LoadDutyValue:	
 21351                           
 21352                           	psect	text74
 21353  1BF8                     __ptext74:	
 21354 ;; *************** function _BEAT_detected *****************
 21355 ;; Defined at:
 21356 ;;		line 49 in file "beat.c"
 21357 ;; Parameters:    Size  Location     Type
 21358 ;;		None
 21359 ;; Auto vars:     Size  Location     Type
 21360 ;;		None
 21361 ;; Return value:  Size  Location     Type
 21362 ;;                  1    wreg      _Bool 
 21363 ;; Registers used:
 21364 ;;		wreg, status,2, status,0
 21365 ;; Tracked objects:
 21366 ;;		On entry : 0/0
 21367 ;;		On exit  : 0/0
 21368 ;;		Unchanged: 0/0
 21369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21374 ;;Total ram usage:        0 bytes
 21375 ;; Hardware stack levels used:    1
 21376 ;; Hardware stack levels required when called:    4
 21377 ;; This function calls:
 21378 ;;		Nothing
 21379 ;; This function is called by:
 21380 ;;		_LED_task_BEAT_STROBE
 21381 ;; This function uses a non-reentrant model
 21382 ;;
 21383                           
 21384                           
 21385                           ;psect for function _BEAT_detected
 21386  1BF8                     _BEAT_detected:	
 21387                           
 21388                           ;beat.c: 50:     if (detected) {
 21389                           
 21390                           ;incstack = 0
 21391                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 21392  1BF8  0141               	movlb	1	; select bank1
 21393  1BF9  0856               	movf	_detected^(0+128),w
 21394  1BFA  1903               	btfsc	3,2
 21395  1BFB  2BFF               	goto	l9989
 21396                           
 21397                           ;beat.c: 51:         detected = 0;
 21398  1BFC  01D6               	clrf	_detected^(0+128)
 21399                           
 21400                           ;beat.c: 52:         return 1;
 21401  1BFD  3001               	movlw	1
 21402  1BFE  0008               	return
 21403  1BFF                     l9989:	
 21404                           
 21405                           ;beat.c: 55:     return 0;
 21406  1BFF  3000               	movlw	0
 21407  1C00  0008               	return
 21408  1C01                     __end_of_BEAT_detected:	
 21409                           
 21410                           	psect	text75
 21411  0801                     __ptext75:	
 21412 ;; *************** function _LED_task_BEAT_MIXED *****************
 21413 ;; Defined at:
 21414 ;;		line 216 in file "led.c"
 21415 ;; Parameters:    Size  Location     Type
 21416 ;;		None
 21417 ;; Auto vars:     Size  Location     Type
 21418 ;;		None
 21419 ;; Return value:  Size  Location     Type
 21420 ;;                  1    wreg      void 
 21421 ;; Registers used:
 21422 ;;		None
 21423 ;; Tracked objects:
 21424 ;;		On entry : 0/0
 21425 ;;		On exit  : 0/0
 21426 ;;		Unchanged: 0/0
 21427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21432 ;;Total ram usage:        0 bytes
 21433 ;; Hardware stack levels used:    1
 21434 ;; Hardware stack levels required when called:    4
 21435 ;; This function calls:
 21436 ;;		Nothing
 21437 ;; This function is called by:
 21438 ;;		_CONTROL_BEAT
 21439 ;;		_LED_task
 21440 ;; This function uses a non-reentrant model
 21441 ;;
 21442                           
 21443                           
 21444                           ;psect for function _LED_task_BEAT_MIXED
 21445  0801                     _LED_task_BEAT_MIXED:	
 21446                           
 21447                           ;incstack = 0
 21448                           ; Regs used in _LED_task_BEAT_MIXED: []
 21449  0801  0008               	return
 21450  0802                     __end_of_LED_task_BEAT_MIXED:	
 21451                           
 21452                           	psect	text76
 21453  0800                     __ptext76:	
 21454 ;; *************** function _LED_task_BEAT_FADE *****************
 21455 ;; Defined at:
 21456 ;;		line 204 in file "led.c"
 21457 ;; Parameters:    Size  Location     Type
 21458 ;;		None
 21459 ;; Auto vars:     Size  Location     Type
 21460 ;;		None
 21461 ;; Return value:  Size  Location     Type
 21462 ;;                  1    wreg      void 
 21463 ;; Registers used:
 21464 ;;		None
 21465 ;; Tracked objects:
 21466 ;;		On entry : 0/0
 21467 ;;		On exit  : 0/0
 21468 ;;		Unchanged: 0/0
 21469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21474 ;;Total ram usage:        0 bytes
 21475 ;; Hardware stack levels used:    1
 21476 ;; Hardware stack levels required when called:    4
 21477 ;; This function calls:
 21478 ;;		Nothing
 21479 ;; This function is called by:
 21480 ;;		_CONTROL_BEAT
 21481 ;;		_LED_task
 21482 ;; This function uses a non-reentrant model
 21483 ;;
 21484                           
 21485                           
 21486                           ;psect for function _LED_task_BEAT_FADE
 21487  0800                     _LED_task_BEAT_FADE:	
 21488                           
 21489                           ;incstack = 0
 21490                           ; Regs used in _LED_task_BEAT_FADE: []
 21491  0800  0008               	return
 21492  0801                     __end_of_LED_task_BEAT_FADE:	
 21493                           
 21494                           	psect	text77
 21495  1D0B                     __ptext77:	
 21496 ;; *************** function _BUTTONS_isClicked *****************
 21497 ;; Defined at:
 21498 ;;		line 97 in file "buttons.c"
 21499 ;; Parameters:    Size  Location     Type
 21500 ;;  button          1    wreg     PTR struct .
 21501 ;;		 -> buttons(32), NULL(0), 
 21502 ;; Auto vars:     Size  Location     Type
 21503 ;;  button          1    0[BANK0 ] PTR struct .
 21504 ;;		 -> buttons(32), NULL(0), 
 21505 ;; Return value:  Size  Location     Type
 21506 ;;                  1    wreg      _Bool 
 21507 ;; Registers used:
 21508 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21509 ;; Tracked objects:
 21510 ;;		On entry : 0/0
 21511 ;;		On exit  : 0/0
 21512 ;;		Unchanged: 0/0
 21513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21517 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21518 ;;Total ram usage:        1 bytes
 21519 ;; Hardware stack levels used:    1
 21520 ;; Hardware stack levels required when called:    4
 21521 ;; This function calls:
 21522 ;;		Nothing
 21523 ;; This function is called by:
 21524 ;;		_CONTROLLER_task
 21525 ;; This function uses a non-reentrant model
 21526 ;;
 21527                           
 21528                           
 21529                           ;psect for function _BUTTONS_isClicked
 21530  1D0B                     _BUTTONS_isClicked:	
 21531                           
 21532                           ;incstack = 0
 21533                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 21534                           ;BUTTONS_isClicked@button stored from wreg
 21535  1D0B  0140               	movlb	0	; select bank0
 21536  1D0C  00A0               	movwf	BUTTONS_isClicked@button
 21537                           
 21538                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 21539  1D0D  0820               	movf	BUTTONS_isClicked@button,w
 21540  1D0E  3E07               	addlw	7
 21541  1D0F  0086               	movwf	6
 21542  1D10  3003               	movlw	3	; select bank6/7
 21543  1D11  0087               	movwf	7
 21544  1D12  0301               	decf	1,w
 21545  1D13  1D03               	btfss	3,2
 21546  1D14  2D1D               	goto	l10387
 21547                           
 21548                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 21549  1D15  0820               	movf	BUTTONS_isClicked@button,w
 21550  1D16  3E07               	addlw	7
 21551  1D17  0086               	movwf	6
 21552  1D18  3003               	movlw	3	; select bank6/7
 21553  1D19  0087               	movwf	7
 21554  1D1A  0181               	clrf	1
 21555                           
 21556                           ;buttons.c: 100:         return 1;
 21557  1D1B  3001               	movlw	1
 21558  1D1C  0008               	return
 21559  1D1D                     l10387:	
 21560                           
 21561                           ;buttons.c: 103:     return 0;
 21562  1D1D  3000               	movlw	0
 21563  1D1E  0008               	return
 21564  1D1F                     __end_of_BUTTONS_isClicked:	
 21565                           
 21566                           	psect	text78
 21567  02D1                     __ptext78:	
 21568 ;; *************** function _CONTROLLER_init *****************
 21569 ;; Defined at:
 21570 ;;		line 81 in file "controller.c"
 21571 ;; Parameters:    Size  Location     Type
 21572 ;;		None
 21573 ;; Auto vars:     Size  Location     Type
 21574 ;;		None
 21575 ;; Return value:  Size  Location     Type
 21576 ;;                  1    wreg      void 
 21577 ;; Registers used:
 21578 ;;		wreg, status,2, status,0
 21579 ;; Tracked objects:
 21580 ;;		On entry : 0/0
 21581 ;;		On exit  : 0/0
 21582 ;;		Unchanged: 0/0
 21583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21586 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21587 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21588 ;;Total ram usage:        1 bytes
 21589 ;; Hardware stack levels used:    1
 21590 ;; Hardware stack levels required when called:    4
 21591 ;; This function calls:
 21592 ;;		Nothing
 21593 ;; This function is called by:
 21594 ;;		_main
 21595 ;; This function uses a non-reentrant model
 21596 ;;
 21597                           
 21598                           
 21599                           ;psect for function _CONTROLLER_init
 21600  02D1                     _CONTROLLER_init:	
 21601                           
 21602                           ;controller.c: 84:     dmx.nextItem = &beat;
 21603                           
 21604                           ;incstack = 0
 21605                           ; Regs used in _CONTROLLER_init: [wreg+status,2+status,0]
 21606  02D1  304E               	movlw	low _beat
 21607  02D2  0143               	movlb	3	; select bank3
 21608  02D3  00DA               	movwf	_dmx^(0+384)
 21609  02D4  3001               	movlw	high _beat
 21610  02D5  00DB               	movwf	(_dmx+1)^(0+384)
 21611                           
 21612                           ;controller.c: 85:     dmx.prevItem = &manual;
 21613  02D6  3044               	movlw	low _manual
 21614  02D7  00DC               	movwf	(low ((_dmx| (0+256)+2)))^(0+128)
 21615  02D8  3001               	movlw	high _manual
 21616  02D9  00DD               	movwf	((low ((_dmx| (0+256)+2))+1))^(0+128)
 21617                           
 21618                           ;controller.c: 86:     dmx.config = &dmx_task;
 21619  02DA  305A               	movlw	low _dmx_task
 21620  02DB  00DE               	movwf	(low ((_dmx| (0+256)+4)))^(0+128)
 21621  02DC  3002               	movlw	high _dmx_task
 21622  02DD  00DF               	movwf	((low ((_dmx| (0+256)+4))+1))^(0+128)
 21623                           
 21624                           ;controller.c: 88:     dmx.name = DMX;
 21625  02DE  01E1               	clrf	(_dmx^(0+384)+7)
 21626                           
 21627                           ;controller.c: 89:     dmx.parent = &dmx;
 21628  02DF  30DA               	movlw	(low (_dmx| (0+256)))& (0+255)
 21629  02E0  0140               	movlb	0	; select bank0
 21630  02E1  00A0               	movwf	??_CONTROLLER_init
 21631  02E2  0820               	movf	??_CONTROLLER_init,w
 21632  02E3  0143               	movlb	3	; select bank3
 21633  02E4  00E0               	movwf	(low ((_dmx| (0+256)+6)))^(0+128)
 21634                           
 21635                           ;controller.c: 91:     beat.nextItem = &animation;
 21636  02E5  30D0               	movlw	low _animation
 21637  02E6  0142               	movlb	2	; select bank2
 21638  02E7  00CE               	movwf	_beat^(0+256)
 21639  02E8  3001               	movlw	high _animation
 21640  02E9  00CF               	movwf	(_beat+1)^(0+256)
 21641                           
 21642                           ;controller.c: 92:     beat.prevItem = &dmx;
 21643  02EA  30DA               	movlw	low _dmx
 21644  02EB  00D0               	movwf	(low ((_beat| (0+256)+2)))^0
 21645  02EC  3001               	movlw	high _dmx
 21646  02ED  00D1               	movwf	((low ((_beat| (0+256)+2))+1))^0
 21647                           
 21648                           ;controller.c: 93:     beat.config = &beatStrobe;
 21649  02EE  30C6               	movlw	low _beatStrobe
 21650  02EF  00D2               	movwf	(low ((_beat| (0+256)+4)))^0
 21651  02F0  3001               	movlw	high _beatStrobe
 21652  02F1  00D3               	movwf	((low ((_beat| (0+256)+4))+1))^0
 21653                           
 21654                           ;controller.c: 95:     beat.name = BEAT;
 21655  02F2  01D5               	clrf	(_beat^(0+256)+7)
 21656  02F3  0AD5               	incf	(_beat^(0+256)+7),f
 21657                           
 21658                           ;controller.c: 96:     beat.parent = &beat;
 21659  02F4  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21660  02F5  0140               	movlb	0	; select bank0
 21661  02F6  00A0               	movwf	??_CONTROLLER_init
 21662  02F7  0820               	movf	??_CONTROLLER_init,w
 21663  02F8  0142               	movlb	2	; select bank2
 21664  02F9  00D4               	movwf	(low ((_beat| (0+256)+6)))^0
 21665                           
 21666                           ;controller.c: 98:     animation.nextItem = &manual;
 21667  02FA  3044               	movlw	low _manual
 21668  02FB  0143               	movlb	3	; select bank3
 21669  02FC  00D0               	movwf	_animation^(0+384)
 21670  02FD  3001               	movlw	high _manual
 21671  02FE  00D1               	movwf	(_animation+1)^(0+384)
 21672                           
 21673                           ;controller.c: 99:     animation.prevItem = &beat;
 21674  02FF  304E               	movlw	low _beat
 21675  0300  00D2               	movwf	(low ((_animation| (0+256)+2)))^(0+128)
 21676  0301  3001               	movlw	high _beat
 21677  0302  00D3               	movwf	((low ((_animation| (0+256)+2))+1))^(0+128)
 21678                           
 21679                           ;controller.c: 100:     animation.config = &animationBrightnessCtrl;
 21680  0303  30B2               	movlw	low _animationBrightnessCtrl
 21681  0304  00D4               	movwf	(low ((_animation| (0+256)+4)))^(0+128)
 21682  0305  3001               	movlw	high _animationBrightnessCtrl
 21683  0306  00D5               	movwf	((low ((_animation| (0+256)+4))+1))^(0+128)
 21684                           
 21685                           ;controller.c: 102:     animation.name = ANIMATION;
 21686  0307  3002               	movlw	2
 21687  0308  0140               	movlb	0	; select bank0
 21688  0309  00A0               	movwf	??_CONTROLLER_init
 21689  030A  0820               	movf	??_CONTROLLER_init,w
 21690  030B  0143               	movlb	3	; select bank3
 21691  030C  00D7               	movwf	(_animation^(0+384)+7)
 21692                           
 21693                           ;controller.c: 103:     animation.parent = &animation;
 21694  030D  30D0               	movlw	(low (_animation| (0+256)))& (0+255)
 21695  030E  0140               	movlb	0	; select bank0
 21696  030F  00A0               	movwf	??_CONTROLLER_init
 21697  0310  0820               	movf	??_CONTROLLER_init,w
 21698  0311  0143               	movlb	3	; select bank3
 21699  0312  00D6               	movwf	(low ((_animation| (0+256)+6)))^(0+128)
 21700                           
 21701                           ;controller.c: 105:     manual.nextItem = &dmx;
 21702  0313  30DA               	movlw	low _dmx
 21703  0314  0142               	movlb	2	; select bank2
 21704  0315  00C4               	movwf	_manual^(0+256)
 21705  0316  3001               	movlw	high _dmx
 21706  0317  00C5               	movwf	(_manual+1)^(0+256)
 21707                           
 21708                           ;controller.c: 106:     manual.prevItem = &animation;
 21709  0318  30D0               	movlw	low _animation
 21710  0319  00C6               	movwf	(low ((_manual| (0+256)+2)))^0
 21711  031A  3001               	movlw	high _animation
 21712  031B  00C7               	movwf	((low ((_manual| (0+256)+2))+1))^0
 21713                           
 21714                           ;controller.c: 107:     manual.config = &manualRed;
 21715  031C  30A8               	movlw	low _manualRed
 21716  031D  00C8               	movwf	(low ((_manual| (0+256)+4)))^0
 21717  031E  3001               	movlw	high _manualRed
 21718  031F  00C9               	movwf	((low ((_manual| (0+256)+4))+1))^0
 21719                           
 21720                           ;controller.c: 109:     manual.name = MANUAL;
 21721  0320  3003               	movlw	3
 21722  0321  0140               	movlb	0	; select bank0
 21723  0322  00A0               	movwf	??_CONTROLLER_init
 21724  0323  0820               	movf	??_CONTROLLER_init,w
 21725  0324  0142               	movlb	2	; select bank2
 21726  0325  00CB               	movwf	(_manual^(0+256)+7)
 21727                           
 21728                           ;controller.c: 110:     manual.parent = &manual;
 21729  0326  3044               	movlw	(low (_manual| (0+256)))& (0+255)
 21730  0327  0140               	movlb	0	; select bank0
 21731  0328  00A0               	movwf	??_CONTROLLER_init
 21732  0329  0820               	movf	??_CONTROLLER_init,w
 21733  032A  0142               	movlb	2	; select bank2
 21734  032B  00CA               	movwf	(low ((_manual| (0+256)+6)))^0
 21735                           
 21736                           ;controller.c: 115:     dmx_task.nextItem = ((void*)0);
 21737  032C  0144               	movlb	4	; select bank4
 21738  032D  01DA               	clrf	_dmx_task^(0+512)
 21739  032E  01DB               	clrf	(_dmx_task+1)^(0+512)
 21740                           
 21741                           ;controller.c: 116:     dmx_task.prevItem = ((void*)0);
 21742  032F  01DC               	clrf	(low ((_dmx_task| (0+512)+2)))^0
 21743  0330  01DD               	clrf	((low ((_dmx_task| (0+512)+2))+1))^0
 21744                           
 21745                           ;controller.c: 117:     dmx_task.config = ((void*)0);
 21746  0331  01DE               	clrf	(low ((_dmx_task| (0+512)+4)))^0
 21747  0332  01DF               	clrf	((low ((_dmx_task| (0+512)+4))+1))^0
 21748                           
 21749                           ;controller.c: 118:     dmx_task.task = CONTROL_DMX;
 21750  0333  3049               	movlw	low _CONTROL_DMX
 21751  0334  00E2               	movwf	(low ((_dmx_task| (0+512)+8)))^0
 21752  0335  3017               	movlw	high _CONTROL_DMX
 21753  0336  00E3               	movwf	((low ((_dmx_task| (0+512)+8)))^0+1)
 21754                           
 21755                           ;controller.c: 119:     dmx_task.name = DMX_TASK;
 21756  0337  3004               	movlw	4
 21757  0338  0140               	movlb	0	; select bank0
 21758  0339  00A0               	movwf	??_CONTROLLER_init
 21759  033A  0820               	movf	??_CONTROLLER_init,w
 21760  033B  0144               	movlb	4	; select bank4
 21761  033C  00E1               	movwf	(_dmx_task^(0+512)+7)
 21762                           
 21763                           ;controller.c: 120:     dmx_task.parent = &dmx;
 21764  033D  30DA               	movlw	(low (_dmx| (0+256)))& (0+255)
 21765  033E  0140               	movlb	0	; select bank0
 21766  033F  00A0               	movwf	??_CONTROLLER_init
 21767  0340  0820               	movf	??_CONTROLLER_init,w
 21768  0341  0144               	movlb	4	; select bank4
 21769  0342  00E0               	movwf	(low ((_dmx_task| (0+512)+6)))^0
 21770                           
 21771                           ;controller.c: 123:     beatStrobe.nextItem = &beatFade;
 21772  0343  3050               	movlw	low _beatFade
 21773  0344  0143               	movlb	3	; select bank3
 21774  0345  00C6               	movwf	_beatStrobe^(0+384)
 21775  0346  3002               	movlw	high _beatFade
 21776  0347  00C7               	movwf	(_beatStrobe+1)^(0+384)
 21777                           
 21778                           ;controller.c: 124:     beatStrobe.prevItem = &beatMixed;
 21779  0348  303C               	movlw	low _beatMixed
 21780  0349  00C8               	movwf	(low ((_beatStrobe| (0+256)+2)))^(0+128)
 21781  034A  3002               	movlw	high _beatMixed
 21782  034B  00C9               	movwf	((low ((_beatStrobe| (0+256)+2))+1))^(0+128)
 21783                           
 21784                           ;controller.c: 125:     beatStrobe.config = &beatStrobeTask;
 21785  034C  3032               	movlw	low _beatStrobeTask
 21786  034D  00CA               	movwf	(low ((_beatStrobe| (0+256)+4)))^(0+128)
 21787  034E  3002               	movlw	high _beatStrobeTask
 21788  034F  00CB               	movwf	((low ((_beatStrobe| (0+256)+4))+1))^(0+128)
 21789                           
 21790                           ;controller.c: 127:     beatStrobe.name = B_STROBE;
 21791  0350  3005               	movlw	5
 21792  0351  0140               	movlb	0	; select bank0
 21793  0352  00A0               	movwf	??_CONTROLLER_init
 21794  0353  0820               	movf	??_CONTROLLER_init,w
 21795  0354  0143               	movlb	3	; select bank3
 21796  0355  00CD               	movwf	(_beatStrobe^(0+384)+7)
 21797                           
 21798                           ;controller.c: 128:     beatStrobe.parent = &beat;
 21799  0356  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21800  0357  0140               	movlb	0	; select bank0
 21801  0358  00A0               	movwf	??_CONTROLLER_init
 21802  0359  0820               	movf	??_CONTROLLER_init,w
 21803  035A  0143               	movlb	3	; select bank3
 21804  035B  00CC               	movwf	(low ((_beatStrobe| (0+256)+6)))^(0+128)
 21805                           
 21806                           ;controller.c: 130:     beatFade.nextItem = &beatCont;
 21807  035C  3046               	movlw	low _beatCont
 21808  035D  0144               	movlb	4	; select bank4
 21809  035E  00D0               	movwf	_beatFade^(0+512)
 21810  035F  3002               	movlw	high _beatCont
 21811  0360  00D1               	movwf	(_beatFade+1)^(0+512)
 21812                           
 21813                           ;controller.c: 131:     beatFade.prevItem = &beatStrobe;
 21814  0361  30C6               	movlw	low _beatStrobe
 21815  0362  00D2               	movwf	(low ((_beatFade| (0+512)+2)))^0
 21816  0363  3001               	movlw	high _beatStrobe
 21817  0364  00D3               	movwf	((low ((_beatFade| (0+512)+2))+1))^0
 21818                           
 21819                           ;controller.c: 132:     beatFade.config = &beatFadeTask;
 21820  0365  3028               	movlw	low _beatFadeTask
 21821  0366  00D4               	movwf	(low ((_beatFade| (0+512)+4)))^0
 21822  0367  3002               	movlw	high _beatFadeTask
 21823  0368  00D5               	movwf	((low ((_beatFade| (0+512)+4))+1))^0
 21824                           
 21825                           ;controller.c: 134:     beatFade.name = B_FADE;
 21826  0369  3006               	movlw	6
 21827  036A  0140               	movlb	0	; select bank0
 21828  036B  00A0               	movwf	??_CONTROLLER_init
 21829  036C  0820               	movf	??_CONTROLLER_init,w
 21830  036D  0144               	movlb	4	; select bank4
 21831  036E  00D7               	movwf	(_beatFade^(0+512)+7)
 21832                           
 21833                           ;controller.c: 135:     beatFade.parent = &beat;
 21834  036F  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21835  0370  0140               	movlb	0	; select bank0
 21836  0371  00A0               	movwf	??_CONTROLLER_init
 21837  0372  0820               	movf	??_CONTROLLER_init,w
 21838  0373  0144               	movlb	4	; select bank4
 21839  0374  00D6               	movwf	(low ((_beatFade| (0+512)+6)))^0
 21840                           
 21841                           ;controller.c: 137:     beatCont.nextItem = &beatMixed;
 21842  0375  303C               	movlw	low _beatMixed
 21843  0376  00C6               	movwf	_beatCont^(0+512)
 21844  0377  3002               	movlw	high _beatMixed
 21845  0378  00C7               	movwf	(_beatCont+1)^(0+512)
 21846                           
 21847                           ;controller.c: 138:     beatCont.prevItem = &beatFade;
 21848  0379  3050               	movlw	low _beatFade
 21849  037A  00C8               	movwf	(low ((_beatCont| (0+512)+2)))^0
 21850  037B  3002               	movlw	high _beatFade
 21851  037C  00C9               	movwf	((low ((_beatCont| (0+512)+2))+1))^0
 21852                           
 21853                           ;controller.c: 139:     beatCont.config = &beatContTask;
 21854  037D  30C8               	movlw	low _beatContTask
 21855  037E  00CA               	movwf	(low ((_beatCont| (0+512)+4)))^0
 21856  037F  3002               	movlw	high _beatContTask
 21857  0380  00CB               	movwf	((low ((_beatCont| (0+512)+4))+1))^0
 21858                           
 21859                           ;controller.c: 141:     beatCont.name = B_CONT;
 21860  0381  3007               	movlw	7
 21861  0382  0140               	movlb	0	; select bank0
 21862  0383  00A0               	movwf	??_CONTROLLER_init
 21863  0384  0820               	movf	??_CONTROLLER_init,w
 21864  0385  0144               	movlb	4	; select bank4
 21865  0386  00CD               	movwf	(_beatCont^(0+512)+7)
 21866                           
 21867                           ;controller.c: 142:     beatCont.parent = &beat;
 21868  0387  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21869  0388  0140               	movlb	0	; select bank0
 21870  0389  00A0               	movwf	??_CONTROLLER_init
 21871  038A  0820               	movf	??_CONTROLLER_init,w
 21872  038B  0144               	movlb	4	; select bank4
 21873  038C  00CC               	movwf	(low ((_beatCont| (0+512)+6)))^0
 21874                           
 21875                           ;controller.c: 144:     beatMixed.nextItem = &beatStrobe;
 21876  038D  30C6               	movlw	low _beatStrobe
 21877  038E  00BC               	movwf	_beatMixed^(0+512)
 21878  038F  3001               	movlw	high _beatStrobe
 21879  0390  00BD               	movwf	(_beatMixed+1)^(0+512)
 21880                           
 21881                           ;controller.c: 145:     beatMixed.prevItem = &beatCont;
 21882  0391  3046               	movlw	low _beatCont
 21883  0392  00BE               	movwf	(low ((_beatMixed| (0+512)+2)))^0
 21884  0393  3002               	movlw	high _beatCont
 21885  0394  00BF               	movwf	((low ((_beatMixed| (0+512)+2))+1))^0
 21886                           
 21887                           ;controller.c: 146:     beatMixed.config = &beatMixedTask;
 21888  0395  30BE               	movlw	low _beatMixedTask
 21889  0396  00C0               	movwf	(low ((_beatMixed| (0+512)+4)))^0
 21890  0397  3002               	movlw	high _beatMixedTask
 21891  0398  00C1               	movwf	((low ((_beatMixed| (0+512)+4))+1))^0
 21892                           
 21893                           ;controller.c: 148:     beatMixed.name = B_MIXED;
 21894  0399  3008               	movlw	8
 21895  039A  0140               	movlb	0	; select bank0
 21896  039B  00A0               	movwf	??_CONTROLLER_init
 21897  039C  0820               	movf	??_CONTROLLER_init,w
 21898  039D  0144               	movlb	4	; select bank4
 21899  039E  00C3               	movwf	(_beatMixed^(0+512)+7)
 21900                           
 21901                           ;controller.c: 149:     beatMixed.parent = &beat;
 21902  039F  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21903  03A0  0140               	movlb	0	; select bank0
 21904  03A1  00A0               	movwf	??_CONTROLLER_init
 21905  03A2  0820               	movf	??_CONTROLLER_init,w
 21906  03A3  0144               	movlb	4	; select bank4
 21907  03A4  00C2               	movwf	(low ((_beatMixed| (0+512)+6)))^0
 21908                           
 21909                           ;controller.c: 153:     animationType.nextItem = &animationBrightnessCtrl;
 21910  03A5  30B2               	movlw	low _animationBrightnessCtrl
 21911  03A6  0143               	movlb	3	; select bank3
 21912  03A7  00BC               	movwf	_animationType^(0+384)
 21913  03A8  3001               	movlw	high _animationBrightnessCtrl
 21914  03A9  00BD               	movwf	(_animationType+1)^(0+384)
 21915                           
 21916                           ;controller.c: 154:     animationType.prevItem = &animationBrightnessCtrl;
 21917  03AA  30B2               	movlw	low _animationBrightnessCtrl
 21918  03AB  00BE               	movwf	(low ((_animationType| (0+256)+2)))^(0+128)
 21919  03AC  3001               	movlw	high _animationBrightnessCtrl
 21920  03AD  00BF               	movwf	((low ((_animationType| (0+256)+2))+1))^(0+128)
 21921                           
 21922                           ;controller.c: 155:     animationType.config = ((void*)0);
 21923  03AE  01C0               	clrf	(low ((_animationType| (0+256)+4)))^(0+128)
 21924  03AF  01C1               	clrf	((low ((_animationType| (0+256)+4))+1))^(0+128)
 21925                           
 21926                           ;controller.c: 156:     animationType.task = LED_task_ANIMATION;
 21927  03B0  3002               	movlw	low _LED_task_ANIMATION
 21928  03B1  00C4               	movwf	(low ((_animationType| (0+256)+8)))^(0+128)
 21929  03B2  3000               	movlw	high _LED_task_ANIMATION
 21930  03B3  00C5               	movwf	((low ((_animationType| (0+256)+8)))^(0+128)+1)
 21931                           
 21932                           ;controller.c: 157:     animationType.name = A_SELECTION;
 21933  03B4  3012               	movlw	18
 21934  03B5  0140               	movlb	0	; select bank0
 21935  03B6  00A0               	movwf	??_CONTROLLER_init
 21936  03B7  0820               	movf	??_CONTROLLER_init,w
 21937  03B8  0143               	movlb	3	; select bank3
 21938  03B9  00C3               	movwf	(_animationType^(0+384)+7)
 21939                           
 21940                           ;controller.c: 158:     animationType.parent = &animation;
 21941  03BA  30D0               	movlw	(low (_animation| (0+256)))& (0+255)
 21942  03BB  0140               	movlb	0	; select bank0
 21943  03BC  00A0               	movwf	??_CONTROLLER_init
 21944  03BD  0820               	movf	??_CONTROLLER_init,w
 21945  03BE  0143               	movlb	3	; select bank3
 21946  03BF  00C2               	movwf	(low ((_animationType| (0+256)+6)))^(0+128)
 21947                           
 21948                           ;controller.c: 160:     animationBrightnessCtrl.nextItem = &animationType;
 21949  03C0  30BC               	movlw	low _animationType
 21950  03C1  00B2               	movwf	_animationBrightnessCtrl^(0+384)
 21951  03C2  3001               	movlw	high _animationType
 21952  03C3  00B3               	movwf	(_animationBrightnessCtrl+1)^(0+384)
 21953                           
 21954                           ;controller.c: 161:     animationBrightnessCtrl.prevItem = &animationType;
 21955  03C4  30BC               	movlw	low _animationType
 21956  03C5  00B4               	movwf	(low ((_animationBrightnessCtrl| (0+256)+2)))^(0+128)
 21957  03C6  3001               	movlw	high _animationType
 21958  03C7  00B5               	movwf	((low ((_animationBrightnessCtrl| (0+256)+2))+1))^(0+128)
 21959                           
 21960                           ;controller.c: 162:     animationBrightnessCtrl.config = ((void*)0);
 21961  03C8  01B6               	clrf	(low ((_animationBrightnessCtrl| (0+256)+4)))^(0+128)
 21962  03C9  01B7               	clrf	((low ((_animationBrightnessCtrl| (0+256)+4))+1))^(0+128)
 21963                           
 21964                           ;controller.c: 163:     animationBrightnessCtrl.task = LED_task_ANIMATION;
 21965  03CA  3002               	movlw	low _LED_task_ANIMATION
 21966  03CB  00BA               	movwf	(low ((_animationBrightnessCtrl| (0+256)+8)))^(0+128)
 21967  03CC  3000               	movlw	high _LED_task_ANIMATION
 21968  03CD  00BB               	movwf	((low ((_animationBrightnessCtrl| (0+256)+8)))^(0+128)+1)
 21969                           
 21970                           ;controller.c: 164:     animationBrightnessCtrl.name = A_BRIGHTNESS;
 21971  03CE  3011               	movlw	17
 21972  03CF  0140               	movlb	0	; select bank0
 21973  03D0  00A0               	movwf	??_CONTROLLER_init
 21974  03D1  0820               	movf	??_CONTROLLER_init,w
 21975  03D2  0143               	movlb	3	; select bank3
 21976  03D3  00B9               	movwf	(_animationBrightnessCtrl^(0+384)+7)
 21977                           
 21978                           ;controller.c: 165:     animationBrightnessCtrl.parent = &animation;
 21979  03D4  30D0               	movlw	(low (_animation| (0+256)))& (0+255)
 21980  03D5  0140               	movlb	0	; select bank0
 21981  03D6  00A0               	movwf	??_CONTROLLER_init
 21982  03D7  0820               	movf	??_CONTROLLER_init,w
 21983  03D8  0143               	movlb	3	; select bank3
 21984  03D9  00B8               	movwf	(low ((_animationBrightnessCtrl| (0+256)+6)))^(0+128)
 21985                           
 21986                           ;controller.c: 169:     manualRed.nextItem = ((void*)0);
 21987  03DA  01A8               	clrf	_manualRed^(0+384)
 21988  03DB  01A9               	clrf	(_manualRed+1)^(0+384)
 21989                           
 21990                           ;controller.c: 170:     manualRed.prevItem = ((void*)0);
 21991  03DC  01AA               	clrf	(low ((_manualRed| (0+256)+2)))^(0+128)
 21992  03DD  01AB               	clrf	((low ((_manualRed| (0+256)+2))+1))^(0+128)
 21993                           
 21994                           ;controller.c: 171:     manualRed.config = &manualGreen;
 21995  03DE  30B4               	movlw	low _manualGreen
 21996  03DF  00AC               	movwf	(low ((_manualRed| (0+256)+4)))^(0+128)
 21997  03E0  3002               	movlw	high _manualGreen
 21998  03E1  00AD               	movwf	((low ((_manualRed| (0+256)+4))+1))^(0+128)
 21999                           
 22000                           ;controller.c: 172:     manualRed.task = CONTROL_MANUAL;
 22001  03E2  30A4               	movlw	low _CONTROL_MANUAL
 22002  03E3  00B0               	movwf	(low ((_manualRed| (0+256)+8)))^(0+128)
 22003  03E4  300D               	movlw	high _CONTROL_MANUAL
 22004  03E5  00B1               	movwf	((low ((_manualRed| (0+256)+8)))^(0+128)+1)
 22005                           
 22006                           ;controller.c: 173:     manualRed.name = MANUAL_RED;
 22007  03E6  300D               	movlw	13
 22008  03E7  0140               	movlb	0	; select bank0
 22009  03E8  00A0               	movwf	??_CONTROLLER_init
 22010  03E9  0820               	movf	??_CONTROLLER_init,w
 22011  03EA  0143               	movlb	3	; select bank3
 22012  03EB  00AF               	movwf	(_manualRed^(0+384)+7)
 22013                           
 22014                           ;controller.c: 174:     manualRed.parent = &manual;
 22015  03EC  3044               	movlw	(low (_manual| (0+256)))& (0+255)
 22016  03ED  0140               	movlb	0	; select bank0
 22017  03EE  00A0               	movwf	??_CONTROLLER_init
 22018  03EF  0820               	movf	??_CONTROLLER_init,w
 22019  03F0  0143               	movlb	3	; select bank3
 22020  03F1  00AE               	movwf	(low ((_manualRed| (0+256)+6)))^(0+128)
 22021                           
 22022                           ;controller.c: 176:     manualGreen.nextItem = ((void*)0);
 22023  03F2  0145               	movlb	5	; select bank5
 22024  03F3  01B4               	clrf	_manualGreen^(0+640)
 22025  03F4  01B5               	clrf	(_manualGreen+1)^(0+640)
 22026                           
 22027                           ;controller.c: 177:     manualGreen.prevItem = ((void*)0);
 22028  03F5  01B6               	clrf	(low ((_manualGreen| (0+512)+2)))^(0+128)
 22029  03F6  01B7               	clrf	((low ((_manualGreen| (0+512)+2))+1))^(0+128)
 22030                           
 22031                           ;controller.c: 178:     manualGreen.config = &manualBlue;
 22032  03F7  30AA               	movlw	low _manualBlue
 22033  03F8  00B8               	movwf	(low ((_manualGreen| (0+512)+4)))^(0+128)
 22034  03F9  3002               	movlw	high _manualBlue
 22035  03FA  00B9               	movwf	((low ((_manualGreen| (0+512)+4))+1))^(0+128)
 22036                           
 22037                           ;controller.c: 179:     manualGreen.task = CONTROL_MANUAL;
 22038  03FB  30A4               	movlw	low _CONTROL_MANUAL
 22039  03FC  00BC               	movwf	(low ((_manualGreen| (0+512)+8)))^(0+128)
 22040  03FD  300D               	movlw	high _CONTROL_MANUAL
 22041  03FE  00BD               	movwf	((low ((_manualGreen| (0+512)+8)))^(0+128)+1)
 22042                           
 22043                           ;controller.c: 180:     manualGreen.name = MANUAL_GREEN;
 22044  03FF  300E               	movlw	14
 22045  0400  0140               	movlb	0	; select bank0
 22046  0401  00A0               	movwf	??_CONTROLLER_init
 22047  0402  0820               	movf	??_CONTROLLER_init,w
 22048  0403  0145               	movlb	5	; select bank5
 22049  0404  00BB               	movwf	(_manualGreen^(0+640)+7)
 22050                           
 22051                           ;controller.c: 181:     manualGreen.parent = &manual;
 22052  0405  3044               	movlw	(low (_manual| (0+256)))& (0+255)
 22053  0406  0140               	movlb	0	; select bank0
 22054  0407  00A0               	movwf	??_CONTROLLER_init
 22055  0408  0820               	movf	??_CONTROLLER_init,w
 22056  0409  0145               	movlb	5	; select bank5
 22057  040A  00BA               	movwf	(low ((_manualGreen| (0+512)+6)))^(0+128)
 22058                           
 22059                           ;controller.c: 183:     manualBlue.nextItem = ((void*)0);
 22060  040B  01AA               	clrf	_manualBlue^(0+640)
 22061  040C  01AB               	clrf	(_manualBlue+1)^(0+640)
 22062                           
 22063                           ;controller.c: 184:     manualBlue.prevItem = ((void*)0);
 22064  040D  01AC               	clrf	(low ((_manualBlue| (0+512)+2)))^(0+128)
 22065  040E  01AD               	clrf	((low ((_manualBlue| (0+512)+2))+1))^(0+128)
 22066                           
 22067                           ;controller.c: 185:     manualBlue.config = &manualWhite;
 22068  040F  30A0               	movlw	low _manualWhite
 22069  0410  00AE               	movwf	(low ((_manualBlue| (0+512)+4)))^(0+128)
 22070  0411  3002               	movlw	high _manualWhite
 22071  0412  00AF               	movwf	((low ((_manualBlue| (0+512)+4))+1))^(0+128)
 22072                           
 22073                           ;controller.c: 186:     manualBlue.task = CONTROL_MANUAL;
 22074  0413  30A4               	movlw	low _CONTROL_MANUAL
 22075  0414  00B2               	movwf	(low ((_manualBlue| (0+512)+8)))^(0+128)
 22076  0415  300D               	movlw	high _CONTROL_MANUAL
 22077  0416  00B3               	movwf	((low ((_manualBlue| (0+512)+8)))^(0+128)+1)
 22078                           
 22079                           ;controller.c: 187:     manualBlue.name = MANUAL_BLUE;
 22080  0417  300F               	movlw	15
 22081  0418  0140               	movlb	0	; select bank0
 22082  0419  00A0               	movwf	??_CONTROLLER_init
 22083  041A  0820               	movf	??_CONTROLLER_init,w
 22084  041B  0145               	movlb	5	; select bank5
 22085  041C  00B1               	movwf	(_manualBlue^(0+640)+7)
 22086                           
 22087                           ;controller.c: 188:     manualBlue.parent = &manual;
 22088  041D  3044               	movlw	(low (_manual| (0+256)))& (0+255)
 22089  041E  0140               	movlb	0	; select bank0
 22090  041F  00A0               	movwf	??_CONTROLLER_init
 22091  0420  0820               	movf	??_CONTROLLER_init,w
 22092  0421  0145               	movlb	5	; select bank5
 22093  0422  00B0               	movwf	(low ((_manualBlue| (0+512)+6)))^(0+128)
 22094                           
 22095                           ;controller.c: 190:     manualWhite.nextItem = ((void*)0);
 22096  0423  01A0               	clrf	_manualWhite^(0+640)
 22097  0424  01A1               	clrf	(_manualWhite+1)^(0+640)
 22098                           
 22099                           ;controller.c: 191:     manualWhite.prevItem = ((void*)0);
 22100  0425  01A2               	clrf	(low ((_manualWhite| (0+512)+2)))^(0+128)
 22101  0426  01A3               	clrf	((low ((_manualWhite| (0+512)+2))+1))^(0+128)
 22102                           
 22103                           ;controller.c: 192:     manualWhite.config = &manualRed;
 22104  0427  30A8               	movlw	low _manualRed
 22105  0428  00A4               	movwf	(low ((_manualWhite| (0+512)+4)))^(0+128)
 22106  0429  3001               	movlw	high _manualRed
 22107  042A  00A5               	movwf	((low ((_manualWhite| (0+512)+4))+1))^(0+128)
 22108                           
 22109                           ;controller.c: 193:     manualWhite.task = CONTROL_MANUAL;
 22110  042B  30A4               	movlw	low _CONTROL_MANUAL
 22111  042C  00A8               	movwf	(low ((_manualWhite| (0+512)+8)))^(0+128)
 22112  042D  300D               	movlw	high _CONTROL_MANUAL
 22113  042E  00A9               	movwf	((low ((_manualWhite| (0+512)+8)))^(0+128)+1)
 22114                           
 22115                           ;controller.c: 194:     manualWhite.name = MANUAL_WHITE;
 22116  042F  3010               	movlw	16
 22117  0430  0140               	movlb	0	; select bank0
 22118  0431  00A0               	movwf	??_CONTROLLER_init
 22119  0432  0820               	movf	??_CONTROLLER_init,w
 22120  0433  0145               	movlb	5	; select bank5
 22121  0434  00A7               	movwf	(_manualWhite^(0+640)+7)
 22122                           
 22123                           ;controller.c: 195:     manualWhite.parent = &manual;
 22124  0435  3044               	movlw	(low (_manual| (0+256)))& (0+255)
 22125  0436  0140               	movlb	0	; select bank0
 22126  0437  00A0               	movwf	??_CONTROLLER_init
 22127  0438  0820               	movf	??_CONTROLLER_init,w
 22128  0439  0145               	movlb	5	; select bank5
 22129  043A  00A6               	movwf	(low ((_manualWhite| (0+512)+6)))^(0+128)
 22130                           
 22131                           ;controller.c: 198:     beatStrobeTask.nextItem = ((void*)0);
 22132  043B  0144               	movlb	4	; select bank4
 22133  043C  01B2               	clrf	_beatStrobeTask^(0+512)
 22134  043D  01B3               	clrf	(_beatStrobeTask+1)^(0+512)
 22135                           
 22136                           ;controller.c: 199:     beatStrobeTask.prevItem = ((void*)0);
 22137  043E  01B4               	clrf	(low ((_beatStrobeTask| (0+512)+2)))^0
 22138  043F  01B5               	clrf	((low ((_beatStrobeTask| (0+512)+2))+1))^0
 22139                           
 22140                           ;controller.c: 200:     beatStrobeTask.config = ((void*)0);
 22141  0440  01B6               	clrf	(low ((_beatStrobeTask| (0+512)+4)))^0
 22142  0441  01B7               	clrf	((low ((_beatStrobeTask| (0+512)+4))+1))^0
 22143                           
 22144                           ;controller.c: 201:     beatStrobeTask.task = CONTROL_BEAT;
 22145  0442  30BF               	movlw	low _CONTROL_BEAT
 22146  0443  00BA               	movwf	(low ((_beatStrobeTask| (0+512)+8)))^0
 22147  0444  3013               	movlw	high _CONTROL_BEAT
 22148  0445  00BB               	movwf	((low ((_beatStrobeTask| (0+512)+8)))^0+1)
 22149                           
 22150                           ;controller.c: 202:     beatStrobeTask.name = B_STROBE_TASK;
 22151  0446  3009               	movlw	9
 22152  0447  0140               	movlb	0	; select bank0
 22153  0448  00A0               	movwf	??_CONTROLLER_init
 22154  0449  0820               	movf	??_CONTROLLER_init,w
 22155  044A  0144               	movlb	4	; select bank4
 22156  044B  00B9               	movwf	(_beatStrobeTask^(0+512)+7)
 22157                           
 22158                           ;controller.c: 203:     beatStrobeTask.parent = &beat;
 22159  044C  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 22160  044D  0140               	movlb	0	; select bank0
 22161  044E  00A0               	movwf	??_CONTROLLER_init
 22162  044F  0820               	movf	??_CONTROLLER_init,w
 22163  0450  0144               	movlb	4	; select bank4
 22164  0451  00B8               	movwf	(low ((_beatStrobeTask| (0+512)+6)))^0
 22165                           
 22166                           ;controller.c: 205:     beatFadeTask.nextItem = ((void*)0);
 22167  0452  01A8               	clrf	_beatFadeTask^(0+512)
 22168  0453  01A9               	clrf	(_beatFadeTask+1)^(0+512)
 22169                           
 22170                           ;controller.c: 206:     beatFadeTask.prevItem = ((void*)0);
 22171  0454  01AA               	clrf	(low ((_beatFadeTask| (0+512)+2)))^0
 22172  0455  01AB               	clrf	((low ((_beatFadeTask| (0+512)+2))+1))^0
 22173                           
 22174                           ;controller.c: 207:     beatFadeTask.config = ((void*)0);
 22175  0456  01AC               	clrf	(low ((_beatFadeTask| (0+512)+4)))^0
 22176  0457  01AD               	clrf	((low ((_beatFadeTask| (0+512)+4))+1))^0
 22177                           
 22178                           ;controller.c: 208:     beatFadeTask.task = CONTROL_BEAT;
 22179  0458  30BF               	movlw	low _CONTROL_BEAT
 22180  0459  00B0               	movwf	(low ((_beatFadeTask| (0+512)+8)))^0
 22181  045A  3013               	movlw	high _CONTROL_BEAT
 22182  045B  00B1               	movwf	((low ((_beatFadeTask| (0+512)+8)))^0+1)
 22183                           
 22184                           ;controller.c: 209:     beatFadeTask.name = B_FADE_TASK;
 22185  045C  300A               	movlw	10
 22186  045D  0140               	movlb	0	; select bank0
 22187  045E  00A0               	movwf	??_CONTROLLER_init
 22188  045F  0820               	movf	??_CONTROLLER_init,w
 22189  0460  0144               	movlb	4	; select bank4
 22190  0461  00AF               	movwf	(_beatFadeTask^(0+512)+7)
 22191                           
 22192                           ;controller.c: 210:     beatFadeTask.parent = &beat;
 22193  0462  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 22194  0463  0140               	movlb	0	; select bank0
 22195  0464  00A0               	movwf	??_CONTROLLER_init
 22196  0465  0820               	movf	??_CONTROLLER_init,w
 22197  0466  0144               	movlb	4	; select bank4
 22198  0467  00AE               	movwf	(low ((_beatFadeTask| (0+512)+6)))^0
 22199                           
 22200                           ;controller.c: 212:     beatContTask.nextItem = ((void*)0);
 22201  0468  0145               	movlb	5	; select bank5
 22202  0469  01C8               	clrf	_beatContTask^(0+640)
 22203  046A  01C9               	clrf	(_beatContTask+1)^(0+640)
 22204                           
 22205                           ;controller.c: 213:     beatContTask.prevItem = ((void*)0);
 22206  046B  01CA               	clrf	(low ((_beatContTask| (0+512)+2)))^(0+128)
 22207  046C  01CB               	clrf	((low ((_beatContTask| (0+512)+2))+1))^(0+128)
 22208                           
 22209                           ;controller.c: 214:     beatContTask.config = ((void*)0);
 22210  046D  01CC               	clrf	(low ((_beatContTask| (0+512)+4)))^(0+128)
 22211  046E  01CD               	clrf	((low ((_beatContTask| (0+512)+4))+1))^(0+128)
 22212                           
 22213                           ;controller.c: 215:     beatContTask.task = CONTROL_BEAT;
 22214  046F  30BF               	movlw	low _CONTROL_BEAT
 22215  0470  00D0               	movwf	(low ((_beatContTask| (0+512)+8)))^(0+128)
 22216  0471  3013               	movlw	high _CONTROL_BEAT
 22217  0472  00D1               	movwf	((low ((_beatContTask| (0+512)+8)))^(0+128)+1)
 22218                           
 22219                           ;controller.c: 216:     beatContTask.name = B_CONT_TASK;
 22220  0473  300B               	movlw	11
 22221  0474  0140               	movlb	0	; select bank0
 22222  0475  00A0               	movwf	??_CONTROLLER_init
 22223  0476  0820               	movf	??_CONTROLLER_init,w
 22224  0477  0145               	movlb	5	; select bank5
 22225  0478  00CF               	movwf	(_beatContTask^(0+640)+7)
 22226                           
 22227                           ;controller.c: 217:     beatContTask.parent = &beat;
 22228  0479  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 22229  047A  0140               	movlb	0	; select bank0
 22230  047B  00A0               	movwf	??_CONTROLLER_init
 22231  047C  0820               	movf	??_CONTROLLER_init,w
 22232  047D  0145               	movlb	5	; select bank5
 22233  047E  00CE               	movwf	(low ((_beatContTask| (0+512)+6)))^(0+128)
 22234                           
 22235                           ;controller.c: 219:     beatMixedTask.nextItem = ((void*)0);
 22236  047F  01BE               	clrf	_beatMixedTask^(0+640)
 22237  0480  01BF               	clrf	(_beatMixedTask+1)^(0+640)
 22238                           
 22239                           ;controller.c: 220:     beatMixedTask.prevItem = ((void*)0);
 22240  0481  01C0               	clrf	(low ((_beatMixedTask| (0+512)+2)))^(0+128)
 22241  0482  01C1               	clrf	((low ((_beatMixedTask| (0+512)+2))+1))^(0+128)
 22242                           
 22243                           ;controller.c: 221:     beatMixedTask.config = ((void*)0);
 22244  0483  01C2               	clrf	(low ((_beatMixedTask| (0+512)+4)))^(0+128)
 22245  0484  01C3               	clrf	((low ((_beatMixedTask| (0+512)+4))+1))^(0+128)
 22246                           
 22247                           ;controller.c: 222:     beatMixedTask.task = CONTROL_BEAT;
 22248  0485  30BF               	movlw	low _CONTROL_BEAT
 22249  0486  00C6               	movwf	(low ((_beatMixedTask| (0+512)+8)))^(0+128)
 22250  0487  3013               	movlw	high _CONTROL_BEAT
 22251  0488  00C7               	movwf	((low ((_beatMixedTask| (0+512)+8)))^(0+128)+1)
 22252                           
 22253                           ;controller.c: 223:     beatMixedTask.name = B_MIXED_TASK;
 22254  0489  300C               	movlw	12
 22255  048A  0140               	movlb	0	; select bank0
 22256  048B  00A0               	movwf	??_CONTROLLER_init
 22257  048C  0820               	movf	??_CONTROLLER_init,w
 22258  048D  0145               	movlb	5	; select bank5
 22259  048E  00C5               	movwf	(_beatMixedTask^(0+640)+7)
 22260                           
 22261                           ;controller.c: 224:     beatMixedTask.parent = &beat;
 22262  048F  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 22263  0490  0140               	movlb	0	; select bank0
 22264  0491  00A0               	movwf	??_CONTROLLER_init
 22265  0492  0820               	movf	??_CONTROLLER_init,w
 22266  0493  0145               	movlb	5	; select bank5
 22267  0494  00C4               	movwf	(low ((_beatMixedTask| (0+512)+6)))^(0+128)
 22268  0495  0008               	return
 22269  0496                     __end_of_CONTROLLER_init:	
 22270                           
 22271                           	psect	text79
 22272  1BAB                     __ptext79:	
 22273 ;; *************** function _CLOCK_init *****************
 22274 ;; Defined at:
 22275 ;;		line 8 in file "clock.c"
 22276 ;; Parameters:    Size  Location     Type
 22277 ;;		None
 22278 ;; Auto vars:     Size  Location     Type
 22279 ;;		None
 22280 ;; Return value:  Size  Location     Type
 22281 ;;                  1    wreg      void 
 22282 ;; Registers used:
 22283 ;;		wreg, status,2, status,0, pclath, cstack
 22284 ;; Tracked objects:
 22285 ;;		On entry : 0/0
 22286 ;;		On exit  : 0/0
 22287 ;;		Unchanged: 0/0
 22288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22293 ;;Total ram usage:        0 bytes
 22294 ;; Hardware stack levels used:    1
 22295 ;; Hardware stack levels required when called:    5
 22296 ;; This function calls:
 22297 ;;		_TMR0_SetInterruptHandler
 22298 ;; This function is called by:
 22299 ;;		_main
 22300 ;; This function uses a non-reentrant model
 22301 ;;
 22302                           
 22303                           
 22304                           ;psect for function _CLOCK_init
 22305  1BAB                     _CLOCK_init:	
 22306                           
 22307                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 22308                           
 22309                           ;incstack = 0
 22310                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 22311  1BAB  309F               	movlw	low _CLOCK_timerCallback
 22312  1BAC  0140               	movlb	0	; select bank0
 22313  1BAD  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 22314  1BAE  301B               	movlw	high _CLOCK_timerCallback
 22315  1BAF  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 22316  1BB0  319B  23EF         	fcall	_TMR0_SetInterruptHandler
 22317  1BB2  0008               	return
 22318  1BB3                     __end_of_CLOCK_init:	
 22319                           
 22320                           	psect	text80
 22321  1BEF                     __ptext80:	
 22322 ;; *************** function _TMR0_SetInterruptHandler *****************
 22323 ;; Defined at:
 22324 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 22325 ;; Parameters:    Size  Location     Type
 22326 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 22327 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 22328 ;; Auto vars:     Size  Location     Type
 22329 ;;		None
 22330 ;; Return value:  Size  Location     Type
 22331 ;;                  1    wreg      void 
 22332 ;; Registers used:
 22333 ;;		wreg
 22334 ;; Tracked objects:
 22335 ;;		On entry : 0/0
 22336 ;;		On exit  : 0/0
 22337 ;;		Unchanged: 0/0
 22338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22342 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22343 ;;Total ram usage:        2 bytes
 22344 ;; Hardware stack levels used:    1
 22345 ;; Hardware stack levels required when called:    4
 22346 ;; This function calls:
 22347 ;;		Nothing
 22348 ;; This function is called by:
 22349 ;;		_TMR0_Initialize
 22350 ;;		_CLOCK_init
 22351 ;; This function uses a non-reentrant model
 22352 ;;
 22353                           
 22354                           
 22355                           ;psect for function _TMR0_SetInterruptHandler
 22356  1BEF                     _TMR0_SetInterruptHandler:	
 22357                           
 22358                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 22359                           
 22360                           ;incstack = 0
 22361                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 22362  1BEF  0140               	movlb	0	; select bank0
 22363  1BF0  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 22364  1BF1  0142               	movlb	2	; select bank2
 22365  1BF2  00EE               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 22366  1BF3  0140               	movlb	0	; select bank0
 22367  1BF4  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 22368  1BF5  0142               	movlb	2	; select bank2
 22369  1BF6  00ED               	movwf	_TMR0_InterruptHandler^(0+256)
 22370  1BF7  0008               	return
 22371  1BF8                     __end_of_TMR0_SetInterruptHandler:	
 22372                           
 22373                           	psect	text81
 22374  0CB6                     __ptext81:	
 22375 ;; *************** function _BUTTONS_task *****************
 22376 ;; Defined at:
 22377 ;;		line 56 in file "buttons.c"
 22378 ;; Parameters:    Size  Location     Type
 22379 ;;		None
 22380 ;; Auto vars:     Size  Location     Type
 22381 ;;  btn             1    8[BANK0 ] PTR struct .
 22382 ;;		 -> buttons(32), 
 22383 ;;  i               1    5[BANK0 ] unsigned char 
 22384 ;;  time            2    6[BANK0 ] unsigned short 
 22385 ;; Return value:  Size  Location     Type
 22386 ;;                  1    wreg      void 
 22387 ;; Registers used:
 22388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22389 ;; Tracked objects:
 22390 ;;		On entry : 0/0
 22391 ;;		On exit  : 0/0
 22392 ;;		Unchanged: 0/0
 22393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22395 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22396 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22397 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22398 ;;Total ram usage:        7 bytes
 22399 ;; Hardware stack levels used:    1
 22400 ;; Hardware stack levels required when called:    5
 22401 ;; This function calls:
 22402 ;;		_CLOCK_getTime
 22403 ;; This function is called by:
 22404 ;;		_main
 22405 ;; This function uses a non-reentrant model
 22406 ;;
 22407                           
 22408                           
 22409                           ;psect for function _BUTTONS_task
 22410  0CB6                     _BUTTONS_task:	
 22411                           
 22412                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 22413                           
 22414                           ;incstack = 0
 22415                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22416  0CB6  319B  23E6  318C   	fcall	_CLOCK_getTime
 22417  0CB9  0140               	movlb	0	; select bank0
 22418  0CBA  0821               	movf	?_CLOCK_getTime+1,w
 22419  0CBB  00A7               	movwf	BUTTONS_task@time+1
 22420  0CBC  0820               	movf	?_CLOCK_getTime,w
 22421  0CBD  00A6               	movwf	BUTTONS_task@time
 22422                           
 22423                           ;buttons.c: 61:     if (time - lastTime < 10)
 22424  0CBE  0142               	movlb	2	; select bank2
 22425  0CBF  083A               	movf	_lastTime^(0+256),w
 22426  0CC0  0140               	movlb	0	; select bank0
 22427  0CC1  0226               	subwf	BUTTONS_task@time,w
 22428  0CC2  00A2               	movwf	??_BUTTONS_task
 22429  0CC3  0142               	movlb	2	; select bank2
 22430  0CC4  083B               	movf	(_lastTime+1)^(0+256),w
 22431  0CC5  0140               	movlb	0	; select bank0
 22432  0CC6  3B27               	subwfb	BUTTONS_task@time+1,w
 22433  0CC7  00A3               	movwf	??_BUTTONS_task+1
 22434  0CC8  3000               	movlw	0
 22435  0CC9  0223               	subwf	??_BUTTONS_task+1,w
 22436  0CCA  300A               	movlw	10
 22437  0CCB  1903               	skipnz
 22438  0CCC  0222               	subwf	??_BUTTONS_task,w
 22439  0CCD  1C03               	btfss	3,0
 22440  0CCE  0008               	return
 22441                           
 22442                           ;buttons.c: 64:     lastTime = time;
 22443  0CCF  0827               	movf	BUTTONS_task@time+1,w
 22444  0CD0  0142               	movlb	2	; select bank2
 22445  0CD1  00BB               	movwf	(_lastTime+1)^(0+256)
 22446  0CD2  0140               	movlb	0	; select bank0
 22447  0CD3  0826               	movf	BUTTONS_task@time,w
 22448  0CD4  0142               	movlb	2	; select bank2
 22449  0CD5  00BA               	movwf	_lastTime^(0+256)
 22450                           
 22451                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 22452  0CD6  0140               	movlb	0	; select bank0
 22453  0CD7  01A5               	clrf	BUTTONS_task@i
 22454  0CD8                     l10781:	
 22455                           
 22456                           ;buttons.c: 68:         button_t* btn = buttons + i;
 22457  0CD8  0825               	movf	BUTTONS_task@i,w
 22458  0CD9  00A2               	movwf	??_BUTTONS_task
 22459  0CDA  3002               	movlw	2
 22460  0CDB                     u11105:	
 22461  0CDB  35A2               	lslf	??_BUTTONS_task,f
 22462  0CDC  3EFF               	addlw	-1
 22463  0CDD  1D03               	skipz
 22464  0CDE  2CDB               	goto	u11105
 22465  0CDF  3522               	lslf	??_BUTTONS_task,w
 22466  0CE0  3E40               	addlw	(low (_buttons| (0+768)))& (0+255)
 22467  0CE1  00A3               	movwf	??_BUTTONS_task+1
 22468  0CE2  0823               	movf	??_BUTTONS_task+1,w
 22469  0CE3  00A8               	movwf	BUTTONS_task@btn
 22470                           
 22471                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 22472  0CE4  0828               	movf	BUTTONS_task@btn,w
 22473  0CE5  0086               	movwf	6
 22474  0CE6  3003               	movlw	3	; select bank6/7
 22475  0CE7  0087               	movwf	7
 22476  0CE8  3F40               	moviw [0]fsr1
 22477  0CE9  00A2               	movwf	??_BUTTONS_task
 22478  0CEA  3F41               	moviw [1]fsr1
 22479  0CEB  00A3               	movwf	??_BUTTONS_task+1
 22480  0CEC  0822               	movf	??_BUTTONS_task,w
 22481  0CED  0086               	movwf	6
 22482  0CEE  0823               	movf	??_BUTTONS_task+1,w
 22483  0CEF  0087               	movwf	7
 22484  0CF0  3001               	movlw	1
 22485  0CF1  00A4               	movwf	??_BUTTONS_task+2
 22486  0CF2  0828               	movf	BUTTONS_task@btn,w
 22487  0CF3  3E02               	addlw	2
 22488  0CF4  0084               	movwf	4
 22489  0CF5  3003               	movlw	3	; select bank6/7
 22490  0CF6  0085               	movwf	5
 22491  0CF7  0A00               	incf	0,w
 22492  0CF8  2CFA               	goto	u11114
 22493  0CF9                     u11115:	
 22494  0CF9  35A4               	lslf	??_BUTTONS_task+2,f
 22495  0CFA                     u11114:	
 22496  0CFA  0B89               	decfsz	9,f
 22497  0CFB  2CF9               	goto	u11115
 22498  0CFC  0824               	movf	??_BUTTONS_task+2,w
 22499  0CFD  0501               	andwf	1,w
 22500  0CFE  1D03               	btfss	3,2
 22501  0CFF  2D19               	goto	l10789
 22502                           
 22503                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 22504  0D00  0828               	movf	BUTTONS_task@btn,w
 22505  0D01  3E03               	addlw	3
 22506  0D02  0086               	movwf	6
 22507  0D03  3003               	movlw	3	; select bank6/7
 22508  0D04  0087               	movwf	7
 22509  0D05  0181               	clrf	1
 22510  0D06  0A81               	incf	1,f
 22511                           
 22512                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 22513  0D07  0828               	movf	BUTTONS_task@btn,w
 22514  0D08  3E07               	addlw	7
 22515  0D09  0086               	movwf	6
 22516  0D0A  3003               	movlw	3	; select bank6/7
 22517  0D0B  0087               	movwf	7
 22518  0D0C  0801               	movf	1,w
 22519  0D0D  1D03               	btfss	3,2
 22520  0D0E  2D1F               	goto	l911
 22521                           
 22522                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 22523  0D0F  0828               	movf	BUTTONS_task@btn,w
 22524  0D10  3E05               	addlw	5
 22525  0D11  0086               	movwf	6
 22526  0D12  3003               	movlw	3	; select bank6/7
 22527  0D13  0087               	movwf	7
 22528  0D14  0826               	movf	BUTTONS_task@time,w
 22529  0D15  3FC0               	movwi [0]fsr1
 22530  0D16  0827               	movf	BUTTONS_task@time+1,w
 22531  0D17  3FC1               	movwi [1]fsr1
 22532  0D18  2D1F               	goto	l911
 22533  0D19                     l10789:	
 22534                           
 22535                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 22536  0D19  0828               	movf	BUTTONS_task@btn,w
 22537  0D1A  3E03               	addlw	3
 22538  0D1B  0086               	movwf	6
 22539  0D1C  3003               	movlw	3	; select bank6/7
 22540  0D1D  0087               	movwf	7
 22541  0D1E  0181               	clrf	1
 22542  0D1F                     l911:	
 22543                           ;buttons.c: 78:         }
 22544                           
 22545                           
 22546                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 22547  0D1F  0828               	movf	BUTTONS_task@btn,w
 22548  0D20  3E03               	addlw	3
 22549  0D21  0086               	movwf	6
 22550  0D22  3003               	movlw	3	; select bank6/7
 22551  0D23  0087               	movwf	7
 22552  0D24  0801               	movf	1,w
 22553  0D25  1D03               	btfss	3,2
 22554  0D26  2D37               	goto	l10795
 22555  0D27  0828               	movf	BUTTONS_task@btn,w
 22556  0D28  3E04               	addlw	4
 22557  0D29  0086               	movwf	6
 22558  0D2A  3003               	movlw	3	; select bank6/7
 22559  0D2B  0087               	movwf	7
 22560  0D2C  0301               	decf	1,w
 22561  0D2D  1D03               	btfss	3,2
 22562  0D2E  2D37               	goto	l10795
 22563                           
 22564                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 22565  0D2F  0828               	movf	BUTTONS_task@btn,w
 22566  0D30  3E07               	addlw	7
 22567  0D31  0086               	movwf	6
 22568  0D32  3003               	movlw	3	; select bank6/7
 22569  0D33  0087               	movwf	7
 22570  0D34  0181               	clrf	1
 22571  0D35  0A81               	incf	1,f
 22572                           
 22573                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 22574  0D36  2D8D               	goto	l913
 22575  0D37                     l10795:	
 22576  0D37  0828               	movf	BUTTONS_task@btn,w
 22577  0D38  3E03               	addlw	3
 22578  0D39  0086               	movwf	6
 22579  0D3A  3003               	movlw	3	; select bank6/7
 22580  0D3B  0087               	movwf	7
 22581  0D3C  0301               	decf	1,w
 22582  0D3D  1D03               	btfss	3,2
 22583  0D3E  2D6E               	goto	l10807
 22584  0D3F  0828               	movf	BUTTONS_task@btn,w
 22585  0D40  3E04               	addlw	4
 22586  0D41  0086               	movwf	6
 22587  0D42  3003               	movlw	3	; select bank6/7
 22588  0D43  0087               	movwf	7
 22589  0D44  0301               	decf	1,w
 22590  0D45  1D03               	btfss	3,2
 22591  0D46  2D6E               	goto	l10807
 22592                           
 22593                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 22594  0D47  0828               	movf	BUTTONS_task@btn,w
 22595  0D48  3E05               	addlw	5
 22596  0D49  0086               	movwf	6
 22597  0D4A  3003               	movlw	3	; select bank6/7
 22598  0D4B  0087               	movwf	7
 22599  0D4C  3F40               	moviw [0]fsr1
 22600  0D4D  0226               	subwf	BUTTONS_task@time,w
 22601  0D4E  00A2               	movwf	??_BUTTONS_task
 22602  0D4F  3F41               	moviw [1]fsr1
 22603  0D50  3B27               	subwfb	BUTTONS_task@time+1,w
 22604  0D51  00A3               	movwf	??_BUTTONS_task+1
 22605  0D52  3000               	movlw	0
 22606  0D53  0223               	subwf	??_BUTTONS_task+1,w
 22607  0D54  30C9               	movlw	201
 22608  0D55  1903               	skipnz
 22609  0D56  0222               	subwf	??_BUTTONS_task,w
 22610  0D57  1C03               	skipc
 22611  0D58  2D5B               	goto	l10803
 22612                           
 22613                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 22614  0D59  3003               	movlw	3
 22615  0D5A  2D65               	goto	L21
 22616  0D5B                     l10803:	
 22617                           ;buttons.c: 86:             } else if(btn->event != EVENT_HELD) {
 22618                           
 22619  0D5B  0828               	movf	BUTTONS_task@btn,w
 22620  0D5C  3E07               	addlw	7
 22621  0D5D  0086               	movwf	6
 22622  0D5E  3003               	movlw	3	; select bank6/7
 22623  0D5F  0087               	movwf	7
 22624  0D60  3003               	movlw	3
 22625  0D61  0601               	xorwf	1,w
 22626  0D62  1903               	btfsc	3,2
 22627  0D63  2D8D               	goto	l913
 22628                           
 22629                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 22630  0D64  3002               	movlw	2
 22631  0D65                     L21:	
 22632  0D65  00A2               	movwf	??_BUTTONS_task
 22633  0D66  0828               	movf	BUTTONS_task@btn,w
 22634  0D67  3E07               	addlw	7
 22635  0D68  0086               	movwf	6
 22636  0D69  3003               	movlw	3	; select bank6/7
 22637  0D6A  0087               	movwf	7
 22638  0D6B  0822               	movf	??_BUTTONS_task,w
 22639  0D6C  0081               	movwf	1
 22640  0D6D  2D8D               	goto	l913
 22641  0D6E                     l10807:	
 22642  0D6E  0828               	movf	BUTTONS_task@btn,w
 22643  0D6F  3E03               	addlw	3
 22644  0D70  0086               	movwf	6
 22645  0D71  3003               	movlw	3	; select bank6/7
 22646  0D72  0087               	movwf	7
 22647  0D73  0801               	movf	1,w
 22648  0D74  1D03               	btfss	3,2
 22649  0D75  2D8D               	goto	l913
 22650  0D76  0828               	movf	BUTTONS_task@btn,w
 22651  0D77  3E04               	addlw	4
 22652  0D78  0086               	movwf	6
 22653  0D79  3003               	movlw	3	; select bank6/7
 22654  0D7A  0087               	movwf	7
 22655  0D7B  0301               	decf	1,w
 22656  0D7C  1D03               	btfss	3,2
 22657  0D7D  2D8D               	goto	l913
 22658  0D7E  0828               	movf	BUTTONS_task@btn,w
 22659  0D7F  3E07               	addlw	7
 22660  0D80  0086               	movwf	6
 22661  0D81  3003               	movlw	3	; select bank6/7
 22662  0D82  0087               	movwf	7
 22663  0D83  3003               	movlw	3
 22664  0D84  0601               	xorwf	1,w
 22665  0D85  1D03               	btfss	3,2
 22666  0D86  2D8D               	goto	l913
 22667                           
 22668                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 22669  0D87  0828               	movf	BUTTONS_task@btn,w
 22670  0D88  3E07               	addlw	7
 22671  0D89  0086               	movwf	6
 22672  0D8A  3003               	movlw	3	; select bank6/7
 22673  0D8B  0087               	movwf	7
 22674  0D8C  0181               	clrf	1
 22675  0D8D                     l913:	
 22676                           
 22677                           ;buttons.c: 93:         btn->lastState = btn->state;
 22678  0D8D  0828               	movf	BUTTONS_task@btn,w
 22679  0D8E  3E03               	addlw	3
 22680  0D8F  0086               	movwf	6
 22681  0D90  3003               	movlw	3	; select bank6/7
 22682  0D91  0087               	movwf	7
 22683  0D92  0801               	movf	1,w
 22684  0D93  00A2               	movwf	??_BUTTONS_task
 22685  0D94  0828               	movf	BUTTONS_task@btn,w
 22686  0D95  3E04               	addlw	4
 22687  0D96  0086               	movwf	6
 22688  0D97  3003               	movlw	3	; select bank6/7
 22689  0D98  0087               	movwf	7
 22690  0D99  0822               	movf	??_BUTTONS_task,w
 22691  0D9A  0081               	movwf	1
 22692                           
 22693                           ;buttons.c: 94:     }
 22694  0D9B  3001               	movlw	1
 22695  0D9C  00A2               	movwf	??_BUTTONS_task
 22696  0D9D  0822               	movf	??_BUTTONS_task,w
 22697  0D9E  07A5               	addwf	BUTTONS_task@i,f
 22698  0D9F  3004               	movlw	4
 22699  0DA0  0225               	subwf	BUTTONS_task@i,w
 22700  0DA1  1803               	btfsc	3,0
 22701  0DA2  0008               	return
 22702  0DA3  2CD8               	goto	l10781
 22703  0DA4                     __end_of_BUTTONS_task:	
 22704                           
 22705                           	psect	text82
 22706  1277                     __ptext82:	
 22707 ;; *************** function _BUTTONS_init *****************
 22708 ;; Defined at:
 22709 ;;		line 23 in file "buttons.c"
 22710 ;; Parameters:    Size  Location     Type
 22711 ;;		None
 22712 ;; Auto vars:     Size  Location     Type
 22713 ;;		None
 22714 ;; Return value:  Size  Location     Type
 22715 ;;                  1    wreg      void 
 22716 ;; Registers used:
 22717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22718 ;; Tracked objects:
 22719 ;;		On entry : 0/0
 22720 ;;		On exit  : 0/0
 22721 ;;		Unchanged: 0/0
 22722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22725 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22726 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22727 ;;Total ram usage:        1 bytes
 22728 ;; Hardware stack levels used:    1
 22729 ;; Hardware stack levels required when called:    5
 22730 ;; This function calls:
 22731 ;;		_GPIO_init
 22732 ;;		_init
 22733 ;; This function is called by:
 22734 ;;		_main
 22735 ;; This function uses a non-reentrant model
 22736 ;;
 22737                           
 22738                           
 22739                           ;psect for function _BUTTONS_init
 22740  1277                     _BUTTONS_init:	
 22741                           
 22742                           ;buttons.c: 24:     menu = &buttons[0];
 22743                           
 22744                           ;incstack = 0
 22745                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22746  1277  3040               	movlw	(low (_buttons| (0+768)))& (0+255)
 22747  1278  0140               	movlb	0	; select bank0
 22748  1279  00A5               	movwf	??_BUTTONS_init
 22749  127A  0825               	movf	??_BUTTONS_init,w
 22750  127B  0141               	movlb	1	; select bank1
 22751  127C  00E1               	movwf	_menu^(0+128)
 22752                           
 22753                           ;buttons.c: 25:     up = &buttons[1];
 22754  127D  3048               	movlw	(low ((_buttons| (0+768)+8)))& (0+255)
 22755  127E  0140               	movlb	0	; select bank0
 22756  127F  00A5               	movwf	??_BUTTONS_init
 22757  1280  0825               	movf	??_BUTTONS_init,w
 22758  1281  0141               	movlb	1	; select bank1
 22759  1282  00E0               	movwf	_up^(0+128)
 22760                           
 22761                           ;buttons.c: 26:     down = &buttons[2];
 22762  1283  3050               	movlw	(low ((_buttons| (0+768)+16)))& (0+255)
 22763  1284  0140               	movlb	0	; select bank0
 22764  1285  00A5               	movwf	??_BUTTONS_init
 22765  1286  0825               	movf	??_BUTTONS_init,w
 22766  1287  0141               	movlb	1	; select bank1
 22767  1288  00DF               	movwf	_down^(0+128)
 22768                           
 22769                           ;buttons.c: 27:     enter = &buttons[3];
 22770  1289  3058               	movlw	(low ((_buttons| (0+768)+24)))& (0+255)
 22771  128A  0140               	movlb	0	; select bank0
 22772  128B  00A5               	movwf	??_BUTTONS_init
 22773  128C  0825               	movf	??_BUTTONS_init,w
 22774  128D  0141               	movlb	1	; select bank1
 22775  128E  00DE               	movwf	_enter^(0+128)
 22776                           
 22777                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 22778  128F  300E               	movlw	14
 22779  1290  0140               	movlb	0	; select bank0
 22780  1291  00A0               	movwf	init@port
 22781  1292  3000               	movlw	0
 22782  1293  00A1               	movwf	init@port+1
 22783  1294  3002               	movlw	2
 22784  1295  00A5               	movwf	??_BUTTONS_init
 22785  1296  0825               	movf	??_BUTTONS_init,w
 22786  1297  00A2               	movwf	init@pin
 22787  1298  0141               	movlb	1	; select bank1
 22788  1299  0861               	movf	_menu^(0+128),w
 22789  129A  319E  2683  3192   	fcall	_init
 22790                           
 22791                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 22792  129D  300C               	movlw	12
 22793  129E  0140               	movlb	0	; select bank0
 22794  129F  00A0               	movwf	init@port
 22795  12A0  3000               	movlw	0
 22796  12A1  00A1               	movwf	init@port+1
 22797  12A2  3002               	movlw	2
 22798  12A3  00A5               	movwf	??_BUTTONS_init
 22799  12A4  0825               	movf	??_BUTTONS_init,w
 22800  12A5  00A2               	movwf	init@pin
 22801  12A6  0141               	movlb	1	; select bank1
 22802  12A7  085E               	movf	_enter^(0+128),w
 22803  12A8  319E  2683  3192   	fcall	_init
 22804                           
 22805                           ;buttons.c: 31:     init(down, &PORTC, 0);
 22806  12AB  300E               	movlw	14
 22807  12AC  0140               	movlb	0	; select bank0
 22808  12AD  00A0               	movwf	init@port
 22809  12AE  3000               	movlw	0
 22810  12AF  00A1               	movwf	init@port+1
 22811  12B0  01A2               	clrf	init@pin
 22812  12B1  0141               	movlb	1	; select bank1
 22813  12B2  085F               	movf	_down^(0+128),w
 22814  12B3  319E  2683  3192   	fcall	_init
 22815                           
 22816                           ;buttons.c: 32:     init(up, &PORTC, 1);
 22817  12B6  300E               	movlw	14
 22818  12B7  0140               	movlb	0	; select bank0
 22819  12B8  00A0               	movwf	init@port
 22820  12B9  3000               	movlw	0
 22821  12BA  00A1               	movwf	init@port+1
 22822  12BB  01A2               	clrf	init@pin
 22823  12BC  0AA2               	incf	init@pin,f
 22824  12BD  0141               	movlb	1	; select bank1
 22825  12BE  0860               	movf	_up^(0+128),w
 22826  12BF  319E  2683  3192   	fcall	_init
 22827                           
 22828                           ;buttons.c: 34:     GPIO_init();
 22829  12C2  319C  24D5         	fcall	_GPIO_init
 22830  12C4  0008               	return
 22831  12C5                     __end_of_BUTTONS_init:	
 22832                           
 22833                           	psect	text83
 22834  1E83                     __ptext83:	
 22835 ;; *************** function _init *****************
 22836 ;; Defined at:
 22837 ;;		line 16 in file "buttons.c"
 22838 ;; Parameters:    Size  Location     Type
 22839 ;;  btn             1    wreg     PTR struct .
 22840 ;;		 -> buttons(32), NULL(0), 
 22841 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 22842 ;;		 -> PORTA(1), PORTC(1), 
 22843 ;;  pin             1    2[BANK0 ] unsigned char 
 22844 ;; Auto vars:     Size  Location     Type
 22845 ;;  btn             1    4[BANK0 ] PTR struct .
 22846 ;;		 -> buttons(32), NULL(0), 
 22847 ;; Return value:  Size  Location     Type
 22848 ;;                  1    wreg      void 
 22849 ;; Registers used:
 22850 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22851 ;; Tracked objects:
 22852 ;;		On entry : 0/0
 22853 ;;		On exit  : 0/0
 22854 ;;		Unchanged: 0/0
 22855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22856 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22859 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22860 ;;Total ram usage:        5 bytes
 22861 ;; Hardware stack levels used:    1
 22862 ;; Hardware stack levels required when called:    4
 22863 ;; This function calls:
 22864 ;;		Nothing
 22865 ;; This function is called by:
 22866 ;;		_BUTTONS_init
 22867 ;; This function uses a non-reentrant model
 22868 ;;
 22869                           
 22870                           
 22871                           ;psect for function _init
 22872  1E83                     _init:	
 22873                           
 22874                           ;incstack = 0
 22875                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 22876                           ;init@btn stored from wreg
 22877  1E83  0140               	movlb	0	; select bank0
 22878  1E84  00A4               	movwf	init@btn
 22879                           
 22880                           ;buttons.c: 17:     btn->port = port;
 22881  1E85  0824               	movf	init@btn,w
 22882  1E86  0086               	movwf	6
 22883  1E87  3003               	movlw	3	; select bank6/7
 22884  1E88  0087               	movwf	7
 22885  1E89  0820               	movf	init@port,w
 22886  1E8A  3FC0               	movwi [0]fsr1
 22887  1E8B  0821               	movf	init@port+1,w
 22888  1E8C  3FC1               	movwi [1]fsr1
 22889                           
 22890                           ;buttons.c: 18:     btn->pin = pin;
 22891  1E8D  0822               	movf	init@pin,w
 22892  1E8E  00A3               	movwf	??_init
 22893  1E8F  0824               	movf	init@btn,w
 22894  1E90  3E02               	addlw	2
 22895  1E91  0086               	movwf	6
 22896  1E92  3003               	movlw	3	; select bank6/7
 22897  1E93  0087               	movwf	7
 22898  1E94  0823               	movf	??_init,w
 22899  1E95  0081               	movwf	1
 22900                           
 22901                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 22902  1E96  0824               	movf	init@btn,w
 22903  1E97  3E03               	addlw	3
 22904  1E98  0086               	movwf	6
 22905  1E99  3003               	movlw	3	; select bank6/7
 22906  1E9A  0087               	movwf	7
 22907  1E9B  0181               	clrf	1
 22908                           
 22909                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 22910  1E9C  0824               	movf	init@btn,w
 22911  1E9D  3E07               	addlw	7
 22912  1E9E  0086               	movwf	6
 22913  1E9F  3003               	movlw	3	; select bank6/7
 22914  1EA0  0087               	movwf	7
 22915  1EA1  0181               	clrf	1
 22916  1EA2  0008               	return
 22917  1EA3                     __end_of_init:	
 22918                           
 22919                           	psect	text84
 22920  1CD5                     __ptext84:	
 22921 ;; *************** function _GPIO_init *****************
 22922 ;; Defined at:
 22923 ;;		line 38 in file "buttons.c"
 22924 ;; Parameters:    Size  Location     Type
 22925 ;;		None
 22926 ;; Auto vars:     Size  Location     Type
 22927 ;;		None
 22928 ;; Return value:  Size  Location     Type
 22929 ;;                  1    wreg      void 
 22930 ;; Registers used:
 22931 ;;		None
 22932 ;; Tracked objects:
 22933 ;;		On entry : 0/0
 22934 ;;		On exit  : 0/0
 22935 ;;		Unchanged: 0/0
 22936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22941 ;;Total ram usage:        0 bytes
 22942 ;; Hardware stack levels used:    1
 22943 ;; Hardware stack levels required when called:    4
 22944 ;; This function calls:
 22945 ;;		Nothing
 22946 ;; This function is called by:
 22947 ;;		_BUTTONS_init
 22948 ;; This function uses a non-reentrant model
 22949 ;;
 22950                           
 22951                           
 22952                           ;psect for function _GPIO_init
 22953  1CD5                     _GPIO_init:	
 22954                           
 22955                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 22956                           
 22957                           ;incstack = 0
 22958                           ; Regs used in _GPIO_init: []
 22959  1CD5  0140               	movlb	0	; select bank0
 22960  1CD6  1512               	bsf	18,2	;volatile
 22961                           
 22962                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 22963  1CD7  017E               	movlb	62	; select bank62
 22964  1CD8  1138               	bcf	56,2	;volatile
 22965                           
 22966                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 22967  1CD9  1539               	bsf	57,2	;volatile
 22968                           
 22969                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 22970  1CDA  0140               	movlb	0	; select bank0
 22971  1CDB  1414               	bsf	20,0	;volatile
 22972                           
 22973                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 22974  1CDC  1494               	bsf	20,1	;volatile
 22975                           
 22976                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 22977  1CDD  1514               	bsf	20,2	;volatile
 22978                           
 22979                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 22980  1CDE  017E               	movlb	62	; select bank62
 22981  1CDF  104E               	bcf	78,0	;volatile
 22982                           
 22983                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 22984  1CE0  10CE               	bcf	78,1	;volatile
 22985                           
 22986                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 22987  1CE1  114E               	bcf	78,2	;volatile
 22988                           
 22989                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 22990  1CE2  144F               	bsf	79,0	;volatile
 22991                           
 22992                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 22993  1CE3  14CF               	bsf	79,1	;volatile
 22994                           
 22995                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 22996  1CE4  154F               	bsf	79,2	;volatile
 22997  1CE5  0008               	return
 22998  1CE6                     __end_of_GPIO_init:	
 22999                           
 23000                           	psect	text85
 23001  0A27                     __ptext85:	
 23002 ;; *************** function _BEAT_task *****************
 23003 ;; Defined at:
 23004 ;;		line 65 in file "beat.c"
 23005 ;; Parameters:    Size  Location     Type
 23006 ;;		None
 23007 ;; Auto vars:     Size  Location     Type
 23008 ;;  offset          2   10[BANK0 ] unsigned short 
 23009 ;; Return value:  Size  Location     Type
 23010 ;;                  1    wreg      void 
 23011 ;; Registers used:
 23012 ;;		wreg, status,2, status,0, pclath, cstack
 23013 ;; Tracked objects:
 23014 ;;		On entry : 0/0
 23015 ;;		On exit  : 0/0
 23016 ;;		Unchanged: 0/0
 23017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23019 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23020 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23021 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23022 ;;Total ram usage:        4 bytes
 23023 ;; Hardware stack levels used:    1
 23024 ;; Hardware stack levels required when called:    5
 23025 ;; This function calls:
 23026 ;;		_ADCC_SetUpperThreshold
 23027 ;;		_CLOCK_getTime
 23028 ;;		___lwdiv
 23029 ;; This function is called by:
 23030 ;;		_main
 23031 ;; This function uses a non-reentrant model
 23032 ;;
 23033                           
 23034                           
 23035                           ;psect for function _BEAT_task
 23036  0A27                     _BEAT_task:	
 23037                           
 23038                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 23039                           
 23040                           ;incstack = 0
 23041                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 23042  0A27  319B  23E6  318A   	fcall	_CLOCK_getTime
 23043  0A2A  0142               	movlb	2	; select bank2
 23044  0A2B  082E               	movf	_lastRun^(0+256),w
 23045  0A2C  0140               	movlb	0	; select bank0
 23046  0A2D  0220               	subwf	?_CLOCK_getTime,w
 23047  0A2E  00A8               	movwf	??_BEAT_task
 23048  0A2F  0142               	movlb	2	; select bank2
 23049  0A30  082F               	movf	(_lastRun+1)^(0+256),w
 23050  0A31  0140               	movlb	0	; select bank0
 23051  0A32  3B21               	subwfb	?_CLOCK_getTime+1,w
 23052  0A33  00A9               	movwf	??_BEAT_task+1
 23053  0A34  0142               	movlb	2	; select bank2
 23054  0A35  0862               	movf	(_delay+1)^(0+256),w
 23055  0A36  0140               	movlb	0	; select bank0
 23056  0A37  0229               	subwf	??_BEAT_task+1,w
 23057  0A38  1D03               	skipz
 23058  0A39  2A3E               	goto	u11325
 23059  0A3A  0142               	movlb	2	; select bank2
 23060  0A3B  0861               	movf	_delay^(0+256),w
 23061  0A3C  0140               	movlb	0	; select bank0
 23062  0A3D  0228               	subwf	??_BEAT_task,w
 23063  0A3E                     u11325:	
 23064  0A3E  1C03               	btfss	3,0
 23065  0A3F  0008               	return
 23066                           
 23067                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 23068  0A40  319B  23E6  318A   	fcall	_CLOCK_getTime
 23069  0A43  0140               	movlb	0	; select bank0
 23070  0A44  0821               	movf	?_CLOCK_getTime+1,w
 23071  0A45  0142               	movlb	2	; select bank2
 23072  0A46  00AF               	movwf	(_lastRun+1)^(0+256)
 23073  0A47  0140               	movlb	0	; select bank0
 23074  0A48  0820               	movf	?_CLOCK_getTime,w
 23075  0A49  0142               	movlb	2	; select bank2
 23076  0A4A  00AE               	movwf	_lastRun^(0+256)
 23077                           
 23078                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 23079  0A4B  0141               	movlb	1	; select bank1
 23080  0A4C  0355               	decf	_thresholdExceeded^(0+128),w
 23081  0A4D  1D03               	btfss	3,2
 23082  0A4E  2A55               	goto	l10893
 23083                           
 23084                           ;beat.c: 77:         thresholdCount++;
 23085  0A4F  3001               	movlw	1
 23086  0A50  0142               	movlb	2	; select bank2
 23087  0A51  07AC               	addwf	_thresholdCount^(0+256),f
 23088  0A52  3000               	movlw	0
 23089  0A53  3DAD               	addwfc	(_thresholdCount+1)^(0+256),f
 23090                           
 23091                           ;beat.c: 78:     } else {
 23092  0A54  2A5C               	goto	l10897
 23093  0A55                     l10893:	
 23094                           
 23095                           ;beat.c: 80:         thresholdCount = 0;
 23096  0A55  0142               	movlb	2	; select bank2
 23097  0A56  01AC               	clrf	_thresholdCount^(0+256)
 23098  0A57  01AD               	clrf	(_thresholdCount+1)^(0+256)
 23099                           
 23100                           ;beat.c: 81:         delay = 30;
 23101  0A58  301E               	movlw	30
 23102  0A59  00E1               	movwf	_delay^(0+256)
 23103  0A5A  3000               	movlw	0
 23104  0A5B  00E2               	movwf	(_delay^(0+256)+1)
 23105  0A5C                     l10897:	
 23106                           
 23107                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 23108  0A5C  0141               	movlb	1	; select bank1
 23109  0A5D  0355               	decf	_thresholdExceeded^(0+128),w
 23110  0A5E  1D03               	btfss	3,2
 23111  0A5F  2AA3               	goto	l10915
 23112  0A60  0854               	movf	_lastDetected^(0+128),w
 23113  0A61  1D03               	btfss	3,2
 23114  0A62  2AA3               	goto	l10915
 23115                           
 23116                           ;beat.c: 89:         detected = 1;
 23117  0A63  01D6               	clrf	_detected^(0+128)
 23118  0A64  0AD6               	incf	_detected^(0+128),f
 23119                           
 23120                           ;beat.c: 92:         delay = 50;
 23121  0A65  3032               	movlw	50
 23122  0A66  0142               	movlb	2	; select bank2
 23123  0A67  00E1               	movwf	_delay^(0+256)
 23124  0A68  3000               	movlw	0
 23125  0A69  00E2               	movwf	(_delay^(0+256)+1)
 23126                           
 23127                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 23128  0A6A  319B  23E6  318A   	fcall	_CLOCK_getTime
 23129  0A6D  0142               	movlb	2	; select bank2
 23130  0A6E  0832               	movf	_lastBeat^(0+256),w
 23131  0A6F  0140               	movlb	0	; select bank0
 23132  0A70  0220               	subwf	?_CLOCK_getTime,w
 23133  0A71  00AA               	movwf	BEAT_task@offset
 23134  0A72  0142               	movlb	2	; select bank2
 23135  0A73  0833               	movf	(_lastBeat+1)^(0+256),w
 23136  0A74  0140               	movlb	0	; select bank0
 23137  0A75  3B21               	subwfb	?_CLOCK_getTime+1,w
 23138  0A76  00AB               	movwf	BEAT_task@offset+1
 23139                           
 23140                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 23141  0A77  319B  23E6  318A   	fcall	_CLOCK_getTime
 23142  0A7A  0140               	movlb	0	; select bank0
 23143  0A7B  0821               	movf	?_CLOCK_getTime+1,w
 23144  0A7C  0142               	movlb	2	; select bank2
 23145  0A7D  00B3               	movwf	(_lastBeat+1)^(0+256)
 23146  0A7E  0140               	movlb	0	; select bank0
 23147  0A7F  0820               	movf	?_CLOCK_getTime,w
 23148  0A80  0142               	movlb	2	; select bank2
 23149  0A81  00B2               	movwf	_lastBeat^(0+256)
 23150                           
 23151                           ;beat.c: 99:         if (offset < 150)
 23152  0A82  3000               	movlw	0
 23153  0A83  0140               	movlb	0	; select bank0
 23154  0A84  022B               	subwf	BEAT_task@offset+1,w
 23155  0A85  3096               	movlw	150
 23156  0A86  1903               	skipnz
 23157  0A87  022A               	subwf	BEAT_task@offset,w
 23158  0A88  1803               	skipnc
 23159  0A89  2A90               	goto	l10913
 23160                           
 23161                           ;beat.c: 100:             bpm = 400;
 23162  0A8A  3090               	movlw	144
 23163  0A8B  0142               	movlb	2	; select bank2
 23164  0A8C  00B0               	movwf	_bpm^(0+256)
 23165  0A8D  3001               	movlw	1
 23166  0A8E  00B1               	movwf	(_bpm^(0+256)+1)
 23167  0A8F  2AA3               	goto	l10915
 23168  0A90                     l10913:	
 23169                           
 23170                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 23171  0A90  082B               	movf	BEAT_task@offset+1,w
 23172  0A91  00A1               	movwf	___lwdiv@divisor+1
 23173  0A92  082A               	movf	BEAT_task@offset,w
 23174  0A93  00A0               	movwf	___lwdiv@divisor
 23175  0A94  3060               	movlw	96
 23176  0A95  00A2               	movwf	___lwdiv@dividend
 23177  0A96  30EA               	movlw	234
 23178  0A97  00A3               	movwf	___lwdiv@dividend+1
 23179  0A98  3190  20D2  318A   	fcall	___lwdiv
 23180  0A9B  0140               	movlb	0	; select bank0
 23181  0A9C  0821               	movf	?___lwdiv+1,w
 23182  0A9D  0142               	movlb	2	; select bank2
 23183  0A9E  00B1               	movwf	(_bpm+1)^(0+256)
 23184  0A9F  0140               	movlb	0	; select bank0
 23185  0AA0  0820               	movf	?___lwdiv,w
 23186  0AA1  0142               	movlb	2	; select bank2
 23187  0AA2  00B0               	movwf	_bpm^(0+256)
 23188  0AA3                     l10915:	
 23189                           
 23190                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 23191  0AA3  0141               	movlb	1	; select bank1
 23192  0AA4  0855               	movf	_thresholdExceeded^(0+128),w
 23193  0AA5  0140               	movlb	0	; select bank0
 23194  0AA6  00A8               	movwf	??_BEAT_task
 23195  0AA7  0828               	movf	??_BEAT_task,w
 23196  0AA8  0141               	movlb	1	; select bank1
 23197  0AA9  00D4               	movwf	_lastDetected^(0+128)
 23198                           
 23199                           ;beat.c: 109:     thresholdExceeded = 0;
 23200  0AAA  01D5               	clrf	_thresholdExceeded^(0+128)
 23201                           
 23202                           ;beat.c: 111:     if (thresholdCount > 3) {
 23203  0AAB  0142               	movlb	2	; select bank2
 23204  0AAC  082D               	movf	(_thresholdCount+1)^(0+256),w
 23205  0AAD  3A80               	xorlw	128
 23206  0AAE  0140               	movlb	0	; select bank0
 23207  0AAF  00A8               	movwf	??_BEAT_task
 23208  0AB0  3080               	movlw	128
 23209  0AB1  0228               	subwf	??_BEAT_task,w
 23210  0AB2  1D03               	skipz
 23211  0AB3  2AB7               	goto	u11375
 23212  0AB4  3004               	movlw	4
 23213  0AB5  0142               	movlb	2	; select bank2
 23214  0AB6  022C               	subwf	_thresholdCount^(0+256),w
 23215  0AB7                     u11375:	
 23216  0AB7  1C03               	skipc
 23217  0AB8  2AD6               	goto	l10929
 23218                           
 23219                           ;beat.c: 112:         threshold += 1;
 23220  0AB9  3001               	movlw	1
 23221  0ABA  0142               	movlb	2	; select bank2
 23222  0ABB  07E3               	addwf	_threshold^(0+256),f
 23223  0ABC  3000               	movlw	0
 23224  0ABD  3DE4               	addwfc	(_threshold+1)^(0+256),f
 23225                           
 23226                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 23227  0ABE  0864               	movf	(_threshold+1)^(0+256),w
 23228  0ABF  0140               	movlb	0	; select bank0
 23229  0AC0  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 23230  0AC1  0142               	movlb	2	; select bank2
 23231  0AC2  0863               	movf	_threshold^(0+256),w
 23232  0AC3  0140               	movlb	0	; select bank0
 23233  0AC4  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 23234  0AC5  319B  23D4  318A   	fcall	_ADCC_SetUpperThreshold
 23235                           
 23236                           ;beat.c: 114:         thresholdCount = 0;
 23237  0AC8  0142               	movlb	2	; select bank2
 23238  0AC9  01AC               	clrf	_thresholdCount^(0+256)
 23239  0ACA  01AD               	clrf	(_thresholdCount+1)^(0+256)
 23240                           
 23241                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 23242  0ACB  319B  23E6         	fcall	_CLOCK_getTime
 23243  0ACD  0140               	movlb	0	; select bank0
 23244  0ACE  0821               	movf	?_CLOCK_getTime+1,w
 23245  0ACF  0142               	movlb	2	; select bank2
 23246  0AD0  00B3               	movwf	(_lastBeat+1)^(0+256)
 23247  0AD1  0140               	movlb	0	; select bank0
 23248  0AD2  0820               	movf	?_CLOCK_getTime,w
 23249  0AD3  0142               	movlb	2	; select bank2
 23250  0AD4  00B2               	movwf	_lastBeat^(0+256)
 23251                           
 23252                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 23253  0AD5  0008               	return
 23254  0AD6                     l10929:	
 23255  0AD6  319B  23E6  318A   	fcall	_CLOCK_getTime
 23256  0AD9  0142               	movlb	2	; select bank2
 23257  0ADA  0832               	movf	_lastBeat^(0+256),w
 23258  0ADB  0140               	movlb	0	; select bank0
 23259  0ADC  0220               	subwf	?_CLOCK_getTime,w
 23260  0ADD  00A8               	movwf	??_BEAT_task
 23261  0ADE  0142               	movlb	2	; select bank2
 23262  0ADF  0833               	movf	(_lastBeat+1)^(0+256),w
 23263  0AE0  0140               	movlb	0	; select bank0
 23264  0AE1  3B21               	subwfb	?_CLOCK_getTime+1,w
 23265  0AE2  00A9               	movwf	??_BEAT_task+1
 23266  0AE3  3003               	movlw	3
 23267  0AE4  0229               	subwf	??_BEAT_task+1,w
 23268  0AE5  30E9               	movlw	233
 23269  0AE6  1903               	skipnz
 23270  0AE7  0228               	subwf	??_BEAT_task,w
 23271  0AE8  1C03               	skipc
 23272  0AE9  0008               	return
 23273                           
 23274                           ;beat.c: 119:         threshold -= 1;
 23275  0AEA  3001               	movlw	1
 23276  0AEB  0142               	movlb	2	; select bank2
 23277  0AEC  02E3               	subwf	_threshold^(0+256),f
 23278  0AED  3000               	movlw	0
 23279  0AEE  3BE4               	subwfb	(_threshold+1)^(0+256),f
 23280                           
 23281                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 23282  0AEF  0864               	movf	(_threshold+1)^(0+256),w
 23283  0AF0  0140               	movlb	0	; select bank0
 23284  0AF1  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 23285  0AF2  0142               	movlb	2	; select bank2
 23286  0AF3  0863               	movf	_threshold^(0+256),w
 23287  0AF4  0140               	movlb	0	; select bank0
 23288  0AF5  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 23289  0AF6  319B  23D4         	fcall	_ADCC_SetUpperThreshold
 23290  0AF8  0008               	return
 23291  0AF9                     __end_of_BEAT_task:	
 23292                           
 23293                           	psect	text86
 23294  10D2                     __ptext86:	
 23295 ;; *************** function ___lwdiv *****************
 23296 ;; Defined at:
 23297 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 23298 ;; Parameters:    Size  Location     Type
 23299 ;;  divisor         2    0[BANK0 ] unsigned int 
 23300 ;;  dividend        2    2[BANK0 ] unsigned int 
 23301 ;; Auto vars:     Size  Location     Type
 23302 ;;  quotient        2    6[BANK0 ] unsigned int 
 23303 ;;  counter         1    5[BANK0 ] unsigned char 
 23304 ;; Return value:  Size  Location     Type
 23305 ;;                  2    0[BANK0 ] unsigned int 
 23306 ;; Registers used:
 23307 ;;		wreg, status,2, status,0
 23308 ;; Tracked objects:
 23309 ;;		On entry : 0/0
 23310 ;;		On exit  : 0/0
 23311 ;;		Unchanged: 0/0
 23312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23313 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23314 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23315 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23316 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23317 ;;Total ram usage:        8 bytes
 23318 ;; Hardware stack levels used:    1
 23319 ;; Hardware stack levels required when called:    4
 23320 ;; This function calls:
 23321 ;;		Nothing
 23322 ;; This function is called by:
 23323 ;;		_TM1650_fastPrintNum
 23324 ;;		_TM1650_fastPrintNum_3digit
 23325 ;;		_BEAT_task
 23326 ;; This function uses a non-reentrant model
 23327 ;;
 23328                           
 23329                           
 23330                           ;psect for function ___lwdiv
 23331  10D2                     ___lwdiv:	
 23332                           
 23333                           ;incstack = 0
 23334                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 23335  10D2  0140               	movlb	0	; select bank0
 23336  10D3  01A6               	clrf	___lwdiv@quotient
 23337  10D4  01A7               	clrf	___lwdiv@quotient+1
 23338  10D5  0820               	movf	___lwdiv@divisor,w
 23339  10D6  0421               	iorwf	___lwdiv@divisor+1,w
 23340  10D7  1903               	btfsc	3,2
 23341  10D8  2902               	goto	l10141
 23342  10D9  01A5               	clrf	___lwdiv@counter
 23343  10DA  0AA5               	incf	___lwdiv@counter,f
 23344  10DB                     l10129:	
 23345  10DB  1BA1               	btfsc	___lwdiv@divisor+1,7
 23346  10DC  28E7               	goto	l10131
 23347  10DD  3001               	movlw	1
 23348  10DE                     u10365:	
 23349  10DE  35A0               	lslf	___lwdiv@divisor,f
 23350  10DF  0DA1               	rlf	___lwdiv@divisor+1,f
 23351  10E0  0B89               	decfsz	9,f
 23352  10E1  28DE               	goto	u10365
 23353  10E2  3001               	movlw	1
 23354  10E3  00A4               	movwf	??___lwdiv
 23355  10E4  0824               	movf	??___lwdiv,w
 23356  10E5  07A5               	addwf	___lwdiv@counter,f
 23357  10E6  28DB               	goto	l10129
 23358  10E7                     l10131:	
 23359  10E7  3001               	movlw	1
 23360  10E8                     u10385:	
 23361  10E8  35A6               	lslf	___lwdiv@quotient,f
 23362  10E9  0DA7               	rlf	___lwdiv@quotient+1,f
 23363  10EA  0B89               	decfsz	9,f
 23364  10EB  28E8               	goto	u10385
 23365  10EC  0821               	movf	___lwdiv@divisor+1,w
 23366  10ED  0223               	subwf	___lwdiv@dividend+1,w
 23367  10EE  1D03               	skipz
 23368  10EF  28F2               	goto	u10395
 23369  10F0  0820               	movf	___lwdiv@divisor,w
 23370  10F1  0222               	subwf	___lwdiv@dividend,w
 23371  10F2                     u10395:	
 23372  10F2  1C03               	skipc
 23373  10F3  28F9               	goto	l10137
 23374  10F4  0820               	movf	___lwdiv@divisor,w
 23375  10F5  02A2               	subwf	___lwdiv@dividend,f
 23376  10F6  0821               	movf	___lwdiv@divisor+1,w
 23377  10F7  3BA3               	subwfb	___lwdiv@dividend+1,f
 23378  10F8  1426               	bsf	___lwdiv@quotient,0
 23379  10F9                     l10137:	
 23380  10F9  3001               	movlw	1
 23381  10FA                     u10405:	
 23382  10FA  36A1               	lsrf	___lwdiv@divisor+1,f
 23383  10FB  0CA0               	rrf	___lwdiv@divisor,f
 23384  10FC  0B89               	decfsz	9,f
 23385  10FD  28FA               	goto	u10405
 23386  10FE  3001               	movlw	1
 23387  10FF  02A5               	subwf	___lwdiv@counter,f
 23388  1100  1D03               	btfss	3,2
 23389  1101  28E7               	goto	l10131
 23390  1102                     l10141:	
 23391  1102  0827               	movf	___lwdiv@quotient+1,w
 23392  1103  00A1               	movwf	?___lwdiv+1
 23393  1104  0826               	movf	___lwdiv@quotient,w
 23394  1105  00A0               	movwf	?___lwdiv
 23395  1106  0008               	return
 23396  1107                     __end_of___lwdiv:	
 23397                           
 23398                           	psect	text87
 23399  1BE6                     __ptext87:	
 23400 ;; *************** function _CLOCK_getTime *****************
 23401 ;; Defined at:
 23402 ;;		line 16 in file "clock.c"
 23403 ;; Parameters:    Size  Location     Type
 23404 ;;		None
 23405 ;; Auto vars:     Size  Location     Type
 23406 ;;		None
 23407 ;; Return value:  Size  Location     Type
 23408 ;;                  2    0[BANK0 ] unsigned short 
 23409 ;; Registers used:
 23410 ;;		wreg
 23411 ;; Tracked objects:
 23412 ;;		On entry : 0/0
 23413 ;;		On exit  : 0/0
 23414 ;;		Unchanged: 0/0
 23415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23420 ;;Total ram usage:        2 bytes
 23421 ;; Hardware stack levels used:    1
 23422 ;; Hardware stack levels required when called:    4
 23423 ;; This function calls:
 23424 ;;		Nothing
 23425 ;; This function is called by:
 23426 ;;		_main
 23427 ;;		_BUTTONS_task
 23428 ;;		_CONTROL_DMX
 23429 ;;		_CONTROL_MANUAL
 23430 ;;		_BEAT_task
 23431 ;;		_LED_task_BEAT_STROBE
 23432 ;; This function uses a non-reentrant model
 23433 ;;
 23434                           
 23435                           
 23436                           ;psect for function _CLOCK_getTime
 23437  1BE6                     _CLOCK_getTime:	
 23438                           
 23439                           ;clock.c: 17:     return currentTime;
 23440                           
 23441                           ;incstack = 0
 23442                           ; Regs used in _CLOCK_getTime: [wreg]
 23443  1BE6  0142               	movlb	2	; select bank2
 23444  1BE7  0839               	movf	(_currentTime+1)^(0+256),w
 23445  1BE8  0140               	movlb	0	; select bank0
 23446  1BE9  00A1               	movwf	?_CLOCK_getTime+1
 23447  1BEA  0142               	movlb	2	; select bank2
 23448  1BEB  0838               	movf	_currentTime^(0+256),w
 23449  1BEC  0140               	movlb	0	; select bank0
 23450  1BED  00A0               	movwf	?_CLOCK_getTime
 23451  1BEE  0008               	return
 23452  1BEF                     __end_of_CLOCK_getTime:	
 23453                           
 23454                           	psect	text88
 23455  1D71                     __ptext88:	
 23456 ;; *************** function _BEAT_init *****************
 23457 ;; Defined at:
 23458 ;;		line 39 in file "beat.c"
 23459 ;; Parameters:    Size  Location     Type
 23460 ;;		None
 23461 ;; Auto vars:     Size  Location     Type
 23462 ;;		None
 23463 ;; Return value:  Size  Location     Type
 23464 ;;                  1    wreg      void 
 23465 ;; Registers used:
 23466 ;;		wreg, status,2, status,0, pclath, cstack
 23467 ;; Tracked objects:
 23468 ;;		On entry : 0/0
 23469 ;;		On exit  : 0/0
 23470 ;;		Unchanged: 0/0
 23471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23476 ;;Total ram usage:        0 bytes
 23477 ;; Hardware stack levels used:    1
 23478 ;; Hardware stack levels required when called:    5
 23479 ;; This function calls:
 23480 ;;		_ADCC_SetADTIInterruptHandler
 23481 ;;		_ADCC_SetUpperThreshold
 23482 ;;		_ADCC_StartConversion
 23483 ;; This function is called by:
 23484 ;;		_main
 23485 ;; This function uses a non-reentrant model
 23486 ;;
 23487                           
 23488                           
 23489                           ;psect for function _BEAT_init
 23490  1D71                     _BEAT_init:	
 23491                           
 23492                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 23493                           
 23494                           ;incstack = 0
 23495                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 23496  1D71  0142               	movlb	2	; select bank2
 23497  1D72  0864               	movf	(_threshold+1)^(0+256),w
 23498  1D73  0140               	movlb	0	; select bank0
 23499  1D74  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 23500  1D75  0142               	movlb	2	; select bank2
 23501  1D76  0863               	movf	_threshold^(0+256),w
 23502  1D77  0140               	movlb	0	; select bank0
 23503  1D78  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 23504  1D79  319B  23D4  319D   	fcall	_ADCC_SetUpperThreshold
 23505                           
 23506                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 23507  1D7C  3092               	movlw	low _adcThresholdHandler
 23508  1D7D  0140               	movlb	0	; select bank0
 23509  1D7E  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 23510  1D7F  301B               	movlw	high _adcThresholdHandler
 23511  1D80  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 23512  1D81  319B  23CB  319D   	fcall	_ADCC_SetADTIInterruptHandler
 23513                           
 23514                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 23515  1D84  300F               	movlw	15
 23516  1D85  319B  23DD         	fcall	_ADCC_StartConversion
 23517  1D87  0008               	return
 23518  1D88                     __end_of_BEAT_init:	
 23519                           
 23520                           	psect	text89
 23521  1BDD                     __ptext89:	
 23522 ;; *************** function _ADCC_StartConversion *****************
 23523 ;; Defined at:
 23524 ;;		line 121 in file "mcc_generated_files/adcc.c"
 23525 ;; Parameters:    Size  Location     Type
 23526 ;;  channel         1    wreg     enum E10867
 23527 ;; Auto vars:     Size  Location     Type
 23528 ;;  channel         1    0[BANK0 ] enum E10867
 23529 ;; Return value:  Size  Location     Type
 23530 ;;                  1    wreg      void 
 23531 ;; Registers used:
 23532 ;;		wreg
 23533 ;; Tracked objects:
 23534 ;;		On entry : 0/0
 23535 ;;		On exit  : 0/0
 23536 ;;		Unchanged: 0/0
 23537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23541 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23542 ;;Total ram usage:        1 bytes
 23543 ;; Hardware stack levels used:    1
 23544 ;; Hardware stack levels required when called:    4
 23545 ;; This function calls:
 23546 ;;		Nothing
 23547 ;; This function is called by:
 23548 ;;		_BEAT_init
 23549 ;; This function uses a non-reentrant model
 23550 ;;
 23551                           
 23552                           
 23553                           ;psect for function _ADCC_StartConversion
 23554  1BDD                     _ADCC_StartConversion:	
 23555                           
 23556                           ;incstack = 0
 23557                           ; Regs used in _ADCC_StartConversion: [wreg]
 23558                           ;ADCC_StartConversion@channel stored from wreg
 23559  1BDD  0140               	movlb	0	; select bank0
 23560  1BDE  00A0               	movwf	ADCC_StartConversion@channel
 23561                           
 23562                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 23563  1BDF  0820               	movf	ADCC_StartConversion@channel,w
 23564  1BE0  0141               	movlb	1	; select bank1
 23565  1BE1  009F               	movwf	31	;volatile
 23566                           
 23567                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 23568  1BE2  0142               	movlb	2	; select bank2
 23569  1BE3  1791               	bsf	17,7	;volatile
 23570                           
 23571                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 23572  1BE4  1411               	bsf	17,0	;volatile
 23573  1BE5  0008               	return
 23574  1BE6                     __end_of_ADCC_StartConversion:	
 23575                           
 23576                           	psect	text90
 23577  1BD4                     __ptext90:	
 23578 ;; *************** function _ADCC_SetUpperThreshold *****************
 23579 ;; Defined at:
 23580 ;;		line 251 in file "mcc_generated_files/adcc.c"
 23581 ;; Parameters:    Size  Location     Type
 23582 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 23583 ;; Auto vars:     Size  Location     Type
 23584 ;;		None
 23585 ;; Return value:  Size  Location     Type
 23586 ;;                  1    wreg      void 
 23587 ;; Registers used:
 23588 ;;		wreg, status,2
 23589 ;; Tracked objects:
 23590 ;;		On entry : 0/0
 23591 ;;		On exit  : 0/0
 23592 ;;		Unchanged: 0/0
 23593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23594 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23597 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23598 ;;Total ram usage:        2 bytes
 23599 ;; Hardware stack levels used:    1
 23600 ;; Hardware stack levels required when called:    4
 23601 ;; This function calls:
 23602 ;;		Nothing
 23603 ;; This function is called by:
 23604 ;;		_BEAT_init
 23605 ;;		_BEAT_task
 23606 ;; This function uses a non-reentrant model
 23607 ;;
 23608                           
 23609                           
 23610                           ;psect for function _ADCC_SetUpperThreshold
 23611  1BD4                     _ADCC_SetUpperThreshold:	
 23612                           
 23613                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 23614                           
 23615                           ;incstack = 0
 23616                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 23617  1BD4  0140               	movlb	0	; select bank0
 23618  1BD5  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 23619  1BD6  0141               	movlb	1	; select bank1
 23620  1BD7  008F               	movwf	15	;volatile
 23621                           
 23622                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 23623  1BD8  0140               	movlb	0	; select bank0
 23624  1BD9  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 23625  1BDA  0141               	movlb	1	; select bank1
 23626  1BDB  008E               	movwf	14	;volatile
 23627  1BDC  0008               	return
 23628  1BDD                     __end_of_ADCC_SetUpperThreshold:	
 23629                           
 23630                           	psect	text91
 23631  1BCB                     __ptext91:	
 23632 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23633 ;; Defined at:
 23634 ;;		line 317 in file "mcc_generated_files/adcc.c"
 23635 ;; Parameters:    Size  Location     Type
 23636 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 23637 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 23638 ;; Auto vars:     Size  Location     Type
 23639 ;;		None
 23640 ;; Return value:  Size  Location     Type
 23641 ;;                  1    wreg      void 
 23642 ;; Registers used:
 23643 ;;		wreg
 23644 ;; Tracked objects:
 23645 ;;		On entry : 0/0
 23646 ;;		On exit  : 0/0
 23647 ;;		Unchanged: 0/0
 23648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23652 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23653 ;;Total ram usage:        2 bytes
 23654 ;; Hardware stack levels used:    1
 23655 ;; Hardware stack levels required when called:    4
 23656 ;; This function calls:
 23657 ;;		Nothing
 23658 ;; This function is called by:
 23659 ;;		_ADCC_Initialize
 23660 ;;		_BEAT_init
 23661 ;; This function uses a non-reentrant model
 23662 ;;
 23663                           
 23664                           
 23665                           ;psect for function _ADCC_SetADTIInterruptHandler
 23666  1BCB                     _ADCC_SetADTIInterruptHandler:	
 23667                           
 23668                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23669                           
 23670                           ;incstack = 0
 23671                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 23672  1BCB  0140               	movlb	0	; select bank0
 23673  1BCC  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 23674  1BCD  0142               	movlb	2	; select bank2
 23675  1BCE  00EC               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 23676  1BCF  0140               	movlb	0	; select bank0
 23677  1BD0  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 23678  1BD1  0142               	movlb	2	; select bank2
 23679  1BD2  00EB               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 23680  1BD3  0008               	return
 23681  1BD4                     __end_of_ADCC_SetADTIInterruptHandler:	
 23682                           
 23683                           	psect	intentry
 23684  0004                     __pintentry:	
 23685 ;; *************** function _INTERRUPT_InterruptManager *****************
 23686 ;; Defined at:
 23687 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23688 ;; Parameters:    Size  Location     Type
 23689 ;;		None
 23690 ;; Auto vars:     Size  Location     Type
 23691 ;;		None
 23692 ;; Return value:  Size  Location     Type
 23693 ;;                  1    wreg      void 
 23694 ;; Registers used:
 23695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23696 ;; Tracked objects:
 23697 ;;		On entry : 0/0
 23698 ;;		On exit  : 0/0
 23699 ;;		Unchanged: 0/0
 23700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23705 ;;Total ram usage:        0 bytes
 23706 ;; Hardware stack levels used:    1
 23707 ;; Hardware stack levels required when called:    3
 23708 ;; This function calls:
 23709 ;;		Absolute function
 23710 ;;		_ADCC_ThresholdISR
 23711 ;;		_DMX_interrupt
 23712 ;;		_EUSART1_Receive_ISR
 23713 ;;		_I2C1_BusCollisionISR
 23714 ;;		_I2C1_ISR
 23715 ;;		_TMR0_ISR
 23716 ;; This function is called by:
 23717 ;;		Interrupt level 1
 23718 ;; This function uses a non-reentrant model
 23719 ;;
 23720                           
 23721  0004                     _INTERRUPT_InterruptManager:	
 23722                           
 23723                           ;incstack = 0
 23724 ;; hardware stack exceeded
 23725  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 23726                           
 23727                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23728  0005  3180               	pagesel	$
 23729                           
 23730                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 23731  0006  014E               	movlb	14	; select bank14
 23732  0007  1A96               	btfsc	22,5	;volatile
 23733  0008  1E8C               	btfss	12,5	;volatile
 23734  0009  280E               	goto	i1l427
 23735                           
 23736                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 23737  000A  319C  248B  3180   	fcall	_TMR0_ISR
 23738                           
 23739                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 23740  000D  282E               	goto	i1l439
 23741  000E                     i1l427:	
 23742                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 23743                           
 23744  000E  1F0B               	btfss	11,6	;volatile
 23745  000F  282E               	goto	i1l439
 23746                           
 23747                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 23748  0010  1899               	btfsc	25,1	;volatile
 23749  0011  1C8F               	btfss	15,1	;volatile
 23750  0012  2817               	goto	i1l430
 23751                           
 23752                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 23753  0013  319B  2386  3180   	fcall	_I2C1_BusCollisionISR
 23754                           
 23755                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 23756  0016  282E               	goto	i1l439
 23757  0017                     i1l430:	
 23758                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 23759                           
 23760  0017  1819               	btfsc	25,0	;volatile
 23761  0018  1C0F               	btfss	15,0	;volatile
 23762  0019  281E               	goto	i1l432
 23763                           
 23764                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 23765  001A  318E  26AE  3180   	fcall	_I2C1_ISR
 23766                           
 23767                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 23768  001D  282E               	goto	i1l439
 23769  001E                     i1l432:	
 23770                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 23771                           
 23772  001E  1897               	btfsc	23,1	;volatile
 23773  001F  1C8D               	btfss	13,1	;volatile
 23774  0020  2825               	goto	i1l434
 23775                           
 23776                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 23777  0021  319C  247E  3180   	fcall	_ADCC_ThresholdISR
 23778                           
 23779                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 23780  0024  282E               	goto	i1l439
 23781  0025                     i1l434:	
 23782                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 23783                           
 23784  0025  1A99               	btfsc	25,5	;volatile
 23785  0026  1E8F               	btfss	15,5	;volatile
 23786  0027  282E               	goto	i1l439
 23787                           
 23788                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 23789  0028  0143               	movlb	3	; select bank3
 23790  0029  086B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 23791  002A  008A               	movwf	10
 23792  002B  086A               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 23793  002C  000A               	callw
 23794  002D  3180               	pagesel	$
 23795  002E                     i1l439:	
 23796                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 23797                           
 23798  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 23799  002F  0009               	retfie
 23800  0030                     __end_of_INTERRUPT_InterruptManager:	
 23801                           
 23802                           	psect	text93
 23803  1C8B                     __ptext93:	
 23804 ;; *************** function _TMR0_ISR *****************
 23805 ;; Defined at:
 23806 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 23807 ;; Parameters:    Size  Location     Type
 23808 ;;		None
 23809 ;; Auto vars:     Size  Location     Type
 23810 ;;		None
 23811 ;; Return value:  Size  Location     Type
 23812 ;;                  1    wreg      void 
 23813 ;; Registers used:
 23814 ;;		wreg, status,2, status,0, pclath, cstack
 23815 ;; Tracked objects:
 23816 ;;		On entry : 0/0
 23817 ;;		On exit  : 0/0
 23818 ;;		Unchanged: 0/0
 23819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23824 ;;Total ram usage:        0 bytes
 23825 ;; Hardware stack levels used:    1
 23826 ;; Hardware stack levels required when called:    1
 23827 ;; This function calls:
 23828 ;;		Absolute function
 23829 ;;		_CLOCK_timerCallback
 23830 ;;		_TMR0_DefaultInterruptHandler
 23831 ;; This function is called by:
 23832 ;;		_INTERRUPT_InterruptManager
 23833 ;; This function uses a non-reentrant model
 23834 ;;
 23835                           
 23836                           
 23837                           ;psect for function _TMR0_ISR
 23838  1C8B                     _TMR0_ISR:	
 23839                           
 23840                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 23841                           
 23842                           ;incstack = 0
 23843 ;; hardware stack exceeded
 23844                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 23845  1C8B  014E               	movlb	14	; select bank14
 23846  1C8C  128C               	bcf	12,5	;volatile
 23847                           
 23848                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 23849  1C8D  0142               	movlb	2	; select bank2
 23850  1C8E  086D               	movf	_TMR0_InterruptHandler^(0+256),w
 23851  1C8F  046E               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 23852  1C90  1903               	btfsc	3,2
 23853  1C91  0008               	return
 23854                           
 23855                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 23856  1C92  086E               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 23857  1C93  008A               	movwf	10
 23858  1C94  086D               	movf	_TMR0_InterruptHandler^(0+256),w
 23859  1C95  000A               	callw
 23860  1C96  319C               	pagesel	$
 23861  1C97  0008               	return
 23862  1C98                     __end_of_TMR0_ISR:	
 23863                           
 23864                           	psect	text94
 23865  1B9F                     __ptext94:	
 23866 ;; *************** function _CLOCK_timerCallback *****************
 23867 ;; Defined at:
 23868 ;;		line 20 in file "clock.c"
 23869 ;; Parameters:    Size  Location     Type
 23870 ;;		None
 23871 ;; Auto vars:     Size  Location     Type
 23872 ;;		None
 23873 ;; Return value:  Size  Location     Type
 23874 ;;                  1    wreg      void 
 23875 ;; Registers used:
 23876 ;;		wreg
 23877 ;; Tracked objects:
 23878 ;;		On entry : 0/0
 23879 ;;		On exit  : 0/0
 23880 ;;		Unchanged: 0/0
 23881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23886 ;;Total ram usage:        0 bytes
 23887 ;; Hardware stack levels used:    1
 23888 ;; This function calls:
 23889 ;;		Nothing
 23890 ;; This function is called by:
 23891 ;;		_CLOCK_init
 23892 ;;		_TMR0_ISR
 23893 ;; This function uses a non-reentrant model
 23894 ;;
 23895                           
 23896                           
 23897                           ;psect for function _CLOCK_timerCallback
 23898  1B9F                     _CLOCK_timerCallback:	
 23899                           
 23900                           ;clock.c: 21:     currentTime++;
 23901                           
 23902                           ;incstack = 0
 23903 ;; hardware stack exceeded
 23904                           ; Regs used in _CLOCK_timerCallback: [wreg]
 23905  1B9F  3001               	movlw	1
 23906  1BA0  0142               	movlb	2	; select bank2
 23907  1BA1  07B8               	addwf	_currentTime^(0+256),f
 23908  1BA2  3000               	movlw	0
 23909  1BA3  3DB9               	addwfc	(_currentTime+1)^(0+256),f
 23910  1BA4  0008               	return
 23911  1BA5                     __end_of_CLOCK_timerCallback:	
 23912                           
 23913                           	psect	text95
 23914  1B82                     __ptext95:	
 23915 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 23916 ;; Defined at:
 23917 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 23918 ;; Parameters:    Size  Location     Type
 23919 ;;		None
 23920 ;; Auto vars:     Size  Location     Type
 23921 ;;		None
 23922 ;; Return value:  Size  Location     Type
 23923 ;;                  1    wreg      void 
 23924 ;; Registers used:
 23925 ;;		None
 23926 ;; Tracked objects:
 23927 ;;		On entry : 0/0
 23928 ;;		On exit  : 0/0
 23929 ;;		Unchanged: 0/0
 23930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23935 ;;Total ram usage:        0 bytes
 23936 ;; Hardware stack levels used:    1
 23937 ;; This function calls:
 23938 ;;		Nothing
 23939 ;; This function is called by:
 23940 ;;		_TMR0_Initialize
 23941 ;;		_TMR0_ISR
 23942 ;; This function uses a non-reentrant model
 23943 ;;
 23944                           
 23945                           
 23946                           ;psect for function _TMR0_DefaultInterruptHandler
 23947  1B82                     _TMR0_DefaultInterruptHandler:	
 23948                           
 23949                           ;incstack = 0
 23950 ;; hardware stack exceeded
 23951                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 23952  1B82  0008               	return
 23953  1B83                     __end_of_TMR0_DefaultInterruptHandler:	
 23954                           
 23955                           	psect	text96
 23956  0EAE                     __ptext96:	
 23957 ;; *************** function _I2C1_ISR *****************
 23958 ;; Defined at:
 23959 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 23960 ;; Parameters:    Size  Location     Type
 23961 ;;		None
 23962 ;; Auto vars:     Size  Location     Type
 23963 ;;		None
 23964 ;; Return value:  Size  Location     Type
 23965 ;;                  1    wreg      void 
 23966 ;; Registers used:
 23967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23968 ;; Tracked objects:
 23969 ;;		On entry : 0/0
 23970 ;;		On exit  : 0/0
 23971 ;;		Unchanged: 0/0
 23972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23975 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23976 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23977 ;;Total ram usage:        4 bytes
 23978 ;; Hardware stack levels used:    1
 23979 ;; Hardware stack levels required when called:    1
 23980 ;; This function calls:
 23981 ;;		_I2C1_FunctionComplete
 23982 ;;		_I2C1_Stop
 23983 ;; This function is called by:
 23984 ;;		_INTERRUPT_InterruptManager
 23985 ;; This function uses a non-reentrant model
 23986 ;;
 23987                           
 23988                           
 23989                           ;psect for function _I2C1_ISR
 23990  0EAE                     _I2C1_ISR:	
 23991                           
 23992                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 23993                           
 23994                           ;incstack = 0
 23995 ;; hardware stack exceeded
 23996                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23997  0EAE  014E               	movlb	14	; select bank14
 23998  0EAF  100F               	bcf	15,0	;volatile
 23999                           
 24000                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 24001  0EB0  0143               	movlb	3	; select bank3
 24002  0EB1  1F90               	btfss	16,7	;volatile
 24003  0EB2  2FD3               	goto	i1l6383
 24004                           
 24005                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 24006  0EB3  1390               	bcf	16,7	;volatile
 24007                           
 24008                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 24009  0EB4  0141               	movlb	1	; select bank1
 24010  0EB5  01E6               	clrf	_i2c1_state^(0+128)
 24011                           
 24012                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 24013  0EB6  0871               	movf	_p_i2c1_current,w
 24014  0EB7  3E02               	addlw	2
 24015  0EB8  0086               	movwf	6
 24016  0EB9  3001               	movlw	1	; select bank2/3
 24017  0EBA  0087               	movwf	7
 24018  0EBB  0801               	movf	1,w
 24019  0EBC  0086               	movwf	6
 24020  0EBD  0187               	clrf	7
 24021  0EBE  0181               	clrf	1
 24022  0EBF  0A81               	incf	1,f
 24023                           
 24024                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 24025  0EC0  01F1               	clrf	_p_i2c1_current
 24026  0EC1  0008               	return
 24027  0EC2                     i1l547:	
 24028                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 24029                           
 24030                           
 24031                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 24032  0EC2  18C7               	btfsc	(_i2c1_object^(0+128)+2),1
 24033  0EC3  0008               	return
 24034                           
 24035                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 24036  0EC4  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 24037  0EC5  00F9               	movwf	??_I2C1_ISR
 24038  0EC6  0879               	movf	??_I2C1_ISR,w
 24039  0EC7  00F1               	movwf	_p_i2c1_current
 24040                           
 24041                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 24042  0EC8  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 24043  0EC9  0086               	movwf	6
 24044  0ECA  3001               	movlw	1	; select bank2/3
 24045  0ECB  0087               	movwf	7
 24046  0ECC  0801               	movf	1,w
 24047  0ECD  00F9               	movwf	??_I2C1_ISR
 24048  0ECE  0879               	movf	??_I2C1_ISR,w
 24049  0ECF  00E5               	movwf	_i2c1_trb_count^(0+128)
 24050                           
 24051                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 24052  0ED0  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 24053  0ED1  0086               	movwf	6
 24054  0ED2  3001               	movlw	1	; select bank2/3
 24055  0ED3  0087               	movwf	7
 24056  0ED4  3001               	movlw	1	; select bank2/3
 24057  0ED5  3F41               	moviw [1]fsr1
 24058  0ED6  00F2               	movwf	_p_i2c1_trb_current
 24059                           
 24060                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 24061  0ED7  3003               	movlw	3
 24062  0ED8  00F9               	movwf	??_I2C1_ISR
 24063  0ED9  0879               	movf	??_I2C1_ISR,w
 24064  0EDA  07C6               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 24065                           
 24066                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 24067  0EDB  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 24068  0EDC  3A5F               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 24069  0EDD  1D03               	skipz
 24070  0EDE  2EE3               	goto	i1l6271
 24071                           
 24072                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 24073  0EDF  305C               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 24074  0EE0  00F9               	movwf	??_I2C1_ISR
 24075  0EE1  0879               	movf	??_I2C1_ISR,w
 24076  0EE2  00C6               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 24077  0EE3                     i1l6271:	
 24078                           
 24079                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 24080  0EE3  1047               	bcf	(_i2c1_object^(0+128)+2),0
 24081                           
 24082                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 24083  0EE4  0846               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 24084  0EE5  0645               	xorwf	_i2c1_object^(0+128),w
 24085  0EE6  1903               	btfsc	3,2
 24086                           
 24087                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 24088  0EE7  14C7               	bsf	(_i2c1_object^(0+128)+2),1
 24089                           
 24090                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 24091                           
 24092                           ;mcc_generated_files/i2c1.c: 290:                 }
 24093  0EE8  0143               	movlb	3	; select bank3
 24094  0EE9  1411               	bsf	17,0	;volatile
 24095  0EEA                     i1l6275:	
 24096                           
 24097                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 24098  0EEA  3002               	movlw	2
 24099  0EEB  00F9               	movwf	??_I2C1_ISR
 24100  0EEC  0879               	movf	??_I2C1_ISR,w
 24101  0EED  0141               	movlb	1	; select bank1
 24102  0EEE  00E6               	movwf	_i2c1_state^(0+128)
 24103  0EEF  0008               	return
 24104  0EF0                     i1l552:	
 24105                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 24106                           
 24107  0EF0  2F7C               	goto	i1l573
 24108  0EF1                     i1l553:	
 24109                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 24110                           
 24111                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 24112                           
 24113                           
 24114                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 24115  0EF1  0143               	movlb	3	; select bank3
 24116  0EF2  1F11               	btfss	17,6	;volatile
 24117  0EF3  2EFD               	goto	i1l6283
 24118                           
 24119                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 24120  0EF4  3001               	movlw	1
 24121  0EF5  00F9               	movwf	??_I2C1_ISR
 24122  0EF6  0879               	movf	??_I2C1_ISR,w
 24123  0EF7  0141               	movlb	1	; select bank1
 24124  0EF8  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 24125                           
 24126                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 24127  0EF9  3004               	movlw	4
 24128  0EFA  319D  25B8         	fcall	_I2C1_Stop
 24129                           
 24130                           ;mcc_generated_files/i2c1.c: 319:             }
 24131  0EFC  0008               	return
 24132  0EFD                     i1l6283:	
 24133                           
 24134                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 24135  0EFD  0876               	movf	I2C1_ISR@i2c_address+1,w
 24136  0EFE  00FA               	movwf	??_I2C1_ISR+1
 24137  0EFF  0875               	movf	I2C1_ISR@i2c_address,w
 24138  0F00  00F9               	movwf	??_I2C1_ISR
 24139  0F01  36FA               	lsrf	??_I2C1_ISR+1,f
 24140  0F02  0CF9               	rrf	??_I2C1_ISR,f
 24141  0F03  0879               	movf	??_I2C1_ISR,w
 24142  0F04  008C               	movwf	12	;volatile
 24143                           
 24144                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 24145  0F05  1C75               	btfss	I2C1_ISR@i2c_address,0
 24146  0F06  2F0D               	goto	i1l6289
 24147                           
 24148                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 24149  0F07  300B               	movlw	11
 24150  0F08  00F9               	movwf	??_I2C1_ISR
 24151  0F09  0879               	movf	??_I2C1_ISR,w
 24152  0F0A  0141               	movlb	1	; select bank1
 24153  0F0B  00E6               	movwf	_i2c1_state^(0+128)
 24154                           
 24155                           ;mcc_generated_files/i2c1.c: 331:                 }
 24156  0F0C  0008               	return
 24157  0F0D                     i1l6289:	
 24158                           
 24159                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 24160  0F0D  3003               	movlw	3
 24161  0F0E  00F9               	movwf	??_I2C1_ISR
 24162  0F0F  0879               	movf	??_I2C1_ISR,w
 24163  0F10  0141               	movlb	1	; select bank1
 24164  0F11  00E6               	movwf	_i2c1_state^(0+128)
 24165  0F12  0008               	return
 24166  0F13                     i1l558:	
 24167                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 24168                           
 24169                           
 24170                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 24171  0F13  0143               	movlb	3	; select bank3
 24172  0F14  1F11               	btfss	17,6	;volatile
 24173  0F15  2F1F               	goto	i1l559
 24174                           
 24175                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 24176  0F16  3001               	movlw	1
 24177  0F17  00F9               	movwf	??_I2C1_ISR
 24178  0F18  0879               	movf	??_I2C1_ISR,w
 24179  0F19  0141               	movlb	1	; select bank1
 24180  0F1A  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 24181                           
 24182                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 24183  0F1B  3004               	movlw	4
 24184  0F1C  319D  25B8         	fcall	_I2C1_Stop
 24185                           
 24186                           ;mcc_generated_files/i2c1.c: 347:             }
 24187  0F1E  0008               	return
 24188  0F1F                     i1l559:	
 24189                           ;mcc_generated_files/i2c1.c: 348:             else
 24190                           
 24191                           
 24192                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 24193  0F1F  1491               	bsf	17,1	;volatile
 24194                           
 24195                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 24196  0F20  0876               	movf	I2C1_ISR@i2c_address+1,w
 24197  0F21  00FA               	movwf	??_I2C1_ISR+1
 24198  0F22  0875               	movf	I2C1_ISR@i2c_address,w
 24199  0F23  00F9               	movwf	??_I2C1_ISR
 24200  0F24  087A               	movf	??_I2C1_ISR+1,w
 24201  0F25  00F9               	movwf	??_I2C1_ISR
 24202  0F26  01FA               	clrf	??_I2C1_ISR+1
 24203  0F27  3006               	movlw	6
 24204  0F28  0579               	andwf	??_I2C1_ISR,w
 24205  0F29  00FB               	movwf	??_I2C1_ISR+2
 24206  0F2A  3000               	movlw	0
 24207  0F2B  057A               	andwf	??_I2C1_ISR+1,w
 24208  0F2C  00FC               	movwf	??_I2C1_ISR+3
 24209  0F2D  30F0               	movlw	240
 24210  0F2E  047B               	iorwf	??_I2C1_ISR+2,w
 24211  0F2F  00F5               	movwf	I2C1_ISR@i2c_address
 24212  0F30  3000               	movlw	0
 24213  0F31  047C               	iorwf	??_I2C1_ISR+3,w
 24214  0F32  00F6               	movwf	I2C1_ISR@i2c_address+1
 24215                           
 24216                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 24217  0F33  1475               	bsf	I2C1_ISR@i2c_address,0
 24218                           
 24219                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 24220  0F34  0141               	movlb	1	; select bank1
 24221  0F35  01E2               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 24222  0F36  0AE2               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 24223  0F37  2EEA               	goto	i1l6275
 24224  0F38                     i1l6303:	
 24225                           
 24226                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 24227  0F38  0362               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 24228  0F39  1903               	btfsc	3,2
 24229  0F3A  2F51               	goto	i1l6323
 24230                           
 24231                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 24232  0F3B  0872               	movf	_p_i2c1_trb_current,w
 24233  0F3C  0086               	movwf	6
 24234  0F3D  3001               	movlw	1	; select bank2/3
 24235  0F3E  0087               	movwf	7
 24236  0F3F  3F40               	moviw [0]fsr1
 24237  0F40  00F5               	movwf	I2C1_ISR@i2c_address
 24238  0F41  3F41               	moviw [1]fsr1
 24239  0F42  00F6               	movwf	I2C1_ISR@i2c_address+1
 24240                           
 24241                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 24242  0F43  0872               	movf	_p_i2c1_trb_current,w
 24243  0F44  0086               	movwf	6
 24244  0F45  3001               	movlw	1	; select bank2/3
 24245  0F46  0087               	movwf	7
 24246  0F47  3001               	movlw	1	; select bank2/3
 24247  0F48  3F43               	moviw [3]fsr1
 24248  0F49  00E4               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 24249                           
 24250                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 24251  0F4A  0872               	movf	_p_i2c1_trb_current,w
 24252  0F4B  0086               	movwf	6
 24253  0F4C  3001               	movlw	1	; select bank2/3
 24254  0F4D  0087               	movwf	7
 24255  0F4E  3001               	movlw	1	; select bank2/3
 24256  0F4F  3F42               	moviw [2]fsr1
 24257  0F50  00E3               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 24258  0F51                     i1l6323:	
 24259                           
 24260                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 24261  0F51  0875               	movf	I2C1_ISR@i2c_address,w
 24262  0F52  0143               	movlb	3	; select bank3
 24263  0F53  008C               	movwf	12	;volatile
 24264                           
 24265                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 24266  0F54  1C75               	btfss	I2C1_ISR@i2c_address,0
 24267  0F55  2F0D               	goto	i1l6289
 24268                           
 24269                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 24270  0F56  3005               	movlw	5
 24271  0F57  00F9               	movwf	??_I2C1_ISR
 24272  0F58  0879               	movf	??_I2C1_ISR,w
 24273  0F59  0141               	movlb	1	; select bank1
 24274  0F5A  00E6               	movwf	_i2c1_state^(0+128)
 24275                           
 24276                           ;mcc_generated_files/i2c1.c: 419:                 }
 24277  0F5B  0008               	return
 24278  0F5C                     i1l569:	
 24279                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 24280                           
 24281                           
 24282                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 24283  0F5C  0143               	movlb	3	; select bank3
 24284  0F5D  1F11               	btfss	17,6	;volatile
 24285  0F5E  2F6A               	goto	i1l6337
 24286                           
 24287                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 24288  0F5F  3001               	movlw	1
 24289  0F60  00F9               	movwf	??_I2C1_ISR
 24290  0F61  0879               	movf	??_I2C1_ISR,w
 24291  0F62  0141               	movlb	1	; select bank1
 24292  0F63  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 24293                           
 24294                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 24295  0F64  0143               	movlb	3	; select bank3
 24296  0F65  1311               	bcf	17,6	;volatile
 24297                           
 24298                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 24299  0F66  3005               	movlw	5
 24300  0F67  319D  25B8         	fcall	_I2C1_Stop
 24301                           
 24302                           ;mcc_generated_files/i2c1.c: 442:             }
 24303  0F69  0008               	return
 24304  0F6A                     i1l6337:	
 24305                           
 24306                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 24307  0F6A  3001               	movlw	1
 24308  0F6B  0141               	movlb	1	; select bank1
 24309  0F6C  02E3               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 24310  0F6D  0A63               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 24311  0F6E  1D03               	btfss	3,2
 24312  0F6F  2F7F               	goto	i1l6345
 24313                           
 24314                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 24315  0F70  3004               	movlw	4
 24316  0F71  00F9               	movwf	??_I2C1_ISR
 24317  0F72  0879               	movf	??_I2C1_ISR,w
 24318  0F73  07F2               	addwf	_p_i2c1_trb_current,f
 24319                           
 24320                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 24321  0F74  3001               	movlw	1
 24322  0F75  02E5               	subwf	_i2c1_trb_count^(0+128),f
 24323  0F76  1D03               	btfss	3,2
 24324  0F77  2F7C               	goto	i1l573
 24325                           
 24326                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 24327  0F78  3000               	movlw	0
 24328  0F79  319D  25B8         	fcall	_I2C1_Stop
 24329                           
 24330                           ;mcc_generated_files/i2c1.c: 457:                     }
 24331  0F7B  0008               	return
 24332  0F7C                     i1l573:	
 24333                           ;mcc_generated_files/i2c1.c: 458:                     else
 24334                           
 24335                           
 24336                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 24337  0F7C  0143               	movlb	3	; select bank3
 24338  0F7D  1491               	bsf	17,1	;volatile
 24339  0F7E  2EEA               	goto	i1l6275
 24340  0F7F                     i1l6345:	
 24341                           
 24342                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 24343  0F7F  0864               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 24344  0F80  0086               	movwf	6
 24345  0F81  0187               	clrf	7
 24346  0F82  0801               	movf	1,w
 24347  0F83  0143               	movlb	3	; select bank3
 24348  0F84  008C               	movwf	12	;volatile
 24349  0F85  3001               	movlw	1
 24350  0F86  00F9               	movwf	??_I2C1_ISR
 24351  0F87  0879               	movf	??_I2C1_ISR,w
 24352  0F88  0141               	movlb	1	; select bank1
 24353  0F89  07E4               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 24354  0F8A  0008               	return
 24355  0F8B                     i1l576:	
 24356                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 24357                           
 24358                           
 24359                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 24360  0F8B  0143               	movlb	3	; select bank3
 24361  0F8C  1F11               	btfss	17,6	;volatile
 24362  0F8D  2F99               	goto	i1l577
 24363                           
 24364                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 24365  0F8E  3001               	movlw	1
 24366  0F8F  00F9               	movwf	??_I2C1_ISR
 24367  0F90  0879               	movf	??_I2C1_ISR,w
 24368  0F91  0141               	movlb	1	; select bank1
 24369  0F92  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 24370                           
 24371                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 24372  0F93  3004               	movlw	4
 24373  0F94  319D  25B8         	fcall	_I2C1_Stop
 24374                           
 24375                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 24376  0F96  0143               	movlb	3	; select bank3
 24377  0F97  1311               	bcf	17,6	;volatile
 24378                           
 24379                           ;mcc_generated_files/i2c1.c: 495:             }
 24380  0F98  0008               	return
 24381  0F99                     i1l577:	
 24382                           ;mcc_generated_files/i2c1.c: 496:             else
 24383                           
 24384                           
 24385                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 24386  0F99  1591               	bsf	17,3	;volatile
 24387                           
 24388                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 24389  0F9A  3008               	movlw	8
 24390  0F9B  00F9               	movwf	??_I2C1_ISR
 24391  0F9C  0879               	movf	??_I2C1_ISR,w
 24392  0F9D  0141               	movlb	1	; select bank1
 24393  0F9E  00E6               	movwf	_i2c1_state^(0+128)
 24394  0F9F  0008               	return
 24395  0FA0                     i1l6357:	
 24396                           
 24397                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 24398  0FA0  3008               	movlw	8
 24399  0FA1  00F9               	movwf	??_I2C1_ISR
 24400  0FA2  0879               	movf	??_I2C1_ISR,w
 24401  0FA3  00E6               	movwf	_i2c1_state^(0+128)
 24402                           
 24403                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 24404  0FA4  0143               	movlb	3	; select bank3
 24405  0FA5  1591               	bsf	17,3	;volatile
 24406                           
 24407                           ;mcc_generated_files/i2c1.c: 513:             break;
 24408  0FA6  0008               	return
 24409  0FA7                     i1l6361:	
 24410                           
 24411                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 24412  0FA7  0143               	movlb	3	; select bank3
 24413  0FA8  080C               	movf	12,w	;volatile
 24414  0FA9  00F9               	movwf	??_I2C1_ISR
 24415  0FAA  0141               	movlb	1	; select bank1
 24416  0FAB  0864               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 24417  0FAC  0086               	movwf	6
 24418  0FAD  0187               	clrf	7
 24419  0FAE  0879               	movf	??_I2C1_ISR,w
 24420  0FAF  0081               	movwf	1
 24421  0FB0  3001               	movlw	1
 24422  0FB1  00F9               	movwf	??_I2C1_ISR
 24423  0FB2  0879               	movf	??_I2C1_ISR,w
 24424  0FB3  07E4               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 24425                           
 24426                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 24427  0FB4  3001               	movlw	1
 24428  0FB5  02E3               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 24429  0FB6  1903               	btfsc	3,2
 24430  0FB7  2FC0               	goto	i1l581
 24431                           
 24432                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 24433  0FB8  0143               	movlb	3	; select bank3
 24434  0FB9  1291               	bcf	17,5	;volatile
 24435                           
 24436                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 24437  0FBA  3006               	movlw	6
 24438  0FBB  00F9               	movwf	??_I2C1_ISR
 24439  0FBC  0879               	movf	??_I2C1_ISR,w
 24440  0FBD  0141               	movlb	1	; select bank1
 24441  0FBE  00E6               	movwf	_i2c1_state^(0+128)
 24442                           
 24443                           ;mcc_generated_files/i2c1.c: 532:             }
 24444  0FBF  2FC4               	goto	i1l6373
 24445  0FC0                     i1l581:	
 24446                           ;mcc_generated_files/i2c1.c: 533:             else
 24447                           
 24448                           
 24449                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 24450  0FC0  0143               	movlb	3	; select bank3
 24451  0FC1  1691               	bsf	17,5	;volatile
 24452                           
 24453                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 24454  0FC2  319C  24C4         	fcall	_I2C1_FunctionComplete
 24455  0FC4                     i1l6373:	
 24456                           
 24457                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 24458  0FC4  0143               	movlb	3	; select bank3
 24459  0FC5  1611               	bsf	17,4	;volatile
 24460                           
 24461                           ;mcc_generated_files/i2c1.c: 545:             break;
 24462  0FC6  0008               	return
 24463  0FC7                     i1l6375:	
 24464                           
 24465                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 24466  0FC7  3000               	movlw	0
 24467  0FC8  319D  25B8         	fcall	_I2C1_Stop
 24468                           
 24469                           ;mcc_generated_files/i2c1.c: 552:             break;
 24470  0FCA  0008               	return
 24471  0FCB                     i1l6377:	
 24472                           
 24473                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 24474  0FCB  3001               	movlw	1
 24475  0FCC  00F9               	movwf	??_I2C1_ISR
 24476  0FCD  0879               	movf	??_I2C1_ISR,w
 24477  0FCE  07C9               	addwf	(_i2c1_object^(0+128)+4),f
 24478                           
 24479                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 24480  0FCF  3006               	movlw	6
 24481  0FD0  319D  25B8         	fcall	_I2C1_Stop
 24482                           
 24483                           ;mcc_generated_files/i2c1.c: 560:             break;
 24484  0FD2  0008               	return
 24485  0FD3                     i1l6383:	
 24486  0FD3  0141               	movlb	1	; select bank1
 24487  0FD4  0866               	movf	_i2c1_state^(0+128),w
 24488  0FD5  00F9               	movwf	??_I2C1_ISR
 24489  0FD6  01FA               	clrf	??_I2C1_ISR+1
 24490                           
 24491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24492                           ; Switch size 1, requested type "simple"
 24493                           ; Number of cases is 1, Range of values is 0 to 0
 24494                           ; switch strategies available:
 24495                           ; Name         Instructions Cycles
 24496                           ; simple_byte            4     3 (average)
 24497                           ; direct_byte            8     6 (fixed)
 24498                           ; jumptable            260     6 (fixed)
 24499                           ;	Chosen strategy is simple_byte
 24500  0FD7  087A               	movf	??_I2C1_ISR+1,w
 24501  0FD8  3A00               	xorlw	0	; case 0
 24502  0FD9  1903               	skipnz
 24503  0FDA  2FDC               	goto	i1l12523
 24504  0FDB  2FCB               	goto	i1l6377
 24505  0FDC                     i1l12523:	
 24506                           
 24507                           ; Switch size 1, requested type "simple"
 24508                           ; Number of cases is 11, Range of values is 0 to 11
 24509                           ; switch strategies available:
 24510                           ; Name         Instructions Cycles
 24511                           ; direct_byte           30     6 (fixed)
 24512                           ; simple_byte           34    18 (average)
 24513                           ; jumptable            260     6 (fixed)
 24514                           ;	Chosen strategy is simple_byte
 24515  0FDC  0879               	movf	??_I2C1_ISR,w
 24516  0FDD  3A00               	xorlw	0	; case 0
 24517  0FDE  1903               	skipnz
 24518  0FDF  2EC2               	goto	i1l547
 24519  0FE0  3A01               	xorlw	1	; case 1
 24520  0FE1  1903               	skipnz
 24521  0FE2  2EF0               	goto	i1l552
 24522  0FE3  3A03               	xorlw	3	; case 2
 24523  0FE4  1903               	skipnz
 24524  0FE5  2F38               	goto	i1l6303
 24525  0FE6  3A01               	xorlw	1	; case 3
 24526  0FE7  1903               	skipnz
 24527  0FE8  2F5C               	goto	i1l569
 24528  0FE9  3A07               	xorlw	7	; case 4
 24529  0FEA  1903               	skipnz
 24530  0FEB  2FC7               	goto	i1l6375
 24531  0FEC  3A01               	xorlw	1	; case 5
 24532  0FED  1903               	skipnz
 24533  0FEE  2F8B               	goto	i1l576
 24534  0FEF  3A03               	xorlw	3	; case 6
 24535  0FF0  1903               	skipnz
 24536  0FF1  2FA0               	goto	i1l6357
 24537  0FF2  3A01               	xorlw	1	; case 7
 24538  0FF3  1903               	skipnz
 24539  0FF4  2FC7               	goto	i1l6375
 24540  0FF5  3A0F               	xorlw	15	; case 8
 24541  0FF6  1903               	skipnz
 24542  0FF7  2FA7               	goto	i1l6361
 24543  0FF8  3A02               	xorlw	2	; case 10
 24544  0FF9  1903               	skipnz
 24545  0FFA  2EF1               	goto	i1l553
 24546  0FFB  3A01               	xorlw	1	; case 11
 24547  0FFC  1903               	skipnz
 24548  0FFD  2F13               	goto	i1l558
 24549  0FFE  2FCB               	goto	i1l6377
 24550  0FFF  0008               	return
 24551  1000                     __end_of_I2C1_ISR:	
 24552                           
 24553                           	psect	text97
 24554  1DB8                     __ptext97:	
 24555 ;; *************** function _I2C1_Stop *****************
 24556 ;; Defined at:
 24557 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 24558 ;; Parameters:    Size  Location     Type
 24559 ;;  completion_c    1    wreg     enum E10866
 24560 ;; Auto vars:     Size  Location     Type
 24561 ;;  completion_c    1    1[COMMON] enum E10866
 24562 ;; Return value:  Size  Location     Type
 24563 ;;                  1    wreg      void 
 24564 ;; Registers used:
 24565 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24566 ;; Tracked objects:
 24567 ;;		On entry : 0/0
 24568 ;;		On exit  : 0/0
 24569 ;;		Unchanged: 0/0
 24570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24575 ;;Total ram usage:        2 bytes
 24576 ;; Hardware stack levels used:    1
 24577 ;; This function calls:
 24578 ;;		Nothing
 24579 ;; This function is called by:
 24580 ;;		_I2C1_ISR
 24581 ;; This function uses a non-reentrant model
 24582 ;;
 24583                           
 24584                           
 24585                           ;psect for function _I2C1_Stop
 24586  1DB8                     _I2C1_Stop:	
 24587                           
 24588                           ;incstack = 0
 24589 ;; hardware stack exceeded
 24590                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 24591                           ;I2C1_Stop@completion_code stored from wreg
 24592  1DB8  00F8               	movwf	I2C1_Stop@completion_code
 24593                           
 24594                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 24595  1DB9  0143               	movlb	3	; select bank3
 24596  1DBA  1511               	bsf	17,2	;volatile
 24597                           
 24598                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 24599  1DBB  0871               	movf	_p_i2c1_current,w
 24600  1DBC  3E02               	addlw	2
 24601  1DBD  0086               	movwf	6
 24602  1DBE  3001               	movlw	1	; select bank2/3
 24603  1DBF  0087               	movwf	7
 24604  1DC0  0801               	movf	1,w
 24605  1DC1  1903               	btfsc	3,2
 24606  1DC2  2DCF               	goto	i1l5961
 24607                           
 24608                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 24609  1DC3  0878               	movf	I2C1_Stop@completion_code,w
 24610  1DC4  00F7               	movwf	??_I2C1_Stop
 24611  1DC5  0871               	movf	_p_i2c1_current,w
 24612  1DC6  3E02               	addlw	2
 24613  1DC7  0086               	movwf	6
 24614  1DC8  3001               	movlw	1	; select bank2/3
 24615  1DC9  0087               	movwf	7
 24616  1DCA  0801               	movf	1,w
 24617  1DCB  0086               	movwf	6
 24618  1DCC  0187               	clrf	7
 24619  1DCD  0877               	movf	??_I2C1_Stop,w
 24620  1DCE  0081               	movwf	1
 24621  1DCF                     i1l5961:	
 24622                           
 24623                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 24624  1DCF  0141               	movlb	1	; select bank1
 24625  1DD0  01E6               	clrf	_i2c1_state^(0+128)
 24626  1DD1  0008               	return
 24627  1DD2                     __end_of_I2C1_Stop:	
 24628                           
 24629                           	psect	text98
 24630  1CC4                     __ptext98:	
 24631 ;; *************** function _I2C1_FunctionComplete *****************
 24632 ;; Defined at:
 24633 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 24634 ;; Parameters:    Size  Location     Type
 24635 ;;		None
 24636 ;; Auto vars:     Size  Location     Type
 24637 ;;		None
 24638 ;; Return value:  Size  Location     Type
 24639 ;;                  1    wreg      void 
 24640 ;; Registers used:
 24641 ;;		wreg, status,2, status,0
 24642 ;; Tracked objects:
 24643 ;;		On entry : 0/0
 24644 ;;		On exit  : 0/0
 24645 ;;		Unchanged: 0/0
 24646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24651 ;;Total ram usage:        1 bytes
 24652 ;; Hardware stack levels used:    1
 24653 ;; This function calls:
 24654 ;;		Nothing
 24655 ;; This function is called by:
 24656 ;;		_I2C1_ISR
 24657 ;; This function uses a non-reentrant model
 24658 ;;
 24659                           
 24660                           
 24661                           ;psect for function _I2C1_FunctionComplete
 24662  1CC4                     _I2C1_FunctionComplete:	
 24663                           
 24664                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 24665                           
 24666                           ;incstack = 0
 24667 ;; hardware stack exceeded
 24668                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 24669  1CC4  3004               	movlw	4
 24670  1CC5  00F7               	movwf	??_I2C1_FunctionComplete
 24671  1CC6  0877               	movf	??_I2C1_FunctionComplete,w
 24672  1CC7  07F2               	addwf	_p_i2c1_trb_current,f
 24673                           
 24674                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 24675  1CC8  3001               	movlw	1
 24676  1CC9  0141               	movlb	1	; select bank1
 24677  1CCA  02E5               	subwf	_i2c1_trb_count^(0+128),f
 24678  1CCB  1D03               	btfss	3,2
 24679  1CCC  2CD2               	goto	i1l588
 24680                           
 24681                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 24682  1CCD  3004               	movlw	4
 24683  1CCE  00F7               	movwf	??_I2C1_FunctionComplete
 24684  1CCF  0877               	movf	??_I2C1_FunctionComplete,w
 24685  1CD0  00E6               	movwf	_i2c1_state^(0+128)
 24686                           
 24687                           ;mcc_generated_files/i2c1.c: 575:     }
 24688  1CD1  0008               	return
 24689  1CD2                     i1l588:	
 24690                           ;mcc_generated_files/i2c1.c: 576:     else
 24691                           
 24692                           
 24693                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 24694  1CD2  01E6               	clrf	_i2c1_state^(0+128)
 24695  1CD3  0AE6               	incf	_i2c1_state^(0+128),f
 24696  1CD4  0008               	return
 24697  1CD5                     __end_of_I2C1_FunctionComplete:	
 24698                           
 24699                           	psect	text99
 24700  1B86                     __ptext99:	
 24701 ;; *************** function _I2C1_BusCollisionISR *****************
 24702 ;; Defined at:
 24703 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 24704 ;; Parameters:    Size  Location     Type
 24705 ;;		None
 24706 ;; Auto vars:     Size  Location     Type
 24707 ;;		None
 24708 ;; Return value:  Size  Location     Type
 24709 ;;                  1    wreg      void 
 24710 ;; Registers used:
 24711 ;;		None
 24712 ;; Tracked objects:
 24713 ;;		On entry : 0/0
 24714 ;;		On exit  : 0/0
 24715 ;;		Unchanged: 0/0
 24716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24721 ;;Total ram usage:        0 bytes
 24722 ;; Hardware stack levels used:    1
 24723 ;; This function calls:
 24724 ;;		Nothing
 24725 ;; This function is called by:
 24726 ;;		_INTERRUPT_InterruptManager
 24727 ;; This function uses a non-reentrant model
 24728 ;;
 24729                           
 24730                           
 24731                           ;psect for function _I2C1_BusCollisionISR
 24732  1B86                     _I2C1_BusCollisionISR:	
 24733                           
 24734                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 24735                           
 24736                           ;incstack = 0
 24737 ;; hardware stack exceeded
 24738                           ; Regs used in _I2C1_BusCollisionISR: []
 24739  1B86  014E               	movlb	14	; select bank14
 24740  1B87  108F               	bcf	15,1	;volatile
 24741  1B88  0008               	return
 24742  1B89                     __end_of_I2C1_BusCollisionISR:	
 24743                           
 24744                           	psect	text100
 24745  103A                     __ptext100:	
 24746 ;; *************** function _DMX_interrupt *****************
 24747 ;; Defined at:
 24748 ;;		line 54 in file "dmx.c"
 24749 ;; Parameters:    Size  Location     Type
 24750 ;;		None
 24751 ;; Auto vars:     Size  Location     Type
 24752 ;;  dummy           1    6[COMMON] volatile unsigned char 
 24753 ;; Return value:  Size  Location     Type
 24754 ;;                  1    wreg      void 
 24755 ;; Registers used:
 24756 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24757 ;; Tracked objects:
 24758 ;;		On entry : 0/0
 24759 ;;		On exit  : 0/0
 24760 ;;		Unchanged: 0/0
 24761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24764 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24765 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24766 ;;Total ram usage:        7 bytes
 24767 ;; Hardware stack levels used:    1
 24768 ;; This function calls:
 24769 ;;		Nothing
 24770 ;; This function is called by:
 24771 ;;		_DMX_init
 24772 ;;		_INTERRUPT_InterruptManager
 24773 ;; This function uses a non-reentrant model
 24774 ;;
 24775                           
 24776                           
 24777                           ;psect for function _DMX_interrupt
 24778  103A                     _DMX_interrupt:	
 24779                           
 24780                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 24781                           
 24782                           ;incstack = 0
 24783 ;; hardware stack exceeded
 24784                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 24785  103A  0142               	movlb	2	; select bank2
 24786  103B  1C9D               	btfss	29,1	;volatile
 24787  103C  283F               	goto	i1l6809
 24788                           
 24789                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 24790  103D  121D               	bcf	29,4	;volatile
 24791                           
 24792                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 24793  103E  161D               	bsf	29,4	;volatile
 24794  103F                     i1l6809:	
 24795                           
 24796                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 24797  103F  085F               	movf	_initial^(0+256),w
 24798  1040  0460               	iorwf	(_initial+1)^(0+256),w
 24799  1041  1903               	btfsc	3,2
 24800  1042  191D               	btfsc	29,2	;volatile
 24801  1043  2860               	goto	i1l6817
 24802                           
 24803                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 24804  1044  0819               	movf	25,w	;volatile
 24805  1045  00F7               	movwf	??_DMX_interrupt
 24806  1046  01F8               	clrf	??_DMX_interrupt+1
 24807  1047  082B               	movf	(_arrayIndex+1)^(0+256),w
 24808  1048  00FA               	movwf	??_DMX_interrupt+3
 24809  1049  082A               	movf	_arrayIndex^(0+256),w
 24810  104A  00F9               	movwf	??_DMX_interrupt+2
 24811  104B  35F9               	lslf	??_DMX_interrupt+2,f
 24812  104C  0DFA               	rlf	??_DMX_interrupt+3,f
 24813  104D  30EE               	movlw	238
 24814  104E  00FB               	movwf	??_DMX_interrupt+4
 24815  104F  3023               	movlw	35
 24816  1050  00FC               	movwf	??_DMX_interrupt+5
 24817  1051  0879               	movf	??_DMX_interrupt+2,w
 24818  1052  077B               	addwf	??_DMX_interrupt+4,w
 24819  1053  0086               	movwf	6
 24820  1054  087A               	movf	??_DMX_interrupt+3,w
 24821  1055  3D7C               	addwfc	??_DMX_interrupt+5,w
 24822  1056  0087               	movwf	7
 24823  1057  0877               	movf	??_DMX_interrupt,w
 24824  1058  3FC0               	movwi [0]fsr1
 24825  1059  0878               	movf	??_DMX_interrupt+1,w
 24826  105A  3FC1               	movwi [1]fsr1
 24827                           
 24828                           ;dmx.c: 63:         arrayIndex += 1;
 24829  105B  3001               	movlw	1
 24830  105C  07AA               	addwf	_arrayIndex^(0+256),f
 24831  105D  3000               	movlw	0
 24832  105E  3DAB               	addwfc	(_arrayIndex+1)^(0+256),f
 24833                           
 24834                           ;dmx.c: 64:     } else {
 24835  105F  2868               	goto	i1l6821
 24836  1060                     i1l6817:	
 24837                           
 24838                           ;dmx.c: 65:         arrayIndex = 0;
 24839  1060  01AA               	clrf	_arrayIndex^(0+256)
 24840  1061  01AB               	clrf	(_arrayIndex+1)^(0+256)
 24841                           
 24842                           ;dmx.c: 66:         initial = 0;
 24843  1062  01DF               	clrf	_initial^(0+256)
 24844  1063  01E0               	clrf	(_initial+1)^(0+256)
 24845                           
 24846                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 24847  1064  0819               	movf	25,w	;volatile
 24848  1065  00F7               	movwf	??_DMX_interrupt
 24849  1066  0877               	movf	??_DMX_interrupt,w
 24850  1067  00FD               	movwf	DMX_interrupt@dummy	;volatile
 24851  1068                     i1l6821:	
 24852                           
 24853                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 24854  1068  014E               	movlb	14	; select bank14
 24855  1069  128F               	bcf	15,5	;volatile
 24856  106A  0008               	return
 24857  106B                     __end_of_DMX_interrupt:	
 24858                           
 24859                           	psect	text101
 24860  1107                     __ptext101:	
 24861 ;; *************** function _EUSART1_Receive_ISR *****************
 24862 ;; Defined at:
 24863 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 24864 ;; Parameters:    Size  Location     Type
 24865 ;;		None
 24866 ;; Auto vars:     Size  Location     Type
 24867 ;;		None
 24868 ;; Return value:  Size  Location     Type
 24869 ;;                  1    wreg      void 
 24870 ;; Registers used:
 24871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24872 ;; Tracked objects:
 24873 ;;		On entry : 0/0
 24874 ;;		On exit  : 0/0
 24875 ;;		Unchanged: 0/0
 24876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24881 ;;Total ram usage:        0 bytes
 24882 ;; Hardware stack levels used:    1
 24883 ;; Hardware stack levels required when called:    2
 24884 ;; This function calls:
 24885 ;;		Absolute function
 24886 ;;		_EUSART1_DefaultErrorHandler
 24887 ;;		_EUSART1_DefaultFramingErrorHandler
 24888 ;;		_EUSART1_DefaultOverrunErrorHandler
 24889 ;;		_EUSART1_RxDataHandler
 24890 ;; This function is called by:
 24891 ;;		_EUSART1_Initialize
 24892 ;;		_INTERRUPT_InterruptManager
 24893 ;; This function uses a non-reentrant model
 24894 ;;
 24895                           
 24896                           
 24897                           ;psect for function _EUSART1_Receive_ISR
 24898  1107                     _EUSART1_Receive_ISR:	
 24899                           
 24900                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 24901                           
 24902                           ;incstack = 0
 24903 ;; hardware stack exceeded
 24904                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24905  1107  0874               	movf	_eusart1RxHead,w	;volatile
 24906  1108  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24907  1109  0086               	movwf	6
 24908  110A  3001               	movlw	1	; select bank3/4
 24909  110B  0087               	movwf	7
 24910  110C  0181               	clrf	1
 24911                           
 24912                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 24913  110D  0142               	movlb	2	; select bank2
 24914  110E  1D1D               	btfss	29,2	;volatile
 24915  110F  291C               	goto	i1l8613
 24916                           
 24917                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 24918  1110  0874               	movf	_eusart1RxHead,w	;volatile
 24919  1111  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24920  1112  0086               	movwf	6
 24921  1113  3001               	movlw	1	; select bank3/4
 24922  1114  0087               	movwf	7
 24923  1115  1481               	bsf	1,1
 24924                           
 24925                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 24926  1116  0143               	movlb	3	; select bank3
 24927  1117  0869               	movf	(_EUSART1_FramingErrorHandler+1)^(0+384),w
 24928  1118  008A               	movwf	10
 24929  1119  0868               	movf	_EUSART1_FramingErrorHandler^(0+384),w
 24930  111A  000A               	callw
 24931  111B  3191               	pagesel	$
 24932  111C                     i1l8613:	
 24933                           
 24934                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 24935  111C  0142               	movlb	2	; select bank2
 24936  111D  1C9D               	btfss	29,1	;volatile
 24937  111E  292B               	goto	i1l8619
 24938                           
 24939                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 24940  111F  0874               	movf	_eusart1RxHead,w	;volatile
 24941  1120  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24942  1121  0086               	movwf	6
 24943  1122  3001               	movlw	1	; select bank3/4
 24944  1123  0087               	movwf	7
 24945  1124  1501               	bsf	1,2
 24946                           
 24947                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 24948  1125  0144               	movlb	4	; select bank4
 24949  1126  0865               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+512),w
 24950  1127  008A               	movwf	10
 24951  1128  0864               	movf	_EUSART1_OverrunErrorHandler^(0+512),w
 24952  1129  000A               	callw
 24953  112A  3191               	pagesel	$
 24954  112B                     i1l8619:	
 24955                           
 24956                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 24957  112B  0874               	movf	_eusart1RxHead,w	;volatile
 24958  112C  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24959  112D  0086               	movwf	6
 24960  112E  3001               	movlw	1	; select bank3/4
 24961  112F  0087               	movwf	7
 24962  1130  0801               	movf	1,w
 24963  1131  1903               	btfsc	3,2
 24964  1132  293A               	goto	i1l8623
 24965                           
 24966                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 24967  1133  0145               	movlb	5	; select bank5
 24968  1134  0853               	movf	(_EUSART1_ErrorHandler+1)^(0+640),w
 24969  1135  008A               	movwf	10
 24970  1136  0852               	movf	_EUSART1_ErrorHandler^(0+640),w
 24971  1137  000A               	callw
 24972  1138  3191               	pagesel	$
 24973                           
 24974                           ;mcc_generated_files/eusart1.c: 188:     } else {
 24975  1139  0008               	return
 24976  113A                     i1l8623:	
 24977                           
 24978                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 24979  113A  319D  2588         	fcall	_EUSART1_RxDataHandler
 24980  113C  0008               	return
 24981  113D                     __end_of_EUSART1_Receive_ISR:	
 24982                           
 24983                           	psect	text102
 24984  1B96                     __ptext102:	
 24985 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 24986 ;; Defined at:
 24987 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 24988 ;; Parameters:    Size  Location     Type
 24989 ;;		None
 24990 ;; Auto vars:     Size  Location     Type
 24991 ;;		None
 24992 ;; Return value:  Size  Location     Type
 24993 ;;                  1    wreg      void 
 24994 ;; Registers used:
 24995 ;;		None
 24996 ;; Tracked objects:
 24997 ;;		On entry : 0/0
 24998 ;;		On exit  : 0/0
 24999 ;;		Unchanged: 0/0
 25000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25005 ;;Total ram usage:        0 bytes
 25006 ;; Hardware stack levels used:    1
 25007 ;; This function calls:
 25008 ;;		Nothing
 25009 ;; This function is called by:
 25010 ;;		_EUSART1_Initialize
 25011 ;;		_EUSART1_Receive_ISR
 25012 ;; This function uses a non-reentrant model
 25013 ;;
 25014                           
 25015                           
 25016                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 25017  1B96                     _EUSART1_DefaultOverrunErrorHandler:	
 25018                           
 25019                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 25020                           
 25021                           ;incstack = 0
 25022 ;; hardware stack exceeded
 25023                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 25024  1B96  0142               	movlb	2	; select bank2
 25025  1B97  121D               	bcf	29,4	;volatile
 25026                           
 25027                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 25028  1B98  161D               	bsf	29,4	;volatile
 25029  1B99  0008               	return
 25030  1B9A                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 25031                           
 25032                           	psect	text103
 25033  1B81                     __ptext103:	
 25034 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 25035 ;; Defined at:
 25036 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 25037 ;; Parameters:    Size  Location     Type
 25038 ;;		None
 25039 ;; Auto vars:     Size  Location     Type
 25040 ;;		None
 25041 ;; Return value:  Size  Location     Type
 25042 ;;                  1    wreg      void 
 25043 ;; Registers used:
 25044 ;;		None
 25045 ;; Tracked objects:
 25046 ;;		On entry : 0/0
 25047 ;;		On exit  : 0/0
 25048 ;;		Unchanged: 0/0
 25049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25054 ;;Total ram usage:        0 bytes
 25055 ;; Hardware stack levels used:    1
 25056 ;; This function calls:
 25057 ;;		Nothing
 25058 ;; This function is called by:
 25059 ;;		_EUSART1_Initialize
 25060 ;;		_EUSART1_Receive_ISR
 25061 ;; This function uses a non-reentrant model
 25062 ;;
 25063                           
 25064                           
 25065                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 25066  1B81                     _EUSART1_DefaultFramingErrorHandler:	
 25067                           
 25068                           ;incstack = 0
 25069 ;; hardware stack exceeded
 25070                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 25071  1B81  0008               	return
 25072  1B82                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 25073                           
 25074                           	psect	text104
 25075  1B83                     __ptext104:	
 25076 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 25077 ;; Defined at:
 25078 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 25079 ;; Parameters:    Size  Location     Type
 25080 ;;		None
 25081 ;; Auto vars:     Size  Location     Type
 25082 ;;		None
 25083 ;; Return value:  Size  Location     Type
 25084 ;;                  1    wreg      void 
 25085 ;; Registers used:
 25086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25087 ;; Tracked objects:
 25088 ;;		On entry : 0/0
 25089 ;;		On exit  : 0/0
 25090 ;;		Unchanged: 0/0
 25091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25096 ;;Total ram usage:        0 bytes
 25097 ;; Hardware stack levels used:    1
 25098 ;; Hardware stack levels required when called:    1
 25099 ;; This function calls:
 25100 ;;		_EUSART1_RxDataHandler
 25101 ;; This function is called by:
 25102 ;;		_EUSART1_Initialize
 25103 ;;		_EUSART1_Receive_ISR
 25104 ;; This function uses a non-reentrant model
 25105 ;;
 25106                           
 25107                           
 25108                           ;psect for function _EUSART1_DefaultErrorHandler
 25109  1B83                     _EUSART1_DefaultErrorHandler:	
 25110                           
 25111                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 25112                           
 25113                           ;incstack = 0
 25114 ;; hardware stack exceeded
 25115                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 25116  1B83  319D  2588         	fcall	_EUSART1_RxDataHandler
 25117  1B85  0008               	return
 25118  1B86                     __end_of_EUSART1_DefaultErrorHandler:	
 25119                           
 25120                           	psect	text105
 25121  1D88                     __ptext105:	
 25122 ;; *************** function _EUSART1_RxDataHandler *****************
 25123 ;; Defined at:
 25124 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 25125 ;; Parameters:    Size  Location     Type
 25126 ;;		None
 25127 ;; Auto vars:     Size  Location     Type
 25128 ;;		None
 25129 ;; Return value:  Size  Location     Type
 25130 ;;                  1    wreg      void 
 25131 ;; Registers used:
 25132 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25133 ;; Tracked objects:
 25134 ;;		On entry : 0/0
 25135 ;;		On exit  : 0/0
 25136 ;;		Unchanged: 0/0
 25137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25140 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25141 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25142 ;;Total ram usage:        1 bytes
 25143 ;; Hardware stack levels used:    1
 25144 ;; This function calls:
 25145 ;;		Nothing
 25146 ;; This function is called by:
 25147 ;;		_EUSART1_Receive_ISR
 25148 ;;		_EUSART1_DefaultErrorHandler
 25149 ;; This function uses a non-reentrant model
 25150 ;;
 25151                           
 25152                           
 25153                           ;psect for function _EUSART1_RxDataHandler
 25154  1D88                     _EUSART1_RxDataHandler:	
 25155                           
 25156                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 25157                           
 25158                           ;incstack = 0
 25159 ;; hardware stack exceeded
 25160                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 25161  1D88  0142               	movlb	2	; select bank2
 25162  1D89  0819               	movf	25,w	;volatile
 25163  1D8A  00F7               	movwf	??_EUSART1_RxDataHandler
 25164  1D8B  0874               	movf	_eusart1RxHead,w
 25165  1D8C  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 25166  1D8D  0086               	movwf	6
 25167  1D8E  3002               	movlw	2	; select bank4/5
 25168  1D8F  0087               	movwf	7
 25169  1D90  0877               	movf	??_EUSART1_RxDataHandler,w
 25170  1D91  0081               	movwf	1
 25171  1D92  3001               	movlw	1
 25172  1D93  00F7               	movwf	??_EUSART1_RxDataHandler
 25173  1D94  0877               	movf	??_EUSART1_RxDataHandler,w
 25174  1D95  07F4               	addwf	_eusart1RxHead,f	;volatile
 25175                           
 25176                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 25177  1D96  3008               	movlw	8
 25178  1D97  0274               	subwf	_eusart1RxHead,w	;volatile
 25179  1D98  1803               	btfsc	3,0
 25180                           
 25181                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 25182  1D99  01F4               	clrf	_eusart1RxHead	;volatile
 25183                           
 25184                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 25185  1D9A  3001               	movlw	1
 25186  1D9B  00F7               	movwf	??_EUSART1_RxDataHandler
 25187  1D9C  0877               	movf	??_EUSART1_RxDataHandler,w
 25188  1D9D  0141               	movlb	1	; select bank1
 25189  1D9E  07E7               	addwf	_eusart1RxCount^(0+128),f	;volatile
 25190  1D9F  0008               	return
 25191  1DA0                     __end_of_EUSART1_RxDataHandler:	
 25192                           
 25193                           	psect	text106
 25194  1C7E                     __ptext106:	
 25195 ;; *************** function _ADCC_ThresholdISR *****************
 25196 ;; Defined at:
 25197 ;;		line 308 in file "mcc_generated_files/adcc.c"
 25198 ;; Parameters:    Size  Location     Type
 25199 ;;		None
 25200 ;; Auto vars:     Size  Location     Type
 25201 ;;		None
 25202 ;; Return value:  Size  Location     Type
 25203 ;;                  1    wreg      void 
 25204 ;; Registers used:
 25205 ;;		wreg, status,2, status,0, pclath, cstack
 25206 ;; Tracked objects:
 25207 ;;		On entry : 0/0
 25208 ;;		On exit  : 0/0
 25209 ;;		Unchanged: 0/0
 25210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25215 ;;Total ram usage:        0 bytes
 25216 ;; Hardware stack levels used:    1
 25217 ;; Hardware stack levels required when called:    1
 25218 ;; This function calls:
 25219 ;;		Absolute function
 25220 ;;		_ADCC_DefaultInterruptHandler
 25221 ;;		_adcThresholdHandler
 25222 ;; This function is called by:
 25223 ;;		_INTERRUPT_InterruptManager
 25224 ;; This function uses a non-reentrant model
 25225 ;;
 25226                           
 25227                           
 25228                           ;psect for function _ADCC_ThresholdISR
 25229  1C7E                     _ADCC_ThresholdISR:	
 25230                           
 25231                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 25232                           
 25233                           ;incstack = 0
 25234 ;; hardware stack exceeded
 25235                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 25236  1C7E  014E               	movlb	14	; select bank14
 25237  1C7F  108D               	bcf	13,1	;volatile
 25238                           
 25239                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 25240  1C80  0142               	movlb	2	; select bank2
 25241  1C81  086B               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 25242  1C82  046C               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 25243  1C83  1903               	btfsc	3,2
 25244  1C84  0008               	return
 25245                           
 25246                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 25247  1C85  086C               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 25248  1C86  008A               	movwf	10
 25249  1C87  086B               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 25250  1C88  000A               	callw
 25251  1C89  319C               	pagesel	$
 25252  1C8A  0008               	return
 25253  1C8B                     __end_of_ADCC_ThresholdISR:	
 25254                           
 25255                           	psect	text107
 25256  1B80                     __ptext107:	
 25257 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25258 ;; Defined at:
 25259 ;;		line 320 in file "mcc_generated_files/adcc.c"
 25260 ;; Parameters:    Size  Location     Type
 25261 ;;		None
 25262 ;; Auto vars:     Size  Location     Type
 25263 ;;		None
 25264 ;; Return value:  Size  Location     Type
 25265 ;;                  1    wreg      void 
 25266 ;; Registers used:
 25267 ;;		None
 25268 ;; Tracked objects:
 25269 ;;		On entry : 0/0
 25270 ;;		On exit  : 0/0
 25271 ;;		Unchanged: 0/0
 25272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25277 ;;Total ram usage:        0 bytes
 25278 ;; Hardware stack levels used:    1
 25279 ;; This function calls:
 25280 ;;		Nothing
 25281 ;; This function is called by:
 25282 ;;		_ADCC_Initialize
 25283 ;;		_ADCC_ThresholdISR
 25284 ;; This function uses a non-reentrant model
 25285 ;;
 25286                           
 25287                           
 25288                           ;psect for function _ADCC_DefaultInterruptHandler
 25289  1B80                     _ADCC_DefaultInterruptHandler:	
 25290                           
 25291                           ;incstack = 0
 25292 ;; hardware stack exceeded
 25293                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 25294  1B80  0008               	return
 25295  1B81                     __end_of_ADCC_DefaultInterruptHandler:	
 25296                           
 25297                           	psect	text108
 25298  1B92                     __ptext108:	
 25299 ;; *************** function _adcThresholdHandler *****************
 25300 ;; Defined at:
 25301 ;;		line 35 in file "beat.c"
 25302 ;; Parameters:    Size  Location     Type
 25303 ;;		None
 25304 ;; Auto vars:     Size  Location     Type
 25305 ;;		None
 25306 ;; Return value:  Size  Location     Type
 25307 ;;                  1    wreg      void 
 25308 ;; Registers used:
 25309 ;;		None
 25310 ;; Tracked objects:
 25311 ;;		On entry : 0/0
 25312 ;;		On exit  : 0/0
 25313 ;;		Unchanged: 0/0
 25314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25319 ;;Total ram usage:        0 bytes
 25320 ;; Hardware stack levels used:    1
 25321 ;; This function calls:
 25322 ;;		Nothing
 25323 ;; This function is called by:
 25324 ;;		_BEAT_init
 25325 ;;		_ADCC_ThresholdISR
 25326 ;; This function uses a non-reentrant model
 25327 ;;
 25328                           
 25329                           
 25330                           ;psect for function _adcThresholdHandler
 25331  1B92                     _adcThresholdHandler:	
 25332                           
 25333                           ;beat.c: 36:     thresholdExceeded = 1;
 25334                           
 25335                           ;incstack = 0
 25336 ;; hardware stack exceeded
 25337                           ; Regs used in _adcThresholdHandler: []
 25338  1B92  0141               	movlb	1	; select bank1
 25339  1B93  01D5               	clrf	_thresholdExceeded^(0+128)
 25340  1B94  0AD5               	incf	_thresholdExceeded^(0+128),f
 25341  1B95  0008               	return
 25342  1B96                     __end_of_adcThresholdHandler:	
 25343  007E                     btemp	set	126	;btemp
 25344  007E                     int$flags	set	126
 25345  007E                     wtemp0	set	126


Data Sizes:
    Strings     157
    Constant    96
    Data        14
    BSS         359
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     37      80
    BANK2            80      6      79
    BANK3            80      0      76
    BANK4            80      0      70
    BANK5            80      0      52
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    previousTask	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK6[32]), STR_20(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK6[32]), STR_20(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_28(CODE[6]), STR_27(CODE[7]), STR_26(CODE[8]), STR_25(CODE[9]), 
		 -> STR_24(CODE[10]), STR_23(CODE[9]), STR_22(CODE[8]), STR_21(CODE[7]), 
		 -> STR_19(CODE[2]), STR_18(CODE[5]), STR_17(CODE[3]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[3]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK6[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S3638_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_28(CODE[6]), STR_27(CODE[7]), STR_26(CODE[8]), STR_25(CODE[9]), 
		 -> STR_24(CODE[10]), STR_23(CODE[9]), STR_22(CODE[8]), STR_21(CODE[7]), 
		 -> STR_19(CODE[2]), STR_18(CODE[5]), STR_17(CODE[3]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[3]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_28(CODE[6]), STR_27(CODE[7]), STR_26(CODE[8]), STR_25(CODE[9]), 
		 -> STR_24(CODE[10]), STR_23(CODE[9]), STR_22(CODE[8]), STR_21(CODE[7]), 
		 -> STR_19(CODE[2]), STR_18(CODE[5]), STR_17(CODE[3]), STR_16(CODE[3]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[3]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK6[32]), 

    currentMenu.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    currentMenu.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    currentMenu.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    currentMenu.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    currentMenu.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    currentMenu	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), animationType(BANK3[10]), 
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatCont(BANK4[10]), 
		 -> beatStrobeTask(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), dmx_task(BANK4[10]), 
		 -> manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixedTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixedTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixedTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatMixedTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixedTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatContTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatContTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatContTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatContTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatContTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFadeTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFadeTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFadeTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatFadeTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFadeTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobeTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobeTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobeTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatStrobeTask.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobeTask.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualWhite.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualWhite.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualWhite.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualWhite.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualWhite.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualWhite.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualBlue.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualBlue.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualBlue.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualBlue.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualBlue.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualBlue.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualGreen.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualGreen.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualGreen.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualGreen.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualGreen.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualGreen.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualRed.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualRed.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualRed.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualRed.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualRed.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualRed.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationBrightnessCtrl.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationBrightnessCtrl.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationBrightnessCtrl.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationType.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animationType.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationType.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animationType.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationType.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animationType.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixed.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatMixed.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixed.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatMixed.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixed.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatMixed.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixed.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatMixed.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatCont.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatCont.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatCont.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatCont.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatCont.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatCont.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatCont.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatCont.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFade.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatFade.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFade.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatFade.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFade.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatFade.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFade.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatFade.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobe.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatStrobe.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobe.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatStrobe.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobe.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatStrobe.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobe.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatStrobe.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx_task.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx_task.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx_task.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    dmx_task.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx_task.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manual.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manual.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manual.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manual.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manual.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manual.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manual.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manual.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animation.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animation.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animation.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animation.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animation.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animation.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animation.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animation.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beat.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beat.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beat.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beat.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beat.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beat.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beat.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beat.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    dmx.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    dmx.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    dmx.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    dmx.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualWhite.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualWhite.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualWhite.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualWhite.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualBlue.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualBlue.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualBlue.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualBlue.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualGreen.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualGreen.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualGreen.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualGreen.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualRed.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manualRed.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manualRed.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manualRed.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationBrightnessCtrl.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animationType.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animationType.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animationType.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixedTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixedTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixedTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatMixedTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixedTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatContTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatContTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatContTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatContTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatContTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFadeTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFadeTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFadeTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatFadeTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFadeTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobeTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobeTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobeTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatStrobeTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobeTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatMixed.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatMixed.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatMixed.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatCont.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatCont.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatCont.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatFade.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatFade.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatFade.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beatStrobe.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beatStrobe.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beatStrobe.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx_task.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx_task.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx_task.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    dmx_task.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx_task.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    manual.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    manual.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    manual.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    animation.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    animation.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    animation.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    beat.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    beat.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    beat.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    S2244menuItem$task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    S2244menuItem$parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    dmx.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[10]), manual(BANK2[10]), beat(BANK2[10]), dmx(BANK3[10]), 

    S2244menuItem$config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    dmx.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK5[10]), manualBlue(BANK5[10]), manualGreen(BANK5[10]), beatMixedTask(BANK5[10]), 
		 -> beatContTask(BANK5[10]), beatFadeTask(BANK4[10]), beatStrobeTask(BANK4[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK4[10]), NULL(NULL[0]), 

    S2244menuItem$prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    S2244menuItem$nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    dmx.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> animationType(BANK3[10]), beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK4[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK3[10]), manual(BANK2[10]), 
		 -> beat(BANK2[10]), dmx(BANK3[10]), NULL(NULL[0]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    S1997$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK6[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1139$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S1162$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S1162$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_printf
    _TM1650_enable->_writeData
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_LED_task_BEAT_STROBE
    _DMX_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _CONTROL_MANUAL->_printf
    _CONTROL_DMX->_printf
    _TM1650_fastPrintNum_3digit->_writeData
    ___lwmod->___lwdiv
    _CONTROL_BEAT->_LED_task_BEAT_STROBE
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_fastPrintNum_2digit->_writeData
    _writeData->___awmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___awmod->___awdiv
    _LED_task_BEAT_STROBE->_beatColorCreator
    _beatColorCreator->_beatBrightnessCalculation
    _beatBrightnessCalculation->___fltol
    _LED_setColor->_beatColorCreator
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _TM1650_init->_printf
    _LED_task->_LED_task_DMX
    _LED_task_DMX->_LED_setColor
    _CONTROLLER_task->_CONTROL_BEAT
    _LED_task_MANUAL->_LED_setColor
    _CONTROL_DMX->_printf
    _CONTROL_BEAT->_LED_task_BEAT_STROBE
    _LED_task_BEAT_STROBE->_LED_setColor
    _beatColorCreator->_beatBrightnessCalculation
    _LED_setColor->_beatColorCreator

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _LED_task->_LED_task_DMX

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  374296
                                              4 BANK2      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   32934
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    5360
                                             22 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0  125722
                                             35 BANK1      2     2      0
                       _LED_setColor
                 _LED_task_ANIMATION
           _LED_task_BEAT_CONTINUOUS
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
                       _LED_task_DMX
                    _LED_task_MANUAL
                   _beatColorCreator
                          _getIsHold
                            _getMode
 ---------------------------------------------------------------------------------
 (2) _getMode                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getIsHold                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_DMX                                         9     9      0   19398
                                             30 BANK1      5     5      0
                                              0 BANK2      4     4      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_CONTINUOUS                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    9267
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    9056
                                             22 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      2     2      0  200290
                                             34 BANK1      2     2      0
                  _BUTTONS_isClicked
                       _CONTROL_BEAT *
                        _CONTROL_DMX *
                     _CONTROL_MANUAL *
                 _LED_task_ANIMATION *
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_MANUAL                                       2     2      0   56513
                                             30 BANK1      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                    _LED_task_MANUAL
         _TM1650_fastPrintNum_3digit
                           _colorDec
                           _colorInc
                             _printf
 ---------------------------------------------------------------------------------
 (3) _colorInc                                             2     2      0       0
                                              0 BANK0      2     2      0
                     _getCurrentMenu
 ---------------------------------------------------------------------------------
 (3) _colorDec                                             2     2      0       0
                                              0 BANK0      2     2      0
                     _getCurrentMenu
 ---------------------------------------------------------------------------------
 (4) _getCurrentMenu                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_MANUAL                                      0     0      0   19108
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0   37405
                                             10 BANK1      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                     _DMX_getAddress
         _TM1650_fastPrintNum_3digit
                        _address_dec
                        _address_inc
                             _printf
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum_3digit                           3     1      2    9438
                                             22 BANK0      3     1      2
                     _DMX_getAddress (ARG)
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1808
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     393
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         2     2      0   78558
                                             32 BANK1      2     2      0
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
         _TM1650_fastPrintNum_2digit
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   27574
                                             75 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   24596
                                             67 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   24024
                                             58 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2   16332
                                             52 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3   16028
                                             43 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2    1134
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    7310
                                             35 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    6826
                                             27 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    5676
                                             25 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    5508
                                             22 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum_2digit                           4     4      0    7316
                                             22 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    5318
                                             16 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1852
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     609
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     676
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1030
                                              9 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     842
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_STROBE                                 3     3      0   43668
                                             79 BANK0      1     1      0
                                             30 BANK1      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
                   _beatColorCreator
 ---------------------------------------------------------------------------------
 (2) _beatColorCreator                                    14    10      4   24440
                                             78 BANK0      1     1      0
                                              9 BANK1     13     9      4
                            ___fltol
          _beatBrightnessCalculation
 ---------------------------------------------------------------------------------
 (3) _beatBrightnessCalculation                           10     6      4   14519
                                             77 BANK0      1     1      0
                                              0 BANK1      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         8     4      4   19108
                                             22 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _beatColorCreator (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1546
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4    1648
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    6946
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2    1441
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    4314
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2     419
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2     419
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     419
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     419
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_MIXED                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_FADE                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     240
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0    1200
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1066
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1066
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    2036
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1614
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CONTROL_BEAT *
       _LED_task_BEAT_FADE
       _LED_task_BEAT_MIXED
       _LED_task_BEAT_STROBE
         _BEAT_detected
         _CLOCK_getTime
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
         _beatColorCreator
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _TM1650_fastPrintNum_2digit
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _CONTROL_DMX *
       _BUTTONS_isHeld
       _CLOCK_getTime
       _DMX_getAddress
       _TM1650_fastPrintNum_3digit
         _DMX_getAddress (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
         _writeData (ARG)
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _address_dec
       _address_inc
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _CONTROL_MANUAL *
       _BUTTONS_isHeld
       _CLOCK_getTime
       _LED_task_MANUAL
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
       _TM1650_fastPrintNum_3digit
         _DMX_getAddress (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
         _writeData (ARG)
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _colorDec
         _getCurrentMenu
       _colorInc
         _getCurrentMenu
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _LED_task_ANIMATION *
     _printf *
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_init
   _LED_task
     _LED_setColor
       _PWM1_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM2_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM3_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM4_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _beatColorCreator (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_ANIMATION
     _LED_task_BEAT_CONTINUOUS
     _LED_task_BEAT_FADE
     _LED_task_BEAT_MIXED
     _LED_task_BEAT_STROBE
       _BEAT_detected
       _CLOCK_getTime
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _beatColorCreator
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_DMX
       _DMX_getAddress
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _LED_task_MANUAL
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _beatColorCreator
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _beatBrightnessCalculation
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _getIsHold
     _getMode
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     203       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      6      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      4C      12       95.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      46      14       87.5%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      34      16       65.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      40      18       80.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     203      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 18:54:47 2019

                       __end_of_LED_task_MANUAL 1C66                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0077                                    ___awdiv@sign 0026  
                                            _up 00E0                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00D2                             __Umul8_16@word_mpld 0026  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 1B92  
                                           l911 0D1F                                             l913 0D8D  
                                           _PR2 028D                                             _bpm 0130  
                                           _dmx 01DA                                             _pad 1317  
                       __size_of_PMD_Initialize 000A                                    ___awmod@sign 002F  
                               _TMR2_Initialize 1C98                                 _PWM4_Initialize 1C4F  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  ___flmul@aexp 0056                                    ___flmul@bexp 0057  
                            _LED_task_BEAT_FADE 0800                                    ___flmul@sign 0055  
                                  ___flmul@temp 0060                                    ___flmul@prod 005C  
                                 __CFG_BBEN$OFF 0000                             _animationBrightness 00EC  
                              __end_of_I2C1_ISR 1000                                    ___fltol@exp1 006C  
                                          l2111 060B                                            l2108 05E6  
                                          l2109 05FE                                            l1520 11AA  
                                          l2217 1EB4                                            l2139 02C4  
                                          l2171 15BF                                            l1507 1276  
                                          l2165 1589                                            l1429 0964  
                                          l1702 132F                                            l2087 04DF  
                                          l1705 134F                                            l2178 15D3  
                                          l2179 15DD                                            l1931 146D  
                          _ADCC_StartConversion 1BDD                                            ?_pad 004B  
                                          l9403 1E05                                            l9413 1EF4  
                                          l9415 1EF6                                            l9431 116A  
                                          l9441 1DB1                                            l9427 1147  
                                          l9451 1F32                                            l9381 13A5  
                                          l9461 132D                                            l9367 1B9A  
                                          l9439 1DA5                                            l9471 135B  
                                          l9385 13AC                                            l9457 1325  
                                          l9387 13B2                                            l9467 1331  
                                          l9397 1F9D                                            l9493 1019  
                                          l9495 1022                                  ?_TM1650_enable 0077  
                                          STR_1 2055                                            STR_2 2073  
                                          STR_3 2061                                            STR_4 205B  
                                          l9955 0876                                            STR_5 2049  
                                          STR_6 206D                                            l9949 0855  
                                          l9965 0887                                            STR_7 204F  
                                          STR_8 2067                                            l9959 087C  
                                          STR_9 2091                                            l9989 1BFF  
                       __end_of_PWM1_Initialize 1C39                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          _T2PR 028D                                            _PMD0 0796  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          _PMD5 079B                                            _PMD6 079C  
                                          _PMD7 079D                                            u9045 1168  
                    ?_beatBrightnessCalculation 00A0                                            u9095 133B  
                                          _TMR2 028C                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                            _LED_task_ANIMATION 0002                                   __CFG_FCMEN$ON 0000  
                           ?_LED_task_BEAT_FADE 0077                                   ?_BUTTONS_init 0077  
                                 ?_BUTTONS_task 0077                                            _beat 014E  
                                          _dbuf 0320                            ?_adcThresholdHandler 0077  
                                          _ctoa 100A                                            _main 11AB  
                                          _down 00DF                                            _init 1E83  
                                          _menu 00E1                                            _prec 0124  
                                          _nout 0120                                            pad@i 004F  
                                          pad@p 004C                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            pad@w 0051  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0030  
                               ___fldiv@new_exp 0040                         __end_of_TM1650_setDigit 1CF8  
                           ?_LED_task_ANIMATION 0077                              __size_of_GPIO_init 0011  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 000F  
                          __size_of_address_inc 0010                  I2C1_MasterWriteTRBBuild@length 0021  
                           _LED_task_BEAT_MIXED 0801                                  _BUTTONS_isHeld 1CA6  
                                         ??_pad 004E                         __end_of_PWM2_Initialize 1C44  
                       __end_of_TMR0_Initialize 1D33                                      _i2c1_state 00E6  
                ??_TMR0_DefaultInterruptHandler 0077                  __size_of_OSCILLATOR_Initialize 0009  
                          ??_LED_task_BEAT_FADE 0020                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 1C2E                                           l10101 1202  
                                         l10103 120E                                           l10111 1223  
                                         l10031 1FDA                                           l10033 1FF7  
                                         l10131 10E7                                           l10051 12DB  
                                         l10115 122B                                           l10107 121A  
                                         l10141 1102                                           l10061 12E3  
                                         l10045 12D0                                           l10205 1CBF  
                                         l10063 12EF                                           l10137 10F9  
                                         l10129 10DB                                           l10073 130A  
                                         l10313 1520                                           l10153 1FAB  
                                         l10321 123C                                           l10155 1FB7  
                                         l10163 1FCC                                           l11301 1469  
                                         l10077 1312                                           l10069 1301  
                                         l10093 11FC                                           l10173 1CB3  
                                         l10325 1247                                           l10317 1231  
                                         l10159 1FC3                                           l10351 1183  
                                         l10343 1175                                           l10335 125D  
                                         l10089 11F5                                           l10193 162C  
                                         l10361 1191                                           l10329 1252  
                                         l11411 0575                                           l11331 04B3  
                                         l10355 118A                                           l10347 117C  
                                         l12203 0B41                                           l11413 058C  
                                         l11333 04BB                                           l11309 147A  
                                         l12221 0B81                                           l11423 05A5  
                                         l11351 04D7                                           l11327 04B0  
                                         l10199 07FB                                           l12231 0BA4  
                                         l12223 0B88                                           l12215 0B6C  
                     I2C1_MasterTRBInsert@pflag 0021                                           l11433 05CE  
                                         l11361 04FE                                           l12225 0B8F  
                                         l12217 0B73                                           l12209 0B56  
                                         l12313 11DD                                           l10803 0D5B  
                                         l10387 1D1D                                           l11419 05A3  
                                         l11347 04D4                                           l11267 1EAE  
                                         l11283 1436                                           l11611 15AC  
                                         l12227 0B96                                           l12219 0B7A  
                                         l12235 0BAF                                           l12251 08C8  
                                         l11621 15C4                                           l11605 1598  
                                         l12229 0B9D                                           l12253 08CB  
                                         l12245 08AB                                           l10807 0D6E  
                                         l11447 0607                                           l11367 050A  
                                         l11551 0243                                           l11471 00C9  
                                         l11279 142D                                           l12511 094D  
                                         l12271 0922                                           l12263 0902  
                                         l12247 08AE                                           l10559 1D6A  
                                         l10913 0A90                                           l11393 056A  
                                         l11561 025C                                           l11633 15F8  
                                         l11609 159C                                           l11721 16EE  
                                         l11713 16C4                                           l12521 119C  
                                         l12513 0BBC                                           l12185 0B02  
                                         l10569 0990                                           l12265 0905  
                                         l12257 08E5                                           l12281 0942  
                                         l10915 0AA3                                           l11387 0551  
                                         l11395 0533                                           l11571 0285  
                                         l11467 00BF                                           l11299 145B  
                                         l11619 15D1                                           l11731 173F  
                                         l11715 16C5                                           l12515 13F3  
                                         l12275 093C                                           l12259 08E8  
                                         l10781 0CD8                                           l11645 1E5C  
                                         l11661 1E7A                                           l11397 056F  
                                         l11581 02B1                                           l11557 025A  
                                         l11549 022C                                           l11485 00E2  
                                         l11469 00C1                                           l11733 1740  
                                         l11725 1716                                           l11821 0C3A  
                                         l12517 0E0B                                           l12197 0B2E  
                                         l12277 093F                                           l12269 091F  
                                         l11575 029A                                           l11487 00E4  
                                         l11727 1717                                           l11719 16ED  
                                         l11815 0C35                                           l12519 1268  
                                         l11903 13D6                                           l10929 0AD6  
                                         l11497 00FA                                           l11489 00EC  
                                         l11833 0C45                                           l11809 0C31  
                                         l11913 13E5                                           l10795 0D37  
                                         l11827 0C3D                                           l11931 1421  
                                         l11923 1413                                           l11907 13DA  
                                         l11915 1401                                           l10893 0A55  
                                         l10789 0D19                                           l11677 1E20  
                                         l11693 1E3E                                           l11765 0C5F  
                                         l11941 0DA5                                           l11925 1418  
                                         l11599 1581                                           l11791 0C2B  
                                         l11759 0C1C                                           l11943 0DBB  
                                         l11951 0DFD                                           l10897 0A5C  
                                         l11785 0C25                                           l11873 17CE  
                                         l11857 17B8                                           l11945 0DD1  
                                         l11953 0E19                                           l11779 0C23  
                                         l11883 17E6                                           l11859 1783  
                                         l11947 0DE7                                           l11797 0C2E  
                                         l11869 17C0                                           l11965 0E56  
                                         l11879 17E0                                           l11983 0E8B  
                                         l11895 13C0                                           l11977 0E78  
                                         l11987 0E92                                           l11899 13CB  
                                         l11997 0EAB                           _eusart1RxStatusBuffer 01A0  
                              __end_of_LED_init 1BC3                                   ___fltol@sign1 006B  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_ctoa 0054                                __end_of_LED_task 0965  
                                         ?_main 0077                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 0610  
                                         _ADREF 0116                                 __end_of___awdiv 1317  
                             __end_of_I2C1_Stop 1DD2                                           STR_10 2082  
                                         STR_11 208A                                           STR_12 2086  
                                         STR_20 201C                                           STR_13 207E  
                                         STR_21 203C                                           STR_14 209A  
                                         STR_22 202D                                           STR_15 2094  
                                         STR_23 2013                                           STR_16 208E  
                                         STR_24 2000                                           STR_17 2097  
                                         STR_25 200A                                   __CFG_WDTE$OFF 0000  
                                         STR_18 2079                                           STR_26 2025  
                                         STR_19 2047                                           STR_27 2035  
                                         STR_28 2043                                 __end_of___awmod 1230  
                              __end_of_DMX_init 1D0B                                           _ADRPT 009A  
                               __end_of___flmul 02D1                                 __end_of___fltol 1489  
                                         u10215 12F0                                           u11105 0CDB  
                                         u10225 12FA                                           u11114 0CFA  
                                         u11115 0CF9                                           u10235 1302  
                                         u10315 1214                                           u10405 10FA  
                                         u12005 01F5                                           u10325 121B  
                                         u12015 020C                                           u12025 021B  
                                         u12035 022F                                           u10195 12E6  
                                         u10435 1FAE                                 ___awdiv@divisor 0020  
                                         u10365 10DE                                           u11325 0A3E  
                                         u12125 0273                                           u12135 028E  
                                         u12055 0238                                           u12215 15B9  
                                         u10295 1205                                           u10455 1FBD  
                                         u10385 10E8                                           u12145 02A4  
                                         u10465 1FC4                                           u10395 10F2  
                                         u12235 15CB                                           u12325 1E58  
                                         u11525 143F                                           u11375 0AB7  
                                         u12415 1E3A                                           _T2CON 028E  
                                         u11705 053B                                           u13057 11B4  
                                         u12355 1E76                                           u11715 0542  
                                         u11555 145C                                           u12275 15E5  
                                         u12195 15A5                                           u11735 054B  
                                         u11495 1EB5                                           u12385 1E1C  
                                         u11745 055F                                           u11585 1471  
                                         _LATC5 00D5                                           u12645 177D  
                                         u11775 0578                                           u12815 0E35  
                                         u11865 05BC                                           u12825 0E4E  
                                         u11875 05D7                                           u11795 0581  
                                         u12675 1797                                           _T2HLT 028F  
                                         u11885 05F0                                           u12685 17B0  
                                         u12845 0E72                                           u11985 0170  
                                         u11995 019F                                 __end_of___lwdiv 1107  
                    _ADCC_ADTI_InterruptHandler 016B                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l430 0017  
                                         i1l432 001E                                 __end_of___lwmod 1FD1  
                                         i1l434 0025                                           i1l427 000E  
                                         i1l439 002E                                           i1l552 0EF0  
                                         i1l553 0EF1                                           i1l547 0EC2  
                                         i1l581 0FC0                                           i1l573 0F7C  
                                         i1l558 0F13                                           i1l559 0F1F  
                                         i1l576 0F8B                                           i1l577 0F99  
                                         i1l569 0F5C                                           i1l588 1CD2  
                               ___awdiv@counter 0025                                           _OSCEN 0891  
                                  vfpfcnvrt@fmt 005A                              _PWM4_LoadDutyValue 1E65  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
              __end_of_LED_task_BEAT_CONTINUOUS 0004                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1B89  
                          ??_LED_task_ANIMATION 0020                       ?_TMR0_SetInterruptHandler 0020  
                               __end_of_getMode 1B92                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 1C98                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                                         _delay 0161                            ?_LED_task_BEAT_MIXED 0077  
                                         _flags 0126                                           _enter 00DE  
                         ?_ADCC_StartConversion 0077                                           _fputc 113D  
                                         _fputs 1F2E                             ?_PWM4_LoadDutyValue 00A0  
                     __size_of_beatColorCreator 00AF                                           pad@fp 0053  
                                         _width 0122                                           ctoa@c 0054  
                                         _putch 1EE6                                           ctoa@w 0058  
                       __end_of_PWM3_Initialize 1C4F                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0077                               __end_of_BEAT_init 1D88  
                             __end_of_BEAT_task 0AF9                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 1B82  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0077  
           ?_EUSART1_DefaultFramingErrorHandler 0077              _EUSART1_DefaultFramingErrorHandler 1B81  
                                  _beatFadeTask 0228                 I2C1_MasterWriteTRBBuild@address 0022  
                        __end_of_BUTTONS_isHeld 1CB5                                 __initialization 0032  
                          TM1650_setDigit@digit 0038                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                                ?_LED_task_MANUAL 0077  
                                  __end_of_ctoa 103A                      __end_of_EUSART1_Initialize 10D2  
                                  __end_of_main 11EA                                    __end_of_init 1EA3  
                               _CONTROLLER_init 02D1                                 _CONTROLLER_task 0AF9  
                          ??_PWM4_LoadDutyValue 006D                                   ?_LED_setColor 00B6  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
                                 ?_LED_task_DMX 0077                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 1BEF                                    _beatContTask 02C8  
                       __end_of_PWM4_Initialize 1C5A                         __end_of_TMR2_Initialize 1CA6  
                   ?_INTERRUPT_InterruptManager 0077                            _LED_task_BEAT_STROBE 0BD7  
                                   _i2c1_object 00C5                                          ??_ctoa 0056  
                                        ??_main 0169                                          ??_init 0023  
                          __end_of_CONTROL_BEAT 1423                               __end_of_GPIO_init 1CE6  
                         ??_LED_task_BEAT_MIXED 0020                                 ??_TM1650_enable 0036  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                            __size_of_CONTROL_DMX 00B7  
                                        ?_fputc 003B                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          ?_fputs 0043  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR3H 0315                                          _CCPR1L 030C  
                                        _CCPR4H 0319                                          _CCPR2L 0310  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                              ___awdiv@dividend 0022                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          ?_putch 0077  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                ?_PWM1_Initialize 0077  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        _RC7PPS 1F27                                          i1l6303 0F38  
                                __CFG_WDTCCS$SC 0000                                          i1l6323 0F51  
                                        i1l6271 0EE3                                          i1l6361 0FA7  
                                        i1l6345 0F7F                                          i1l6337 0F6A  
                                        i1l6283 0EFD                                          i1l6275 0EEA  
                                        i1l6373 0FC4                                          i1l6357 0FA0  
                                        i1l6375 0FC7                                          i1l6383 0FD3  
                                        i1l6377 0FCB                                          i1l6289 0F0D  
                                        i1l6821 1068                                          i1l6817 1060  
                                        i1l6809 103F                                          i1l5961 1DCF  
                                        i1l8613 111C                                          i1l8623 113A  
                                        i1l8619 112B                                          _OSCFRQ 0893  
                        __size_of_DMX_interrupt 0031                                          _TX1REG 011A  
                                        _TX1STA 011E                                __end_of___xxtofl 1601  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0036                                 ?_BUTTONS_isHeld 0077  
                            ??_I2C1_MasterWrite 002B                                    _CCPTMRS0bits 021E  
                                  vfprintf@cfmt 0069                                __end_of_colorDec 11AB  
                              __end_of_colorInc 1277                                  _p_i2c1_current 0071  
                                ??_LED_setColor 00BA                     __size_of_PWM3_LoadDutyValue 001E  
                                ??_LED_task_DMX 00BE                     __end_of_TM1650_fastPrintNum 0A27  
                             _ADCC_ThresholdISR 1C7E                                       ??___fldiv 0036  
                                     ??___awdiv 0024                                  __CFG_STVREN$ON 0000  
                                     ??___awmod 002D                                       ??___flmul 0050  
                                     ??___fltol 0066                                       ??___lwdiv 0024  
                  ??_TM1650_fastPrintNum_2digit 0036                                       ??___lwmod 002C  
                  ??_TM1650_fastPrintNum_3digit 0038                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                          _manual 0144  
                              ?_TMR0_Initialize 0077                                ?_PWM2_Initialize 0077  
                            ?_ADCC_ThresholdISR 0077                           ?_LED_task_BEAT_STROBE 0077  
                                     ?_I2C1_ISR 0077                                ___awdiv@quotient 0027  
                               ___awmod@divisor 0029                                 ___awmod@counter 002E  
                                     ??_getMode 0020                                          _printf 1D47  
                        __size_of_BEAT_detected 0009                                          pad@buf 004B  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                        ctoa@fp 0057                                  _lastActiveTime 0134  
                                        _strlen 1DA0                            __size_of_TM1650_init 0014  
                 TM1650_fastPrintNum_2digit@num 0039                                 _ADCC_Initialize 1F54  
                                        fputc@c 003B                                  _PMD_Initialize 1000  
                                        fputs@c 0047                                    ??_CLOCK_init 0022  
                                        fputs@i 0049                                          fputs@s 0048  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0077  
                 TM1650_fastPrintNum_3digit@num 0036                          ??_ADCC_StartConversion 0020  
                                        putch@n 003A                                __end_of_vfprintf 2000  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 1BD4  
                 I2C1_MasterWriteTRBBuild@pdata 0020                        _LED_task_BEAT_CONTINUOUS 0003  
                                 _tm1650_status 013E                                 _eusart1RxBuffer 0220  
                       beatColorCreator@inGreen 00A9                                ?_PWM3_Initialize 0077  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 1F0A                                    ___xxtofl@val 0020  
                       beatColorCreator@inWhite 00AB                         __end_of__initialization 00A1  
                       __end_of_CONTROLLER_init 0496                         __end_of_CONTROLLER_task 0BD7  
                            ?_SYSTEM_Initialize 0077             __size_of_TM1650_fastPrintNum_2digit 0074  
           __size_of_TM1650_fastPrintNum_3digit 0099                      __end_of_PWM2_LoadDutyValue 1E47  
                                     ?_LED_init 0077                                       ?_LED_task 0077  
                                    ___fltol@f1 0062                                       ?_DMX_init 0077  
                                _i2c1_trb_count 00E5                     PWM1_LoadDutyValue@dutyValue 00A0  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 1C8B  
                       __size_of_DMX_getAddress 0003                   __end_of_EUSART1_RxDataHandler 1DA0  
                         _I2C1_FunctionComplete 1CC4                            _I2C1_BusCollisionISR 1B86  
                                __pcstackCOMMON 0077                              __end_of_CLOCK_init 1BB3  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK1 1BC3  
                                  __pidataBANK2 1BA5                             ??_SYSTEM_Initialize 0022  
                                     ?_TMR0_ISR 0077                                   __end_of_fputc 1174  
                                 __end_of_fputs 1F54                                   __end_of_putch 1F0A  
                            _PWM1_LoadDutyValue 1E0B                                      ??_I2C1_ISR 0079  
                              ?_TMR2_Initialize 0077                                ?_PWM4_Initialize 0077  
                                 _DMX_interrupt 103A                            __end_of_BUTTONS_init 12C5  
                        __end_of_PMD_Initialize 100A                            __end_of_BUTTONS_task 0DA4  
                   PWM4_LoadDutyValue@dutyValue 00A0                              __size_of_getIsHold 0003  
                           ?_PWM1_LoadDutyValue 00A0                                      _beatStrobe 01C6  
                   __end_of_EUSART1_Receive_ISR 113D                               _thresholdExceeded 00D5  
                   ADCC_StartConversion@channel 0020                               LED_setColor@input 00B6  
                                       ??_fputc 003E                       __end_of_SYSTEM_Initialize 1F2E  
                                       ??_fputs 0044                                _beatColorCreator 169A  
                                       ??_putch 0039                                   _eusart1RxHead 0074  
                                 _eusart1RxTail 0073                                      __pbssBANK1 00C5  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                    __pbssBANK4 0220                                      __pbssBANK5 02A0  
                                    __pbssBANK6 0320                 ??_EUSART1_SetRxInterruptHandler 0022  
                   ??_beatBrightnessCalculation 00A4                         __size_of_getCurrentMenu 0008  
                                 _BEAT_detected 1BF8                                   _beatMixedTask 02BE  
                                    ??_LED_init 0020                                      ??_LED_task 00C3  
                                    ??_DMX_init 0039                            ??_PWM1_LoadDutyValue 006D  
                             __end_of__Umul8_16 1EC3                           ?_I2C1_BusCollisionISR 0077  
               __end_of_EUSART1_SetErrorHandler 1C13                                      __pmaintext 11AB  
              __end_of_TMR0_SetInterruptHandler 1BF8                                      ??_TMR0_ISR 0077  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0034  
                       __end_of_ADCC_Initialize 1F7A                          ??_LED_task_BEAT_STROBE 00BE  
                                    __pintentry 0004                                 _I2C1_Initialize 1DD2  
                                       _CCP1CON 030E                                         _CCP2CON 0312  
                                       _CCP3CON 0316                           __size_of_CONTROL_BEAT 0064  
                                       _CCP4CON 031A                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                  ?_DMX_interrupt 0077  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 1BD4  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 1BCB  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               __CFG_ZCDDIS$OFF 0000                                         ?_printf 00A0  
                               ?_PMD_Initialize 0077                           _animationModeSelected 00ED  
                                       ?_strlen 0020          __end_of_EUSART1_SetFramingErrorHandler 1C1C  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 1C13  
                                       i1l12523 0FDC                                       ?___xxtofl 0020  
                  ?_EUSART1_DefaultErrorHandler 0077                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00A8  
                                     _I2C1_Stop 1DB8                                      _arrayIndex 012A  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 0773                               _colorModeSelected 013F  
                                     ?_colorDec 0077                               __end_of_charTable 1860  
                           _CLOCK_timerCallback 1B9F                                       ?_colorInc 0077  
                          __end_of_LED_task_DMX 14F7                                  ?_BEAT_detected 0077  
                 I2C1_MasterTRBInsert@ptrb_list 0020                         __size_of_CONTROL_MANUAL 010A  
                            __size_of_writeData 001D                               __end_of_getIsHold 1B8F  
                                 ??_address_dec 0020                                ?_CONTROLLER_init 0077  
                                 ??_address_inc 0020                                ?_CONTROLLER_task 0077  
                                    _enterState 00DA                                 BUTTONS_task@btn 0028  
                                  _CONTROL_BEAT 13BF                          ?_I2C1_FunctionComplete 0077  
                                     _BEAT_init 1D71                   __size_of_I2C1_MasterTRBInsert 0055  
                                     _BEAT_task 0A27                      __size_of_ADCC_ThresholdISR 000D  
                                    _manualBlue 02AA                              _p_i2c1_trb_current 0072  
            __end_of_TM1650_fastPrintNum_2digit 156B                      _TM1650_fastPrintNum_2digit 14F7  
            __end_of_TM1650_fastPrintNum_3digit 169A                      _TM1650_fastPrintNum_3digit 1601  
                                       ___fldiv 0496                                         ___awdiv 12C5  
                          ?_CLOCK_timerCallback 0077                                         ___awmod 11EA  
                                       ___flmul 00A5                                         ___fltol 1423  
                                       ___lwdiv 10D2                                         ___lwmod 1FA4  
                                     ?_vfprintf 0063                       _beatBrightnessCalculation 0773  
                                       _address 00EA                      _animationBrightnessControl 0070  
                   __size_of_LED_task_BEAT_FADE 0001                                         _getMode 1B8F  
                                       __ptext1 1D33                                         __ptext2 1D5C  
                                       __ptext3 1F0A                                         __ptext4 1C98  
                                       __ptext5 1D1F                                         __ptext6 1C4F  
                                       __ptext7 1C44                                         __ptext8 1C39  
                                       __ptext9 1C2E                                 __size_of_printf 0015  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                               __size_of_strlen 0018                                         _lastRun 012E  
                         _OSCILLATOR_Initialize 1C25                                       _T2CONbits 028E  
                                  __size_of_pad 0053                                         _initial 015F  
                                       _buttons 0340                                      ??___xxtofl 0024  
                              ___awmod@dividend 002B                              _EUSART1_Initialize 109E  
                      ??_PIN_MANAGER_Initialize 0020                                       _T2HLTbits 028F  
                               __CFG_WRTSAF$OFF 0000                     __size_of_LED_task_ANIMATION 0001  
                                    ?_I2C1_Stop 0077                     __end_of_adcThresholdHandler 1B96  
                                       _upState 00DD                   ??_EUSART1_DefaultErrorHandler 0078  
                                       _startup 00EE                      __size_of_SYSTEM_Initialize 0024  
                 LED_task_BEAT_STROBE@beatState 006F                            I2C1_ISR@pi2c_buf_ptr 00E4  
                                       clrloop0 1C67                                      ??_colorDec 0020  
                                    ??_colorInc 0020                                _currentSelection 00D9  
                          end_of_initialization 00A1                                       _T2RSTbits 0291  
                                     _GPIO_init 1CD5                             ?_EUSART1_Initialize 0077  
                                       init@btn 0024                                         init@pin 0022  
                              ??_BUTTONS_isHeld 0020                                         fputc@fp 003D  
                                       init_ram 1C72                     _EUSART1_OverrunErrorHandler 0264  
                                       fputs@fp 0043                                         initloop 1C73  
                        ??_I2C1_BusCollisionISR 0077                         __end_of_I2C1_Initialize 1DEE  
                                _DMX_getAddress 1B89           __end_of_EUSART1_SetRxInterruptHandler 1C0A  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 1C01  
                                    ?_BEAT_init 0077                                      ?_BEAT_task 0077  
                 beatBrightnessCalculation@temp 006D                               __end_of_vfpfcnvrt 08AA  
                         __size_of_BUTTONS_init 004E                           __size_of_BUTTONS_task 00EE  
                         ??_CLOCK_timerCallback 0077                                 ??_DMX_interrupt 0077  
                           __end_of_address_dec 1CC4                     __size_of_PWM4_LoadDutyValue 001E  
                           __end_of_address_inc 0800                                ?_ADCC_Initialize 0077  
                                    ??_vfprintf 0066                            ??_EUSART1_Initialize 0022  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0023  
                                       strlen@s 0020                        _TMR0_SetInterruptHandler 1BEF  
                   __end_of_LED_task_BEAT_MIXED 0802                      ??_LED_task_BEAT_CONTINUOUS 0020  
                     __size_of_I2C1_MasterWrite 002A                               __size_of_I2C1_ISR 0152  
                      __size_of_LED_task_MANUAL 000C                               __end_of_writeData 1E0B  
                       ?_ADCC_SetUpperThreshold 0020                                   ??_CONTROL_DMX 00AA  
                                 ___xxtofl@sign 0028                                       _TRISAbits 0012  
                                     _TRISCbits 0014                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 1D71               I2C1_ISR@i2c_10bit_address_restart 00E2  
                                _getCurrentMenu 1BB3                                      ?_GPIO_init 0077  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 0058  
                                  _BUTTONS_init 1277                                    _BUTTONS_task 0CB6  
                        __end_of_DMX_getAddress 1B8C                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
                    __end_of_PWM3_LoadDutyValue 1E65            __size_of_EUSART1_DefaultErrorHandler 0003  
                      __size_of_PWM1_Initialize 000B                               __size_of_LED_init 0008  
                             __size_of_LED_task 00BB                               __size_of_DMX_init 0013  
                      __end_of_beatColorCreator 1749                  ??_ADCC_DefaultInterruptHandler 0077  
                                 ??_TM1650_init 006F                                     vfpfcnvrt@ap 005B  
                                   vfpfcnvrt@fp 0062                         I2C1_MasterWrite@trBlock 0158  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0078  
                            _PWM2_LoadDutyValue 1E29                        __size_of_TM1650_setDigit 0012  
                        ?_OSCILLATOR_Initialize 0077                  __end_of_ADCC_SetUpperThreshold 1BDD  
                  __size_of_TM1650_fastPrintNum 00C2                                  __end_of_printf 1D5C  
                         __size_of_LED_setColor 0163                                  __end_of_strlen 1DB8  
                                  _lastDetected 00D4                           __size_of_LED_task_DMX 006E  
                           start_initialization 0032                                    _enterPressed 0140  
                                   ??_I2C1_Stop 0077                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                             ?_PWM2_LoadDutyValue 00A0  
               __size_of_PIN_MANAGER_Initialize 0033                             TM1650_setDigit@data 0036  
                                   __end_of_pad 136A                          __end_of_getCurrentMenu 1BBB  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020                                  _beatBrightness 00EF  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 1D0B  
                           __end_of_CONTROL_DMX 1800                         _animationBrightnessCtrl 01B2  
                                _CONTROL_MANUAL 0DA4                                 ?_DMX_getAddress 0077  
                            ?_BUTTONS_isClicked 0077                                     _address_dec 1CB5  
                                   _address_inc 07F0                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0077                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                            ??_PWM2_LoadDutyValue 006D  
                      __size_of_PWM3_Initialize 000B                                     vfprintf@fmt 0063  
                   PWM2_LoadDutyValue@dutyValue 00A0                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 1D88  
                                  _LED_setColor 0610                  ?_EUSART1_SetRxInterruptHandler 0020  
                                     __Umul8_16 1EA3                                     __pdataBANK1 00E8  
                                   __pdataBANK2 015F                                    _LED_task_DMX 1489  
                                 _CLOCK_getTime 1BE6                                        ??_printf 006B  
                                      ??_strlen 0022                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00E7                          beatColorCreator@inBlue 00AA  
                                     ___fldiv@a 002E                                       ___fldiv@b 0032  
                                   __pbssBIGRAM 23EE                             __end_of_TM1650_init 1D47  
                                     ___flmul@a 004C                                       ___flmul@b 0048  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 01EA  
                                     ___latbits 0003                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00A0                                   __pcstackBANK2 0165  
            __size_of_beatBrightnessCalculation 007D                        __size_of_PWM4_Initialize 000B  
                      __size_of_TMR2_Initialize 000E                                   _i2c1_tr_queue 015C  
                             __size_of___xxtofl 0096                                 ?_getCurrentMenu 0077  
                     __end_of_BUTTONS_isClicked 1D1F                       beatColorCreator@tempColor 00B2  
                             ??_LED_task_MANUAL 006F                          __end_of_CONTROL_MANUAL 0EAE  
                                     _beatMixed 023C                                     ??_GPIO_init 0020  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0077                    __size_of_EUSART1_Receive_ISR 0036  
                             __size_of_colorDec 0037                               __size_of_colorInc 0047  
                                  _menuSelected 0142                                    _currentState 00CE  
                                     _charTable 1800                           _TMR0_InterruptHandler 016D  
                                     __pnvBANK2 016B                                       __pnvBANK3 01E8  
                                     __pnvBANK4 0264                                       __pnvBANK5 02D2  
                   __size_of_PWM1_LoadDutyValue 001E                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 106B                                       _getIsHold 1B8C  
                                     _animation 01D0                     ?_TM1650_fastPrintNum_2digit 0077  
                                      ?___fldiv 002E                     ?_TM1650_fastPrintNum_3digit 0036  
                                      ?___awdiv 0020                                       __ptext100 103A  
                                     __ptext101 1107                                       __ptext102 1B96  
                                     __ptext103 1B81                                       __ptext104 1B83  
                                     __ptext105 1D88                                       __ptext106 1C7E  
                                     __ptext107 1B80                                       __ptext108 1B92  
                                      ?___awmod 0029                                        ?___flmul 0048  
                                      ?___fltol 0062                                      ?__Umul8_16 0020  
                                      ?___lwdiv 0020                                        ?___lwmod 0028  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0EAE  
                 __size_of_LED_task_BEAT_STROBE 00DF                               ??_PWM1_Initialize 0020  
                  ??_INTERRUPT_InterruptManager 007E                                 writeData@status 0035  
                                      ?_getMode 0077                               __size_of_vfprintf 002F  
                              _I2C1_MasterWrite 1F7A                                        _BAUD1CON 011F  
                  __end_of_I2C1_MasterTRBInsert 13BF      __end_of_EUSART1_DefaultOverrunErrorHandler 1B9A  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0077  
           ?_EUSART1_DefaultOverrunErrorHandler 0077              _EUSART1_DefaultOverrunErrorHandler 1B96  
                          _EUSART1_ErrorHandler 02D2                                       _downState 00DC  
                                   _CONTROL_DMX 1749                         _EUSART1_SetErrorHandler 1C0A  
                                     _manualRed 01A8                               ??_TM1650_setDigit 0037  
                              ___lwdiv@quotient 0026               __end_of_beatBrightnessCalculation 07F0  
                                __size_of_fputc 0037                                        _T2CLKCON 0290  
                                     _menuState 00DB                                  __size_of_fputs 0026  
                               ?_CONTROL_MANUAL 0077                                  __size_of_putch 0024  
      __end_of_I2C1_WaitForLastPacketToComplete 1B9F       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0077  
              _I2C1_WaitForLastPacketToComplete 1B9A                          I2C1_MasterRead@trBlock 01E4  
                             ??_TMR0_Initialize 0022                               ??_PWM2_Initialize 0020  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0020  
                                     clear_ram0 1C66                                        _PIE0bits 0716  
                                      _LED_init 1BBB                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 08AA  
                                      _DMX_init 1CF8             __size_of_INTERRUPT_InterruptManager 002C  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 00E8                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0077  
                                    ?_getIsHold 0077                               __CFG_BBSIZE$BB512 0000  
                                 _animationType 01BC                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 1C8B  
                    __end_of_LED_task_BEAT_FADE 0801                                        _SSP1STAT 018F  
                                _beatStrobeTask 0232                        __size_of_CONTROLLER_init 01C5  
                      __size_of_CONTROLLER_task 00DE                                     _TM1650_init 1D33  
                                     _threshold 0163                                       _vfpfcnvrt 0802  
                             ??_PWM3_Initialize 0020                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                       _startTime 013C  
                    __end_of_LED_task_ANIMATION 0003                              DMX_interrupt@dummy 007D  
                                      _WPUAbits 1F39                                        _WPUCbits 1F4F  
                                     _writeData 1DEE                      __size_of_BUTTONS_isClicked 0014  
                                    vfpfcnvrt@c 0061                                     _lastIncTime 00D0  
                             ??_TMR2_Initialize 0020                               ??_PWM4_Initialize 0020  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 1BA5  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 0965  
                                    _ADSTATbits 0115                      __end_of_PWM4_LoadDutyValue 1E83  
                 __size_of_I2C1_BusCollisionISR 0003                                      vfprintf@ap 0065  
                                    vfprintf@fp 0068                                     _manualColor 00CA  
                                   _manualGreen 02B4                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 00E3                                     _manualWhite 02A0  
                       ??_OSCILLATOR_Initialize 0020                                     ??__Umul8_16 0022  
                              __size_of___fldiv 017A                                __size_of___awdiv 0052  
                             ?_beatColorCreator 00A9                           beatColorCreator@inRed 00AD  
                              __size_of___awmod 0046                                __size_of___flmul 022C  
                              __size_of___fltol 0066                           __end_of_DMX_interrupt 106B  
                   __size_of_EUSART1_Initialize 0034                                      ?_vfpfcnvrt 005A  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
                         _beatColorCreator$4114 00AE                __end_of_I2C1_MasterWriteTRBBuild 1EE6  
                            ??_beatColorCreator 006E                                        _beatFade 0250  
                            _PWM3_LoadDutyValue 1E47                                        _beatCont 0246  
                                    _ANSELAbits 1F38                                        _beatHold 00D8  
                                    _ANSELCbits 1F4E                                __size_of_getMode 0003  
                          ?_TM1650_fastPrintNum 0036                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                             TM1650_enable@enable 0036  
           __end_of_EUSART1_DefaultErrorHandler 1B86                     _EUSART1_DefaultErrorHandler 1B83  
                                   _currentMenu 00D2                                     _currentTime 0138  
                                    _CLOCK_init 1BAB                                        ___xxtofl 156B  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                                   _menuPressed 0141                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0075                                 ___lwdiv@counter 0025  
                                      _detected 00D6                                      ?_writeData 0030  
                                      __ptext10 1000                                        __ptext11 106B  
                                      __ptext20 1B8F                                        __ptext12 1C25  
                                      __ptext21 1B8C                                        __ptext13 1DD2  
                                      __ptext30 0DA4                                        __ptext22 1489  
                                      __ptext14 109E                                        __ptext31 1749  
                                      __ptext23 0003                                        __ptext15 1C1C  
                                      __ptext40 1FA4                                        __ptext32 0002  
                                      __ptext24 1BBB                                        __ptext16 1C13  
                                      __ptext41 1B89                                        __ptext33 1230  
                                      __ptext25 1CF8                                        __ptext17 1C0A  
                                      __ptext50 113D                                        __ptext42 1CA6  
                                      __ptext34 1174                                        __ptext26 0965  
                                      __ptext18 1F54                                        __ptext51 1EE6  
                                      __ptext43 1D47                                        __ptext35 1BB3  
                                      __ptext27 1C01                                        __ptext19 08AA  
                                      __ptext60 12C5                                        __ptext52 1CE6  
                                      __ptext44 1FD1                                        __ptext36 1C5A  
                                      __ptext28 0AF9                                        __ptext61 0BD7  
                                      __ptext53 14F7                                        __ptext45 0802  
                                      __ptext37 07F0                                        __ptext29 13BF  
                                      __ptext70 1E65                                        __ptext62 169A  
                                      __ptext54 1DEE                                        __ptext46 100A  
                                      __ptext38 1CB5                                        __ptext71 1E47  
                                      __ptext63 0773                                        __ptext55 1F7A  
                                      __ptext47 1317                                        __ptext39 1601  
                                      __ptext80 1BEF                                        __ptext72 1E29  
                                      __ptext64 0610                                        __ptext56 1EC3  
                                      __ptext48 1DA0                                        __ptext81 0CB6  
                                      __ptext73 1E0B                                        __ptext65 156B  
                                      __ptext57 136A                                        __ptext49 1F2E  
                                      __ptext90 1BD4                                        __ptext82 1277  
                                      __ptext74 1BF8                                        __ptext66 1423  
                                      __ptext58 1B9A                             ?_PWM3_LoadDutyValue 00A0  
                                      __ptext91 1BCB                                        __ptext83 1E83  
                                      __ptext75 0801                                        __ptext67 00A5  
                                      __ptext59 11EA                                        __ptext84 1CD5  
                                      __ptext76 0800                                        __ptext68 1EA3  
                                      __ptext93 1C8B                                        __ptext85 0A27  
                                      __ptext77 1D0B                                        __ptext69 0496  
                                      __ptext94 1B9F                                        __ptext86 10D2  
                                      __ptext78 02D1                                        __ptext95 1B82  
                                      __ptext87 1BE6                                        __ptext79 1BAB  
                                      __ptext96 0EAE                                        __ptext88 1D71  
                                      __ptext97 1DB8                                        __ptext89 1BDD  
                                      __ptext98 1CC4                                        __ptext99 1B86  
                  __size_of_LED_task_BEAT_MIXED 0001                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _dmxArray 23EE  
                              ??_DMX_getAddress 0020                                        _colorDec 1174  
                                      _colorInc 1230                            BUTTONS_isHeld@button 0020  
                         __end_of_BEAT_detected 1C01                                        _dmx_task 025A  
                                      _lastBeat 0132                                        _lastTime 013A  
             __size_of_LED_task_BEAT_CONTINUOUS 0001                                 LED_task_DMX@dmx 0165  
                     ?_LED_task_BEAT_CONTINUOUS 0077                                   __size_of_ctoa 0030  
                                 __size_of_main 003F                                   __size_of_init 0020  
                                  ?_address_dec 0077            __end_of_TMR0_DefaultInterruptHandler 1B83  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 1B82  
                                  ?_address_inc 0077                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 136A                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                                     ??_getIsHold 0020  
                          ??_PWM3_LoadDutyValue 006D                    __end_of_ADCC_StartConversion 1BE6  
                                      int$flags 007E                                        _position 00D7  
                       __size_of_BUTTONS_isHeld 000F                                        _vfprintf 1FD1  
            __end_of_INTERRUPT_InterruptManager 0030                      _INTERRUPT_InterruptManager 0004  
                                     printf@fmt 00A0                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 01E8                             _EUSART1_Receive_ISR 1107  
                               _LED_task_MANUAL 1C5A                           ??_TM1650_fastPrintNum 0038  
                              ??_getCurrentMenu 0020                                      _INTCONbits 000B  
                             ??_CONTROLLER_init 0020                               ??_CONTROLLER_task 00C2  
                                      init@port 0020                                  __pstringtext10 2043  
                                __pstringtext11 2049                                  __pstringtext20 207E  
                                __pstringtext12 204F                                  __pstringtext21 2082  
                                __pstringtext13 2055                                  __pstringtext22 2086  
                                __pstringtext14 205B                                  __pstringtext23 208A  
                                __pstringtext15 2061                                  __pstringtext24 208E  
                                __pstringtext16 2067                                  __pstringtext25 2091  
                                __pstringtext17 206D                                  __pstringtext26 2094  
                                __pstringtext18 2073                                  __pstringtext27 2097  
                                __pstringtext19 2079                                  __pstringtext28 209A  
                                __pstringtext29 0000            __end_of_ADCC_DefaultInterruptHandler 1B81  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 1B80  
                                      intlevel1 0000                                  _thresholdCount 012C  
                          ?_EUSART1_Receive_ISR 0077                                   writeData@data 0030  
                              ___lwmod@dividend 002A                         ?_PIN_MANAGER_Initialize 0077  
                      __end_of_I2C1_MasterWrite 1FA4                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 1C25  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 1C1C  
                 __end_of_I2C1_FunctionComplete 1CD5                                   ?_CONTROL_BEAT 0077  
                         ?_I2C1_MasterTRBInsert 0020                                 _PWM1_Initialize 1C2E  
                 ?_TMR0_DefaultInterruptHandler 0077                     __size_of_PWM2_LoadDutyValue 001E  
                        TM1650_fastPrintNum@num 0036                               _lastLedActiveTime 0128  
                                      printf@ap 006E  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                   PWM3_LoadDutyValue@dutyValue 00A0                                 _TM1650_setDigit 1CE6  
                                   ??_vfpfcnvrt 005C                        __size_of_I2C1_Initialize 001C  
                            _eusart1RxLastError 0143                                   __pstringtext1 1800  
                                 __pstringtext2 2000                                   __pstringtext3 200A  
                                 __pstringtext4 2013                                   __pstringtext5 201C  
                                 __pstringtext6 2025                                   __pstringtext7 202D  
                                 __pstringtext8 2035                                   __pstringtext9 203C  
                        __Umul8_16@multiplicand 0020                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0028  
                                   ?_CLOCK_init 0077                                 _TMR0_Initialize 1D1F  
                               _PWM2_Initialize 1C39                                ??_CONTROL_MANUAL 00BE  
                               ___lwmod@counter 002D                                    ?_CONTROL_DMX 0077  
                                  _previousTask 0136                        _I2C1_MasterWriteTRBBuild 1EC3  
                                   ??_writeData 0031                                      _TX1STAbits 011E  
                  __end_of_LED_task_BEAT_STROBE 0CB6                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0078                  __end_of_PIN_MANAGER_Initialize 109E  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 1D5C  
                            __size_of_I2C1_Stop 001A                   ?_ADCC_DefaultInterruptHandler 0077  
                    __end_of_PWM1_LoadDutyValue 1E29                            __Umul8_16@multiplier 0028  
                                ??_CONTROL_BEAT 00C0                         ??_EUSART1_RxDataHandler 0077  
                               _PWM3_Initialize 1C44                               __Umul8_16@product 0024  
