

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 27 21:34:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    29                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    30                           	psect	inittext,global,class=CODE,delta=2
    31                           	psect	clrtext,global,class=CODE,delta=2
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2
    49                           	psect	text14,local,class=CODE,merge=1,delta=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2
    60                           	psect	text25,local,class=CODE,merge=1,delta=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2
    67                           	psect	text32,local,class=CODE,merge=1,delta=2
    68                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text36,local,class=CODE,merge=1,delta=2
    72                           	psect	text37,local,class=CODE,merge=1,delta=2
    73                           	psect	text38,local,class=CODE,merge=1,delta=2
    74                           	psect	text39,local,class=CODE,merge=1,delta=2
    75                           	psect	text40,local,class=CODE,merge=1,delta=2
    76                           	psect	text41,local,class=CODE,merge=1,delta=2
    77                           	psect	text42,local,class=CODE,merge=1,delta=2
    78                           	psect	text43,local,class=CODE,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,merge=1,delta=2
    80                           	psect	text45,local,class=CODE,merge=1,delta=2
    81                           	psect	text46,local,class=CODE,merge=1,delta=2
    82                           	psect	text47,local,class=CODE,merge=1,delta=2
    83                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text50,local,class=CODE,merge=1,delta=2
    86                           	psect	text51,local,class=CODE,merge=1,delta=2
    87                           	psect	text52,local,class=CODE,merge=1,delta=2
    88                           	psect	text53,local,class=CODE,merge=1,delta=2
    89                           	psect	text54,local,class=CODE,merge=1,delta=2
    90                           	psect	text55,local,class=CODE,merge=1,delta=2
    91                           	psect	text56,local,class=CODE,merge=1,delta=2
    92                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
    93                           	psect	text58,local,class=CODE,merge=1,delta=2
    94                           	psect	text59,local,class=CODE,merge=1,delta=2
    95                           	psect	text60,local,class=CODE,merge=1,delta=2
    96                           	psect	text61,local,class=CODE,merge=1,delta=2
    97                           	psect	text62,local,class=CODE,merge=1,delta=2
    98                           	psect	intentry,global,class=CODE,delta=2
    99                           	psect	text64,local,class=CODE,merge=1,delta=2
   100                           	psect	text65,local,class=CODE,merge=1,delta=2
   101                           	psect	text66,local,class=CODE,merge=1,delta=2
   102                           	psect	text67,local,class=CODE,merge=1,delta=2
   103                           	psect	text68,local,class=CODE,merge=1,delta=2
   104                           	psect	text69,local,class=CODE,merge=1,delta=2
   105                           	psect	text70,local,class=CODE,merge=1,delta=2
   106                           	psect	text71,local,class=CODE,merge=1,delta=2
   107                           	psect	text72,local,class=CODE,merge=1,delta=2
   108                           	psect	text73,local,class=CODE,merge=1,delta=2
   109                           	psect	text74,local,class=CODE,merge=1,delta=2
   110                           	psect	text75,local,class=CODE,merge=1,delta=2
   111                           	psect	text76,local,class=CODE,merge=1,delta=2
   112                           	psect	text77,local,class=CODE,merge=1,delta=2
   113                           	psect	text78,local,class=CODE,merge=1,delta=2
   114                           	psect	text79,local,class=CODE,merge=1,delta=2
   115                           	dabs	1,0xCA0,32
   116                           	dabs	1,0xC20,80
   117                           	dabs	1,0xBA0,80
   118                           	dabs	1,0xB20,80
   119                           	dabs	1,0xAA0,80
   120                           	dabs	1,0xA20,80
   121                           	dabs	1,0x9A0,80
   122                           	dabs	1,0x920,80
   123                           	dabs	1,0x8A0,80
   124                           	dabs	1,0x820,80
   125                           	dabs	1,0x7A0,80
   126                           	dabs	1,0x720,80
   127                           	dabs	1,0x6A0,80
   128                           	dabs	1,0x64E,34
   129                           	dabs	1,0x23EE,0,_dmxArray
   130                           	dabs	1,0x7E,2
   131  0000                     
   132                           ; Version 2.05
   133                           ; Generated 20/12/2018 GMT
   134                           ; 
   135                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC16F18446 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  008C                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  010F                     	;# 
   221  0110                     	;# 
   222  0111                     	;# 
   223  0112                     	;# 
   224  0113                     	;# 
   225  0114                     	;# 
   226  0115                     	;# 
   227  0116                     	;# 
   228  0117                     	;# 
   229  0118                     	;# 
   230  0119                     	;# 
   231  0119                     	;# 
   232  0119                     	;# 
   233  011A                     	;# 
   234  011A                     	;# 
   235  011A                     	;# 
   236  011B                     	;# 
   237  011B                     	;# 
   238  011B                     	;# 
   239  011B                     	;# 
   240  011B                     	;# 
   241  011C                     	;# 
   242  011C                     	;# 
   243  011C                     	;# 
   244  011D                     	;# 
   245  011D                     	;# 
   246  011D                     	;# 
   247  011E                     	;# 
   248  011E                     	;# 
   249  011E                     	;# 
   250  011F                     	;# 
   251  011F                     	;# 
   252  011F                     	;# 
   253  011F                     	;# 
   254  011F                     	;# 
   255  018C                     	;# 
   256  018D                     	;# 
   257  018E                     	;# 
   258  018F                     	;# 
   259  0190                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0196                     	;# 
   263  0197                     	;# 
   264  0198                     	;# 
   265  0199                     	;# 
   266  019A                     	;# 
   267  019B                     	;# 
   268  019C                     	;# 
   269  020C                     	;# 
   270  020D                     	;# 
   271  020E                     	;# 
   272  020E                     	;# 
   273  020F                     	;# 
   274  020F                     	;# 
   275  0210                     	;# 
   276  0210                     	;# 
   277  0211                     	;# 
   278  0211                     	;# 
   279  0212                     	;# 
   280  0213                     	;# 
   281  0214                     	;# 
   282  0214                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0216                     	;# 
   287  0217                     	;# 
   288  0217                     	;# 
   289  0218                     	;# 
   290  0219                     	;# 
   291  021A                     	;# 
   292  021A                     	;# 
   293  021B                     	;# 
   294  021B                     	;# 
   295  021C                     	;# 
   296  021C                     	;# 
   297  021D                     	;# 
   298  021D                     	;# 
   299  021E                     	;# 
   300  021F                     	;# 
   301  028C                     	;# 
   302  028C                     	;# 
   303  028D                     	;# 
   304  028D                     	;# 
   305  028E                     	;# 
   306  028F                     	;# 
   307  0290                     	;# 
   308  0291                     	;# 
   309  0292                     	;# 
   310  0292                     	;# 
   311  0293                     	;# 
   312  0293                     	;# 
   313  0294                     	;# 
   314  0295                     	;# 
   315  0296                     	;# 
   316  0297                     	;# 
   317  0298                     	;# 
   318  0298                     	;# 
   319  0299                     	;# 
   320  0299                     	;# 
   321  029A                     	;# 
   322  029B                     	;# 
   323  029C                     	;# 
   324  029D                     	;# 
   325  029F                     	;# 
   326  030C                     	;# 
   327  030C                     	;# 
   328  030D                     	;# 
   329  030E                     	;# 
   330  030F                     	;# 
   331  0310                     	;# 
   332  0310                     	;# 
   333  0311                     	;# 
   334  0312                     	;# 
   335  0313                     	;# 
   336  0314                     	;# 
   337  0314                     	;# 
   338  0315                     	;# 
   339  0316                     	;# 
   340  0317                     	;# 
   341  0318                     	;# 
   342  0318                     	;# 
   343  0319                     	;# 
   344  031A                     	;# 
   345  031B                     	;# 
   346  038C                     	;# 
   347  038C                     	;# 
   348  038D                     	;# 
   349  038E                     	;# 
   350  0390                     	;# 
   351  0390                     	;# 
   352  0391                     	;# 
   353  0392                     	;# 
   354  048C                     	;# 
   355  048C                     	;# 
   356  048D                     	;# 
   357  048E                     	;# 
   358  048F                     	;# 
   359  048F                     	;# 
   360  0490                     	;# 
   361  0491                     	;# 
   362  0492                     	;# 
   363  0492                     	;# 
   364  0493                     	;# 
   365  0494                     	;# 
   366  0495                     	;# 
   367  0495                     	;# 
   368  0496                     	;# 
   369  0497                     	;# 
   370  0498                     	;# 
   371  0499                     	;# 
   372  049A                     	;# 
   373  049B                     	;# 
   374  049C                     	;# 
   375  049D                     	;# 
   376  058C                     	;# 
   377  058C                     	;# 
   378  058D                     	;# 
   379  058E                     	;# 
   380  058F                     	;# 
   381  058F                     	;# 
   382  0590                     	;# 
   383  0591                     	;# 
   384  0592                     	;# 
   385  0593                     	;# 
   386  059C                     	;# 
   387  059C                     	;# 
   388  059D                     	;# 
   389  059D                     	;# 
   390  059E                     	;# 
   391  059F                     	;# 
   392  060C                     	;# 
   393  060C                     	;# 
   394  060D                     	;# 
   395  060D                     	;# 
   396  060E                     	;# 
   397  060F                     	;# 
   398  0610                     	;# 
   399  0611                     	;# 
   400  0612                     	;# 
   401  0613                     	;# 
   402  0614                     	;# 
   403  0616                     	;# 
   404  0616                     	;# 
   405  0617                     	;# 
   406  0617                     	;# 
   407  0618                     	;# 
   408  0619                     	;# 
   409  061A                     	;# 
   410  061B                     	;# 
   411  061C                     	;# 
   412  061D                     	;# 
   413  061E                     	;# 
   414  070C                     	;# 
   415  070D                     	;# 
   416  070E                     	;# 
   417  070F                     	;# 
   418  0710                     	;# 
   419  0711                     	;# 
   420  0712                     	;# 
   421  0713                     	;# 
   422  0714                     	;# 
   423  0716                     	;# 
   424  0717                     	;# 
   425  0718                     	;# 
   426  0719                     	;# 
   427  071A                     	;# 
   428  071B                     	;# 
   429  071C                     	;# 
   430  071D                     	;# 
   431  071E                     	;# 
   432  0796                     	;# 
   433  0797                     	;# 
   434  0798                     	;# 
   435  0799                     	;# 
   436  079A                     	;# 
   437  079B                     	;# 
   438  079C                     	;# 
   439  079D                     	;# 
   440  080C                     	;# 
   441  080D                     	;# 
   442  080E                     	;# 
   443  080F                     	;# 
   444  0810                     	;# 
   445  0811                     	;# 
   446  0812                     	;# 
   447  0813                     	;# 
   448  0814                     	;# 
   449  081A                     	;# 
   450  081A                     	;# 
   451  081B                     	;# 
   452  081C                     	;# 
   453  081C                     	;# 
   454  081D                     	;# 
   455  081E                     	;# 
   456  081F                     	;# 
   457  088C                     	;# 
   458  088D                     	;# 
   459  088E                     	;# 
   460  088F                     	;# 
   461  0890                     	;# 
   462  0891                     	;# 
   463  0892                     	;# 
   464  0893                     	;# 
   465  0895                     	;# 
   466  0896                     	;# 
   467  0897                     	;# 
   468  0898                     	;# 
   469  0899                     	;# 
   470  089A                     	;# 
   471  089B                     	;# 
   472  090C                     	;# 
   473  090E                     	;# 
   474  090F                     	;# 
   475  091F                     	;# 
   476  098F                     	;# 
   477  098F                     	;# 
   478  0990                     	;# 
   479  0991                     	;# 
   480  0992                     	;# 
   481  0993                     	;# 
   482  0994                     	;# 
   483  0995                     	;# 
   484  0996                     	;# 
   485  0997                     	;# 
   486  1E0F                     	;# 
   487  1E10                     	;# 
   488  1E11                     	;# 
   489  1E12                     	;# 
   490  1E13                     	;# 
   491  1E14                     	;# 
   492  1E15                     	;# 
   493  1E16                     	;# 
   494  1E17                     	;# 
   495  1E18                     	;# 
   496  1E19                     	;# 
   497  1E1A                     	;# 
   498  1E1B                     	;# 
   499  1E1C                     	;# 
   500  1E1D                     	;# 
   501  1E1E                     	;# 
   502  1E1F                     	;# 
   503  1E20                     	;# 
   504  1E21                     	;# 
   505  1E22                     	;# 
   506  1E23                     	;# 
   507  1E24                     	;# 
   508  1E25                     	;# 
   509  1E26                     	;# 
   510  1E27                     	;# 
   511  1E28                     	;# 
   512  1E29                     	;# 
   513  1E2A                     	;# 
   514  1E2B                     	;# 
   515  1E2C                     	;# 
   516  1E2D                     	;# 
   517  1E2E                     	;# 
   518  1E2F                     	;# 
   519  1E30                     	;# 
   520  1E31                     	;# 
   521  1E32                     	;# 
   522  1E33                     	;# 
   523  1E34                     	;# 
   524  1E35                     	;# 
   525  1E36                     	;# 
   526  1E37                     	;# 
   527  1E8F                     	;# 
   528  1E90                     	;# 
   529  1E91                     	;# 
   530  1E92                     	;# 
   531  1E93                     	;# 
   532  1E94                     	;# 
   533  1E95                     	;# 
   534  1E96                     	;# 
   535  1E97                     	;# 
   536  1E9C                     	;# 
   537  1E9D                     	;# 
   538  1E9E                     	;# 
   539  1EA1                     	;# 
   540  1EA2                     	;# 
   541  1EA3                     	;# 
   542  1EA4                     	;# 
   543  1EA9                     	;# 
   544  1EAA                     	;# 
   545  1EB1                     	;# 
   546  1EB2                     	;# 
   547  1EB8                     	;# 
   548  1EB9                     	;# 
   549  1EBA                     	;# 
   550  1EBB                     	;# 
   551  1EBC                     	;# 
   552  1EBD                     	;# 
   553  1EBE                     	;# 
   554  1EC3                     	;# 
   555  1EC5                     	;# 
   556  1EC6                     	;# 
   557  1EC7                     	;# 
   558  1EC8                     	;# 
   559  1EC9                     	;# 
   560  1ECA                     	;# 
   561  1ECB                     	;# 
   562  1ECB                     	;# 
   563  1ECB                     	;# 
   564  1ECC                     	;# 
   565  1ECC                     	;# 
   566  1ECC                     	;# 
   567  1F10                     	;# 
   568  1F11                     	;# 
   569  1F12                     	;# 
   570  1F14                     	;# 
   571  1F15                     	;# 
   572  1F1C                     	;# 
   573  1F1D                     	;# 
   574  1F1E                     	;# 
   575  1F1F                     	;# 
   576  1F20                     	;# 
   577  1F21                     	;# 
   578  1F22                     	;# 
   579  1F23                     	;# 
   580  1F24                     	;# 
   581  1F25                     	;# 
   582  1F26                     	;# 
   583  1F27                     	;# 
   584  1F38                     	;# 
   585  1F39                     	;# 
   586  1F3A                     	;# 
   587  1F3B                     	;# 
   588  1F3C                     	;# 
   589  1F3D                     	;# 
   590  1F3E                     	;# 
   591  1F3F                     	;# 
   592  1F43                     	;# 
   593  1F44                     	;# 
   594  1F45                     	;# 
   595  1F46                     	;# 
   596  1F47                     	;# 
   597  1F48                     	;# 
   598  1F49                     	;# 
   599  1F4A                     	;# 
   600  1F4E                     	;# 
   601  1F4F                     	;# 
   602  1F50                     	;# 
   603  1F51                     	;# 
   604  1F52                     	;# 
   605  1F53                     	;# 
   606  1F54                     	;# 
   607  1F55                     	;# 
   608  1FE4                     	;# 
   609  1FE5                     	;# 
   610  1FE6                     	;# 
   611  1FE7                     	;# 
   612  1FE8                     	;# 
   613  1FE8                     	;# 
   614  1FE9                     	;# 
   615  1FEA                     	;# 
   616  1FEB                     	;# 
   617  1FED                     	;# 
   618  1FEE                     	;# 
   619  1FEF                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0014                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  008C                     	;# 
   642  008C                     	;# 
   643  008D                     	;# 
   644  008E                     	;# 
   645  008E                     	;# 
   646  008F                     	;# 
   647  0090                     	;# 
   648  0090                     	;# 
   649  0091                     	;# 
   650  0092                     	;# 
   651  0092                     	;# 
   652  0093                     	;# 
   653  0094                     	;# 
   654  0094                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0096                     	;# 
   658  0097                     	;# 
   659  0098                     	;# 
   660  0099                     	;# 
   661  009A                     	;# 
   662  009B                     	;# 
   663  009B                     	;# 
   664  009C                     	;# 
   665  009D                     	;# 
   666  009D                     	;# 
   667  009E                     	;# 
   668  009F                     	;# 
   669  010C                     	;# 
   670  010C                     	;# 
   671  010D                     	;# 
   672  010E                     	;# 
   673  010F                     	;# 
   674  010F                     	;# 
   675  0110                     	;# 
   676  0111                     	;# 
   677  0112                     	;# 
   678  0113                     	;# 
   679  0114                     	;# 
   680  0115                     	;# 
   681  0116                     	;# 
   682  0117                     	;# 
   683  0118                     	;# 
   684  0119                     	;# 
   685  0119                     	;# 
   686  0119                     	;# 
   687  011A                     	;# 
   688  011A                     	;# 
   689  011A                     	;# 
   690  011B                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011C                     	;# 
   696  011C                     	;# 
   697  011C                     	;# 
   698  011D                     	;# 
   699  011D                     	;# 
   700  011D                     	;# 
   701  011E                     	;# 
   702  011E                     	;# 
   703  011E                     	;# 
   704  011F                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  018F                     	;# 
   713  0190                     	;# 
   714  0191                     	;# 
   715  0192                     	;# 
   716  0196                     	;# 
   717  0197                     	;# 
   718  0198                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019C                     	;# 
   723  020C                     	;# 
   724  020D                     	;# 
   725  020E                     	;# 
   726  020E                     	;# 
   727  020F                     	;# 
   728  020F                     	;# 
   729  0210                     	;# 
   730  0210                     	;# 
   731  0211                     	;# 
   732  0211                     	;# 
   733  0212                     	;# 
   734  0213                     	;# 
   735  0214                     	;# 
   736  0214                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0216                     	;# 
   740  0216                     	;# 
   741  0217                     	;# 
   742  0217                     	;# 
   743  0218                     	;# 
   744  0219                     	;# 
   745  021A                     	;# 
   746  021A                     	;# 
   747  021B                     	;# 
   748  021B                     	;# 
   749  021C                     	;# 
   750  021C                     	;# 
   751  021D                     	;# 
   752  021D                     	;# 
   753  021E                     	;# 
   754  021F                     	;# 
   755  028C                     	;# 
   756  028C                     	;# 
   757  028D                     	;# 
   758  028D                     	;# 
   759  028E                     	;# 
   760  028F                     	;# 
   761  0290                     	;# 
   762  0291                     	;# 
   763  0292                     	;# 
   764  0292                     	;# 
   765  0293                     	;# 
   766  0293                     	;# 
   767  0294                     	;# 
   768  0295                     	;# 
   769  0296                     	;# 
   770  0297                     	;# 
   771  0298                     	;# 
   772  0298                     	;# 
   773  0299                     	;# 
   774  0299                     	;# 
   775  029A                     	;# 
   776  029B                     	;# 
   777  029C                     	;# 
   778  029D                     	;# 
   779  029F                     	;# 
   780  030C                     	;# 
   781  030C                     	;# 
   782  030D                     	;# 
   783  030E                     	;# 
   784  030F                     	;# 
   785  0310                     	;# 
   786  0310                     	;# 
   787  0311                     	;# 
   788  0312                     	;# 
   789  0313                     	;# 
   790  0314                     	;# 
   791  0314                     	;# 
   792  0315                     	;# 
   793  0316                     	;# 
   794  0317                     	;# 
   795  0318                     	;# 
   796  0318                     	;# 
   797  0319                     	;# 
   798  031A                     	;# 
   799  031B                     	;# 
   800  038C                     	;# 
   801  038C                     	;# 
   802  038D                     	;# 
   803  038E                     	;# 
   804  0390                     	;# 
   805  0390                     	;# 
   806  0391                     	;# 
   807  0392                     	;# 
   808  048C                     	;# 
   809  048C                     	;# 
   810  048D                     	;# 
   811  048E                     	;# 
   812  048F                     	;# 
   813  048F                     	;# 
   814  0490                     	;# 
   815  0491                     	;# 
   816  0492                     	;# 
   817  0492                     	;# 
   818  0493                     	;# 
   819  0494                     	;# 
   820  0495                     	;# 
   821  0495                     	;# 
   822  0496                     	;# 
   823  0497                     	;# 
   824  0498                     	;# 
   825  0499                     	;# 
   826  049A                     	;# 
   827  049B                     	;# 
   828  049C                     	;# 
   829  049D                     	;# 
   830  058C                     	;# 
   831  058C                     	;# 
   832  058D                     	;# 
   833  058E                     	;# 
   834  058F                     	;# 
   835  058F                     	;# 
   836  0590                     	;# 
   837  0591                     	;# 
   838  0592                     	;# 
   839  0593                     	;# 
   840  059C                     	;# 
   841  059C                     	;# 
   842  059D                     	;# 
   843  059D                     	;# 
   844  059E                     	;# 
   845  059F                     	;# 
   846  060C                     	;# 
   847  060C                     	;# 
   848  060D                     	;# 
   849  060D                     	;# 
   850  060E                     	;# 
   851  060F                     	;# 
   852  0610                     	;# 
   853  0611                     	;# 
   854  0612                     	;# 
   855  0613                     	;# 
   856  0614                     	;# 
   857  0616                     	;# 
   858  0616                     	;# 
   859  0617                     	;# 
   860  0617                     	;# 
   861  0618                     	;# 
   862  0619                     	;# 
   863  061A                     	;# 
   864  061B                     	;# 
   865  061C                     	;# 
   866  061D                     	;# 
   867  061E                     	;# 
   868  070C                     	;# 
   869  070D                     	;# 
   870  070E                     	;# 
   871  070F                     	;# 
   872  0710                     	;# 
   873  0711                     	;# 
   874  0712                     	;# 
   875  0713                     	;# 
   876  0714                     	;# 
   877  0716                     	;# 
   878  0717                     	;# 
   879  0718                     	;# 
   880  0719                     	;# 
   881  071A                     	;# 
   882  071B                     	;# 
   883  071C                     	;# 
   884  071D                     	;# 
   885  071E                     	;# 
   886  0796                     	;# 
   887  0797                     	;# 
   888  0798                     	;# 
   889  0799                     	;# 
   890  079A                     	;# 
   891  079B                     	;# 
   892  079C                     	;# 
   893  079D                     	;# 
   894  080C                     	;# 
   895  080D                     	;# 
   896  080E                     	;# 
   897  080F                     	;# 
   898  0810                     	;# 
   899  0811                     	;# 
   900  0812                     	;# 
   901  0813                     	;# 
   902  0814                     	;# 
   903  081A                     	;# 
   904  081A                     	;# 
   905  081B                     	;# 
   906  081C                     	;# 
   907  081C                     	;# 
   908  081D                     	;# 
   909  081E                     	;# 
   910  081F                     	;# 
   911  088C                     	;# 
   912  088D                     	;# 
   913  088E                     	;# 
   914  088F                     	;# 
   915  0890                     	;# 
   916  0891                     	;# 
   917  0892                     	;# 
   918  0893                     	;# 
   919  0895                     	;# 
   920  0896                     	;# 
   921  0897                     	;# 
   922  0898                     	;# 
   923  0899                     	;# 
   924  089A                     	;# 
   925  089B                     	;# 
   926  090C                     	;# 
   927  090E                     	;# 
   928  090F                     	;# 
   929  091F                     	;# 
   930  098F                     	;# 
   931  098F                     	;# 
   932  0990                     	;# 
   933  0991                     	;# 
   934  0992                     	;# 
   935  0993                     	;# 
   936  0994                     	;# 
   937  0995                     	;# 
   938  0996                     	;# 
   939  0997                     	;# 
   940  1E0F                     	;# 
   941  1E10                     	;# 
   942  1E11                     	;# 
   943  1E12                     	;# 
   944  1E13                     	;# 
   945  1E14                     	;# 
   946  1E15                     	;# 
   947  1E16                     	;# 
   948  1E17                     	;# 
   949  1E18                     	;# 
   950  1E19                     	;# 
   951  1E1A                     	;# 
   952  1E1B                     	;# 
   953  1E1C                     	;# 
   954  1E1D                     	;# 
   955  1E1E                     	;# 
   956  1E1F                     	;# 
   957  1E20                     	;# 
   958  1E21                     	;# 
   959  1E22                     	;# 
   960  1E23                     	;# 
   961  1E24                     	;# 
   962  1E25                     	;# 
   963  1E26                     	;# 
   964  1E27                     	;# 
   965  1E28                     	;# 
   966  1E29                     	;# 
   967  1E2A                     	;# 
   968  1E2B                     	;# 
   969  1E2C                     	;# 
   970  1E2D                     	;# 
   971  1E2E                     	;# 
   972  1E2F                     	;# 
   973  1E30                     	;# 
   974  1E31                     	;# 
   975  1E32                     	;# 
   976  1E33                     	;# 
   977  1E34                     	;# 
   978  1E35                     	;# 
   979  1E36                     	;# 
   980  1E37                     	;# 
   981  1E8F                     	;# 
   982  1E90                     	;# 
   983  1E91                     	;# 
   984  1E92                     	;# 
   985  1E93                     	;# 
   986  1E94                     	;# 
   987  1E95                     	;# 
   988  1E96                     	;# 
   989  1E97                     	;# 
   990  1E9C                     	;# 
   991  1E9D                     	;# 
   992  1E9E                     	;# 
   993  1EA1                     	;# 
   994  1EA2                     	;# 
   995  1EA3                     	;# 
   996  1EA4                     	;# 
   997  1EA9                     	;# 
   998  1EAA                     	;# 
   999  1EB1                     	;# 
  1000  1EB2                     	;# 
  1001  1EB8                     	;# 
  1002  1EB9                     	;# 
  1003  1EBA                     	;# 
  1004  1EBB                     	;# 
  1005  1EBC                     	;# 
  1006  1EBD                     	;# 
  1007  1EBE                     	;# 
  1008  1EC3                     	;# 
  1009  1EC5                     	;# 
  1010  1EC6                     	;# 
  1011  1EC7                     	;# 
  1012  1EC8                     	;# 
  1013  1EC9                     	;# 
  1014  1ECA                     	;# 
  1015  1ECB                     	;# 
  1016  1ECB                     	;# 
  1017  1ECB                     	;# 
  1018  1ECC                     	;# 
  1019  1ECC                     	;# 
  1020  1ECC                     	;# 
  1021  1F10                     	;# 
  1022  1F11                     	;# 
  1023  1F12                     	;# 
  1024  1F14                     	;# 
  1025  1F15                     	;# 
  1026  1F1C                     	;# 
  1027  1F1D                     	;# 
  1028  1F1E                     	;# 
  1029  1F1F                     	;# 
  1030  1F20                     	;# 
  1031  1F21                     	;# 
  1032  1F22                     	;# 
  1033  1F23                     	;# 
  1034  1F24                     	;# 
  1035  1F25                     	;# 
  1036  1F26                     	;# 
  1037  1F27                     	;# 
  1038  1F38                     	;# 
  1039  1F39                     	;# 
  1040  1F3A                     	;# 
  1041  1F3B                     	;# 
  1042  1F3C                     	;# 
  1043  1F3D                     	;# 
  1044  1F3E                     	;# 
  1045  1F3F                     	;# 
  1046  1F43                     	;# 
  1047  1F44                     	;# 
  1048  1F45                     	;# 
  1049  1F46                     	;# 
  1050  1F47                     	;# 
  1051  1F48                     	;# 
  1052  1F49                     	;# 
  1053  1F4A                     	;# 
  1054  1F4E                     	;# 
  1055  1F4F                     	;# 
  1056  1F50                     	;# 
  1057  1F51                     	;# 
  1058  1F52                     	;# 
  1059  1F53                     	;# 
  1060  1F54                     	;# 
  1061  1F55                     	;# 
  1062  1FE4                     	;# 
  1063  1FE5                     	;# 
  1064  1FE6                     	;# 
  1065  1FE7                     	;# 
  1066  1FE8                     	;# 
  1067  1FE8                     	;# 
  1068  1FE9                     	;# 
  1069  1FEA                     	;# 
  1070  1FEB                     	;# 
  1071  1FED                     	;# 
  1072  1FEE                     	;# 
  1073  1FEF                     	;# 
  1074  0000                     	;# 
  1075  0001                     	;# 
  1076  0002                     	;# 
  1077  0003                     	;# 
  1078  0004                     	;# 
  1079  0005                     	;# 
  1080  0006                     	;# 
  1081  0007                     	;# 
  1082  0008                     	;# 
  1083  0009                     	;# 
  1084  000A                     	;# 
  1085  000B                     	;# 
  1086  000C                     	;# 
  1087  000D                     	;# 
  1088  000E                     	;# 
  1089  0012                     	;# 
  1090  0013                     	;# 
  1091  0014                     	;# 
  1092  0018                     	;# 
  1093  0019                     	;# 
  1094  001A                     	;# 
  1095  008C                     	;# 
  1096  008C                     	;# 
  1097  008D                     	;# 
  1098  008E                     	;# 
  1099  008E                     	;# 
  1100  008F                     	;# 
  1101  0090                     	;# 
  1102  0090                     	;# 
  1103  0091                     	;# 
  1104  0092                     	;# 
  1105  0092                     	;# 
  1106  0093                     	;# 
  1107  0094                     	;# 
  1108  0094                     	;# 
  1109  0095                     	;# 
  1110  0096                     	;# 
  1111  0096                     	;# 
  1112  0097                     	;# 
  1113  0098                     	;# 
  1114  0099                     	;# 
  1115  009A                     	;# 
  1116  009B                     	;# 
  1117  009B                     	;# 
  1118  009C                     	;# 
  1119  009D                     	;# 
  1120  009D                     	;# 
  1121  009E                     	;# 
  1122  009F                     	;# 
  1123  010C                     	;# 
  1124  010C                     	;# 
  1125  010D                     	;# 
  1126  010E                     	;# 
  1127  010F                     	;# 
  1128  010F                     	;# 
  1129  0110                     	;# 
  1130  0111                     	;# 
  1131  0112                     	;# 
  1132  0113                     	;# 
  1133  0114                     	;# 
  1134  0115                     	;# 
  1135  0116                     	;# 
  1136  0117                     	;# 
  1137  0118                     	;# 
  1138  0119                     	;# 
  1139  0119                     	;# 
  1140  0119                     	;# 
  1141  011A                     	;# 
  1142  011A                     	;# 
  1143  011A                     	;# 
  1144  011B                     	;# 
  1145  011B                     	;# 
  1146  011B                     	;# 
  1147  011B                     	;# 
  1148  011B                     	;# 
  1149  011C                     	;# 
  1150  011C                     	;# 
  1151  011C                     	;# 
  1152  011D                     	;# 
  1153  011D                     	;# 
  1154  011D                     	;# 
  1155  011E                     	;# 
  1156  011E                     	;# 
  1157  011E                     	;# 
  1158  011F                     	;# 
  1159  011F                     	;# 
  1160  011F                     	;# 
  1161  011F                     	;# 
  1162  011F                     	;# 
  1163  018C                     	;# 
  1164  018D                     	;# 
  1165  018E                     	;# 
  1166  018F                     	;# 
  1167  0190                     	;# 
  1168  0191                     	;# 
  1169  0192                     	;# 
  1170  0196                     	;# 
  1171  0197                     	;# 
  1172  0198                     	;# 
  1173  0199                     	;# 
  1174  019A                     	;# 
  1175  019B                     	;# 
  1176  019C                     	;# 
  1177  020C                     	;# 
  1178  020D                     	;# 
  1179  020E                     	;# 
  1180  020E                     	;# 
  1181  020F                     	;# 
  1182  020F                     	;# 
  1183  0210                     	;# 
  1184  0210                     	;# 
  1185  0211                     	;# 
  1186  0211                     	;# 
  1187  0212                     	;# 
  1188  0213                     	;# 
  1189  0214                     	;# 
  1190  0214                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0216                     	;# 
  1194  0216                     	;# 
  1195  0217                     	;# 
  1196  0217                     	;# 
  1197  0218                     	;# 
  1198  0219                     	;# 
  1199  021A                     	;# 
  1200  021A                     	;# 
  1201  021B                     	;# 
  1202  021B                     	;# 
  1203  021C                     	;# 
  1204  021C                     	;# 
  1205  021D                     	;# 
  1206  021D                     	;# 
  1207  021E                     	;# 
  1208  021F                     	;# 
  1209  028C                     	;# 
  1210  028C                     	;# 
  1211  028D                     	;# 
  1212  028D                     	;# 
  1213  028E                     	;# 
  1214  028F                     	;# 
  1215  0290                     	;# 
  1216  0291                     	;# 
  1217  0292                     	;# 
  1218  0292                     	;# 
  1219  0293                     	;# 
  1220  0293                     	;# 
  1221  0294                     	;# 
  1222  0295                     	;# 
  1223  0296                     	;# 
  1224  0297                     	;# 
  1225  0298                     	;# 
  1226  0298                     	;# 
  1227  0299                     	;# 
  1228  0299                     	;# 
  1229  029A                     	;# 
  1230  029B                     	;# 
  1231  029C                     	;# 
  1232  029D                     	;# 
  1233  029F                     	;# 
  1234  030C                     	;# 
  1235  030C                     	;# 
  1236  030D                     	;# 
  1237  030E                     	;# 
  1238  030F                     	;# 
  1239  0310                     	;# 
  1240  0310                     	;# 
  1241  0311                     	;# 
  1242  0312                     	;# 
  1243  0313                     	;# 
  1244  0314                     	;# 
  1245  0314                     	;# 
  1246  0315                     	;# 
  1247  0316                     	;# 
  1248  0317                     	;# 
  1249  0318                     	;# 
  1250  0318                     	;# 
  1251  0319                     	;# 
  1252  031A                     	;# 
  1253  031B                     	;# 
  1254  038C                     	;# 
  1255  038C                     	;# 
  1256  038D                     	;# 
  1257  038E                     	;# 
  1258  0390                     	;# 
  1259  0390                     	;# 
  1260  0391                     	;# 
  1261  0392                     	;# 
  1262  048C                     	;# 
  1263  048C                     	;# 
  1264  048D                     	;# 
  1265  048E                     	;# 
  1266  048F                     	;# 
  1267  048F                     	;# 
  1268  0490                     	;# 
  1269  0491                     	;# 
  1270  0492                     	;# 
  1271  0492                     	;# 
  1272  0493                     	;# 
  1273  0494                     	;# 
  1274  0495                     	;# 
  1275  0495                     	;# 
  1276  0496                     	;# 
  1277  0497                     	;# 
  1278  0498                     	;# 
  1279  0499                     	;# 
  1280  049A                     	;# 
  1281  049B                     	;# 
  1282  049C                     	;# 
  1283  049D                     	;# 
  1284  058C                     	;# 
  1285  058C                     	;# 
  1286  058D                     	;# 
  1287  058E                     	;# 
  1288  058F                     	;# 
  1289  058F                     	;# 
  1290  0590                     	;# 
  1291  0591                     	;# 
  1292  0592                     	;# 
  1293  0593                     	;# 
  1294  059C                     	;# 
  1295  059C                     	;# 
  1296  059D                     	;# 
  1297  059D                     	;# 
  1298  059E                     	;# 
  1299  059F                     	;# 
  1300  060C                     	;# 
  1301  060C                     	;# 
  1302  060D                     	;# 
  1303  060D                     	;# 
  1304  060E                     	;# 
  1305  060F                     	;# 
  1306  0610                     	;# 
  1307  0611                     	;# 
  1308  0612                     	;# 
  1309  0613                     	;# 
  1310  0614                     	;# 
  1311  0616                     	;# 
  1312  0616                     	;# 
  1313  0617                     	;# 
  1314  0617                     	;# 
  1315  0618                     	;# 
  1316  0619                     	;# 
  1317  061A                     	;# 
  1318  061B                     	;# 
  1319  061C                     	;# 
  1320  061D                     	;# 
  1321  061E                     	;# 
  1322  070C                     	;# 
  1323  070D                     	;# 
  1324  070E                     	;# 
  1325  070F                     	;# 
  1326  0710                     	;# 
  1327  0711                     	;# 
  1328  0712                     	;# 
  1329  0713                     	;# 
  1330  0714                     	;# 
  1331  0716                     	;# 
  1332  0717                     	;# 
  1333  0718                     	;# 
  1334  0719                     	;# 
  1335  071A                     	;# 
  1336  071B                     	;# 
  1337  071C                     	;# 
  1338  071D                     	;# 
  1339  071E                     	;# 
  1340  0796                     	;# 
  1341  0797                     	;# 
  1342  0798                     	;# 
  1343  0799                     	;# 
  1344  079A                     	;# 
  1345  079B                     	;# 
  1346  079C                     	;# 
  1347  079D                     	;# 
  1348  080C                     	;# 
  1349  080D                     	;# 
  1350  080E                     	;# 
  1351  080F                     	;# 
  1352  0810                     	;# 
  1353  0811                     	;# 
  1354  0812                     	;# 
  1355  0813                     	;# 
  1356  0814                     	;# 
  1357  081A                     	;# 
  1358  081A                     	;# 
  1359  081B                     	;# 
  1360  081C                     	;# 
  1361  081C                     	;# 
  1362  081D                     	;# 
  1363  081E                     	;# 
  1364  081F                     	;# 
  1365  088C                     	;# 
  1366  088D                     	;# 
  1367  088E                     	;# 
  1368  088F                     	;# 
  1369  0890                     	;# 
  1370  0891                     	;# 
  1371  0892                     	;# 
  1372  0893                     	;# 
  1373  0895                     	;# 
  1374  0896                     	;# 
  1375  0897                     	;# 
  1376  0898                     	;# 
  1377  0899                     	;# 
  1378  089A                     	;# 
  1379  089B                     	;# 
  1380  090C                     	;# 
  1381  090E                     	;# 
  1382  090F                     	;# 
  1383  091F                     	;# 
  1384  098F                     	;# 
  1385  098F                     	;# 
  1386  0990                     	;# 
  1387  0991                     	;# 
  1388  0992                     	;# 
  1389  0993                     	;# 
  1390  0994                     	;# 
  1391  0995                     	;# 
  1392  0996                     	;# 
  1393  0997                     	;# 
  1394  1E0F                     	;# 
  1395  1E10                     	;# 
  1396  1E11                     	;# 
  1397  1E12                     	;# 
  1398  1E13                     	;# 
  1399  1E14                     	;# 
  1400  1E15                     	;# 
  1401  1E16                     	;# 
  1402  1E17                     	;# 
  1403  1E18                     	;# 
  1404  1E19                     	;# 
  1405  1E1A                     	;# 
  1406  1E1B                     	;# 
  1407  1E1C                     	;# 
  1408  1E1D                     	;# 
  1409  1E1E                     	;# 
  1410  1E1F                     	;# 
  1411  1E20                     	;# 
  1412  1E21                     	;# 
  1413  1E22                     	;# 
  1414  1E23                     	;# 
  1415  1E24                     	;# 
  1416  1E25                     	;# 
  1417  1E26                     	;# 
  1418  1E27                     	;# 
  1419  1E28                     	;# 
  1420  1E29                     	;# 
  1421  1E2A                     	;# 
  1422  1E2B                     	;# 
  1423  1E2C                     	;# 
  1424  1E2D                     	;# 
  1425  1E2E                     	;# 
  1426  1E2F                     	;# 
  1427  1E30                     	;# 
  1428  1E31                     	;# 
  1429  1E32                     	;# 
  1430  1E33                     	;# 
  1431  1E34                     	;# 
  1432  1E35                     	;# 
  1433  1E36                     	;# 
  1434  1E37                     	;# 
  1435  1E8F                     	;# 
  1436  1E90                     	;# 
  1437  1E91                     	;# 
  1438  1E92                     	;# 
  1439  1E93                     	;# 
  1440  1E94                     	;# 
  1441  1E95                     	;# 
  1442  1E96                     	;# 
  1443  1E97                     	;# 
  1444  1E9C                     	;# 
  1445  1E9D                     	;# 
  1446  1E9E                     	;# 
  1447  1EA1                     	;# 
  1448  1EA2                     	;# 
  1449  1EA3                     	;# 
  1450  1EA4                     	;# 
  1451  1EA9                     	;# 
  1452  1EAA                     	;# 
  1453  1EB1                     	;# 
  1454  1EB2                     	;# 
  1455  1EB8                     	;# 
  1456  1EB9                     	;# 
  1457  1EBA                     	;# 
  1458  1EBB                     	;# 
  1459  1EBC                     	;# 
  1460  1EBD                     	;# 
  1461  1EBE                     	;# 
  1462  1EC3                     	;# 
  1463  1EC5                     	;# 
  1464  1EC6                     	;# 
  1465  1EC7                     	;# 
  1466  1EC8                     	;# 
  1467  1EC9                     	;# 
  1468  1ECA                     	;# 
  1469  1ECB                     	;# 
  1470  1ECB                     	;# 
  1471  1ECB                     	;# 
  1472  1ECC                     	;# 
  1473  1ECC                     	;# 
  1474  1ECC                     	;# 
  1475  1F10                     	;# 
  1476  1F11                     	;# 
  1477  1F12                     	;# 
  1478  1F14                     	;# 
  1479  1F15                     	;# 
  1480  1F1C                     	;# 
  1481  1F1D                     	;# 
  1482  1F1E                     	;# 
  1483  1F1F                     	;# 
  1484  1F20                     	;# 
  1485  1F21                     	;# 
  1486  1F22                     	;# 
  1487  1F23                     	;# 
  1488  1F24                     	;# 
  1489  1F25                     	;# 
  1490  1F26                     	;# 
  1491  1F27                     	;# 
  1492  1F38                     	;# 
  1493  1F39                     	;# 
  1494  1F3A                     	;# 
  1495  1F3B                     	;# 
  1496  1F3C                     	;# 
  1497  1F3D                     	;# 
  1498  1F3E                     	;# 
  1499  1F3F                     	;# 
  1500  1F43                     	;# 
  1501  1F44                     	;# 
  1502  1F45                     	;# 
  1503  1F46                     	;# 
  1504  1F47                     	;# 
  1505  1F48                     	;# 
  1506  1F49                     	;# 
  1507  1F4A                     	;# 
  1508  1F4E                     	;# 
  1509  1F4F                     	;# 
  1510  1F50                     	;# 
  1511  1F51                     	;# 
  1512  1F52                     	;# 
  1513  1F53                     	;# 
  1514  1F54                     	;# 
  1515  1F55                     	;# 
  1516  1FE4                     	;# 
  1517  1FE5                     	;# 
  1518  1FE6                     	;# 
  1519  1FE7                     	;# 
  1520  1FE8                     	;# 
  1521  1FE8                     	;# 
  1522  1FE9                     	;# 
  1523  1FEA                     	;# 
  1524  1FEB                     	;# 
  1525  1FED                     	;# 
  1526  1FEE                     	;# 
  1527  1FEF                     	;# 
  1528  0000                     	;# 
  1529  0001                     	;# 
  1530  0002                     	;# 
  1531  0003                     	;# 
  1532  0004                     	;# 
  1533  0005                     	;# 
  1534  0006                     	;# 
  1535  0007                     	;# 
  1536  0008                     	;# 
  1537  0009                     	;# 
  1538  000A                     	;# 
  1539  000B                     	;# 
  1540  000C                     	;# 
  1541  000D                     	;# 
  1542  000E                     	;# 
  1543  0012                     	;# 
  1544  0013                     	;# 
  1545  0014                     	;# 
  1546  0018                     	;# 
  1547  0019                     	;# 
  1548  001A                     	;# 
  1549  008C                     	;# 
  1550  008C                     	;# 
  1551  008D                     	;# 
  1552  008E                     	;# 
  1553  008E                     	;# 
  1554  008F                     	;# 
  1555  0090                     	;# 
  1556  0090                     	;# 
  1557  0091                     	;# 
  1558  0092                     	;# 
  1559  0092                     	;# 
  1560  0093                     	;# 
  1561  0094                     	;# 
  1562  0094                     	;# 
  1563  0095                     	;# 
  1564  0096                     	;# 
  1565  0096                     	;# 
  1566  0097                     	;# 
  1567  0098                     	;# 
  1568  0099                     	;# 
  1569  009A                     	;# 
  1570  009B                     	;# 
  1571  009B                     	;# 
  1572  009C                     	;# 
  1573  009D                     	;# 
  1574  009D                     	;# 
  1575  009E                     	;# 
  1576  009F                     	;# 
  1577  010C                     	;# 
  1578  010C                     	;# 
  1579  010D                     	;# 
  1580  010E                     	;# 
  1581  010F                     	;# 
  1582  010F                     	;# 
  1583  0110                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  0119                     	;# 
  1594  0119                     	;# 
  1595  011A                     	;# 
  1596  011A                     	;# 
  1597  011A                     	;# 
  1598  011B                     	;# 
  1599  011B                     	;# 
  1600  011B                     	;# 
  1601  011B                     	;# 
  1602  011B                     	;# 
  1603  011C                     	;# 
  1604  011C                     	;# 
  1605  011C                     	;# 
  1606  011D                     	;# 
  1607  011D                     	;# 
  1608  011D                     	;# 
  1609  011E                     	;# 
  1610  011E                     	;# 
  1611  011E                     	;# 
  1612  011F                     	;# 
  1613  011F                     	;# 
  1614  011F                     	;# 
  1615  011F                     	;# 
  1616  011F                     	;# 
  1617  018C                     	;# 
  1618  018D                     	;# 
  1619  018E                     	;# 
  1620  018F                     	;# 
  1621  0190                     	;# 
  1622  0191                     	;# 
  1623  0192                     	;# 
  1624  0196                     	;# 
  1625  0197                     	;# 
  1626  0198                     	;# 
  1627  0199                     	;# 
  1628  019A                     	;# 
  1629  019B                     	;# 
  1630  019C                     	;# 
  1631  020C                     	;# 
  1632  020D                     	;# 
  1633  020E                     	;# 
  1634  020E                     	;# 
  1635  020F                     	;# 
  1636  020F                     	;# 
  1637  0210                     	;# 
  1638  0210                     	;# 
  1639  0211                     	;# 
  1640  0211                     	;# 
  1641  0212                     	;# 
  1642  0213                     	;# 
  1643  0214                     	;# 
  1644  0214                     	;# 
  1645  0215                     	;# 
  1646  0215                     	;# 
  1647  0216                     	;# 
  1648  0216                     	;# 
  1649  0217                     	;# 
  1650  0217                     	;# 
  1651  0218                     	;# 
  1652  0219                     	;# 
  1653  021A                     	;# 
  1654  021A                     	;# 
  1655  021B                     	;# 
  1656  021B                     	;# 
  1657  021C                     	;# 
  1658  021C                     	;# 
  1659  021D                     	;# 
  1660  021D                     	;# 
  1661  021E                     	;# 
  1662  021F                     	;# 
  1663  028C                     	;# 
  1664  028C                     	;# 
  1665  028D                     	;# 
  1666  028D                     	;# 
  1667  028E                     	;# 
  1668  028F                     	;# 
  1669  0290                     	;# 
  1670  0291                     	;# 
  1671  0292                     	;# 
  1672  0292                     	;# 
  1673  0293                     	;# 
  1674  0293                     	;# 
  1675  0294                     	;# 
  1676  0295                     	;# 
  1677  0296                     	;# 
  1678  0297                     	;# 
  1679  0298                     	;# 
  1680  0298                     	;# 
  1681  0299                     	;# 
  1682  0299                     	;# 
  1683  029A                     	;# 
  1684  029B                     	;# 
  1685  029C                     	;# 
  1686  029D                     	;# 
  1687  029F                     	;# 
  1688  030C                     	;# 
  1689  030C                     	;# 
  1690  030D                     	;# 
  1691  030E                     	;# 
  1692  030F                     	;# 
  1693  0310                     	;# 
  1694  0310                     	;# 
  1695  0311                     	;# 
  1696  0312                     	;# 
  1697  0313                     	;# 
  1698  0314                     	;# 
  1699  0314                     	;# 
  1700  0315                     	;# 
  1701  0316                     	;# 
  1702  0317                     	;# 
  1703  0318                     	;# 
  1704  0318                     	;# 
  1705  0319                     	;# 
  1706  031A                     	;# 
  1707  031B                     	;# 
  1708  038C                     	;# 
  1709  038C                     	;# 
  1710  038D                     	;# 
  1711  038E                     	;# 
  1712  0390                     	;# 
  1713  0390                     	;# 
  1714  0391                     	;# 
  1715  0392                     	;# 
  1716  048C                     	;# 
  1717  048C                     	;# 
  1718  048D                     	;# 
  1719  048E                     	;# 
  1720  048F                     	;# 
  1721  048F                     	;# 
  1722  0490                     	;# 
  1723  0491                     	;# 
  1724  0492                     	;# 
  1725  0492                     	;# 
  1726  0493                     	;# 
  1727  0494                     	;# 
  1728  0495                     	;# 
  1729  0495                     	;# 
  1730  0496                     	;# 
  1731  0497                     	;# 
  1732  0498                     	;# 
  1733  0499                     	;# 
  1734  049A                     	;# 
  1735  049B                     	;# 
  1736  049C                     	;# 
  1737  049D                     	;# 
  1738  058C                     	;# 
  1739  058C                     	;# 
  1740  058D                     	;# 
  1741  058E                     	;# 
  1742  058F                     	;# 
  1743  058F                     	;# 
  1744  0590                     	;# 
  1745  0591                     	;# 
  1746  0592                     	;# 
  1747  0593                     	;# 
  1748  059C                     	;# 
  1749  059C                     	;# 
  1750  059D                     	;# 
  1751  059D                     	;# 
  1752  059E                     	;# 
  1753  059F                     	;# 
  1754  060C                     	;# 
  1755  060C                     	;# 
  1756  060D                     	;# 
  1757  060D                     	;# 
  1758  060E                     	;# 
  1759  060F                     	;# 
  1760  0610                     	;# 
  1761  0611                     	;# 
  1762  0612                     	;# 
  1763  0613                     	;# 
  1764  0614                     	;# 
  1765  0616                     	;# 
  1766  0616                     	;# 
  1767  0617                     	;# 
  1768  0617                     	;# 
  1769  0618                     	;# 
  1770  0619                     	;# 
  1771  061A                     	;# 
  1772  061B                     	;# 
  1773  061C                     	;# 
  1774  061D                     	;# 
  1775  061E                     	;# 
  1776  070C                     	;# 
  1777  070D                     	;# 
  1778  070E                     	;# 
  1779  070F                     	;# 
  1780  0710                     	;# 
  1781  0711                     	;# 
  1782  0712                     	;# 
  1783  0713                     	;# 
  1784  0714                     	;# 
  1785  0716                     	;# 
  1786  0717                     	;# 
  1787  0718                     	;# 
  1788  0719                     	;# 
  1789  071A                     	;# 
  1790  071B                     	;# 
  1791  071C                     	;# 
  1792  071D                     	;# 
  1793  071E                     	;# 
  1794  0796                     	;# 
  1795  0797                     	;# 
  1796  0798                     	;# 
  1797  0799                     	;# 
  1798  079A                     	;# 
  1799  079B                     	;# 
  1800  079C                     	;# 
  1801  079D                     	;# 
  1802  080C                     	;# 
  1803  080D                     	;# 
  1804  080E                     	;# 
  1805  080F                     	;# 
  1806  0810                     	;# 
  1807  0811                     	;# 
  1808  0812                     	;# 
  1809  0813                     	;# 
  1810  0814                     	;# 
  1811  081A                     	;# 
  1812  081A                     	;# 
  1813  081B                     	;# 
  1814  081C                     	;# 
  1815  081C                     	;# 
  1816  081D                     	;# 
  1817  081E                     	;# 
  1818  081F                     	;# 
  1819  088C                     	;# 
  1820  088D                     	;# 
  1821  088E                     	;# 
  1822  088F                     	;# 
  1823  0890                     	;# 
  1824  0891                     	;# 
  1825  0892                     	;# 
  1826  0893                     	;# 
  1827  0895                     	;# 
  1828  0896                     	;# 
  1829  0897                     	;# 
  1830  0898                     	;# 
  1831  0899                     	;# 
  1832  089A                     	;# 
  1833  089B                     	;# 
  1834  090C                     	;# 
  1835  090E                     	;# 
  1836  090F                     	;# 
  1837  091F                     	;# 
  1838  098F                     	;# 
  1839  098F                     	;# 
  1840  0990                     	;# 
  1841  0991                     	;# 
  1842  0992                     	;# 
  1843  0993                     	;# 
  1844  0994                     	;# 
  1845  0995                     	;# 
  1846  0996                     	;# 
  1847  0997                     	;# 
  1848  1E0F                     	;# 
  1849  1E10                     	;# 
  1850  1E11                     	;# 
  1851  1E12                     	;# 
  1852  1E13                     	;# 
  1853  1E14                     	;# 
  1854  1E15                     	;# 
  1855  1E16                     	;# 
  1856  1E17                     	;# 
  1857  1E18                     	;# 
  1858  1E19                     	;# 
  1859  1E1A                     	;# 
  1860  1E1B                     	;# 
  1861  1E1C                     	;# 
  1862  1E1D                     	;# 
  1863  1E1E                     	;# 
  1864  1E1F                     	;# 
  1865  1E20                     	;# 
  1866  1E21                     	;# 
  1867  1E22                     	;# 
  1868  1E23                     	;# 
  1869  1E24                     	;# 
  1870  1E25                     	;# 
  1871  1E26                     	;# 
  1872  1E27                     	;# 
  1873  1E28                     	;# 
  1874  1E29                     	;# 
  1875  1E2A                     	;# 
  1876  1E2B                     	;# 
  1877  1E2C                     	;# 
  1878  1E2D                     	;# 
  1879  1E2E                     	;# 
  1880  1E2F                     	;# 
  1881  1E30                     	;# 
  1882  1E31                     	;# 
  1883  1E32                     	;# 
  1884  1E33                     	;# 
  1885  1E34                     	;# 
  1886  1E35                     	;# 
  1887  1E36                     	;# 
  1888  1E37                     	;# 
  1889  1E8F                     	;# 
  1890  1E90                     	;# 
  1891  1E91                     	;# 
  1892  1E92                     	;# 
  1893  1E93                     	;# 
  1894  1E94                     	;# 
  1895  1E95                     	;# 
  1896  1E96                     	;# 
  1897  1E97                     	;# 
  1898  1E9C                     	;# 
  1899  1E9D                     	;# 
  1900  1E9E                     	;# 
  1901  1EA1                     	;# 
  1902  1EA2                     	;# 
  1903  1EA3                     	;# 
  1904  1EA4                     	;# 
  1905  1EA9                     	;# 
  1906  1EAA                     	;# 
  1907  1EB1                     	;# 
  1908  1EB2                     	;# 
  1909  1EB8                     	;# 
  1910  1EB9                     	;# 
  1911  1EBA                     	;# 
  1912  1EBB                     	;# 
  1913  1EBC                     	;# 
  1914  1EBD                     	;# 
  1915  1EBE                     	;# 
  1916  1EC3                     	;# 
  1917  1EC5                     	;# 
  1918  1EC6                     	;# 
  1919  1EC7                     	;# 
  1920  1EC8                     	;# 
  1921  1EC9                     	;# 
  1922  1ECA                     	;# 
  1923  1ECB                     	;# 
  1924  1ECB                     	;# 
  1925  1ECB                     	;# 
  1926  1ECC                     	;# 
  1927  1ECC                     	;# 
  1928  1ECC                     	;# 
  1929  1F10                     	;# 
  1930  1F11                     	;# 
  1931  1F12                     	;# 
  1932  1F14                     	;# 
  1933  1F15                     	;# 
  1934  1F1C                     	;# 
  1935  1F1D                     	;# 
  1936  1F1E                     	;# 
  1937  1F1F                     	;# 
  1938  1F20                     	;# 
  1939  1F21                     	;# 
  1940  1F22                     	;# 
  1941  1F23                     	;# 
  1942  1F24                     	;# 
  1943  1F25                     	;# 
  1944  1F26                     	;# 
  1945  1F27                     	;# 
  1946  1F38                     	;# 
  1947  1F39                     	;# 
  1948  1F3A                     	;# 
  1949  1F3B                     	;# 
  1950  1F3C                     	;# 
  1951  1F3D                     	;# 
  1952  1F3E                     	;# 
  1953  1F3F                     	;# 
  1954  1F43                     	;# 
  1955  1F44                     	;# 
  1956  1F45                     	;# 
  1957  1F46                     	;# 
  1958  1F47                     	;# 
  1959  1F48                     	;# 
  1960  1F49                     	;# 
  1961  1F4A                     	;# 
  1962  1F4E                     	;# 
  1963  1F4F                     	;# 
  1964  1F50                     	;# 
  1965  1F51                     	;# 
  1966  1F52                     	;# 
  1967  1F53                     	;# 
  1968  1F54                     	;# 
  1969  1F55                     	;# 
  1970  1FE4                     	;# 
  1971  1FE5                     	;# 
  1972  1FE6                     	;# 
  1973  1FE7                     	;# 
  1974  1FE8                     	;# 
  1975  1FE8                     	;# 
  1976  1FE9                     	;# 
  1977  1FEA                     	;# 
  1978  1FEB                     	;# 
  1979  1FED                     	;# 
  1980  1FEE                     	;# 
  1981  1FEF                     	;# 
  1982  0000                     	;# 
  1983  0001                     	;# 
  1984  0002                     	;# 
  1985  0003                     	;# 
  1986  0004                     	;# 
  1987  0005                     	;# 
  1988  0006                     	;# 
  1989  0007                     	;# 
  1990  0008                     	;# 
  1991  0009                     	;# 
  1992  000A                     	;# 
  1993  000B                     	;# 
  1994  000C                     	;# 
  1995  000D                     	;# 
  1996  000E                     	;# 
  1997  0012                     	;# 
  1998  0013                     	;# 
  1999  0014                     	;# 
  2000  0018                     	;# 
  2001  0019                     	;# 
  2002  001A                     	;# 
  2003  008C                     	;# 
  2004  008C                     	;# 
  2005  008D                     	;# 
  2006  008E                     	;# 
  2007  008E                     	;# 
  2008  008F                     	;# 
  2009  0090                     	;# 
  2010  0090                     	;# 
  2011  0091                     	;# 
  2012  0092                     	;# 
  2013  0092                     	;# 
  2014  0093                     	;# 
  2015  0094                     	;# 
  2016  0094                     	;# 
  2017  0095                     	;# 
  2018  0096                     	;# 
  2019  0096                     	;# 
  2020  0097                     	;# 
  2021  0098                     	;# 
  2022  0099                     	;# 
  2023  009A                     	;# 
  2024  009B                     	;# 
  2025  009B                     	;# 
  2026  009C                     	;# 
  2027  009D                     	;# 
  2028  009D                     	;# 
  2029  009E                     	;# 
  2030  009F                     	;# 
  2031  010C                     	;# 
  2032  010C                     	;# 
  2033  010D                     	;# 
  2034  010E                     	;# 
  2035  010F                     	;# 
  2036  010F                     	;# 
  2037  0110                     	;# 
  2038  0111                     	;# 
  2039  0112                     	;# 
  2040  0113                     	;# 
  2041  0114                     	;# 
  2042  0115                     	;# 
  2043  0116                     	;# 
  2044  0117                     	;# 
  2045  0118                     	;# 
  2046  0119                     	;# 
  2047  0119                     	;# 
  2048  0119                     	;# 
  2049  011A                     	;# 
  2050  011A                     	;# 
  2051  011A                     	;# 
  2052  011B                     	;# 
  2053  011B                     	;# 
  2054  011B                     	;# 
  2055  011B                     	;# 
  2056  011B                     	;# 
  2057  011C                     	;# 
  2058  011C                     	;# 
  2059  011C                     	;# 
  2060  011D                     	;# 
  2061  011D                     	;# 
  2062  011D                     	;# 
  2063  011E                     	;# 
  2064  011E                     	;# 
  2065  011E                     	;# 
  2066  011F                     	;# 
  2067  011F                     	;# 
  2068  011F                     	;# 
  2069  011F                     	;# 
  2070  011F                     	;# 
  2071  018C                     	;# 
  2072  018D                     	;# 
  2073  018E                     	;# 
  2074  018F                     	;# 
  2075  0190                     	;# 
  2076  0191                     	;# 
  2077  0192                     	;# 
  2078  0196                     	;# 
  2079  0197                     	;# 
  2080  0198                     	;# 
  2081  0199                     	;# 
  2082  019A                     	;# 
  2083  019B                     	;# 
  2084  019C                     	;# 
  2085  020C                     	;# 
  2086  020D                     	;# 
  2087  020E                     	;# 
  2088  020E                     	;# 
  2089  020F                     	;# 
  2090  020F                     	;# 
  2091  0210                     	;# 
  2092  0210                     	;# 
  2093  0211                     	;# 
  2094  0211                     	;# 
  2095  0212                     	;# 
  2096  0213                     	;# 
  2097  0214                     	;# 
  2098  0214                     	;# 
  2099  0215                     	;# 
  2100  0215                     	;# 
  2101  0216                     	;# 
  2102  0216                     	;# 
  2103  0217                     	;# 
  2104  0217                     	;# 
  2105  0218                     	;# 
  2106  0219                     	;# 
  2107  021A                     	;# 
  2108  021A                     	;# 
  2109  021B                     	;# 
  2110  021B                     	;# 
  2111  021C                     	;# 
  2112  021C                     	;# 
  2113  021D                     	;# 
  2114  021D                     	;# 
  2115  021E                     	;# 
  2116  021F                     	;# 
  2117  028C                     	;# 
  2118  028C                     	;# 
  2119  028D                     	;# 
  2120  028D                     	;# 
  2121  028E                     	;# 
  2122  028F                     	;# 
  2123  0290                     	;# 
  2124  0291                     	;# 
  2125  0292                     	;# 
  2126  0292                     	;# 
  2127  0293                     	;# 
  2128  0293                     	;# 
  2129  0294                     	;# 
  2130  0295                     	;# 
  2131  0296                     	;# 
  2132  0297                     	;# 
  2133  0298                     	;# 
  2134  0298                     	;# 
  2135  0299                     	;# 
  2136  0299                     	;# 
  2137  029A                     	;# 
  2138  029B                     	;# 
  2139  029C                     	;# 
  2140  029D                     	;# 
  2141  029F                     	;# 
  2142  030C                     	;# 
  2143  030C                     	;# 
  2144  030D                     	;# 
  2145  030E                     	;# 
  2146  030F                     	;# 
  2147  0310                     	;# 
  2148  0310                     	;# 
  2149  0311                     	;# 
  2150  0312                     	;# 
  2151  0313                     	;# 
  2152  0314                     	;# 
  2153  0314                     	;# 
  2154  0315                     	;# 
  2155  0316                     	;# 
  2156  0317                     	;# 
  2157  0318                     	;# 
  2158  0318                     	;# 
  2159  0319                     	;# 
  2160  031A                     	;# 
  2161  031B                     	;# 
  2162  038C                     	;# 
  2163  038C                     	;# 
  2164  038D                     	;# 
  2165  038E                     	;# 
  2166  0390                     	;# 
  2167  0390                     	;# 
  2168  0391                     	;# 
  2169  0392                     	;# 
  2170  048C                     	;# 
  2171  048C                     	;# 
  2172  048D                     	;# 
  2173  048E                     	;# 
  2174  048F                     	;# 
  2175  048F                     	;# 
  2176  0490                     	;# 
  2177  0491                     	;# 
  2178  0492                     	;# 
  2179  0492                     	;# 
  2180  0493                     	;# 
  2181  0494                     	;# 
  2182  0495                     	;# 
  2183  0495                     	;# 
  2184  0496                     	;# 
  2185  0497                     	;# 
  2186  0498                     	;# 
  2187  0499                     	;# 
  2188  049A                     	;# 
  2189  049B                     	;# 
  2190  049C                     	;# 
  2191  049D                     	;# 
  2192  058C                     	;# 
  2193  058C                     	;# 
  2194  058D                     	;# 
  2195  058E                     	;# 
  2196  058F                     	;# 
  2197  058F                     	;# 
  2198  0590                     	;# 
  2199  0591                     	;# 
  2200  0592                     	;# 
  2201  0593                     	;# 
  2202  059C                     	;# 
  2203  059C                     	;# 
  2204  059D                     	;# 
  2205  059D                     	;# 
  2206  059E                     	;# 
  2207  059F                     	;# 
  2208  060C                     	;# 
  2209  060C                     	;# 
  2210  060D                     	;# 
  2211  060D                     	;# 
  2212  060E                     	;# 
  2213  060F                     	;# 
  2214  0610                     	;# 
  2215  0611                     	;# 
  2216  0612                     	;# 
  2217  0613                     	;# 
  2218  0614                     	;# 
  2219  0616                     	;# 
  2220  0616                     	;# 
  2221  0617                     	;# 
  2222  0617                     	;# 
  2223  0618                     	;# 
  2224  0619                     	;# 
  2225  061A                     	;# 
  2226  061B                     	;# 
  2227  061C                     	;# 
  2228  061D                     	;# 
  2229  061E                     	;# 
  2230  070C                     	;# 
  2231  070D                     	;# 
  2232  070E                     	;# 
  2233  070F                     	;# 
  2234  0710                     	;# 
  2235  0711                     	;# 
  2236  0712                     	;# 
  2237  0713                     	;# 
  2238  0714                     	;# 
  2239  0716                     	;# 
  2240  0717                     	;# 
  2241  0718                     	;# 
  2242  0719                     	;# 
  2243  071A                     	;# 
  2244  071B                     	;# 
  2245  071C                     	;# 
  2246  071D                     	;# 
  2247  071E                     	;# 
  2248  0796                     	;# 
  2249  0797                     	;# 
  2250  0798                     	;# 
  2251  0799                     	;# 
  2252  079A                     	;# 
  2253  079B                     	;# 
  2254  079C                     	;# 
  2255  079D                     	;# 
  2256  080C                     	;# 
  2257  080D                     	;# 
  2258  080E                     	;# 
  2259  080F                     	;# 
  2260  0810                     	;# 
  2261  0811                     	;# 
  2262  0812                     	;# 
  2263  0813                     	;# 
  2264  0814                     	;# 
  2265  081A                     	;# 
  2266  081A                     	;# 
  2267  081B                     	;# 
  2268  081C                     	;# 
  2269  081C                     	;# 
  2270  081D                     	;# 
  2271  081E                     	;# 
  2272  081F                     	;# 
  2273  088C                     	;# 
  2274  088D                     	;# 
  2275  088E                     	;# 
  2276  088F                     	;# 
  2277  0890                     	;# 
  2278  0891                     	;# 
  2279  0892                     	;# 
  2280  0893                     	;# 
  2281  0895                     	;# 
  2282  0896                     	;# 
  2283  0897                     	;# 
  2284  0898                     	;# 
  2285  0899                     	;# 
  2286  089A                     	;# 
  2287  089B                     	;# 
  2288  090C                     	;# 
  2289  090E                     	;# 
  2290  090F                     	;# 
  2291  091F                     	;# 
  2292  098F                     	;# 
  2293  098F                     	;# 
  2294  0990                     	;# 
  2295  0991                     	;# 
  2296  0992                     	;# 
  2297  0993                     	;# 
  2298  0994                     	;# 
  2299  0995                     	;# 
  2300  0996                     	;# 
  2301  0997                     	;# 
  2302  1E0F                     	;# 
  2303  1E10                     	;# 
  2304  1E11                     	;# 
  2305  1E12                     	;# 
  2306  1E13                     	;# 
  2307  1E14                     	;# 
  2308  1E15                     	;# 
  2309  1E16                     	;# 
  2310  1E17                     	;# 
  2311  1E18                     	;# 
  2312  1E19                     	;# 
  2313  1E1A                     	;# 
  2314  1E1B                     	;# 
  2315  1E1C                     	;# 
  2316  1E1D                     	;# 
  2317  1E1E                     	;# 
  2318  1E1F                     	;# 
  2319  1E20                     	;# 
  2320  1E21                     	;# 
  2321  1E22                     	;# 
  2322  1E23                     	;# 
  2323  1E24                     	;# 
  2324  1E25                     	;# 
  2325  1E26                     	;# 
  2326  1E27                     	;# 
  2327  1E28                     	;# 
  2328  1E29                     	;# 
  2329  1E2A                     	;# 
  2330  1E2B                     	;# 
  2331  1E2C                     	;# 
  2332  1E2D                     	;# 
  2333  1E2E                     	;# 
  2334  1E2F                     	;# 
  2335  1E30                     	;# 
  2336  1E31                     	;# 
  2337  1E32                     	;# 
  2338  1E33                     	;# 
  2339  1E34                     	;# 
  2340  1E35                     	;# 
  2341  1E36                     	;# 
  2342  1E37                     	;# 
  2343  1E8F                     	;# 
  2344  1E90                     	;# 
  2345  1E91                     	;# 
  2346  1E92                     	;# 
  2347  1E93                     	;# 
  2348  1E94                     	;# 
  2349  1E95                     	;# 
  2350  1E96                     	;# 
  2351  1E97                     	;# 
  2352  1E9C                     	;# 
  2353  1E9D                     	;# 
  2354  1E9E                     	;# 
  2355  1EA1                     	;# 
  2356  1EA2                     	;# 
  2357  1EA3                     	;# 
  2358  1EA4                     	;# 
  2359  1EA9                     	;# 
  2360  1EAA                     	;# 
  2361  1EB1                     	;# 
  2362  1EB2                     	;# 
  2363  1EB8                     	;# 
  2364  1EB9                     	;# 
  2365  1EBA                     	;# 
  2366  1EBB                     	;# 
  2367  1EBC                     	;# 
  2368  1EBD                     	;# 
  2369  1EBE                     	;# 
  2370  1EC3                     	;# 
  2371  1EC5                     	;# 
  2372  1EC6                     	;# 
  2373  1EC7                     	;# 
  2374  1EC8                     	;# 
  2375  1EC9                     	;# 
  2376  1ECA                     	;# 
  2377  1ECB                     	;# 
  2378  1ECB                     	;# 
  2379  1ECB                     	;# 
  2380  1ECC                     	;# 
  2381  1ECC                     	;# 
  2382  1ECC                     	;# 
  2383  1F10                     	;# 
  2384  1F11                     	;# 
  2385  1F12                     	;# 
  2386  1F14                     	;# 
  2387  1F15                     	;# 
  2388  1F1C                     	;# 
  2389  1F1D                     	;# 
  2390  1F1E                     	;# 
  2391  1F1F                     	;# 
  2392  1F20                     	;# 
  2393  1F21                     	;# 
  2394  1F22                     	;# 
  2395  1F23                     	;# 
  2396  1F24                     	;# 
  2397  1F25                     	;# 
  2398  1F26                     	;# 
  2399  1F27                     	;# 
  2400  1F38                     	;# 
  2401  1F39                     	;# 
  2402  1F3A                     	;# 
  2403  1F3B                     	;# 
  2404  1F3C                     	;# 
  2405  1F3D                     	;# 
  2406  1F3E                     	;# 
  2407  1F3F                     	;# 
  2408  1F43                     	;# 
  2409  1F44                     	;# 
  2410  1F45                     	;# 
  2411  1F46                     	;# 
  2412  1F47                     	;# 
  2413  1F48                     	;# 
  2414  1F49                     	;# 
  2415  1F4A                     	;# 
  2416  1F4E                     	;# 
  2417  1F4F                     	;# 
  2418  1F50                     	;# 
  2419  1F51                     	;# 
  2420  1F52                     	;# 
  2421  1F53                     	;# 
  2422  1F54                     	;# 
  2423  1F55                     	;# 
  2424  1FE4                     	;# 
  2425  1FE5                     	;# 
  2426  1FE6                     	;# 
  2427  1FE7                     	;# 
  2428  1FE8                     	;# 
  2429  1FE8                     	;# 
  2430  1FE9                     	;# 
  2431  1FEA                     	;# 
  2432  1FEB                     	;# 
  2433  1FED                     	;# 
  2434  1FEE                     	;# 
  2435  1FEF                     	;# 
  2436  0000                     	;# 
  2437  0001                     	;# 
  2438  0002                     	;# 
  2439  0003                     	;# 
  2440  0004                     	;# 
  2441  0005                     	;# 
  2442  0006                     	;# 
  2443  0007                     	;# 
  2444  0008                     	;# 
  2445  0009                     	;# 
  2446  000A                     	;# 
  2447  000B                     	;# 
  2448  000C                     	;# 
  2449  000D                     	;# 
  2450  000E                     	;# 
  2451  0012                     	;# 
  2452  0013                     	;# 
  2453  0014                     	;# 
  2454  0018                     	;# 
  2455  0019                     	;# 
  2456  001A                     	;# 
  2457  008C                     	;# 
  2458  008C                     	;# 
  2459  008D                     	;# 
  2460  008E                     	;# 
  2461  008E                     	;# 
  2462  008F                     	;# 
  2463  0090                     	;# 
  2464  0090                     	;# 
  2465  0091                     	;# 
  2466  0092                     	;# 
  2467  0092                     	;# 
  2468  0093                     	;# 
  2469  0094                     	;# 
  2470  0094                     	;# 
  2471  0095                     	;# 
  2472  0096                     	;# 
  2473  0096                     	;# 
  2474  0097                     	;# 
  2475  0098                     	;# 
  2476  0099                     	;# 
  2477  009A                     	;# 
  2478  009B                     	;# 
  2479  009B                     	;# 
  2480  009C                     	;# 
  2481  009D                     	;# 
  2482  009D                     	;# 
  2483  009E                     	;# 
  2484  009F                     	;# 
  2485  010C                     	;# 
  2486  010C                     	;# 
  2487  010D                     	;# 
  2488  010E                     	;# 
  2489  010F                     	;# 
  2490  010F                     	;# 
  2491  0110                     	;# 
  2492  0111                     	;# 
  2493  0112                     	;# 
  2494  0113                     	;# 
  2495  0114                     	;# 
  2496  0115                     	;# 
  2497  0116                     	;# 
  2498  0117                     	;# 
  2499  0118                     	;# 
  2500  0119                     	;# 
  2501  0119                     	;# 
  2502  0119                     	;# 
  2503  011A                     	;# 
  2504  011A                     	;# 
  2505  011A                     	;# 
  2506  011B                     	;# 
  2507  011B                     	;# 
  2508  011B                     	;# 
  2509  011B                     	;# 
  2510  011B                     	;# 
  2511  011C                     	;# 
  2512  011C                     	;# 
  2513  011C                     	;# 
  2514  011D                     	;# 
  2515  011D                     	;# 
  2516  011D                     	;# 
  2517  011E                     	;# 
  2518  011E                     	;# 
  2519  011E                     	;# 
  2520  011F                     	;# 
  2521  011F                     	;# 
  2522  011F                     	;# 
  2523  011F                     	;# 
  2524  011F                     	;# 
  2525  018C                     	;# 
  2526  018D                     	;# 
  2527  018E                     	;# 
  2528  018F                     	;# 
  2529  0190                     	;# 
  2530  0191                     	;# 
  2531  0192                     	;# 
  2532  0196                     	;# 
  2533  0197                     	;# 
  2534  0198                     	;# 
  2535  0199                     	;# 
  2536  019A                     	;# 
  2537  019B                     	;# 
  2538  019C                     	;# 
  2539  020C                     	;# 
  2540  020D                     	;# 
  2541  020E                     	;# 
  2542  020E                     	;# 
  2543  020F                     	;# 
  2544  020F                     	;# 
  2545  0210                     	;# 
  2546  0210                     	;# 
  2547  0211                     	;# 
  2548  0211                     	;# 
  2549  0212                     	;# 
  2550  0213                     	;# 
  2551  0214                     	;# 
  2552  0214                     	;# 
  2553  0215                     	;# 
  2554  0215                     	;# 
  2555  0216                     	;# 
  2556  0216                     	;# 
  2557  0217                     	;# 
  2558  0217                     	;# 
  2559  0218                     	;# 
  2560  0219                     	;# 
  2561  021A                     	;# 
  2562  021A                     	;# 
  2563  021B                     	;# 
  2564  021B                     	;# 
  2565  021C                     	;# 
  2566  021C                     	;# 
  2567  021D                     	;# 
  2568  021D                     	;# 
  2569  021E                     	;# 
  2570  021F                     	;# 
  2571  028C                     	;# 
  2572  028C                     	;# 
  2573  028D                     	;# 
  2574  028D                     	;# 
  2575  028E                     	;# 
  2576  028F                     	;# 
  2577  0290                     	;# 
  2578  0291                     	;# 
  2579  0292                     	;# 
  2580  0292                     	;# 
  2581  0293                     	;# 
  2582  0293                     	;# 
  2583  0294                     	;# 
  2584  0295                     	;# 
  2585  0296                     	;# 
  2586  0297                     	;# 
  2587  0298                     	;# 
  2588  0298                     	;# 
  2589  0299                     	;# 
  2590  0299                     	;# 
  2591  029A                     	;# 
  2592  029B                     	;# 
  2593  029C                     	;# 
  2594  029D                     	;# 
  2595  029F                     	;# 
  2596  030C                     	;# 
  2597  030C                     	;# 
  2598  030D                     	;# 
  2599  030E                     	;# 
  2600  030F                     	;# 
  2601  0310                     	;# 
  2602  0310                     	;# 
  2603  0311                     	;# 
  2604  0312                     	;# 
  2605  0313                     	;# 
  2606  0314                     	;# 
  2607  0314                     	;# 
  2608  0315                     	;# 
  2609  0316                     	;# 
  2610  0317                     	;# 
  2611  0318                     	;# 
  2612  0318                     	;# 
  2613  0319                     	;# 
  2614  031A                     	;# 
  2615  031B                     	;# 
  2616  038C                     	;# 
  2617  038C                     	;# 
  2618  038D                     	;# 
  2619  038E                     	;# 
  2620  0390                     	;# 
  2621  0390                     	;# 
  2622  0391                     	;# 
  2623  0392                     	;# 
  2624  048C                     	;# 
  2625  048C                     	;# 
  2626  048D                     	;# 
  2627  048E                     	;# 
  2628  048F                     	;# 
  2629  048F                     	;# 
  2630  0490                     	;# 
  2631  0491                     	;# 
  2632  0492                     	;# 
  2633  0492                     	;# 
  2634  0493                     	;# 
  2635  0494                     	;# 
  2636  0495                     	;# 
  2637  0495                     	;# 
  2638  0496                     	;# 
  2639  0497                     	;# 
  2640  0498                     	;# 
  2641  0499                     	;# 
  2642  049A                     	;# 
  2643  049B                     	;# 
  2644  049C                     	;# 
  2645  049D                     	;# 
  2646  058C                     	;# 
  2647  058C                     	;# 
  2648  058D                     	;# 
  2649  058E                     	;# 
  2650  058F                     	;# 
  2651  058F                     	;# 
  2652  0590                     	;# 
  2653  0591                     	;# 
  2654  0592                     	;# 
  2655  0593                     	;# 
  2656  059C                     	;# 
  2657  059C                     	;# 
  2658  059D                     	;# 
  2659  059D                     	;# 
  2660  059E                     	;# 
  2661  059F                     	;# 
  2662  060C                     	;# 
  2663  060C                     	;# 
  2664  060D                     	;# 
  2665  060D                     	;# 
  2666  060E                     	;# 
  2667  060F                     	;# 
  2668  0610                     	;# 
  2669  0611                     	;# 
  2670  0612                     	;# 
  2671  0613                     	;# 
  2672  0614                     	;# 
  2673  0616                     	;# 
  2674  0616                     	;# 
  2675  0617                     	;# 
  2676  0617                     	;# 
  2677  0618                     	;# 
  2678  0619                     	;# 
  2679  061A                     	;# 
  2680  061B                     	;# 
  2681  061C                     	;# 
  2682  061D                     	;# 
  2683  061E                     	;# 
  2684  070C                     	;# 
  2685  070D                     	;# 
  2686  070E                     	;# 
  2687  070F                     	;# 
  2688  0710                     	;# 
  2689  0711                     	;# 
  2690  0712                     	;# 
  2691  0713                     	;# 
  2692  0714                     	;# 
  2693  0716                     	;# 
  2694  0717                     	;# 
  2695  0718                     	;# 
  2696  0719                     	;# 
  2697  071A                     	;# 
  2698  071B                     	;# 
  2699  071C                     	;# 
  2700  071D                     	;# 
  2701  071E                     	;# 
  2702  0796                     	;# 
  2703  0797                     	;# 
  2704  0798                     	;# 
  2705  0799                     	;# 
  2706  079A                     	;# 
  2707  079B                     	;# 
  2708  079C                     	;# 
  2709  079D                     	;# 
  2710  080C                     	;# 
  2711  080D                     	;# 
  2712  080E                     	;# 
  2713  080F                     	;# 
  2714  0810                     	;# 
  2715  0811                     	;# 
  2716  0812                     	;# 
  2717  0813                     	;# 
  2718  0814                     	;# 
  2719  081A                     	;# 
  2720  081A                     	;# 
  2721  081B                     	;# 
  2722  081C                     	;# 
  2723  081C                     	;# 
  2724  081D                     	;# 
  2725  081E                     	;# 
  2726  081F                     	;# 
  2727  088C                     	;# 
  2728  088D                     	;# 
  2729  088E                     	;# 
  2730  088F                     	;# 
  2731  0890                     	;# 
  2732  0891                     	;# 
  2733  0892                     	;# 
  2734  0893                     	;# 
  2735  0895                     	;# 
  2736  0896                     	;# 
  2737  0897                     	;# 
  2738  0898                     	;# 
  2739  0899                     	;# 
  2740  089A                     	;# 
  2741  089B                     	;# 
  2742  090C                     	;# 
  2743  090E                     	;# 
  2744  090F                     	;# 
  2745  091F                     	;# 
  2746  098F                     	;# 
  2747  098F                     	;# 
  2748  0990                     	;# 
  2749  0991                     	;# 
  2750  0992                     	;# 
  2751  0993                     	;# 
  2752  0994                     	;# 
  2753  0995                     	;# 
  2754  0996                     	;# 
  2755  0997                     	;# 
  2756  1E0F                     	;# 
  2757  1E10                     	;# 
  2758  1E11                     	;# 
  2759  1E12                     	;# 
  2760  1E13                     	;# 
  2761  1E14                     	;# 
  2762  1E15                     	;# 
  2763  1E16                     	;# 
  2764  1E17                     	;# 
  2765  1E18                     	;# 
  2766  1E19                     	;# 
  2767  1E1A                     	;# 
  2768  1E1B                     	;# 
  2769  1E1C                     	;# 
  2770  1E1D                     	;# 
  2771  1E1E                     	;# 
  2772  1E1F                     	;# 
  2773  1E20                     	;# 
  2774  1E21                     	;# 
  2775  1E22                     	;# 
  2776  1E23                     	;# 
  2777  1E24                     	;# 
  2778  1E25                     	;# 
  2779  1E26                     	;# 
  2780  1E27                     	;# 
  2781  1E28                     	;# 
  2782  1E29                     	;# 
  2783  1E2A                     	;# 
  2784  1E2B                     	;# 
  2785  1E2C                     	;# 
  2786  1E2D                     	;# 
  2787  1E2E                     	;# 
  2788  1E2F                     	;# 
  2789  1E30                     	;# 
  2790  1E31                     	;# 
  2791  1E32                     	;# 
  2792  1E33                     	;# 
  2793  1E34                     	;# 
  2794  1E35                     	;# 
  2795  1E36                     	;# 
  2796  1E37                     	;# 
  2797  1E8F                     	;# 
  2798  1E90                     	;# 
  2799  1E91                     	;# 
  2800  1E92                     	;# 
  2801  1E93                     	;# 
  2802  1E94                     	;# 
  2803  1E95                     	;# 
  2804  1E96                     	;# 
  2805  1E97                     	;# 
  2806  1E9C                     	;# 
  2807  1E9D                     	;# 
  2808  1E9E                     	;# 
  2809  1EA1                     	;# 
  2810  1EA2                     	;# 
  2811  1EA3                     	;# 
  2812  1EA4                     	;# 
  2813  1EA9                     	;# 
  2814  1EAA                     	;# 
  2815  1EB1                     	;# 
  2816  1EB2                     	;# 
  2817  1EB8                     	;# 
  2818  1EB9                     	;# 
  2819  1EBA                     	;# 
  2820  1EBB                     	;# 
  2821  1EBC                     	;# 
  2822  1EBD                     	;# 
  2823  1EBE                     	;# 
  2824  1EC3                     	;# 
  2825  1EC5                     	;# 
  2826  1EC6                     	;# 
  2827  1EC7                     	;# 
  2828  1EC8                     	;# 
  2829  1EC9                     	;# 
  2830  1ECA                     	;# 
  2831  1ECB                     	;# 
  2832  1ECB                     	;# 
  2833  1ECB                     	;# 
  2834  1ECC                     	;# 
  2835  1ECC                     	;# 
  2836  1ECC                     	;# 
  2837  1F10                     	;# 
  2838  1F11                     	;# 
  2839  1F12                     	;# 
  2840  1F14                     	;# 
  2841  1F15                     	;# 
  2842  1F1C                     	;# 
  2843  1F1D                     	;# 
  2844  1F1E                     	;# 
  2845  1F1F                     	;# 
  2846  1F20                     	;# 
  2847  1F21                     	;# 
  2848  1F22                     	;# 
  2849  1F23                     	;# 
  2850  1F24                     	;# 
  2851  1F25                     	;# 
  2852  1F26                     	;# 
  2853  1F27                     	;# 
  2854  1F38                     	;# 
  2855  1F39                     	;# 
  2856  1F3A                     	;# 
  2857  1F3B                     	;# 
  2858  1F3C                     	;# 
  2859  1F3D                     	;# 
  2860  1F3E                     	;# 
  2861  1F3F                     	;# 
  2862  1F43                     	;# 
  2863  1F44                     	;# 
  2864  1F45                     	;# 
  2865  1F46                     	;# 
  2866  1F47                     	;# 
  2867  1F48                     	;# 
  2868  1F49                     	;# 
  2869  1F4A                     	;# 
  2870  1F4E                     	;# 
  2871  1F4F                     	;# 
  2872  1F50                     	;# 
  2873  1F51                     	;# 
  2874  1F52                     	;# 
  2875  1F53                     	;# 
  2876  1F54                     	;# 
  2877  1F55                     	;# 
  2878  1FE4                     	;# 
  2879  1FE5                     	;# 
  2880  1FE6                     	;# 
  2881  1FE7                     	;# 
  2882  1FE8                     	;# 
  2883  1FE8                     	;# 
  2884  1FE9                     	;# 
  2885  1FEA                     	;# 
  2886  1FEB                     	;# 
  2887  1FED                     	;# 
  2888  1FEE                     	;# 
  2889  1FEF                     	;# 
  2890  0000                     	;# 
  2891  0001                     	;# 
  2892  0002                     	;# 
  2893  0003                     	;# 
  2894  0004                     	;# 
  2895  0005                     	;# 
  2896  0006                     	;# 
  2897  0007                     	;# 
  2898  0008                     	;# 
  2899  0009                     	;# 
  2900  000A                     	;# 
  2901  000B                     	;# 
  2902  000C                     	;# 
  2903  000D                     	;# 
  2904  000E                     	;# 
  2905  0012                     	;# 
  2906  0013                     	;# 
  2907  0014                     	;# 
  2908  0018                     	;# 
  2909  0019                     	;# 
  2910  001A                     	;# 
  2911  008C                     	;# 
  2912  008C                     	;# 
  2913  008D                     	;# 
  2914  008E                     	;# 
  2915  008E                     	;# 
  2916  008F                     	;# 
  2917  0090                     	;# 
  2918  0090                     	;# 
  2919  0091                     	;# 
  2920  0092                     	;# 
  2921  0092                     	;# 
  2922  0093                     	;# 
  2923  0094                     	;# 
  2924  0094                     	;# 
  2925  0095                     	;# 
  2926  0096                     	;# 
  2927  0096                     	;# 
  2928  0097                     	;# 
  2929  0098                     	;# 
  2930  0099                     	;# 
  2931  009A                     	;# 
  2932  009B                     	;# 
  2933  009B                     	;# 
  2934  009C                     	;# 
  2935  009D                     	;# 
  2936  009D                     	;# 
  2937  009E                     	;# 
  2938  009F                     	;# 
  2939  010C                     	;# 
  2940  010C                     	;# 
  2941  010D                     	;# 
  2942  010E                     	;# 
  2943  010F                     	;# 
  2944  010F                     	;# 
  2945  0110                     	;# 
  2946  0111                     	;# 
  2947  0112                     	;# 
  2948  0113                     	;# 
  2949  0114                     	;# 
  2950  0115                     	;# 
  2951  0116                     	;# 
  2952  0117                     	;# 
  2953  0118                     	;# 
  2954  0119                     	;# 
  2955  0119                     	;# 
  2956  0119                     	;# 
  2957  011A                     	;# 
  2958  011A                     	;# 
  2959  011A                     	;# 
  2960  011B                     	;# 
  2961  011B                     	;# 
  2962  011B                     	;# 
  2963  011B                     	;# 
  2964  011B                     	;# 
  2965  011C                     	;# 
  2966  011C                     	;# 
  2967  011C                     	;# 
  2968  011D                     	;# 
  2969  011D                     	;# 
  2970  011D                     	;# 
  2971  011E                     	;# 
  2972  011E                     	;# 
  2973  011E                     	;# 
  2974  011F                     	;# 
  2975  011F                     	;# 
  2976  011F                     	;# 
  2977  011F                     	;# 
  2978  011F                     	;# 
  2979  018C                     	;# 
  2980  018D                     	;# 
  2981  018E                     	;# 
  2982  018F                     	;# 
  2983  0190                     	;# 
  2984  0191                     	;# 
  2985  0192                     	;# 
  2986  0196                     	;# 
  2987  0197                     	;# 
  2988  0198                     	;# 
  2989  0199                     	;# 
  2990  019A                     	;# 
  2991  019B                     	;# 
  2992  019C                     	;# 
  2993  020C                     	;# 
  2994  020D                     	;# 
  2995  020E                     	;# 
  2996  020E                     	;# 
  2997  020F                     	;# 
  2998  020F                     	;# 
  2999  0210                     	;# 
  3000  0210                     	;# 
  3001  0211                     	;# 
  3002  0211                     	;# 
  3003  0212                     	;# 
  3004  0213                     	;# 
  3005  0214                     	;# 
  3006  0214                     	;# 
  3007  0215                     	;# 
  3008  0215                     	;# 
  3009  0216                     	;# 
  3010  0216                     	;# 
  3011  0217                     	;# 
  3012  0217                     	;# 
  3013  0218                     	;# 
  3014  0219                     	;# 
  3015  021A                     	;# 
  3016  021A                     	;# 
  3017  021B                     	;# 
  3018  021B                     	;# 
  3019  021C                     	;# 
  3020  021C                     	;# 
  3021  021D                     	;# 
  3022  021D                     	;# 
  3023  021E                     	;# 
  3024  021F                     	;# 
  3025  028C                     	;# 
  3026  028C                     	;# 
  3027  028D                     	;# 
  3028  028D                     	;# 
  3029  028E                     	;# 
  3030  028F                     	;# 
  3031  0290                     	;# 
  3032  0291                     	;# 
  3033  0292                     	;# 
  3034  0292                     	;# 
  3035  0293                     	;# 
  3036  0293                     	;# 
  3037  0294                     	;# 
  3038  0295                     	;# 
  3039  0296                     	;# 
  3040  0297                     	;# 
  3041  0298                     	;# 
  3042  0298                     	;# 
  3043  0299                     	;# 
  3044  0299                     	;# 
  3045  029A                     	;# 
  3046  029B                     	;# 
  3047  029C                     	;# 
  3048  029D                     	;# 
  3049  029F                     	;# 
  3050  030C                     	;# 
  3051  030C                     	;# 
  3052  030D                     	;# 
  3053  030E                     	;# 
  3054  030F                     	;# 
  3055  0310                     	;# 
  3056  0310                     	;# 
  3057  0311                     	;# 
  3058  0312                     	;# 
  3059  0313                     	;# 
  3060  0314                     	;# 
  3061  0314                     	;# 
  3062  0315                     	;# 
  3063  0316                     	;# 
  3064  0317                     	;# 
  3065  0318                     	;# 
  3066  0318                     	;# 
  3067  0319                     	;# 
  3068  031A                     	;# 
  3069  031B                     	;# 
  3070  038C                     	;# 
  3071  038C                     	;# 
  3072  038D                     	;# 
  3073  038E                     	;# 
  3074  0390                     	;# 
  3075  0390                     	;# 
  3076  0391                     	;# 
  3077  0392                     	;# 
  3078  048C                     	;# 
  3079  048C                     	;# 
  3080  048D                     	;# 
  3081  048E                     	;# 
  3082  048F                     	;# 
  3083  048F                     	;# 
  3084  0490                     	;# 
  3085  0491                     	;# 
  3086  0492                     	;# 
  3087  0492                     	;# 
  3088  0493                     	;# 
  3089  0494                     	;# 
  3090  0495                     	;# 
  3091  0495                     	;# 
  3092  0496                     	;# 
  3093  0497                     	;# 
  3094  0498                     	;# 
  3095  0499                     	;# 
  3096  049A                     	;# 
  3097  049B                     	;# 
  3098  049C                     	;# 
  3099  049D                     	;# 
  3100  058C                     	;# 
  3101  058C                     	;# 
  3102  058D                     	;# 
  3103  058E                     	;# 
  3104  058F                     	;# 
  3105  058F                     	;# 
  3106  0590                     	;# 
  3107  0591                     	;# 
  3108  0592                     	;# 
  3109  0593                     	;# 
  3110  059C                     	;# 
  3111  059C                     	;# 
  3112  059D                     	;# 
  3113  059D                     	;# 
  3114  059E                     	;# 
  3115  059F                     	;# 
  3116  060C                     	;# 
  3117  060C                     	;# 
  3118  060D                     	;# 
  3119  060D                     	;# 
  3120  060E                     	;# 
  3121  060F                     	;# 
  3122  0610                     	;# 
  3123  0611                     	;# 
  3124  0612                     	;# 
  3125  0613                     	;# 
  3126  0614                     	;# 
  3127  0616                     	;# 
  3128  0616                     	;# 
  3129  0617                     	;# 
  3130  0617                     	;# 
  3131  0618                     	;# 
  3132  0619                     	;# 
  3133  061A                     	;# 
  3134  061B                     	;# 
  3135  061C                     	;# 
  3136  061D                     	;# 
  3137  061E                     	;# 
  3138  070C                     	;# 
  3139  070D                     	;# 
  3140  070E                     	;# 
  3141  070F                     	;# 
  3142  0710                     	;# 
  3143  0711                     	;# 
  3144  0712                     	;# 
  3145  0713                     	;# 
  3146  0714                     	;# 
  3147  0716                     	;# 
  3148  0717                     	;# 
  3149  0718                     	;# 
  3150  0719                     	;# 
  3151  071A                     	;# 
  3152  071B                     	;# 
  3153  071C                     	;# 
  3154  071D                     	;# 
  3155  071E                     	;# 
  3156  0796                     	;# 
  3157  0797                     	;# 
  3158  0798                     	;# 
  3159  0799                     	;# 
  3160  079A                     	;# 
  3161  079B                     	;# 
  3162  079C                     	;# 
  3163  079D                     	;# 
  3164  080C                     	;# 
  3165  080D                     	;# 
  3166  080E                     	;# 
  3167  080F                     	;# 
  3168  0810                     	;# 
  3169  0811                     	;# 
  3170  0812                     	;# 
  3171  0813                     	;# 
  3172  0814                     	;# 
  3173  081A                     	;# 
  3174  081A                     	;# 
  3175  081B                     	;# 
  3176  081C                     	;# 
  3177  081C                     	;# 
  3178  081D                     	;# 
  3179  081E                     	;# 
  3180  081F                     	;# 
  3181  088C                     	;# 
  3182  088D                     	;# 
  3183  088E                     	;# 
  3184  088F                     	;# 
  3185  0890                     	;# 
  3186  0891                     	;# 
  3187  0892                     	;# 
  3188  0893                     	;# 
  3189  0895                     	;# 
  3190  0896                     	;# 
  3191  0897                     	;# 
  3192  0898                     	;# 
  3193  0899                     	;# 
  3194  089A                     	;# 
  3195  089B                     	;# 
  3196  090C                     	;# 
  3197  090E                     	;# 
  3198  090F                     	;# 
  3199  091F                     	;# 
  3200  098F                     	;# 
  3201  098F                     	;# 
  3202  0990                     	;# 
  3203  0991                     	;# 
  3204  0992                     	;# 
  3205  0993                     	;# 
  3206  0994                     	;# 
  3207  0995                     	;# 
  3208  0996                     	;# 
  3209  0997                     	;# 
  3210  1E0F                     	;# 
  3211  1E10                     	;# 
  3212  1E11                     	;# 
  3213  1E12                     	;# 
  3214  1E13                     	;# 
  3215  1E14                     	;# 
  3216  1E15                     	;# 
  3217  1E16                     	;# 
  3218  1E17                     	;# 
  3219  1E18                     	;# 
  3220  1E19                     	;# 
  3221  1E1A                     	;# 
  3222  1E1B                     	;# 
  3223  1E1C                     	;# 
  3224  1E1D                     	;# 
  3225  1E1E                     	;# 
  3226  1E1F                     	;# 
  3227  1E20                     	;# 
  3228  1E21                     	;# 
  3229  1E22                     	;# 
  3230  1E23                     	;# 
  3231  1E24                     	;# 
  3232  1E25                     	;# 
  3233  1E26                     	;# 
  3234  1E27                     	;# 
  3235  1E28                     	;# 
  3236  1E29                     	;# 
  3237  1E2A                     	;# 
  3238  1E2B                     	;# 
  3239  1E2C                     	;# 
  3240  1E2D                     	;# 
  3241  1E2E                     	;# 
  3242  1E2F                     	;# 
  3243  1E30                     	;# 
  3244  1E31                     	;# 
  3245  1E32                     	;# 
  3246  1E33                     	;# 
  3247  1E34                     	;# 
  3248  1E35                     	;# 
  3249  1E36                     	;# 
  3250  1E37                     	;# 
  3251  1E8F                     	;# 
  3252  1E90                     	;# 
  3253  1E91                     	;# 
  3254  1E92                     	;# 
  3255  1E93                     	;# 
  3256  1E94                     	;# 
  3257  1E95                     	;# 
  3258  1E96                     	;# 
  3259  1E97                     	;# 
  3260  1E9C                     	;# 
  3261  1E9D                     	;# 
  3262  1E9E                     	;# 
  3263  1EA1                     	;# 
  3264  1EA2                     	;# 
  3265  1EA3                     	;# 
  3266  1EA4                     	;# 
  3267  1EA9                     	;# 
  3268  1EAA                     	;# 
  3269  1EB1                     	;# 
  3270  1EB2                     	;# 
  3271  1EB8                     	;# 
  3272  1EB9                     	;# 
  3273  1EBA                     	;# 
  3274  1EBB                     	;# 
  3275  1EBC                     	;# 
  3276  1EBD                     	;# 
  3277  1EBE                     	;# 
  3278  1EC3                     	;# 
  3279  1EC5                     	;# 
  3280  1EC6                     	;# 
  3281  1EC7                     	;# 
  3282  1EC8                     	;# 
  3283  1EC9                     	;# 
  3284  1ECA                     	;# 
  3285  1ECB                     	;# 
  3286  1ECB                     	;# 
  3287  1ECB                     	;# 
  3288  1ECC                     	;# 
  3289  1ECC                     	;# 
  3290  1ECC                     	;# 
  3291  1F10                     	;# 
  3292  1F11                     	;# 
  3293  1F12                     	;# 
  3294  1F14                     	;# 
  3295  1F15                     	;# 
  3296  1F1C                     	;# 
  3297  1F1D                     	;# 
  3298  1F1E                     	;# 
  3299  1F1F                     	;# 
  3300  1F20                     	;# 
  3301  1F21                     	;# 
  3302  1F22                     	;# 
  3303  1F23                     	;# 
  3304  1F24                     	;# 
  3305  1F25                     	;# 
  3306  1F26                     	;# 
  3307  1F27                     	;# 
  3308  1F38                     	;# 
  3309  1F39                     	;# 
  3310  1F3A                     	;# 
  3311  1F3B                     	;# 
  3312  1F3C                     	;# 
  3313  1F3D                     	;# 
  3314  1F3E                     	;# 
  3315  1F3F                     	;# 
  3316  1F43                     	;# 
  3317  1F44                     	;# 
  3318  1F45                     	;# 
  3319  1F46                     	;# 
  3320  1F47                     	;# 
  3321  1F48                     	;# 
  3322  1F49                     	;# 
  3323  1F4A                     	;# 
  3324  1F4E                     	;# 
  3325  1F4F                     	;# 
  3326  1F50                     	;# 
  3327  1F51                     	;# 
  3328  1F52                     	;# 
  3329  1F53                     	;# 
  3330  1F54                     	;# 
  3331  1F55                     	;# 
  3332  1FE4                     	;# 
  3333  1FE5                     	;# 
  3334  1FE6                     	;# 
  3335  1FE7                     	;# 
  3336  1FE8                     	;# 
  3337  1FE8                     	;# 
  3338  1FE9                     	;# 
  3339  1FEA                     	;# 
  3340  1FEB                     	;# 
  3341  1FED                     	;# 
  3342  1FEE                     	;# 
  3343  1FEF                     	;# 
  3344  0000                     	;# 
  3345  0001                     	;# 
  3346  0002                     	;# 
  3347  0003                     	;# 
  3348  0004                     	;# 
  3349  0005                     	;# 
  3350  0006                     	;# 
  3351  0007                     	;# 
  3352  0008                     	;# 
  3353  0009                     	;# 
  3354  000A                     	;# 
  3355  000B                     	;# 
  3356  000C                     	;# 
  3357  000D                     	;# 
  3358  000E                     	;# 
  3359  0012                     	;# 
  3360  0013                     	;# 
  3361  0014                     	;# 
  3362  0018                     	;# 
  3363  0019                     	;# 
  3364  001A                     	;# 
  3365  008C                     	;# 
  3366  008C                     	;# 
  3367  008D                     	;# 
  3368  008E                     	;# 
  3369  008E                     	;# 
  3370  008F                     	;# 
  3371  0090                     	;# 
  3372  0090                     	;# 
  3373  0091                     	;# 
  3374  0092                     	;# 
  3375  0092                     	;# 
  3376  0093                     	;# 
  3377  0094                     	;# 
  3378  0094                     	;# 
  3379  0095                     	;# 
  3380  0096                     	;# 
  3381  0096                     	;# 
  3382  0097                     	;# 
  3383  0098                     	;# 
  3384  0099                     	;# 
  3385  009A                     	;# 
  3386  009B                     	;# 
  3387  009B                     	;# 
  3388  009C                     	;# 
  3389  009D                     	;# 
  3390  009D                     	;# 
  3391  009E                     	;# 
  3392  009F                     	;# 
  3393  010C                     	;# 
  3394  010C                     	;# 
  3395  010D                     	;# 
  3396  010E                     	;# 
  3397  010F                     	;# 
  3398  010F                     	;# 
  3399  0110                     	;# 
  3400  0111                     	;# 
  3401  0112                     	;# 
  3402  0113                     	;# 
  3403  0114                     	;# 
  3404  0115                     	;# 
  3405  0116                     	;# 
  3406  0117                     	;# 
  3407  0118                     	;# 
  3408  0119                     	;# 
  3409  0119                     	;# 
  3410  0119                     	;# 
  3411  011A                     	;# 
  3412  011A                     	;# 
  3413  011A                     	;# 
  3414  011B                     	;# 
  3415  011B                     	;# 
  3416  011B                     	;# 
  3417  011B                     	;# 
  3418  011B                     	;# 
  3419  011C                     	;# 
  3420  011C                     	;# 
  3421  011C                     	;# 
  3422  011D                     	;# 
  3423  011D                     	;# 
  3424  011D                     	;# 
  3425  011E                     	;# 
  3426  011E                     	;# 
  3427  011E                     	;# 
  3428  011F                     	;# 
  3429  011F                     	;# 
  3430  011F                     	;# 
  3431  011F                     	;# 
  3432  011F                     	;# 
  3433  018C                     	;# 
  3434  018D                     	;# 
  3435  018E                     	;# 
  3436  018F                     	;# 
  3437  0190                     	;# 
  3438  0191                     	;# 
  3439  0192                     	;# 
  3440  0196                     	;# 
  3441  0197                     	;# 
  3442  0198                     	;# 
  3443  0199                     	;# 
  3444  019A                     	;# 
  3445  019B                     	;# 
  3446  019C                     	;# 
  3447  020C                     	;# 
  3448  020D                     	;# 
  3449  020E                     	;# 
  3450  020E                     	;# 
  3451  020F                     	;# 
  3452  020F                     	;# 
  3453  0210                     	;# 
  3454  0210                     	;# 
  3455  0211                     	;# 
  3456  0211                     	;# 
  3457  0212                     	;# 
  3458  0213                     	;# 
  3459  0214                     	;# 
  3460  0214                     	;# 
  3461  0215                     	;# 
  3462  0215                     	;# 
  3463  0216                     	;# 
  3464  0216                     	;# 
  3465  0217                     	;# 
  3466  0217                     	;# 
  3467  0218                     	;# 
  3468  0219                     	;# 
  3469  021A                     	;# 
  3470  021A                     	;# 
  3471  021B                     	;# 
  3472  021B                     	;# 
  3473  021C                     	;# 
  3474  021C                     	;# 
  3475  021D                     	;# 
  3476  021D                     	;# 
  3477  021E                     	;# 
  3478  021F                     	;# 
  3479  028C                     	;# 
  3480  028C                     	;# 
  3481  028D                     	;# 
  3482  028D                     	;# 
  3483  028E                     	;# 
  3484  028F                     	;# 
  3485  0290                     	;# 
  3486  0291                     	;# 
  3487  0292                     	;# 
  3488  0292                     	;# 
  3489  0293                     	;# 
  3490  0293                     	;# 
  3491  0294                     	;# 
  3492  0295                     	;# 
  3493  0296                     	;# 
  3494  0297                     	;# 
  3495  0298                     	;# 
  3496  0298                     	;# 
  3497  0299                     	;# 
  3498  0299                     	;# 
  3499  029A                     	;# 
  3500  029B                     	;# 
  3501  029C                     	;# 
  3502  029D                     	;# 
  3503  029F                     	;# 
  3504  030C                     	;# 
  3505  030C                     	;# 
  3506  030D                     	;# 
  3507  030E                     	;# 
  3508  030F                     	;# 
  3509  0310                     	;# 
  3510  0310                     	;# 
  3511  0311                     	;# 
  3512  0312                     	;# 
  3513  0313                     	;# 
  3514  0314                     	;# 
  3515  0314                     	;# 
  3516  0315                     	;# 
  3517  0316                     	;# 
  3518  0317                     	;# 
  3519  0318                     	;# 
  3520  0318                     	;# 
  3521  0319                     	;# 
  3522  031A                     	;# 
  3523  031B                     	;# 
  3524  038C                     	;# 
  3525  038C                     	;# 
  3526  038D                     	;# 
  3527  038E                     	;# 
  3528  0390                     	;# 
  3529  0390                     	;# 
  3530  0391                     	;# 
  3531  0392                     	;# 
  3532  048C                     	;# 
  3533  048C                     	;# 
  3534  048D                     	;# 
  3535  048E                     	;# 
  3536  048F                     	;# 
  3537  048F                     	;# 
  3538  0490                     	;# 
  3539  0491                     	;# 
  3540  0492                     	;# 
  3541  0492                     	;# 
  3542  0493                     	;# 
  3543  0494                     	;# 
  3544  0495                     	;# 
  3545  0495                     	;# 
  3546  0496                     	;# 
  3547  0497                     	;# 
  3548  0498                     	;# 
  3549  0499                     	;# 
  3550  049A                     	;# 
  3551  049B                     	;# 
  3552  049C                     	;# 
  3553  049D                     	;# 
  3554  058C                     	;# 
  3555  058C                     	;# 
  3556  058D                     	;# 
  3557  058E                     	;# 
  3558  058F                     	;# 
  3559  058F                     	;# 
  3560  0590                     	;# 
  3561  0591                     	;# 
  3562  0592                     	;# 
  3563  0593                     	;# 
  3564  059C                     	;# 
  3565  059C                     	;# 
  3566  059D                     	;# 
  3567  059D                     	;# 
  3568  059E                     	;# 
  3569  059F                     	;# 
  3570  060C                     	;# 
  3571  060C                     	;# 
  3572  060D                     	;# 
  3573  060D                     	;# 
  3574  060E                     	;# 
  3575  060F                     	;# 
  3576  0610                     	;# 
  3577  0611                     	;# 
  3578  0612                     	;# 
  3579  0613                     	;# 
  3580  0614                     	;# 
  3581  0616                     	;# 
  3582  0616                     	;# 
  3583  0617                     	;# 
  3584  0617                     	;# 
  3585  0618                     	;# 
  3586  0619                     	;# 
  3587  061A                     	;# 
  3588  061B                     	;# 
  3589  061C                     	;# 
  3590  061D                     	;# 
  3591  061E                     	;# 
  3592  070C                     	;# 
  3593  070D                     	;# 
  3594  070E                     	;# 
  3595  070F                     	;# 
  3596  0710                     	;# 
  3597  0711                     	;# 
  3598  0712                     	;# 
  3599  0713                     	;# 
  3600  0714                     	;# 
  3601  0716                     	;# 
  3602  0717                     	;# 
  3603  0718                     	;# 
  3604  0719                     	;# 
  3605  071A                     	;# 
  3606  071B                     	;# 
  3607  071C                     	;# 
  3608  071D                     	;# 
  3609  071E                     	;# 
  3610  0796                     	;# 
  3611  0797                     	;# 
  3612  0798                     	;# 
  3613  0799                     	;# 
  3614  079A                     	;# 
  3615  079B                     	;# 
  3616  079C                     	;# 
  3617  079D                     	;# 
  3618  080C                     	;# 
  3619  080D                     	;# 
  3620  080E                     	;# 
  3621  080F                     	;# 
  3622  0810                     	;# 
  3623  0811                     	;# 
  3624  0812                     	;# 
  3625  0813                     	;# 
  3626  0814                     	;# 
  3627  081A                     	;# 
  3628  081A                     	;# 
  3629  081B                     	;# 
  3630  081C                     	;# 
  3631  081C                     	;# 
  3632  081D                     	;# 
  3633  081E                     	;# 
  3634  081F                     	;# 
  3635  088C                     	;# 
  3636  088D                     	;# 
  3637  088E                     	;# 
  3638  088F                     	;# 
  3639  0890                     	;# 
  3640  0891                     	;# 
  3641  0892                     	;# 
  3642  0893                     	;# 
  3643  0895                     	;# 
  3644  0896                     	;# 
  3645  0897                     	;# 
  3646  0898                     	;# 
  3647  0899                     	;# 
  3648  089A                     	;# 
  3649  089B                     	;# 
  3650  090C                     	;# 
  3651  090E                     	;# 
  3652  090F                     	;# 
  3653  091F                     	;# 
  3654  098F                     	;# 
  3655  098F                     	;# 
  3656  0990                     	;# 
  3657  0991                     	;# 
  3658  0992                     	;# 
  3659  0993                     	;# 
  3660  0994                     	;# 
  3661  0995                     	;# 
  3662  0996                     	;# 
  3663  0997                     	;# 
  3664  1E0F                     	;# 
  3665  1E10                     	;# 
  3666  1E11                     	;# 
  3667  1E12                     	;# 
  3668  1E13                     	;# 
  3669  1E14                     	;# 
  3670  1E15                     	;# 
  3671  1E16                     	;# 
  3672  1E17                     	;# 
  3673  1E18                     	;# 
  3674  1E19                     	;# 
  3675  1E1A                     	;# 
  3676  1E1B                     	;# 
  3677  1E1C                     	;# 
  3678  1E1D                     	;# 
  3679  1E1E                     	;# 
  3680  1E1F                     	;# 
  3681  1E20                     	;# 
  3682  1E21                     	;# 
  3683  1E22                     	;# 
  3684  1E23                     	;# 
  3685  1E24                     	;# 
  3686  1E25                     	;# 
  3687  1E26                     	;# 
  3688  1E27                     	;# 
  3689  1E28                     	;# 
  3690  1E29                     	;# 
  3691  1E2A                     	;# 
  3692  1E2B                     	;# 
  3693  1E2C                     	;# 
  3694  1E2D                     	;# 
  3695  1E2E                     	;# 
  3696  1E2F                     	;# 
  3697  1E30                     	;# 
  3698  1E31                     	;# 
  3699  1E32                     	;# 
  3700  1E33                     	;# 
  3701  1E34                     	;# 
  3702  1E35                     	;# 
  3703  1E36                     	;# 
  3704  1E37                     	;# 
  3705  1E8F                     	;# 
  3706  1E90                     	;# 
  3707  1E91                     	;# 
  3708  1E92                     	;# 
  3709  1E93                     	;# 
  3710  1E94                     	;# 
  3711  1E95                     	;# 
  3712  1E96                     	;# 
  3713  1E97                     	;# 
  3714  1E9C                     	;# 
  3715  1E9D                     	;# 
  3716  1E9E                     	;# 
  3717  1EA1                     	;# 
  3718  1EA2                     	;# 
  3719  1EA3                     	;# 
  3720  1EA4                     	;# 
  3721  1EA9                     	;# 
  3722  1EAA                     	;# 
  3723  1EB1                     	;# 
  3724  1EB2                     	;# 
  3725  1EB8                     	;# 
  3726  1EB9                     	;# 
  3727  1EBA                     	;# 
  3728  1EBB                     	;# 
  3729  1EBC                     	;# 
  3730  1EBD                     	;# 
  3731  1EBE                     	;# 
  3732  1EC3                     	;# 
  3733  1EC5                     	;# 
  3734  1EC6                     	;# 
  3735  1EC7                     	;# 
  3736  1EC8                     	;# 
  3737  1EC9                     	;# 
  3738  1ECA                     	;# 
  3739  1ECB                     	;# 
  3740  1ECB                     	;# 
  3741  1ECB                     	;# 
  3742  1ECC                     	;# 
  3743  1ECC                     	;# 
  3744  1ECC                     	;# 
  3745  1F10                     	;# 
  3746  1F11                     	;# 
  3747  1F12                     	;# 
  3748  1F14                     	;# 
  3749  1F15                     	;# 
  3750  1F1C                     	;# 
  3751  1F1D                     	;# 
  3752  1F1E                     	;# 
  3753  1F1F                     	;# 
  3754  1F20                     	;# 
  3755  1F21                     	;# 
  3756  1F22                     	;# 
  3757  1F23                     	;# 
  3758  1F24                     	;# 
  3759  1F25                     	;# 
  3760  1F26                     	;# 
  3761  1F27                     	;# 
  3762  1F38                     	;# 
  3763  1F39                     	;# 
  3764  1F3A                     	;# 
  3765  1F3B                     	;# 
  3766  1F3C                     	;# 
  3767  1F3D                     	;# 
  3768  1F3E                     	;# 
  3769  1F3F                     	;# 
  3770  1F43                     	;# 
  3771  1F44                     	;# 
  3772  1F45                     	;# 
  3773  1F46                     	;# 
  3774  1F47                     	;# 
  3775  1F48                     	;# 
  3776  1F49                     	;# 
  3777  1F4A                     	;# 
  3778  1F4E                     	;# 
  3779  1F4F                     	;# 
  3780  1F50                     	;# 
  3781  1F51                     	;# 
  3782  1F52                     	;# 
  3783  1F53                     	;# 
  3784  1F54                     	;# 
  3785  1F55                     	;# 
  3786  1FE4                     	;# 
  3787  1FE5                     	;# 
  3788  1FE6                     	;# 
  3789  1FE7                     	;# 
  3790  1FE8                     	;# 
  3791  1FE8                     	;# 
  3792  1FE9                     	;# 
  3793  1FEA                     	;# 
  3794  1FEB                     	;# 
  3795  1FED                     	;# 
  3796  1FEE                     	;# 
  3797  1FEF                     	;# 
  3798  0000                     	;# 
  3799  0001                     	;# 
  3800  0002                     	;# 
  3801  0003                     	;# 
  3802  0004                     	;# 
  3803  0005                     	;# 
  3804  0006                     	;# 
  3805  0007                     	;# 
  3806  0008                     	;# 
  3807  0009                     	;# 
  3808  000A                     	;# 
  3809  000B                     	;# 
  3810  000C                     	;# 
  3811  000D                     	;# 
  3812  000E                     	;# 
  3813  0012                     	;# 
  3814  0013                     	;# 
  3815  0014                     	;# 
  3816  0018                     	;# 
  3817  0019                     	;# 
  3818  001A                     	;# 
  3819  008C                     	;# 
  3820  008C                     	;# 
  3821  008D                     	;# 
  3822  008E                     	;# 
  3823  008E                     	;# 
  3824  008F                     	;# 
  3825  0090                     	;# 
  3826  0090                     	;# 
  3827  0091                     	;# 
  3828  0092                     	;# 
  3829  0092                     	;# 
  3830  0093                     	;# 
  3831  0094                     	;# 
  3832  0094                     	;# 
  3833  0095                     	;# 
  3834  0096                     	;# 
  3835  0096                     	;# 
  3836  0097                     	;# 
  3837  0098                     	;# 
  3838  0099                     	;# 
  3839  009A                     	;# 
  3840  009B                     	;# 
  3841  009B                     	;# 
  3842  009C                     	;# 
  3843  009D                     	;# 
  3844  009D                     	;# 
  3845  009E                     	;# 
  3846  009F                     	;# 
  3847  010C                     	;# 
  3848  010C                     	;# 
  3849  010D                     	;# 
  3850  010E                     	;# 
  3851  010F                     	;# 
  3852  010F                     	;# 
  3853  0110                     	;# 
  3854  0111                     	;# 
  3855  0112                     	;# 
  3856  0113                     	;# 
  3857  0114                     	;# 
  3858  0115                     	;# 
  3859  0116                     	;# 
  3860  0117                     	;# 
  3861  0118                     	;# 
  3862  0119                     	;# 
  3863  0119                     	;# 
  3864  0119                     	;# 
  3865  011A                     	;# 
  3866  011A                     	;# 
  3867  011A                     	;# 
  3868  011B                     	;# 
  3869  011B                     	;# 
  3870  011B                     	;# 
  3871  011B                     	;# 
  3872  011B                     	;# 
  3873  011C                     	;# 
  3874  011C                     	;# 
  3875  011C                     	;# 
  3876  011D                     	;# 
  3877  011D                     	;# 
  3878  011D                     	;# 
  3879  011E                     	;# 
  3880  011E                     	;# 
  3881  011E                     	;# 
  3882  011F                     	;# 
  3883  011F                     	;# 
  3884  011F                     	;# 
  3885  011F                     	;# 
  3886  011F                     	;# 
  3887  018C                     	;# 
  3888  018D                     	;# 
  3889  018E                     	;# 
  3890  018F                     	;# 
  3891  0190                     	;# 
  3892  0191                     	;# 
  3893  0192                     	;# 
  3894  0196                     	;# 
  3895  0197                     	;# 
  3896  0198                     	;# 
  3897  0199                     	;# 
  3898  019A                     	;# 
  3899  019B                     	;# 
  3900  019C                     	;# 
  3901  020C                     	;# 
  3902  020D                     	;# 
  3903  020E                     	;# 
  3904  020E                     	;# 
  3905  020F                     	;# 
  3906  020F                     	;# 
  3907  0210                     	;# 
  3908  0210                     	;# 
  3909  0211                     	;# 
  3910  0211                     	;# 
  3911  0212                     	;# 
  3912  0213                     	;# 
  3913  0214                     	;# 
  3914  0214                     	;# 
  3915  0215                     	;# 
  3916  0215                     	;# 
  3917  0216                     	;# 
  3918  0216                     	;# 
  3919  0217                     	;# 
  3920  0217                     	;# 
  3921  0218                     	;# 
  3922  0219                     	;# 
  3923  021A                     	;# 
  3924  021A                     	;# 
  3925  021B                     	;# 
  3926  021B                     	;# 
  3927  021C                     	;# 
  3928  021C                     	;# 
  3929  021D                     	;# 
  3930  021D                     	;# 
  3931  021E                     	;# 
  3932  021F                     	;# 
  3933  028C                     	;# 
  3934  028C                     	;# 
  3935  028D                     	;# 
  3936  028D                     	;# 
  3937  028E                     	;# 
  3938  028F                     	;# 
  3939  0290                     	;# 
  3940  0291                     	;# 
  3941  0292                     	;# 
  3942  0292                     	;# 
  3943  0293                     	;# 
  3944  0293                     	;# 
  3945  0294                     	;# 
  3946  0295                     	;# 
  3947  0296                     	;# 
  3948  0297                     	;# 
  3949  0298                     	;# 
  3950  0298                     	;# 
  3951  0299                     	;# 
  3952  0299                     	;# 
  3953  029A                     	;# 
  3954  029B                     	;# 
  3955  029C                     	;# 
  3956  029D                     	;# 
  3957  029F                     	;# 
  3958  030C                     	;# 
  3959  030C                     	;# 
  3960  030D                     	;# 
  3961  030E                     	;# 
  3962  030F                     	;# 
  3963  0310                     	;# 
  3964  0310                     	;# 
  3965  0311                     	;# 
  3966  0312                     	;# 
  3967  0313                     	;# 
  3968  0314                     	;# 
  3969  0314                     	;# 
  3970  0315                     	;# 
  3971  0316                     	;# 
  3972  0317                     	;# 
  3973  0318                     	;# 
  3974  0318                     	;# 
  3975  0319                     	;# 
  3976  031A                     	;# 
  3977  031B                     	;# 
  3978  038C                     	;# 
  3979  038C                     	;# 
  3980  038D                     	;# 
  3981  038E                     	;# 
  3982  0390                     	;# 
  3983  0390                     	;# 
  3984  0391                     	;# 
  3985  0392                     	;# 
  3986  048C                     	;# 
  3987  048C                     	;# 
  3988  048D                     	;# 
  3989  048E                     	;# 
  3990  048F                     	;# 
  3991  048F                     	;# 
  3992  0490                     	;# 
  3993  0491                     	;# 
  3994  0492                     	;# 
  3995  0492                     	;# 
  3996  0493                     	;# 
  3997  0494                     	;# 
  3998  0495                     	;# 
  3999  0495                     	;# 
  4000  0496                     	;# 
  4001  0497                     	;# 
  4002  0498                     	;# 
  4003  0499                     	;# 
  4004  049A                     	;# 
  4005  049B                     	;# 
  4006  049C                     	;# 
  4007  049D                     	;# 
  4008  058C                     	;# 
  4009  058C                     	;# 
  4010  058D                     	;# 
  4011  058E                     	;# 
  4012  058F                     	;# 
  4013  058F                     	;# 
  4014  0590                     	;# 
  4015  0591                     	;# 
  4016  0592                     	;# 
  4017  0593                     	;# 
  4018  059C                     	;# 
  4019  059C                     	;# 
  4020  059D                     	;# 
  4021  059D                     	;# 
  4022  059E                     	;# 
  4023  059F                     	;# 
  4024  060C                     	;# 
  4025  060C                     	;# 
  4026  060D                     	;# 
  4027  060D                     	;# 
  4028  060E                     	;# 
  4029  060F                     	;# 
  4030  0610                     	;# 
  4031  0611                     	;# 
  4032  0612                     	;# 
  4033  0613                     	;# 
  4034  0614                     	;# 
  4035  0616                     	;# 
  4036  0616                     	;# 
  4037  0617                     	;# 
  4038  0617                     	;# 
  4039  0618                     	;# 
  4040  0619                     	;# 
  4041  061A                     	;# 
  4042  061B                     	;# 
  4043  061C                     	;# 
  4044  061D                     	;# 
  4045  061E                     	;# 
  4046  070C                     	;# 
  4047  070D                     	;# 
  4048  070E                     	;# 
  4049  070F                     	;# 
  4050  0710                     	;# 
  4051  0711                     	;# 
  4052  0712                     	;# 
  4053  0713                     	;# 
  4054  0714                     	;# 
  4055  0716                     	;# 
  4056  0717                     	;# 
  4057  0718                     	;# 
  4058  0719                     	;# 
  4059  071A                     	;# 
  4060  071B                     	;# 
  4061  071C                     	;# 
  4062  071D                     	;# 
  4063  071E                     	;# 
  4064  0796                     	;# 
  4065  0797                     	;# 
  4066  0798                     	;# 
  4067  0799                     	;# 
  4068  079A                     	;# 
  4069  079B                     	;# 
  4070  079C                     	;# 
  4071  079D                     	;# 
  4072  080C                     	;# 
  4073  080D                     	;# 
  4074  080E                     	;# 
  4075  080F                     	;# 
  4076  0810                     	;# 
  4077  0811                     	;# 
  4078  0812                     	;# 
  4079  0813                     	;# 
  4080  0814                     	;# 
  4081  081A                     	;# 
  4082  081A                     	;# 
  4083  081B                     	;# 
  4084  081C                     	;# 
  4085  081C                     	;# 
  4086  081D                     	;# 
  4087  081E                     	;# 
  4088  081F                     	;# 
  4089  088C                     	;# 
  4090  088D                     	;# 
  4091  088E                     	;# 
  4092  088F                     	;# 
  4093  0890                     	;# 
  4094  0891                     	;# 
  4095  0892                     	;# 
  4096  0893                     	;# 
  4097  0895                     	;# 
  4098  0896                     	;# 
  4099  0897                     	;# 
  4100  0898                     	;# 
  4101  0899                     	;# 
  4102  089A                     	;# 
  4103  089B                     	;# 
  4104  090C                     	;# 
  4105  090E                     	;# 
  4106  090F                     	;# 
  4107  091F                     	;# 
  4108  098F                     	;# 
  4109  098F                     	;# 
  4110  0990                     	;# 
  4111  0991                     	;# 
  4112  0992                     	;# 
  4113  0993                     	;# 
  4114  0994                     	;# 
  4115  0995                     	;# 
  4116  0996                     	;# 
  4117  0997                     	;# 
  4118  1E0F                     	;# 
  4119  1E10                     	;# 
  4120  1E11                     	;# 
  4121  1E12                     	;# 
  4122  1E13                     	;# 
  4123  1E14                     	;# 
  4124  1E15                     	;# 
  4125  1E16                     	;# 
  4126  1E17                     	;# 
  4127  1E18                     	;# 
  4128  1E19                     	;# 
  4129  1E1A                     	;# 
  4130  1E1B                     	;# 
  4131  1E1C                     	;# 
  4132  1E1D                     	;# 
  4133  1E1E                     	;# 
  4134  1E1F                     	;# 
  4135  1E20                     	;# 
  4136  1E21                     	;# 
  4137  1E22                     	;# 
  4138  1E23                     	;# 
  4139  1E24                     	;# 
  4140  1E25                     	;# 
  4141  1E26                     	;# 
  4142  1E27                     	;# 
  4143  1E28                     	;# 
  4144  1E29                     	;# 
  4145  1E2A                     	;# 
  4146  1E2B                     	;# 
  4147  1E2C                     	;# 
  4148  1E2D                     	;# 
  4149  1E2E                     	;# 
  4150  1E2F                     	;# 
  4151  1E30                     	;# 
  4152  1E31                     	;# 
  4153  1E32                     	;# 
  4154  1E33                     	;# 
  4155  1E34                     	;# 
  4156  1E35                     	;# 
  4157  1E36                     	;# 
  4158  1E37                     	;# 
  4159  1E8F                     	;# 
  4160  1E90                     	;# 
  4161  1E91                     	;# 
  4162  1E92                     	;# 
  4163  1E93                     	;# 
  4164  1E94                     	;# 
  4165  1E95                     	;# 
  4166  1E96                     	;# 
  4167  1E97                     	;# 
  4168  1E9C                     	;# 
  4169  1E9D                     	;# 
  4170  1E9E                     	;# 
  4171  1EA1                     	;# 
  4172  1EA2                     	;# 
  4173  1EA3                     	;# 
  4174  1EA4                     	;# 
  4175  1EA9                     	;# 
  4176  1EAA                     	;# 
  4177  1EB1                     	;# 
  4178  1EB2                     	;# 
  4179  1EB8                     	;# 
  4180  1EB9                     	;# 
  4181  1EBA                     	;# 
  4182  1EBB                     	;# 
  4183  1EBC                     	;# 
  4184  1EBD                     	;# 
  4185  1EBE                     	;# 
  4186  1EC3                     	;# 
  4187  1EC5                     	;# 
  4188  1EC6                     	;# 
  4189  1EC7                     	;# 
  4190  1EC8                     	;# 
  4191  1EC9                     	;# 
  4192  1ECA                     	;# 
  4193  1ECB                     	;# 
  4194  1ECB                     	;# 
  4195  1ECB                     	;# 
  4196  1ECC                     	;# 
  4197  1ECC                     	;# 
  4198  1ECC                     	;# 
  4199  1F10                     	;# 
  4200  1F11                     	;# 
  4201  1F12                     	;# 
  4202  1F14                     	;# 
  4203  1F15                     	;# 
  4204  1F1C                     	;# 
  4205  1F1D                     	;# 
  4206  1F1E                     	;# 
  4207  1F1F                     	;# 
  4208  1F20                     	;# 
  4209  1F21                     	;# 
  4210  1F22                     	;# 
  4211  1F23                     	;# 
  4212  1F24                     	;# 
  4213  1F25                     	;# 
  4214  1F26                     	;# 
  4215  1F27                     	;# 
  4216  1F38                     	;# 
  4217  1F39                     	;# 
  4218  1F3A                     	;# 
  4219  1F3B                     	;# 
  4220  1F3C                     	;# 
  4221  1F3D                     	;# 
  4222  1F3E                     	;# 
  4223  1F3F                     	;# 
  4224  1F43                     	;# 
  4225  1F44                     	;# 
  4226  1F45                     	;# 
  4227  1F46                     	;# 
  4228  1F47                     	;# 
  4229  1F48                     	;# 
  4230  1F49                     	;# 
  4231  1F4A                     	;# 
  4232  1F4E                     	;# 
  4233  1F4F                     	;# 
  4234  1F50                     	;# 
  4235  1F51                     	;# 
  4236  1F52                     	;# 
  4237  1F53                     	;# 
  4238  1F54                     	;# 
  4239  1F55                     	;# 
  4240  1FE4                     	;# 
  4241  1FE5                     	;# 
  4242  1FE6                     	;# 
  4243  1FE7                     	;# 
  4244  1FE8                     	;# 
  4245  1FE8                     	;# 
  4246  1FE9                     	;# 
  4247  1FEA                     	;# 
  4248  1FEB                     	;# 
  4249  1FED                     	;# 
  4250  1FEE                     	;# 
  4251  1FEF                     	;# 
  4252  0000                     	;# 
  4253  0001                     	;# 
  4254  0002                     	;# 
  4255  0003                     	;# 
  4256  0004                     	;# 
  4257  0005                     	;# 
  4258  0006                     	;# 
  4259  0007                     	;# 
  4260  0008                     	;# 
  4261  0009                     	;# 
  4262  000A                     	;# 
  4263  000B                     	;# 
  4264  000C                     	;# 
  4265  000D                     	;# 
  4266  000E                     	;# 
  4267  0012                     	;# 
  4268  0013                     	;# 
  4269  0014                     	;# 
  4270  0018                     	;# 
  4271  0019                     	;# 
  4272  001A                     	;# 
  4273  008C                     	;# 
  4274  008C                     	;# 
  4275  008D                     	;# 
  4276  008E                     	;# 
  4277  008E                     	;# 
  4278  008F                     	;# 
  4279  0090                     	;# 
  4280  0090                     	;# 
  4281  0091                     	;# 
  4282  0092                     	;# 
  4283  0092                     	;# 
  4284  0093                     	;# 
  4285  0094                     	;# 
  4286  0094                     	;# 
  4287  0095                     	;# 
  4288  0096                     	;# 
  4289  0096                     	;# 
  4290  0097                     	;# 
  4291  0098                     	;# 
  4292  0099                     	;# 
  4293  009A                     	;# 
  4294  009B                     	;# 
  4295  009B                     	;# 
  4296  009C                     	;# 
  4297  009D                     	;# 
  4298  009D                     	;# 
  4299  009E                     	;# 
  4300  009F                     	;# 
  4301  010C                     	;# 
  4302  010C                     	;# 
  4303  010D                     	;# 
  4304  010E                     	;# 
  4305  010F                     	;# 
  4306  010F                     	;# 
  4307  0110                     	;# 
  4308  0111                     	;# 
  4309  0112                     	;# 
  4310  0113                     	;# 
  4311  0114                     	;# 
  4312  0115                     	;# 
  4313  0116                     	;# 
  4314  0117                     	;# 
  4315  0118                     	;# 
  4316  0119                     	;# 
  4317  0119                     	;# 
  4318  0119                     	;# 
  4319  011A                     	;# 
  4320  011A                     	;# 
  4321  011A                     	;# 
  4322  011B                     	;# 
  4323  011B                     	;# 
  4324  011B                     	;# 
  4325  011B                     	;# 
  4326  011B                     	;# 
  4327  011C                     	;# 
  4328  011C                     	;# 
  4329  011C                     	;# 
  4330  011D                     	;# 
  4331  011D                     	;# 
  4332  011D                     	;# 
  4333  011E                     	;# 
  4334  011E                     	;# 
  4335  011E                     	;# 
  4336  011F                     	;# 
  4337  011F                     	;# 
  4338  011F                     	;# 
  4339  011F                     	;# 
  4340  011F                     	;# 
  4341  018C                     	;# 
  4342  018D                     	;# 
  4343  018E                     	;# 
  4344  018F                     	;# 
  4345  0190                     	;# 
  4346  0191                     	;# 
  4347  0192                     	;# 
  4348  0196                     	;# 
  4349  0197                     	;# 
  4350  0198                     	;# 
  4351  0199                     	;# 
  4352  019A                     	;# 
  4353  019B                     	;# 
  4354  019C                     	;# 
  4355  020C                     	;# 
  4356  020D                     	;# 
  4357  020E                     	;# 
  4358  020E                     	;# 
  4359  020F                     	;# 
  4360  020F                     	;# 
  4361  0210                     	;# 
  4362  0210                     	;# 
  4363  0211                     	;# 
  4364  0211                     	;# 
  4365  0212                     	;# 
  4366  0213                     	;# 
  4367  0214                     	;# 
  4368  0214                     	;# 
  4369  0215                     	;# 
  4370  0215                     	;# 
  4371  0216                     	;# 
  4372  0216                     	;# 
  4373  0217                     	;# 
  4374  0217                     	;# 
  4375  0218                     	;# 
  4376  0219                     	;# 
  4377  021A                     	;# 
  4378  021A                     	;# 
  4379  021B                     	;# 
  4380  021B                     	;# 
  4381  021C                     	;# 
  4382  021C                     	;# 
  4383  021D                     	;# 
  4384  021D                     	;# 
  4385  021E                     	;# 
  4386  021F                     	;# 
  4387  028C                     	;# 
  4388  028C                     	;# 
  4389  028D                     	;# 
  4390  028D                     	;# 
  4391  028E                     	;# 
  4392  028F                     	;# 
  4393  0290                     	;# 
  4394  0291                     	;# 
  4395  0292                     	;# 
  4396  0292                     	;# 
  4397  0293                     	;# 
  4398  0293                     	;# 
  4399  0294                     	;# 
  4400  0295                     	;# 
  4401  0296                     	;# 
  4402  0297                     	;# 
  4403  0298                     	;# 
  4404  0298                     	;# 
  4405  0299                     	;# 
  4406  0299                     	;# 
  4407  029A                     	;# 
  4408  029B                     	;# 
  4409  029C                     	;# 
  4410  029D                     	;# 
  4411  029F                     	;# 
  4412  030C                     	;# 
  4413  030C                     	;# 
  4414  030D                     	;# 
  4415  030E                     	;# 
  4416  030F                     	;# 
  4417  0310                     	;# 
  4418  0310                     	;# 
  4419  0311                     	;# 
  4420  0312                     	;# 
  4421  0313                     	;# 
  4422  0314                     	;# 
  4423  0314                     	;# 
  4424  0315                     	;# 
  4425  0316                     	;# 
  4426  0317                     	;# 
  4427  0318                     	;# 
  4428  0318                     	;# 
  4429  0319                     	;# 
  4430  031A                     	;# 
  4431  031B                     	;# 
  4432  038C                     	;# 
  4433  038C                     	;# 
  4434  038D                     	;# 
  4435  038E                     	;# 
  4436  0390                     	;# 
  4437  0390                     	;# 
  4438  0391                     	;# 
  4439  0392                     	;# 
  4440  048C                     	;# 
  4441  048C                     	;# 
  4442  048D                     	;# 
  4443  048E                     	;# 
  4444  048F                     	;# 
  4445  048F                     	;# 
  4446  0490                     	;# 
  4447  0491                     	;# 
  4448  0492                     	;# 
  4449  0492                     	;# 
  4450  0493                     	;# 
  4451  0494                     	;# 
  4452  0495                     	;# 
  4453  0495                     	;# 
  4454  0496                     	;# 
  4455  0497                     	;# 
  4456  0498                     	;# 
  4457  0499                     	;# 
  4458  049A                     	;# 
  4459  049B                     	;# 
  4460  049C                     	;# 
  4461  049D                     	;# 
  4462  058C                     	;# 
  4463  058C                     	;# 
  4464  058D                     	;# 
  4465  058E                     	;# 
  4466  058F                     	;# 
  4467  058F                     	;# 
  4468  0590                     	;# 
  4469  0591                     	;# 
  4470  0592                     	;# 
  4471  0593                     	;# 
  4472  059C                     	;# 
  4473  059C                     	;# 
  4474  059D                     	;# 
  4475  059D                     	;# 
  4476  059E                     	;# 
  4477  059F                     	;# 
  4478  060C                     	;# 
  4479  060C                     	;# 
  4480  060D                     	;# 
  4481  060D                     	;# 
  4482  060E                     	;# 
  4483  060F                     	;# 
  4484  0610                     	;# 
  4485  0611                     	;# 
  4486  0612                     	;# 
  4487  0613                     	;# 
  4488  0614                     	;# 
  4489  0616                     	;# 
  4490  0616                     	;# 
  4491  0617                     	;# 
  4492  0617                     	;# 
  4493  0618                     	;# 
  4494  0619                     	;# 
  4495  061A                     	;# 
  4496  061B                     	;# 
  4497  061C                     	;# 
  4498  061D                     	;# 
  4499  061E                     	;# 
  4500  070C                     	;# 
  4501  070D                     	;# 
  4502  070E                     	;# 
  4503  070F                     	;# 
  4504  0710                     	;# 
  4505  0711                     	;# 
  4506  0712                     	;# 
  4507  0713                     	;# 
  4508  0714                     	;# 
  4509  0716                     	;# 
  4510  0717                     	;# 
  4511  0718                     	;# 
  4512  0719                     	;# 
  4513  071A                     	;# 
  4514  071B                     	;# 
  4515  071C                     	;# 
  4516  071D                     	;# 
  4517  071E                     	;# 
  4518  0796                     	;# 
  4519  0797                     	;# 
  4520  0798                     	;# 
  4521  0799                     	;# 
  4522  079A                     	;# 
  4523  079B                     	;# 
  4524  079C                     	;# 
  4525  079D                     	;# 
  4526  080C                     	;# 
  4527  080D                     	;# 
  4528  080E                     	;# 
  4529  080F                     	;# 
  4530  0810                     	;# 
  4531  0811                     	;# 
  4532  0812                     	;# 
  4533  0813                     	;# 
  4534  0814                     	;# 
  4535  081A                     	;# 
  4536  081A                     	;# 
  4537  081B                     	;# 
  4538  081C                     	;# 
  4539  081C                     	;# 
  4540  081D                     	;# 
  4541  081E                     	;# 
  4542  081F                     	;# 
  4543  088C                     	;# 
  4544  088D                     	;# 
  4545  088E                     	;# 
  4546  088F                     	;# 
  4547  0890                     	;# 
  4548  0891                     	;# 
  4549  0892                     	;# 
  4550  0893                     	;# 
  4551  0895                     	;# 
  4552  0896                     	;# 
  4553  0897                     	;# 
  4554  0898                     	;# 
  4555  0899                     	;# 
  4556  089A                     	;# 
  4557  089B                     	;# 
  4558  090C                     	;# 
  4559  090E                     	;# 
  4560  090F                     	;# 
  4561  091F                     	;# 
  4562  098F                     	;# 
  4563  098F                     	;# 
  4564  0990                     	;# 
  4565  0991                     	;# 
  4566  0992                     	;# 
  4567  0993                     	;# 
  4568  0994                     	;# 
  4569  0995                     	;# 
  4570  0996                     	;# 
  4571  0997                     	;# 
  4572  1E0F                     	;# 
  4573  1E10                     	;# 
  4574  1E11                     	;# 
  4575  1E12                     	;# 
  4576  1E13                     	;# 
  4577  1E14                     	;# 
  4578  1E15                     	;# 
  4579  1E16                     	;# 
  4580  1E17                     	;# 
  4581  1E18                     	;# 
  4582  1E19                     	;# 
  4583  1E1A                     	;# 
  4584  1E1B                     	;# 
  4585  1E1C                     	;# 
  4586  1E1D                     	;# 
  4587  1E1E                     	;# 
  4588  1E1F                     	;# 
  4589  1E20                     	;# 
  4590  1E21                     	;# 
  4591  1E22                     	;# 
  4592  1E23                     	;# 
  4593  1E24                     	;# 
  4594  1E25                     	;# 
  4595  1E26                     	;# 
  4596  1E27                     	;# 
  4597  1E28                     	;# 
  4598  1E29                     	;# 
  4599  1E2A                     	;# 
  4600  1E2B                     	;# 
  4601  1E2C                     	;# 
  4602  1E2D                     	;# 
  4603  1E2E                     	;# 
  4604  1E2F                     	;# 
  4605  1E30                     	;# 
  4606  1E31                     	;# 
  4607  1E32                     	;# 
  4608  1E33                     	;# 
  4609  1E34                     	;# 
  4610  1E35                     	;# 
  4611  1E36                     	;# 
  4612  1E37                     	;# 
  4613  1E8F                     	;# 
  4614  1E90                     	;# 
  4615  1E91                     	;# 
  4616  1E92                     	;# 
  4617  1E93                     	;# 
  4618  1E94                     	;# 
  4619  1E95                     	;# 
  4620  1E96                     	;# 
  4621  1E97                     	;# 
  4622  1E9C                     	;# 
  4623  1E9D                     	;# 
  4624  1E9E                     	;# 
  4625  1EA1                     	;# 
  4626  1EA2                     	;# 
  4627  1EA3                     	;# 
  4628  1EA4                     	;# 
  4629  1EA9                     	;# 
  4630  1EAA                     	;# 
  4631  1EB1                     	;# 
  4632  1EB2                     	;# 
  4633  1EB8                     	;# 
  4634  1EB9                     	;# 
  4635  1EBA                     	;# 
  4636  1EBB                     	;# 
  4637  1EBC                     	;# 
  4638  1EBD                     	;# 
  4639  1EBE                     	;# 
  4640  1EC3                     	;# 
  4641  1EC5                     	;# 
  4642  1EC6                     	;# 
  4643  1EC7                     	;# 
  4644  1EC8                     	;# 
  4645  1EC9                     	;# 
  4646  1ECA                     	;# 
  4647  1ECB                     	;# 
  4648  1ECB                     	;# 
  4649  1ECB                     	;# 
  4650  1ECC                     	;# 
  4651  1ECC                     	;# 
  4652  1ECC                     	;# 
  4653  1F10                     	;# 
  4654  1F11                     	;# 
  4655  1F12                     	;# 
  4656  1F14                     	;# 
  4657  1F15                     	;# 
  4658  1F1C                     	;# 
  4659  1F1D                     	;# 
  4660  1F1E                     	;# 
  4661  1F1F                     	;# 
  4662  1F20                     	;# 
  4663  1F21                     	;# 
  4664  1F22                     	;# 
  4665  1F23                     	;# 
  4666  1F24                     	;# 
  4667  1F25                     	;# 
  4668  1F26                     	;# 
  4669  1F27                     	;# 
  4670  1F38                     	;# 
  4671  1F39                     	;# 
  4672  1F3A                     	;# 
  4673  1F3B                     	;# 
  4674  1F3C                     	;# 
  4675  1F3D                     	;# 
  4676  1F3E                     	;# 
  4677  1F3F                     	;# 
  4678  1F43                     	;# 
  4679  1F44                     	;# 
  4680  1F45                     	;# 
  4681  1F46                     	;# 
  4682  1F47                     	;# 
  4683  1F48                     	;# 
  4684  1F49                     	;# 
  4685  1F4A                     	;# 
  4686  1F4E                     	;# 
  4687  1F4F                     	;# 
  4688  1F50                     	;# 
  4689  1F51                     	;# 
  4690  1F52                     	;# 
  4691  1F53                     	;# 
  4692  1F54                     	;# 
  4693  1F55                     	;# 
  4694  1FE4                     	;# 
  4695  1FE5                     	;# 
  4696  1FE6                     	;# 
  4697  1FE7                     	;# 
  4698  1FE8                     	;# 
  4699  1FE8                     	;# 
  4700  1FE9                     	;# 
  4701  1FEA                     	;# 
  4702  1FEB                     	;# 
  4703  1FED                     	;# 
  4704  1FEE                     	;# 
  4705  1FEF                     	;# 
  4706  0000                     	;# 
  4707  0001                     	;# 
  4708  0002                     	;# 
  4709  0003                     	;# 
  4710  0004                     	;# 
  4711  0005                     	;# 
  4712  0006                     	;# 
  4713  0007                     	;# 
  4714  0008                     	;# 
  4715  0009                     	;# 
  4716  000A                     	;# 
  4717  000B                     	;# 
  4718  000C                     	;# 
  4719  000D                     	;# 
  4720  000E                     	;# 
  4721  0012                     	;# 
  4722  0013                     	;# 
  4723  0014                     	;# 
  4724  0018                     	;# 
  4725  0019                     	;# 
  4726  001A                     	;# 
  4727  008C                     	;# 
  4728  008C                     	;# 
  4729  008D                     	;# 
  4730  008E                     	;# 
  4731  008E                     	;# 
  4732  008F                     	;# 
  4733  0090                     	;# 
  4734  0090                     	;# 
  4735  0091                     	;# 
  4736  0092                     	;# 
  4737  0092                     	;# 
  4738  0093                     	;# 
  4739  0094                     	;# 
  4740  0094                     	;# 
  4741  0095                     	;# 
  4742  0096                     	;# 
  4743  0096                     	;# 
  4744  0097                     	;# 
  4745  0098                     	;# 
  4746  0099                     	;# 
  4747  009A                     	;# 
  4748  009B                     	;# 
  4749  009B                     	;# 
  4750  009C                     	;# 
  4751  009D                     	;# 
  4752  009D                     	;# 
  4753  009E                     	;# 
  4754  009F                     	;# 
  4755  010C                     	;# 
  4756  010C                     	;# 
  4757  010D                     	;# 
  4758  010E                     	;# 
  4759  010F                     	;# 
  4760  010F                     	;# 
  4761  0110                     	;# 
  4762  0111                     	;# 
  4763  0112                     	;# 
  4764  0113                     	;# 
  4765  0114                     	;# 
  4766  0115                     	;# 
  4767  0116                     	;# 
  4768  0117                     	;# 
  4769  0118                     	;# 
  4770  0119                     	;# 
  4771  0119                     	;# 
  4772  0119                     	;# 
  4773  011A                     	;# 
  4774  011A                     	;# 
  4775  011A                     	;# 
  4776  011B                     	;# 
  4777  011B                     	;# 
  4778  011B                     	;# 
  4779  011B                     	;# 
  4780  011B                     	;# 
  4781  011C                     	;# 
  4782  011C                     	;# 
  4783  011C                     	;# 
  4784  011D                     	;# 
  4785  011D                     	;# 
  4786  011D                     	;# 
  4787  011E                     	;# 
  4788  011E                     	;# 
  4789  011E                     	;# 
  4790  011F                     	;# 
  4791  011F                     	;# 
  4792  011F                     	;# 
  4793  011F                     	;# 
  4794  011F                     	;# 
  4795  018C                     	;# 
  4796  018D                     	;# 
  4797  018E                     	;# 
  4798  018F                     	;# 
  4799  0190                     	;# 
  4800  0191                     	;# 
  4801  0192                     	;# 
  4802  0196                     	;# 
  4803  0197                     	;# 
  4804  0198                     	;# 
  4805  0199                     	;# 
  4806  019A                     	;# 
  4807  019B                     	;# 
  4808  019C                     	;# 
  4809  020C                     	;# 
  4810  020D                     	;# 
  4811  020E                     	;# 
  4812  020E                     	;# 
  4813  020F                     	;# 
  4814  020F                     	;# 
  4815  0210                     	;# 
  4816  0210                     	;# 
  4817  0211                     	;# 
  4818  0211                     	;# 
  4819  0212                     	;# 
  4820  0213                     	;# 
  4821  0214                     	;# 
  4822  0214                     	;# 
  4823  0215                     	;# 
  4824  0215                     	;# 
  4825  0216                     	;# 
  4826  0216                     	;# 
  4827  0217                     	;# 
  4828  0217                     	;# 
  4829  0218                     	;# 
  4830  0219                     	;# 
  4831  021A                     	;# 
  4832  021A                     	;# 
  4833  021B                     	;# 
  4834  021B                     	;# 
  4835  021C                     	;# 
  4836  021C                     	;# 
  4837  021D                     	;# 
  4838  021D                     	;# 
  4839  021E                     	;# 
  4840  021F                     	;# 
  4841  028C                     	;# 
  4842  028C                     	;# 
  4843  028D                     	;# 
  4844  028D                     	;# 
  4845  028E                     	;# 
  4846  028F                     	;# 
  4847  0290                     	;# 
  4848  0291                     	;# 
  4849  0292                     	;# 
  4850  0292                     	;# 
  4851  0293                     	;# 
  4852  0293                     	;# 
  4853  0294                     	;# 
  4854  0295                     	;# 
  4855  0296                     	;# 
  4856  0297                     	;# 
  4857  0298                     	;# 
  4858  0298                     	;# 
  4859  0299                     	;# 
  4860  0299                     	;# 
  4861  029A                     	;# 
  4862  029B                     	;# 
  4863  029C                     	;# 
  4864  029D                     	;# 
  4865  029F                     	;# 
  4866  030C                     	;# 
  4867  030C                     	;# 
  4868  030D                     	;# 
  4869  030E                     	;# 
  4870  030F                     	;# 
  4871  0310                     	;# 
  4872  0310                     	;# 
  4873  0311                     	;# 
  4874  0312                     	;# 
  4875  0313                     	;# 
  4876  0314                     	;# 
  4877  0314                     	;# 
  4878  0315                     	;# 
  4879  0316                     	;# 
  4880  0317                     	;# 
  4881  0318                     	;# 
  4882  0318                     	;# 
  4883  0319                     	;# 
  4884  031A                     	;# 
  4885  031B                     	;# 
  4886  038C                     	;# 
  4887  038C                     	;# 
  4888  038D                     	;# 
  4889  038E                     	;# 
  4890  0390                     	;# 
  4891  0390                     	;# 
  4892  0391                     	;# 
  4893  0392                     	;# 
  4894  048C                     	;# 
  4895  048C                     	;# 
  4896  048D                     	;# 
  4897  048E                     	;# 
  4898  048F                     	;# 
  4899  048F                     	;# 
  4900  0490                     	;# 
  4901  0491                     	;# 
  4902  0492                     	;# 
  4903  0492                     	;# 
  4904  0493                     	;# 
  4905  0494                     	;# 
  4906  0495                     	;# 
  4907  0495                     	;# 
  4908  0496                     	;# 
  4909  0497                     	;# 
  4910  0498                     	;# 
  4911  0499                     	;# 
  4912  049A                     	;# 
  4913  049B                     	;# 
  4914  049C                     	;# 
  4915  049D                     	;# 
  4916  058C                     	;# 
  4917  058C                     	;# 
  4918  058D                     	;# 
  4919  058E                     	;# 
  4920  058F                     	;# 
  4921  058F                     	;# 
  4922  0590                     	;# 
  4923  0591                     	;# 
  4924  0592                     	;# 
  4925  0593                     	;# 
  4926  059C                     	;# 
  4927  059C                     	;# 
  4928  059D                     	;# 
  4929  059D                     	;# 
  4930  059E                     	;# 
  4931  059F                     	;# 
  4932  060C                     	;# 
  4933  060C                     	;# 
  4934  060D                     	;# 
  4935  060D                     	;# 
  4936  060E                     	;# 
  4937  060F                     	;# 
  4938  0610                     	;# 
  4939  0611                     	;# 
  4940  0612                     	;# 
  4941  0613                     	;# 
  4942  0614                     	;# 
  4943  0616                     	;# 
  4944  0616                     	;# 
  4945  0617                     	;# 
  4946  0617                     	;# 
  4947  0618                     	;# 
  4948  0619                     	;# 
  4949  061A                     	;# 
  4950  061B                     	;# 
  4951  061C                     	;# 
  4952  061D                     	;# 
  4953  061E                     	;# 
  4954  070C                     	;# 
  4955  070D                     	;# 
  4956  070E                     	;# 
  4957  070F                     	;# 
  4958  0710                     	;# 
  4959  0711                     	;# 
  4960  0712                     	;# 
  4961  0713                     	;# 
  4962  0714                     	;# 
  4963  0716                     	;# 
  4964  0717                     	;# 
  4965  0718                     	;# 
  4966  0719                     	;# 
  4967  071A                     	;# 
  4968  071B                     	;# 
  4969  071C                     	;# 
  4970  071D                     	;# 
  4971  071E                     	;# 
  4972  0796                     	;# 
  4973  0797                     	;# 
  4974  0798                     	;# 
  4975  0799                     	;# 
  4976  079A                     	;# 
  4977  079B                     	;# 
  4978  079C                     	;# 
  4979  079D                     	;# 
  4980  080C                     	;# 
  4981  080D                     	;# 
  4982  080E                     	;# 
  4983  080F                     	;# 
  4984  0810                     	;# 
  4985  0811                     	;# 
  4986  0812                     	;# 
  4987  0813                     	;# 
  4988  0814                     	;# 
  4989  081A                     	;# 
  4990  081A                     	;# 
  4991  081B                     	;# 
  4992  081C                     	;# 
  4993  081C                     	;# 
  4994  081D                     	;# 
  4995  081E                     	;# 
  4996  081F                     	;# 
  4997  088C                     	;# 
  4998  088D                     	;# 
  4999  088E                     	;# 
  5000  088F                     	;# 
  5001  0890                     	;# 
  5002  0891                     	;# 
  5003  0892                     	;# 
  5004  0893                     	;# 
  5005  0895                     	;# 
  5006  0896                     	;# 
  5007  0897                     	;# 
  5008  0898                     	;# 
  5009  0899                     	;# 
  5010  089A                     	;# 
  5011  089B                     	;# 
  5012  090C                     	;# 
  5013  090E                     	;# 
  5014  090F                     	;# 
  5015  091F                     	;# 
  5016  098F                     	;# 
  5017  098F                     	;# 
  5018  0990                     	;# 
  5019  0991                     	;# 
  5020  0992                     	;# 
  5021  0993                     	;# 
  5022  0994                     	;# 
  5023  0995                     	;# 
  5024  0996                     	;# 
  5025  0997                     	;# 
  5026  1E0F                     	;# 
  5027  1E10                     	;# 
  5028  1E11                     	;# 
  5029  1E12                     	;# 
  5030  1E13                     	;# 
  5031  1E14                     	;# 
  5032  1E15                     	;# 
  5033  1E16                     	;# 
  5034  1E17                     	;# 
  5035  1E18                     	;# 
  5036  1E19                     	;# 
  5037  1E1A                     	;# 
  5038  1E1B                     	;# 
  5039  1E1C                     	;# 
  5040  1E1D                     	;# 
  5041  1E1E                     	;# 
  5042  1E1F                     	;# 
  5043  1E20                     	;# 
  5044  1E21                     	;# 
  5045  1E22                     	;# 
  5046  1E23                     	;# 
  5047  1E24                     	;# 
  5048  1E25                     	;# 
  5049  1E26                     	;# 
  5050  1E27                     	;# 
  5051  1E28                     	;# 
  5052  1E29                     	;# 
  5053  1E2A                     	;# 
  5054  1E2B                     	;# 
  5055  1E2C                     	;# 
  5056  1E2D                     	;# 
  5057  1E2E                     	;# 
  5058  1E2F                     	;# 
  5059  1E30                     	;# 
  5060  1E31                     	;# 
  5061  1E32                     	;# 
  5062  1E33                     	;# 
  5063  1E34                     	;# 
  5064  1E35                     	;# 
  5065  1E36                     	;# 
  5066  1E37                     	;# 
  5067  1E8F                     	;# 
  5068  1E90                     	;# 
  5069  1E91                     	;# 
  5070  1E92                     	;# 
  5071  1E93                     	;# 
  5072  1E94                     	;# 
  5073  1E95                     	;# 
  5074  1E96                     	;# 
  5075  1E97                     	;# 
  5076  1E9C                     	;# 
  5077  1E9D                     	;# 
  5078  1E9E                     	;# 
  5079  1EA1                     	;# 
  5080  1EA2                     	;# 
  5081  1EA3                     	;# 
  5082  1EA4                     	;# 
  5083  1EA9                     	;# 
  5084  1EAA                     	;# 
  5085  1EB1                     	;# 
  5086  1EB2                     	;# 
  5087  1EB8                     	;# 
  5088  1EB9                     	;# 
  5089  1EBA                     	;# 
  5090  1EBB                     	;# 
  5091  1EBC                     	;# 
  5092  1EBD                     	;# 
  5093  1EBE                     	;# 
  5094  1EC3                     	;# 
  5095  1EC5                     	;# 
  5096  1EC6                     	;# 
  5097  1EC7                     	;# 
  5098  1EC8                     	;# 
  5099  1EC9                     	;# 
  5100  1ECA                     	;# 
  5101  1ECB                     	;# 
  5102  1ECB                     	;# 
  5103  1ECB                     	;# 
  5104  1ECC                     	;# 
  5105  1ECC                     	;# 
  5106  1ECC                     	;# 
  5107  1F10                     	;# 
  5108  1F11                     	;# 
  5109  1F12                     	;# 
  5110  1F14                     	;# 
  5111  1F15                     	;# 
  5112  1F1C                     	;# 
  5113  1F1D                     	;# 
  5114  1F1E                     	;# 
  5115  1F1F                     	;# 
  5116  1F20                     	;# 
  5117  1F21                     	;# 
  5118  1F22                     	;# 
  5119  1F23                     	;# 
  5120  1F24                     	;# 
  5121  1F25                     	;# 
  5122  1F26                     	;# 
  5123  1F27                     	;# 
  5124  1F38                     	;# 
  5125  1F39                     	;# 
  5126  1F3A                     	;# 
  5127  1F3B                     	;# 
  5128  1F3C                     	;# 
  5129  1F3D                     	;# 
  5130  1F3E                     	;# 
  5131  1F3F                     	;# 
  5132  1F43                     	;# 
  5133  1F44                     	;# 
  5134  1F45                     	;# 
  5135  1F46                     	;# 
  5136  1F47                     	;# 
  5137  1F48                     	;# 
  5138  1F49                     	;# 
  5139  1F4A                     	;# 
  5140  1F4E                     	;# 
  5141  1F4F                     	;# 
  5142  1F50                     	;# 
  5143  1F51                     	;# 
  5144  1F52                     	;# 
  5145  1F53                     	;# 
  5146  1F54                     	;# 
  5147  1F55                     	;# 
  5148  1FE4                     	;# 
  5149  1FE5                     	;# 
  5150  1FE6                     	;# 
  5151  1FE7                     	;# 
  5152  1FE8                     	;# 
  5153  1FE8                     	;# 
  5154  1FE9                     	;# 
  5155  1FEA                     	;# 
  5156  1FEB                     	;# 
  5157  1FED                     	;# 
  5158  1FEE                     	;# 
  5159  1FEF                     	;# 
  5160  0000                     	;# 
  5161  0001                     	;# 
  5162  0002                     	;# 
  5163  0003                     	;# 
  5164  0004                     	;# 
  5165  0005                     	;# 
  5166  0006                     	;# 
  5167  0007                     	;# 
  5168  0008                     	;# 
  5169  0009                     	;# 
  5170  000A                     	;# 
  5171  000B                     	;# 
  5172  000C                     	;# 
  5173  000D                     	;# 
  5174  000E                     	;# 
  5175  0012                     	;# 
  5176  0013                     	;# 
  5177  0014                     	;# 
  5178  0018                     	;# 
  5179  0019                     	;# 
  5180  001A                     	;# 
  5181  008C                     	;# 
  5182  008C                     	;# 
  5183  008D                     	;# 
  5184  008E                     	;# 
  5185  008E                     	;# 
  5186  008F                     	;# 
  5187  0090                     	;# 
  5188  0090                     	;# 
  5189  0091                     	;# 
  5190  0092                     	;# 
  5191  0092                     	;# 
  5192  0093                     	;# 
  5193  0094                     	;# 
  5194  0094                     	;# 
  5195  0095                     	;# 
  5196  0096                     	;# 
  5197  0096                     	;# 
  5198  0097                     	;# 
  5199  0098                     	;# 
  5200  0099                     	;# 
  5201  009A                     	;# 
  5202  009B                     	;# 
  5203  009B                     	;# 
  5204  009C                     	;# 
  5205  009D                     	;# 
  5206  009D                     	;# 
  5207  009E                     	;# 
  5208  009F                     	;# 
  5209  010C                     	;# 
  5210  010C                     	;# 
  5211  010D                     	;# 
  5212  010E                     	;# 
  5213  010F                     	;# 
  5214  010F                     	;# 
  5215  0110                     	;# 
  5216  0111                     	;# 
  5217  0112                     	;# 
  5218  0113                     	;# 
  5219  0114                     	;# 
  5220  0115                     	;# 
  5221  0116                     	;# 
  5222  0117                     	;# 
  5223  0118                     	;# 
  5224  0119                     	;# 
  5225  0119                     	;# 
  5226  0119                     	;# 
  5227  011A                     	;# 
  5228  011A                     	;# 
  5229  011A                     	;# 
  5230  011B                     	;# 
  5231  011B                     	;# 
  5232  011B                     	;# 
  5233  011B                     	;# 
  5234  011B                     	;# 
  5235  011C                     	;# 
  5236  011C                     	;# 
  5237  011C                     	;# 
  5238  011D                     	;# 
  5239  011D                     	;# 
  5240  011D                     	;# 
  5241  011E                     	;# 
  5242  011E                     	;# 
  5243  011E                     	;# 
  5244  011F                     	;# 
  5245  011F                     	;# 
  5246  011F                     	;# 
  5247  011F                     	;# 
  5248  011F                     	;# 
  5249  018C                     	;# 
  5250  018D                     	;# 
  5251  018E                     	;# 
  5252  018F                     	;# 
  5253  0190                     	;# 
  5254  0191                     	;# 
  5255  0192                     	;# 
  5256  0196                     	;# 
  5257  0197                     	;# 
  5258  0198                     	;# 
  5259  0199                     	;# 
  5260  019A                     	;# 
  5261  019B                     	;# 
  5262  019C                     	;# 
  5263  020C                     	;# 
  5264  020D                     	;# 
  5265  020E                     	;# 
  5266  020E                     	;# 
  5267  020F                     	;# 
  5268  020F                     	;# 
  5269  0210                     	;# 
  5270  0210                     	;# 
  5271  0211                     	;# 
  5272  0211                     	;# 
  5273  0212                     	;# 
  5274  0213                     	;# 
  5275  0214                     	;# 
  5276  0214                     	;# 
  5277  0215                     	;# 
  5278  0215                     	;# 
  5279  0216                     	;# 
  5280  0216                     	;# 
  5281  0217                     	;# 
  5282  0217                     	;# 
  5283  0218                     	;# 
  5284  0219                     	;# 
  5285  021A                     	;# 
  5286  021A                     	;# 
  5287  021B                     	;# 
  5288  021B                     	;# 
  5289  021C                     	;# 
  5290  021C                     	;# 
  5291  021D                     	;# 
  5292  021D                     	;# 
  5293  021E                     	;# 
  5294  021F                     	;# 
  5295  028C                     	;# 
  5296  028C                     	;# 
  5297  028D                     	;# 
  5298  028D                     	;# 
  5299  028E                     	;# 
  5300  028F                     	;# 
  5301  0290                     	;# 
  5302  0291                     	;# 
  5303  0292                     	;# 
  5304  0292                     	;# 
  5305  0293                     	;# 
  5306  0293                     	;# 
  5307  0294                     	;# 
  5308  0295                     	;# 
  5309  0296                     	;# 
  5310  0297                     	;# 
  5311  0298                     	;# 
  5312  0298                     	;# 
  5313  0299                     	;# 
  5314  0299                     	;# 
  5315  029A                     	;# 
  5316  029B                     	;# 
  5317  029C                     	;# 
  5318  029D                     	;# 
  5319  029F                     	;# 
  5320  030C                     	;# 
  5321  030C                     	;# 
  5322  030D                     	;# 
  5323  030E                     	;# 
  5324  030F                     	;# 
  5325  0310                     	;# 
  5326  0310                     	;# 
  5327  0311                     	;# 
  5328  0312                     	;# 
  5329  0313                     	;# 
  5330  0314                     	;# 
  5331  0314                     	;# 
  5332  0315                     	;# 
  5333  0316                     	;# 
  5334  0317                     	;# 
  5335  0318                     	;# 
  5336  0318                     	;# 
  5337  0319                     	;# 
  5338  031A                     	;# 
  5339  031B                     	;# 
  5340  038C                     	;# 
  5341  038C                     	;# 
  5342  038D                     	;# 
  5343  038E                     	;# 
  5344  0390                     	;# 
  5345  0390                     	;# 
  5346  0391                     	;# 
  5347  0392                     	;# 
  5348  048C                     	;# 
  5349  048C                     	;# 
  5350  048D                     	;# 
  5351  048E                     	;# 
  5352  048F                     	;# 
  5353  048F                     	;# 
  5354  0490                     	;# 
  5355  0491                     	;# 
  5356  0492                     	;# 
  5357  0492                     	;# 
  5358  0493                     	;# 
  5359  0494                     	;# 
  5360  0495                     	;# 
  5361  0495                     	;# 
  5362  0496                     	;# 
  5363  0497                     	;# 
  5364  0498                     	;# 
  5365  0499                     	;# 
  5366  049A                     	;# 
  5367  049B                     	;# 
  5368  049C                     	;# 
  5369  049D                     	;# 
  5370  058C                     	;# 
  5371  058C                     	;# 
  5372  058D                     	;# 
  5373  058E                     	;# 
  5374  058F                     	;# 
  5375  058F                     	;# 
  5376  0590                     	;# 
  5377  0591                     	;# 
  5378  0592                     	;# 
  5379  0593                     	;# 
  5380  059C                     	;# 
  5381  059C                     	;# 
  5382  059D                     	;# 
  5383  059D                     	;# 
  5384  059E                     	;# 
  5385  059F                     	;# 
  5386  060C                     	;# 
  5387  060C                     	;# 
  5388  060D                     	;# 
  5389  060D                     	;# 
  5390  060E                     	;# 
  5391  060F                     	;# 
  5392  0610                     	;# 
  5393  0611                     	;# 
  5394  0612                     	;# 
  5395  0613                     	;# 
  5396  0614                     	;# 
  5397  0616                     	;# 
  5398  0616                     	;# 
  5399  0617                     	;# 
  5400  0617                     	;# 
  5401  0618                     	;# 
  5402  0619                     	;# 
  5403  061A                     	;# 
  5404  061B                     	;# 
  5405  061C                     	;# 
  5406  061D                     	;# 
  5407  061E                     	;# 
  5408  070C                     	;# 
  5409  070D                     	;# 
  5410  070E                     	;# 
  5411  070F                     	;# 
  5412  0710                     	;# 
  5413  0711                     	;# 
  5414  0712                     	;# 
  5415  0713                     	;# 
  5416  0714                     	;# 
  5417  0716                     	;# 
  5418  0717                     	;# 
  5419  0718                     	;# 
  5420  0719                     	;# 
  5421  071A                     	;# 
  5422  071B                     	;# 
  5423  071C                     	;# 
  5424  071D                     	;# 
  5425  071E                     	;# 
  5426  0796                     	;# 
  5427  0797                     	;# 
  5428  0798                     	;# 
  5429  0799                     	;# 
  5430  079A                     	;# 
  5431  079B                     	;# 
  5432  079C                     	;# 
  5433  079D                     	;# 
  5434  080C                     	;# 
  5435  080D                     	;# 
  5436  080E                     	;# 
  5437  080F                     	;# 
  5438  0810                     	;# 
  5439  0811                     	;# 
  5440  0812                     	;# 
  5441  0813                     	;# 
  5442  0814                     	;# 
  5443  081A                     	;# 
  5444  081A                     	;# 
  5445  081B                     	;# 
  5446  081C                     	;# 
  5447  081C                     	;# 
  5448  081D                     	;# 
  5449  081E                     	;# 
  5450  081F                     	;# 
  5451  088C                     	;# 
  5452  088D                     	;# 
  5453  088E                     	;# 
  5454  088F                     	;# 
  5455  0890                     	;# 
  5456  0891                     	;# 
  5457  0892                     	;# 
  5458  0893                     	;# 
  5459  0895                     	;# 
  5460  0896                     	;# 
  5461  0897                     	;# 
  5462  0898                     	;# 
  5463  0899                     	;# 
  5464  089A                     	;# 
  5465  089B                     	;# 
  5466  090C                     	;# 
  5467  090E                     	;# 
  5468  090F                     	;# 
  5469  091F                     	;# 
  5470  098F                     	;# 
  5471  098F                     	;# 
  5472  0990                     	;# 
  5473  0991                     	;# 
  5474  0992                     	;# 
  5475  0993                     	;# 
  5476  0994                     	;# 
  5477  0995                     	;# 
  5478  0996                     	;# 
  5479  0997                     	;# 
  5480  1E0F                     	;# 
  5481  1E10                     	;# 
  5482  1E11                     	;# 
  5483  1E12                     	;# 
  5484  1E13                     	;# 
  5485  1E14                     	;# 
  5486  1E15                     	;# 
  5487  1E16                     	;# 
  5488  1E17                     	;# 
  5489  1E18                     	;# 
  5490  1E19                     	;# 
  5491  1E1A                     	;# 
  5492  1E1B                     	;# 
  5493  1E1C                     	;# 
  5494  1E1D                     	;# 
  5495  1E1E                     	;# 
  5496  1E1F                     	;# 
  5497  1E20                     	;# 
  5498  1E21                     	;# 
  5499  1E22                     	;# 
  5500  1E23                     	;# 
  5501  1E24                     	;# 
  5502  1E25                     	;# 
  5503  1E26                     	;# 
  5504  1E27                     	;# 
  5505  1E28                     	;# 
  5506  1E29                     	;# 
  5507  1E2A                     	;# 
  5508  1E2B                     	;# 
  5509  1E2C                     	;# 
  5510  1E2D                     	;# 
  5511  1E2E                     	;# 
  5512  1E2F                     	;# 
  5513  1E30                     	;# 
  5514  1E31                     	;# 
  5515  1E32                     	;# 
  5516  1E33                     	;# 
  5517  1E34                     	;# 
  5518  1E35                     	;# 
  5519  1E36                     	;# 
  5520  1E37                     	;# 
  5521  1E8F                     	;# 
  5522  1E90                     	;# 
  5523  1E91                     	;# 
  5524  1E92                     	;# 
  5525  1E93                     	;# 
  5526  1E94                     	;# 
  5527  1E95                     	;# 
  5528  1E96                     	;# 
  5529  1E97                     	;# 
  5530  1E9C                     	;# 
  5531  1E9D                     	;# 
  5532  1E9E                     	;# 
  5533  1EA1                     	;# 
  5534  1EA2                     	;# 
  5535  1EA3                     	;# 
  5536  1EA4                     	;# 
  5537  1EA9                     	;# 
  5538  1EAA                     	;# 
  5539  1EB1                     	;# 
  5540  1EB2                     	;# 
  5541  1EB8                     	;# 
  5542  1EB9                     	;# 
  5543  1EBA                     	;# 
  5544  1EBB                     	;# 
  5545  1EBC                     	;# 
  5546  1EBD                     	;# 
  5547  1EBE                     	;# 
  5548  1EC3                     	;# 
  5549  1EC5                     	;# 
  5550  1EC6                     	;# 
  5551  1EC7                     	;# 
  5552  1EC8                     	;# 
  5553  1EC9                     	;# 
  5554  1ECA                     	;# 
  5555  1ECB                     	;# 
  5556  1ECB                     	;# 
  5557  1ECB                     	;# 
  5558  1ECC                     	;# 
  5559  1ECC                     	;# 
  5560  1ECC                     	;# 
  5561  1F10                     	;# 
  5562  1F11                     	;# 
  5563  1F12                     	;# 
  5564  1F14                     	;# 
  5565  1F15                     	;# 
  5566  1F1C                     	;# 
  5567  1F1D                     	;# 
  5568  1F1E                     	;# 
  5569  1F1F                     	;# 
  5570  1F20                     	;# 
  5571  1F21                     	;# 
  5572  1F22                     	;# 
  5573  1F23                     	;# 
  5574  1F24                     	;# 
  5575  1F25                     	;# 
  5576  1F26                     	;# 
  5577  1F27                     	;# 
  5578  1F38                     	;# 
  5579  1F39                     	;# 
  5580  1F3A                     	;# 
  5581  1F3B                     	;# 
  5582  1F3C                     	;# 
  5583  1F3D                     	;# 
  5584  1F3E                     	;# 
  5585  1F3F                     	;# 
  5586  1F43                     	;# 
  5587  1F44                     	;# 
  5588  1F45                     	;# 
  5589  1F46                     	;# 
  5590  1F47                     	;# 
  5591  1F48                     	;# 
  5592  1F49                     	;# 
  5593  1F4A                     	;# 
  5594  1F4E                     	;# 
  5595  1F4F                     	;# 
  5596  1F50                     	;# 
  5597  1F51                     	;# 
  5598  1F52                     	;# 
  5599  1F53                     	;# 
  5600  1F54                     	;# 
  5601  1F55                     	;# 
  5602  1FE4                     	;# 
  5603  1FE5                     	;# 
  5604  1FE6                     	;# 
  5605  1FE7                     	;# 
  5606  1FE8                     	;# 
  5607  1FE8                     	;# 
  5608  1FE9                     	;# 
  5609  1FEA                     	;# 
  5610  1FEB                     	;# 
  5611  1FED                     	;# 
  5612  1FEE                     	;# 
  5613  1FEF                     	;# 
  5614  0000                     	;# 
  5615  0001                     	;# 
  5616  0002                     	;# 
  5617  0003                     	;# 
  5618  0004                     	;# 
  5619  0005                     	;# 
  5620  0006                     	;# 
  5621  0007                     	;# 
  5622  0008                     	;# 
  5623  0009                     	;# 
  5624  000A                     	;# 
  5625  000B                     	;# 
  5626  000C                     	;# 
  5627  000D                     	;# 
  5628  000E                     	;# 
  5629  0012                     	;# 
  5630  0013                     	;# 
  5631  0014                     	;# 
  5632  0018                     	;# 
  5633  0019                     	;# 
  5634  001A                     	;# 
  5635  008C                     	;# 
  5636  008C                     	;# 
  5637  008D                     	;# 
  5638  008E                     	;# 
  5639  008E                     	;# 
  5640  008F                     	;# 
  5641  0090                     	;# 
  5642  0090                     	;# 
  5643  0091                     	;# 
  5644  0092                     	;# 
  5645  0092                     	;# 
  5646  0093                     	;# 
  5647  0094                     	;# 
  5648  0094                     	;# 
  5649  0095                     	;# 
  5650  0096                     	;# 
  5651  0096                     	;# 
  5652  0097                     	;# 
  5653  0098                     	;# 
  5654  0099                     	;# 
  5655  009A                     	;# 
  5656  009B                     	;# 
  5657  009B                     	;# 
  5658  009C                     	;# 
  5659  009D                     	;# 
  5660  009D                     	;# 
  5661  009E                     	;# 
  5662  009F                     	;# 
  5663  010C                     	;# 
  5664  010C                     	;# 
  5665  010D                     	;# 
  5666  010E                     	;# 
  5667  010F                     	;# 
  5668  010F                     	;# 
  5669  0110                     	;# 
  5670  0111                     	;# 
  5671  0112                     	;# 
  5672  0113                     	;# 
  5673  0114                     	;# 
  5674  0115                     	;# 
  5675  0116                     	;# 
  5676  0117                     	;# 
  5677  0118                     	;# 
  5678  0119                     	;# 
  5679  0119                     	;# 
  5680  0119                     	;# 
  5681  011A                     	;# 
  5682  011A                     	;# 
  5683  011A                     	;# 
  5684  011B                     	;# 
  5685  011B                     	;# 
  5686  011B                     	;# 
  5687  011B                     	;# 
  5688  011B                     	;# 
  5689  011C                     	;# 
  5690  011C                     	;# 
  5691  011C                     	;# 
  5692  011D                     	;# 
  5693  011D                     	;# 
  5694  011D                     	;# 
  5695  011E                     	;# 
  5696  011E                     	;# 
  5697  011E                     	;# 
  5698  011F                     	;# 
  5699  011F                     	;# 
  5700  011F                     	;# 
  5701  011F                     	;# 
  5702  011F                     	;# 
  5703  018C                     	;# 
  5704  018D                     	;# 
  5705  018E                     	;# 
  5706  018F                     	;# 
  5707  0190                     	;# 
  5708  0191                     	;# 
  5709  0192                     	;# 
  5710  0196                     	;# 
  5711  0197                     	;# 
  5712  0198                     	;# 
  5713  0199                     	;# 
  5714  019A                     	;# 
  5715  019B                     	;# 
  5716  019C                     	;# 
  5717  020C                     	;# 
  5718  020D                     	;# 
  5719  020E                     	;# 
  5720  020E                     	;# 
  5721  020F                     	;# 
  5722  020F                     	;# 
  5723  0210                     	;# 
  5724  0210                     	;# 
  5725  0211                     	;# 
  5726  0211                     	;# 
  5727  0212                     	;# 
  5728  0213                     	;# 
  5729  0214                     	;# 
  5730  0214                     	;# 
  5731  0215                     	;# 
  5732  0215                     	;# 
  5733  0216                     	;# 
  5734  0216                     	;# 
  5735  0217                     	;# 
  5736  0217                     	;# 
  5737  0218                     	;# 
  5738  0219                     	;# 
  5739  021A                     	;# 
  5740  021A                     	;# 
  5741  021B                     	;# 
  5742  021B                     	;# 
  5743  021C                     	;# 
  5744  021C                     	;# 
  5745  021D                     	;# 
  5746  021D                     	;# 
  5747  021E                     	;# 
  5748  021F                     	;# 
  5749  028C                     	;# 
  5750  028C                     	;# 
  5751  028D                     	;# 
  5752  028D                     	;# 
  5753  028E                     	;# 
  5754  028F                     	;# 
  5755  0290                     	;# 
  5756  0291                     	;# 
  5757  0292                     	;# 
  5758  0292                     	;# 
  5759  0293                     	;# 
  5760  0293                     	;# 
  5761  0294                     	;# 
  5762  0295                     	;# 
  5763  0296                     	;# 
  5764  0297                     	;# 
  5765  0298                     	;# 
  5766  0298                     	;# 
  5767  0299                     	;# 
  5768  0299                     	;# 
  5769  029A                     	;# 
  5770  029B                     	;# 
  5771  029C                     	;# 
  5772  029D                     	;# 
  5773  029F                     	;# 
  5774  030C                     	;# 
  5775  030C                     	;# 
  5776  030D                     	;# 
  5777  030E                     	;# 
  5778  030F                     	;# 
  5779  0310                     	;# 
  5780  0310                     	;# 
  5781  0311                     	;# 
  5782  0312                     	;# 
  5783  0313                     	;# 
  5784  0314                     	;# 
  5785  0314                     	;# 
  5786  0315                     	;# 
  5787  0316                     	;# 
  5788  0317                     	;# 
  5789  0318                     	;# 
  5790  0318                     	;# 
  5791  0319                     	;# 
  5792  031A                     	;# 
  5793  031B                     	;# 
  5794  038C                     	;# 
  5795  038C                     	;# 
  5796  038D                     	;# 
  5797  038E                     	;# 
  5798  0390                     	;# 
  5799  0390                     	;# 
  5800  0391                     	;# 
  5801  0392                     	;# 
  5802  048C                     	;# 
  5803  048C                     	;# 
  5804  048D                     	;# 
  5805  048E                     	;# 
  5806  048F                     	;# 
  5807  048F                     	;# 
  5808  0490                     	;# 
  5809  0491                     	;# 
  5810  0492                     	;# 
  5811  0492                     	;# 
  5812  0493                     	;# 
  5813  0494                     	;# 
  5814  0495                     	;# 
  5815  0495                     	;# 
  5816  0496                     	;# 
  5817  0497                     	;# 
  5818  0498                     	;# 
  5819  0499                     	;# 
  5820  049A                     	;# 
  5821  049B                     	;# 
  5822  049C                     	;# 
  5823  049D                     	;# 
  5824  058C                     	;# 
  5825  058C                     	;# 
  5826  058D                     	;# 
  5827  058E                     	;# 
  5828  058F                     	;# 
  5829  058F                     	;# 
  5830  0590                     	;# 
  5831  0591                     	;# 
  5832  0592                     	;# 
  5833  0593                     	;# 
  5834  059C                     	;# 
  5835  059C                     	;# 
  5836  059D                     	;# 
  5837  059D                     	;# 
  5838  059E                     	;# 
  5839  059F                     	;# 
  5840  060C                     	;# 
  5841  060C                     	;# 
  5842  060D                     	;# 
  5843  060D                     	;# 
  5844  060E                     	;# 
  5845  060F                     	;# 
  5846  0610                     	;# 
  5847  0611                     	;# 
  5848  0612                     	;# 
  5849  0613                     	;# 
  5850  0614                     	;# 
  5851  0616                     	;# 
  5852  0616                     	;# 
  5853  0617                     	;# 
  5854  0617                     	;# 
  5855  0618                     	;# 
  5856  0619                     	;# 
  5857  061A                     	;# 
  5858  061B                     	;# 
  5859  061C                     	;# 
  5860  061D                     	;# 
  5861  061E                     	;# 
  5862  070C                     	;# 
  5863  070D                     	;# 
  5864  070E                     	;# 
  5865  070F                     	;# 
  5866  0710                     	;# 
  5867  0711                     	;# 
  5868  0712                     	;# 
  5869  0713                     	;# 
  5870  0714                     	;# 
  5871  0716                     	;# 
  5872  0717                     	;# 
  5873  0718                     	;# 
  5874  0719                     	;# 
  5875  071A                     	;# 
  5876  071B                     	;# 
  5877  071C                     	;# 
  5878  071D                     	;# 
  5879  071E                     	;# 
  5880  0796                     	;# 
  5881  0797                     	;# 
  5882  0798                     	;# 
  5883  0799                     	;# 
  5884  079A                     	;# 
  5885  079B                     	;# 
  5886  079C                     	;# 
  5887  079D                     	;# 
  5888  080C                     	;# 
  5889  080D                     	;# 
  5890  080E                     	;# 
  5891  080F                     	;# 
  5892  0810                     	;# 
  5893  0811                     	;# 
  5894  0812                     	;# 
  5895  0813                     	;# 
  5896  0814                     	;# 
  5897  081A                     	;# 
  5898  081A                     	;# 
  5899  081B                     	;# 
  5900  081C                     	;# 
  5901  081C                     	;# 
  5902  081D                     	;# 
  5903  081E                     	;# 
  5904  081F                     	;# 
  5905  088C                     	;# 
  5906  088D                     	;# 
  5907  088E                     	;# 
  5908  088F                     	;# 
  5909  0890                     	;# 
  5910  0891                     	;# 
  5911  0892                     	;# 
  5912  0893                     	;# 
  5913  0895                     	;# 
  5914  0896                     	;# 
  5915  0897                     	;# 
  5916  0898                     	;# 
  5917  0899                     	;# 
  5918  089A                     	;# 
  5919  089B                     	;# 
  5920  090C                     	;# 
  5921  090E                     	;# 
  5922  090F                     	;# 
  5923  091F                     	;# 
  5924  098F                     	;# 
  5925  098F                     	;# 
  5926  0990                     	;# 
  5927  0991                     	;# 
  5928  0992                     	;# 
  5929  0993                     	;# 
  5930  0994                     	;# 
  5931  0995                     	;# 
  5932  0996                     	;# 
  5933  0997                     	;# 
  5934  1E0F                     	;# 
  5935  1E10                     	;# 
  5936  1E11                     	;# 
  5937  1E12                     	;# 
  5938  1E13                     	;# 
  5939  1E14                     	;# 
  5940  1E15                     	;# 
  5941  1E16                     	;# 
  5942  1E17                     	;# 
  5943  1E18                     	;# 
  5944  1E19                     	;# 
  5945  1E1A                     	;# 
  5946  1E1B                     	;# 
  5947  1E1C                     	;# 
  5948  1E1D                     	;# 
  5949  1E1E                     	;# 
  5950  1E1F                     	;# 
  5951  1E20                     	;# 
  5952  1E21                     	;# 
  5953  1E22                     	;# 
  5954  1E23                     	;# 
  5955  1E24                     	;# 
  5956  1E25                     	;# 
  5957  1E26                     	;# 
  5958  1E27                     	;# 
  5959  1E28                     	;# 
  5960  1E29                     	;# 
  5961  1E2A                     	;# 
  5962  1E2B                     	;# 
  5963  1E2C                     	;# 
  5964  1E2D                     	;# 
  5965  1E2E                     	;# 
  5966  1E2F                     	;# 
  5967  1E30                     	;# 
  5968  1E31                     	;# 
  5969  1E32                     	;# 
  5970  1E33                     	;# 
  5971  1E34                     	;# 
  5972  1E35                     	;# 
  5973  1E36                     	;# 
  5974  1E37                     	;# 
  5975  1E8F                     	;# 
  5976  1E90                     	;# 
  5977  1E91                     	;# 
  5978  1E92                     	;# 
  5979  1E93                     	;# 
  5980  1E94                     	;# 
  5981  1E95                     	;# 
  5982  1E96                     	;# 
  5983  1E97                     	;# 
  5984  1E9C                     	;# 
  5985  1E9D                     	;# 
  5986  1E9E                     	;# 
  5987  1EA1                     	;# 
  5988  1EA2                     	;# 
  5989  1EA3                     	;# 
  5990  1EA4                     	;# 
  5991  1EA9                     	;# 
  5992  1EAA                     	;# 
  5993  1EB1                     	;# 
  5994  1EB2                     	;# 
  5995  1EB8                     	;# 
  5996  1EB9                     	;# 
  5997  1EBA                     	;# 
  5998  1EBB                     	;# 
  5999  1EBC                     	;# 
  6000  1EBD                     	;# 
  6001  1EBE                     	;# 
  6002  1EC3                     	;# 
  6003  1EC5                     	;# 
  6004  1EC6                     	;# 
  6005  1EC7                     	;# 
  6006  1EC8                     	;# 
  6007  1EC9                     	;# 
  6008  1ECA                     	;# 
  6009  1ECB                     	;# 
  6010  1ECB                     	;# 
  6011  1ECB                     	;# 
  6012  1ECC                     	;# 
  6013  1ECC                     	;# 
  6014  1ECC                     	;# 
  6015  1F10                     	;# 
  6016  1F11                     	;# 
  6017  1F12                     	;# 
  6018  1F14                     	;# 
  6019  1F15                     	;# 
  6020  1F1C                     	;# 
  6021  1F1D                     	;# 
  6022  1F1E                     	;# 
  6023  1F1F                     	;# 
  6024  1F20                     	;# 
  6025  1F21                     	;# 
  6026  1F22                     	;# 
  6027  1F23                     	;# 
  6028  1F24                     	;# 
  6029  1F25                     	;# 
  6030  1F26                     	;# 
  6031  1F27                     	;# 
  6032  1F38                     	;# 
  6033  1F39                     	;# 
  6034  1F3A                     	;# 
  6035  1F3B                     	;# 
  6036  1F3C                     	;# 
  6037  1F3D                     	;# 
  6038  1F3E                     	;# 
  6039  1F3F                     	;# 
  6040  1F43                     	;# 
  6041  1F44                     	;# 
  6042  1F45                     	;# 
  6043  1F46                     	;# 
  6044  1F47                     	;# 
  6045  1F48                     	;# 
  6046  1F49                     	;# 
  6047  1F4A                     	;# 
  6048  1F4E                     	;# 
  6049  1F4F                     	;# 
  6050  1F50                     	;# 
  6051  1F51                     	;# 
  6052  1F52                     	;# 
  6053  1F53                     	;# 
  6054  1F54                     	;# 
  6055  1F55                     	;# 
  6056  1FE4                     	;# 
  6057  1FE5                     	;# 
  6058  1FE6                     	;# 
  6059  1FE7                     	;# 
  6060  1FE8                     	;# 
  6061  1FE8                     	;# 
  6062  1FE9                     	;# 
  6063  1FEA                     	;# 
  6064  1FEB                     	;# 
  6065  1FED                     	;# 
  6066  1FEE                     	;# 
  6067  1FEF                     	;# 
  6068  0000                     	;# 
  6069  0001                     	;# 
  6070  0002                     	;# 
  6071  0003                     	;# 
  6072  0004                     	;# 
  6073  0005                     	;# 
  6074  0006                     	;# 
  6075  0007                     	;# 
  6076  0008                     	;# 
  6077  0009                     	;# 
  6078  000A                     	;# 
  6079  000B                     	;# 
  6080  000C                     	;# 
  6081  000D                     	;# 
  6082  000E                     	;# 
  6083  0012                     	;# 
  6084  0013                     	;# 
  6085  0014                     	;# 
  6086  0018                     	;# 
  6087  0019                     	;# 
  6088  001A                     	;# 
  6089  008C                     	;# 
  6090  008C                     	;# 
  6091  008D                     	;# 
  6092  008E                     	;# 
  6093  008E                     	;# 
  6094  008F                     	;# 
  6095  0090                     	;# 
  6096  0090                     	;# 
  6097  0091                     	;# 
  6098  0092                     	;# 
  6099  0092                     	;# 
  6100  0093                     	;# 
  6101  0094                     	;# 
  6102  0094                     	;# 
  6103  0095                     	;# 
  6104  0096                     	;# 
  6105  0096                     	;# 
  6106  0097                     	;# 
  6107  0098                     	;# 
  6108  0099                     	;# 
  6109  009A                     	;# 
  6110  009B                     	;# 
  6111  009B                     	;# 
  6112  009C                     	;# 
  6113  009D                     	;# 
  6114  009D                     	;# 
  6115  009E                     	;# 
  6116  009F                     	;# 
  6117  010C                     	;# 
  6118  010C                     	;# 
  6119  010D                     	;# 
  6120  010E                     	;# 
  6121  010F                     	;# 
  6122  010F                     	;# 
  6123  0110                     	;# 
  6124  0111                     	;# 
  6125  0112                     	;# 
  6126  0113                     	;# 
  6127  0114                     	;# 
  6128  0115                     	;# 
  6129  0116                     	;# 
  6130  0117                     	;# 
  6131  0118                     	;# 
  6132  0119                     	;# 
  6133  0119                     	;# 
  6134  0119                     	;# 
  6135  011A                     	;# 
  6136  011A                     	;# 
  6137  011A                     	;# 
  6138  011B                     	;# 
  6139  011B                     	;# 
  6140  011B                     	;# 
  6141  011B                     	;# 
  6142  011B                     	;# 
  6143  011C                     	;# 
  6144  011C                     	;# 
  6145  011C                     	;# 
  6146  011D                     	;# 
  6147  011D                     	;# 
  6148  011D                     	;# 
  6149  011E                     	;# 
  6150  011E                     	;# 
  6151  011E                     	;# 
  6152  011F                     	;# 
  6153  011F                     	;# 
  6154  011F                     	;# 
  6155  011F                     	;# 
  6156  011F                     	;# 
  6157  018C                     	;# 
  6158  018D                     	;# 
  6159  018E                     	;# 
  6160  018F                     	;# 
  6161  0190                     	;# 
  6162  0191                     	;# 
  6163  0192                     	;# 
  6164  0196                     	;# 
  6165  0197                     	;# 
  6166  0198                     	;# 
  6167  0199                     	;# 
  6168  019A                     	;# 
  6169  019B                     	;# 
  6170  019C                     	;# 
  6171  020C                     	;# 
  6172  020D                     	;# 
  6173  020E                     	;# 
  6174  020E                     	;# 
  6175  020F                     	;# 
  6176  020F                     	;# 
  6177  0210                     	;# 
  6178  0210                     	;# 
  6179  0211                     	;# 
  6180  0211                     	;# 
  6181  0212                     	;# 
  6182  0213                     	;# 
  6183  0214                     	;# 
  6184  0214                     	;# 
  6185  0215                     	;# 
  6186  0215                     	;# 
  6187  0216                     	;# 
  6188  0216                     	;# 
  6189  0217                     	;# 
  6190  0217                     	;# 
  6191  0218                     	;# 
  6192  0219                     	;# 
  6193  021A                     	;# 
  6194  021A                     	;# 
  6195  021B                     	;# 
  6196  021B                     	;# 
  6197  021C                     	;# 
  6198  021C                     	;# 
  6199  021D                     	;# 
  6200  021D                     	;# 
  6201  021E                     	;# 
  6202  021F                     	;# 
  6203  028C                     	;# 
  6204  028C                     	;# 
  6205  028D                     	;# 
  6206  028D                     	;# 
  6207  028E                     	;# 
  6208  028F                     	;# 
  6209  0290                     	;# 
  6210  0291                     	;# 
  6211  0292                     	;# 
  6212  0292                     	;# 
  6213  0293                     	;# 
  6214  0293                     	;# 
  6215  0294                     	;# 
  6216  0295                     	;# 
  6217  0296                     	;# 
  6218  0297                     	;# 
  6219  0298                     	;# 
  6220  0298                     	;# 
  6221  0299                     	;# 
  6222  0299                     	;# 
  6223  029A                     	;# 
  6224  029B                     	;# 
  6225  029C                     	;# 
  6226  029D                     	;# 
  6227  029F                     	;# 
  6228  030C                     	;# 
  6229  030C                     	;# 
  6230  030D                     	;# 
  6231  030E                     	;# 
  6232  030F                     	;# 
  6233  0310                     	;# 
  6234  0310                     	;# 
  6235  0311                     	;# 
  6236  0312                     	;# 
  6237  0313                     	;# 
  6238  0314                     	;# 
  6239  0314                     	;# 
  6240  0315                     	;# 
  6241  0316                     	;# 
  6242  0317                     	;# 
  6243  0318                     	;# 
  6244  0318                     	;# 
  6245  0319                     	;# 
  6246  031A                     	;# 
  6247  031B                     	;# 
  6248  038C                     	;# 
  6249  038C                     	;# 
  6250  038D                     	;# 
  6251  038E                     	;# 
  6252  0390                     	;# 
  6253  0390                     	;# 
  6254  0391                     	;# 
  6255  0392                     	;# 
  6256  048C                     	;# 
  6257  048C                     	;# 
  6258  048D                     	;# 
  6259  048E                     	;# 
  6260  048F                     	;# 
  6261  048F                     	;# 
  6262  0490                     	;# 
  6263  0491                     	;# 
  6264  0492                     	;# 
  6265  0492                     	;# 
  6266  0493                     	;# 
  6267  0494                     	;# 
  6268  0495                     	;# 
  6269  0495                     	;# 
  6270  0496                     	;# 
  6271  0497                     	;# 
  6272  0498                     	;# 
  6273  0499                     	;# 
  6274  049A                     	;# 
  6275  049B                     	;# 
  6276  049C                     	;# 
  6277  049D                     	;# 
  6278  058C                     	;# 
  6279  058C                     	;# 
  6280  058D                     	;# 
  6281  058E                     	;# 
  6282  058F                     	;# 
  6283  058F                     	;# 
  6284  0590                     	;# 
  6285  0591                     	;# 
  6286  0592                     	;# 
  6287  0593                     	;# 
  6288  059C                     	;# 
  6289  059C                     	;# 
  6290  059D                     	;# 
  6291  059D                     	;# 
  6292  059E                     	;# 
  6293  059F                     	;# 
  6294  060C                     	;# 
  6295  060C                     	;# 
  6296  060D                     	;# 
  6297  060D                     	;# 
  6298  060E                     	;# 
  6299  060F                     	;# 
  6300  0610                     	;# 
  6301  0611                     	;# 
  6302  0612                     	;# 
  6303  0613                     	;# 
  6304  0614                     	;# 
  6305  0616                     	;# 
  6306  0616                     	;# 
  6307  0617                     	;# 
  6308  0617                     	;# 
  6309  0618                     	;# 
  6310  0619                     	;# 
  6311  061A                     	;# 
  6312  061B                     	;# 
  6313  061C                     	;# 
  6314  061D                     	;# 
  6315  061E                     	;# 
  6316  070C                     	;# 
  6317  070D                     	;# 
  6318  070E                     	;# 
  6319  070F                     	;# 
  6320  0710                     	;# 
  6321  0711                     	;# 
  6322  0712                     	;# 
  6323  0713                     	;# 
  6324  0714                     	;# 
  6325  0716                     	;# 
  6326  0717                     	;# 
  6327  0718                     	;# 
  6328  0719                     	;# 
  6329  071A                     	;# 
  6330  071B                     	;# 
  6331  071C                     	;# 
  6332  071D                     	;# 
  6333  071E                     	;# 
  6334  0796                     	;# 
  6335  0797                     	;# 
  6336  0798                     	;# 
  6337  0799                     	;# 
  6338  079A                     	;# 
  6339  079B                     	;# 
  6340  079C                     	;# 
  6341  079D                     	;# 
  6342  080C                     	;# 
  6343  080D                     	;# 
  6344  080E                     	;# 
  6345  080F                     	;# 
  6346  0810                     	;# 
  6347  0811                     	;# 
  6348  0812                     	;# 
  6349  0813                     	;# 
  6350  0814                     	;# 
  6351  081A                     	;# 
  6352  081A                     	;# 
  6353  081B                     	;# 
  6354  081C                     	;# 
  6355  081C                     	;# 
  6356  081D                     	;# 
  6357  081E                     	;# 
  6358  081F                     	;# 
  6359  088C                     	;# 
  6360  088D                     	;# 
  6361  088E                     	;# 
  6362  088F                     	;# 
  6363  0890                     	;# 
  6364  0891                     	;# 
  6365  0892                     	;# 
  6366  0893                     	;# 
  6367  0895                     	;# 
  6368  0896                     	;# 
  6369  0897                     	;# 
  6370  0898                     	;# 
  6371  0899                     	;# 
  6372  089A                     	;# 
  6373  089B                     	;# 
  6374  090C                     	;# 
  6375  090E                     	;# 
  6376  090F                     	;# 
  6377  091F                     	;# 
  6378  098F                     	;# 
  6379  098F                     	;# 
  6380  0990                     	;# 
  6381  0991                     	;# 
  6382  0992                     	;# 
  6383  0993                     	;# 
  6384  0994                     	;# 
  6385  0995                     	;# 
  6386  0996                     	;# 
  6387  0997                     	;# 
  6388  1E0F                     	;# 
  6389  1E10                     	;# 
  6390  1E11                     	;# 
  6391  1E12                     	;# 
  6392  1E13                     	;# 
  6393  1E14                     	;# 
  6394  1E15                     	;# 
  6395  1E16                     	;# 
  6396  1E17                     	;# 
  6397  1E18                     	;# 
  6398  1E19                     	;# 
  6399  1E1A                     	;# 
  6400  1E1B                     	;# 
  6401  1E1C                     	;# 
  6402  1E1D                     	;# 
  6403  1E1E                     	;# 
  6404  1E1F                     	;# 
  6405  1E20                     	;# 
  6406  1E21                     	;# 
  6407  1E22                     	;# 
  6408  1E23                     	;# 
  6409  1E24                     	;# 
  6410  1E25                     	;# 
  6411  1E26                     	;# 
  6412  1E27                     	;# 
  6413  1E28                     	;# 
  6414  1E29                     	;# 
  6415  1E2A                     	;# 
  6416  1E2B                     	;# 
  6417  1E2C                     	;# 
  6418  1E2D                     	;# 
  6419  1E2E                     	;# 
  6420  1E2F                     	;# 
  6421  1E30                     	;# 
  6422  1E31                     	;# 
  6423  1E32                     	;# 
  6424  1E33                     	;# 
  6425  1E34                     	;# 
  6426  1E35                     	;# 
  6427  1E36                     	;# 
  6428  1E37                     	;# 
  6429  1E8F                     	;# 
  6430  1E90                     	;# 
  6431  1E91                     	;# 
  6432  1E92                     	;# 
  6433  1E93                     	;# 
  6434  1E94                     	;# 
  6435  1E95                     	;# 
  6436  1E96                     	;# 
  6437  1E97                     	;# 
  6438  1E9C                     	;# 
  6439  1E9D                     	;# 
  6440  1E9E                     	;# 
  6441  1EA1                     	;# 
  6442  1EA2                     	;# 
  6443  1EA3                     	;# 
  6444  1EA4                     	;# 
  6445  1EA9                     	;# 
  6446  1EAA                     	;# 
  6447  1EB1                     	;# 
  6448  1EB2                     	;# 
  6449  1EB8                     	;# 
  6450  1EB9                     	;# 
  6451  1EBA                     	;# 
  6452  1EBB                     	;# 
  6453  1EBC                     	;# 
  6454  1EBD                     	;# 
  6455  1EBE                     	;# 
  6456  1EC3                     	;# 
  6457  1EC5                     	;# 
  6458  1EC6                     	;# 
  6459  1EC7                     	;# 
  6460  1EC8                     	;# 
  6461  1EC9                     	;# 
  6462  1ECA                     	;# 
  6463  1ECB                     	;# 
  6464  1ECB                     	;# 
  6465  1ECB                     	;# 
  6466  1ECC                     	;# 
  6467  1ECC                     	;# 
  6468  1ECC                     	;# 
  6469  1F10                     	;# 
  6470  1F11                     	;# 
  6471  1F12                     	;# 
  6472  1F14                     	;# 
  6473  1F15                     	;# 
  6474  1F1C                     	;# 
  6475  1F1D                     	;# 
  6476  1F1E                     	;# 
  6477  1F1F                     	;# 
  6478  1F20                     	;# 
  6479  1F21                     	;# 
  6480  1F22                     	;# 
  6481  1F23                     	;# 
  6482  1F24                     	;# 
  6483  1F25                     	;# 
  6484  1F26                     	;# 
  6485  1F27                     	;# 
  6486  1F38                     	;# 
  6487  1F39                     	;# 
  6488  1F3A                     	;# 
  6489  1F3B                     	;# 
  6490  1F3C                     	;# 
  6491  1F3D                     	;# 
  6492  1F3E                     	;# 
  6493  1F3F                     	;# 
  6494  1F43                     	;# 
  6495  1F44                     	;# 
  6496  1F45                     	;# 
  6497  1F46                     	;# 
  6498  1F47                     	;# 
  6499  1F48                     	;# 
  6500  1F49                     	;# 
  6501  1F4A                     	;# 
  6502  1F4E                     	;# 
  6503  1F4F                     	;# 
  6504  1F50                     	;# 
  6505  1F51                     	;# 
  6506  1F52                     	;# 
  6507  1F53                     	;# 
  6508  1F54                     	;# 
  6509  1F55                     	;# 
  6510  1FE4                     	;# 
  6511  1FE5                     	;# 
  6512  1FE6                     	;# 
  6513  1FE7                     	;# 
  6514  1FE8                     	;# 
  6515  1FE8                     	;# 
  6516  1FE9                     	;# 
  6517  1FEA                     	;# 
  6518  1FEB                     	;# 
  6519  1FED                     	;# 
  6520  1FEE                     	;# 
  6521  1FEF                     	;# 
  6522  0000                     	;# 
  6523  0001                     	;# 
  6524  0002                     	;# 
  6525  0003                     	;# 
  6526  0004                     	;# 
  6527  0005                     	;# 
  6528  0006                     	;# 
  6529  0007                     	;# 
  6530  0008                     	;# 
  6531  0009                     	;# 
  6532  000A                     	;# 
  6533  000B                     	;# 
  6534  000C                     	;# 
  6535  000D                     	;# 
  6536  000E                     	;# 
  6537  0012                     	;# 
  6538  0013                     	;# 
  6539  0014                     	;# 
  6540  0018                     	;# 
  6541  0019                     	;# 
  6542  001A                     	;# 
  6543  008C                     	;# 
  6544  008C                     	;# 
  6545  008D                     	;# 
  6546  008E                     	;# 
  6547  008E                     	;# 
  6548  008F                     	;# 
  6549  0090                     	;# 
  6550  0090                     	;# 
  6551  0091                     	;# 
  6552  0092                     	;# 
  6553  0092                     	;# 
  6554  0093                     	;# 
  6555  0094                     	;# 
  6556  0094                     	;# 
  6557  0095                     	;# 
  6558  0096                     	;# 
  6559  0096                     	;# 
  6560  0097                     	;# 
  6561  0098                     	;# 
  6562  0099                     	;# 
  6563  009A                     	;# 
  6564  009B                     	;# 
  6565  009B                     	;# 
  6566  009C                     	;# 
  6567  009D                     	;# 
  6568  009D                     	;# 
  6569  009E                     	;# 
  6570  009F                     	;# 
  6571  010C                     	;# 
  6572  010C                     	;# 
  6573  010D                     	;# 
  6574  010E                     	;# 
  6575  010F                     	;# 
  6576  010F                     	;# 
  6577  0110                     	;# 
  6578  0111                     	;# 
  6579  0112                     	;# 
  6580  0113                     	;# 
  6581  0114                     	;# 
  6582  0115                     	;# 
  6583  0116                     	;# 
  6584  0117                     	;# 
  6585  0118                     	;# 
  6586  0119                     	;# 
  6587  0119                     	;# 
  6588  0119                     	;# 
  6589  011A                     	;# 
  6590  011A                     	;# 
  6591  011A                     	;# 
  6592  011B                     	;# 
  6593  011B                     	;# 
  6594  011B                     	;# 
  6595  011B                     	;# 
  6596  011B                     	;# 
  6597  011C                     	;# 
  6598  011C                     	;# 
  6599  011C                     	;# 
  6600  011D                     	;# 
  6601  011D                     	;# 
  6602  011D                     	;# 
  6603  011E                     	;# 
  6604  011E                     	;# 
  6605  011E                     	;# 
  6606  011F                     	;# 
  6607  011F                     	;# 
  6608  011F                     	;# 
  6609  011F                     	;# 
  6610  011F                     	;# 
  6611  018C                     	;# 
  6612  018D                     	;# 
  6613  018E                     	;# 
  6614  018F                     	;# 
  6615  0190                     	;# 
  6616  0191                     	;# 
  6617  0192                     	;# 
  6618  0196                     	;# 
  6619  0197                     	;# 
  6620  0198                     	;# 
  6621  0199                     	;# 
  6622  019A                     	;# 
  6623  019B                     	;# 
  6624  019C                     	;# 
  6625  020C                     	;# 
  6626  020D                     	;# 
  6627  020E                     	;# 
  6628  020E                     	;# 
  6629  020F                     	;# 
  6630  020F                     	;# 
  6631  0210                     	;# 
  6632  0210                     	;# 
  6633  0211                     	;# 
  6634  0211                     	;# 
  6635  0212                     	;# 
  6636  0213                     	;# 
  6637  0214                     	;# 
  6638  0214                     	;# 
  6639  0215                     	;# 
  6640  0215                     	;# 
  6641  0216                     	;# 
  6642  0216                     	;# 
  6643  0217                     	;# 
  6644  0217                     	;# 
  6645  0218                     	;# 
  6646  0219                     	;# 
  6647  021A                     	;# 
  6648  021A                     	;# 
  6649  021B                     	;# 
  6650  021B                     	;# 
  6651  021C                     	;# 
  6652  021C                     	;# 
  6653  021D                     	;# 
  6654  021D                     	;# 
  6655  021E                     	;# 
  6656  021F                     	;# 
  6657  028C                     	;# 
  6658  028C                     	;# 
  6659  028D                     	;# 
  6660  028D                     	;# 
  6661  028E                     	;# 
  6662  028F                     	;# 
  6663  0290                     	;# 
  6664  0291                     	;# 
  6665  0292                     	;# 
  6666  0292                     	;# 
  6667  0293                     	;# 
  6668  0293                     	;# 
  6669  0294                     	;# 
  6670  0295                     	;# 
  6671  0296                     	;# 
  6672  0297                     	;# 
  6673  0298                     	;# 
  6674  0298                     	;# 
  6675  0299                     	;# 
  6676  0299                     	;# 
  6677  029A                     	;# 
  6678  029B                     	;# 
  6679  029C                     	;# 
  6680  029D                     	;# 
  6681  029F                     	;# 
  6682  030C                     	;# 
  6683  030C                     	;# 
  6684  030D                     	;# 
  6685  030E                     	;# 
  6686  030F                     	;# 
  6687  0310                     	;# 
  6688  0310                     	;# 
  6689  0311                     	;# 
  6690  0312                     	;# 
  6691  0313                     	;# 
  6692  0314                     	;# 
  6693  0314                     	;# 
  6694  0315                     	;# 
  6695  0316                     	;# 
  6696  0317                     	;# 
  6697  0318                     	;# 
  6698  0318                     	;# 
  6699  0319                     	;# 
  6700  031A                     	;# 
  6701  031B                     	;# 
  6702  038C                     	;# 
  6703  038C                     	;# 
  6704  038D                     	;# 
  6705  038E                     	;# 
  6706  0390                     	;# 
  6707  0390                     	;# 
  6708  0391                     	;# 
  6709  0392                     	;# 
  6710  048C                     	;# 
  6711  048C                     	;# 
  6712  048D                     	;# 
  6713  048E                     	;# 
  6714  048F                     	;# 
  6715  048F                     	;# 
  6716  0490                     	;# 
  6717  0491                     	;# 
  6718  0492                     	;# 
  6719  0492                     	;# 
  6720  0493                     	;# 
  6721  0494                     	;# 
  6722  0495                     	;# 
  6723  0495                     	;# 
  6724  0496                     	;# 
  6725  0497                     	;# 
  6726  0498                     	;# 
  6727  0499                     	;# 
  6728  049A                     	;# 
  6729  049B                     	;# 
  6730  049C                     	;# 
  6731  049D                     	;# 
  6732  058C                     	;# 
  6733  058C                     	;# 
  6734  058D                     	;# 
  6735  058E                     	;# 
  6736  058F                     	;# 
  6737  058F                     	;# 
  6738  0590                     	;# 
  6739  0591                     	;# 
  6740  0592                     	;# 
  6741  0593                     	;# 
  6742  059C                     	;# 
  6743  059C                     	;# 
  6744  059D                     	;# 
  6745  059D                     	;# 
  6746  059E                     	;# 
  6747  059F                     	;# 
  6748  060C                     	;# 
  6749  060C                     	;# 
  6750  060D                     	;# 
  6751  060D                     	;# 
  6752  060E                     	;# 
  6753  060F                     	;# 
  6754  0610                     	;# 
  6755  0611                     	;# 
  6756  0612                     	;# 
  6757  0613                     	;# 
  6758  0614                     	;# 
  6759  0616                     	;# 
  6760  0616                     	;# 
  6761  0617                     	;# 
  6762  0617                     	;# 
  6763  0618                     	;# 
  6764  0619                     	;# 
  6765  061A                     	;# 
  6766  061B                     	;# 
  6767  061C                     	;# 
  6768  061D                     	;# 
  6769  061E                     	;# 
  6770  070C                     	;# 
  6771  070D                     	;# 
  6772  070E                     	;# 
  6773  070F                     	;# 
  6774  0710                     	;# 
  6775  0711                     	;# 
  6776  0712                     	;# 
  6777  0713                     	;# 
  6778  0714                     	;# 
  6779  0716                     	;# 
  6780  0717                     	;# 
  6781  0718                     	;# 
  6782  0719                     	;# 
  6783  071A                     	;# 
  6784  071B                     	;# 
  6785  071C                     	;# 
  6786  071D                     	;# 
  6787  071E                     	;# 
  6788  0796                     	;# 
  6789  0797                     	;# 
  6790  0798                     	;# 
  6791  0799                     	;# 
  6792  079A                     	;# 
  6793  079B                     	;# 
  6794  079C                     	;# 
  6795  079D                     	;# 
  6796  080C                     	;# 
  6797  080D                     	;# 
  6798  080E                     	;# 
  6799  080F                     	;# 
  6800  0810                     	;# 
  6801  0811                     	;# 
  6802  0812                     	;# 
  6803  0813                     	;# 
  6804  0814                     	;# 
  6805  081A                     	;# 
  6806  081A                     	;# 
  6807  081B                     	;# 
  6808  081C                     	;# 
  6809  081C                     	;# 
  6810  081D                     	;# 
  6811  081E                     	;# 
  6812  081F                     	;# 
  6813  088C                     	;# 
  6814  088D                     	;# 
  6815  088E                     	;# 
  6816  088F                     	;# 
  6817  0890                     	;# 
  6818  0891                     	;# 
  6819  0892                     	;# 
  6820  0893                     	;# 
  6821  0895                     	;# 
  6822  0896                     	;# 
  6823  0897                     	;# 
  6824  0898                     	;# 
  6825  0899                     	;# 
  6826  089A                     	;# 
  6827  089B                     	;# 
  6828  090C                     	;# 
  6829  090E                     	;# 
  6830  090F                     	;# 
  6831  091F                     	;# 
  6832  098F                     	;# 
  6833  098F                     	;# 
  6834  0990                     	;# 
  6835  0991                     	;# 
  6836  0992                     	;# 
  6837  0993                     	;# 
  6838  0994                     	;# 
  6839  0995                     	;# 
  6840  0996                     	;# 
  6841  0997                     	;# 
  6842  1E0F                     	;# 
  6843  1E10                     	;# 
  6844  1E11                     	;# 
  6845  1E12                     	;# 
  6846  1E13                     	;# 
  6847  1E14                     	;# 
  6848  1E15                     	;# 
  6849  1E16                     	;# 
  6850  1E17                     	;# 
  6851  1E18                     	;# 
  6852  1E19                     	;# 
  6853  1E1A                     	;# 
  6854  1E1B                     	;# 
  6855  1E1C                     	;# 
  6856  1E1D                     	;# 
  6857  1E1E                     	;# 
  6858  1E1F                     	;# 
  6859  1E20                     	;# 
  6860  1E21                     	;# 
  6861  1E22                     	;# 
  6862  1E23                     	;# 
  6863  1E24                     	;# 
  6864  1E25                     	;# 
  6865  1E26                     	;# 
  6866  1E27                     	;# 
  6867  1E28                     	;# 
  6868  1E29                     	;# 
  6869  1E2A                     	;# 
  6870  1E2B                     	;# 
  6871  1E2C                     	;# 
  6872  1E2D                     	;# 
  6873  1E2E                     	;# 
  6874  1E2F                     	;# 
  6875  1E30                     	;# 
  6876  1E31                     	;# 
  6877  1E32                     	;# 
  6878  1E33                     	;# 
  6879  1E34                     	;# 
  6880  1E35                     	;# 
  6881  1E36                     	;# 
  6882  1E37                     	;# 
  6883  1E8F                     	;# 
  6884  1E90                     	;# 
  6885  1E91                     	;# 
  6886  1E92                     	;# 
  6887  1E93                     	;# 
  6888  1E94                     	;# 
  6889  1E95                     	;# 
  6890  1E96                     	;# 
  6891  1E97                     	;# 
  6892  1E9C                     	;# 
  6893  1E9D                     	;# 
  6894  1E9E                     	;# 
  6895  1EA1                     	;# 
  6896  1EA2                     	;# 
  6897  1EA3                     	;# 
  6898  1EA4                     	;# 
  6899  1EA9                     	;# 
  6900  1EAA                     	;# 
  6901  1EB1                     	;# 
  6902  1EB2                     	;# 
  6903  1EB8                     	;# 
  6904  1EB9                     	;# 
  6905  1EBA                     	;# 
  6906  1EBB                     	;# 
  6907  1EBC                     	;# 
  6908  1EBD                     	;# 
  6909  1EBE                     	;# 
  6910  1EC3                     	;# 
  6911  1EC5                     	;# 
  6912  1EC6                     	;# 
  6913  1EC7                     	;# 
  6914  1EC8                     	;# 
  6915  1EC9                     	;# 
  6916  1ECA                     	;# 
  6917  1ECB                     	;# 
  6918  1ECB                     	;# 
  6919  1ECB                     	;# 
  6920  1ECC                     	;# 
  6921  1ECC                     	;# 
  6922  1ECC                     	;# 
  6923  1F10                     	;# 
  6924  1F11                     	;# 
  6925  1F12                     	;# 
  6926  1F14                     	;# 
  6927  1F15                     	;# 
  6928  1F1C                     	;# 
  6929  1F1D                     	;# 
  6930  1F1E                     	;# 
  6931  1F1F                     	;# 
  6932  1F20                     	;# 
  6933  1F21                     	;# 
  6934  1F22                     	;# 
  6935  1F23                     	;# 
  6936  1F24                     	;# 
  6937  1F25                     	;# 
  6938  1F26                     	;# 
  6939  1F27                     	;# 
  6940  1F38                     	;# 
  6941  1F39                     	;# 
  6942  1F3A                     	;# 
  6943  1F3B                     	;# 
  6944  1F3C                     	;# 
  6945  1F3D                     	;# 
  6946  1F3E                     	;# 
  6947  1F3F                     	;# 
  6948  1F43                     	;# 
  6949  1F44                     	;# 
  6950  1F45                     	;# 
  6951  1F46                     	;# 
  6952  1F47                     	;# 
  6953  1F48                     	;# 
  6954  1F49                     	;# 
  6955  1F4A                     	;# 
  6956  1F4E                     	;# 
  6957  1F4F                     	;# 
  6958  1F50                     	;# 
  6959  1F51                     	;# 
  6960  1F52                     	;# 
  6961  1F53                     	;# 
  6962  1F54                     	;# 
  6963  1F55                     	;# 
  6964  1FE4                     	;# 
  6965  1FE5                     	;# 
  6966  1FE6                     	;# 
  6967  1FE7                     	;# 
  6968  1FE8                     	;# 
  6969  1FE8                     	;# 
  6970  1FE9                     	;# 
  6971  1FEA                     	;# 
  6972  1FEB                     	;# 
  6973  1FED                     	;# 
  6974  1FEE                     	;# 
  6975  1FEF                     	;# 
  6976  0000                     	;# 
  6977  0001                     	;# 
  6978  0002                     	;# 
  6979  0003                     	;# 
  6980  0004                     	;# 
  6981  0005                     	;# 
  6982  0006                     	;# 
  6983  0007                     	;# 
  6984  0008                     	;# 
  6985  0009                     	;# 
  6986  000A                     	;# 
  6987  000B                     	;# 
  6988  000C                     	;# 
  6989  000D                     	;# 
  6990  000E                     	;# 
  6991  0012                     	;# 
  6992  0013                     	;# 
  6993  0014                     	;# 
  6994  0018                     	;# 
  6995  0019                     	;# 
  6996  001A                     	;# 
  6997  008C                     	;# 
  6998  008C                     	;# 
  6999  008D                     	;# 
  7000  008E                     	;# 
  7001  008E                     	;# 
  7002  008F                     	;# 
  7003  0090                     	;# 
  7004  0090                     	;# 
  7005  0091                     	;# 
  7006  0092                     	;# 
  7007  0092                     	;# 
  7008  0093                     	;# 
  7009  0094                     	;# 
  7010  0094                     	;# 
  7011  0095                     	;# 
  7012  0096                     	;# 
  7013  0096                     	;# 
  7014  0097                     	;# 
  7015  0098                     	;# 
  7016  0099                     	;# 
  7017  009A                     	;# 
  7018  009B                     	;# 
  7019  009B                     	;# 
  7020  009C                     	;# 
  7021  009D                     	;# 
  7022  009D                     	;# 
  7023  009E                     	;# 
  7024  009F                     	;# 
  7025  010C                     	;# 
  7026  010C                     	;# 
  7027  010D                     	;# 
  7028  010E                     	;# 
  7029  010F                     	;# 
  7030  010F                     	;# 
  7031  0110                     	;# 
  7032  0111                     	;# 
  7033  0112                     	;# 
  7034  0113                     	;# 
  7035  0114                     	;# 
  7036  0115                     	;# 
  7037  0116                     	;# 
  7038  0117                     	;# 
  7039  0118                     	;# 
  7040  0119                     	;# 
  7041  0119                     	;# 
  7042  0119                     	;# 
  7043  011A                     	;# 
  7044  011A                     	;# 
  7045  011A                     	;# 
  7046  011B                     	;# 
  7047  011B                     	;# 
  7048  011B                     	;# 
  7049  011B                     	;# 
  7050  011B                     	;# 
  7051  011C                     	;# 
  7052  011C                     	;# 
  7053  011C                     	;# 
  7054  011D                     	;# 
  7055  011D                     	;# 
  7056  011D                     	;# 
  7057  011E                     	;# 
  7058  011E                     	;# 
  7059  011E                     	;# 
  7060  011F                     	;# 
  7061  011F                     	;# 
  7062  011F                     	;# 
  7063  011F                     	;# 
  7064  011F                     	;# 
  7065  018C                     	;# 
  7066  018D                     	;# 
  7067  018E                     	;# 
  7068  018F                     	;# 
  7069  0190                     	;# 
  7070  0191                     	;# 
  7071  0192                     	;# 
  7072  0196                     	;# 
  7073  0197                     	;# 
  7074  0198                     	;# 
  7075  0199                     	;# 
  7076  019A                     	;# 
  7077  019B                     	;# 
  7078  019C                     	;# 
  7079  020C                     	;# 
  7080  020D                     	;# 
  7081  020E                     	;# 
  7082  020E                     	;# 
  7083  020F                     	;# 
  7084  020F                     	;# 
  7085  0210                     	;# 
  7086  0210                     	;# 
  7087  0211                     	;# 
  7088  0211                     	;# 
  7089  0212                     	;# 
  7090  0213                     	;# 
  7091  0214                     	;# 
  7092  0214                     	;# 
  7093  0215                     	;# 
  7094  0215                     	;# 
  7095  0216                     	;# 
  7096  0216                     	;# 
  7097  0217                     	;# 
  7098  0217                     	;# 
  7099  0218                     	;# 
  7100  0219                     	;# 
  7101  021A                     	;# 
  7102  021A                     	;# 
  7103  021B                     	;# 
  7104  021B                     	;# 
  7105  021C                     	;# 
  7106  021C                     	;# 
  7107  021D                     	;# 
  7108  021D                     	;# 
  7109  021E                     	;# 
  7110  021F                     	;# 
  7111  028C                     	;# 
  7112  028C                     	;# 
  7113  028D                     	;# 
  7114  028D                     	;# 
  7115  028E                     	;# 
  7116  028F                     	;# 
  7117  0290                     	;# 
  7118  0291                     	;# 
  7119  0292                     	;# 
  7120  0292                     	;# 
  7121  0293                     	;# 
  7122  0293                     	;# 
  7123  0294                     	;# 
  7124  0295                     	;# 
  7125  0296                     	;# 
  7126  0297                     	;# 
  7127  0298                     	;# 
  7128  0298                     	;# 
  7129  0299                     	;# 
  7130  0299                     	;# 
  7131  029A                     	;# 
  7132  029B                     	;# 
  7133  029C                     	;# 
  7134  029D                     	;# 
  7135  029F                     	;# 
  7136  030C                     	;# 
  7137  030C                     	;# 
  7138  030D                     	;# 
  7139  030E                     	;# 
  7140  030F                     	;# 
  7141  0310                     	;# 
  7142  0310                     	;# 
  7143  0311                     	;# 
  7144  0312                     	;# 
  7145  0313                     	;# 
  7146  0314                     	;# 
  7147  0314                     	;# 
  7148  0315                     	;# 
  7149  0316                     	;# 
  7150  0317                     	;# 
  7151  0318                     	;# 
  7152  0318                     	;# 
  7153  0319                     	;# 
  7154  031A                     	;# 
  7155  031B                     	;# 
  7156  038C                     	;# 
  7157  038C                     	;# 
  7158  038D                     	;# 
  7159  038E                     	;# 
  7160  0390                     	;# 
  7161  0390                     	;# 
  7162  0391                     	;# 
  7163  0392                     	;# 
  7164  048C                     	;# 
  7165  048C                     	;# 
  7166  048D                     	;# 
  7167  048E                     	;# 
  7168  048F                     	;# 
  7169  048F                     	;# 
  7170  0490                     	;# 
  7171  0491                     	;# 
  7172  0492                     	;# 
  7173  0492                     	;# 
  7174  0493                     	;# 
  7175  0494                     	;# 
  7176  0495                     	;# 
  7177  0495                     	;# 
  7178  0496                     	;# 
  7179  0497                     	;# 
  7180  0498                     	;# 
  7181  0499                     	;# 
  7182  049A                     	;# 
  7183  049B                     	;# 
  7184  049C                     	;# 
  7185  049D                     	;# 
  7186  058C                     	;# 
  7187  058C                     	;# 
  7188  058D                     	;# 
  7189  058E                     	;# 
  7190  058F                     	;# 
  7191  058F                     	;# 
  7192  0590                     	;# 
  7193  0591                     	;# 
  7194  0592                     	;# 
  7195  0593                     	;# 
  7196  059C                     	;# 
  7197  059C                     	;# 
  7198  059D                     	;# 
  7199  059D                     	;# 
  7200  059E                     	;# 
  7201  059F                     	;# 
  7202  060C                     	;# 
  7203  060C                     	;# 
  7204  060D                     	;# 
  7205  060D                     	;# 
  7206  060E                     	;# 
  7207  060F                     	;# 
  7208  0610                     	;# 
  7209  0611                     	;# 
  7210  0612                     	;# 
  7211  0613                     	;# 
  7212  0614                     	;# 
  7213  0616                     	;# 
  7214  0616                     	;# 
  7215  0617                     	;# 
  7216  0617                     	;# 
  7217  0618                     	;# 
  7218  0619                     	;# 
  7219  061A                     	;# 
  7220  061B                     	;# 
  7221  061C                     	;# 
  7222  061D                     	;# 
  7223  061E                     	;# 
  7224  070C                     	;# 
  7225  070D                     	;# 
  7226  070E                     	;# 
  7227  070F                     	;# 
  7228  0710                     	;# 
  7229  0711                     	;# 
  7230  0712                     	;# 
  7231  0713                     	;# 
  7232  0714                     	;# 
  7233  0716                     	;# 
  7234  0717                     	;# 
  7235  0718                     	;# 
  7236  0719                     	;# 
  7237  071A                     	;# 
  7238  071B                     	;# 
  7239  071C                     	;# 
  7240  071D                     	;# 
  7241  071E                     	;# 
  7242  0796                     	;# 
  7243  0797                     	;# 
  7244  0798                     	;# 
  7245  0799                     	;# 
  7246  079A                     	;# 
  7247  079B                     	;# 
  7248  079C                     	;# 
  7249  079D                     	;# 
  7250  080C                     	;# 
  7251  080D                     	;# 
  7252  080E                     	;# 
  7253  080F                     	;# 
  7254  0810                     	;# 
  7255  0811                     	;# 
  7256  0812                     	;# 
  7257  0813                     	;# 
  7258  0814                     	;# 
  7259  081A                     	;# 
  7260  081A                     	;# 
  7261  081B                     	;# 
  7262  081C                     	;# 
  7263  081C                     	;# 
  7264  081D                     	;# 
  7265  081E                     	;# 
  7266  081F                     	;# 
  7267  088C                     	;# 
  7268  088D                     	;# 
  7269  088E                     	;# 
  7270  088F                     	;# 
  7271  0890                     	;# 
  7272  0891                     	;# 
  7273  0892                     	;# 
  7274  0893                     	;# 
  7275  0895                     	;# 
  7276  0896                     	;# 
  7277  0897                     	;# 
  7278  0898                     	;# 
  7279  0899                     	;# 
  7280  089A                     	;# 
  7281  089B                     	;# 
  7282  090C                     	;# 
  7283  090E                     	;# 
  7284  090F                     	;# 
  7285  091F                     	;# 
  7286  098F                     	;# 
  7287  098F                     	;# 
  7288  0990                     	;# 
  7289  0991                     	;# 
  7290  0992                     	;# 
  7291  0993                     	;# 
  7292  0994                     	;# 
  7293  0995                     	;# 
  7294  0996                     	;# 
  7295  0997                     	;# 
  7296  1E0F                     	;# 
  7297  1E10                     	;# 
  7298  1E11                     	;# 
  7299  1E12                     	;# 
  7300  1E13                     	;# 
  7301  1E14                     	;# 
  7302  1E15                     	;# 
  7303  1E16                     	;# 
  7304  1E17                     	;# 
  7305  1E18                     	;# 
  7306  1E19                     	;# 
  7307  1E1A                     	;# 
  7308  1E1B                     	;# 
  7309  1E1C                     	;# 
  7310  1E1D                     	;# 
  7311  1E1E                     	;# 
  7312  1E1F                     	;# 
  7313  1E20                     	;# 
  7314  1E21                     	;# 
  7315  1E22                     	;# 
  7316  1E23                     	;# 
  7317  1E24                     	;# 
  7318  1E25                     	;# 
  7319  1E26                     	;# 
  7320  1E27                     	;# 
  7321  1E28                     	;# 
  7322  1E29                     	;# 
  7323  1E2A                     	;# 
  7324  1E2B                     	;# 
  7325  1E2C                     	;# 
  7326  1E2D                     	;# 
  7327  1E2E                     	;# 
  7328  1E2F                     	;# 
  7329  1E30                     	;# 
  7330  1E31                     	;# 
  7331  1E32                     	;# 
  7332  1E33                     	;# 
  7333  1E34                     	;# 
  7334  1E35                     	;# 
  7335  1E36                     	;# 
  7336  1E37                     	;# 
  7337  1E8F                     	;# 
  7338  1E90                     	;# 
  7339  1E91                     	;# 
  7340  1E92                     	;# 
  7341  1E93                     	;# 
  7342  1E94                     	;# 
  7343  1E95                     	;# 
  7344  1E96                     	;# 
  7345  1E97                     	;# 
  7346  1E9C                     	;# 
  7347  1E9D                     	;# 
  7348  1E9E                     	;# 
  7349  1EA1                     	;# 
  7350  1EA2                     	;# 
  7351  1EA3                     	;# 
  7352  1EA4                     	;# 
  7353  1EA9                     	;# 
  7354  1EAA                     	;# 
  7355  1EB1                     	;# 
  7356  1EB2                     	;# 
  7357  1EB8                     	;# 
  7358  1EB9                     	;# 
  7359  1EBA                     	;# 
  7360  1EBB                     	;# 
  7361  1EBC                     	;# 
  7362  1EBD                     	;# 
  7363  1EBE                     	;# 
  7364  1EC3                     	;# 
  7365  1EC5                     	;# 
  7366  1EC6                     	;# 
  7367  1EC7                     	;# 
  7368  1EC8                     	;# 
  7369  1EC9                     	;# 
  7370  1ECA                     	;# 
  7371  1ECB                     	;# 
  7372  1ECB                     	;# 
  7373  1ECB                     	;# 
  7374  1ECC                     	;# 
  7375  1ECC                     	;# 
  7376  1ECC                     	;# 
  7377  1F10                     	;# 
  7378  1F11                     	;# 
  7379  1F12                     	;# 
  7380  1F14                     	;# 
  7381  1F15                     	;# 
  7382  1F1C                     	;# 
  7383  1F1D                     	;# 
  7384  1F1E                     	;# 
  7385  1F1F                     	;# 
  7386  1F20                     	;# 
  7387  1F21                     	;# 
  7388  1F22                     	;# 
  7389  1F23                     	;# 
  7390  1F24                     	;# 
  7391  1F25                     	;# 
  7392  1F26                     	;# 
  7393  1F27                     	;# 
  7394  1F38                     	;# 
  7395  1F39                     	;# 
  7396  1F3A                     	;# 
  7397  1F3B                     	;# 
  7398  1F3C                     	;# 
  7399  1F3D                     	;# 
  7400  1F3E                     	;# 
  7401  1F3F                     	;# 
  7402  1F43                     	;# 
  7403  1F44                     	;# 
  7404  1F45                     	;# 
  7405  1F46                     	;# 
  7406  1F47                     	;# 
  7407  1F48                     	;# 
  7408  1F49                     	;# 
  7409  1F4A                     	;# 
  7410  1F4E                     	;# 
  7411  1F4F                     	;# 
  7412  1F50                     	;# 
  7413  1F51                     	;# 
  7414  1F52                     	;# 
  7415  1F53                     	;# 
  7416  1F54                     	;# 
  7417  1F55                     	;# 
  7418  1FE4                     	;# 
  7419  1FE5                     	;# 
  7420  1FE6                     	;# 
  7421  1FE7                     	;# 
  7422  1FE8                     	;# 
  7423  1FE8                     	;# 
  7424  1FE9                     	;# 
  7425  1FEA                     	;# 
  7426  1FEB                     	;# 
  7427  1FED                     	;# 
  7428  1FEE                     	;# 
  7429  1FEF                     	;# 
  7430  0000                     	;# 
  7431  0001                     	;# 
  7432  0002                     	;# 
  7433  0003                     	;# 
  7434  0004                     	;# 
  7435  0005                     	;# 
  7436  0006                     	;# 
  7437  0007                     	;# 
  7438  0008                     	;# 
  7439  0009                     	;# 
  7440  000A                     	;# 
  7441  000B                     	;# 
  7442  000C                     	;# 
  7443  000D                     	;# 
  7444  000E                     	;# 
  7445  0012                     	;# 
  7446  0013                     	;# 
  7447  0014                     	;# 
  7448  0018                     	;# 
  7449  0019                     	;# 
  7450  001A                     	;# 
  7451  008C                     	;# 
  7452  008C                     	;# 
  7453  008D                     	;# 
  7454  008E                     	;# 
  7455  008E                     	;# 
  7456  008F                     	;# 
  7457  0090                     	;# 
  7458  0090                     	;# 
  7459  0091                     	;# 
  7460  0092                     	;# 
  7461  0092                     	;# 
  7462  0093                     	;# 
  7463  0094                     	;# 
  7464  0094                     	;# 
  7465  0095                     	;# 
  7466  0096                     	;# 
  7467  0096                     	;# 
  7468  0097                     	;# 
  7469  0098                     	;# 
  7470  0099                     	;# 
  7471  009A                     	;# 
  7472  009B                     	;# 
  7473  009B                     	;# 
  7474  009C                     	;# 
  7475  009D                     	;# 
  7476  009D                     	;# 
  7477  009E                     	;# 
  7478  009F                     	;# 
  7479  010C                     	;# 
  7480  010C                     	;# 
  7481  010D                     	;# 
  7482  010E                     	;# 
  7483  010F                     	;# 
  7484  010F                     	;# 
  7485  0110                     	;# 
  7486  0111                     	;# 
  7487  0112                     	;# 
  7488  0113                     	;# 
  7489  0114                     	;# 
  7490  0115                     	;# 
  7491  0116                     	;# 
  7492  0117                     	;# 
  7493  0118                     	;# 
  7494  0119                     	;# 
  7495  0119                     	;# 
  7496  0119                     	;# 
  7497  011A                     	;# 
  7498  011A                     	;# 
  7499  011A                     	;# 
  7500  011B                     	;# 
  7501  011B                     	;# 
  7502  011B                     	;# 
  7503  011B                     	;# 
  7504  011B                     	;# 
  7505  011C                     	;# 
  7506  011C                     	;# 
  7507  011C                     	;# 
  7508  011D                     	;# 
  7509  011D                     	;# 
  7510  011D                     	;# 
  7511  011E                     	;# 
  7512  011E                     	;# 
  7513  011E                     	;# 
  7514  011F                     	;# 
  7515  011F                     	;# 
  7516  011F                     	;# 
  7517  011F                     	;# 
  7518  011F                     	;# 
  7519  018C                     	;# 
  7520  018D                     	;# 
  7521  018E                     	;# 
  7522  018F                     	;# 
  7523  0190                     	;# 
  7524  0191                     	;# 
  7525  0192                     	;# 
  7526  0196                     	;# 
  7527  0197                     	;# 
  7528  0198                     	;# 
  7529  0199                     	;# 
  7530  019A                     	;# 
  7531  019B                     	;# 
  7532  019C                     	;# 
  7533  020C                     	;# 
  7534  020D                     	;# 
  7535  020E                     	;# 
  7536  020E                     	;# 
  7537  020F                     	;# 
  7538  020F                     	;# 
  7539  0210                     	;# 
  7540  0210                     	;# 
  7541  0211                     	;# 
  7542  0211                     	;# 
  7543  0212                     	;# 
  7544  0213                     	;# 
  7545  0214                     	;# 
  7546  0214                     	;# 
  7547  0215                     	;# 
  7548  0215                     	;# 
  7549  0216                     	;# 
  7550  0216                     	;# 
  7551  0217                     	;# 
  7552  0217                     	;# 
  7553  0218                     	;# 
  7554  0219                     	;# 
  7555  021A                     	;# 
  7556  021A                     	;# 
  7557  021B                     	;# 
  7558  021B                     	;# 
  7559  021C                     	;# 
  7560  021C                     	;# 
  7561  021D                     	;# 
  7562  021D                     	;# 
  7563  021E                     	;# 
  7564  021F                     	;# 
  7565  028C                     	;# 
  7566  028C                     	;# 
  7567  028D                     	;# 
  7568  028D                     	;# 
  7569  028E                     	;# 
  7570  028F                     	;# 
  7571  0290                     	;# 
  7572  0291                     	;# 
  7573  0292                     	;# 
  7574  0292                     	;# 
  7575  0293                     	;# 
  7576  0293                     	;# 
  7577  0294                     	;# 
  7578  0295                     	;# 
  7579  0296                     	;# 
  7580  0297                     	;# 
  7581  0298                     	;# 
  7582  0298                     	;# 
  7583  0299                     	;# 
  7584  0299                     	;# 
  7585  029A                     	;# 
  7586  029B                     	;# 
  7587  029C                     	;# 
  7588  029D                     	;# 
  7589  029F                     	;# 
  7590  030C                     	;# 
  7591  030C                     	;# 
  7592  030D                     	;# 
  7593  030E                     	;# 
  7594  030F                     	;# 
  7595  0310                     	;# 
  7596  0310                     	;# 
  7597  0311                     	;# 
  7598  0312                     	;# 
  7599  0313                     	;# 
  7600  0314                     	;# 
  7601  0314                     	;# 
  7602  0315                     	;# 
  7603  0316                     	;# 
  7604  0317                     	;# 
  7605  0318                     	;# 
  7606  0318                     	;# 
  7607  0319                     	;# 
  7608  031A                     	;# 
  7609  031B                     	;# 
  7610  038C                     	;# 
  7611  038C                     	;# 
  7612  038D                     	;# 
  7613  038E                     	;# 
  7614  0390                     	;# 
  7615  0390                     	;# 
  7616  0391                     	;# 
  7617  0392                     	;# 
  7618  048C                     	;# 
  7619  048C                     	;# 
  7620  048D                     	;# 
  7621  048E                     	;# 
  7622  048F                     	;# 
  7623  048F                     	;# 
  7624  0490                     	;# 
  7625  0491                     	;# 
  7626  0492                     	;# 
  7627  0492                     	;# 
  7628  0493                     	;# 
  7629  0494                     	;# 
  7630  0495                     	;# 
  7631  0495                     	;# 
  7632  0496                     	;# 
  7633  0497                     	;# 
  7634  0498                     	;# 
  7635  0499                     	;# 
  7636  049A                     	;# 
  7637  049B                     	;# 
  7638  049C                     	;# 
  7639  049D                     	;# 
  7640  058C                     	;# 
  7641  058C                     	;# 
  7642  058D                     	;# 
  7643  058E                     	;# 
  7644  058F                     	;# 
  7645  058F                     	;# 
  7646  0590                     	;# 
  7647  0591                     	;# 
  7648  0592                     	;# 
  7649  0593                     	;# 
  7650  059C                     	;# 
  7651  059C                     	;# 
  7652  059D                     	;# 
  7653  059D                     	;# 
  7654  059E                     	;# 
  7655  059F                     	;# 
  7656  060C                     	;# 
  7657  060C                     	;# 
  7658  060D                     	;# 
  7659  060D                     	;# 
  7660  060E                     	;# 
  7661  060F                     	;# 
  7662  0610                     	;# 
  7663  0611                     	;# 
  7664  0612                     	;# 
  7665  0613                     	;# 
  7666  0614                     	;# 
  7667  0616                     	;# 
  7668  0616                     	;# 
  7669  0617                     	;# 
  7670  0617                     	;# 
  7671  0618                     	;# 
  7672  0619                     	;# 
  7673  061A                     	;# 
  7674  061B                     	;# 
  7675  061C                     	;# 
  7676  061D                     	;# 
  7677  061E                     	;# 
  7678  070C                     	;# 
  7679  070D                     	;# 
  7680  070E                     	;# 
  7681  070F                     	;# 
  7682  0710                     	;# 
  7683  0711                     	;# 
  7684  0712                     	;# 
  7685  0713                     	;# 
  7686  0714                     	;# 
  7687  0716                     	;# 
  7688  0717                     	;# 
  7689  0718                     	;# 
  7690  0719                     	;# 
  7691  071A                     	;# 
  7692  071B                     	;# 
  7693  071C                     	;# 
  7694  071D                     	;# 
  7695  071E                     	;# 
  7696  0796                     	;# 
  7697  0797                     	;# 
  7698  0798                     	;# 
  7699  0799                     	;# 
  7700  079A                     	;# 
  7701  079B                     	;# 
  7702  079C                     	;# 
  7703  079D                     	;# 
  7704  080C                     	;# 
  7705  080D                     	;# 
  7706  080E                     	;# 
  7707  080F                     	;# 
  7708  0810                     	;# 
  7709  0811                     	;# 
  7710  0812                     	;# 
  7711  0813                     	;# 
  7712  0814                     	;# 
  7713  081A                     	;# 
  7714  081A                     	;# 
  7715  081B                     	;# 
  7716  081C                     	;# 
  7717  081C                     	;# 
  7718  081D                     	;# 
  7719  081E                     	;# 
  7720  081F                     	;# 
  7721  088C                     	;# 
  7722  088D                     	;# 
  7723  088E                     	;# 
  7724  088F                     	;# 
  7725  0890                     	;# 
  7726  0891                     	;# 
  7727  0892                     	;# 
  7728  0893                     	;# 
  7729  0895                     	;# 
  7730  0896                     	;# 
  7731  0897                     	;# 
  7732  0898                     	;# 
  7733  0899                     	;# 
  7734  089A                     	;# 
  7735  089B                     	;# 
  7736  090C                     	;# 
  7737  090E                     	;# 
  7738  090F                     	;# 
  7739  091F                     	;# 
  7740  098F                     	;# 
  7741  098F                     	;# 
  7742  0990                     	;# 
  7743  0991                     	;# 
  7744  0992                     	;# 
  7745  0993                     	;# 
  7746  0994                     	;# 
  7747  0995                     	;# 
  7748  0996                     	;# 
  7749  0997                     	;# 
  7750  1E0F                     	;# 
  7751  1E10                     	;# 
  7752  1E11                     	;# 
  7753  1E12                     	;# 
  7754  1E13                     	;# 
  7755  1E14                     	;# 
  7756  1E15                     	;# 
  7757  1E16                     	;# 
  7758  1E17                     	;# 
  7759  1E18                     	;# 
  7760  1E19                     	;# 
  7761  1E1A                     	;# 
  7762  1E1B                     	;# 
  7763  1E1C                     	;# 
  7764  1E1D                     	;# 
  7765  1E1E                     	;# 
  7766  1E1F                     	;# 
  7767  1E20                     	;# 
  7768  1E21                     	;# 
  7769  1E22                     	;# 
  7770  1E23                     	;# 
  7771  1E24                     	;# 
  7772  1E25                     	;# 
  7773  1E26                     	;# 
  7774  1E27                     	;# 
  7775  1E28                     	;# 
  7776  1E29                     	;# 
  7777  1E2A                     	;# 
  7778  1E2B                     	;# 
  7779  1E2C                     	;# 
  7780  1E2D                     	;# 
  7781  1E2E                     	;# 
  7782  1E2F                     	;# 
  7783  1E30                     	;# 
  7784  1E31                     	;# 
  7785  1E32                     	;# 
  7786  1E33                     	;# 
  7787  1E34                     	;# 
  7788  1E35                     	;# 
  7789  1E36                     	;# 
  7790  1E37                     	;# 
  7791  1E8F                     	;# 
  7792  1E90                     	;# 
  7793  1E91                     	;# 
  7794  1E92                     	;# 
  7795  1E93                     	;# 
  7796  1E94                     	;# 
  7797  1E95                     	;# 
  7798  1E96                     	;# 
  7799  1E97                     	;# 
  7800  1E9C                     	;# 
  7801  1E9D                     	;# 
  7802  1E9E                     	;# 
  7803  1EA1                     	;# 
  7804  1EA2                     	;# 
  7805  1EA3                     	;# 
  7806  1EA4                     	;# 
  7807  1EA9                     	;# 
  7808  1EAA                     	;# 
  7809  1EB1                     	;# 
  7810  1EB2                     	;# 
  7811  1EB8                     	;# 
  7812  1EB9                     	;# 
  7813  1EBA                     	;# 
  7814  1EBB                     	;# 
  7815  1EBC                     	;# 
  7816  1EBD                     	;# 
  7817  1EBE                     	;# 
  7818  1EC3                     	;# 
  7819  1EC5                     	;# 
  7820  1EC6                     	;# 
  7821  1EC7                     	;# 
  7822  1EC8                     	;# 
  7823  1EC9                     	;# 
  7824  1ECA                     	;# 
  7825  1ECB                     	;# 
  7826  1ECB                     	;# 
  7827  1ECB                     	;# 
  7828  1ECC                     	;# 
  7829  1ECC                     	;# 
  7830  1ECC                     	;# 
  7831  1F10                     	;# 
  7832  1F11                     	;# 
  7833  1F12                     	;# 
  7834  1F14                     	;# 
  7835  1F15                     	;# 
  7836  1F1C                     	;# 
  7837  1F1D                     	;# 
  7838  1F1E                     	;# 
  7839  1F1F                     	;# 
  7840  1F20                     	;# 
  7841  1F21                     	;# 
  7842  1F22                     	;# 
  7843  1F23                     	;# 
  7844  1F24                     	;# 
  7845  1F25                     	;# 
  7846  1F26                     	;# 
  7847  1F27                     	;# 
  7848  1F38                     	;# 
  7849  1F39                     	;# 
  7850  1F3A                     	;# 
  7851  1F3B                     	;# 
  7852  1F3C                     	;# 
  7853  1F3D                     	;# 
  7854  1F3E                     	;# 
  7855  1F3F                     	;# 
  7856  1F43                     	;# 
  7857  1F44                     	;# 
  7858  1F45                     	;# 
  7859  1F46                     	;# 
  7860  1F47                     	;# 
  7861  1F48                     	;# 
  7862  1F49                     	;# 
  7863  1F4A                     	;# 
  7864  1F4E                     	;# 
  7865  1F4F                     	;# 
  7866  1F50                     	;# 
  7867  1F51                     	;# 
  7868  1F52                     	;# 
  7869  1F53                     	;# 
  7870  1F54                     	;# 
  7871  1F55                     	;# 
  7872  1FE4                     	;# 
  7873  1FE5                     	;# 
  7874  1FE6                     	;# 
  7875  1FE7                     	;# 
  7876  1FE8                     	;# 
  7877  1FE8                     	;# 
  7878  1FE9                     	;# 
  7879  1FEA                     	;# 
  7880  1FEB                     	;# 
  7881  1FED                     	;# 
  7882  1FEE                     	;# 
  7883  1FEF                     	;# 
  7884  0000                     	;# 
  7885  0001                     	;# 
  7886  0002                     	;# 
  7887  0003                     	;# 
  7888  0004                     	;# 
  7889  0005                     	;# 
  7890  0006                     	;# 
  7891  0007                     	;# 
  7892  0008                     	;# 
  7893  0009                     	;# 
  7894  000A                     	;# 
  7895  000B                     	;# 
  7896  000C                     	;# 
  7897  000D                     	;# 
  7898  000E                     	;# 
  7899  0012                     	;# 
  7900  0013                     	;# 
  7901  0014                     	;# 
  7902  0018                     	;# 
  7903  0019                     	;# 
  7904  001A                     	;# 
  7905  008C                     	;# 
  7906  008C                     	;# 
  7907  008D                     	;# 
  7908  008E                     	;# 
  7909  008E                     	;# 
  7910  008F                     	;# 
  7911  0090                     	;# 
  7912  0090                     	;# 
  7913  0091                     	;# 
  7914  0092                     	;# 
  7915  0092                     	;# 
  7916  0093                     	;# 
  7917  0094                     	;# 
  7918  0094                     	;# 
  7919  0095                     	;# 
  7920  0096                     	;# 
  7921  0096                     	;# 
  7922  0097                     	;# 
  7923  0098                     	;# 
  7924  0099                     	;# 
  7925  009A                     	;# 
  7926  009B                     	;# 
  7927  009B                     	;# 
  7928  009C                     	;# 
  7929  009D                     	;# 
  7930  009D                     	;# 
  7931  009E                     	;# 
  7932  009F                     	;# 
  7933  010C                     	;# 
  7934  010C                     	;# 
  7935  010D                     	;# 
  7936  010E                     	;# 
  7937  010F                     	;# 
  7938  010F                     	;# 
  7939  0110                     	;# 
  7940  0111                     	;# 
  7941  0112                     	;# 
  7942  0113                     	;# 
  7943  0114                     	;# 
  7944  0115                     	;# 
  7945  0116                     	;# 
  7946  0117                     	;# 
  7947  0118                     	;# 
  7948  0119                     	;# 
  7949  0119                     	;# 
  7950  0119                     	;# 
  7951  011A                     	;# 
  7952  011A                     	;# 
  7953  011A                     	;# 
  7954  011B                     	;# 
  7955  011B                     	;# 
  7956  011B                     	;# 
  7957  011B                     	;# 
  7958  011B                     	;# 
  7959  011C                     	;# 
  7960  011C                     	;# 
  7961  011C                     	;# 
  7962  011D                     	;# 
  7963  011D                     	;# 
  7964  011D                     	;# 
  7965  011E                     	;# 
  7966  011E                     	;# 
  7967  011E                     	;# 
  7968  011F                     	;# 
  7969  011F                     	;# 
  7970  011F                     	;# 
  7971  011F                     	;# 
  7972  011F                     	;# 
  7973  018C                     	;# 
  7974  018D                     	;# 
  7975  018E                     	;# 
  7976  018F                     	;# 
  7977  0190                     	;# 
  7978  0191                     	;# 
  7979  0192                     	;# 
  7980  0196                     	;# 
  7981  0197                     	;# 
  7982  0198                     	;# 
  7983  0199                     	;# 
  7984  019A                     	;# 
  7985  019B                     	;# 
  7986  019C                     	;# 
  7987  020C                     	;# 
  7988  020D                     	;# 
  7989  020E                     	;# 
  7990  020E                     	;# 
  7991  020F                     	;# 
  7992  020F                     	;# 
  7993  0210                     	;# 
  7994  0210                     	;# 
  7995  0211                     	;# 
  7996  0211                     	;# 
  7997  0212                     	;# 
  7998  0213                     	;# 
  7999  0214                     	;# 
  8000  0214                     	;# 
  8001  0215                     	;# 
  8002  0215                     	;# 
  8003  0216                     	;# 
  8004  0216                     	;# 
  8005  0217                     	;# 
  8006  0217                     	;# 
  8007  0218                     	;# 
  8008  0219                     	;# 
  8009  021A                     	;# 
  8010  021A                     	;# 
  8011  021B                     	;# 
  8012  021B                     	;# 
  8013  021C                     	;# 
  8014  021C                     	;# 
  8015  021D                     	;# 
  8016  021D                     	;# 
  8017  021E                     	;# 
  8018  021F                     	;# 
  8019  028C                     	;# 
  8020  028C                     	;# 
  8021  028D                     	;# 
  8022  028D                     	;# 
  8023  028E                     	;# 
  8024  028F                     	;# 
  8025  0290                     	;# 
  8026  0291                     	;# 
  8027  0292                     	;# 
  8028  0292                     	;# 
  8029  0293                     	;# 
  8030  0293                     	;# 
  8031  0294                     	;# 
  8032  0295                     	;# 
  8033  0296                     	;# 
  8034  0297                     	;# 
  8035  0298                     	;# 
  8036  0298                     	;# 
  8037  0299                     	;# 
  8038  0299                     	;# 
  8039  029A                     	;# 
  8040  029B                     	;# 
  8041  029C                     	;# 
  8042  029D                     	;# 
  8043  029F                     	;# 
  8044  030C                     	;# 
  8045  030C                     	;# 
  8046  030D                     	;# 
  8047  030E                     	;# 
  8048  030F                     	;# 
  8049  0310                     	;# 
  8050  0310                     	;# 
  8051  0311                     	;# 
  8052  0312                     	;# 
  8053  0313                     	;# 
  8054  0314                     	;# 
  8055  0314                     	;# 
  8056  0315                     	;# 
  8057  0316                     	;# 
  8058  0317                     	;# 
  8059  0318                     	;# 
  8060  0318                     	;# 
  8061  0319                     	;# 
  8062  031A                     	;# 
  8063  031B                     	;# 
  8064  038C                     	;# 
  8065  038C                     	;# 
  8066  038D                     	;# 
  8067  038E                     	;# 
  8068  0390                     	;# 
  8069  0390                     	;# 
  8070  0391                     	;# 
  8071  0392                     	;# 
  8072  048C                     	;# 
  8073  048C                     	;# 
  8074  048D                     	;# 
  8075  048E                     	;# 
  8076  048F                     	;# 
  8077  048F                     	;# 
  8078  0490                     	;# 
  8079  0491                     	;# 
  8080  0492                     	;# 
  8081  0492                     	;# 
  8082  0493                     	;# 
  8083  0494                     	;# 
  8084  0495                     	;# 
  8085  0495                     	;# 
  8086  0496                     	;# 
  8087  0497                     	;# 
  8088  0498                     	;# 
  8089  0499                     	;# 
  8090  049A                     	;# 
  8091  049B                     	;# 
  8092  049C                     	;# 
  8093  049D                     	;# 
  8094  058C                     	;# 
  8095  058C                     	;# 
  8096  058D                     	;# 
  8097  058E                     	;# 
  8098  058F                     	;# 
  8099  058F                     	;# 
  8100  0590                     	;# 
  8101  0591                     	;# 
  8102  0592                     	;# 
  8103  0593                     	;# 
  8104  059C                     	;# 
  8105  059C                     	;# 
  8106  059D                     	;# 
  8107  059D                     	;# 
  8108  059E                     	;# 
  8109  059F                     	;# 
  8110  060C                     	;# 
  8111  060C                     	;# 
  8112  060D                     	;# 
  8113  060D                     	;# 
  8114  060E                     	;# 
  8115  060F                     	;# 
  8116  0610                     	;# 
  8117  0611                     	;# 
  8118  0612                     	;# 
  8119  0613                     	;# 
  8120  0614                     	;# 
  8121  0616                     	;# 
  8122  0616                     	;# 
  8123  0617                     	;# 
  8124  0617                     	;# 
  8125  0618                     	;# 
  8126  0619                     	;# 
  8127  061A                     	;# 
  8128  061B                     	;# 
  8129  061C                     	;# 
  8130  061D                     	;# 
  8131  061E                     	;# 
  8132  070C                     	;# 
  8133  070D                     	;# 
  8134  070E                     	;# 
  8135  070F                     	;# 
  8136  0710                     	;# 
  8137  0711                     	;# 
  8138  0712                     	;# 
  8139  0713                     	;# 
  8140  0714                     	;# 
  8141  0716                     	;# 
  8142  0717                     	;# 
  8143  0718                     	;# 
  8144  0719                     	;# 
  8145  071A                     	;# 
  8146  071B                     	;# 
  8147  071C                     	;# 
  8148  071D                     	;# 
  8149  071E                     	;# 
  8150  0796                     	;# 
  8151  0797                     	;# 
  8152  0798                     	;# 
  8153  0799                     	;# 
  8154  079A                     	;# 
  8155  079B                     	;# 
  8156  079C                     	;# 
  8157  079D                     	;# 
  8158  080C                     	;# 
  8159  080D                     	;# 
  8160  080E                     	;# 
  8161  080F                     	;# 
  8162  0810                     	;# 
  8163  0811                     	;# 
  8164  0812                     	;# 
  8165  0813                     	;# 
  8166  0814                     	;# 
  8167  081A                     	;# 
  8168  081A                     	;# 
  8169  081B                     	;# 
  8170  081C                     	;# 
  8171  081C                     	;# 
  8172  081D                     	;# 
  8173  081E                     	;# 
  8174  081F                     	;# 
  8175  088C                     	;# 
  8176  088D                     	;# 
  8177  088E                     	;# 
  8178  088F                     	;# 
  8179  0890                     	;# 
  8180  0891                     	;# 
  8181  0892                     	;# 
  8182  0893                     	;# 
  8183  0895                     	;# 
  8184  0896                     	;# 
  8185  0897                     	;# 
  8186  0898                     	;# 
  8187  0899                     	;# 
  8188  089A                     	;# 
  8189  089B                     	;# 
  8190  090C                     	;# 
  8191  090E                     	;# 
  8192  090F                     	;# 
  8193  091F                     	;# 
  8194  098F                     	;# 
  8195  098F                     	;# 
  8196  0990                     	;# 
  8197  0991                     	;# 
  8198  0992                     	;# 
  8199  0993                     	;# 
  8200  0994                     	;# 
  8201  0995                     	;# 
  8202  0996                     	;# 
  8203  0997                     	;# 
  8204  1E0F                     	;# 
  8205  1E10                     	;# 
  8206  1E11                     	;# 
  8207  1E12                     	;# 
  8208  1E13                     	;# 
  8209  1E14                     	;# 
  8210  1E15                     	;# 
  8211  1E16                     	;# 
  8212  1E17                     	;# 
  8213  1E18                     	;# 
  8214  1E19                     	;# 
  8215  1E1A                     	;# 
  8216  1E1B                     	;# 
  8217  1E1C                     	;# 
  8218  1E1D                     	;# 
  8219  1E1E                     	;# 
  8220  1E1F                     	;# 
  8221  1E20                     	;# 
  8222  1E21                     	;# 
  8223  1E22                     	;# 
  8224  1E23                     	;# 
  8225  1E24                     	;# 
  8226  1E25                     	;# 
  8227  1E26                     	;# 
  8228  1E27                     	;# 
  8229  1E28                     	;# 
  8230  1E29                     	;# 
  8231  1E2A                     	;# 
  8232  1E2B                     	;# 
  8233  1E2C                     	;# 
  8234  1E2D                     	;# 
  8235  1E2E                     	;# 
  8236  1E2F                     	;# 
  8237  1E30                     	;# 
  8238  1E31                     	;# 
  8239  1E32                     	;# 
  8240  1E33                     	;# 
  8241  1E34                     	;# 
  8242  1E35                     	;# 
  8243  1E36                     	;# 
  8244  1E37                     	;# 
  8245  1E8F                     	;# 
  8246  1E90                     	;# 
  8247  1E91                     	;# 
  8248  1E92                     	;# 
  8249  1E93                     	;# 
  8250  1E94                     	;# 
  8251  1E95                     	;# 
  8252  1E96                     	;# 
  8253  1E97                     	;# 
  8254  1E9C                     	;# 
  8255  1E9D                     	;# 
  8256  1E9E                     	;# 
  8257  1EA1                     	;# 
  8258  1EA2                     	;# 
  8259  1EA3                     	;# 
  8260  1EA4                     	;# 
  8261  1EA9                     	;# 
  8262  1EAA                     	;# 
  8263  1EB1                     	;# 
  8264  1EB2                     	;# 
  8265  1EB8                     	;# 
  8266  1EB9                     	;# 
  8267  1EBA                     	;# 
  8268  1EBB                     	;# 
  8269  1EBC                     	;# 
  8270  1EBD                     	;# 
  8271  1EBE                     	;# 
  8272  1EC3                     	;# 
  8273  1EC5                     	;# 
  8274  1EC6                     	;# 
  8275  1EC7                     	;# 
  8276  1EC8                     	;# 
  8277  1EC9                     	;# 
  8278  1ECA                     	;# 
  8279  1ECB                     	;# 
  8280  1ECB                     	;# 
  8281  1ECB                     	;# 
  8282  1ECC                     	;# 
  8283  1ECC                     	;# 
  8284  1ECC                     	;# 
  8285  1F10                     	;# 
  8286  1F11                     	;# 
  8287  1F12                     	;# 
  8288  1F14                     	;# 
  8289  1F15                     	;# 
  8290  1F1C                     	;# 
  8291  1F1D                     	;# 
  8292  1F1E                     	;# 
  8293  1F1F                     	;# 
  8294  1F20                     	;# 
  8295  1F21                     	;# 
  8296  1F22                     	;# 
  8297  1F23                     	;# 
  8298  1F24                     	;# 
  8299  1F25                     	;# 
  8300  1F26                     	;# 
  8301  1F27                     	;# 
  8302  1F38                     	;# 
  8303  1F39                     	;# 
  8304  1F3A                     	;# 
  8305  1F3B                     	;# 
  8306  1F3C                     	;# 
  8307  1F3D                     	;# 
  8308  1F3E                     	;# 
  8309  1F3F                     	;# 
  8310  1F43                     	;# 
  8311  1F44                     	;# 
  8312  1F45                     	;# 
  8313  1F46                     	;# 
  8314  1F47                     	;# 
  8315  1F48                     	;# 
  8316  1F49                     	;# 
  8317  1F4A                     	;# 
  8318  1F4E                     	;# 
  8319  1F4F                     	;# 
  8320  1F50                     	;# 
  8321  1F51                     	;# 
  8322  1F52                     	;# 
  8323  1F53                     	;# 
  8324  1F54                     	;# 
  8325  1F55                     	;# 
  8326  1FE4                     	;# 
  8327  1FE5                     	;# 
  8328  1FE6                     	;# 
  8329  1FE7                     	;# 
  8330  1FE8                     	;# 
  8331  1FE8                     	;# 
  8332  1FE9                     	;# 
  8333  1FEA                     	;# 
  8334  1FEB                     	;# 
  8335  1FED                     	;# 
  8336  1FEE                     	;# 
  8337  1FEF                     	;# 
  8338  0000                     	;# 
  8339  0001                     	;# 
  8340  0002                     	;# 
  8341  0003                     	;# 
  8342  0004                     	;# 
  8343  0005                     	;# 
  8344  0006                     	;# 
  8345  0007                     	;# 
  8346  0008                     	;# 
  8347  0009                     	;# 
  8348  000A                     	;# 
  8349  000B                     	;# 
  8350  000C                     	;# 
  8351  000D                     	;# 
  8352  000E                     	;# 
  8353  0012                     	;# 
  8354  0013                     	;# 
  8355  0014                     	;# 
  8356  0018                     	;# 
  8357  0019                     	;# 
  8358  001A                     	;# 
  8359  008C                     	;# 
  8360  008C                     	;# 
  8361  008D                     	;# 
  8362  008E                     	;# 
  8363  008E                     	;# 
  8364  008F                     	;# 
  8365  0090                     	;# 
  8366  0090                     	;# 
  8367  0091                     	;# 
  8368  0092                     	;# 
  8369  0092                     	;# 
  8370  0093                     	;# 
  8371  0094                     	;# 
  8372  0094                     	;# 
  8373  0095                     	;# 
  8374  0096                     	;# 
  8375  0096                     	;# 
  8376  0097                     	;# 
  8377  0098                     	;# 
  8378  0099                     	;# 
  8379  009A                     	;# 
  8380  009B                     	;# 
  8381  009B                     	;# 
  8382  009C                     	;# 
  8383  009D                     	;# 
  8384  009D                     	;# 
  8385  009E                     	;# 
  8386  009F                     	;# 
  8387  010C                     	;# 
  8388  010C                     	;# 
  8389  010D                     	;# 
  8390  010E                     	;# 
  8391  010F                     	;# 
  8392  010F                     	;# 
  8393  0110                     	;# 
  8394  0111                     	;# 
  8395  0112                     	;# 
  8396  0113                     	;# 
  8397  0114                     	;# 
  8398  0115                     	;# 
  8399  0116                     	;# 
  8400  0117                     	;# 
  8401  0118                     	;# 
  8402  0119                     	;# 
  8403  0119                     	;# 
  8404  0119                     	;# 
  8405  011A                     	;# 
  8406  011A                     	;# 
  8407  011A                     	;# 
  8408  011B                     	;# 
  8409  011B                     	;# 
  8410  011B                     	;# 
  8411  011B                     	;# 
  8412  011B                     	;# 
  8413  011C                     	;# 
  8414  011C                     	;# 
  8415  011C                     	;# 
  8416  011D                     	;# 
  8417  011D                     	;# 
  8418  011D                     	;# 
  8419  011E                     	;# 
  8420  011E                     	;# 
  8421  011E                     	;# 
  8422  011F                     	;# 
  8423  011F                     	;# 
  8424  011F                     	;# 
  8425  011F                     	;# 
  8426  011F                     	;# 
  8427  018C                     	;# 
  8428  018D                     	;# 
  8429  018E                     	;# 
  8430  018F                     	;# 
  8431  0190                     	;# 
  8432  0191                     	;# 
  8433  0192                     	;# 
  8434  0196                     	;# 
  8435  0197                     	;# 
  8436  0198                     	;# 
  8437  0199                     	;# 
  8438  019A                     	;# 
  8439  019B                     	;# 
  8440  019C                     	;# 
  8441  020C                     	;# 
  8442  020D                     	;# 
  8443  020E                     	;# 
  8444  020E                     	;# 
  8445  020F                     	;# 
  8446  020F                     	;# 
  8447  0210                     	;# 
  8448  0210                     	;# 
  8449  0211                     	;# 
  8450  0211                     	;# 
  8451  0212                     	;# 
  8452  0213                     	;# 
  8453  0214                     	;# 
  8454  0214                     	;# 
  8455  0215                     	;# 
  8456  0215                     	;# 
  8457  0216                     	;# 
  8458  0216                     	;# 
  8459  0217                     	;# 
  8460  0217                     	;# 
  8461  0218                     	;# 
  8462  0219                     	;# 
  8463  021A                     	;# 
  8464  021A                     	;# 
  8465  021B                     	;# 
  8466  021B                     	;# 
  8467  021C                     	;# 
  8468  021C                     	;# 
  8469  021D                     	;# 
  8470  021D                     	;# 
  8471  021E                     	;# 
  8472  021F                     	;# 
  8473  028C                     	;# 
  8474  028C                     	;# 
  8475  028D                     	;# 
  8476  028D                     	;# 
  8477  028E                     	;# 
  8478  028F                     	;# 
  8479  0290                     	;# 
  8480  0291                     	;# 
  8481  0292                     	;# 
  8482  0292                     	;# 
  8483  0293                     	;# 
  8484  0293                     	;# 
  8485  0294                     	;# 
  8486  0295                     	;# 
  8487  0296                     	;# 
  8488  0297                     	;# 
  8489  0298                     	;# 
  8490  0298                     	;# 
  8491  0299                     	;# 
  8492  0299                     	;# 
  8493  029A                     	;# 
  8494  029B                     	;# 
  8495  029C                     	;# 
  8496  029D                     	;# 
  8497  029F                     	;# 
  8498  030C                     	;# 
  8499  030C                     	;# 
  8500  030D                     	;# 
  8501  030E                     	;# 
  8502  030F                     	;# 
  8503  0310                     	;# 
  8504  0310                     	;# 
  8505  0311                     	;# 
  8506  0312                     	;# 
  8507  0313                     	;# 
  8508  0314                     	;# 
  8509  0314                     	;# 
  8510  0315                     	;# 
  8511  0316                     	;# 
  8512  0317                     	;# 
  8513  0318                     	;# 
  8514  0318                     	;# 
  8515  0319                     	;# 
  8516  031A                     	;# 
  8517  031B                     	;# 
  8518  038C                     	;# 
  8519  038C                     	;# 
  8520  038D                     	;# 
  8521  038E                     	;# 
  8522  0390                     	;# 
  8523  0390                     	;# 
  8524  0391                     	;# 
  8525  0392                     	;# 
  8526  048C                     	;# 
  8527  048C                     	;# 
  8528  048D                     	;# 
  8529  048E                     	;# 
  8530  048F                     	;# 
  8531  048F                     	;# 
  8532  0490                     	;# 
  8533  0491                     	;# 
  8534  0492                     	;# 
  8535  0492                     	;# 
  8536  0493                     	;# 
  8537  0494                     	;# 
  8538  0495                     	;# 
  8539  0495                     	;# 
  8540  0496                     	;# 
  8541  0497                     	;# 
  8542  0498                     	;# 
  8543  0499                     	;# 
  8544  049A                     	;# 
  8545  049B                     	;# 
  8546  049C                     	;# 
  8547  049D                     	;# 
  8548  058C                     	;# 
  8549  058C                     	;# 
  8550  058D                     	;# 
  8551  058E                     	;# 
  8552  058F                     	;# 
  8553  058F                     	;# 
  8554  0590                     	;# 
  8555  0591                     	;# 
  8556  0592                     	;# 
  8557  0593                     	;# 
  8558  059C                     	;# 
  8559  059C                     	;# 
  8560  059D                     	;# 
  8561  059D                     	;# 
  8562  059E                     	;# 
  8563  059F                     	;# 
  8564  060C                     	;# 
  8565  060C                     	;# 
  8566  060D                     	;# 
  8567  060D                     	;# 
  8568  060E                     	;# 
  8569  060F                     	;# 
  8570  0610                     	;# 
  8571  0611                     	;# 
  8572  0612                     	;# 
  8573  0613                     	;# 
  8574  0614                     	;# 
  8575  0616                     	;# 
  8576  0616                     	;# 
  8577  0617                     	;# 
  8578  0617                     	;# 
  8579  0618                     	;# 
  8580  0619                     	;# 
  8581  061A                     	;# 
  8582  061B                     	;# 
  8583  061C                     	;# 
  8584  061D                     	;# 
  8585  061E                     	;# 
  8586  070C                     	;# 
  8587  070D                     	;# 
  8588  070E                     	;# 
  8589  070F                     	;# 
  8590  0710                     	;# 
  8591  0711                     	;# 
  8592  0712                     	;# 
  8593  0713                     	;# 
  8594  0714                     	;# 
  8595  0716                     	;# 
  8596  0717                     	;# 
  8597  0718                     	;# 
  8598  0719                     	;# 
  8599  071A                     	;# 
  8600  071B                     	;# 
  8601  071C                     	;# 
  8602  071D                     	;# 
  8603  071E                     	;# 
  8604  0796                     	;# 
  8605  0797                     	;# 
  8606  0798                     	;# 
  8607  0799                     	;# 
  8608  079A                     	;# 
  8609  079B                     	;# 
  8610  079C                     	;# 
  8611  079D                     	;# 
  8612  080C                     	;# 
  8613  080D                     	;# 
  8614  080E                     	;# 
  8615  080F                     	;# 
  8616  0810                     	;# 
  8617  0811                     	;# 
  8618  0812                     	;# 
  8619  0813                     	;# 
  8620  0814                     	;# 
  8621  081A                     	;# 
  8622  081A                     	;# 
  8623  081B                     	;# 
  8624  081C                     	;# 
  8625  081C                     	;# 
  8626  081D                     	;# 
  8627  081E                     	;# 
  8628  081F                     	;# 
  8629  088C                     	;# 
  8630  088D                     	;# 
  8631  088E                     	;# 
  8632  088F                     	;# 
  8633  0890                     	;# 
  8634  0891                     	;# 
  8635  0892                     	;# 
  8636  0893                     	;# 
  8637  0895                     	;# 
  8638  0896                     	;# 
  8639  0897                     	;# 
  8640  0898                     	;# 
  8641  0899                     	;# 
  8642  089A                     	;# 
  8643  089B                     	;# 
  8644  090C                     	;# 
  8645  090E                     	;# 
  8646  090F                     	;# 
  8647  091F                     	;# 
  8648  098F                     	;# 
  8649  098F                     	;# 
  8650  0990                     	;# 
  8651  0991                     	;# 
  8652  0992                     	;# 
  8653  0993                     	;# 
  8654  0994                     	;# 
  8655  0995                     	;# 
  8656  0996                     	;# 
  8657  0997                     	;# 
  8658  1E0F                     	;# 
  8659  1E10                     	;# 
  8660  1E11                     	;# 
  8661  1E12                     	;# 
  8662  1E13                     	;# 
  8663  1E14                     	;# 
  8664  1E15                     	;# 
  8665  1E16                     	;# 
  8666  1E17                     	;# 
  8667  1E18                     	;# 
  8668  1E19                     	;# 
  8669  1E1A                     	;# 
  8670  1E1B                     	;# 
  8671  1E1C                     	;# 
  8672  1E1D                     	;# 
  8673  1E1E                     	;# 
  8674  1E1F                     	;# 
  8675  1E20                     	;# 
  8676  1E21                     	;# 
  8677  1E22                     	;# 
  8678  1E23                     	;# 
  8679  1E24                     	;# 
  8680  1E25                     	;# 
  8681  1E26                     	;# 
  8682  1E27                     	;# 
  8683  1E28                     	;# 
  8684  1E29                     	;# 
  8685  1E2A                     	;# 
  8686  1E2B                     	;# 
  8687  1E2C                     	;# 
  8688  1E2D                     	;# 
  8689  1E2E                     	;# 
  8690  1E2F                     	;# 
  8691  1E30                     	;# 
  8692  1E31                     	;# 
  8693  1E32                     	;# 
  8694  1E33                     	;# 
  8695  1E34                     	;# 
  8696  1E35                     	;# 
  8697  1E36                     	;# 
  8698  1E37                     	;# 
  8699  1E8F                     	;# 
  8700  1E90                     	;# 
  8701  1E91                     	;# 
  8702  1E92                     	;# 
  8703  1E93                     	;# 
  8704  1E94                     	;# 
  8705  1E95                     	;# 
  8706  1E96                     	;# 
  8707  1E97                     	;# 
  8708  1E9C                     	;# 
  8709  1E9D                     	;# 
  8710  1E9E                     	;# 
  8711  1EA1                     	;# 
  8712  1EA2                     	;# 
  8713  1EA3                     	;# 
  8714  1EA4                     	;# 
  8715  1EA9                     	;# 
  8716  1EAA                     	;# 
  8717  1EB1                     	;# 
  8718  1EB2                     	;# 
  8719  1EB8                     	;# 
  8720  1EB9                     	;# 
  8721  1EBA                     	;# 
  8722  1EBB                     	;# 
  8723  1EBC                     	;# 
  8724  1EBD                     	;# 
  8725  1EBE                     	;# 
  8726  1EC3                     	;# 
  8727  1EC5                     	;# 
  8728  1EC6                     	;# 
  8729  1EC7                     	;# 
  8730  1EC8                     	;# 
  8731  1EC9                     	;# 
  8732  1ECA                     	;# 
  8733  1ECB                     	;# 
  8734  1ECB                     	;# 
  8735  1ECB                     	;# 
  8736  1ECC                     	;# 
  8737  1ECC                     	;# 
  8738  1ECC                     	;# 
  8739  1F10                     	;# 
  8740  1F11                     	;# 
  8741  1F12                     	;# 
  8742  1F14                     	;# 
  8743  1F15                     	;# 
  8744  1F1C                     	;# 
  8745  1F1D                     	;# 
  8746  1F1E                     	;# 
  8747  1F1F                     	;# 
  8748  1F20                     	;# 
  8749  1F21                     	;# 
  8750  1F22                     	;# 
  8751  1F23                     	;# 
  8752  1F24                     	;# 
  8753  1F25                     	;# 
  8754  1F26                     	;# 
  8755  1F27                     	;# 
  8756  1F38                     	;# 
  8757  1F39                     	;# 
  8758  1F3A                     	;# 
  8759  1F3B                     	;# 
  8760  1F3C                     	;# 
  8761  1F3D                     	;# 
  8762  1F3E                     	;# 
  8763  1F3F                     	;# 
  8764  1F43                     	;# 
  8765  1F44                     	;# 
  8766  1F45                     	;# 
  8767  1F46                     	;# 
  8768  1F47                     	;# 
  8769  1F48                     	;# 
  8770  1F49                     	;# 
  8771  1F4A                     	;# 
  8772  1F4E                     	;# 
  8773  1F4F                     	;# 
  8774  1F50                     	;# 
  8775  1F51                     	;# 
  8776  1F52                     	;# 
  8777  1F53                     	;# 
  8778  1F54                     	;# 
  8779  1F55                     	;# 
  8780  1FE4                     	;# 
  8781  1FE5                     	;# 
  8782  1FE6                     	;# 
  8783  1FE7                     	;# 
  8784  1FE8                     	;# 
  8785  1FE8                     	;# 
  8786  1FE9                     	;# 
  8787  1FEA                     	;# 
  8788  1FEB                     	;# 
  8789  1FED                     	;# 
  8790  1FEE                     	;# 
  8791  1FEF                     	;# 
  8792  0000                     	;# 
  8793  0001                     	;# 
  8794  0002                     	;# 
  8795  0003                     	;# 
  8796  0004                     	;# 
  8797  0005                     	;# 
  8798  0006                     	;# 
  8799  0007                     	;# 
  8800  0008                     	;# 
  8801  0009                     	;# 
  8802  000A                     	;# 
  8803  000B                     	;# 
  8804  000C                     	;# 
  8805  000D                     	;# 
  8806  000E                     	;# 
  8807  0012                     	;# 
  8808  0013                     	;# 
  8809  0014                     	;# 
  8810  0018                     	;# 
  8811  0019                     	;# 
  8812  001A                     	;# 
  8813  008C                     	;# 
  8814  008C                     	;# 
  8815  008D                     	;# 
  8816  008E                     	;# 
  8817  008E                     	;# 
  8818  008F                     	;# 
  8819  0090                     	;# 
  8820  0090                     	;# 
  8821  0091                     	;# 
  8822  0092                     	;# 
  8823  0092                     	;# 
  8824  0093                     	;# 
  8825  0094                     	;# 
  8826  0094                     	;# 
  8827  0095                     	;# 
  8828  0096                     	;# 
  8829  0096                     	;# 
  8830  0097                     	;# 
  8831  0098                     	;# 
  8832  0099                     	;# 
  8833  009A                     	;# 
  8834  009B                     	;# 
  8835  009B                     	;# 
  8836  009C                     	;# 
  8837  009D                     	;# 
  8838  009D                     	;# 
  8839  009E                     	;# 
  8840  009F                     	;# 
  8841  010C                     	;# 
  8842  010C                     	;# 
  8843  010D                     	;# 
  8844  010E                     	;# 
  8845  010F                     	;# 
  8846  010F                     	;# 
  8847  0110                     	;# 
  8848  0111                     	;# 
  8849  0112                     	;# 
  8850  0113                     	;# 
  8851  0114                     	;# 
  8852  0115                     	;# 
  8853  0116                     	;# 
  8854  0117                     	;# 
  8855  0118                     	;# 
  8856  0119                     	;# 
  8857  0119                     	;# 
  8858  0119                     	;# 
  8859  011A                     	;# 
  8860  011A                     	;# 
  8861  011A                     	;# 
  8862  011B                     	;# 
  8863  011B                     	;# 
  8864  011B                     	;# 
  8865  011B                     	;# 
  8866  011B                     	;# 
  8867  011C                     	;# 
  8868  011C                     	;# 
  8869  011C                     	;# 
  8870  011D                     	;# 
  8871  011D                     	;# 
  8872  011D                     	;# 
  8873  011E                     	;# 
  8874  011E                     	;# 
  8875  011E                     	;# 
  8876  011F                     	;# 
  8877  011F                     	;# 
  8878  011F                     	;# 
  8879  011F                     	;# 
  8880  011F                     	;# 
  8881  018C                     	;# 
  8882  018D                     	;# 
  8883  018E                     	;# 
  8884  018F                     	;# 
  8885  0190                     	;# 
  8886  0191                     	;# 
  8887  0192                     	;# 
  8888  0196                     	;# 
  8889  0197                     	;# 
  8890  0198                     	;# 
  8891  0199                     	;# 
  8892  019A                     	;# 
  8893  019B                     	;# 
  8894  019C                     	;# 
  8895  020C                     	;# 
  8896  020D                     	;# 
  8897  020E                     	;# 
  8898  020E                     	;# 
  8899  020F                     	;# 
  8900  020F                     	;# 
  8901  0210                     	;# 
  8902  0210                     	;# 
  8903  0211                     	;# 
  8904  0211                     	;# 
  8905  0212                     	;# 
  8906  0213                     	;# 
  8907  0214                     	;# 
  8908  0214                     	;# 
  8909  0215                     	;# 
  8910  0215                     	;# 
  8911  0216                     	;# 
  8912  0216                     	;# 
  8913  0217                     	;# 
  8914  0217                     	;# 
  8915  0218                     	;# 
  8916  0219                     	;# 
  8917  021A                     	;# 
  8918  021A                     	;# 
  8919  021B                     	;# 
  8920  021B                     	;# 
  8921  021C                     	;# 
  8922  021C                     	;# 
  8923  021D                     	;# 
  8924  021D                     	;# 
  8925  021E                     	;# 
  8926  021F                     	;# 
  8927  028C                     	;# 
  8928  028C                     	;# 
  8929  028D                     	;# 
  8930  028D                     	;# 
  8931  028E                     	;# 
  8932  028F                     	;# 
  8933  0290                     	;# 
  8934  0291                     	;# 
  8935  0292                     	;# 
  8936  0292                     	;# 
  8937  0293                     	;# 
  8938  0293                     	;# 
  8939  0294                     	;# 
  8940  0295                     	;# 
  8941  0296                     	;# 
  8942  0297                     	;# 
  8943  0298                     	;# 
  8944  0298                     	;# 
  8945  0299                     	;# 
  8946  0299                     	;# 
  8947  029A                     	;# 
  8948  029B                     	;# 
  8949  029C                     	;# 
  8950  029D                     	;# 
  8951  029F                     	;# 
  8952  030C                     	;# 
  8953  030C                     	;# 
  8954  030D                     	;# 
  8955  030E                     	;# 
  8956  030F                     	;# 
  8957  0310                     	;# 
  8958  0310                     	;# 
  8959  0311                     	;# 
  8960  0312                     	;# 
  8961  0313                     	;# 
  8962  0314                     	;# 
  8963  0314                     	;# 
  8964  0315                     	;# 
  8965  0316                     	;# 
  8966  0317                     	;# 
  8967  0318                     	;# 
  8968  0318                     	;# 
  8969  0319                     	;# 
  8970  031A                     	;# 
  8971  031B                     	;# 
  8972  038C                     	;# 
  8973  038C                     	;# 
  8974  038D                     	;# 
  8975  038E                     	;# 
  8976  0390                     	;# 
  8977  0390                     	;# 
  8978  0391                     	;# 
  8979  0392                     	;# 
  8980  048C                     	;# 
  8981  048C                     	;# 
  8982  048D                     	;# 
  8983  048E                     	;# 
  8984  048F                     	;# 
  8985  048F                     	;# 
  8986  0490                     	;# 
  8987  0491                     	;# 
  8988  0492                     	;# 
  8989  0492                     	;# 
  8990  0493                     	;# 
  8991  0494                     	;# 
  8992  0495                     	;# 
  8993  0495                     	;# 
  8994  0496                     	;# 
  8995  0497                     	;# 
  8996  0498                     	;# 
  8997  0499                     	;# 
  8998  049A                     	;# 
  8999  049B                     	;# 
  9000  049C                     	;# 
  9001  049D                     	;# 
  9002  058C                     	;# 
  9003  058C                     	;# 
  9004  058D                     	;# 
  9005  058E                     	;# 
  9006  058F                     	;# 
  9007  058F                     	;# 
  9008  0590                     	;# 
  9009  0591                     	;# 
  9010  0592                     	;# 
  9011  0593                     	;# 
  9012  059C                     	;# 
  9013  059C                     	;# 
  9014  059D                     	;# 
  9015  059D                     	;# 
  9016  059E                     	;# 
  9017  059F                     	;# 
  9018  060C                     	;# 
  9019  060C                     	;# 
  9020  060D                     	;# 
  9021  060D                     	;# 
  9022  060E                     	;# 
  9023  060F                     	;# 
  9024  0610                     	;# 
  9025  0611                     	;# 
  9026  0612                     	;# 
  9027  0613                     	;# 
  9028  0614                     	;# 
  9029  0616                     	;# 
  9030  0616                     	;# 
  9031  0617                     	;# 
  9032  0617                     	;# 
  9033  0618                     	;# 
  9034  0619                     	;# 
  9035  061A                     	;# 
  9036  061B                     	;# 
  9037  061C                     	;# 
  9038  061D                     	;# 
  9039  061E                     	;# 
  9040  070C                     	;# 
  9041  070D                     	;# 
  9042  070E                     	;# 
  9043  070F                     	;# 
  9044  0710                     	;# 
  9045  0711                     	;# 
  9046  0712                     	;# 
  9047  0713                     	;# 
  9048  0714                     	;# 
  9049  0716                     	;# 
  9050  0717                     	;# 
  9051  0718                     	;# 
  9052  0719                     	;# 
  9053  071A                     	;# 
  9054  071B                     	;# 
  9055  071C                     	;# 
  9056  071D                     	;# 
  9057  071E                     	;# 
  9058  0796                     	;# 
  9059  0797                     	;# 
  9060  0798                     	;# 
  9061  0799                     	;# 
  9062  079A                     	;# 
  9063  079B                     	;# 
  9064  079C                     	;# 
  9065  079D                     	;# 
  9066  080C                     	;# 
  9067  080D                     	;# 
  9068  080E                     	;# 
  9069  080F                     	;# 
  9070  0810                     	;# 
  9071  0811                     	;# 
  9072  0812                     	;# 
  9073  0813                     	;# 
  9074  0814                     	;# 
  9075  081A                     	;# 
  9076  081A                     	;# 
  9077  081B                     	;# 
  9078  081C                     	;# 
  9079  081C                     	;# 
  9080  081D                     	;# 
  9081  081E                     	;# 
  9082  081F                     	;# 
  9083  088C                     	;# 
  9084  088D                     	;# 
  9085  088E                     	;# 
  9086  088F                     	;# 
  9087  0890                     	;# 
  9088  0891                     	;# 
  9089  0892                     	;# 
  9090  0893                     	;# 
  9091  0895                     	;# 
  9092  0896                     	;# 
  9093  0897                     	;# 
  9094  0898                     	;# 
  9095  0899                     	;# 
  9096  089A                     	;# 
  9097  089B                     	;# 
  9098  090C                     	;# 
  9099  090E                     	;# 
  9100  090F                     	;# 
  9101  091F                     	;# 
  9102  098F                     	;# 
  9103  098F                     	;# 
  9104  0990                     	;# 
  9105  0991                     	;# 
  9106  0992                     	;# 
  9107  0993                     	;# 
  9108  0994                     	;# 
  9109  0995                     	;# 
  9110  0996                     	;# 
  9111  0997                     	;# 
  9112  1E0F                     	;# 
  9113  1E10                     	;# 
  9114  1E11                     	;# 
  9115  1E12                     	;# 
  9116  1E13                     	;# 
  9117  1E14                     	;# 
  9118  1E15                     	;# 
  9119  1E16                     	;# 
  9120  1E17                     	;# 
  9121  1E18                     	;# 
  9122  1E19                     	;# 
  9123  1E1A                     	;# 
  9124  1E1B                     	;# 
  9125  1E1C                     	;# 
  9126  1E1D                     	;# 
  9127  1E1E                     	;# 
  9128  1E1F                     	;# 
  9129  1E20                     	;# 
  9130  1E21                     	;# 
  9131  1E22                     	;# 
  9132  1E23                     	;# 
  9133  1E24                     	;# 
  9134  1E25                     	;# 
  9135  1E26                     	;# 
  9136  1E27                     	;# 
  9137  1E28                     	;# 
  9138  1E29                     	;# 
  9139  1E2A                     	;# 
  9140  1E2B                     	;# 
  9141  1E2C                     	;# 
  9142  1E2D                     	;# 
  9143  1E2E                     	;# 
  9144  1E2F                     	;# 
  9145  1E30                     	;# 
  9146  1E31                     	;# 
  9147  1E32                     	;# 
  9148  1E33                     	;# 
  9149  1E34                     	;# 
  9150  1E35                     	;# 
  9151  1E36                     	;# 
  9152  1E37                     	;# 
  9153  1E8F                     	;# 
  9154  1E90                     	;# 
  9155  1E91                     	;# 
  9156  1E92                     	;# 
  9157  1E93                     	;# 
  9158  1E94                     	;# 
  9159  1E95                     	;# 
  9160  1E96                     	;# 
  9161  1E97                     	;# 
  9162  1E9C                     	;# 
  9163  1E9D                     	;# 
  9164  1E9E                     	;# 
  9165  1EA1                     	;# 
  9166  1EA2                     	;# 
  9167  1EA3                     	;# 
  9168  1EA4                     	;# 
  9169  1EA9                     	;# 
  9170  1EAA                     	;# 
  9171  1EB1                     	;# 
  9172  1EB2                     	;# 
  9173  1EB8                     	;# 
  9174  1EB9                     	;# 
  9175  1EBA                     	;# 
  9176  1EBB                     	;# 
  9177  1EBC                     	;# 
  9178  1EBD                     	;# 
  9179  1EBE                     	;# 
  9180  1EC3                     	;# 
  9181  1EC5                     	;# 
  9182  1EC6                     	;# 
  9183  1EC7                     	;# 
  9184  1EC8                     	;# 
  9185  1EC9                     	;# 
  9186  1ECA                     	;# 
  9187  1ECB                     	;# 
  9188  1ECB                     	;# 
  9189  1ECB                     	;# 
  9190  1ECC                     	;# 
  9191  1ECC                     	;# 
  9192  1ECC                     	;# 
  9193  1F10                     	;# 
  9194  1F11                     	;# 
  9195  1F12                     	;# 
  9196  1F14                     	;# 
  9197  1F15                     	;# 
  9198  1F1C                     	;# 
  9199  1F1D                     	;# 
  9200  1F1E                     	;# 
  9201  1F1F                     	;# 
  9202  1F20                     	;# 
  9203  1F21                     	;# 
  9204  1F22                     	;# 
  9205  1F23                     	;# 
  9206  1F24                     	;# 
  9207  1F25                     	;# 
  9208  1F26                     	;# 
  9209  1F27                     	;# 
  9210  1F38                     	;# 
  9211  1F39                     	;# 
  9212  1F3A                     	;# 
  9213  1F3B                     	;# 
  9214  1F3C                     	;# 
  9215  1F3D                     	;# 
  9216  1F3E                     	;# 
  9217  1F3F                     	;# 
  9218  1F43                     	;# 
  9219  1F44                     	;# 
  9220  1F45                     	;# 
  9221  1F46                     	;# 
  9222  1F47                     	;# 
  9223  1F48                     	;# 
  9224  1F49                     	;# 
  9225  1F4A                     	;# 
  9226  1F4E                     	;# 
  9227  1F4F                     	;# 
  9228  1F50                     	;# 
  9229  1F51                     	;# 
  9230  1F52                     	;# 
  9231  1F53                     	;# 
  9232  1F54                     	;# 
  9233  1F55                     	;# 
  9234  1FE4                     	;# 
  9235  1FE5                     	;# 
  9236  1FE6                     	;# 
  9237  1FE7                     	;# 
  9238  1FE8                     	;# 
  9239  1FE8                     	;# 
  9240  1FE9                     	;# 
  9241  1FEA                     	;# 
  9242  1FEB                     	;# 
  9243  1FED                     	;# 
  9244  1FEE                     	;# 
  9245  1FEF                     	;# 
  9246  0000                     	;# 
  9247  0001                     	;# 
  9248  0002                     	;# 
  9249  0003                     	;# 
  9250  0004                     	;# 
  9251  0005                     	;# 
  9252  0006                     	;# 
  9253  0007                     	;# 
  9254  0008                     	;# 
  9255  0009                     	;# 
  9256  000A                     	;# 
  9257  000B                     	;# 
  9258  000C                     	;# 
  9259  000D                     	;# 
  9260  000E                     	;# 
  9261  0012                     	;# 
  9262  0013                     	;# 
  9263  0014                     	;# 
  9264  0018                     	;# 
  9265  0019                     	;# 
  9266  001A                     	;# 
  9267  008C                     	;# 
  9268  008C                     	;# 
  9269  008D                     	;# 
  9270  008E                     	;# 
  9271  008E                     	;# 
  9272  008F                     	;# 
  9273  0090                     	;# 
  9274  0090                     	;# 
  9275  0091                     	;# 
  9276  0092                     	;# 
  9277  0092                     	;# 
  9278  0093                     	;# 
  9279  0094                     	;# 
  9280  0094                     	;# 
  9281  0095                     	;# 
  9282  0096                     	;# 
  9283  0096                     	;# 
  9284  0097                     	;# 
  9285  0098                     	;# 
  9286  0099                     	;# 
  9287  009A                     	;# 
  9288  009B                     	;# 
  9289  009B                     	;# 
  9290  009C                     	;# 
  9291  009D                     	;# 
  9292  009D                     	;# 
  9293  009E                     	;# 
  9294  009F                     	;# 
  9295  010C                     	;# 
  9296  010C                     	;# 
  9297  010D                     	;# 
  9298  010E                     	;# 
  9299  010F                     	;# 
  9300  010F                     	;# 
  9301  0110                     	;# 
  9302  0111                     	;# 
  9303  0112                     	;# 
  9304  0113                     	;# 
  9305  0114                     	;# 
  9306  0115                     	;# 
  9307  0116                     	;# 
  9308  0117                     	;# 
  9309  0118                     	;# 
  9310  0119                     	;# 
  9311  0119                     	;# 
  9312  0119                     	;# 
  9313  011A                     	;# 
  9314  011A                     	;# 
  9315  011A                     	;# 
  9316  011B                     	;# 
  9317  011B                     	;# 
  9318  011B                     	;# 
  9319  011B                     	;# 
  9320  011B                     	;# 
  9321  011C                     	;# 
  9322  011C                     	;# 
  9323  011C                     	;# 
  9324  011D                     	;# 
  9325  011D                     	;# 
  9326  011D                     	;# 
  9327  011E                     	;# 
  9328  011E                     	;# 
  9329  011E                     	;# 
  9330  011F                     	;# 
  9331  011F                     	;# 
  9332  011F                     	;# 
  9333  011F                     	;# 
  9334  011F                     	;# 
  9335  018C                     	;# 
  9336  018D                     	;# 
  9337  018E                     	;# 
  9338  018F                     	;# 
  9339  0190                     	;# 
  9340  0191                     	;# 
  9341  0192                     	;# 
  9342  0196                     	;# 
  9343  0197                     	;# 
  9344  0198                     	;# 
  9345  0199                     	;# 
  9346  019A                     	;# 
  9347  019B                     	;# 
  9348  019C                     	;# 
  9349  020C                     	;# 
  9350  020D                     	;# 
  9351  020E                     	;# 
  9352  020E                     	;# 
  9353  020F                     	;# 
  9354  020F                     	;# 
  9355  0210                     	;# 
  9356  0210                     	;# 
  9357  0211                     	;# 
  9358  0211                     	;# 
  9359  0212                     	;# 
  9360  0213                     	;# 
  9361  0214                     	;# 
  9362  0214                     	;# 
  9363  0215                     	;# 
  9364  0215                     	;# 
  9365  0216                     	;# 
  9366  0216                     	;# 
  9367  0217                     	;# 
  9368  0217                     	;# 
  9369  0218                     	;# 
  9370  0219                     	;# 
  9371  021A                     	;# 
  9372  021A                     	;# 
  9373  021B                     	;# 
  9374  021B                     	;# 
  9375  021C                     	;# 
  9376  021C                     	;# 
  9377  021D                     	;# 
  9378  021D                     	;# 
  9379  021E                     	;# 
  9380  021F                     	;# 
  9381  028C                     	;# 
  9382  028C                     	;# 
  9383  028D                     	;# 
  9384  028D                     	;# 
  9385  028E                     	;# 
  9386  028F                     	;# 
  9387  0290                     	;# 
  9388  0291                     	;# 
  9389  0292                     	;# 
  9390  0292                     	;# 
  9391  0293                     	;# 
  9392  0293                     	;# 
  9393  0294                     	;# 
  9394  0295                     	;# 
  9395  0296                     	;# 
  9396  0297                     	;# 
  9397  0298                     	;# 
  9398  0298                     	;# 
  9399  0299                     	;# 
  9400  0299                     	;# 
  9401  029A                     	;# 
  9402  029B                     	;# 
  9403  029C                     	;# 
  9404  029D                     	;# 
  9405  029F                     	;# 
  9406  030C                     	;# 
  9407  030C                     	;# 
  9408  030D                     	;# 
  9409  030E                     	;# 
  9410  030F                     	;# 
  9411  0310                     	;# 
  9412  0310                     	;# 
  9413  0311                     	;# 
  9414  0312                     	;# 
  9415  0313                     	;# 
  9416  0314                     	;# 
  9417  0314                     	;# 
  9418  0315                     	;# 
  9419  0316                     	;# 
  9420  0317                     	;# 
  9421  0318                     	;# 
  9422  0318                     	;# 
  9423  0319                     	;# 
  9424  031A                     	;# 
  9425  031B                     	;# 
  9426  038C                     	;# 
  9427  038C                     	;# 
  9428  038D                     	;# 
  9429  038E                     	;# 
  9430  0390                     	;# 
  9431  0390                     	;# 
  9432  0391                     	;# 
  9433  0392                     	;# 
  9434  048C                     	;# 
  9435  048C                     	;# 
  9436  048D                     	;# 
  9437  048E                     	;# 
  9438  048F                     	;# 
  9439  048F                     	;# 
  9440  0490                     	;# 
  9441  0491                     	;# 
  9442  0492                     	;# 
  9443  0492                     	;# 
  9444  0493                     	;# 
  9445  0494                     	;# 
  9446  0495                     	;# 
  9447  0495                     	;# 
  9448  0496                     	;# 
  9449  0497                     	;# 
  9450  0498                     	;# 
  9451  0499                     	;# 
  9452  049A                     	;# 
  9453  049B                     	;# 
  9454  049C                     	;# 
  9455  049D                     	;# 
  9456  058C                     	;# 
  9457  058C                     	;# 
  9458  058D                     	;# 
  9459  058E                     	;# 
  9460  058F                     	;# 
  9461  058F                     	;# 
  9462  0590                     	;# 
  9463  0591                     	;# 
  9464  0592                     	;# 
  9465  0593                     	;# 
  9466  059C                     	;# 
  9467  059C                     	;# 
  9468  059D                     	;# 
  9469  059D                     	;# 
  9470  059E                     	;# 
  9471  059F                     	;# 
  9472  060C                     	;# 
  9473  060C                     	;# 
  9474  060D                     	;# 
  9475  060D                     	;# 
  9476  060E                     	;# 
  9477  060F                     	;# 
  9478  0610                     	;# 
  9479  0611                     	;# 
  9480  0612                     	;# 
  9481  0613                     	;# 
  9482  0614                     	;# 
  9483  0616                     	;# 
  9484  0616                     	;# 
  9485  0617                     	;# 
  9486  0617                     	;# 
  9487  0618                     	;# 
  9488  0619                     	;# 
  9489  061A                     	;# 
  9490  061B                     	;# 
  9491  061C                     	;# 
  9492  061D                     	;# 
  9493  061E                     	;# 
  9494  070C                     	;# 
  9495  070D                     	;# 
  9496  070E                     	;# 
  9497  070F                     	;# 
  9498  0710                     	;# 
  9499  0711                     	;# 
  9500  0712                     	;# 
  9501  0713                     	;# 
  9502  0714                     	;# 
  9503  0716                     	;# 
  9504  0717                     	;# 
  9505  0718                     	;# 
  9506  0719                     	;# 
  9507  071A                     	;# 
  9508  071B                     	;# 
  9509  071C                     	;# 
  9510  071D                     	;# 
  9511  071E                     	;# 
  9512  0796                     	;# 
  9513  0797                     	;# 
  9514  0798                     	;# 
  9515  0799                     	;# 
  9516  079A                     	;# 
  9517  079B                     	;# 
  9518  079C                     	;# 
  9519  079D                     	;# 
  9520  080C                     	;# 
  9521  080D                     	;# 
  9522  080E                     	;# 
  9523  080F                     	;# 
  9524  0810                     	;# 
  9525  0811                     	;# 
  9526  0812                     	;# 
  9527  0813                     	;# 
  9528  0814                     	;# 
  9529  081A                     	;# 
  9530  081A                     	;# 
  9531  081B                     	;# 
  9532  081C                     	;# 
  9533  081C                     	;# 
  9534  081D                     	;# 
  9535  081E                     	;# 
  9536  081F                     	;# 
  9537  088C                     	;# 
  9538  088D                     	;# 
  9539  088E                     	;# 
  9540  088F                     	;# 
  9541  0890                     	;# 
  9542  0891                     	;# 
  9543  0892                     	;# 
  9544  0893                     	;# 
  9545  0895                     	;# 
  9546  0896                     	;# 
  9547  0897                     	;# 
  9548  0898                     	;# 
  9549  0899                     	;# 
  9550  089A                     	;# 
  9551  089B                     	;# 
  9552  090C                     	;# 
  9553  090E                     	;# 
  9554  090F                     	;# 
  9555  091F                     	;# 
  9556  098F                     	;# 
  9557  098F                     	;# 
  9558  0990                     	;# 
  9559  0991                     	;# 
  9560  0992                     	;# 
  9561  0993                     	;# 
  9562  0994                     	;# 
  9563  0995                     	;# 
  9564  0996                     	;# 
  9565  0997                     	;# 
  9566  1E0F                     	;# 
  9567  1E10                     	;# 
  9568  1E11                     	;# 
  9569  1E12                     	;# 
  9570  1E13                     	;# 
  9571  1E14                     	;# 
  9572  1E15                     	;# 
  9573  1E16                     	;# 
  9574  1E17                     	;# 
  9575  1E18                     	;# 
  9576  1E19                     	;# 
  9577  1E1A                     	;# 
  9578  1E1B                     	;# 
  9579  1E1C                     	;# 
  9580  1E1D                     	;# 
  9581  1E1E                     	;# 
  9582  1E1F                     	;# 
  9583  1E20                     	;# 
  9584  1E21                     	;# 
  9585  1E22                     	;# 
  9586  1E23                     	;# 
  9587  1E24                     	;# 
  9588  1E25                     	;# 
  9589  1E26                     	;# 
  9590  1E27                     	;# 
  9591  1E28                     	;# 
  9592  1E29                     	;# 
  9593  1E2A                     	;# 
  9594  1E2B                     	;# 
  9595  1E2C                     	;# 
  9596  1E2D                     	;# 
  9597  1E2E                     	;# 
  9598  1E2F                     	;# 
  9599  1E30                     	;# 
  9600  1E31                     	;# 
  9601  1E32                     	;# 
  9602  1E33                     	;# 
  9603  1E34                     	;# 
  9604  1E35                     	;# 
  9605  1E36                     	;# 
  9606  1E37                     	;# 
  9607  1E8F                     	;# 
  9608  1E90                     	;# 
  9609  1E91                     	;# 
  9610  1E92                     	;# 
  9611  1E93                     	;# 
  9612  1E94                     	;# 
  9613  1E95                     	;# 
  9614  1E96                     	;# 
  9615  1E97                     	;# 
  9616  1E9C                     	;# 
  9617  1E9D                     	;# 
  9618  1E9E                     	;# 
  9619  1EA1                     	;# 
  9620  1EA2                     	;# 
  9621  1EA3                     	;# 
  9622  1EA4                     	;# 
  9623  1EA9                     	;# 
  9624  1EAA                     	;# 
  9625  1EB1                     	;# 
  9626  1EB2                     	;# 
  9627  1EB8                     	;# 
  9628  1EB9                     	;# 
  9629  1EBA                     	;# 
  9630  1EBB                     	;# 
  9631  1EBC                     	;# 
  9632  1EBD                     	;# 
  9633  1EBE                     	;# 
  9634  1EC3                     	;# 
  9635  1EC5                     	;# 
  9636  1EC6                     	;# 
  9637  1EC7                     	;# 
  9638  1EC8                     	;# 
  9639  1EC9                     	;# 
  9640  1ECA                     	;# 
  9641  1ECB                     	;# 
  9642  1ECB                     	;# 
  9643  1ECB                     	;# 
  9644  1ECC                     	;# 
  9645  1ECC                     	;# 
  9646  1ECC                     	;# 
  9647  1F10                     	;# 
  9648  1F11                     	;# 
  9649  1F12                     	;# 
  9650  1F14                     	;# 
  9651  1F15                     	;# 
  9652  1F1C                     	;# 
  9653  1F1D                     	;# 
  9654  1F1E                     	;# 
  9655  1F1F                     	;# 
  9656  1F20                     	;# 
  9657  1F21                     	;# 
  9658  1F22                     	;# 
  9659  1F23                     	;# 
  9660  1F24                     	;# 
  9661  1F25                     	;# 
  9662  1F26                     	;# 
  9663  1F27                     	;# 
  9664  1F38                     	;# 
  9665  1F39                     	;# 
  9666  1F3A                     	;# 
  9667  1F3B                     	;# 
  9668  1F3C                     	;# 
  9669  1F3D                     	;# 
  9670  1F3E                     	;# 
  9671  1F3F                     	;# 
  9672  1F43                     	;# 
  9673  1F44                     	;# 
  9674  1F45                     	;# 
  9675  1F46                     	;# 
  9676  1F47                     	;# 
  9677  1F48                     	;# 
  9678  1F49                     	;# 
  9679  1F4A                     	;# 
  9680  1F4E                     	;# 
  9681  1F4F                     	;# 
  9682  1F50                     	;# 
  9683  1F51                     	;# 
  9684  1F52                     	;# 
  9685  1F53                     	;# 
  9686  1F54                     	;# 
  9687  1F55                     	;# 
  9688  1FE4                     	;# 
  9689  1FE5                     	;# 
  9690  1FE6                     	;# 
  9691  1FE7                     	;# 
  9692  1FE8                     	;# 
  9693  1FE8                     	;# 
  9694  1FE9                     	;# 
  9695  1FEA                     	;# 
  9696  1FEB                     	;# 
  9697  1FED                     	;# 
  9698  1FEE                     	;# 
  9699  1FEF                     	;# 
  9700  0000                     	;# 
  9701  0001                     	;# 
  9702  0002                     	;# 
  9703  0003                     	;# 
  9704  0004                     	;# 
  9705  0005                     	;# 
  9706  0006                     	;# 
  9707  0007                     	;# 
  9708  0008                     	;# 
  9709  0009                     	;# 
  9710  000A                     	;# 
  9711  000B                     	;# 
  9712  000C                     	;# 
  9713  000D                     	;# 
  9714  000E                     	;# 
  9715  0012                     	;# 
  9716  0013                     	;# 
  9717  0014                     	;# 
  9718  0018                     	;# 
  9719  0019                     	;# 
  9720  001A                     	;# 
  9721  008C                     	;# 
  9722  008C                     	;# 
  9723  008D                     	;# 
  9724  008E                     	;# 
  9725  008E                     	;# 
  9726  008F                     	;# 
  9727  0090                     	;# 
  9728  0090                     	;# 
  9729  0091                     	;# 
  9730  0092                     	;# 
  9731  0092                     	;# 
  9732  0093                     	;# 
  9733  0094                     	;# 
  9734  0094                     	;# 
  9735  0095                     	;# 
  9736  0096                     	;# 
  9737  0096                     	;# 
  9738  0097                     	;# 
  9739  0098                     	;# 
  9740  0099                     	;# 
  9741  009A                     	;# 
  9742  009B                     	;# 
  9743  009B                     	;# 
  9744  009C                     	;# 
  9745  009D                     	;# 
  9746  009D                     	;# 
  9747  009E                     	;# 
  9748  009F                     	;# 
  9749  010C                     	;# 
  9750  010C                     	;# 
  9751  010D                     	;# 
  9752  010E                     	;# 
  9753  010F                     	;# 
  9754  010F                     	;# 
  9755  0110                     	;# 
  9756  0111                     	;# 
  9757  0112                     	;# 
  9758  0113                     	;# 
  9759  0114                     	;# 
  9760  0115                     	;# 
  9761  0116                     	;# 
  9762  0117                     	;# 
  9763  0118                     	;# 
  9764  0119                     	;# 
  9765  0119                     	;# 
  9766  0119                     	;# 
  9767  011A                     	;# 
  9768  011A                     	;# 
  9769  011A                     	;# 
  9770  011B                     	;# 
  9771  011B                     	;# 
  9772  011B                     	;# 
  9773  011B                     	;# 
  9774  011B                     	;# 
  9775  011C                     	;# 
  9776  011C                     	;# 
  9777  011C                     	;# 
  9778  011D                     	;# 
  9779  011D                     	;# 
  9780  011D                     	;# 
  9781  011E                     	;# 
  9782  011E                     	;# 
  9783  011E                     	;# 
  9784  011F                     	;# 
  9785  011F                     	;# 
  9786  011F                     	;# 
  9787  011F                     	;# 
  9788  011F                     	;# 
  9789  018C                     	;# 
  9790  018D                     	;# 
  9791  018E                     	;# 
  9792  018F                     	;# 
  9793  0190                     	;# 
  9794  0191                     	;# 
  9795  0192                     	;# 
  9796  0196                     	;# 
  9797  0197                     	;# 
  9798  0198                     	;# 
  9799  0199                     	;# 
  9800  019A                     	;# 
  9801  019B                     	;# 
  9802  019C                     	;# 
  9803  020C                     	;# 
  9804  020D                     	;# 
  9805  020E                     	;# 
  9806  020E                     	;# 
  9807  020F                     	;# 
  9808  020F                     	;# 
  9809  0210                     	;# 
  9810  0210                     	;# 
  9811  0211                     	;# 
  9812  0211                     	;# 
  9813  0212                     	;# 
  9814  0213                     	;# 
  9815  0214                     	;# 
  9816  0214                     	;# 
  9817  0215                     	;# 
  9818  0215                     	;# 
  9819  0216                     	;# 
  9820  0216                     	;# 
  9821  0217                     	;# 
  9822  0217                     	;# 
  9823  0218                     	;# 
  9824  0219                     	;# 
  9825  021A                     	;# 
  9826  021A                     	;# 
  9827  021B                     	;# 
  9828  021B                     	;# 
  9829  021C                     	;# 
  9830  021C                     	;# 
  9831  021D                     	;# 
  9832  021D                     	;# 
  9833  021E                     	;# 
  9834  021F                     	;# 
  9835  028C                     	;# 
  9836  028C                     	;# 
  9837  028D                     	;# 
  9838  028D                     	;# 
  9839  028E                     	;# 
  9840  028F                     	;# 
  9841  0290                     	;# 
  9842  0291                     	;# 
  9843  0292                     	;# 
  9844  0292                     	;# 
  9845  0293                     	;# 
  9846  0293                     	;# 
  9847  0294                     	;# 
  9848  0295                     	;# 
  9849  0296                     	;# 
  9850  0297                     	;# 
  9851  0298                     	;# 
  9852  0298                     	;# 
  9853  0299                     	;# 
  9854  0299                     	;# 
  9855  029A                     	;# 
  9856  029B                     	;# 
  9857  029C                     	;# 
  9858  029D                     	;# 
  9859  029F                     	;# 
  9860  030C                     	;# 
  9861  030C                     	;# 
  9862  030D                     	;# 
  9863  030E                     	;# 
  9864  030F                     	;# 
  9865  0310                     	;# 
  9866  0310                     	;# 
  9867  0311                     	;# 
  9868  0312                     	;# 
  9869  0313                     	;# 
  9870  0314                     	;# 
  9871  0314                     	;# 
  9872  0315                     	;# 
  9873  0316                     	;# 
  9874  0317                     	;# 
  9875  0318                     	;# 
  9876  0318                     	;# 
  9877  0319                     	;# 
  9878  031A                     	;# 
  9879  031B                     	;# 
  9880  038C                     	;# 
  9881  038C                     	;# 
  9882  038D                     	;# 
  9883  038E                     	;# 
  9884  0390                     	;# 
  9885  0390                     	;# 
  9886  0391                     	;# 
  9887  0392                     	;# 
  9888  048C                     	;# 
  9889  048C                     	;# 
  9890  048D                     	;# 
  9891  048E                     	;# 
  9892  048F                     	;# 
  9893  048F                     	;# 
  9894  0490                     	;# 
  9895  0491                     	;# 
  9896  0492                     	;# 
  9897  0492                     	;# 
  9898  0493                     	;# 
  9899  0494                     	;# 
  9900  0495                     	;# 
  9901  0495                     	;# 
  9902  0496                     	;# 
  9903  0497                     	;# 
  9904  0498                     	;# 
  9905  0499                     	;# 
  9906  049A                     	;# 
  9907  049B                     	;# 
  9908  049C                     	;# 
  9909  049D                     	;# 
  9910  058C                     	;# 
  9911  058C                     	;# 
  9912  058D                     	;# 
  9913  058E                     	;# 
  9914  058F                     	;# 
  9915  058F                     	;# 
  9916  0590                     	;# 
  9917  0591                     	;# 
  9918  0592                     	;# 
  9919  0593                     	;# 
  9920  059C                     	;# 
  9921  059C                     	;# 
  9922  059D                     	;# 
  9923  059D                     	;# 
  9924  059E                     	;# 
  9925  059F                     	;# 
  9926  060C                     	;# 
  9927  060C                     	;# 
  9928  060D                     	;# 
  9929  060D                     	;# 
  9930  060E                     	;# 
  9931  060F                     	;# 
  9932  0610                     	;# 
  9933  0611                     	;# 
  9934  0612                     	;# 
  9935  0613                     	;# 
  9936  0614                     	;# 
  9937  0616                     	;# 
  9938  0616                     	;# 
  9939  0617                     	;# 
  9940  0617                     	;# 
  9941  0618                     	;# 
  9942  0619                     	;# 
  9943  061A                     	;# 
  9944  061B                     	;# 
  9945  061C                     	;# 
  9946  061D                     	;# 
  9947  061E                     	;# 
  9948  070C                     	;# 
  9949  070D                     	;# 
  9950  070E                     	;# 
  9951  070F                     	;# 
  9952  0710                     	;# 
  9953  0711                     	;# 
  9954  0712                     	;# 
  9955  0713                     	;# 
  9956  0714                     	;# 
  9957  0716                     	;# 
  9958  0717                     	;# 
  9959  0718                     	;# 
  9960  0719                     	;# 
  9961  071A                     	;# 
  9962  071B                     	;# 
  9963  071C                     	;# 
  9964  071D                     	;# 
  9965  071E                     	;# 
  9966  0796                     	;# 
  9967  0797                     	;# 
  9968  0798                     	;# 
  9969  0799                     	;# 
  9970  079A                     	;# 
  9971  079B                     	;# 
  9972  079C                     	;# 
  9973  079D                     	;# 
  9974  080C                     	;# 
  9975  080D                     	;# 
  9976  080E                     	;# 
  9977  080F                     	;# 
  9978  0810                     	;# 
  9979  0811                     	;# 
  9980  0812                     	;# 
  9981  0813                     	;# 
  9982  0814                     	;# 
  9983  081A                     	;# 
  9984  081A                     	;# 
  9985  081B                     	;# 
  9986  081C                     	;# 
  9987  081C                     	;# 
  9988  081D                     	;# 
  9989  081E                     	;# 
  9990  081F                     	;# 
  9991  088C                     	;# 
  9992  088D                     	;# 
  9993  088E                     	;# 
  9994  088F                     	;# 
  9995  0890                     	;# 
  9996  0891                     	;# 
  9997  0892                     	;# 
  9998  0893                     	;# 
  9999  0895                     	;# 
 10000  0896                     	;# 
 10001  0897                     	;# 
 10002  0898                     	;# 
 10003  0899                     	;# 
 10004  089A                     	;# 
 10005  089B                     	;# 
 10006  090C                     	;# 
 10007  090E                     	;# 
 10008  090F                     	;# 
 10009  091F                     	;# 
 10010  098F                     	;# 
 10011  098F                     	;# 
 10012  0990                     	;# 
 10013  0991                     	;# 
 10014  0992                     	;# 
 10015  0993                     	;# 
 10016  0994                     	;# 
 10017  0995                     	;# 
 10018  0996                     	;# 
 10019  0997                     	;# 
 10020  1E0F                     	;# 
 10021  1E10                     	;# 
 10022  1E11                     	;# 
 10023  1E12                     	;# 
 10024  1E13                     	;# 
 10025  1E14                     	;# 
 10026  1E15                     	;# 
 10027  1E16                     	;# 
 10028  1E17                     	;# 
 10029  1E18                     	;# 
 10030  1E19                     	;# 
 10031  1E1A                     	;# 
 10032  1E1B                     	;# 
 10033  1E1C                     	;# 
 10034  1E1D                     	;# 
 10035  1E1E                     	;# 
 10036  1E1F                     	;# 
 10037  1E20                     	;# 
 10038  1E21                     	;# 
 10039  1E22                     	;# 
 10040  1E23                     	;# 
 10041  1E24                     	;# 
 10042  1E25                     	;# 
 10043  1E26                     	;# 
 10044  1E27                     	;# 
 10045  1E28                     	;# 
 10046  1E29                     	;# 
 10047  1E2A                     	;# 
 10048  1E2B                     	;# 
 10049  1E2C                     	;# 
 10050  1E2D                     	;# 
 10051  1E2E                     	;# 
 10052  1E2F                     	;# 
 10053  1E30                     	;# 
 10054  1E31                     	;# 
 10055  1E32                     	;# 
 10056  1E33                     	;# 
 10057  1E34                     	;# 
 10058  1E35                     	;# 
 10059  1E36                     	;# 
 10060  1E37                     	;# 
 10061  1E8F                     	;# 
 10062  1E90                     	;# 
 10063  1E91                     	;# 
 10064  1E92                     	;# 
 10065  1E93                     	;# 
 10066  1E94                     	;# 
 10067  1E95                     	;# 
 10068  1E96                     	;# 
 10069  1E97                     	;# 
 10070  1E9C                     	;# 
 10071  1E9D                     	;# 
 10072  1E9E                     	;# 
 10073  1EA1                     	;# 
 10074  1EA2                     	;# 
 10075  1EA3                     	;# 
 10076  1EA4                     	;# 
 10077  1EA9                     	;# 
 10078  1EAA                     	;# 
 10079  1EB1                     	;# 
 10080  1EB2                     	;# 
 10081  1EB8                     	;# 
 10082  1EB9                     	;# 
 10083  1EBA                     	;# 
 10084  1EBB                     	;# 
 10085  1EBC                     	;# 
 10086  1EBD                     	;# 
 10087  1EBE                     	;# 
 10088  1EC3                     	;# 
 10089  1EC5                     	;# 
 10090  1EC6                     	;# 
 10091  1EC7                     	;# 
 10092  1EC8                     	;# 
 10093  1EC9                     	;# 
 10094  1ECA                     	;# 
 10095  1ECB                     	;# 
 10096  1ECB                     	;# 
 10097  1ECB                     	;# 
 10098  1ECC                     	;# 
 10099  1ECC                     	;# 
 10100  1ECC                     	;# 
 10101  1F10                     	;# 
 10102  1F11                     	;# 
 10103  1F12                     	;# 
 10104  1F14                     	;# 
 10105  1F15                     	;# 
 10106  1F1C                     	;# 
 10107  1F1D                     	;# 
 10108  1F1E                     	;# 
 10109  1F1F                     	;# 
 10110  1F20                     	;# 
 10111  1F21                     	;# 
 10112  1F22                     	;# 
 10113  1F23                     	;# 
 10114  1F24                     	;# 
 10115  1F25                     	;# 
 10116  1F26                     	;# 
 10117  1F27                     	;# 
 10118  1F38                     	;# 
 10119  1F39                     	;# 
 10120  1F3A                     	;# 
 10121  1F3B                     	;# 
 10122  1F3C                     	;# 
 10123  1F3D                     	;# 
 10124  1F3E                     	;# 
 10125  1F3F                     	;# 
 10126  1F43                     	;# 
 10127  1F44                     	;# 
 10128  1F45                     	;# 
 10129  1F46                     	;# 
 10130  1F47                     	;# 
 10131  1F48                     	;# 
 10132  1F49                     	;# 
 10133  1F4A                     	;# 
 10134  1F4E                     	;# 
 10135  1F4F                     	;# 
 10136  1F50                     	;# 
 10137  1F51                     	;# 
 10138  1F52                     	;# 
 10139  1F53                     	;# 
 10140  1F54                     	;# 
 10141  1F55                     	;# 
 10142  1FE4                     	;# 
 10143  1FE5                     	;# 
 10144  1FE6                     	;# 
 10145  1FE7                     	;# 
 10146  1FE8                     	;# 
 10147  1FE8                     	;# 
 10148  1FE9                     	;# 
 10149  1FEA                     	;# 
 10150  1FEB                     	;# 
 10151  1FED                     	;# 
 10152  1FEE                     	;# 
 10153  1FEF                     	;_dmxArray
 10154                           
 10155                           	psect	idataBANK1
 10156  09FE                     __pidataBANK1:	
 10157                           
 10158                           ;initializer for _initial
 10159  09FE  3401               	retlw	1
 10160  09FF  3400               	retlw	0
 10161                           
 10162                           ;initializer for _delay
 10163  0A00  340A               	retlw	10
 10164  0A01  3400               	retlw	0
 10165                           
 10166                           ;initializer for _threshold
 10167  0A02  3490               	retlw	144
 10168  0A03  3406               	retlw	6
 10169                           
 10170                           ;initializer for _incInterval
 10171  0A04  3464               	retlw	100
 10172  0A05  3400               	retlw	0
 10173                           
 10174                           ;initializer for _address
 10175  0A06  3401               	retlw	1
 10176  0A07  3400               	retlw	0
 10177                           
 10178                           ;initializer for _currentSelection
 10179  0A08  3403               	retlw	3
 10180                           
 10181                           ;initializer for _menuSelected
 10182  0A09  3403               	retlw	3
 10183                           
 10184                           ;initializer for _startup
 10185  0A0A  3401               	retlw	1
 10186                           
 10187                           	psect	stringtext1
 10188  0746                     __pstringtext1:	
 10189  0746                     _charTable:	
 10190  0746  3400               	retlw	0
 10191  0747  3482               	retlw	130
 10192  0748  3421               	retlw	33
 10193  0749  3400               	retlw	0
 10194  074A  3400               	retlw	0
 10195  074B  3400               	retlw	0
 10196  074C  3400               	retlw	0
 10197  074D  3402               	retlw	2
 10198  074E  3439               	retlw	57
 10199  074F  340F               	retlw	15
 10200  0750  3400               	retlw	0
 10201  0751  3400               	retlw	0
 10202  0752  3400               	retlw	0
 10203  0753  3440               	retlw	64
 10204  0754  3480               	retlw	128
 10205  0755  3400               	retlw	0
 10206  0756  343F               	retlw	63
 10207  0757  3406               	retlw	6
 10208  0758  345B               	retlw	91
 10209  0759  344F               	retlw	79
 10210  075A  3466               	retlw	102
 10211  075B  346D               	retlw	109
 10212  075C  347D               	retlw	125
 10213  075D  3407               	retlw	7
 10214  075E  347F               	retlw	127
 10215  075F  346F               	retlw	111
 10216  0760  3400               	retlw	0
 10217  0761  3400               	retlw	0
 10218  0762  3400               	retlw	0
 10219  0763  3448               	retlw	72
 10220  0764  3400               	retlw	0
 10221  0765  3453               	retlw	83
 10222  0766  3400               	retlw	0
 10223  0767  3477               	retlw	119
 10224  0768  347C               	retlw	124
 10225  0769  3439               	retlw	57
 10226  076A  345E               	retlw	94
 10227  076B  3479               	retlw	121
 10228  076C  3471               	retlw	113
 10229  076D  346F               	retlw	111
 10230  076E  3476               	retlw	118
 10231  076F  3406               	retlw	6
 10232  0770  341E               	retlw	30
 10233  0771  3400               	retlw	0
 10234  0772  3438               	retlw	56
 10235  0773  3400               	retlw	0
 10236  0774  3454               	retlw	84
 10237  0775  343F               	retlw	63
 10238  0776  3473               	retlw	115
 10239  0777  3467               	retlw	103
 10240  0778  3450               	retlw	80
 10241  0779  346D               	retlw	109
 10242  077A  3478               	retlw	120
 10243  077B  343E               	retlw	62
 10244  077C  3400               	retlw	0
 10245  077D  3400               	retlw	0
 10246  077E  3400               	retlw	0
 10247  077F  346E               	retlw	110
 10248  0780  3400               	retlw	0
 10249  0781  3439               	retlw	57
 10250  0782  3400               	retlw	0
 10251  0783  340F               	retlw	15
 10252  0784  3400               	retlw	0
 10253  0785  3408               	retlw	8
 10254  0786  3463               	retlw	99
 10255  0787  345F               	retlw	95
 10256  0788  347C               	retlw	124
 10257  0789  3458               	retlw	88
 10258  078A  345E               	retlw	94
 10259  078B  347B               	retlw	123
 10260  078C  3471               	retlw	113
 10261  078D  346F               	retlw	111
 10262  078E  3474               	retlw	116
 10263  078F  3402               	retlw	2
 10264  0790  341E               	retlw	30
 10265  0791  3400               	retlw	0
 10266  0792  3406               	retlw	6
 10267  0793  3400               	retlw	0
 10268  0794  3454               	retlw	84
 10269  0795  345C               	retlw	92
 10270  0796  3473               	retlw	115
 10271  0797  3467               	retlw	103
 10272  0798  3450               	retlw	80
 10273  0799  346D               	retlw	109
 10274  079A  3478               	retlw	120
 10275  079B  341C               	retlw	28
 10276  079C  3400               	retlw	0
 10277  079D  3400               	retlw	0
 10278  079E  3400               	retlw	0
 10279  079F  346E               	retlw	110
 10280  07A0  3400               	retlw	0
 10281  07A1  3439               	retlw	57
 10282  07A2  3430               	retlw	48
 10283  07A3  340F               	retlw	15
 10284  07A4  3400               	retlw	0
 10285  07A5  3400               	retlw	0
 10286  07A6                     __end_of_charTable:	
 10287                           
 10288                           	psect	nvBANK2
 10289  0162                     __pnvBANK2:	
 10290  0162                     _ADCC_ADTI_InterruptHandler:	
 10291  0162                     	ds	2
 10292  0164                     _TMR0_InterruptHandler:	
 10293  0164                     	ds	2
 10294  0166                     _EUSART1_ErrorHandler:	
 10295  0166                     	ds	2
 10296  0168                     _EUSART1_OverrunErrorHandler:	
 10297  0168                     	ds	2
 10298  016A                     _EUSART1_FramingErrorHandler:	
 10299  016A                     	ds	2
 10300  016C                     _EUSART1_RxDefaultInterruptHandler:	
 10301  016C                     	ds	2
 10302  0014                     _TRISCbits	set	20
 10303  0012                     _TRISAbits	set	18
 10304  000B                     _INTCONbits	set	11
 10305  0014                     _TRISC	set	20
 10306  0013                     _TRISB	set	19
 10307  0012                     _TRISA	set	18
 10308  001A                     _LATC	set	26
 10309  0019                     _LATB	set	25
 10310  0018                     _LATA	set	24
 10311  000C                     _PORTA	set	12
 10312  000E                     _PORTC	set	14
 10313  0090                     _ADERRL	set	144
 10314  0091                     _ADERRH	set	145
 10315  009B                     _ADPREVL	set	155
 10316  009C                     _ADPREVH	set	156
 10317  0094                     _ADFLTRL	set	148
 10318  0095                     _ADFLTRH	set	149
 10319  0096                     _ADACCL	set	150
 10320  0097                     _ADACCH	set	151
 10321  0099                     _ADCNT	set	153
 10322  009D                     _ADRESL	set	157
 10323  009E                     _ADRESH	set	158
 10324  009F                     _ADPCH	set	159
 10325  009A                     _ADRPT	set	154
 10326  0098                     _ADACCU	set	152
 10327  0093                     _ADSTPTH	set	147
 10328  0092                     _ADSTPTL	set	146
 10329  008F                     _ADUTHH	set	143
 10330  008E                     _ADUTHL	set	142
 10331  008D                     _ADLTHH	set	141
 10332  008C                     _ADLTHL	set	140
 10333  0112                     _ADCON1bits	set	274
 10334  0115                     _ADSTATbits	set	277
 10335  0113                     _ADCON2bits	set	275
 10336  0114                     _ADCON3bits	set	276
 10337  0111                     _ADCON0bits	set	273
 10338  0111                     _ADCON0	set	273
 10339  0118                     _ADCLK	set	280
 10340  0117                     _ADACT	set	279
 10341  0116                     _ADREF	set	278
 10342  0115                     _ADSTAT	set	277
 10343  0114                     _ADCON3	set	276
 10344  0113                     _ADCON2	set	275
 10345  0112                     _ADCON1	set	274
 10346  0110                     _ADPREH	set	272
 10347  010F                     _ADPREL	set	271
 10348  010E                     _ADCAP	set	270
 10349  010D                     _ADACQH	set	269
 10350  010C                     _ADACQL	set	268
 10351  0119                     _RC1REG	set	281
 10352  011D                     _RC1STAbits	set	285
 10353  011A                     _TX1REG	set	282
 10354  011E                     _TX1STAbits	set	286
 10355  011C                     _SP1BRGH	set	284
 10356  011B                     _SP1BRGL	set	283
 10357  011E                     _TX1STA	set	286
 10358  011D                     _RC1STA	set	285
 10359  011F                     _BAUD1CON	set	287
 10360  018C                     _SSP1BUF	set	396
 10361  0191                     _SSP1CON2bits	set	401
 10362  0190                     _SSP1CON1bits	set	400
 10363  018D                     _SSP1ADD	set	397
 10364  0192                     _SSP1CON3	set	402
 10365  0190                     _SSP1CON1	set	400
 10366  018F                     _SSP1STAT	set	399
 10367  021E                     _CCPTMRS0bits	set	542
 10368  028D                     _PR2	set	653
 10369  028C                     _TMR2	set	652
 10370  028E                     _T2CONbits	set	654
 10371  0291                     _T2RSTbits	set	657
 10372  028F                     _T2HLTbits	set	655
 10373  028E                     _T2CON	set	654
 10374  028C                     _T2TMR	set	652
 10375  028D                     _T2PR	set	653
 10376  0291                     _T2RST	set	657
 10377  028F                     _T2HLT	set	655
 10378  0290                     _T2CLKCON	set	656
 10379  0312                     _CCP2CONbits	set	786
 10380  0310                     _CCPR2L	set	784
 10381  0311                     _CCPR2H	set	785
 10382  0312                     _CCP2CON	set	786
 10383  030E                     _CCP1CONbits	set	782
 10384  030C                     _CCPR1L	set	780
 10385  030D                     _CCPR1H	set	781
 10386  030E                     _CCP1CON	set	782
 10387  031A                     _CCP4CONbits	set	794
 10388  0318                     _CCPR4L	set	792
 10389  0319                     _CCPR4H	set	793
 10390  031A                     _CCP4CON	set	794
 10391  0316                     _CCP3CONbits	set	790
 10392  0314                     _CCPR3L	set	788
 10393  0315                     _CCPR3H	set	789
 10394  0316                     _CCP3CON	set	790
 10395  059E                     _T0CON0bits	set	1438
 10396  059E                     _T0CON0	set	1438
 10397  059C                     _TMR0L	set	1436
 10398  059D                     _TMR0H	set	1437
 10399  059F                     _T0CON1	set	1439
 10400  070D                     _PIR1bits	set	1805
 10401  0717                     _PIE1bits	set	1815
 10402  070C                     _PIR0bits	set	1804
 10403  0716                     _PIE0bits	set	1814
 10404  070F                     _PIR3bits	set	1807
 10405  0719                     _PIE3bits	set	1817
 10406  0710                     _PIR4bits	set	1808
 10407  079D                     _PMD7	set	1949
 10408  079C                     _PMD6	set	1948
 10409  079B                     _PMD5	set	1947
 10410  079A                     _PMD4	set	1946
 10411  0799                     _PMD3	set	1945
 10412  0798                     _PMD2	set	1944
 10413  0797                     _PMD1	set	1943
 10414  0796                     _PMD0	set	1942
 10415  0892                     _OSCTUNE	set	2194
 10416  0893                     _OSCFRQ	set	2195
 10417  0891                     _OSCEN	set	2193
 10418  088F                     _OSCCON3	set	2191
 10419  088D                     _OSCCON1	set	2189
 10420  1ECB                     _RX1DTPPS	set	7883
 10421  1EC6                     _SSP1DATPPS	set	7878
 10422  1EC5                     _SSP1CLKPPS	set	7877
 10423  1F4F                     _WPUCbits	set	8015
 10424  1F4E                     _ANSELCbits	set	8014
 10425  1F39                     _WPUAbits	set	7993
 10426  1F38                     _ANSELAbits	set	7992
 10427  1F27                     _RC7PPS	set	7975
 10428  1F26                     _RC6PPS	set	7974
 10429  1F25                     _RC5PPS	set	7973
 10430  1F15                     _RA5PPS	set	7957
 10431  1F24                     _RC4PPS	set	7972
 10432  1F23                     _RC3PPS	set	7971
 10433  1F14                     _RA4PPS	set	7956
 10434  1F51                     _SLRCONC	set	8017
 10435  1F46                     _SLRCONB	set	8006
 10436  1F3B                     _SLRCONA	set	7995
 10437  1F50                     _ODCONC	set	8016
 10438  1F45                     _ODCONB	set	8005
 10439  1F3A                     _ODCONA	set	7994
 10440  1F4F                     _WPUC	set	8015
 10441  1F39                     _WPUA	set	7993
 10442  1F44                     _WPUB	set	8004
 10443  1F38                     _ANSELA	set	7992
 10444  1F43                     _ANSELB	set	8003
 10445  1F4E                     _ANSELC	set	8014
 10446                           
 10447                           	psect	stringtext2
 10448  1000                     __pstringtext2:	
 10449  1000                     STR_12:	
 10450  1000  3425               	retlw	37	;'%'
 10451  1001  3463               	retlw	99	;'c'
 10452  1002  3425               	retlw	37	;'%'
 10453  1003  3463               	retlw	99	;'c'
 10454  1004  3425               	retlw	37	;'%'
 10455  1005  3463               	retlw	99	;'c'
 10456  1006  3425               	retlw	37	;'%'
 10457  1007  3463               	retlw	99	;'c'
 10458  1008  340D               	retlw	13
 10459  1009  3400               	retlw	0
 10460                           
 10461                           	psect	stringtext3
 10462  100A                     __pstringtext3:	
 10463  100A                     STR_13:	
 10464  100A  3425               	retlw	37	;'%'
 10465  100B  3463               	retlw	99	;'c'
 10466  100C  3425               	retlw	37	;'%'
 10467  100D  3463               	retlw	99	;'c'
 10468  100E  3425               	retlw	37	;'%'
 10469  100F  3463               	retlw	99	;'c'
 10470  1010  3420               	retlw	32	;' '
 10471  1011  340D               	retlw	13
 10472  1012  3400               	retlw	0
 10473                           
 10474                           	psect	stringtext4
 10475  1013                     __pstringtext4:	
 10476  1013                     STR_11:	
 10477  1013  3420               	retlw	32	;' '
 10478  1014  3425               	retlw	37	;'%'
 10479  1015  3463               	retlw	99	;'c'
 10480  1016  3425               	retlw	37	;'%'
 10481  1017  3463               	retlw	99	;'c'
 10482  1018  3425               	retlw	37	;'%'
 10483  1019  3463               	retlw	99	;'c'
 10484  101A  340D               	retlw	13
 10485  101B  3400               	retlw	0
 10486                           
 10487                           	psect	stringtext5
 10488  101C                     __pstringtext5:	
 10489  101C                     STR_8:	
 10490  101C  3448               	retlw	72	;'H'
 10491  101D  3445               	retlw	69	;'E'
 10492  101E  3459               	retlw	89	;'Y'
 10493  101F  3459               	retlw	89	;'Y'
 10494  1020  3459               	retlw	89	;'Y'
 10495  1021  3459               	retlw	89	;'Y'
 10496  1022  3459               	retlw	89	;'Y'
 10497  1023  3459               	retlw	89	;'Y'
 10498  1024  3400               	retlw	0
 10499                           
 10500                           	psect	stringtext6
 10501  1025                     __pstringtext6:	
 10502  1025                     STR_14:	
 10503  1025  3425               	retlw	37	;'%'
 10504  1026  3463               	retlw	99	;'c'
 10505  1027  3425               	retlw	37	;'%'
 10506  1028  3463               	retlw	99	;'c'
 10507  1029  3420               	retlw	32	;' '
 10508  102A  3420               	retlw	32	;' '
 10509  102B  340D               	retlw	13
 10510  102C  3400               	retlw	0
 10511                           
 10512                           	psect	stringtext7
 10513  102D                     __pstringtext7:	
 10514  102D                     STR_10:	
 10515  102D  3420               	retlw	32	;' '
 10516  102E  3420               	retlw	32	;' '
 10517  102F  3425               	retlw	37	;'%'
 10518  1030  3463               	retlw	99	;'c'
 10519  1031  3425               	retlw	37	;'%'
 10520  1032  3463               	retlw	99	;'c'
 10521  1033  340D               	retlw	13
 10522  1034  3400               	retlw	0
 10523                           
 10524                           	psect	stringtext8
 10525  1035                     __pstringtext8:	
 10526  1035                     STR_15:	
 10527  1035  3425               	retlw	37	;'%'
 10528  1036  3463               	retlw	99	;'c'
 10529  1037  3420               	retlw	32	;' '
 10530  1038  3420               	retlw	32	;' '
 10531  1039  3420               	retlw	32	;' '
 10532  103A  340D               	retlw	13
 10533  103B  3400               	retlw	0
 10534                           
 10535                           	psect	stringtext9
 10536  103C                     __pstringtext9:	
 10537  103C                     STR_9:	
 10538  103C  3420               	retlw	32	;' '
 10539  103D  3420               	retlw	32	;' '
 10540  103E  3420               	retlw	32	;' '
 10541  103F  3425               	retlw	37	;'%'
 10542  1040  3463               	retlw	99	;'c'
 10543  1041  340D               	retlw	13
 10544  1042  3400               	retlw	0
 10545                           
 10546                           	psect	stringtext10
 10547  1043                     __pstringtext10:	
 10548  1043                     STR_16:	
 10549  1043  3420               	retlw	32	;' '
 10550  1044  3420               	retlw	32	;' '
 10551  1045  3420               	retlw	32	;' '
 10552  1046  3420               	retlw	32	;' '
 10553  1047  340D               	retlw	13
 10554  1048  3400               	retlw	0
 10555                           
 10556                           	psect	stringtext11
 10557  1049                     __pstringtext11:	
 10558  1049                     STR_5:	
 10559  1049  3450               	retlw	80	;'P'
 10560  104A  3443               	retlw	67	;'C'
 10561  104B  3420               	retlw	32	;' '
 10562  104C  3420               	retlw	32	;' '
 10563  104D  340D               	retlw	13
 10564  104E  3400               	retlw	0
 10565                           
 10566                           	psect	stringtext12
 10567  104F                     __pstringtext12:	
 10568  104F                     STR_3:	
 10569  104F  3441               	retlw	65	;'A'
 10570  1050  344E               	retlw	78	;'N'
 10571  1051  3449               	retlw	73	;'I'
 10572  1052  3420               	retlw	32	;' '
 10573  1053  340D               	retlw	13
 10574  1054  3400               	retlw	0
 10575                           
 10576                           	psect	stringtext13
 10577  1055                     __pstringtext13:	
 10578  1055                     STR_1:	
 10579  1055  3453               	retlw	83	;'S'
 10580  1056  3445               	retlw	69	;'E'
 10581  1057  344C               	retlw	76	;'L'
 10582  1058  3431               	retlw	49	;'1'
 10583  1059  340D               	retlw	13
 10584  105A  3400               	retlw	0
 10585                           
 10586                           	psect	stringtext14
 10587  105B                     __pstringtext14:	
 10588  105B                     STR_4:	
 10589  105B  3442               	retlw	66	;'B'
 10590  105C  3445               	retlw	69	;'E'
 10591  105D  3441               	retlw	65	;'A'
 10592  105E  3454               	retlw	84	;'T'
 10593  105F  340D               	retlw	13
 10594  1060  3400               	retlw	0
 10595                           
 10596                           	psect	stringtext15
 10597  1061                     __pstringtext15:	
 10598  1061                     STR_6:	
 10599  1061  3420               	retlw	32	;' '
 10600  1062  3420               	retlw	32	;' '
 10601  1063  3420               	retlw	32	;' '
 10602  1064  3420               	retlw	32	;' '
 10603  1065  3400               	retlw	0
 10604                           
 10605                           	psect	stringtext16
 10606  1066                     __pstringtext16:	
 10607  1066                     STR_2:	
 10608  1066  3442               	retlw	66	;'B'
 10609  1067  342D               	retlw	45	;'-'
 10610  1068  3431               	retlw	49	;'1'
 10611  1069  3400               	retlw	0
 10612                           
 10613                           	psect	stringtext17
 10614  0000                     __pstringtext17:	
 10615  1047                     
 10616                           ; #config settings
 10617  0000                     
 10618                           	psect	cinit
 10619  0032                     start_initialization:	
 10620  0032                     __initialization:		;BIGRAM
 10621                           
 10622                           ; Initialize objects allocated to BANK1
 10623  0032  30FE               	movlw	low __pidataBANK1
 10624  0033  0084               	movwf	4
 10625  0034  3089               	movlw	(high __pidataBANK1)| (0+128)
 10626  0035  0085               	movwf	5
 10627  0036  30E2               	movlw	low __pdataBANK1
 10628  0037  0086               	movwf	6
 10629  0038  3000               	movlw	high __pdataBANK1
 10630  0039  0087               	movwf	7
 10631  003A  3000               	movlw	0
 10632  003B  00FF               	movwf	btemp+1
 10633  003C  300D               	movlw	13
 10634  003D  3189  21D8  3180   	fcall	init_ram
 10635                           
 10636                           ; Clear objects allocated to BIGRAM
 10637  0040  30EE               	movlw	low (0+9198)
 10638  0041  0084               	movwf	4
 10639  0042  3023               	movlw	high (0+9198)
 10640  0043  0085               	movwf	5
 10641  0044  3002               	movlw	2
 10642  0045  00FE               	movwf	btemp
 10643  0046  3004               	movlw	4
 10644  0047  00FF               	movwf	btemp+1
 10645  0048  3189  21CC  3180   	fcall	clear_ram0
 10646                           
 10647                           ; Clear objects allocated to COMMON
 10648  004B  01F0               	clrf	__pbssCOMMON& (0+127)
 10649  004C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
 10650  004D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
 10651  004E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
 10652  004F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
 10653  0050  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
 10654  0051  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
 10655                           
 10656                           ; Clear objects allocated to BANK0
 10657  0052  01EF               	clrf	__pbssBANK0& (0+127)
 10658                           
 10659                           ; Clear objects allocated to BANK1
 10660  0053  30A0               	movlw	low __pbssBANK1
 10661  0054  0084               	movwf	4
 10662  0055  3000               	movlw	high __pbssBANK1
 10663  0056  0085               	movwf	5
 10664  0057  3032               	movlw	50
 10665  0058  00FE               	movwf	btemp
 10666  0059  3000               	movlw	0
 10667  005A  00FF               	movwf	btemp+1
 10668  005B  3189  21CC  3180   	fcall	clear_ram0
 10669                           
 10670                           ; Clear objects allocated to BANK2
 10671  005E  3020               	movlw	low __pbssBANK2
 10672  005F  0084               	movwf	4
 10673  0060  3001               	movlw	high __pbssBANK2
 10674  0061  0085               	movwf	5
 10675  0062  3042               	movlw	66
 10676  0063  00FE               	movwf	btemp
 10677  0064  3000               	movlw	0
 10678  0065  00FF               	movwf	btemp+1
 10679  0066  3189  21CC  3180   	fcall	clear_ram0
 10680                           
 10681                           ; Clear objects allocated to BANK3
 10682  0069  30A0               	movlw	low __pbssBANK3
 10683  006A  0084               	movwf	4
 10684  006B  3001               	movlw	high __pbssBANK3
 10685  006C  0085               	movwf	5
 10686  006D  3020               	movlw	32
 10687  006E  00FE               	movwf	btemp
 10688  006F  3000               	movlw	0
 10689  0070  00FF               	movwf	btemp+1
 10690  0071  3189  21CC         	fcall	clear_ram0
 10691  0073                     end_of_initialization:	
 10692                           ;End of C runtime variable initialization code
 10693                           
 10694  0073                     __end_of__initialization:	
 10695  0073  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10696  0074  0140               	movlb	0
 10697  0075  318E  2EC9         	ljmp	_main	;jump to C main() function
 10698                           
 10699                           	psect	bssCOMMON
 10700  0070                     __pbssCOMMON:	
 10701  0070                     _currentState:	
 10702  0070                     	ds	2
 10703  0072                     _p_i2c1_current:	
 10704  0072                     	ds	1
 10705  0073                     _p_i2c1_trb_current:	
 10706  0073                     	ds	1
 10707  0074                     _eusart1RxTail:	
 10708  0074                     	ds	1
 10709  0075                     I2C1_ISR@i2c_address:	
 10710  0075                     	ds	2
 10711                           
 10712                           	psect	bssBANK0
 10713  006F                     __pbssBANK0:	
 10714  006F                     _eusart1RxHead:	
 10715  006F                     	ds	1
 10716                           
 10717                           	psect	bssBANK1
 10718  00A0                     __pbssBANK1:	
 10719  00A0                     _i2c1_object:	
 10720  00A0                     	ds	5
 10721  00A5                     _width:	
 10722  00A5                     	ds	2
 10723  00A7                     _flags:	
 10724  00A7                     	ds	2
 10725  00A9                     _thresholdCount:	
 10726  00A9                     	ds	2
 10727  00AB                     _lastRun:	
 10728  00AB                     	ds	2
 10729  00AD                     _lastBeat:	
 10730  00AD                     	ds	2
 10731  00AF                     _lastActiveTime:	
 10732  00AF                     	ds	2
 10733  00B1                     _lastIncTime:	
 10734  00B1                     	ds	2
 10735  00B3                     _currentTime:	
 10736  00B3                     	ds	2
 10737  00B5                     _lastTime:	
 10738  00B5                     	ds	2
 10739  00B7                     _startTime:	
 10740  00B7                     	ds	2
 10741  00B9                     _lastDetected:	
 10742  00B9                     	ds	1
 10743  00BA                     _thresholdExceeded:	
 10744  00BA                     	ds	1
 10745  00BB                     _detected:	
 10746  00BB                     	ds	1
 10747  00BC                     _position:	
 10748  00BC                     	ds	1
 10749  00BD                     _tm1650_status:	
 10750  00BD                     	ds	1
 10751  00BE                     _enterState:	
 10752  00BE                     	ds	1
 10753  00BF                     _menuState:	
 10754  00BF                     	ds	1
 10755  00C0                     _downState:	
 10756  00C0                     	ds	1
 10757  00C1                     _upState:	
 10758  00C1                     	ds	1
 10759  00C2                     _enterPressed:	
 10760  00C2                     	ds	1
 10761  00C3                     _menuPressed:	
 10762  00C3                     	ds	1
 10763  00C4                     _enter:	
 10764  00C4                     	ds	1
 10765  00C5                     _down:	
 10766  00C5                     	ds	1
 10767  00C6                     _up:	
 10768  00C6                     	ds	1
 10769  00C7                     _menu:	
 10770  00C7                     	ds	1
 10771  00C8                     I2C1_ISR@i2c_10bit_address_restart:	
 10772  00C8                     	ds	1
 10773  00C9                     I2C1_ISR@i2c_bytes_left:	
 10774  00C9                     	ds	1
 10775  00CA                     I2C1_ISR@pi2c_buf_ptr:	
 10776  00CA                     	ds	1
 10777  00CB                     _i2c1_trb_count:	
 10778  00CB                     	ds	1
 10779  00CC                     _i2c1_state:	
 10780  00CC                     	ds	1
 10781  00CD                     _eusart1RxLastError:	
 10782  00CD                     	ds	1
 10783  00CE                     _eusart1RxCount:	
 10784  00CE                     	ds	1
 10785  00CF                     _i2c1_tr_queue:	
 10786  00CF                     	ds	3
 10787                           
 10788                           	psect	dataBANK1
 10789  00E2                     __pdataBANK1:	
 10790  00E2                     _initial:	
 10791  00E2                     	ds	2
 10792  00E4                     _delay:	
 10793  00E4                     	ds	2
 10794  00E6                     _threshold:	
 10795  00E6                     	ds	2
 10796  00E8                     _incInterval:	
 10797  00E8                     	ds	2
 10798  00EA                     _address:	
 10799  00EA                     	ds	2
 10800  00EC                     _currentSelection:	
 10801  00EC                     	ds	1
 10802  00ED                     _menuSelected:	
 10803  00ED                     	ds	1
 10804  00EE                     _startup:	
 10805  00EE                     	ds	1
 10806                           
 10807                           	psect	bssBANK2
 10808  0120                     __pbssBANK2:	
 10809  0120                     _eusart1RxStatusBuffer:	
 10810  0120                     	ds	8
 10811  0128                     _eusart1RxBuffer:	
 10812  0128                     	ds	8
 10813  0130                     _nout:	
 10814  0130                     	ds	2
 10815  0132                     _prec:	
 10816  0132                     	ds	2
 10817  0134                     _lastLedActiveTime:	
 10818  0134                     	ds	2
 10819  0136                     _arrayIndex:	
 10820  0136                     	ds	2
 10821  0138                     _bpm:	
 10822  0138                     	ds	2
 10823  013A                     _buttons:	
 10824  013A                     	ds	32
 10825  015A                     I2C1_MasterRead@trBlock:	
 10826  015A                     	ds	4
 10827  015E                     I2C1_MasterWrite@trBlock:	
 10828  015E                     	ds	4
 10829                           
 10830                           	psect	bssBANK3
 10831  01A0                     __pbssBANK3:	
 10832  01A0                     _dbuf:	
 10833  01A0                     	ds	32
 10834                           
 10835                           	psect	inittext
 10836  09D8                     init_ram:	
 10837  09D8  00FE               	movwf	126
 10838  09D9                     initloop:	
 10839  09D9  0012               	moviw fsr0++
 10840  09DA  001E               	movwi fsr1++
 10841  09DB  3001               	movlw	1
 10842  09DC  02FE               	subwf	126,f
 10843  09DD  3000               	movlw	0
 10844  09DE  3BFF               	subwfb	127,f
 10845  09DF  087F               	movf	127,w
 10846  09E0  047E               	iorwf	126,w
 10847  09E1  1903               	btfsc	3,2
 10848  09E2  3400               	retlw	0
 10849  09E3  29D9               	goto	initloop
 10850                           
 10851                           	psect	clrtext
 10852  09CC                     clear_ram0:	
 10853                           ;	Called with FSR0 containing the base address, and
 10854                           ;	btemp/btemp+1 has the size to clear
 10855                           
 10856  09CC  0064               	clrwdt	;clear the watchdog before getting into this loop
 10857  09CD                     clrloop0:	
 10858  09CD  0180               	clrf	0	;clear RAM location pointed to by FSR
 10859  09CE  3101               	addfsr 0,1
 10860  09CF  3001               	movlw	1
 10861  09D0  02FE               	subwf	126,f
 10862  09D1  3000               	movlw	0
 10863  09D2  3BFF               	subwfb	127,f
 10864  09D3  087F               	movf	127,w
 10865  09D4  047E               	iorwf	126,w
 10866  09D5  1903               	btfsc	3,2
 10867  09D6  3400               	retlw	0	;all done for this memory range, return
 10868  09D7  29CD               	goto	clrloop0	;have we reached the end yet?
 10869                           
 10870                           	psect	cstackBANK1
 10871  00D2                     __pcstackBANK1:	
 10872  00D2                     ?_printf:	
 10873  00D2                     printf@fmt:	
 10874                           ; 2 bytes @ 0x0
 10875                           
 10876                           
 10877                           ; 2 bytes @ 0x0
 10878  00D2                     	ds	10
 10879  00DC                     ??_CONTROLLER_task:	
 10880                           
 10881                           ; 1 bytes @ 0xA
 10882  00DC                     	ds	2
 10883  00DE                     CONTROLLER_task@status:	
 10884                           
 10885                           ; 1 bytes @ 0xC
 10886  00DE                     	ds	1
 10887  00DF                     CONTROLLER_task@isActive:	
 10888                           
 10889                           ; 1 bytes @ 0xD
 10890  00DF                     	ds	1
 10891  00E0                     ??_main:	
 10892                           
 10893                           ; 1 bytes @ 0xE
 10894  00E0                     	ds	2
 10895                           
 10896                           	psect	cstackCOMMON
 10897  0077                     __pcstackCOMMON:	
 10898  0077                     ?_PMD_Initialize:	
 10899  0077                     ?_PIN_MANAGER_Initialize:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902  0077                     ?_OSCILLATOR_Initialize:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905  0077                     ?_I2C1_Initialize:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908  0077                     ?_PWM1_Initialize:	
 10909                           ; 1 bytes @ 0x0
 10910                           
 10911  0077                     ?_PWM2_Initialize:	
 10912                           ; 1 bytes @ 0x0
 10913                           
 10914  0077                     ?_ADCC_Initialize:	
 10915                           ; 1 bytes @ 0x0
 10916                           
 10917  0077                     ?_PWM4_Initialize:	
 10918                           ; 1 bytes @ 0x0
 10919                           
 10920  0077                     ?_PWM3_Initialize:	
 10921                           ; 1 bytes @ 0x0
 10922                           
 10923  0077                     ?_TMR2_Initialize:	
 10924                           ; 1 bytes @ 0x0
 10925                           
 10926  0077                     ?_TMR0_Initialize:	
 10927                           ; 1 bytes @ 0x0
 10928                           
 10929  0077                     ?_EUSART1_Initialize:	
 10930                           ; 1 bytes @ 0x0
 10931                           
 10932  0077                     ?_EUSART1_Receive_ISR:	
 10933                           ; 1 bytes @ 0x0
 10934                           
 10935  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
 10936                           ; 1 bytes @ 0x0
 10937                           
 10938  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
 10939                           ; 1 bytes @ 0x0
 10940                           
 10941  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10942                           ; 1 bytes @ 0x0
 10943                           
 10944  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10945                           ; 1 bytes @ 0x0
 10946                           
 10947  0077                     ?_EUSART1_DefaultErrorHandler:	
 10948                           ; 1 bytes @ 0x0
 10949                           
 10950  0077                     ?_EUSART1_RxDataHandler:	
 10951                           ; 1 bytes @ 0x0
 10952                           
 10953  0077                     ??_EUSART1_RxDataHandler:	
 10954                           ; 1 bytes @ 0x0
 10955                           
 10956  0077                     ?_TMR0_ISR:	
 10957                           ; 1 bytes @ 0x0
 10958                           
 10959  0077                     ??_TMR0_ISR:	
 10960                           ; 1 bytes @ 0x0
 10961                           
 10962  0077                     ?_I2C1_BusCollisionISR:	
 10963                           ; 1 bytes @ 0x0
 10964                           
 10965  0077                     ??_I2C1_BusCollisionISR:	
 10966                           ; 1 bytes @ 0x0
 10967                           
 10968  0077                     ?_I2C1_ISR:	
 10969                           ; 1 bytes @ 0x0
 10970                           
 10971  0077                     ?_ADCC_ThresholdISR:	
 10972                           ; 1 bytes @ 0x0
 10973                           
 10974  0077                     ??_ADCC_ThresholdISR:	
 10975                           ; 1 bytes @ 0x0
 10976                           
 10977  0077                     ?_TMR0_DefaultInterruptHandler:	
 10978                           ; 1 bytes @ 0x0
 10979                           
 10980  0077                     ??_TMR0_DefaultInterruptHandler:	
 10981                           ; 1 bytes @ 0x0
 10982                           
 10983  0077                     ?_I2C1_Stop:	
 10984                           ; 1 bytes @ 0x0
 10985                           
 10986  0077                     ??_I2C1_Stop:	
 10987                           ; 1 bytes @ 0x0
 10988                           
 10989  0077                     ?_I2C1_FunctionComplete:	
 10990                           ; 1 bytes @ 0x0
 10991                           
 10992  0077                     ??_I2C1_FunctionComplete:	
 10993                           ; 1 bytes @ 0x0
 10994                           
 10995  0077                     ?_ADCC_DefaultInterruptHandler:	
 10996                           ; 1 bytes @ 0x0
 10997                           
 10998  0077                     ??_ADCC_DefaultInterruptHandler:	
 10999                           ; 1 bytes @ 0x0
 11000                           
 11001  0077                     ?_CLOCK_init:	
 11002                           ; 1 bytes @ 0x0
 11003                           
 11004  0077                     ?_BUTTONS_init:	
 11005                           ; 1 bytes @ 0x0
 11006                           
 11007  0077                     ?_DMX_init:	
 11008                           ; 1 bytes @ 0x0
 11009                           
 11010  0077                     ?_BEAT_init:	
 11011                           ; 1 bytes @ 0x0
 11012                           
 11013  0077                     ?_TM1650_init:	
 11014                           ; 1 bytes @ 0x0
 11015                           
 11016  0077                     ?_CONTROLLER_init:	
 11017                           ; 1 bytes @ 0x0
 11018                           
 11019  0077                     ?_BUTTONS_task:	
 11020                           ; 1 bytes @ 0x0
 11021                           
 11022  0077                     ?_CONTROLLER_task:	
 11023                           ; 1 bytes @ 0x0
 11024                           
 11025  0077                     ?_BEAT_task:	
 11026                           ; 1 bytes @ 0x0
 11027                           
 11028  0077                     ?_LED_task:	
 11029                           ; 1 bytes @ 0x0
 11030                           
 11031  0077                     ?_GPIO_init:	
 11032                           ; 1 bytes @ 0x0
 11033                           
 11034  0077                     ?_CLOCK_timerCallback:	
 11035                           ; 1 bytes @ 0x0
 11036                           
 11037  0077                     ??_CLOCK_timerCallback:	
 11038                           ; 1 bytes @ 0x0
 11039                           
 11040  0077                     ?_menuSelection:	
 11041                           ; 1 bytes @ 0x0
 11042                           
 11043  0077                     ?_TM1650_enable:	
 11044                           ; 1 bytes @ 0x0
 11045                           
 11046  0077                     ?_DMX_interrupt:	
 11047                           ; 1 bytes @ 0x0
 11048                           
 11049  0077                     ??_DMX_interrupt:	
 11050                           ; 1 bytes @ 0x0
 11051                           
 11052  0077                     ?_SYSTEM_Initialize:	
 11053                           ; 1 bytes @ 0x0
 11054                           
 11055  0077                     ?_INTERRUPT_InterruptManager:	
 11056                           ; 1 bytes @ 0x0
 11057                           
 11058  0077                     ?_I2C1_WaitForLastPacketToComplete:	
 11059                           ; 1 bytes @ 0x0
 11060                           
 11061  0077                     ?_ADCC_StartConversion:	
 11062                           ; 1 bytes @ 0x0
 11063                           
 11064  0077                     ?_main:	
 11065                           ; 1 bytes @ 0x0
 11066                           
 11067  0077                     ?_BUTTONS_isClicked:	
 11068                           ; 1 bytes @ 0x0
 11069                           
 11070  0077                     ?_address_inc:	
 11071                           ; 1 bytes @ 0x0
 11072                           
 11073  0077                     ?_address_dec:	
 11074                           ; 1 bytes @ 0x0
 11075                           
 11076  0077                     ?_putch:	
 11077                           ; 1 bytes @ 0x0
 11078                           
 11079  0077                     ?_adcThresholdHandler:	
 11080                           ; 1 bytes @ 0x0
 11081                           
 11082  0077                     ??_adcThresholdHandler:	
 11083                           ; 1 bytes @ 0x0
 11084                           
 11085  0077                     ?_BEAT_detected:	
 11086                           ; 1 bytes @ 0x0
 11087                           
 11088                           
 11089                           ; 1 bytes @ 0x0
 11090  0077                     	ds	1
 11091  0078                     ??_EUSART1_Receive_ISR:	
 11092  0078                     ??_EUSART1_DefaultErrorHandler:	
 11093                           ; 1 bytes @ 0x1
 11094                           
 11095  0078                     I2C1_Stop@completion_code:	
 11096                           ; 1 bytes @ 0x1
 11097                           
 11098                           
 11099                           ; 1 bytes @ 0x1
 11100  0078                     	ds	1
 11101  0079                     ??_I2C1_ISR:	
 11102                           
 11103                           ; 1 bytes @ 0x2
 11104  0079                     	ds	4
 11105  007D                     DMX_interrupt@dummy:	
 11106                           
 11107                           ; 1 bytes @ 0x6
 11108  007D                     	ds	1
 11109  007E                     ??_INTERRUPT_InterruptManager:	
 11110                           
 11111                           	psect	cstackBANK0
 11112  0020                     __pcstackBANK0:	
 11113                           ; 1 bytes @ 0x7
 11114                           
 11115  0020                     ??_PMD_Initialize:	
 11116  0020                     ??_PIN_MANAGER_Initialize:	
 11117                           ; 1 bytes @ 0x0
 11118                           
 11119  0020                     ??_OSCILLATOR_Initialize:	
 11120                           ; 1 bytes @ 0x0
 11121                           
 11122  0020                     ??_I2C1_Initialize:	
 11123                           ; 1 bytes @ 0x0
 11124                           
 11125  0020                     ??_PWM1_Initialize:	
 11126                           ; 1 bytes @ 0x0
 11127                           
 11128  0020                     ??_PWM2_Initialize:	
 11129                           ; 1 bytes @ 0x0
 11130                           
 11131  0020                     ??_PWM4_Initialize:	
 11132                           ; 1 bytes @ 0x0
 11133                           
 11134  0020                     ??_PWM3_Initialize:	
 11135                           ; 1 bytes @ 0x0
 11136                           
 11137  0020                     ??_TMR2_Initialize:	
 11138                           ; 1 bytes @ 0x0
 11139                           
 11140  0020                     ?_EUSART1_SetRxInterruptHandler:	
 11141                           ; 1 bytes @ 0x0
 11142                           
 11143  0020                     ?_EUSART1_SetFramingErrorHandler:	
 11144                           ; 1 bytes @ 0x0
 11145                           
 11146  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 11147                           ; 1 bytes @ 0x0
 11148                           
 11149  0020                     ?_EUSART1_SetErrorHandler:	
 11150                           ; 1 bytes @ 0x0
 11151                           
 11152  0020                     ?_TMR0_SetInterruptHandler:	
 11153                           ; 1 bytes @ 0x0
 11154                           
 11155  0020                     ?_I2C1_MasterWriteTRBBuild:	
 11156                           ; 1 bytes @ 0x0
 11157                           
 11158  0020                     ?_I2C1_MasterTRBInsert:	
 11159                           ; 1 bytes @ 0x0
 11160                           
 11161  0020                     ?_ADCC_SetADTIInterruptHandler:	
 11162                           ; 1 bytes @ 0x0
 11163                           
 11164  0020                     ??_GPIO_init:	
 11165                           ; 1 bytes @ 0x0
 11166                           
 11167  0020                     ?_PWM3_LoadDutyValue:	
 11168                           ; 1 bytes @ 0x0
 11169                           
 11170  0020                     ?_PWM4_LoadDutyValue:	
 11171                           ; 1 bytes @ 0x0
 11172                           
 11173  0020                     ?_PWM1_LoadDutyValue:	
 11174                           ; 1 bytes @ 0x0
 11175                           
 11176  0020                     ?_PWM2_LoadDutyValue:	
 11177                           ; 1 bytes @ 0x0
 11178                           
 11179  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 11180                           ; 1 bytes @ 0x0
 11181                           
 11182  0020                     ??_ADCC_StartConversion:	
 11183                           ; 1 bytes @ 0x0
 11184                           
 11185  0020                     ?_ADCC_SetUpperThreshold:	
 11186                           ; 1 bytes @ 0x0
 11187                           
 11188  0020                     ?_init:	
 11189                           ; 1 bytes @ 0x0
 11190                           
 11191  0020                     ??_BUTTONS_isClicked:	
 11192                           ; 1 bytes @ 0x0
 11193                           
 11194  0020                     ??_BEAT_detected:	
 11195                           ; 1 bytes @ 0x0
 11196                           
 11197  0020                     ?_CLOCK_getTime:	
 11198                           ; 1 bytes @ 0x0
 11199                           
 11200  0020                     ?_strlen:	
 11201                           ; 2 bytes @ 0x0
 11202                           
 11203  0020                     ?___lwdiv:	
 11204                           ; 2 bytes @ 0x0
 11205                           
 11206  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 11207                           ; 2 bytes @ 0x0
 11208                           
 11209  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 11210                           ; 1 bytes @ 0x0
 11211                           
 11212  0020                     ADCC_StartConversion@channel:	
 11213                           ; 1 bytes @ 0x0
 11214                           
 11215  0020                     BUTTONS_isClicked@button:	
 11216                           ; 1 bytes @ 0x0
 11217                           
 11218  0020                     PWM3_LoadDutyValue@dutyValue:	
 11219                           ; 1 bytes @ 0x0
 11220                           
 11221  0020                     PWM4_LoadDutyValue@dutyValue:	
 11222                           ; 2 bytes @ 0x0
 11223                           
 11224  0020                     PWM1_LoadDutyValue@dutyValue:	
 11225                           ; 2 bytes @ 0x0
 11226                           
 11227  0020                     PWM2_LoadDutyValue@dutyValue:	
 11228                           ; 2 bytes @ 0x0
 11229                           
 11230  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11231                           ; 2 bytes @ 0x0
 11232                           
 11233  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11234                           ; 2 bytes @ 0x0
 11235                           
 11236  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 11237                           ; 2 bytes @ 0x0
 11238                           
 11239  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11240                           ; 2 bytes @ 0x0
 11241                           
 11242  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11243                           ; 2 bytes @ 0x0
 11244                           
 11245  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 11246                           ; 2 bytes @ 0x0
 11247                           
 11248  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 11249                           ; 2 bytes @ 0x0
 11250                           
 11251  0020                     init@port:	
 11252                           ; 2 bytes @ 0x0
 11253                           
 11254  0020                     ___lwdiv@divisor:	
 11255                           ; 2 bytes @ 0x0
 11256                           
 11257  0020                     strlen@s:	
 11258                           ; 2 bytes @ 0x0
 11259                           
 11260                           
 11261                           ; 2 bytes @ 0x0
 11262  0020                     	ds	1
 11263  0021                     I2C1_MasterTRBInsert@pflag:	
 11264  0021                     I2C1_MasterWriteTRBBuild@length:	
 11265                           ; 1 bytes @ 0x1
 11266                           
 11267                           
 11268                           ; 1 bytes @ 0x1
 11269  0021                     	ds	1
 11270  0022                     ??_ADCC_Initialize:	
 11271  0022                     ??_TMR0_Initialize:	
 11272                           ; 1 bytes @ 0x2
 11273                           
 11274  0022                     ??_EUSART1_Initialize:	
 11275                           ; 1 bytes @ 0x2
 11276                           
 11277  0022                     ??_EUSART1_SetRxInterruptHandler:	
 11278                           ; 1 bytes @ 0x2
 11279                           
 11280  0022                     ??_EUSART1_SetFramingErrorHandler:	
 11281                           ; 1 bytes @ 0x2
 11282                           
 11283  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 11284                           ; 1 bytes @ 0x2
 11285                           
 11286  0022                     ??_EUSART1_SetErrorHandler:	
 11287                           ; 1 bytes @ 0x2
 11288                           
 11289  0022                     ??_TMR0_SetInterruptHandler:	
 11290                           ; 1 bytes @ 0x2
 11291                           
 11292  0022                     ??_I2C1_MasterTRBInsert:	
 11293                           ; 1 bytes @ 0x2
 11294                           
 11295  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11296                           ; 1 bytes @ 0x2
 11297                           
 11298  0022                     ??_CLOCK_init:	
 11299                           ; 1 bytes @ 0x2
 11300                           
 11301  0022                     ??_DMX_init:	
 11302                           ; 1 bytes @ 0x2
 11303                           
 11304  0022                     ??_BEAT_init:	
 11305                           ; 1 bytes @ 0x2
 11306                           
 11307  0022                     ??_CLOCK_getTime:	
 11308                           ; 1 bytes @ 0x2
 11309                           
 11310  0022                     ??_BUTTONS_task:	
 11311                           ; 1 bytes @ 0x2
 11312                           
 11313  0022                     ??_LED_task:	
 11314                           ; 1 bytes @ 0x2
 11315                           
 11316  0022                     ??_strlen:	
 11317                           ; 1 bytes @ 0x2
 11318                           
 11319  0022                     ??_SYSTEM_Initialize:	
 11320                           ; 1 bytes @ 0x2
 11321                           
 11322  0022                     ??_PWM3_LoadDutyValue:	
 11323                           ; 1 bytes @ 0x2
 11324                           
 11325  0022                     ??_PWM4_LoadDutyValue:	
 11326                           ; 1 bytes @ 0x2
 11327                           
 11328  0022                     ??_PWM1_LoadDutyValue:	
 11329                           ; 1 bytes @ 0x2
 11330                           
 11331  0022                     ??_PWM2_LoadDutyValue:	
 11332                           ; 1 bytes @ 0x2
 11333                           
 11334  0022                     ??_ADCC_SetUpperThreshold:	
 11335                           ; 1 bytes @ 0x2
 11336                           
 11337  0022                     init@pin:	
 11338                           ; 1 bytes @ 0x2
 11339                           
 11340  0022                     I2C1_MasterWriteTRBBuild@address:	
 11341                           ; 1 bytes @ 0x2
 11342                           
 11343  0022                     ___lwdiv@dividend:	
 11344                           ; 2 bytes @ 0x2
 11345                           
 11346                           
 11347                           ; 2 bytes @ 0x2
 11348  0022                     	ds	1
 11349  0023                     ??_init:	
 11350  0023                     I2C1_MasterTRBInsert@count:	
 11351                           ; 1 bytes @ 0x3
 11352                           
 11353  0023                     strlen@a:	
 11354                           ; 1 bytes @ 0x3
 11355                           
 11356                           
 11357                           ; 2 bytes @ 0x3
 11358  0023                     	ds	1
 11359  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11360  0024                     ??___lwdiv:	
 11361                           ; 1 bytes @ 0x4
 11362                           
 11363  0024                     init@btn:	
 11364                           ; 1 bytes @ 0x4
 11365                           
 11366                           
 11367                           ; 1 bytes @ 0x4
 11368  0024                     	ds	1
 11369  0025                     ??_BUTTONS_init:	
 11370  0025                     BUTTONS_task@i:	
 11371                           ; 1 bytes @ 0x5
 11372                           
 11373  0025                     ___lwdiv@quotient:	
 11374                           ; 1 bytes @ 0x5
 11375                           
 11376                           
 11377                           ; 2 bytes @ 0x5
 11378  0025                     	ds	1
 11379  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11380  0026                     BUTTONS_task@time:	
 11381                           ; 1 bytes @ 0x6
 11382                           
 11383                           
 11384                           ; 2 bytes @ 0x6
 11385  0026                     	ds	1
 11386  0027                     ?_I2C1_MasterWrite:	
 11387  0027                     I2C1_MasterWrite@length:	
 11388                           ; 1 bytes @ 0x7
 11389                           
 11390  0027                     ___lwdiv@counter:	
 11391                           ; 1 bytes @ 0x7
 11392                           
 11393                           
 11394                           ; 1 bytes @ 0x7
 11395  0027                     	ds	1
 11396  0028                     ??_BEAT_task:	
 11397  0028                     ?___lwmod:	
 11398                           ; 1 bytes @ 0x8
 11399                           
 11400  0028                     BUTTONS_task@btn:	
 11401                           ; 2 bytes @ 0x8
 11402                           
 11403  0028                     I2C1_MasterWrite@address:	
 11404                           ; 1 bytes @ 0x8
 11405                           
 11406  0028                     ___lwmod@divisor:	
 11407                           ; 2 bytes @ 0x8
 11408                           
 11409                           
 11410                           ; 2 bytes @ 0x8
 11411  0028                     	ds	2
 11412  002A                     I2C1_MasterWrite@pflag:	
 11413  002A                     BEAT_task@offset:	
 11414                           ; 1 bytes @ 0xA
 11415                           
 11416  002A                     ___lwmod@dividend:	
 11417                           ; 2 bytes @ 0xA
 11418                           
 11419                           
 11420                           ; 2 bytes @ 0xA
 11421  002A                     	ds	1
 11422  002B                     ??_I2C1_MasterWrite:	
 11423                           
 11424                           ; 1 bytes @ 0xB
 11425  002B                     	ds	1
 11426  002C                     ??___lwmod:	
 11427                           
 11428                           ; 1 bytes @ 0xC
 11429  002C                     	ds	1
 11430  002D                     I2C1_MasterWrite@pdata:	
 11431  002D                     ___lwmod@counter:	
 11432                           ; 1 bytes @ 0xD
 11433                           
 11434                           
 11435                           ; 1 bytes @ 0xD
 11436  002D                     	ds	1
 11437  002E                     ?_writeData:	
 11438  002E                     writeData@data:	
 11439                           ; 1 bytes @ 0xE
 11440                           
 11441                           
 11442                           ; 1 bytes @ 0xE
 11443  002E                     	ds	1
 11444  002F                     ??_writeData:	
 11445                           
 11446                           ; 1 bytes @ 0xF
 11447  002F                     	ds	3
 11448  0032                     writeData@address:	
 11449                           
 11450                           ; 1 bytes @ 0x12
 11451  0032                     	ds	1
 11452  0033                     writeData@status:	
 11453                           
 11454                           ; 1 bytes @ 0x13
 11455  0033                     	ds	1
 11456  0034                     ?_TM1650_fastPrintNum:	
 11457  0034                     ??_TM1650_enable:	
 11458                           ; 1 bytes @ 0x14
 11459                           
 11460  0034                     ?_TM1650_setDigit:	
 11461                           ; 1 bytes @ 0x14
 11462                           
 11463  0034                     TM1650_enable@enable:	
 11464                           ; 1 bytes @ 0x14
 11465                           
 11466  0034                     TM1650_setDigit@data:	
 11467                           ; 1 bytes @ 0x14
 11468                           
 11469  0034                     TM1650_fastPrintNum@num:	
 11470                           ; 1 bytes @ 0x14
 11471                           
 11472                           
 11473                           ; 2 bytes @ 0x14
 11474  0034                     	ds	1
 11475  0035                     ??_TM1650_setDigit:	
 11476                           
 11477                           ; 1 bytes @ 0x15
 11478  0035                     	ds	1
 11479  0036                     ??_TM1650_fastPrintNum:	
 11480  0036                     TM1650_setDigit@digit:	
 11481                           ; 1 bytes @ 0x16
 11482                           
 11483                           
 11484                           ; 1 bytes @ 0x16
 11485  0036                     	ds	1
 11486  0037                     ??_CONTROLLER_init:	
 11487  0037                     ??_address_inc:	
 11488                           ; 1 bytes @ 0x17
 11489                           
 11490  0037                     ??_address_dec:	
 11491                           ; 1 bytes @ 0x17
 11492                           
 11493  0037                     ??_putch:	
 11494                           ; 1 bytes @ 0x17
 11495                           
 11496                           
 11497                           ; 1 bytes @ 0x17
 11498  0037                     	ds	1
 11499  0038                     putch@n:	
 11500                           
 11501                           ; 1 bytes @ 0x18
 11502  0038                     	ds	1
 11503  0039                     ?_fputc:	
 11504  0039                     fputc@c:	
 11505                           ; 2 bytes @ 0x19
 11506                           
 11507                           
 11508                           ; 2 bytes @ 0x19
 11509  0039                     	ds	2
 11510  003B                     fputc@fp:	
 11511                           
 11512                           ; 1 bytes @ 0x1B
 11513  003B                     	ds	1
 11514  003C                     ??_fputc:	
 11515                           
 11516                           ; 1 bytes @ 0x1C
 11517  003C                     	ds	5
 11518  0041                     ?_fputs:	
 11519  0041                     fputs@fp:	
 11520                           ; 2 bytes @ 0x21
 11521                           
 11522                           
 11523                           ; 1 bytes @ 0x21
 11524  0041                     	ds	1
 11525  0042                     ??_fputs:	
 11526                           
 11527                           ; 1 bytes @ 0x22
 11528  0042                     	ds	3
 11529  0045                     fputs@c:	
 11530                           
 11531                           ; 1 bytes @ 0x25
 11532  0045                     	ds	1
 11533  0046                     fputs@i:	
 11534                           
 11535                           ; 2 bytes @ 0x26
 11536  0046                     	ds	2
 11537  0048                     fputs@s:	
 11538                           
 11539                           ; 1 bytes @ 0x28
 11540  0048                     	ds	1
 11541  0049                     ?_pad:	
 11542  0049                     pad@buf:	
 11543                           ; 2 bytes @ 0x29
 11544                           
 11545                           
 11546                           ; 1 bytes @ 0x29
 11547  0049                     	ds	1
 11548  004A                     pad@p:	
 11549                           
 11550                           ; 2 bytes @ 0x2A
 11551  004A                     	ds	2
 11552  004C                     ??_pad:	
 11553                           
 11554                           ; 1 bytes @ 0x2C
 11555  004C                     	ds	1
 11556  004D                     pad@i:	
 11557                           
 11558                           ; 2 bytes @ 0x2D
 11559  004D                     	ds	2
 11560  004F                     pad@w:	
 11561                           
 11562                           ; 2 bytes @ 0x2F
 11563  004F                     	ds	2
 11564  0051                     pad@fp:	
 11565                           
 11566                           ; 1 bytes @ 0x31
 11567  0051                     	ds	1
 11568  0052                     ?_ctoa:	
 11569  0052                     ctoa@c:	
 11570                           ; 2 bytes @ 0x32
 11571                           
 11572                           
 11573                           ; 1 bytes @ 0x32
 11574  0052                     	ds	2
 11575  0054                     ??_ctoa:	
 11576                           
 11577                           ; 1 bytes @ 0x34
 11578  0054                     	ds	1
 11579  0055                     ctoa@w:	
 11580                           
 11581                           ; 2 bytes @ 0x35
 11582  0055                     	ds	2
 11583  0057                     ctoa@fp:	
 11584                           
 11585                           ; 1 bytes @ 0x37
 11586  0057                     	ds	1
 11587  0058                     ?_vfpfcnvrt:	
 11588  0058                     vfpfcnvrt@fmt:	
 11589                           ; 2 bytes @ 0x38
 11590                           
 11591                           
 11592                           ; 1 bytes @ 0x38
 11593  0058                     	ds	1
 11594  0059                     vfpfcnvrt@ap:	
 11595                           
 11596                           ; 1 bytes @ 0x39
 11597  0059                     	ds	1
 11598  005A                     ??_vfpfcnvrt:	
 11599                           
 11600                           ; 1 bytes @ 0x3A
 11601  005A                     	ds	5
 11602  005F                     vfpfcnvrt@c:	
 11603                           
 11604                           ; 1 bytes @ 0x3F
 11605  005F                     	ds	1
 11606  0060                     vfpfcnvrt@fp:	
 11607                           
 11608                           ; 1 bytes @ 0x40
 11609  0060                     	ds	1
 11610  0061                     ?_vfprintf:	
 11611  0061                     vfprintf@fmt:	
 11612                           ; 2 bytes @ 0x41
 11613                           
 11614                           
 11615                           ; 2 bytes @ 0x41
 11616  0061                     	ds	2
 11617  0063                     vfprintf@ap:	
 11618                           
 11619                           ; 1 bytes @ 0x43
 11620  0063                     	ds	1
 11621  0064                     ??_vfprintf:	
 11622                           
 11623                           ; 1 bytes @ 0x44
 11624  0064                     	ds	2
 11625  0066                     vfprintf@fp:	
 11626                           
 11627                           ; 1 bytes @ 0x46
 11628  0066                     	ds	1
 11629  0067                     vfprintf@cfmt:	
 11630                           
 11631                           ; 2 bytes @ 0x47
 11632  0067                     	ds	2
 11633  0069                     ??_printf:	
 11634                           
 11635                           ; 1 bytes @ 0x49
 11636  0069                     	ds	3
 11637  006C                     printf@ap:	
 11638                           
 11639                           ; 1 bytes @ 0x4C
 11640  006C                     	ds	1
 11641  006D                     ??_TM1650_init:	
 11642  006D                     ??_menuSelection:	
 11643                           ; 1 bytes @ 0x4D
 11644                           
 11645                           
 11646                           ; 1 bytes @ 0x4D
 11647  006D                     	ds	2
 11648                           
 11649                           	psect	maintext
 11650  0EC9                     __pmaintext:	
 11651 ;;
 11652 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11653 ;;
 11654 ;; *************** function _main *****************
 11655 ;; Defined at:
 11656 ;;		line 58 in file "main.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;		None
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;		None
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      void 
 11663 ;; Registers used:
 11664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11665 ;; Tracked objects:
 11666 ;;		On entry : B3F/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11672 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11673 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11674 ;;Total ram usage:        2 bytes
 11675 ;; Hardware stack levels required when called:   19
 11676 ;; This function calls:
 11677 ;;		_BEAT_init
 11678 ;;		_BEAT_task
 11679 ;;		_BUTTONS_init
 11680 ;;		_BUTTONS_task
 11681 ;;		_CLOCK_getTime
 11682 ;;		_CLOCK_init
 11683 ;;		_CONTROLLER_init
 11684 ;;		_CONTROLLER_task
 11685 ;;		_DMX_init
 11686 ;;		_LED_task
 11687 ;;		_SYSTEM_Initialize
 11688 ;;		_TM1650_init
 11689 ;; This function is called by:
 11690 ;;		Startup code after reset
 11691 ;; This function uses a non-reentrant model
 11692 ;;
 11693                           
 11694                           
 11695                           ;psect for function _main
 11696  0EC9                     _main:	
 11697                           
 11698                           ;main.c: 61:     SYSTEM_Initialize();
 11699                           
 11700                           ;incstack = 0
 11701 ;; hardware stack exceeded
 11702                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11703  0EC9  318C  245C  318E   	fcall	_SYSTEM_Initialize
 11704                           
 11705                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11706  0ECC  3015               	movlw	21
 11707  0ECD  0141               	movlb	1	; select bank1
 11708  0ECE  00E1               	movwf	(??_main^(0+128)+1)
 11709  0ECF  304B               	movlw	75
 11710  0ED0  00E0               	movwf	??_main^(0+128)
 11711  0ED1  30BE               	movlw	190
 11712  0ED2                     u4617:	
 11713  0ED2  0B89               	decfsz	9,f
 11714  0ED3  2ED2               	goto	u4617
 11715  0ED4  0BE0               	decfsz	??_main^(0+128),f
 11716  0ED5  2ED2               	goto	u4617
 11717  0ED6  0BE1               	decfsz	(??_main^(0+128)+1),f
 11718  0ED7  2ED2               	goto	u4617
 11719  0ED8  0000               	nop
 11720                           
 11721                           ;main.c: 63:     CLOCK_init();
 11722  0ED9  3189  2118  318E   	fcall	_CLOCK_init
 11723                           
 11724                           ;main.c: 64:     BUTTONS_init();
 11725  0EDC  318F  2705  318E   	fcall	_BUTTONS_init
 11726                           
 11727                           ;main.c: 65:     DMX_init();
 11728  0EDF  3189  2120  318E   	fcall	_DMX_init
 11729                           
 11730                           ;main.c: 66:     BEAT_init();
 11731  0EE2  318A  22B3  318E   	fcall	_BEAT_init
 11732                           
 11733                           ;main.c: 68:     (INTCONbits.GIE = 1);
 11734  0EE5  178B               	bsf	11,7	;volatile
 11735                           
 11736                           ;main.c: 69:     (INTCONbits.PEIE = 1);
 11737  0EE6  170B               	bsf	11,6	;volatile
 11738                           
 11739                           ;main.c: 71:     TM1650_init();
 11740  0EE7  318A  2275  318E   	fcall	_TM1650_init
 11741                           
 11742                           ;main.c: 72:     CONTROLLER_init();
 11743  0EEA  3189  2195  318E   	fcall	_CONTROLLER_init
 11744                           
 11745                           ;main.c: 73:     startTime = CLOCK_getTime();
 11746  0EED  3189  2143  318E   	fcall	_CLOCK_getTime
 11747  0EF0  0140               	movlb	0	; select bank0
 11748  0EF1  0821               	movf	?_CLOCK_getTime+1,w
 11749  0EF2  0141               	movlb	1	; select bank1
 11750  0EF3  00B8               	movwf	(_startTime+1)^(0+128)
 11751  0EF4  0140               	movlb	0	; select bank0
 11752  0EF5  0820               	movf	?_CLOCK_getTime,w
 11753  0EF6  0141               	movlb	1	; select bank1
 11754  0EF7  00B7               	movwf	_startTime^(0+128)
 11755  0EF8                     l5658:	
 11756                           
 11757                           ;main.c: 76:     {;main.c: 77:         BUTTONS_task();
 11758  0EF8  3184  242A  318E   	fcall	_BUTTONS_task
 11759                           
 11760                           ;main.c: 78:         CONTROLLER_task();
 11761  0EFB  3180  2077  318E   	fcall	_CONTROLLER_task
 11762                           
 11763                           ;main.c: 79:         BEAT_task();
 11764  0EFE  3185  250F  318E   	fcall	_BEAT_task
 11765                           
 11766                           ;main.c: 80:         LED_task();
 11767  0F01  3183  2331  318E   	fcall	_LED_task
 11768  0F04  2EF8               	goto	l5658
 11769  0F05                     __end_of_main:	
 11770                           
 11771                           	psect	text1
 11772  0A75                     __ptext1:	
 11773 ;; *************** function _TM1650_init *****************
 11774 ;; Defined at:
 11775 ;;		line 51 in file "tm1650.c"
 11776 ;; Parameters:    Size  Location     Type
 11777 ;;		None
 11778 ;; Auto vars:     Size  Location     Type
 11779 ;;		None
 11780 ;; Return value:  Size  Location     Type
 11781 ;;                  1    wreg      void 
 11782 ;; Registers used:
 11783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11784 ;; Tracked objects:
 11785 ;;		On entry : 0/0
 11786 ;;		On exit  : 0/0
 11787 ;;		Unchanged: 0/0
 11788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11793 ;;Total ram usage:        0 bytes
 11794 ;; Hardware stack levels used:    1
 11795 ;; Hardware stack levels required when called:   17
 11796 ;; This function calls:
 11797 ;;		_TM1650_enable
 11798 ;;		_printf
 11799 ;; This function is called by:
 11800 ;;		_main
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804                           
 11805                           ;psect for function _TM1650_init
 11806  0A75                     _TM1650_init:	
 11807                           
 11808                           ;tm1650.c: 53:     TM1650_enable(1);
 11809                           
 11810                           ;incstack = 0
 11811 ;; hardware stack exceeded
 11812                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11813  0A75  3001               	movlw	1
 11814  0A76  318A  2289  318A   	fcall	_TM1650_enable
 11815                           
 11816                           ;tm1650.c: 54:     printf("    ");
 11817  0A79  3061               	movlw	low (STR_6| (0+32768))
 11818  0A7A  0141               	movlb	1	; select bank1
 11819  0A7B  00D2               	movwf	printf@fmt^(0+128)
 11820  0A7C  3090               	movlw	high (STR_6| (0+32768))
 11821  0A7D  00D3               	movwf	(printf@fmt^(0+128)+1)
 11822  0A7E  318A  229E  318A   	fcall	_printf
 11823                           
 11824                           ;tm1650.c: 55:     printf("\r");
 11825  0A81  3047               	movlw	low ((STR_16+4)| (0+32768))
 11826  0A82  0141               	movlb	1	; select bank1
 11827  0A83  00D2               	movwf	printf@fmt^(0+128)
 11828  0A84  3090               	movlw	high ((STR_16+4)| (0+32768))
 11829  0A85  00D3               	movwf	(printf@fmt^(0+128)+1)
 11830  0A86  318A  229E         	fcall	_printf
 11831  0A88  0008               	return
 11832  0A89                     __end_of_TM1650_init:	
 11833                           
 11834                           	psect	text2
 11835  0C5C                     __ptext2:	
 11836 ;; *************** function _SYSTEM_Initialize *****************
 11837 ;; Defined at:
 11838 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;		None
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;		None
 11843 ;; Return value:  Size  Location     Type
 11844 ;;                  1    wreg      void 
 11845 ;; Registers used:
 11846 ;;		wreg, status,2, status,0, pclath, cstack
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/0
 11849 ;;		On exit  : 0/0
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11856 ;;Total ram usage:        0 bytes
 11857 ;; Hardware stack levels used:    1
 11858 ;; Hardware stack levels required when called:    6
 11859 ;; This function calls:
 11860 ;;		_ADCC_Initialize
 11861 ;;		_EUSART1_Initialize
 11862 ;;		_I2C1_Initialize
 11863 ;;		_OSCILLATOR_Initialize
 11864 ;;		_PIN_MANAGER_Initialize
 11865 ;;		_PMD_Initialize
 11866 ;;		_PWM1_Initialize
 11867 ;;		_PWM2_Initialize
 11868 ;;		_PWM3_Initialize
 11869 ;;		_PWM4_Initialize
 11870 ;;		_TMR0_Initialize
 11871 ;;		_TMR2_Initialize
 11872 ;; This function is called by:
 11873 ;;		_main
 11874 ;; This function uses a non-reentrant model
 11875 ;;
 11876                           
 11877                           
 11878                           ;psect for function _SYSTEM_Initialize
 11879  0C5C                     _SYSTEM_Initialize:	
 11880                           
 11881                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11882                           
 11883                           ;incstack = 0
 11884                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11885  0C5C  3189  218B  318C   	fcall	_PMD_Initialize
 11886                           
 11887                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11888  0C5F  318D  25EC  318C   	fcall	_PIN_MANAGER_Initialize
 11889                           
 11890                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11891  0C62  3189  2182  318C   	fcall	_OSCILLATOR_Initialize
 11892                           
 11893                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 11894  0C65  318B  2344  318C   	fcall	_I2C1_Initialize
 11895                           
 11896                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 11897  0C68  3189  21A0  318C   	fcall	_PWM1_Initialize
 11898                           
 11899                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 11900  0C6B  3189  21AB  318C   	fcall	_PWM2_Initialize
 11901                           
 11902                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 11903  0C6E  318C  24A6  318C   	fcall	_ADCC_Initialize
 11904                           
 11905                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 11906  0C71  3189  21C1  318C   	fcall	_PWM4_Initialize
 11907                           
 11908                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 11909  0C74  3189  21B6  318C   	fcall	_PWM3_Initialize
 11910                           
 11911                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 11912  0C77  318A  220B  318C   	fcall	_TMR2_Initialize
 11913                           
 11914                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 11915  0C7A  318A  2261  318C   	fcall	_TMR0_Initialize
 11916                           
 11917                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 11918  0C7D  318D  25B7         	fcall	_EUSART1_Initialize
 11919  0C7F  0008               	return
 11920  0C80                     __end_of_SYSTEM_Initialize:	
 11921                           
 11922                           	psect	text3
 11923  0A0B                     __ptext3:	
 11924 ;; *************** function _TMR2_Initialize *****************
 11925 ;; Defined at:
 11926 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;		None
 11929 ;; Auto vars:     Size  Location     Type
 11930 ;;		None
 11931 ;; Return value:  Size  Location     Type
 11932 ;;                  1    wreg      void 
 11933 ;; Registers used:
 11934 ;;		wreg, status,2
 11935 ;; Tracked objects:
 11936 ;;		On entry : 0/0
 11937 ;;		On exit  : 0/0
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11944 ;;Total ram usage:        0 bytes
 11945 ;; Hardware stack levels used:    1
 11946 ;; Hardware stack levels required when called:    4
 11947 ;; This function calls:
 11948 ;;		Nothing
 11949 ;; This function is called by:
 11950 ;;		_SYSTEM_Initialize
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           
 11955                           ;psect for function _TMR2_Initialize
 11956  0A0B                     _TMR2_Initialize:	
 11957                           
 11958                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11959                           
 11960                           ;incstack = 0
 11961                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11962  0A0B  3001               	movlw	1
 11963  0A0C  0145               	movlb	5	; select bank5
 11964  0A0D  0090               	movwf	16	;volatile
 11965                           
 11966                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11967  0A0E  018F               	clrf	15	;volatile
 11968                           
 11969                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11970  0A0F  0191               	clrf	17	;volatile
 11971                           
 11972                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 11973  0A10  30FF               	movlw	255
 11974  0A11  008D               	movwf	13	;volatile
 11975                           
 11976                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11977  0A12  018C               	clrf	12	;volatile
 11978                           
 11979                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11980  0A13  014E               	movlb	14	; select bank14
 11981  0A14  1090               	bcf	16,1	;volatile
 11982                           
 11983                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xD0;
 11984  0A15  30D0               	movlw	208
 11985  0A16  0145               	movlb	5	; select bank5
 11986  0A17  008E               	movwf	14	;volatile
 11987  0A18  0008               	return
 11988  0A19                     __end_of_TMR2_Initialize:	
 11989                           
 11990                           	psect	text4
 11991  0A61                     __ptext4:	
 11992 ;; *************** function _TMR0_Initialize *****************
 11993 ;; Defined at:
 11994 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;		None
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      void 
 12001 ;; Registers used:
 12002 ;;		wreg, status,2, status,0, pclath, cstack
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12012 ;;Total ram usage:        0 bytes
 12013 ;; Hardware stack levels used:    1
 12014 ;; Hardware stack levels required when called:    5
 12015 ;; This function calls:
 12016 ;;		_TMR0_SetInterruptHandler
 12017 ;; This function is called by:
 12018 ;;		_SYSTEM_Initialize
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           
 12023                           ;psect for function _TMR0_Initialize
 12024  0A61                     _TMR0_Initialize:	
 12025                           
 12026                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 12027                           
 12028                           ;incstack = 0
 12029                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12030  0A61  3045               	movlw	69
 12031  0A62  014B               	movlb	11	; select bank11
 12032  0A63  009F               	movwf	31	;volatile
 12033                           
 12034                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 12035  0A64  30F9               	movlw	249
 12036  0A65  009D               	movwf	29	;volatile
 12037                           
 12038                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12039  0A66  019C               	clrf	28	;volatile
 12040                           
 12041                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12042  0A67  014E               	movlb	14	; select bank14
 12043  0A68  128C               	bcf	12,5	;volatile
 12044                           
 12045                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12046  0A69  1696               	bsf	22,5	;volatile
 12047                           
 12048                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12049  0A6A  30FF               	movlw	low _TMR0_DefaultInterruptHandler
 12050  0A6B  0140               	movlb	0	; select bank0
 12051  0A6C  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12052  0A6D  3007               	movlw	high _TMR0_DefaultInterruptHandler
 12053  0A6E  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12054  0A6F  3189  214C         	fcall	_TMR0_SetInterruptHandler
 12055                           
 12056                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12057  0A71  3080               	movlw	128
 12058  0A72  014B               	movlb	11	; select bank11
 12059  0A73  009E               	movwf	30	;volatile
 12060  0A74  0008               	return
 12061  0A75                     __end_of_TMR0_Initialize:	
 12062                           
 12063                           	psect	text5
 12064  09C1                     __ptext5:	
 12065 ;; *************** function _PWM4_Initialize *****************
 12066 ;; Defined at:
 12067 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12068 ;; Parameters:    Size  Location     Type
 12069 ;;		None
 12070 ;; Auto vars:     Size  Location     Type
 12071 ;;		None
 12072 ;; Return value:  Size  Location     Type
 12073 ;;                  1    wreg      void 
 12074 ;; Registers used:
 12075 ;;		wreg, status,2, status,0
 12076 ;; Tracked objects:
 12077 ;;		On entry : 0/0
 12078 ;;		On exit  : 0/0
 12079 ;;		Unchanged: 0/0
 12080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12085 ;;Total ram usage:        0 bytes
 12086 ;; Hardware stack levels used:    1
 12087 ;; Hardware stack levels required when called:    4
 12088 ;; This function calls:
 12089 ;;		Nothing
 12090 ;; This function is called by:
 12091 ;;		_SYSTEM_Initialize
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           
 12096                           ;psect for function _PWM4_Initialize
 12097  09C1                     _PWM4_Initialize:	
 12098                           
 12099                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12100                           
 12101                           ;incstack = 0
 12102                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12103  09C1  308C               	movlw	140
 12104  09C2  0146               	movlb	6	; select bank6
 12105  09C3  009A               	movwf	26	;volatile
 12106                           
 12107                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12108  09C4  0199               	clrf	25	;volatile
 12109                           
 12110                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12111  09C5  0198               	clrf	24	;volatile
 12112                           
 12113                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12114  09C6  0144               	movlb	4	; select bank4
 12115  09C7  081E               	movf	30,w	;volatile
 12116  09C8  393F               	andlw	-193
 12117  09C9  3840               	iorlw	64
 12118  09CA  009E               	movwf	30	;volatile
 12119  09CB  0008               	return
 12120  09CC                     __end_of_PWM4_Initialize:	
 12121                           
 12122                           	psect	text6
 12123  09B6                     __ptext6:	
 12124 ;; *************** function _PWM3_Initialize *****************
 12125 ;; Defined at:
 12126 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12127 ;; Parameters:    Size  Location     Type
 12128 ;;		None
 12129 ;; Auto vars:     Size  Location     Type
 12130 ;;		None
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  1    wreg      void 
 12133 ;; Registers used:
 12134 ;;		wreg, status,2, status,0
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12144 ;;Total ram usage:        0 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:    4
 12147 ;; This function calls:
 12148 ;;		Nothing
 12149 ;; This function is called by:
 12150 ;;		_SYSTEM_Initialize
 12151 ;; This function uses a non-reentrant model
 12152 ;;
 12153                           
 12154                           
 12155                           ;psect for function _PWM3_Initialize
 12156  09B6                     _PWM3_Initialize:	
 12157                           
 12158                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12159                           
 12160                           ;incstack = 0
 12161                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12162  09B6  308C               	movlw	140
 12163  09B7  0146               	movlb	6	; select bank6
 12164  09B8  0096               	movwf	22	;volatile
 12165                           
 12166                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12167  09B9  0195               	clrf	21	;volatile
 12168                           
 12169                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12170  09BA  0194               	clrf	20	;volatile
 12171                           
 12172                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12173  09BB  0144               	movlb	4	; select bank4
 12174  09BC  081E               	movf	30,w	;volatile
 12175  09BD  39CF               	andlw	-49
 12176  09BE  3810               	iorlw	16
 12177  09BF  009E               	movwf	30	;volatile
 12178  09C0  0008               	return
 12179  09C1                     __end_of_PWM3_Initialize:	
 12180                           
 12181                           	psect	text7
 12182  09AB                     __ptext7:	
 12183 ;; *************** function _PWM2_Initialize *****************
 12184 ;; Defined at:
 12185 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12186 ;; Parameters:    Size  Location     Type
 12187 ;;		None
 12188 ;; Auto vars:     Size  Location     Type
 12189 ;;		None
 12190 ;; Return value:  Size  Location     Type
 12191 ;;                  1    wreg      void 
 12192 ;; Registers used:
 12193 ;;		wreg, status,2, status,0
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12203 ;;Total ram usage:        0 bytes
 12204 ;; Hardware stack levels used:    1
 12205 ;; Hardware stack levels required when called:    4
 12206 ;; This function calls:
 12207 ;;		Nothing
 12208 ;; This function is called by:
 12209 ;;		_SYSTEM_Initialize
 12210 ;; This function uses a non-reentrant model
 12211 ;;
 12212                           
 12213                           
 12214                           ;psect for function _PWM2_Initialize
 12215  09AB                     _PWM2_Initialize:	
 12216                           
 12217                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12218                           
 12219                           ;incstack = 0
 12220                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12221  09AB  308C               	movlw	140
 12222  09AC  0146               	movlb	6	; select bank6
 12223  09AD  0092               	movwf	18	;volatile
 12224                           
 12225                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12226  09AE  0191               	clrf	17	;volatile
 12227                           
 12228                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12229  09AF  0190               	clrf	16	;volatile
 12230                           
 12231                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12232  09B0  0144               	movlb	4	; select bank4
 12233  09B1  081E               	movf	30,w	;volatile
 12234  09B2  39F3               	andlw	-13
 12235  09B3  3804               	iorlw	4
 12236  09B4  009E               	movwf	30	;volatile
 12237  09B5  0008               	return
 12238  09B6                     __end_of_PWM2_Initialize:	
 12239                           
 12240                           	psect	text8
 12241  09A0                     __ptext8:	
 12242 ;; *************** function _PWM1_Initialize *****************
 12243 ;; Defined at:
 12244 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;		None
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;		None
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  1    wreg      void 
 12251 ;; Registers used:
 12252 ;;		wreg, status,2, status,0
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12262 ;;Total ram usage:        0 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    4
 12265 ;; This function calls:
 12266 ;;		Nothing
 12267 ;; This function is called by:
 12268 ;;		_SYSTEM_Initialize
 12269 ;; This function uses a non-reentrant model
 12270 ;;
 12271                           
 12272                           
 12273                           ;psect for function _PWM1_Initialize
 12274  09A0                     _PWM1_Initialize:	
 12275                           
 12276                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12277                           
 12278                           ;incstack = 0
 12279                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12280  09A0  308C               	movlw	140
 12281  09A1  0146               	movlb	6	; select bank6
 12282  09A2  008E               	movwf	14	;volatile
 12283                           
 12284                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12285  09A3  018D               	clrf	13	;volatile
 12286                           
 12287                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12288  09A4  018C               	clrf	12	;volatile
 12289                           
 12290                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12291  09A5  0144               	movlb	4	; select bank4
 12292  09A6  081E               	movf	30,w	;volatile
 12293  09A7  39FC               	andlw	-4
 12294  09A8  3801               	iorlw	1
 12295  09A9  009E               	movwf	30	;volatile
 12296  09AA  0008               	return
 12297  09AB                     __end_of_PWM1_Initialize:	
 12298                           
 12299                           	psect	text9
 12300  098B                     __ptext9:	
 12301 ;; *************** function _PMD_Initialize *****************
 12302 ;; Defined at:
 12303 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12304 ;; Parameters:    Size  Location     Type
 12305 ;;		None
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;		None
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  1    wreg      void 
 12310 ;; Registers used:
 12311 ;;		status,2
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12321 ;;Total ram usage:        0 bytes
 12322 ;; Hardware stack levels used:    1
 12323 ;; Hardware stack levels required when called:    4
 12324 ;; This function calls:
 12325 ;;		Nothing
 12326 ;; This function is called by:
 12327 ;;		_SYSTEM_Initialize
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           
 12332                           ;psect for function _PMD_Initialize
 12333  098B                     _PMD_Initialize:	
 12334                           
 12335                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12336                           
 12337                           ;incstack = 0
 12338                           ; Regs used in _PMD_Initialize: [status,2]
 12339  098B  014F               	movlb	15	; select bank15
 12340  098C  0196               	clrf	22	;volatile
 12341                           
 12342                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12343  098D  0197               	clrf	23	;volatile
 12344                           
 12345                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12346  098E  0198               	clrf	24	;volatile
 12347                           
 12348                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12349  098F  0199               	clrf	25	;volatile
 12350                           
 12351                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12352  0990  019A               	clrf	26	;volatile
 12353                           
 12354                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12355  0991  019B               	clrf	27	;volatile
 12356                           
 12357                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12358  0992  019C               	clrf	28	;volatile
 12359                           
 12360                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12361  0993  019D               	clrf	29	;volatile
 12362  0994  0008               	return
 12363  0995                     __end_of_PMD_Initialize:	
 12364                           
 12365                           	psect	text10
 12366  0DEC                     __ptext10:	
 12367 ;; *************** function _PIN_MANAGER_Initialize *****************
 12368 ;; Defined at:
 12369 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12370 ;; Parameters:    Size  Location     Type
 12371 ;;		None
 12372 ;; Auto vars:     Size  Location     Type
 12373 ;;		None
 12374 ;; Return value:  Size  Location     Type
 12375 ;;                  1    wreg      void 
 12376 ;; Registers used:
 12377 ;;		wreg, status,2
 12378 ;; Tracked objects:
 12379 ;;		On entry : 0/0
 12380 ;;		On exit  : 0/0
 12381 ;;		Unchanged: 0/0
 12382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12387 ;;Total ram usage:        0 bytes
 12388 ;; Hardware stack levels used:    1
 12389 ;; Hardware stack levels required when called:    4
 12390 ;; This function calls:
 12391 ;;		Nothing
 12392 ;; This function is called by:
 12393 ;;		_SYSTEM_Initialize
 12394 ;; This function uses a non-reentrant model
 12395 ;;
 12396                           
 12397                           
 12398                           ;psect for function _PIN_MANAGER_Initialize
 12399  0DEC                     _PIN_MANAGER_Initialize:	
 12400                           
 12401                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12402                           
 12403                           ;incstack = 0
 12404                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12405  0DEC  0140               	movlb	0	; select bank0
 12406  0DED  0198               	clrf	24	;volatile
 12407                           
 12408                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12409  0DEE  0199               	clrf	25	;volatile
 12410                           
 12411                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12412  0DEF  019A               	clrf	26	;volatile
 12413                           
 12414                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12415  0DF0  303F               	movlw	63
 12416  0DF1  0092               	movwf	18	;volatile
 12417                           
 12418                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12419  0DF2  30F0               	movlw	240
 12420  0DF3  0093               	movwf	19	;volatile
 12421                           
 12422                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x06;
 12423  0DF4  3006               	movlw	6
 12424  0DF5  0094               	movwf	20	;volatile
 12425                           
 12426                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12427  0DF6  30FF               	movlw	255
 12428  0DF7  017E               	movlb	62	; select bank62
 12429  0DF8  00CE               	movwf	78	;volatile
 12430                           
 12431                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12432  0DF9  30E0               	movlw	224
 12433  0DFA  00C3               	movwf	67	;volatile
 12434                           
 12435                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12436  0DFB  3007               	movlw	7
 12437  0DFC  00B8               	movwf	56	;volatile
 12438                           
 12439                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12440  0DFD  01C4               	clrf	68	;volatile
 12441                           
 12442                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12443  0DFE  01B9               	clrf	57	;volatile
 12444                           
 12445                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12446  0DFF  01CF               	clrf	79	;volatile
 12447                           
 12448                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12449  0E00  01BA               	clrf	58	;volatile
 12450                           
 12451                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12452  0E01  01C5               	clrf	69	;volatile
 12453                           
 12454                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12455  0E02  01D0               	clrf	80	;volatile
 12456                           
 12457                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12458  0E03  3037               	movlw	55
 12459  0E04  00BB               	movwf	59	;volatile
 12460                           
 12461                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12462  0E05  30F0               	movlw	240
 12463  0E06  00C6               	movwf	70	;volatile
 12464                           
 12465                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12466  0E07  30FF               	movlw	255
 12467  0E08  00D1               	movwf	81	;volatile
 12468                           
 12469                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12470  0E09  3005               	movlw	5
 12471  0E0A  017D               	movlb	61	; select bank61
 12472  0E0B  00C5               	movwf	69	;volatile
 12473                           
 12474                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12475  0E0C  3014               	movlw	20
 12476  0E0D  017E               	movlb	62	; select bank62
 12477  0E0E  0094               	movwf	20	;volatile
 12478                           
 12479                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12480  0E0F  300B               	movlw	11
 12481  0E10  00A3               	movwf	35	;volatile
 12482                           
 12483                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12484  0E11  300C               	movlw	12
 12485  0E12  00A4               	movwf	36	;volatile
 12486                           
 12487                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12488  0E13  3013               	movlw	19
 12489  0E14  0095               	movwf	21	;volatile
 12490                           
 12491                           ;mcc_generated_files/pin_manager.c: 111:     RC5PPS = 0x09;
 12492  0E15  3009               	movlw	9
 12493  0E16  00A5               	movwf	37	;volatile
 12494                           
 12495                           ;mcc_generated_files/pin_manager.c: 112:     RC6PPS = 0x0A;
 12496  0E17  300A               	movlw	10
 12497  0E18  00A6               	movwf	38	;volatile
 12498                           
 12499                           ;mcc_generated_files/pin_manager.c: 113:     RC7PPS = 0x09;
 12500  0E19  3009               	movlw	9
 12501  0E1A  00A7               	movwf	39	;volatile
 12502                           
 12503                           ;mcc_generated_files/pin_manager.c: 114:     SSP1DATPPS = 0x04;
 12504  0E1B  3004               	movlw	4
 12505  0E1C  017D               	movlb	61	; select bank61
 12506  0E1D  00C6               	movwf	70	;volatile
 12507                           
 12508                           ;mcc_generated_files/pin_manager.c: 115:     RX1DTPPS = 0x0C;
 12509  0E1E  300C               	movlw	12
 12510  0E1F  00CB               	movwf	75	;volatile
 12511  0E20  0008               	return
 12512  0E21                     __end_of_PIN_MANAGER_Initialize:	
 12513                           
 12514                           	psect	text11
 12515  0982                     __ptext11:	
 12516 ;; *************** function _OSCILLATOR_Initialize *****************
 12517 ;; Defined at:
 12518 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12519 ;; Parameters:    Size  Location     Type
 12520 ;;		None
 12521 ;; Auto vars:     Size  Location     Type
 12522 ;;		None
 12523 ;; Return value:  Size  Location     Type
 12524 ;;                  1    wreg      void 
 12525 ;; Registers used:
 12526 ;;		wreg, status,2
 12527 ;; Tracked objects:
 12528 ;;		On entry : 0/0
 12529 ;;		On exit  : 0/0
 12530 ;;		Unchanged: 0/0
 12531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12536 ;;Total ram usage:        0 bytes
 12537 ;; Hardware stack levels used:    1
 12538 ;; Hardware stack levels required when called:    4
 12539 ;; This function calls:
 12540 ;;		Nothing
 12541 ;; This function is called by:
 12542 ;;		_SYSTEM_Initialize
 12543 ;; This function uses a non-reentrant model
 12544 ;;
 12545                           
 12546                           
 12547                           ;psect for function _OSCILLATOR_Initialize
 12548  0982                     _OSCILLATOR_Initialize:	
 12549                           
 12550                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12551                           
 12552                           ;incstack = 0
 12553                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12554  0982  3060               	movlw	96
 12555  0983  0151               	movlb	17	; select bank17
 12556  0984  008D               	movwf	13	;volatile
 12557                           
 12558                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12559  0985  018F               	clrf	15	;volatile
 12560                           
 12561                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12562  0986  0191               	clrf	17	;volatile
 12563                           
 12564                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12565  0987  3006               	movlw	6
 12566  0988  0093               	movwf	19	;volatile
 12567                           
 12568                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12569  0989  0192               	clrf	18	;volatile
 12570  098A  0008               	return
 12571  098B                     __end_of_OSCILLATOR_Initialize:	
 12572                           
 12573                           	psect	text12
 12574  0B44                     __ptext12:	
 12575 ;; *************** function _I2C1_Initialize *****************
 12576 ;; Defined at:
 12577 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12578 ;; Parameters:    Size  Location     Type
 12579 ;;		None
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;		None
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  1    wreg      void 
 12584 ;; Registers used:
 12585 ;;		wreg, status,2
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12593 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12594 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12595 ;;Total ram usage:        1 bytes
 12596 ;; Hardware stack levels used:    1
 12597 ;; Hardware stack levels required when called:    4
 12598 ;; This function calls:
 12599 ;;		Nothing
 12600 ;; This function is called by:
 12601 ;;		_SYSTEM_Initialize
 12602 ;; This function uses a non-reentrant model
 12603 ;;
 12604                           
 12605                           
 12606                           ;psect for function _I2C1_Initialize
 12607  0B44                     _I2C1_Initialize:	
 12608                           
 12609                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12610                           
 12611                           ;incstack = 0
 12612                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12613  0B44  30CF               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12614  0B45  0140               	movlb	0	; select bank0
 12615  0B46  00A0               	movwf	??_I2C1_Initialize
 12616  0B47  0820               	movf	??_I2C1_Initialize,w
 12617  0B48  0141               	movlb	1	; select bank1
 12618  0B49  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12619                           
 12620                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12621  0B4A  30CF               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12622  0B4B  0140               	movlb	0	; select bank0
 12623  0B4C  00A0               	movwf	??_I2C1_Initialize
 12624  0B4D  0820               	movf	??_I2C1_Initialize,w
 12625  0B4E  0141               	movlb	1	; select bank1
 12626  0B4F  00A0               	movwf	_i2c1_object^(0+128)
 12627                           
 12628                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12629  0B50  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12630                           
 12631                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12632  0B51  1022               	bcf	(_i2c1_object^(0+128)+2),0
 12633                           
 12634                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12635  0B52  01A4               	clrf	(_i2c1_object^(0+128)+4)
 12636                           
 12637                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12638  0B53  0143               	movlb	3	; select bank3
 12639  0B54  018F               	clrf	15	;volatile
 12640                           
 12641                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12642  0B55  3028               	movlw	40
 12643  0B56  0090               	movwf	16	;volatile
 12644                           
 12645                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12646  0B57  0192               	clrf	18	;volatile
 12647                           
 12648                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12649  0B58  304F               	movlw	79
 12650  0B59  008D               	movwf	13	;volatile
 12651                           
 12652                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12653  0B5A  014E               	movlb	14	; select bank14
 12654  0B5B  100F               	bcf	15,0	;volatile
 12655                           
 12656                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12657  0B5C  108F               	bcf	15,1	;volatile
 12658                           
 12659                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12660  0B5D  1419               	bsf	25,0	;volatile
 12661                           
 12662                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12663  0B5E  1499               	bsf	25,1	;volatile
 12664  0B5F  0008               	return
 12665  0B60                     __end_of_I2C1_Initialize:	
 12666                           
 12667                           	psect	text13
 12668  0DB7                     __ptext13:	
 12669 ;; *************** function _EUSART1_Initialize *****************
 12670 ;; Defined at:
 12671 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12672 ;; Parameters:    Size  Location     Type
 12673 ;;		None
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;		None
 12676 ;; Return value:  Size  Location     Type
 12677 ;;                  1    wreg      void 
 12678 ;; Registers used:
 12679 ;;		wreg, status,2, status,0, pclath, cstack
 12680 ;; Tracked objects:
 12681 ;;		On entry : 0/0
 12682 ;;		On exit  : 0/0
 12683 ;;		Unchanged: 0/0
 12684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12689 ;;Total ram usage:        0 bytes
 12690 ;; Hardware stack levels used:    1
 12691 ;; Hardware stack levels required when called:    5
 12692 ;; This function calls:
 12693 ;;		_EUSART1_SetErrorHandler
 12694 ;;		_EUSART1_SetFramingErrorHandler
 12695 ;;		_EUSART1_SetOverrunErrorHandler
 12696 ;;		_EUSART1_SetRxInterruptHandler
 12697 ;; This function is called by:
 12698 ;;		_SYSTEM_Initialize
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702                           
 12703                           ;psect for function _EUSART1_Initialize
 12704  0DB7                     _EUSART1_Initialize:	
 12705                           
 12706                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12707                           
 12708                           ;incstack = 0
 12709                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12710  0DB7  014E               	movlb	14	; select bank14
 12711  0DB8  1299               	bcf	25,5	;volatile
 12712                           
 12713                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12714  0DB9  308F               	movlw	low _EUSART1_Receive_ISR
 12715  0DBA  0140               	movlb	0	; select bank0
 12716  0DBB  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12717  0DBC  300E               	movlw	high _EUSART1_Receive_ISR
 12718  0DBD  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12719  0DBE  3189  2155  318D   	fcall	_EUSART1_SetRxInterruptHandler
 12720                           
 12721                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12722  0DC1  3008               	movlw	8
 12723  0DC2  0142               	movlb	2	; select bank2
 12724  0DC3  009F               	movwf	31	;volatile
 12725                           
 12726                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12727  0DC4  3090               	movlw	144
 12728  0DC5  009D               	movwf	29	;volatile
 12729                           
 12730                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12731  0DC6  3004               	movlw	4
 12732  0DC7  009E               	movwf	30	;volatile
 12733                           
 12734                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12735  0DC8  301F               	movlw	31
 12736  0DC9  009B               	movwf	27	;volatile
 12737                           
 12738                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12739  0DCA  019C               	clrf	28	;volatile
 12740                           
 12741                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12742  0DCB  3003               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12743  0DCC  0140               	movlb	0	; select bank0
 12744  0DCD  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12745  0DCE  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12746  0DCF  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12747  0DD0  3189  2170  318D   	fcall	_EUSART1_SetFramingErrorHandler
 12748                           
 12749                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12750  0DD3  300F               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12751  0DD4  0140               	movlb	0	; select bank0
 12752  0DD5  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12753  0DD6  3009               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12754  0DD7  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12755  0DD8  3189  2179  318D   	fcall	_EUSART1_SetOverrunErrorHandler
 12756                           
 12757                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12758  0DDB  3005               	movlw	low _EUSART1_DefaultErrorHandler
 12759  0DDC  0140               	movlb	0	; select bank0
 12760  0DDD  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12761  0DDE  3009               	movlw	high _EUSART1_DefaultErrorHandler
 12762  0DDF  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12763  0DE0  3189  2167         	fcall	_EUSART1_SetErrorHandler
 12764                           
 12765                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12766  0DE2  0141               	movlb	1	; select bank1
 12767  0DE3  01CD               	clrf	_eusart1RxLastError^(0+128)	;volatile
 12768                           
 12769                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12770  0DE4  0140               	movlb	0	; select bank0
 12771  0DE5  01EF               	clrf	_eusart1RxHead	;volatile
 12772                           
 12773                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12774  0DE6  01F4               	clrf	_eusart1RxTail	;volatile
 12775                           
 12776                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12777  0DE7  0141               	movlb	1	; select bank1
 12778  0DE8  01CE               	clrf	_eusart1RxCount^(0+128)	;volatile
 12779                           
 12780                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12781  0DE9  014E               	movlb	14	; select bank14
 12782  0DEA  1699               	bsf	25,5	;volatile
 12783  0DEB  0008               	return
 12784  0DEC                     __end_of_EUSART1_Initialize:	
 12785                           
 12786                           	psect	text14
 12787  0979                     __ptext14:	
 12788 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12789 ;; Defined at:
 12790 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12793 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12794 ;; Auto vars:     Size  Location     Type
 12795 ;;		None
 12796 ;; Return value:  Size  Location     Type
 12797 ;;                  1    wreg      void 
 12798 ;; Registers used:
 12799 ;;		wreg
 12800 ;; Tracked objects:
 12801 ;;		On entry : 0/0
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12808 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12809 ;;Total ram usage:        2 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; Hardware stack levels required when called:    4
 12812 ;; This function calls:
 12813 ;;		Nothing
 12814 ;; This function is called by:
 12815 ;;		_EUSART1_Initialize
 12816 ;; This function uses a non-reentrant model
 12817 ;;
 12818                           
 12819                           
 12820                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12821  0979                     _EUSART1_SetOverrunErrorHandler:	
 12822                           
 12823                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12824                           
 12825                           ;incstack = 0
 12826                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12827  0979  0140               	movlb	0	; select bank0
 12828  097A  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12829  097B  0142               	movlb	2	; select bank2
 12830  097C  00E9               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12831  097D  0140               	movlb	0	; select bank0
 12832  097E  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12833  097F  0142               	movlb	2	; select bank2
 12834  0980  00E8               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12835  0981  0008               	return
 12836  0982                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12837                           
 12838                           	psect	text15
 12839  0970                     __ptext15:	
 12840 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12841 ;; Defined at:
 12842 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12845 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12846 ;; Auto vars:     Size  Location     Type
 12847 ;;		None
 12848 ;; Return value:  Size  Location     Type
 12849 ;;                  1    wreg      void 
 12850 ;; Registers used:
 12851 ;;		wreg
 12852 ;; Tracked objects:
 12853 ;;		On entry : 0/0
 12854 ;;		On exit  : 0/0
 12855 ;;		Unchanged: 0/0
 12856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12861 ;;Total ram usage:        2 bytes
 12862 ;; Hardware stack levels used:    1
 12863 ;; Hardware stack levels required when called:    4
 12864 ;; This function calls:
 12865 ;;		Nothing
 12866 ;; This function is called by:
 12867 ;;		_EUSART1_Initialize
 12868 ;; This function uses a non-reentrant model
 12869 ;;
 12870                           
 12871                           
 12872                           ;psect for function _EUSART1_SetFramingErrorHandler
 12873  0970                     _EUSART1_SetFramingErrorHandler:	
 12874                           
 12875                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12876                           
 12877                           ;incstack = 0
 12878                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12879  0970  0140               	movlb	0	; select bank0
 12880  0971  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12881  0972  0142               	movlb	2	; select bank2
 12882  0973  00EB               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12883  0974  0140               	movlb	0	; select bank0
 12884  0975  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12885  0976  0142               	movlb	2	; select bank2
 12886  0977  00EA               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12887  0978  0008               	return
 12888  0979                     __end_of_EUSART1_SetFramingErrorHandler:	
 12889                           
 12890                           	psect	text16
 12891  0967                     __ptext16:	
 12892 ;; *************** function _EUSART1_SetErrorHandler *****************
 12893 ;; Defined at:
 12894 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 12895 ;; Parameters:    Size  Location     Type
 12896 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12897 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;		None
 12900 ;; Return value:  Size  Location     Type
 12901 ;;                  1    wreg      void 
 12902 ;; Registers used:
 12903 ;;		wreg
 12904 ;; Tracked objects:
 12905 ;;		On entry : 0/0
 12906 ;;		On exit  : 0/0
 12907 ;;		Unchanged: 0/0
 12908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12909 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12912 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12913 ;;Total ram usage:        2 bytes
 12914 ;; Hardware stack levels used:    1
 12915 ;; Hardware stack levels required when called:    4
 12916 ;; This function calls:
 12917 ;;		Nothing
 12918 ;; This function is called by:
 12919 ;;		_EUSART1_Initialize
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           
 12923                           
 12924                           ;psect for function _EUSART1_SetErrorHandler
 12925  0967                     _EUSART1_SetErrorHandler:	
 12926                           
 12927                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 12928                           
 12929                           ;incstack = 0
 12930                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 12931  0967  0140               	movlb	0	; select bank0
 12932  0968  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 12933  0969  0142               	movlb	2	; select bank2
 12934  096A  00E7               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 12935  096B  0140               	movlb	0	; select bank0
 12936  096C  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 12937  096D  0142               	movlb	2	; select bank2
 12938  096E  00E6               	movwf	_EUSART1_ErrorHandler^(0+256)
 12939  096F  0008               	return
 12940  0970                     __end_of_EUSART1_SetErrorHandler:	
 12941                           
 12942                           	psect	text17
 12943  0CA6                     __ptext17:	
 12944 ;; *************** function _ADCC_Initialize *****************
 12945 ;; Defined at:
 12946 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12947 ;; Parameters:    Size  Location     Type
 12948 ;;		None
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;		None
 12951 ;; Return value:  Size  Location     Type
 12952 ;;                  1    wreg      void 
 12953 ;; Registers used:
 12954 ;;		wreg, status,2, status,0, pclath, cstack
 12955 ;; Tracked objects:
 12956 ;;		On entry : 0/0
 12957 ;;		On exit  : 0/0
 12958 ;;		Unchanged: 0/0
 12959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12964 ;;Total ram usage:        0 bytes
 12965 ;; Hardware stack levels used:    1
 12966 ;; Hardware stack levels required when called:    5
 12967 ;; This function calls:
 12968 ;;		_ADCC_SetADTIInterruptHandler
 12969 ;; This function is called by:
 12970 ;;		_SYSTEM_Initialize
 12971 ;; This function uses a non-reentrant model
 12972 ;;
 12973                           
 12974                           
 12975                           ;psect for function _ADCC_Initialize
 12976  0CA6                     _ADCC_Initialize:	
 12977                           
 12978                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12979                           
 12980                           ;incstack = 0
 12981                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12982  0CA6  0141               	movlb	1	; select bank1
 12983  0CA7  018C               	clrf	12	;volatile
 12984                           
 12985                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12986  0CA8  018D               	clrf	13	;volatile
 12987                           
 12988                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12989  0CA9  018E               	clrf	14	;volatile
 12990                           
 12991                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12992  0CAA  018F               	clrf	15	;volatile
 12993                           
 12994                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12995  0CAB  0192               	clrf	18	;volatile
 12996                           
 12997                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12998  0CAC  0193               	clrf	19	;volatile
 12999                           
 13000                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13001  0CAD  0198               	clrf	24	;volatile
 13002                           
 13003                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13004  0CAE  019A               	clrf	26	;volatile
 13005                           
 13006                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13007  0CAF  019F               	clrf	31	;volatile
 13008                           
 13009                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13010  0CB0  0142               	movlb	2	; select bank2
 13011  0CB1  018C               	clrf	12	;volatile
 13012                           
 13013                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13014  0CB2  018D               	clrf	13	;volatile
 13015                           
 13016                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13017  0CB3  018E               	clrf	14	;volatile
 13018                           
 13019                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13020  0CB4  018F               	clrf	15	;volatile
 13021                           
 13022                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13023  0CB5  0190               	clrf	16	;volatile
 13024                           
 13025                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13026  0CB6  0192               	clrf	18	;volatile
 13027                           
 13028                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 13029  0CB7  3054               	movlw	84
 13030  0CB8  0093               	movwf	19	;volatile
 13031                           
 13032                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 13033  0CB9  3056               	movlw	86
 13034  0CBA  0094               	movwf	20	;volatile
 13035                           
 13036                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13037  0CBB  0195               	clrf	21	;volatile
 13038                           
 13039                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 13040  0CBC  0196               	clrf	22	;volatile
 13041                           
 13042                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13043  0CBD  0197               	clrf	23	;volatile
 13044                           
 13045                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13046  0CBE  0198               	clrf	24	;volatile
 13047                           
 13048                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 13049  0CBF  30D4               	movlw	212
 13050  0CC0  0091               	movwf	17	;volatile
 13051                           
 13052                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 13053  0CC1  014E               	movlb	14	; select bank14
 13054  0CC2  108D               	bcf	13,1	;volatile
 13055                           
 13056                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 13057  0CC3  1497               	bsf	23,1	;volatile
 13058                           
 13059                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 13060  0CC4  3002               	movlw	low _ADCC_DefaultInterruptHandler
 13061  0CC5  0140               	movlb	0	; select bank0
 13062  0CC6  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13063  0CC7  3000               	movlw	high _ADCC_DefaultInterruptHandler
 13064  0CC8  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13065  0CC9  3189  2128         	fcall	_ADCC_SetADTIInterruptHandler
 13066  0CCB  0008               	return
 13067  0CCC                     __end_of_ADCC_Initialize:	
 13068                           
 13069                           	psect	text18
 13070  0331                     __ptext18:	
 13071 ;; *************** function _LED_task *****************
 13072 ;; Defined at:
 13073 ;;		line 21 in file "led.c"
 13074 ;; Parameters:    Size  Location     Type
 13075 ;;		None
 13076 ;; Auto vars:     Size  Location     Type
 13077 ;;		None
 13078 ;; Return value:  Size  Location     Type
 13079 ;;                  1    wreg      void 
 13080 ;; Registers used:
 13081 ;;		wreg, status,2, status,0, pclath, cstack
 13082 ;; Tracked objects:
 13083 ;;		On entry : 0/0
 13084 ;;		On exit  : 0/0
 13085 ;;		Unchanged: 0/0
 13086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13089 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13090 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13091 ;;Total ram usage:        2 bytes
 13092 ;; Hardware stack levels used:    1
 13093 ;; Hardware stack levels required when called:    5
 13094 ;; This function calls:
 13095 ;;		_BEAT_detected
 13096 ;;		_CLOCK_getTime
 13097 ;;		_PWM1_LoadDutyValue
 13098 ;;		_PWM2_LoadDutyValue
 13099 ;;		_PWM3_LoadDutyValue
 13100 ;;		_PWM4_LoadDutyValue
 13101 ;; This function is called by:
 13102 ;;		_main
 13103 ;; This function uses a non-reentrant model
 13104 ;;
 13105                           
 13106                           
 13107                           ;psect for function _LED_task
 13108  0331                     _LED_task:	
 13109                           
 13110                           ;led.c: 23:     if(CLOCK_getTime() - lastLedActiveTime < 100){
 13111                           
 13112                           ;incstack = 0
 13113                           ; Regs used in _LED_task: [wreg+status,2+status,0+pclath+cstack]
 13114  0331  3189  2143  3183   	fcall	_CLOCK_getTime
 13115  0334  0142               	movlb	2	; select bank2
 13116  0335  0834               	movf	_lastLedActiveTime^(0+256),w
 13117  0336  0140               	movlb	0	; select bank0
 13118  0337  0220               	subwf	?_CLOCK_getTime,w
 13119  0338  00A2               	movwf	??_LED_task
 13120  0339  0142               	movlb	2	; select bank2
 13121  033A  0835               	movf	(_lastLedActiveTime+1)^(0+256),w
 13122  033B  0140               	movlb	0	; select bank0
 13123  033C  3B21               	subwfb	?_CLOCK_getTime+1,w
 13124  033D  00A3               	movwf	??_LED_task+1
 13125  033E  3000               	movlw	0
 13126  033F  0223               	subwf	??_LED_task+1,w
 13127  0340  3064               	movlw	100
 13128  0341  1903               	skipnz
 13129  0342  0222               	subwf	??_LED_task,w
 13130  0343  1C03               	btfss	3,0
 13131  0344  0008               	return
 13132                           
 13133                           ;led.c: 27:     lastLedActiveTime = CLOCK_getTime();
 13134  0345  3189  2143  3183   	fcall	_CLOCK_getTime
 13135  0348  0140               	movlb	0	; select bank0
 13136  0349  0821               	movf	?_CLOCK_getTime+1,w
 13137  034A  0142               	movlb	2	; select bank2
 13138  034B  00B5               	movwf	(_lastLedActiveTime+1)^(0+256)
 13139  034C  0140               	movlb	0	; select bank0
 13140  034D  0820               	movf	?_CLOCK_getTime,w
 13141  034E  0142               	movlb	2	; select bank2
 13142  034F  00B4               	movwf	_lastLedActiveTime^(0+256)
 13143                           
 13144                           ;led.c: 29:     if(!BEAT_detected()){
 13145  0350  3189  215E  3183   	fcall	_BEAT_detected
 13146  0353  3A00               	xorlw	0
 13147  0354  1D03               	skipz
 13148  0355  2B72               	goto	l5586
 13149                           
 13150                           ;led.c: 30:         PWM1_LoadDutyValue(0);
 13151  0356  3000               	movlw	0
 13152  0357  0140               	movlb	0	; select bank0
 13153  0358  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 13154  0359  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13155  035A  318B  237D  3183   	fcall	_PWM1_LoadDutyValue
 13156                           
 13157                           ;led.c: 31:         PWM2_LoadDutyValue(0);
 13158  035D  3000               	movlw	0
 13159  035E  0140               	movlb	0	; select bank0
 13160  035F  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 13161  0360  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13162  0361  318B  239B  3183   	fcall	_PWM2_LoadDutyValue
 13163                           
 13164                           ;led.c: 32:         PWM3_LoadDutyValue(0);
 13165  0364  3000               	movlw	0
 13166  0365  0140               	movlb	0	; select bank0
 13167  0366  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 13168  0367  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 13169  0368  318B  23B9  3183   	fcall	_PWM3_LoadDutyValue
 13170                           
 13171                           ;led.c: 33:         PWM4_LoadDutyValue(0);
 13172  036B  3000               	movlw	0
 13173  036C  0140               	movlb	0	; select bank0
 13174  036D  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 13175  036E  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 13176  036F  318B  23D7         	fcall	_PWM4_LoadDutyValue
 13177                           
 13178                           ;led.c: 34:     } else if (currentState == 1){
 13179  0371  0008               	return
 13180  0372                     l5586:	
 13181  0372  0370               	decf	_currentState,w
 13182  0373  0471               	iorwf	_currentState+1,w
 13183  0374  1D03               	btfss	3,2
 13184  0375  2BE8               	goto	l5592
 13185                           
 13186                           ;led.c: 35:         PWM1_LoadDutyValue(120);
 13187  0376  3078               	movlw	120
 13188  0377  0140               	movlb	0	; select bank0
 13189  0378  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 13190  0379  3000               	movlw	0
 13191  037A  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13192  037B  318B  237D  3183   	fcall	_PWM1_LoadDutyValue
 13193                           
 13194                           ;led.c: 36:         PWM2_LoadDutyValue(0);
 13195  037E  3000               	movlw	0
 13196  037F  0140               	movlb	0	; select bank0
 13197  0380  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 13198  0381  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13199  0382  318B  239B  3183   	fcall	_PWM2_LoadDutyValue
 13200                           
 13201                           ;led.c: 37:         PWM3_LoadDutyValue(0);
 13202  0385  3000               	movlw	0
 13203  0386  0140               	movlb	0	; select bank0
 13204  0387  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 13205  0388  2BB1               	goto	L10
 13206  0389                     l5594:	
 13207                           ;led.c: 38:         PWM4_LoadDutyValue(0);
 13208                           
 13209                           
 13210                           ;led.c: 41:         PWM1_LoadDutyValue(0);
 13211  0389  3000               	movlw	0
 13212  038A  0140               	movlb	0	; select bank0
 13213  038B  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 13214  038C  2BA1               	goto	L7
 13215  038D                     l5600:	
 13216                           ;led.c: 44:         PWM4_LoadDutyValue(0);
 13217                           
 13218                           ;led.c: 43:         PWM3_LoadDutyValue(120);
 13219                           
 13220                           ;led.c: 42:         PWM2_LoadDutyValue(120);
 13221                           
 13222                           
 13223                           ;led.c: 47:         PWM1_LoadDutyValue(120);
 13224  038D  3078               	movlw	120
 13225  038E  0140               	movlb	0	; select bank0
 13226  038F  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 13227  0390  3000               	movlw	0
 13228  0391  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13229  0392  318B  237D  3183   	fcall	_PWM1_LoadDutyValue
 13230                           
 13231                           ;led.c: 48:         PWM2_LoadDutyValue(0);
 13232  0395  3000               	movlw	0
 13233  0396  0140               	movlb	0	; select bank0
 13234  0397  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 13235  0398  2BA9               	goto	L8
 13236  0399                     l5606:	
 13237                           ;led.c: 50:         PWM4_LoadDutyValue(0);
 13238                           
 13239                           ;led.c: 49:         PWM3_LoadDutyValue(120);
 13240                           
 13241                           
 13242                           ;led.c: 53:         PWM1_LoadDutyValue(0);
 13243  0399  3000               	movlw	0
 13244  039A  0140               	movlb	0	; select bank0
 13245  039B  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 13246  039C  2BBD               	goto	L9
 13247  039D                     l5612:	
 13248                           ;led.c: 56:         PWM4_LoadDutyValue(120);
 13249                           
 13250                           ;led.c: 55:         PWM3_LoadDutyValue(120);
 13251                           
 13252                           ;led.c: 54:         PWM2_LoadDutyValue(0);
 13253                           
 13254                           
 13255                           ;led.c: 59:         PWM1_LoadDutyValue(120);
 13256  039D  3078               	movlw	120
 13257  039E  0140               	movlb	0	; select bank0
 13258  039F  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 13259  03A0  3000               	movlw	0
 13260  03A1                     L7:	
 13261  03A1  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13262  03A2  318B  237D  3183   	fcall	_PWM1_LoadDutyValue
 13263                           
 13264                           ;led.c: 60:         PWM2_LoadDutyValue(120);
 13265  03A5  3078               	movlw	120
 13266  03A6  0140               	movlb	0	; select bank0
 13267  03A7  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 13268  03A8  3000               	movlw	0
 13269  03A9                     L8:	
 13270  03A9  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13271  03AA  318B  239B  3183   	fcall	_PWM2_LoadDutyValue
 13272                           
 13273                           ;led.c: 61:         PWM3_LoadDutyValue(120);
 13274  03AD  3078               	movlw	120
 13275  03AE  0140               	movlb	0	; select bank0
 13276  03AF  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 13277  03B0  3000               	movlw	0
 13278  03B1                     L10:	
 13279  03B1  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 13280  03B2  318B  23B9  3183   	fcall	_PWM3_LoadDutyValue
 13281                           
 13282                           ;led.c: 62:         PWM4_LoadDutyValue(0);
 13283  03B5  3000               	movlw	0
 13284  03B6  0140               	movlb	0	; select bank0
 13285  03B7  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 13286  03B8  2BE0               	goto	L1
 13287  03B9                     l5618:	
 13288                           
 13289                           ;led.c: 65:         PWM1_LoadDutyValue(120);
 13290  03B9  3078               	movlw	120
 13291  03BA  0140               	movlb	0	; select bank0
 13292  03BB  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 13293  03BC  3000               	movlw	0
 13294  03BD                     L9:	
 13295  03BD  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13296  03BE  318B  237D  3183   	fcall	_PWM1_LoadDutyValue
 13297                           
 13298                           ;led.c: 66:         PWM2_LoadDutyValue(0);
 13299  03C1  3000               	movlw	0
 13300  03C2  0140               	movlb	0	; select bank0
 13301  03C3  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 13302  03C4  2BD0               	goto	L5
 13303  03C5                     l5624:	
 13304                           ;led.c: 68:         PWM4_LoadDutyValue(120);
 13305                           
 13306                           ;led.c: 67:         PWM3_LoadDutyValue(120);
 13307                           
 13308                           
 13309                           ;led.c: 71:         PWM1_LoadDutyValue(0);
 13310  03C5  3000               	movlw	0
 13311  03C6  0140               	movlb	0	; select bank0
 13312  03C7  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 13313  03C8  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13314  03C9  318B  237D  3183   	fcall	_PWM1_LoadDutyValue
 13315                           
 13316                           ;led.c: 72:         PWM2_LoadDutyValue(120);
 13317  03CC  3078               	movlw	120
 13318  03CD  0140               	movlb	0	; select bank0
 13319  03CE  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 13320  03CF  3000               	movlw	0
 13321  03D0                     L5:	
 13322  03D0  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13323  03D1  318B  239B  3183   	fcall	_PWM2_LoadDutyValue
 13324                           
 13325                           ;led.c: 73:         PWM3_LoadDutyValue(120);
 13326  03D4  3078               	movlw	120
 13327  03D5  0140               	movlb	0	; select bank0
 13328  03D6  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 13329  03D7  3000               	movlw	0
 13330  03D8  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 13331  03D9  318B  23B9  3183   	fcall	_PWM3_LoadDutyValue
 13332                           
 13333                           ;led.c: 74:         PWM4_LoadDutyValue(120);
 13334  03DC  3078               	movlw	120
 13335  03DD  0140               	movlb	0	; select bank0
 13336  03DE  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 13337  03DF  3000               	movlw	0
 13338  03E0                     L1:	
 13339  03E0  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 13340  03E1  318B  23D7         	fcall	_PWM4_LoadDutyValue
 13341                           
 13342                           ;led.c: 39:         currentState++;
 13343  03E3  3001               	movlw	1
 13344  03E4  07F0               	addwf	_currentState,f
 13345  03E5  3000               	movlw	0
 13346  03E6  3DF1               	addwfc	_currentState+1,f
 13347                           
 13348                           ;led.c: 40:     } else if(currentState == 2){
 13349  03E7  0008               	return
 13350  03E8                     l5592:	
 13351  03E8  3002               	movlw	2
 13352  03E9  0670               	xorwf	_currentState,w
 13353  03EA  0471               	iorwf	_currentState+1,w
 13354  03EB  1903               	btfsc	3,2
 13355  03EC  2B89               	goto	l5594
 13356  03ED  3003               	movlw	3
 13357  03EE  0670               	xorwf	_currentState,w
 13358  03EF  0471               	iorwf	_currentState+1,w
 13359  03F0  1903               	btfsc	3,2
 13360  03F1  2B8D               	goto	l5600
 13361  03F2  3004               	movlw	4
 13362  03F3  0670               	xorwf	_currentState,w
 13363  03F4  0471               	iorwf	_currentState+1,w
 13364  03F5  1903               	btfsc	3,2
 13365  03F6  2B99               	goto	l5606
 13366  03F7  3005               	movlw	5
 13367  03F8  0670               	xorwf	_currentState,w
 13368  03F9  0471               	iorwf	_currentState+1,w
 13369  03FA  1903               	btfsc	3,2
 13370  03FB  2B9D               	goto	l5612
 13371  03FC  3006               	movlw	6
 13372  03FD  0670               	xorwf	_currentState,w
 13373  03FE  0471               	iorwf	_currentState+1,w
 13374  03FF  1903               	btfsc	3,2
 13375  0400  2BB9               	goto	l5618
 13376  0401  3008               	movlw	8
 13377  0402  0670               	xorwf	_currentState,w
 13378  0403  0471               	iorwf	_currentState+1,w
 13379  0404  1903               	btfsc	3,2
 13380  0405  2BC5               	goto	l5624
 13381                           
 13382                           ;led.c: 77:         PWM1_LoadDutyValue(120);
 13383  0406  3078               	movlw	120
 13384  0407  0140               	movlb	0	; select bank0
 13385  0408  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 13386  0409  3000               	movlw	0
 13387  040A  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13388  040B  318B  237D  3183   	fcall	_PWM1_LoadDutyValue
 13389                           
 13390                           ;led.c: 78:         PWM2_LoadDutyValue(120);
 13391  040E  3078               	movlw	120
 13392  040F  0140               	movlb	0	; select bank0
 13393  0410  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 13394  0411  3000               	movlw	0
 13395  0412  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13396  0413  318B  239B  3183   	fcall	_PWM2_LoadDutyValue
 13397                           
 13398                           ;led.c: 79:         PWM3_LoadDutyValue(120);
 13399  0416  3078               	movlw	120
 13400  0417  0140               	movlb	0	; select bank0
 13401  0418  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 13402  0419  3000               	movlw	0
 13403  041A  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 13404  041B  318B  23B9  3183   	fcall	_PWM3_LoadDutyValue
 13405                           
 13406                           ;led.c: 80:         PWM4_LoadDutyValue(120);
 13407  041E  3078               	movlw	120
 13408  041F  0140               	movlb	0	; select bank0
 13409  0420  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 13410  0421  3000               	movlw	0
 13411  0422  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 13412  0423  318B  23D7         	fcall	_PWM4_LoadDutyValue
 13413                           
 13414                           ;led.c: 81:         currentState = 1;
 13415  0425  3001               	movlw	1
 13416  0426  00F0               	movwf	_currentState
 13417  0427  3000               	movlw	0
 13418  0428  00F1               	movwf	_currentState+1
 13419  0429  0008               	return
 13420  042A                     __end_of_LED_task:	
 13421                           
 13422                           	psect	text19
 13423  0BD7                     __ptext19:	
 13424 ;; *************** function _PWM4_LoadDutyValue *****************
 13425 ;; Defined at:
 13426 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;		None
 13431 ;; Return value:  Size  Location     Type
 13432 ;;                  1    wreg      void 
 13433 ;; Registers used:
 13434 ;;		wreg, status,2
 13435 ;; Tracked objects:
 13436 ;;		On entry : 0/0
 13437 ;;		On exit  : 0/0
 13438 ;;		Unchanged: 0/0
 13439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13440 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13443 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13444 ;;Total ram usage:        2 bytes
 13445 ;; Hardware stack levels used:    1
 13446 ;; Hardware stack levels required when called:    4
 13447 ;; This function calls:
 13448 ;;		Nothing
 13449 ;; This function is called by:
 13450 ;;		_LED_task
 13451 ;; This function uses a non-reentrant model
 13452 ;;
 13453                           
 13454                           
 13455                           ;psect for function _PWM4_LoadDutyValue
 13456  0BD7                     _PWM4_LoadDutyValue:	
 13457                           
 13458                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 120){
 13459                           
 13460                           ;incstack = 0
 13461                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 13462  0BD7  3000               	movlw	0
 13463  0BD8  0140               	movlb	0	; select bank0
 13464  0BD9  0221               	subwf	PWM4_LoadDutyValue@dutyValue+1,w
 13465  0BDA  3079               	movlw	121
 13466  0BDB  1903               	skipnz
 13467  0BDC  0220               	subwf	PWM4_LoadDutyValue@dutyValue,w
 13468  0BDD  1803               	skipnc
 13469  0BDE  0008               	return
 13470                           
 13471                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 13472  0BDF  30FF               	movlw	255
 13473  0BE0  05A0               	andwf	PWM4_LoadDutyValue@dutyValue,f
 13474  0BE1  3003               	movlw	3
 13475  0BE2  05A1               	andwf	PWM4_LoadDutyValue@dutyValue+1,f
 13476                           
 13477                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 13478  0BE3  0146               	movlb	6	; select bank6
 13479  0BE4  1E1A               	btfss	26,4	;volatile
 13480  0BE5  2BEC               	goto	l5144
 13481                           
 13482                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 13483  0BE6  3006               	movlw	6
 13484  0BE7  0140               	movlb	0	; select bank0
 13485  0BE8                     u3755:	
 13486  0BE8  35A0               	lslf	PWM4_LoadDutyValue@dutyValue,f
 13487  0BE9  0DA1               	rlf	PWM4_LoadDutyValue@dutyValue+1,f
 13488  0BEA  0B89               	decfsz	9,f
 13489  0BEB  2BE8               	goto	u3755
 13490  0BEC                     l5144:	
 13491                           
 13492                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 13493  0BEC  0140               	movlb	0	; select bank0
 13494  0BED  0821               	movf	PWM4_LoadDutyValue@dutyValue+1,w
 13495  0BEE  0146               	movlb	6	; select bank6
 13496  0BEF  0099               	movwf	25	;volatile
 13497                           
 13498                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 13499  0BF0  0140               	movlb	0	; select bank0
 13500  0BF1  0820               	movf	PWM4_LoadDutyValue@dutyValue,w
 13501  0BF2  0146               	movlb	6	; select bank6
 13502  0BF3  0098               	movwf	24	;volatile
 13503                           
 13504                           ;mcc_generated_files/pwm4.c: 93:         }
 13505  0BF4  0008               	return
 13506  0BF5                     __end_of_PWM4_LoadDutyValue:	
 13507                           
 13508                           	psect	text20
 13509  0BB9                     __ptext20:	
 13510 ;; *************** function _PWM3_LoadDutyValue *****************
 13511 ;; Defined at:
 13512 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;		None
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  1    wreg      void 
 13519 ;; Registers used:
 13520 ;;		wreg, status,2
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13530 ;;Total ram usage:        2 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; Hardware stack levels required when called:    4
 13533 ;; This function calls:
 13534 ;;		Nothing
 13535 ;; This function is called by:
 13536 ;;		_LED_task
 13537 ;; This function uses a non-reentrant model
 13538 ;;
 13539                           
 13540                           
 13541                           ;psect for function _PWM3_LoadDutyValue
 13542  0BB9                     _PWM3_LoadDutyValue:	
 13543                           
 13544                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 120){
 13545                           
 13546                           ;incstack = 0
 13547                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 13548  0BB9  3000               	movlw	0
 13549  0BBA  0140               	movlb	0	; select bank0
 13550  0BBB  0221               	subwf	PWM3_LoadDutyValue@dutyValue+1,w
 13551  0BBC  3079               	movlw	121
 13552  0BBD  1903               	skipnz
 13553  0BBE  0220               	subwf	PWM3_LoadDutyValue@dutyValue,w
 13554  0BBF  1803               	skipnc
 13555  0BC0  0008               	return
 13556                           
 13557                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 13558  0BC1  30FF               	movlw	255
 13559  0BC2  05A0               	andwf	PWM3_LoadDutyValue@dutyValue,f
 13560  0BC3  3003               	movlw	3
 13561  0BC4  05A1               	andwf	PWM3_LoadDutyValue@dutyValue+1,f
 13562                           
 13563                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 13564  0BC5  0146               	movlb	6	; select bank6
 13565  0BC6  1E16               	btfss	22,4	;volatile
 13566  0BC7  2BCE               	goto	l5128
 13567                           
 13568                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 13569  0BC8  3006               	movlw	6
 13570  0BC9  0140               	movlb	0	; select bank0
 13571  0BCA                     u3725:	
 13572  0BCA  35A0               	lslf	PWM3_LoadDutyValue@dutyValue,f
 13573  0BCB  0DA1               	rlf	PWM3_LoadDutyValue@dutyValue+1,f
 13574  0BCC  0B89               	decfsz	9,f
 13575  0BCD  2BCA               	goto	u3725
 13576  0BCE                     l5128:	
 13577                           
 13578                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 13579  0BCE  0140               	movlb	0	; select bank0
 13580  0BCF  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 13581  0BD0  0146               	movlb	6	; select bank6
 13582  0BD1  0095               	movwf	21	;volatile
 13583                           
 13584                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 13585  0BD2  0140               	movlb	0	; select bank0
 13586  0BD3  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
 13587  0BD4  0146               	movlb	6	; select bank6
 13588  0BD5  0094               	movwf	20	;volatile
 13589                           
 13590                           ;mcc_generated_files/pwm3.c: 93:         }
 13591  0BD6  0008               	return
 13592  0BD7                     __end_of_PWM3_LoadDutyValue:	
 13593                           
 13594                           	psect	text21
 13595  0B9B                     __ptext21:	
 13596 ;; *************** function _PWM2_LoadDutyValue *****************
 13597 ;; Defined at:
 13598 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 13599 ;; Parameters:    Size  Location     Type
 13600 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13601 ;; Auto vars:     Size  Location     Type
 13602 ;;		None
 13603 ;; Return value:  Size  Location     Type
 13604 ;;                  1    wreg      void 
 13605 ;; Registers used:
 13606 ;;		wreg, status,2
 13607 ;; Tracked objects:
 13608 ;;		On entry : 0/0
 13609 ;;		On exit  : 0/0
 13610 ;;		Unchanged: 0/0
 13611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13612 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13615 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13616 ;;Total ram usage:        2 bytes
 13617 ;; Hardware stack levels used:    1
 13618 ;; Hardware stack levels required when called:    4
 13619 ;; This function calls:
 13620 ;;		Nothing
 13621 ;; This function is called by:
 13622 ;;		_LED_task
 13623 ;; This function uses a non-reentrant model
 13624 ;;
 13625                           
 13626                           
 13627                           ;psect for function _PWM2_LoadDutyValue
 13628  0B9B                     _PWM2_LoadDutyValue:	
 13629                           
 13630                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 120){
 13631                           
 13632                           ;incstack = 0
 13633                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 13634  0B9B  3000               	movlw	0
 13635  0B9C  0140               	movlb	0	; select bank0
 13636  0B9D  0221               	subwf	PWM2_LoadDutyValue@dutyValue+1,w
 13637  0B9E  3079               	movlw	121
 13638  0B9F  1903               	skipnz
 13639  0BA0  0220               	subwf	PWM2_LoadDutyValue@dutyValue,w
 13640  0BA1  1803               	skipnc
 13641  0BA2  0008               	return
 13642                           
 13643                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 13644  0BA3  30FF               	movlw	255
 13645  0BA4  05A0               	andwf	PWM2_LoadDutyValue@dutyValue,f
 13646  0BA5  3003               	movlw	3
 13647  0BA6  05A1               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 13648                           
 13649                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 13650  0BA7  0146               	movlb	6	; select bank6
 13651  0BA8  1E12               	btfss	18,4	;volatile
 13652  0BA9  2BB0               	goto	l5176
 13653                           
 13654                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 13655  0BAA  3006               	movlw	6
 13656  0BAB  0140               	movlb	0	; select bank0
 13657  0BAC                     u3815:	
 13658  0BAC  35A0               	lslf	PWM2_LoadDutyValue@dutyValue,f
 13659  0BAD  0DA1               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 13660  0BAE  0B89               	decfsz	9,f
 13661  0BAF  2BAC               	goto	u3815
 13662  0BB0                     l5176:	
 13663                           
 13664                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 13665  0BB0  0140               	movlb	0	; select bank0
 13666  0BB1  0821               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 13667  0BB2  0146               	movlb	6	; select bank6
 13668  0BB3  0091               	movwf	17	;volatile
 13669                           
 13670                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 13671  0BB4  0140               	movlb	0	; select bank0
 13672  0BB5  0820               	movf	PWM2_LoadDutyValue@dutyValue,w
 13673  0BB6  0146               	movlb	6	; select bank6
 13674  0BB7  0090               	movwf	16	;volatile
 13675                           
 13676                           ;mcc_generated_files/pwm2.c: 93:         }
 13677  0BB8  0008               	return
 13678  0BB9                     __end_of_PWM2_LoadDutyValue:	
 13679                           
 13680                           	psect	text22
 13681  0B7D                     __ptext22:	
 13682 ;; *************** function _PWM1_LoadDutyValue *****************
 13683 ;; Defined at:
 13684 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 13685 ;; Parameters:    Size  Location     Type
 13686 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13687 ;; Auto vars:     Size  Location     Type
 13688 ;;		None
 13689 ;; Return value:  Size  Location     Type
 13690 ;;                  1    wreg      void 
 13691 ;; Registers used:
 13692 ;;		wreg, status,2
 13693 ;; Tracked objects:
 13694 ;;		On entry : 0/0
 13695 ;;		On exit  : 0/0
 13696 ;;		Unchanged: 0/0
 13697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13701 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13702 ;;Total ram usage:        2 bytes
 13703 ;; Hardware stack levels used:    1
 13704 ;; Hardware stack levels required when called:    4
 13705 ;; This function calls:
 13706 ;;		Nothing
 13707 ;; This function is called by:
 13708 ;;		_LED_task
 13709 ;; This function uses a non-reentrant model
 13710 ;;
 13711                           
 13712                           
 13713                           ;psect for function _PWM1_LoadDutyValue
 13714  0B7D                     _PWM1_LoadDutyValue:	
 13715                           
 13716                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 120){
 13717                           
 13718                           ;incstack = 0
 13719                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 13720  0B7D  3000               	movlw	0
 13721  0B7E  0140               	movlb	0	; select bank0
 13722  0B7F  0221               	subwf	PWM1_LoadDutyValue@dutyValue+1,w
 13723  0B80  3079               	movlw	121
 13724  0B81  1903               	skipnz
 13725  0B82  0220               	subwf	PWM1_LoadDutyValue@dutyValue,w
 13726  0B83  1803               	skipnc
 13727  0B84  0008               	return
 13728                           
 13729                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 13730  0B85  30FF               	movlw	255
 13731  0B86  05A0               	andwf	PWM1_LoadDutyValue@dutyValue,f
 13732  0B87  3003               	movlw	3
 13733  0B88  05A1               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 13734                           
 13735                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 13736  0B89  0146               	movlb	6	; select bank6
 13737  0B8A  1E0E               	btfss	14,4	;volatile
 13738  0B8B  2B92               	goto	l5160
 13739                           
 13740                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 13741  0B8C  3006               	movlw	6
 13742  0B8D  0140               	movlb	0	; select bank0
 13743  0B8E                     u3785:	
 13744  0B8E  35A0               	lslf	PWM1_LoadDutyValue@dutyValue,f
 13745  0B8F  0DA1               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 13746  0B90  0B89               	decfsz	9,f
 13747  0B91  2B8E               	goto	u3785
 13748  0B92                     l5160:	
 13749                           
 13750                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 13751  0B92  0140               	movlb	0	; select bank0
 13752  0B93  0821               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 13753  0B94  0146               	movlb	6	; select bank6
 13754  0B95  008D               	movwf	13	;volatile
 13755                           
 13756                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 13757  0B96  0140               	movlb	0	; select bank0
 13758  0B97  0820               	movf	PWM1_LoadDutyValue@dutyValue,w
 13759  0B98  0146               	movlb	6	; select bank6
 13760  0B99  008C               	movwf	12	;volatile
 13761                           
 13762                           ;mcc_generated_files/pwm1.c: 93:         }
 13763  0B9A  0008               	return
 13764  0B9B                     __end_of_PWM1_LoadDutyValue:	
 13765                           
 13766                           	psect	text23
 13767  095E                     __ptext23:	
 13768 ;; *************** function _BEAT_detected *****************
 13769 ;; Defined at:
 13770 ;;		line 49 in file "beat.c"
 13771 ;; Parameters:    Size  Location     Type
 13772 ;;		None
 13773 ;; Auto vars:     Size  Location     Type
 13774 ;;		None
 13775 ;; Return value:  Size  Location     Type
 13776 ;;                  1    wreg      _Bool 
 13777 ;; Registers used:
 13778 ;;		wreg, status,2, status,0
 13779 ;; Tracked objects:
 13780 ;;		On entry : 0/0
 13781 ;;		On exit  : 0/0
 13782 ;;		Unchanged: 0/0
 13783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13788 ;;Total ram usage:        0 bytes
 13789 ;; Hardware stack levels used:    1
 13790 ;; Hardware stack levels required when called:    4
 13791 ;; This function calls:
 13792 ;;		Nothing
 13793 ;; This function is called by:
 13794 ;;		_LED_task
 13795 ;; This function uses a non-reentrant model
 13796 ;;
 13797                           
 13798                           
 13799                           ;psect for function _BEAT_detected
 13800  095E                     _BEAT_detected:	
 13801                           
 13802                           ;beat.c: 50:     if (detected) {
 13803                           
 13804                           ;incstack = 0
 13805                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 13806  095E  0141               	movlb	1	; select bank1
 13807  095F  083B               	movf	_detected^(0+128),w
 13808  0960  1903               	btfsc	3,2
 13809  0961  2965               	goto	l5286
 13810                           
 13811                           ;beat.c: 51:         detected = 0;
 13812  0962  01BB               	clrf	_detected^(0+128)
 13813                           
 13814                           ;beat.c: 52:         return 1;
 13815  0963  3001               	movlw	1
 13816  0964  0008               	return
 13817  0965                     l5286:	
 13818                           
 13819                           ;beat.c: 55:     return 0;
 13820  0965  3000               	movlw	0
 13821  0966  0008               	return
 13822  0967                     __end_of_BEAT_detected:	
 13823                           
 13824                           	psect	text24
 13825  0920                     __ptext24:	
 13826 ;; *************** function _DMX_init *****************
 13827 ;; Defined at:
 13828 ;;		line 18 in file "dmx.c"
 13829 ;; Parameters:    Size  Location     Type
 13830 ;;		None
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;		None
 13833 ;; Return value:  Size  Location     Type
 13834 ;;                  1    wreg      void 
 13835 ;; Registers used:
 13836 ;;		wreg, status,2, status,0, pclath, cstack
 13837 ;; Tracked objects:
 13838 ;;		On entry : 0/0
 13839 ;;		On exit  : 0/0
 13840 ;;		Unchanged: 0/0
 13841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13846 ;;Total ram usage:        0 bytes
 13847 ;; Hardware stack levels used:    1
 13848 ;; Hardware stack levels required when called:    5
 13849 ;; This function calls:
 13850 ;;		_EUSART1_SetRxInterruptHandler
 13851 ;; This function is called by:
 13852 ;;		_main
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           
 13857                           ;psect for function _DMX_init
 13858  0920                     _DMX_init:	
 13859                           
 13860                           ;dmx.c: 19:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 13861                           
 13862                           ;incstack = 0
 13863                           ; Regs used in _DMX_init: [wreg+status,2+status,0+pclath+cstack]
 13864  0920  3021               	movlw	low _DMX_interrupt
 13865  0921  0140               	movlb	0	; select bank0
 13866  0922  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13867  0923  300E               	movlw	high _DMX_interrupt
 13868  0924  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13869  0925  3189  2155         	fcall	_EUSART1_SetRxInterruptHandler
 13870  0927  0008               	return
 13871  0928                     __end_of_DMX_init:	
 13872                           
 13873                           	psect	text25
 13874  0955                     __ptext25:	
 13875 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 13876 ;; Defined at:
 13877 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 13878 ;; Parameters:    Size  Location     Type
 13879 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13880 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 13881 ;; Auto vars:     Size  Location     Type
 13882 ;;		None
 13883 ;; Return value:  Size  Location     Type
 13884 ;;                  1    wreg      void 
 13885 ;; Registers used:
 13886 ;;		wreg
 13887 ;; Tracked objects:
 13888 ;;		On entry : 0/0
 13889 ;;		On exit  : 0/0
 13890 ;;		Unchanged: 0/0
 13891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13892 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13895 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13896 ;;Total ram usage:        2 bytes
 13897 ;; Hardware stack levels used:    1
 13898 ;; Hardware stack levels required when called:    4
 13899 ;; This function calls:
 13900 ;;		Nothing
 13901 ;; This function is called by:
 13902 ;;		_EUSART1_Initialize
 13903 ;;		_DMX_init
 13904 ;; This function uses a non-reentrant model
 13905 ;;
 13906                           
 13907                           
 13908                           ;psect for function _EUSART1_SetRxInterruptHandler
 13909  0955                     _EUSART1_SetRxInterruptHandler:	
 13910                           
 13911                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13912                           
 13913                           ;incstack = 0
 13914                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 13915  0955  0140               	movlb	0	; select bank0
 13916  0956  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 13917  0957  0142               	movlb	2	; select bank2
 13918  0958  00ED               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 13919  0959  0140               	movlb	0	; select bank0
 13920  095A  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 13921  095B  0142               	movlb	2	; select bank2
 13922  095C  00EC               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 13923  095D  0008               	return
 13924  095E                     __end_of_EUSART1_SetRxInterruptHandler:	
 13925                           
 13926                           	psect	text26
 13927  0077                     __ptext26:	
 13928 ;; *************** function _CONTROLLER_task *****************
 13929 ;; Defined at:
 13930 ;;		line 53 in file "controller.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;		None
 13933 ;; Auto vars:     Size  Location     Type
 13934 ;;  isActive        1   13[BANK1 ] _Bool 
 13935 ;;  status          1   12[BANK1 ] volatile unsigned char 
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  1    wreg      void 
 13938 ;; Registers used:
 13939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13946 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13947 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13948 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13949 ;;Total ram usage:        4 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:   18
 13952 ;; This function calls:
 13953 ;;		_BUTTONS_isClicked
 13954 ;;		_CLOCK_getTime
 13955 ;;		_TM1650_enable
 13956 ;;		_TM1650_fastPrintNum
 13957 ;;		_address_dec
 13958 ;;		_address_inc
 13959 ;;		_menuSelection
 13960 ;;		_printf
 13961 ;; This function is called by:
 13962 ;;		_main
 13963 ;; This function uses a non-reentrant model
 13964 ;;
 13965                           
 13966                           
 13967                           ;psect for function _CONTROLLER_task
 13968  0077                     _CONTROLLER_task:	
 13969                           
 13970                           ;controller.c: 55:     _Bool isActive = 1;
 13971                           
 13972                           ;incstack = 0
 13973 ;; hardware stack exceeded
 13974                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13975  0077  0141               	movlb	1	; select bank1
 13976  0078  01DF               	clrf	CONTROLLER_task@isActive^(0+128)
 13977  0079  0ADF               	incf	CONTROLLER_task@isActive^(0+128),f
 13978                           
 13979                           ;controller.c: 56:     upState = BUTTONS_isClicked(up);
 13980  007A  0846               	movf	_up^(0+128),w
 13981  007B  318A  224D  3180   	fcall	_BUTTONS_isClicked
 13982  007E  0141               	movlb	1	; select bank1
 13983  007F  00DC               	movwf	??_CONTROLLER_task^(0+128)
 13984  0080  085C               	movf	??_CONTROLLER_task^(0+128),w
 13985  0081  00C1               	movwf	_upState^(0+128)
 13986                           
 13987                           ;controller.c: 57:     downState = BUTTONS_isClicked(down);
 13988  0082  0845               	movf	_down^(0+128),w
 13989  0083  318A  224D  3180   	fcall	_BUTTONS_isClicked
 13990  0086  0141               	movlb	1	; select bank1
 13991  0087  00DC               	movwf	??_CONTROLLER_task^(0+128)
 13992  0088  085C               	movf	??_CONTROLLER_task^(0+128),w
 13993  0089  00C0               	movwf	_downState^(0+128)
 13994                           
 13995                           ;controller.c: 58:     menuState = BUTTONS_isClicked(menu);
 13996  008A  0847               	movf	_menu^(0+128),w
 13997  008B  318A  224D  3180   	fcall	_BUTTONS_isClicked
 13998  008E  0141               	movlb	1	; select bank1
 13999  008F  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14000  0090  085C               	movf	??_CONTROLLER_task^(0+128),w
 14001  0091  00BF               	movwf	_menuState^(0+128)
 14002                           
 14003                           ;controller.c: 59:     enterState = BUTTONS_isClicked(enter);
 14004  0092  0844               	movf	_enter^(0+128),w
 14005  0093  318A  224D  3180   	fcall	_BUTTONS_isClicked
 14006  0096  0141               	movlb	1	; select bank1
 14007  0097  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14008  0098  085C               	movf	??_CONTROLLER_task^(0+128),w
 14009  0099  00BE               	movwf	_enterState^(0+128)
 14010                           
 14011                           ;controller.c: 63:     if(startup == 1 && CLOCK_getTime() - startTime < 5000){
 14012  009A  036E               	decf	_startup^(0+128),w
 14013  009B  1D03               	btfss	3,2
 14014  009C  28C1               	goto	l5408
 14015  009D  3189  2143  3180   	fcall	_CLOCK_getTime
 14016  00A0  0141               	movlb	1	; select bank1
 14017  00A1  0837               	movf	_startTime^(0+128),w
 14018  00A2  0140               	movlb	0	; select bank0
 14019  00A3  0220               	subwf	?_CLOCK_getTime,w
 14020  00A4  0141               	movlb	1	; select bank1
 14021  00A5  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14022  00A6  0838               	movf	(_startTime+1)^(0+128),w
 14023  00A7  0140               	movlb	0	; select bank0
 14024  00A8  3B21               	subwfb	?_CLOCK_getTime+1,w
 14025  00A9  0141               	movlb	1	; select bank1
 14026  00AA  00DD               	movwf	(??_CONTROLLER_task+1)^(0+128)
 14027  00AB  3013               	movlw	19
 14028  00AC  025D               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 14029  00AD  3088               	movlw	136
 14030  00AE  1903               	skipnz
 14031  00AF  025C               	subwf	??_CONTROLLER_task^(0+128),w
 14032  00B0  1803               	skipnc
 14033  00B1  28C1               	goto	l5408
 14034                           
 14035                           ;controller.c: 64:         menuSelection();
 14036  00B2  318F  27A5  3180   	fcall	_menuSelection
 14037                           
 14038                           ;controller.c: 65:         if (upState || downState || menuState) {
 14039  00B5  0141               	movlb	1	; select bank1
 14040  00B6  0841               	movf	_upState^(0+128),w
 14041  00B7  1D03               	btfss	3,2
 14042  00B8  28BE               	goto	l1008
 14043  00B9  0840               	movf	_downState^(0+128),w
 14044  00BA  1903               	btfsc	3,2
 14045  00BB  083F               	movf	_menuState^(0+128),w
 14046  00BC  1903               	btfsc	3,2
 14047  00BD  0008               	return
 14048  00BE                     l1008:	
 14049                           
 14050                           ;controller.c: 66:             menuPressed = 1;
 14051  00BE  01C3               	clrf	_menuPressed^(0+128)
 14052  00BF  0AC3               	incf	_menuPressed^(0+128),f
 14053  00C0  0008               	return
 14054  00C1                     l5408:	
 14055                           
 14056                           ;controller.c: 72:         if(menuPressed == 0 && startup == 1)
 14057  00C1  0843               	movf	_menuPressed^(0+128),w
 14058  00C2  1D03               	btfss	3,2
 14059  00C3  28CB               	goto	l5414
 14060  00C4  036E               	decf	_startup^(0+128),w
 14061  00C5  1D03               	btfss	3,2
 14062  00C6  28CB               	goto	l5414
 14063                           
 14064                           ;controller.c: 73:             currentSelection = 3;
 14065  00C7  3003               	movlw	3
 14066  00C8  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14067  00C9  085C               	movf	??_CONTROLLER_task^(0+128),w
 14068  00CA  00EC               	movwf	_currentSelection^(0+128)
 14069  00CB                     l5414:	
 14070                           
 14071                           ;controller.c: 74:         startup = 0;
 14072  00CB  01EE               	clrf	_startup^(0+128)
 14073                           
 14074                           ;controller.c: 77:     volatile uint8_t status = currentSelection;
 14075  00CC  086C               	movf	_currentSelection^(0+128),w
 14076  00CD  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14077  00CE  085C               	movf	??_CONTROLLER_task^(0+128),w
 14078  00CF  00DE               	movwf	CONTROLLER_task@status^(0+128)	;volatile
 14079                           
 14080                           ;controller.c: 79:     if((menuState || menuPressed) && !enterPressed){
 14081  00D0  083F               	movf	_menuState^(0+128),w
 14082  00D1  1903               	btfsc	3,2
 14083  00D2  0843               	movf	_menuPressed^(0+128),w
 14084  00D3  1903               	btfsc	3,2
 14085  00D4  28DE               	goto	l5428
 14086  00D5  0842               	movf	_enterPressed^(0+128),w
 14087  00D6  1D03               	btfss	3,2
 14088  00D7  28DE               	goto	l5428
 14089                           
 14090                           ;controller.c: 80:         menuPressed = 1;
 14091  00D8  01C3               	clrf	_menuPressed^(0+128)
 14092  00D9  0AC3               	incf	_menuPressed^(0+128),f
 14093                           
 14094                           ;controller.c: 81:         menuSelection();
 14095  00DA  318F  27A5  3180   	fcall	_menuSelection
 14096                           
 14097                           ;controller.c: 82:     } else if (upState && currentSelection == 3) {
 14098  00DD  2969               	goto	l5478
 14099  00DE                     l5428:	
 14100  00DE  0841               	movf	_upState^(0+128),w
 14101  00DF  1903               	btfsc	3,2
 14102  00E0  28F4               	goto	l5436
 14103  00E1  3003               	movlw	3
 14104  00E2  066C               	xorwf	_currentSelection^(0+128),w
 14105  00E3  1D03               	btfss	3,2
 14106  00E4  28F4               	goto	l5436
 14107                           
 14108                           ;controller.c: 83:         address_inc();
 14109  00E5  318B  232B  3180   	fcall	_address_inc
 14110                           
 14111                           ;controller.c: 84:         lastActiveTime = CLOCK_getTime();
 14112  00E8  3189  2143  3180   	fcall	_CLOCK_getTime
 14113  00EB  0140               	movlb	0	; select bank0
 14114  00EC  0821               	movf	?_CLOCK_getTime+1,w
 14115  00ED  0141               	movlb	1	; select bank1
 14116  00EE  00B0               	movwf	(_lastActiveTime+1)^(0+128)
 14117  00EF  0140               	movlb	0	; select bank0
 14118  00F0  0820               	movf	?_CLOCK_getTime,w
 14119  00F1  0141               	movlb	1	; select bank1
 14120  00F2  00AF               	movwf	_lastActiveTime^(0+128)
 14121                           
 14122                           ;controller.c: 85:     } else if (downState && currentSelection == 3) {
 14123  00F3  2969               	goto	l5478
 14124  00F4                     l5436:	
 14125  00F4  0840               	movf	_downState^(0+128),w
 14126  00F5  1903               	btfsc	3,2
 14127  00F6  28FF               	goto	l5442
 14128  00F7  3003               	movlw	3
 14129  00F8  066C               	xorwf	_currentSelection^(0+128),w
 14130  00F9  1D03               	btfss	3,2
 14131  00FA  28FF               	goto	l5442
 14132                           
 14133                           ;controller.c: 86:         address_dec();
 14134  00FB  318A  22E2  3180   	fcall	_address_dec
 14135                           
 14136                           ;controller.c: 87:     } else if(upState && (CLOCK_getTime() - lastIncTime > incInterval
      +                          ) && currentSelection == 3){
 14137  00FE  2969               	goto	l5478
 14138  00FF                     l5442:	
 14139  00FF  0841               	movf	_upState^(0+128),w
 14140  0100  1903               	btfsc	3,2
 14141  0101  293B               	goto	l5456
 14142  0102  3189  2143  3180   	fcall	_CLOCK_getTime
 14143  0105  0141               	movlb	1	; select bank1
 14144  0106  0831               	movf	_lastIncTime^(0+128),w
 14145  0107  0140               	movlb	0	; select bank0
 14146  0108  0220               	subwf	?_CLOCK_getTime,w
 14147  0109  0141               	movlb	1	; select bank1
 14148  010A  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14149  010B  0832               	movf	(_lastIncTime+1)^(0+128),w
 14150  010C  0140               	movlb	0	; select bank0
 14151  010D  3B21               	subwfb	?_CLOCK_getTime+1,w
 14152  010E  0141               	movlb	1	; select bank1
 14153  010F  00DD               	movwf	(??_CONTROLLER_task+1)^(0+128)
 14154  0110  085D               	movf	(??_CONTROLLER_task+1)^(0+128),w
 14155  0111  0269               	subwf	(_incInterval+1)^(0+128),w
 14156  0112  1D03               	skipz
 14157  0113  2916               	goto	u4215
 14158  0114  085C               	movf	??_CONTROLLER_task^(0+128),w
 14159  0115  0268               	subwf	_incInterval^(0+128),w
 14160  0116                     u4215:	
 14161  0116  1803               	skipnc
 14162  0117  293B               	goto	l5456
 14163  0118  3003               	movlw	3
 14164  0119  066C               	xorwf	_currentSelection^(0+128),w
 14165  011A  1D03               	btfss	3,2
 14166  011B  293B               	goto	l5456
 14167                           
 14168                           ;controller.c: 88:         address_inc();
 14169  011C  318B  232B  3180   	fcall	_address_inc
 14170  011F                     L11:	
 14171                           
 14172                           ;controller.c: 89:         lastIncTime = CLOCK_getTime();
 14173  011F  3189  2143  3180   	fcall	_CLOCK_getTime
 14174  0122  0140               	movlb	0	; select bank0
 14175  0123  0821               	movf	?_CLOCK_getTime+1,w
 14176  0124  0141               	movlb	1	; select bank1
 14177  0125  00B2               	movwf	(_lastIncTime+1)^(0+128)
 14178  0126  0140               	movlb	0	; select bank0
 14179  0127  0820               	movf	?_CLOCK_getTime,w
 14180  0128  0141               	movlb	1	; select bank1
 14181  0129  00B1               	movwf	_lastIncTime^(0+128)
 14182                           
 14183                           ;controller.c: 90:         if(incInterval > 20){
 14184  012A  0869               	movf	(_incInterval+1)^(0+128),w
 14185  012B  3A80               	xorlw	128
 14186  012C  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14187  012D  3080               	movlw	128
 14188  012E  025C               	subwf	??_CONTROLLER_task^(0+128),w
 14189  012F  1D03               	skipz
 14190  0130  2933               	goto	u4235
 14191  0131  3015               	movlw	21
 14192  0132  0268               	subwf	_incInterval^(0+128),w
 14193  0133                     u4235:	
 14194  0133  1C03               	skipc
 14195  0134  2969               	goto	l5478
 14196                           
 14197                           ;controller.c: 91:             incInterval-=1;
 14198  0135  30FF               	movlw	255
 14199  0136  0141               	movlb	1	; select bank1
 14200  0137  07E8               	addwf	_incInterval^(0+128),f
 14201  0138  30FF               	movlw	255
 14202  0139  3DE9               	addwfc	(_incInterval+1)^(0+128),f
 14203  013A  2969               	goto	l5478
 14204  013B                     l5456:	
 14205  013B  0840               	movf	_downState^(0+128),w
 14206  013C  1903               	btfsc	3,2
 14207  013D  295C               	goto	l5470
 14208  013E  3189  2143  3180   	fcall	_CLOCK_getTime
 14209  0141  0141               	movlb	1	; select bank1
 14210  0142  0831               	movf	_lastIncTime^(0+128),w
 14211  0143  0140               	movlb	0	; select bank0
 14212  0144  0220               	subwf	?_CLOCK_getTime,w
 14213  0145  0141               	movlb	1	; select bank1
 14214  0146  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14215  0147  0832               	movf	(_lastIncTime+1)^(0+128),w
 14216  0148  0140               	movlb	0	; select bank0
 14217  0149  3B21               	subwfb	?_CLOCK_getTime+1,w
 14218  014A  0141               	movlb	1	; select bank1
 14219  014B  00DD               	movwf	(??_CONTROLLER_task+1)^(0+128)
 14220  014C  085D               	movf	(??_CONTROLLER_task+1)^(0+128),w
 14221  014D  0269               	subwf	(_incInterval+1)^(0+128),w
 14222  014E  1D03               	skipz
 14223  014F  2952               	goto	u4255
 14224  0150  085C               	movf	??_CONTROLLER_task^(0+128),w
 14225  0151  0268               	subwf	_incInterval^(0+128),w
 14226  0152                     u4255:	
 14227  0152  1803               	skipnc
 14228  0153  295C               	goto	l5470
 14229  0154  3003               	movlw	3
 14230  0155  066C               	xorwf	_currentSelection^(0+128),w
 14231  0156  1D03               	btfss	3,2
 14232  0157  295C               	goto	l5470
 14233                           
 14234                           ;controller.c: 94:         address_dec();
 14235  0158  318A  22E2  3180   	fcall	_address_dec
 14236  015B  291F               	goto	L11
 14237  015C                     l5470:	
 14238                           ;controller.c: 96:         if(incInterval > 20){
 14239                           
 14240                           ;controller.c: 95:         lastIncTime = CLOCK_getTime();
 14241                           
 14242  015C  083E               	movf	_enterState^(0+128),w
 14243  015D  1903               	btfsc	3,2
 14244  015E  2968               	goto	l5476
 14245  015F  3003               	movlw	3
 14246  0160  066C               	xorwf	_currentSelection^(0+128),w
 14247  0161  1D03               	btfss	3,2
 14248  0162  2968               	goto	l5476
 14249                           
 14250                           ;controller.c: 100:         address = 1;
 14251  0163  3001               	movlw	1
 14252  0164  00EA               	movwf	_address^(0+128)
 14253  0165  3000               	movlw	0
 14254  0166  00EB               	movwf	(_address^(0+128)+1)
 14255                           
 14256                           ;controller.c: 101:     } else {
 14257  0167  2969               	goto	l5478
 14258  0168                     l5476:	
 14259                           
 14260                           ;controller.c: 102:         isActive = 0;
 14261  0168  01DF               	clrf	CONTROLLER_task@isActive^(0+128)
 14262  0169                     l5478:	
 14263                           
 14264                           ;controller.c: 105:     if (currentSelection == 1 || currentSelection == 2){
 14265  0169  0141               	movlb	1	; select bank1
 14266  016A  036C               	decf	_currentSelection^(0+128),w
 14267  016B  1903               	btfsc	3,2
 14268  016C  2971               	goto	l1030
 14269  016D  3002               	movlw	2
 14270  016E  066C               	xorwf	_currentSelection^(0+128),w
 14271  016F  1D03               	btfss	3,2
 14272  0170  2973               	goto	l5482
 14273  0171                     l1030:	
 14274                           
 14275                           ;controller.c: 106:         isActive = 1;
 14276  0171  01DF               	clrf	CONTROLLER_task@isActive^(0+128)
 14277  0172  0ADF               	incf	CONTROLLER_task@isActive^(0+128),f
 14278  0173                     l5482:	
 14279                           
 14280                           ;controller.c: 109:     if(!upState && !downState){
 14281  0173  0841               	movf	_upState^(0+128),w
 14282  0174  1D03               	btfss	3,2
 14283  0175  297D               	goto	l5488
 14284  0176  0840               	movf	_downState^(0+128),w
 14285  0177  1D03               	btfss	3,2
 14286  0178  297D               	goto	l5488
 14287                           
 14288                           ;controller.c: 110:         incInterval = 100;
 14289  0179  3064               	movlw	100
 14290  017A  00E8               	movwf	_incInterval^(0+128)
 14291  017B  3000               	movlw	0
 14292  017C  00E9               	movwf	(_incInterval^(0+128)+1)
 14293  017D                     l5488:	
 14294                           
 14295                           ;controller.c: 113:     if(isActive) {
 14296  017D  085F               	movf	CONTROLLER_task@isActive^(0+128),w
 14297  017E  1903               	btfsc	3,2
 14298  017F  298B               	goto	l5492
 14299                           
 14300                           ;controller.c: 114:         lastActiveTime = CLOCK_getTime();
 14301  0180  3189  2143  3180   	fcall	_CLOCK_getTime
 14302  0183  0140               	movlb	0	; select bank0
 14303  0184  0821               	movf	?_CLOCK_getTime+1,w
 14304  0185  0141               	movlb	1	; select bank1
 14305  0186  00B0               	movwf	(_lastActiveTime+1)^(0+128)
 14306  0187  0140               	movlb	0	; select bank0
 14307  0188  0820               	movf	?_CLOCK_getTime,w
 14308  0189  0141               	movlb	1	; select bank1
 14309  018A  00AF               	movwf	_lastActiveTime^(0+128)
 14310  018B                     l5492:	
 14311                           
 14312                           ;controller.c: 117:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 14313  018B  3189  2143  3180   	fcall	_CLOCK_getTime
 14314  018E  0141               	movlb	1	; select bank1
 14315  018F  082F               	movf	_lastActiveTime^(0+128),w
 14316  0190  0140               	movlb	0	; select bank0
 14317  0191  0220               	subwf	?_CLOCK_getTime,w
 14318  0192  0141               	movlb	1	; select bank1
 14319  0193  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14320  0194  0830               	movf	(_lastActiveTime+1)^(0+128),w
 14321  0195  0140               	movlb	0	; select bank0
 14322  0196  3B21               	subwfb	?_CLOCK_getTime+1,w
 14323  0197  0141               	movlb	1	; select bank1
 14324  0198  00DD               	movwf	(??_CONTROLLER_task+1)^(0+128)
 14325  0199  3013               	movlw	19
 14326  019A  025D               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 14327  019B  3088               	movlw	136
 14328  019C  1903               	skipnz
 14329  019D  025C               	subwf	??_CONTROLLER_task^(0+128),w
 14330  019E  1C03               	skipc
 14331  019F  29B2               	goto	l5498
 14332                           
 14333                           ;controller.c: 118:         TM1650_enable(0);
 14334  01A0  3000               	movlw	0
 14335  01A1  318A  2289  3180   	fcall	_TM1650_enable
 14336                           
 14337                           ;controller.c: 119:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 14338  01A4  3189  2143  3180   	fcall	_CLOCK_getTime
 14339  01A7  0140               	movlb	0	; select bank0
 14340  01A8  0820               	movf	?_CLOCK_getTime,w
 14341  01A9  3E77               	addlw	119
 14342  01AA  0141               	movlb	1	; select bank1
 14343  01AB  00AF               	movwf	_lastActiveTime^(0+128)
 14344  01AC  30EC               	movlw	236
 14345  01AD  0140               	movlb	0	; select bank0
 14346  01AE  3D21               	addwfc	?_CLOCK_getTime+1,w
 14347  01AF  0141               	movlb	1	; select bank1
 14348  01B0  00B0               	movwf	(_lastActiveTime+1)^(0+128)
 14349                           
 14350                           ;controller.c: 120:     } else{
 14351  01B1  29B6               	goto	l5500
 14352  01B2                     l5498:	
 14353                           
 14354                           ;controller.c: 121:         TM1650_enable(1);
 14355  01B2  3001               	movlw	1
 14356  01B3  318A  2289  3180   	fcall	_TM1650_enable
 14357  01B6                     l5500:	
 14358                           
 14359                           ;controller.c: 124:     if(currentSelection == 3 && !menuPressed) {
 14360  01B6  3003               	movlw	3
 14361  01B7  0141               	movlb	1	; select bank1
 14362  01B8  066C               	xorwf	_currentSelection^(0+128),w
 14363  01B9  1D03               	btfss	3,2
 14364  01BA  29D5               	goto	l5508
 14365  01BB  0843               	movf	_menuPressed^(0+128),w
 14366  01BC  1D03               	btfss	3,2
 14367  01BD  29D5               	goto	l5508
 14368                           
 14369                           ;controller.c: 125:         TM1650_fastPrintNum(address);
 14370  01BE  086B               	movf	(_address+1)^(0+128),w
 14371  01BF  0140               	movlb	0	; select bank0
 14372  01C0  00B5               	movwf	TM1650_fastPrintNum@num+1
 14373  01C1  0141               	movlb	1	; select bank1
 14374  01C2  086A               	movf	_address^(0+128),w
 14375  01C3  0140               	movlb	0	; select bank0
 14376  01C4  00B4               	movwf	TM1650_fastPrintNum@num
 14377  01C5  3185  25DB  3180   	fcall	_TM1650_fastPrintNum
 14378  01C8  29D2               	goto	l5506
 14379  01C9                     l5510:	
 14380  01C9  0843               	movf	_menuPressed^(0+128),w
 14381  01CA  1D03               	btfss	3,2
 14382  01CB  29D8               	goto	l5516
 14383                           
 14384                           ;controller.c: 128:         printf("SEL1\r");
 14385  01CC  3055               	movlw	low (STR_1| (0+32768))
 14386  01CD  00D2               	movwf	printf@fmt^(0+128)
 14387  01CE  3090               	movlw	high (STR_1| (0+32768))
 14388  01CF                     L12:	
 14389  01CF  00D3               	movwf	(printf@fmt^(0+128)+1)
 14390  01D0  318A  229E         	fcall	_printf
 14391  01D2                     l5506:	
 14392                           
 14393                           ;controller.c: 126:         enterPressed = 0;
 14394  01D2  0141               	movlb	1	; select bank1
 14395  01D3  01C2               	clrf	_enterPressed^(0+128)
 14396                           
 14397                           ;controller.c: 127:     } else if(currentSelection == 1 && !menuPressed) {
 14398  01D4  0008               	return
 14399  01D5                     l5508:	
 14400  01D5  036C               	decf	_currentSelection^(0+128),w
 14401  01D6  1903               	btfsc	3,2
 14402  01D7  29C9               	goto	l5510
 14403  01D8                     l5516:	
 14404  01D8  3002               	movlw	2
 14405  01D9  066C               	xorwf	_currentSelection^(0+128),w
 14406  01DA  1D03               	btfss	3,2
 14407  01DB  0008               	return
 14408  01DC  0843               	movf	_menuPressed^(0+128),w
 14409  01DD  1D03               	btfss	3,2
 14410  01DE  0008               	return
 14411                           
 14412                           ;controller.c: 131:         printf("B-1");
 14413  01DF  3066               	movlw	low (STR_2| (0+32768))
 14414  01E0  00D2               	movwf	printf@fmt^(0+128)
 14415  01E1  3090               	movlw	high (STR_2| (0+32768))
 14416  01E2  29CF               	goto	L12
 14417  01E3                     __end_of_CONTROLLER_task:	
 14418                           
 14419                           	psect	text27
 14420  0FA5                     __ptext27:	
 14421 ;; *************** function _menuSelection *****************
 14422 ;; Defined at:
 14423 ;;		line 141 in file "controller.c"
 14424 ;; Parameters:    Size  Location     Type
 14425 ;;		None
 14426 ;; Auto vars:     Size  Location     Type
 14427 ;;		None
 14428 ;; Return value:  Size  Location     Type
 14429 ;;                  1    wreg      void 
 14430 ;; Registers used:
 14431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14432 ;; Tracked objects:
 14433 ;;		On entry : 0/0
 14434 ;;		On exit  : 0/0
 14435 ;;		Unchanged: 0/0
 14436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14439 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14440 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14441 ;;Total ram usage:        2 bytes
 14442 ;; Hardware stack levels used:    1
 14443 ;; Hardware stack levels required when called:   17
 14444 ;; This function calls:
 14445 ;;		_printf
 14446 ;; This function is called by:
 14447 ;;		_CONTROLLER_task
 14448 ;; This function uses a non-reentrant model
 14449 ;;
 14450                           
 14451                           
 14452                           ;psect for function _menuSelection
 14453  0FA5                     _menuSelection:	
 14454                           
 14455                           ;controller.c: 143:     if(upState){
 14456                           
 14457                           ;incstack = 0
 14458 ;; hardware stack exceeded
 14459                           ; Regs used in _menuSelection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14460  0FA5  0141               	movlb	1	; select bank1
 14461  0FA6  0841               	movf	_upState^(0+128),w
 14462  0FA7  1903               	btfsc	3,2
 14463  0FA8  2FBB               	goto	l5236
 14464                           
 14465                           ;controller.c: 144:         if(menuSelected < 3){
 14466  0FA9  3003               	movlw	3
 14467  0FAA  026D               	subwf	_menuSelected^(0+128),w
 14468  0FAB  1803               	skipnc
 14469  0FAC  2FB4               	goto	l5234
 14470                           
 14471                           ;controller.c: 145:             menuSelected++;
 14472  0FAD  3001               	movlw	1
 14473  0FAE  0140               	movlb	0	; select bank0
 14474  0FAF  00ED               	movwf	??_menuSelection
 14475  0FB0  086D               	movf	??_menuSelection,w
 14476  0FB1  0141               	movlb	1	; select bank1
 14477  0FB2  07ED               	addwf	_menuSelected^(0+128),f
 14478                           
 14479                           ;controller.c: 146:         } else {
 14480  0FB3  2FC6               	goto	l5244
 14481  0FB4                     l5234:	
 14482                           
 14483                           ;controller.c: 147:             menuSelected = 2;
 14484  0FB4  3002               	movlw	2
 14485  0FB5  0140               	movlb	0	; select bank0
 14486  0FB6  00ED               	movwf	??_menuSelection
 14487  0FB7  086D               	movf	??_menuSelection,w
 14488  0FB8  0141               	movlb	1	; select bank1
 14489  0FB9  00ED               	movwf	_menuSelected^(0+128)
 14490  0FBA  2FC6               	goto	l5244
 14491  0FBB                     l5236:	
 14492  0FBB  0840               	movf	_downState^(0+128),w
 14493  0FBC  1903               	btfsc	3,2
 14494  0FBD  2FC6               	goto	l5244
 14495                           
 14496                           ;controller.c: 150:         if(menuSelected > 1){
 14497  0FBE  3002               	movlw	2
 14498  0FBF  026D               	subwf	_menuSelected^(0+128),w
 14499  0FC0  1C03               	skipc
 14500  0FC1  2FC5               	goto	l5242
 14501                           
 14502                           ;controller.c: 151:             menuSelected--;
 14503  0FC2  3001               	movlw	1
 14504  0FC3  02ED               	subwf	_menuSelected^(0+128),f
 14505                           
 14506                           ;controller.c: 152:         } else {
 14507  0FC4  2FC6               	goto	l5244
 14508  0FC5                     l5242:	
 14509                           
 14510                           ;controller.c: 153:             menuSelected = 0;
 14511  0FC5  01ED               	clrf	_menuSelected^(0+128)
 14512  0FC6                     l5244:	
 14513                           
 14514                           ;controller.c: 157:     if (enterState) {
 14515  0FC6  083E               	movf	_enterState^(0+128),w
 14516  0FC7  1903               	btfsc	3,2
 14517  0FC8  2FEB               	goto	l5262
 14518                           
 14519                           ;controller.c: 158:         currentSelection = menuSelected;
 14520  0FC9  086D               	movf	_menuSelected^(0+128),w
 14521  0FCA  0140               	movlb	0	; select bank0
 14522  0FCB  00ED               	movwf	??_menuSelection
 14523  0FCC  086D               	movf	??_menuSelection,w
 14524  0FCD  0141               	movlb	1	; select bank1
 14525  0FCE  00EC               	movwf	_currentSelection^(0+128)
 14526                           
 14527                           ;controller.c: 159:         menuPressed = 0;
 14528  0FCF  01C3               	clrf	_menuPressed^(0+128)
 14529                           
 14530                           ;controller.c: 160:         enterPressed = 1;
 14531  0FD0  01C2               	clrf	_enterPressed^(0+128)
 14532  0FD1  0AC2               	incf	_enterPressed^(0+128),f
 14533  0FD2  0008               	return
 14534  0FD3                     l5254:	
 14535                           
 14536                           ;controller.c: 166:             printf("ANI \r");
 14537  0FD3  304F               	movlw	low (STR_3| (0+32768))
 14538  0FD4  0141               	movlb	1	; select bank1
 14539  0FD5  00D2               	movwf	printf@fmt^(0+128)
 14540  0FD6  3090               	movlw	high (STR_3| (0+32768))
 14541  0FD7  00D3               	movwf	(printf@fmt^(0+128)+1)
 14542  0FD8  318A  229E         	fcall	_printf
 14543                           
 14544                           ;controller.c: 167:             break;
 14545  0FDA  0008               	return
 14546  0FDB                     l5256:	
 14547                           
 14548                           ;controller.c: 170:             printf("BEAT\r");
 14549  0FDB  305B               	movlw	low (STR_4| (0+32768))
 14550  0FDC  0141               	movlb	1	; select bank1
 14551  0FDD  00D2               	movwf	printf@fmt^(0+128)
 14552  0FDE  3090               	movlw	high (STR_4| (0+32768))
 14553  0FDF  00D3               	movwf	(printf@fmt^(0+128)+1)
 14554  0FE0  318A  229E         	fcall	_printf
 14555                           
 14556                           ;controller.c: 171:             break;
 14557  0FE2  0008               	return
 14558  0FE3                     l5258:	
 14559                           
 14560                           ;controller.c: 174:             printf("PC  \r");
 14561  0FE3  3049               	movlw	low (STR_5| (0+32768))
 14562  0FE4  0141               	movlb	1	; select bank1
 14563  0FE5  00D2               	movwf	printf@fmt^(0+128)
 14564  0FE6  3090               	movlw	high (STR_5| (0+32768))
 14565  0FE7  00D3               	movwf	(printf@fmt^(0+128)+1)
 14566  0FE8  318A  229E         	fcall	_printf
 14567                           
 14568                           ;controller.c: 175:             break;
 14569  0FEA  0008               	return
 14570  0FEB                     l5262:	
 14571  0FEB  086D               	movf	_menuSelected^(0+128),w
 14572  0FEC  0140               	movlb	0	; select bank0
 14573  0FED  00ED               	movwf	??_menuSelection
 14574  0FEE  01EE               	clrf	??_menuSelection+1
 14575                           
 14576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14577                           ; Switch size 1, requested type "simple"
 14578                           ; Number of cases is 1, Range of values is 0 to 0
 14579                           ; switch strategies available:
 14580                           ; Name         Instructions Cycles
 14581                           ; simple_byte            4     3 (average)
 14582                           ; direct_byte            8     6 (fixed)
 14583                           ; jumptable            260     6 (fixed)
 14584                           ;	Chosen strategy is simple_byte
 14585  0FEF  086E               	movf	??_menuSelection+1,w
 14586  0FF0  3A00               	xorlw	0	; case 0
 14587  0FF1  1903               	skipnz
 14588  0FF2  2FF4               	goto	l5764
 14589  0FF3  2FFF               	goto	l1053
 14590  0FF4                     l5764:	
 14591                           
 14592                           ; Switch size 1, requested type "simple"
 14593                           ; Number of cases is 3, Range of values is 1 to 3
 14594                           ; switch strategies available:
 14595                           ; Name         Instructions Cycles
 14596                           ; simple_byte           10     6 (average)
 14597                           ; direct_byte           15     9 (fixed)
 14598                           ; jumptable            263     9 (fixed)
 14599                           ;	Chosen strategy is simple_byte
 14600  0FF4  086D               	movf	??_menuSelection,w
 14601  0FF5  3A01               	xorlw	1	; case 1
 14602  0FF6  1903               	skipnz
 14603  0FF7  2FD3               	goto	l5254
 14604  0FF8  3A03               	xorlw	3	; case 2
 14605  0FF9  1903               	skipnz
 14606  0FFA  2FDB               	goto	l5256
 14607  0FFB  3A01               	xorlw	1	; case 3
 14608  0FFC  1903               	skipnz
 14609  0FFD  2FE3               	goto	l5258
 14610  0FFE  2FFF               	goto	l1053
 14611  0FFF                     l1053:	
 14612  0FFF  0008               	return
 14613  1000                     __end_of_menuSelection:	
 14614                           
 14615                           	psect	text28
 14616  0A9E                     __ptext28:	
 14617 ;; *************** function _printf *****************
 14618 ;; Defined at:
 14619 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 14620 ;; Parameters:    Size  Location     Type
 14621 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 14622 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 14623 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 14624 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 14625 ;;		 -> STR_3(6), STR_2(4), STR_1(6), 
 14626 ;; Auto vars:     Size  Location     Type
 14627 ;;  ret             2    0        int 
 14628 ;;  ap              1   76[BANK0 ] PTR void [1]
 14629 ;;		 -> ?_printf(2), 
 14630 ;; Return value:  Size  Location     Type
 14631 ;;                  2    0[BANK1 ] int 
 14632 ;; Registers used:
 14633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14634 ;; Tracked objects:
 14635 ;;		On entry : 0/0
 14636 ;;		On exit  : 0/0
 14637 ;;		Unchanged: 0/0
 14638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14639 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14640 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14641 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14642 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14643 ;;Total ram usage:       14 bytes
 14644 ;; Hardware stack levels used:    1
 14645 ;; Hardware stack levels required when called:   16
 14646 ;; This function calls:
 14647 ;;		_vfprintf
 14648 ;; This function is called by:
 14649 ;;		_CONTROLLER_task
 14650 ;;		_menuSelection
 14651 ;;		_TM1650_init
 14652 ;;		_TM1650_scrollPrint
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           
 14656                           
 14657                           ;psect for function _printf
 14658  0A9E                     _printf:	
 14659                           
 14660                           ;incstack = 0
 14661 ;; hardware stack exceeded
 14662                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14663  0A9E  30D4               	movlw	(low ((?_printf| 0+2)))& (0+255)
 14664  0A9F  0140               	movlb	0	; select bank0
 14665  0AA0  00E9               	movwf	??_printf
 14666  0AA1  0869               	movf	??_printf,w
 14667  0AA2  00EC               	movwf	printf@ap
 14668  0AA3  0141               	movlb	1	; select bank1
 14669  0AA4  0853               	movf	(printf@fmt+1)^(0+128),w
 14670  0AA5  0140               	movlb	0	; select bank0
 14671  0AA6  00E2               	movwf	vfprintf@fmt+1
 14672  0AA7  0141               	movlb	1	; select bank1
 14673  0AA8  0852               	movf	printf@fmt^(0+128),w
 14674  0AA9  0140               	movlb	0	; select bank0
 14675  0AAA  00E1               	movwf	vfprintf@fmt
 14676  0AAB  306C               	movlw	(low (printf@ap| 0))& (0+255)
 14677  0AAC  00E9               	movwf	??_printf
 14678  0AAD  0869               	movf	??_printf,w
 14679  0AAE  00E3               	movwf	vfprintf@ap
 14680  0AAF  3000               	movlw	0
 14681  0AB0  318D  2523         	fcall	_vfprintf
 14682  0AB2  0008               	return
 14683  0AB3                     __end_of_printf:	
 14684                           
 14685                           	psect	text29
 14686  0D23                     __ptext29:	
 14687 ;; *************** function _vfprintf *****************
 14688 ;; Defined at:
 14689 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 14690 ;; Parameters:    Size  Location     Type
 14691 ;;  fp              1    wreg     PTR struct _IO_FILE
 14692 ;;		 -> NULL(0), 
 14693 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
 14694 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 14695 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 14696 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 14697 ;;		 -> STR_3(6), STR_2(4), STR_1(6), 
 14698 ;;  ap              1   67[BANK0 ] PTR PTR void 
 14699 ;;		 -> printf@ap(1), 
 14700 ;; Auto vars:     Size  Location     Type
 14701 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
 14702 ;;		 -> NULL(0), 
 14703 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 14704 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 14705 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 14706 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 14707 ;;		 -> STR_3(6), STR_2(4), STR_1(6), 
 14708 ;; Return value:  Size  Location     Type
 14709 ;;                  2   65[BANK0 ] int 
 14710 ;; Registers used:
 14711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14712 ;; Tracked objects:
 14713 ;;		On entry : 0/0
 14714 ;;		On exit  : 0/0
 14715 ;;		Unchanged: 0/0
 14716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14717 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14718 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14719 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14720 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14721 ;;Total ram usage:        8 bytes
 14722 ;; Hardware stack levels used:    1
 14723 ;; Hardware stack levels required when called:   15
 14724 ;; This function calls:
 14725 ;;		_vfpfcnvrt
 14726 ;; This function is called by:
 14727 ;;		_printf
 14728 ;; This function uses a non-reentrant model
 14729 ;;
 14730                           
 14731                           
 14732                           ;psect for function _vfprintf
 14733  0D23                     _vfprintf:	
 14734                           
 14735                           ;incstack = 0
 14736 ;; hardware stack exceeded
 14737                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14738                           ;vfprintf@fp stored from wreg
 14739  0D23  0140               	movlb	0	; select bank0
 14740  0D24  00E6               	movwf	vfprintf@fp
 14741                           
 14742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 14743  0D25  0862               	movf	vfprintf@fmt+1,w
 14744  0D26  00E8               	movwf	vfprintf@cfmt+1
 14745  0D27  0861               	movf	vfprintf@fmt,w
 14746  0D28  00E7               	movwf	vfprintf@cfmt
 14747                           
 14748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 14749  0D29  0142               	movlb	2	; select bank2
 14750  0D2A  01B0               	clrf	_nout^(0+256)
 14751  0D2B  01B1               	clrf	(_nout+1)^(0+256)
 14752  0D2C                     l4946:	
 14753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 14754                           
 14755                           
 14756                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 14757  0D2C  0140               	movlb	0	; select bank0
 14758  0D2D  0867               	movf	vfprintf@cfmt,w
 14759  0D2E  0084               	movwf	4
 14760  0D2F  0868               	movf	vfprintf@cfmt+1,w
 14761  0D30  0085               	movwf	5
 14762  0D31  0012               	moviw fsr0++
 14763  0D32  1903               	btfsc	3,2
 14764  0D33  2D49               	goto	l4948
 14765                           
 14766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 14767  0D34  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 14768  0D35  00E4               	movwf	??_vfprintf
 14769  0D36  0864               	movf	??_vfprintf,w
 14770  0D37  00D8               	movwf	vfpfcnvrt@fmt
 14771  0D38  0863               	movf	vfprintf@ap,w
 14772  0D39  00E5               	movwf	??_vfprintf+1
 14773  0D3A  0865               	movf	??_vfprintf+1,w
 14774  0D3B  00D9               	movwf	vfpfcnvrt@ap
 14775  0D3C  0866               	movf	vfprintf@fp,w
 14776  0D3D  3186  269D  318D   	fcall	_vfpfcnvrt
 14777  0D40  0140               	movlb	0	; select bank0
 14778  0D41  0858               	movf	?_vfpfcnvrt,w
 14779  0D42  0142               	movlb	2	; select bank2
 14780  0D43  07B0               	addwf	_nout^(0+256),f
 14781  0D44  0140               	movlb	0	; select bank0
 14782  0D45  0859               	movf	?_vfpfcnvrt+1,w
 14783  0D46  0142               	movlb	2	; select bank2
 14784  0D47  3DB1               	addwfc	(_nout+1)^(0+256),f
 14785  0D48  2D2C               	goto	l4946
 14786  0D49                     l4948:	
 14787                           
 14788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 14789  0D49  0142               	movlb	2	; select bank2
 14790  0D4A  0831               	movf	(_nout+1)^(0+256),w
 14791  0D4B  0140               	movlb	0	; select bank0
 14792  0D4C  00E2               	movwf	?_vfprintf+1
 14793  0D4D  0142               	movlb	2	; select bank2
 14794  0D4E  0830               	movf	_nout^(0+256),w
 14795  0D4F  0140               	movlb	0	; select bank0
 14796  0D50  00E1               	movwf	?_vfprintf
 14797  0D51  0008               	return
 14798  0D52                     __end_of_vfprintf:	
 14799                           
 14800                           	psect	text30
 14801  069D                     __ptext30:	
 14802 ;; *************** function _vfpfcnvrt *****************
 14803 ;; Defined at:
 14804 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 14805 ;; Parameters:    Size  Location     Type
 14806 ;;  fp              1    wreg     PTR struct _IO_FILE
 14807 ;;		 -> NULL(0), 
 14808 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
 14809 ;;		 -> vfprintf@cfmt(2), 
 14810 ;;  ap              1   57[BANK0 ] PTR PTR void 
 14811 ;;		 -> printf@ap(1), 
 14812 ;; Auto vars:     Size  Location     Type
 14813 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
 14814 ;;		 -> NULL(0), 
 14815 ;;  llu             8    0        unsigned long long 
 14816 ;;  ll              8    0        long long 
 14817 ;;  f               4    0        long long 
 14818 ;;  ct              3    0        unsigned char [3]
 14819 ;;  vp              2    0        PTR void 
 14820 ;;  i               2    0        int 
 14821 ;;  done            2    0        int 
 14822 ;;  cp              2    0        PTR unsigned char 
 14823 ;;  c               1   63[BANK0 ] unsigned char 
 14824 ;; Return value:  Size  Location     Type
 14825 ;;                  2   56[BANK0 ] int 
 14826 ;; Registers used:
 14827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14828 ;; Tracked objects:
 14829 ;;		On entry : 0/0
 14830 ;;		On exit  : 0/0
 14831 ;;		Unchanged: 0/0
 14832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14833 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14834 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14835 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14836 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14837 ;;Total ram usage:        9 bytes
 14838 ;; Hardware stack levels used:    1
 14839 ;; Hardware stack levels required when called:   14
 14840 ;; This function calls:
 14841 ;;		_ctoa
 14842 ;;		_fputc
 14843 ;; This function is called by:
 14844 ;;		_vfprintf
 14845 ;; This function uses a non-reentrant model
 14846 ;;
 14847                           
 14848                           
 14849                           ;psect for function _vfpfcnvrt
 14850  069D                     _vfpfcnvrt:	
 14851                           
 14852                           ;incstack = 0
 14853 ;; hardware stack exceeded
 14854                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14855                           ;vfpfcnvrt@fp stored from wreg
 14856  069D  0140               	movlb	0	; select bank0
 14857  069E  00E0               	movwf	vfpfcnvrt@fp
 14858                           
 14859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 14860  069F  0858               	movf	vfpfcnvrt@fmt,w
 14861  06A0  0086               	movwf	6
 14862  06A1  0187               	clrf	7
 14863  06A2  3F40               	moviw [0]fsr1
 14864  06A3  00DA               	movwf	??_vfpfcnvrt
 14865  06A4  3F41               	moviw [1]fsr1
 14866  06A5  00DB               	movwf	??_vfpfcnvrt+1
 14867  06A6  085A               	movf	??_vfpfcnvrt,w
 14868  06A7  0084               	movwf	4
 14869  06A8  085B               	movf	??_vfpfcnvrt+1,w
 14870  06A9  0085               	movwf	5
 14871  06AA  0012               	moviw fsr0++
 14872  06AB  3A25               	xorlw	37
 14873  06AC  1D03               	btfss	3,2
 14874  06AD  2F23               	goto	l4932
 14875                           
 14876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 14877  06AE  0858               	movf	vfpfcnvrt@fmt,w
 14878  06AF  0086               	movwf	6
 14879  06B0  0187               	clrf	7
 14880  06B1  3001               	movlw	1
 14881  06B2  0781               	addwf	1,f
 14882  06B3  3141               	addfsr 1,1
 14883  06B4  1803               	skipnc
 14884  06B5  0A81               	incf	1,f
 14885                           
 14886                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 14887  06B6  0141               	movlb	1	; select bank1
 14888  06B7  01A5               	clrf	_width^(0+128)
 14889  06B8  01A6               	clrf	(_width+1)^(0+128)
 14890  06B9  01A7               	clrf	_flags^(0+128)
 14891  06BA  01A8               	clrf	(_flags+1)^(0+128)
 14892                           
 14893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 14894  06BB  30FF               	movlw	255
 14895  06BC  0142               	movlb	2	; select bank2
 14896  06BD  00B2               	movwf	_prec^(0+256)
 14897  06BE  30FF               	movlw	255
 14898  06BF  00B3               	movwf	(_prec^(0+256)+1)
 14899                           
 14900                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 14901  06C0  0140               	movlb	0	; select bank0
 14902  06C1  0858               	movf	vfpfcnvrt@fmt,w
 14903  06C2  0086               	movwf	6
 14904  06C3  0187               	clrf	7
 14905  06C4  3F40               	moviw [0]fsr1
 14906  06C5  00DA               	movwf	??_vfpfcnvrt
 14907  06C6  3F41               	moviw [1]fsr1
 14908  06C7  00DB               	movwf	??_vfpfcnvrt+1
 14909  06C8  085A               	movf	??_vfpfcnvrt,w
 14910  06C9  0084               	movwf	4
 14911  06CA  085B               	movf	??_vfpfcnvrt+1,w
 14912  06CB  0085               	movwf	5
 14913  06CC  0012               	moviw fsr0++
 14914  06CD  3A63               	xorlw	99
 14915  06CE  1D03               	btfss	3,2
 14916  06CF  2EF1               	goto	l4916
 14917                           
 14918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 14919  06D0  0858               	movf	vfpfcnvrt@fmt,w
 14920  06D1  0086               	movwf	6
 14921  06D2  0187               	clrf	7
 14922  06D3  3001               	movlw	1
 14923  06D4  0781               	addwf	1,f
 14924  06D5  3141               	addfsr 1,1
 14925  06D6  1803               	skipnc
 14926  06D7  0A81               	incf	1,f
 14927                           
 14928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 14929  06D8  0859               	movf	vfpfcnvrt@ap,w
 14930  06D9  0086               	movwf	6
 14931  06DA  0187               	clrf	7
 14932  06DB  0801               	movf	1,w
 14933  06DC  0084               	movwf	4
 14934  06DD  0185               	clrf	5
 14935  06DE  3002               	movlw	2
 14936  06DF  0781               	addwf	1,f
 14937  06E0  0800               	movf	0,w
 14938  06E1  00DA               	movwf	??_vfpfcnvrt
 14939  06E2  085A               	movf	??_vfpfcnvrt,w
 14940  06E3  00DF               	movwf	vfpfcnvrt@c
 14941                           
 14942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 14943  06E4  085F               	movf	vfpfcnvrt@c,w
 14944  06E5  00DA               	movwf	??_vfpfcnvrt
 14945  06E6  085A               	movf	??_vfpfcnvrt,w
 14946  06E7  00D2               	movwf	ctoa@c
 14947  06E8  0860               	movf	vfpfcnvrt@fp,w
 14948  06E9  318D  2552         	fcall	_ctoa
 14949  06EB  0140               	movlb	0	; select bank0
 14950  06EC  0853               	movf	?_ctoa+1,w
 14951  06ED  00D9               	movwf	?_vfpfcnvrt+1
 14952  06EE  0852               	movf	?_ctoa,w
 14953  06EF  00D8               	movwf	?_vfpfcnvrt
 14954  06F0  0008               	return
 14955  06F1                     l4916:	
 14956                           
 14957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 14958  06F1  0858               	movf	vfpfcnvrt@fmt,w
 14959  06F2  0086               	movwf	6
 14960  06F3  0187               	clrf	7
 14961  06F4  3F40               	moviw [0]fsr1
 14962  06F5  00DA               	movwf	??_vfpfcnvrt
 14963  06F6  3F41               	moviw [1]fsr1
 14964  06F7  00DB               	movwf	??_vfpfcnvrt+1
 14965  06F8  085A               	movf	??_vfpfcnvrt,w
 14966  06F9  0084               	movwf	4
 14967  06FA  085B               	movf	??_vfpfcnvrt+1,w
 14968  06FB  0085               	movwf	5
 14969  06FC  0012               	moviw fsr0++
 14970  06FD  3A25               	xorlw	37
 14971  06FE  1D03               	btfss	3,2
 14972  06FF  2F18               	goto	l4926
 14973                           
 14974                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 14975  0700  0858               	movf	vfpfcnvrt@fmt,w
 14976  0701  0086               	movwf	6
 14977  0702  0187               	clrf	7
 14978  0703  3001               	movlw	1
 14979  0704  0781               	addwf	1,f
 14980  0705  3141               	addfsr 1,1
 14981  0706  1803               	skipnc
 14982  0707  0A81               	incf	1,f
 14983                           
 14984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 14985  0708  3025               	movlw	37
 14986  0709  00B9               	movwf	fputc@c
 14987  070A  3000               	movlw	0
 14988  070B  00BA               	movwf	fputc@c+1
 14989  070C  0860               	movf	vfpfcnvrt@fp,w
 14990  070D  00DA               	movwf	??_vfpfcnvrt
 14991  070E  085A               	movf	??_vfpfcnvrt,w
 14992  070F  00BB               	movwf	fputc@fp
 14993  0710  318E  2658         	fcall	_fputc
 14994  0712                     l4922:	
 14995                           
 14996                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14997  0712  3001               	movlw	1
 14998  0713  0140               	movlb	0	; select bank0
 14999  0714  00D8               	movwf	?_vfpfcnvrt
 15000  0715  3000               	movlw	0
 15001  0716  00D9               	movwf	?_vfpfcnvrt+1
 15002  0717  0008               	return
 15003  0718                     l4926:	
 15004                           
 15005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 15006  0718  0858               	movf	vfpfcnvrt@fmt,w
 15007  0719  0086               	movwf	6
 15008  071A  0187               	clrf	7
 15009  071B  3001               	movlw	1
 15010  071C  0781               	addwf	1,f
 15011  071D  3141               	addfsr 1,1
 15012  071E  1803               	skipnc
 15013  071F  0A81               	incf	1,f
 15014                           
 15015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 15016  0720  01D8               	clrf	?_vfpfcnvrt
 15017  0721  01D9               	clrf	?_vfpfcnvrt+1
 15018  0722  0008               	return
 15019  0723                     l4932:	
 15020                           
 15021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 15022  0723  0858               	movf	vfpfcnvrt@fmt,w
 15023  0724  0086               	movwf	6
 15024  0725  0187               	clrf	7
 15025  0726  3F40               	moviw [0]fsr1
 15026  0727  00DA               	movwf	??_vfpfcnvrt
 15027  0728  3F41               	moviw [1]fsr1
 15028  0729  00DB               	movwf	??_vfpfcnvrt+1
 15029  072A  085A               	movf	??_vfpfcnvrt,w
 15030  072B  0084               	movwf	4
 15031  072C  085B               	movf	??_vfpfcnvrt+1,w
 15032  072D  0085               	movwf	5
 15033  072E  0800               	movf	0,w	;code access
 15034  072F  00DC               	movwf	??_vfpfcnvrt+2
 15035  0730  01DD               	clrf	??_vfpfcnvrt+3
 15036  0731  085C               	movf	??_vfpfcnvrt+2,w
 15037  0732  00B9               	movwf	fputc@c
 15038  0733  085D               	movf	??_vfpfcnvrt+3,w
 15039  0734  00BA               	movwf	fputc@c+1
 15040  0735  0860               	movf	vfpfcnvrt@fp,w
 15041  0736  00DE               	movwf	??_vfpfcnvrt+4
 15042  0737  085E               	movf	??_vfpfcnvrt+4,w
 15043  0738  00BB               	movwf	fputc@fp
 15044  0739  318E  2658  3186   	fcall	_fputc
 15045                           
 15046                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 15047  073C  0140               	movlb	0	; select bank0
 15048  073D  0858               	movf	vfpfcnvrt@fmt,w
 15049  073E  0086               	movwf	6
 15050  073F  0187               	clrf	7
 15051  0740  3001               	movlw	1
 15052  0741  0781               	addwf	1,f
 15053  0742  3141               	addfsr 1,1
 15054  0743  1803               	skipnc
 15055  0744  0A81               	incf	1,f
 15056  0745  2F12               	goto	l4922
 15057  0746                     __end_of_vfpfcnvrt:	
 15058                           
 15059                           	psect	text31
 15060  0D52                     __ptext31:	
 15061 ;; *************** function _ctoa *****************
 15062 ;; Defined at:
 15063 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 15064 ;; Parameters:    Size  Location     Type
 15065 ;;  fp              1    wreg     PTR struct _IO_FILE
 15066 ;;		 -> NULL(0), 
 15067 ;;  c               1   50[BANK0 ] unsigned char 
 15068 ;; Auto vars:     Size  Location     Type
 15069 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 15070 ;;		 -> NULL(0), 
 15071 ;;  w               2   53[BANK0 ] int 
 15072 ;;  l               2    0        int 
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  2   50[BANK0 ] int 
 15075 ;; Registers used:
 15076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15077 ;; Tracked objects:
 15078 ;;		On entry : 0/0
 15079 ;;		On exit  : 0/0
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15083 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15085 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15086 ;;Total ram usage:        6 bytes
 15087 ;; Hardware stack levels used:    1
 15088 ;; Hardware stack levels required when called:   13
 15089 ;; This function calls:
 15090 ;;		_pad
 15091 ;; This function is called by:
 15092 ;;		_vfpfcnvrt
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           
 15097                           ;psect for function _ctoa
 15098  0D52                     _ctoa:	
 15099                           
 15100                           ;incstack = 0
 15101 ;; hardware stack exceeded
 15102                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15103                           ;ctoa@fp stored from wreg
 15104  0D52  0140               	movlb	0	; select bank0
 15105  0D53  00D7               	movwf	ctoa@fp
 15106                           
 15107                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 15108  0D54  0141               	movlb	1	; select bank1
 15109  0D55  0825               	movf	_width^(0+128),w
 15110  0D56  0426               	iorwf	(_width+1)^(0+128),w
 15111  0D57  1D03               	btfss	3,2
 15112  0D58  2D61               	goto	l4888
 15113  0D59  0826               	movf	(_width+1)^(0+128),w
 15114  0D5A  0140               	movlb	0	; select bank0
 15115  0D5B  00D6               	movwf	ctoa@w+1
 15116  0D5C  0141               	movlb	1	; select bank1
 15117  0D5D  0825               	movf	_width^(0+128),w
 15118  0D5E  0140               	movlb	0	; select bank0
 15119  0D5F  00D5               	movwf	ctoa@w
 15120  0D60  2D6A               	goto	l4890
 15121  0D61                     l4888:	
 15122  0D61  0825               	movf	_width^(0+128),w
 15123  0D62  3EFF               	addlw	255
 15124  0D63  0140               	movlb	0	; select bank0
 15125  0D64  00D5               	movwf	ctoa@w
 15126  0D65  30FF               	movlw	255
 15127  0D66  0141               	movlb	1	; select bank1
 15128  0D67  3D26               	addwfc	(_width+1)^(0+128),w
 15129  0D68  0140               	movlb	0	; select bank0
 15130  0D69  00D6               	movwf	ctoa@w+1
 15131  0D6A                     l4890:	
 15132                           
 15133                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 15134  0D6A  0852               	movf	ctoa@c,w
 15135  0D6B  00D4               	movwf	??_ctoa
 15136  0D6C  0854               	movf	??_ctoa,w
 15137  0D6D  0143               	movlb	3	; select bank3
 15138  0D6E  00A0               	movwf	_dbuf^(0+384)
 15139                           
 15140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 15141  0D6F  01A1               	clrf	(_dbuf^(0+384)+1)
 15142                           
 15143                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 15144  0D70  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 15145  0D71  0140               	movlb	0	; select bank0
 15146  0D72  00D4               	movwf	??_ctoa
 15147  0D73  0854               	movf	??_ctoa,w
 15148  0D74  00C9               	movwf	pad@buf
 15149  0D75  0856               	movf	ctoa@w+1,w
 15150  0D76  00CB               	movwf	pad@p+1
 15151  0D77  0855               	movf	ctoa@w,w
 15152  0D78  00CA               	movwf	pad@p
 15153  0D79  0857               	movf	ctoa@fp,w
 15154  0D7A  3187  27A6         	fcall	_pad
 15155  0D7C  0140               	movlb	0	; select bank0
 15156  0D7D  084A               	movf	?_pad+1,w
 15157  0D7E  00D3               	movwf	?_ctoa+1
 15158  0D7F  0849               	movf	?_pad,w
 15159  0D80  00D2               	movwf	?_ctoa
 15160  0D81  0008               	return
 15161  0D82                     __end_of_ctoa:	
 15162                           
 15163                           	psect	text32
 15164  07A6                     __ptext32:	
 15165 ;; *************** function _pad *****************
 15166 ;; Defined at:
 15167 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 15168 ;; Parameters:    Size  Location     Type
 15169 ;;  fp              1    wreg     PTR struct _IO_FILE
 15170 ;;		 -> NULL(0), 
 15171 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 15172 ;;		 -> dbuf(32), 
 15173 ;;  p               2   42[BANK0 ] int 
 15174 ;; Auto vars:     Size  Location     Type
 15175 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
 15176 ;;		 -> NULL(0), 
 15177 ;;  w               2   47[BANK0 ] int 
 15178 ;;  i               2   45[BANK0 ] int 
 15179 ;; Return value:  Size  Location     Type
 15180 ;;                  2   41[BANK0 ] int 
 15181 ;; Registers used:
 15182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15183 ;; Tracked objects:
 15184 ;;		On entry : 0/0
 15185 ;;		On exit  : 0/0
 15186 ;;		Unchanged: 0/0
 15187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15188 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15189 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15190 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15191 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15192 ;;Total ram usage:        9 bytes
 15193 ;; Hardware stack levels used:    1
 15194 ;; Hardware stack levels required when called:   12
 15195 ;; This function calls:
 15196 ;;		_fputc
 15197 ;;		_fputs
 15198 ;;		_strlen
 15199 ;; This function is called by:
 15200 ;;		_ctoa
 15201 ;; This function uses a non-reentrant model
 15202 ;;
 15203                           
 15204                           
 15205                           ;psect for function _pad
 15206  07A6                     _pad:	
 15207                           
 15208                           ;incstack = 0
 15209 ;; hardware stack exceeded
 15210                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15211                           ;pad@fp stored from wreg
 15212  07A6  0140               	movlb	0	; select bank0
 15213  07A7  00D1               	movwf	pad@fp
 15214                           
 15215                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 15216  07A8  0141               	movlb	1	; select bank1
 15217  07A9  1C27               	btfss	_flags^(0+128),0
 15218  07AA  2FB4               	goto	l4866
 15219                           
 15220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 15221  07AB  0140               	movlb	0	; select bank0
 15222  07AC  0851               	movf	pad@fp,w
 15223  07AD  00CC               	movwf	??_pad
 15224  07AE  084C               	movf	??_pad,w
 15225  07AF  00C1               	movwf	fputs@fp
 15226  07B0  0849               	movf	pad@buf,w
 15227  07B1  318C  2480  3187   	fcall	_fputs
 15228  07B4                     l4866:	
 15229                           
 15230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 15231  07B4  0140               	movlb	0	; select bank0
 15232  07B5  1BCB               	btfsc	pad@p+1,7
 15233  07B6  2FBC               	goto	l4870
 15234  07B7  084B               	movf	pad@p+1,w
 15235  07B8  00D0               	movwf	pad@w+1
 15236  07B9  084A               	movf	pad@p,w
 15237  07BA  00CF               	movwf	pad@w
 15238  07BB  2FBE               	goto	l1411
 15239  07BC                     l4870:	
 15240  07BC  01CF               	clrf	pad@w
 15241  07BD  01D0               	clrf	pad@w+1
 15242  07BE                     l1411:	
 15243                           
 15244                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 15245  07BE  01CD               	clrf	pad@i
 15246  07BF  01CE               	clrf	pad@i+1
 15247  07C0                     l4876:	
 15248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 15249                           
 15250                           
 15251                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 15252  07C0  084E               	movf	pad@i+1,w
 15253  07C1  3A80               	xorlw	128
 15254  07C2  00CC               	movwf	??_pad
 15255  07C3  0850               	movf	pad@w+1,w
 15256  07C4  3A80               	xorlw	128
 15257  07C5  024C               	subwf	??_pad,w
 15258  07C6  1D03               	skipz
 15259  07C7  2FCA               	goto	u3625
 15260  07C8  084F               	movf	pad@w,w
 15261  07C9  024D               	subwf	pad@i,w
 15262  07CA                     u3625:	
 15263  07CA  1803               	btfsc	3,0
 15264  07CB  2FDE               	goto	l1414
 15265                           
 15266                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 15267  07CC  3020               	movlw	32
 15268  07CD  0140               	movlb	0	; select bank0
 15269  07CE  00B9               	movwf	fputc@c
 15270  07CF  3000               	movlw	0
 15271  07D0  00BA               	movwf	fputc@c+1
 15272  07D1  0851               	movf	pad@fp,w
 15273  07D2  00CC               	movwf	??_pad
 15274  07D3  084C               	movf	??_pad,w
 15275  07D4  00BB               	movwf	fputc@fp
 15276  07D5  318E  2658  3187   	fcall	_fputc
 15277                           
 15278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 15279  07D8  3001               	movlw	1
 15280  07D9  0140               	movlb	0	; select bank0
 15281  07DA  07CD               	addwf	pad@i,f
 15282  07DB  3000               	movlw	0
 15283  07DC  3DCE               	addwfc	pad@i+1,f
 15284  07DD  2FC0               	goto	l4876
 15285  07DE                     l1414:	
 15286                           
 15287                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 15288  07DE  0141               	movlb	1	; select bank1
 15289  07DF  1827               	btfsc	_flags^(0+128),0
 15290  07E0  2FEA               	goto	l4880
 15291                           
 15292                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 15293  07E1  0140               	movlb	0	; select bank0
 15294  07E2  0851               	movf	pad@fp,w
 15295  07E3  00CC               	movwf	??_pad
 15296  07E4  084C               	movf	??_pad,w
 15297  07E5  00C1               	movwf	fputs@fp
 15298  07E6  0849               	movf	pad@buf,w
 15299  07E7  318C  2480  3187   	fcall	_fputs
 15300  07EA                     l4880:	
 15301                           
 15302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 15303  07EA  0140               	movlb	0	; select bank0
 15304  07EB  0849               	movf	pad@buf,w
 15305  07EC  00A0               	movwf	strlen@s
 15306  07ED  3001               	movlw	1
 15307  07EE  00A1               	movwf	strlen@s+1
 15308  07EF  318A  22FA         	fcall	_strlen
 15309  07F1  0140               	movlb	0	; select bank0
 15310  07F2  084F               	movf	pad@w,w
 15311  07F3  0720               	addwf	?_strlen,w
 15312  07F4  00C9               	movwf	?_pad
 15313  07F5  0850               	movf	pad@w+1,w
 15314  07F6  3D21               	addwfc	?_strlen+1,w
 15315  07F7  00CA               	movwf	?_pad+1
 15316  07F8  0008               	return
 15317  07F9                     __end_of_pad:	
 15318                           
 15319                           	psect	text33
 15320  0AFA                     __ptext33:	
 15321 ;; *************** function _strlen *****************
 15322 ;; Defined at:
 15323 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 15324 ;; Parameters:    Size  Location     Type
 15325 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 15326 ;;		 -> dbuf(32), STR_8(9), 
 15327 ;; Auto vars:     Size  Location     Type
 15328 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 15329 ;;		 -> dbuf(32), STR_8(9), 
 15330 ;; Return value:  Size  Location     Type
 15331 ;;                  2    0[BANK0 ] unsigned int 
 15332 ;; Registers used:
 15333 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 15334 ;; Tracked objects:
 15335 ;;		On entry : 0/0
 15336 ;;		On exit  : 0/0
 15337 ;;		Unchanged: 0/0
 15338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15341 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15342 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15343 ;;Total ram usage:        5 bytes
 15344 ;; Hardware stack levels used:    1
 15345 ;; Hardware stack levels required when called:    4
 15346 ;; This function calls:
 15347 ;;		Nothing
 15348 ;; This function is called by:
 15349 ;;		_pad
 15350 ;;		_TM1650_scrollPrint
 15351 ;; This function uses a non-reentrant model
 15352 ;;
 15353                           
 15354                           
 15355                           ;psect for function _strlen
 15356  0AFA                     _strlen:	
 15357                           
 15358                           ;incstack = 0
 15359                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 15360  0AFA  0140               	movlb	0	; select bank0
 15361  0AFB  0821               	movf	strlen@s+1,w
 15362  0AFC  00A4               	movwf	strlen@a+1
 15363  0AFD  0820               	movf	strlen@s,w
 15364  0AFE  00A3               	movwf	strlen@a
 15365  0AFF                     l3516:	
 15366  0AFF  0820               	movf	strlen@s,w
 15367  0B00  0084               	movwf	4
 15368  0B01  0821               	movf	strlen@s+1,w
 15369  0B02  0085               	movwf	5
 15370  0B03  0012               	moviw fsr0++
 15371  0B04  1903               	btfsc	3,2
 15372  0B05  2B0B               	goto	l3518
 15373  0B06  3001               	movlw	1
 15374  0B07  07A0               	addwf	strlen@s,f
 15375  0B08  3000               	movlw	0
 15376  0B09  3DA1               	addwfc	strlen@s+1,f
 15377  0B0A  2AFF               	goto	l3516
 15378  0B0B                     l3518:	
 15379  0B0B  0823               	movf	strlen@a,w
 15380  0B0C  0220               	subwf	strlen@s,w
 15381  0B0D  00A0               	movwf	?_strlen
 15382  0B0E  0824               	movf	strlen@a+1,w
 15383  0B0F  3B21               	subwfb	strlen@s+1,w
 15384  0B10  00A1               	movwf	?_strlen+1
 15385  0B11  0008               	return
 15386  0B12                     __end_of_strlen:	
 15387                           
 15388                           	psect	text34
 15389  0C80                     __ptext34:	
 15390 ;; *************** function _fputs *****************
 15391 ;; Defined at:
 15392 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 15393 ;; Parameters:    Size  Location     Type
 15394 ;;  s               1    wreg     PTR const unsigned char 
 15395 ;;		 -> dbuf(32), 
 15396 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
 15397 ;;		 -> NULL(0), 
 15398 ;; Auto vars:     Size  Location     Type
 15399 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 15400 ;;		 -> dbuf(32), 
 15401 ;;  i               2   38[BANK0 ] int 
 15402 ;;  c               1   37[BANK0 ] unsigned char 
 15403 ;; Return value:  Size  Location     Type
 15404 ;;                  2   33[BANK0 ] int 
 15405 ;; Registers used:
 15406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15407 ;; Tracked objects:
 15408 ;;		On entry : 0/0
 15409 ;;		On exit  : 0/0
 15410 ;;		Unchanged: 0/0
 15411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15412 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15413 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15414 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15415 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15416 ;;Total ram usage:        8 bytes
 15417 ;; Hardware stack levels used:    1
 15418 ;; Hardware stack levels required when called:   11
 15419 ;; This function calls:
 15420 ;;		_fputc
 15421 ;; This function is called by:
 15422 ;;		_pad
 15423 ;; This function uses a non-reentrant model
 15424 ;;
 15425                           
 15426                           
 15427                           ;psect for function _fputs
 15428  0C80                     _fputs:	
 15429                           
 15430                           ;incstack = 0
 15431 ;; hardware stack exceeded
 15432                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15433                           ;fputs@s stored from wreg
 15434  0C80  0140               	movlb	0	; select bank0
 15435  0C81  00C8               	movwf	fputs@s
 15436  0C82  01C6               	clrf	fputs@i
 15437  0C83  01C7               	clrf	fputs@i+1
 15438  0C84                     l4860:	
 15439  0C84  0846               	movf	fputs@i,w
 15440  0C85  0748               	addwf	fputs@s,w
 15441  0C86  00C2               	movwf	??_fputs
 15442  0C87  0842               	movf	??_fputs,w
 15443  0C88  0086               	movwf	6
 15444  0C89  3001               	movlw	1	; select bank2/3
 15445  0C8A  0087               	movwf	7
 15446  0C8B  0801               	movf	1,w
 15447  0C8C  00C3               	movwf	??_fputs+1
 15448  0C8D  0843               	movf	??_fputs+1,w
 15449  0C8E  00C5               	movwf	fputs@c
 15450  0C8F  0845               	movf	fputs@c,w
 15451  0C90  1903               	btfsc	3,2
 15452  0C91  0008               	return
 15453  0C92  0845               	movf	fputs@c,w
 15454  0C93  00C2               	movwf	??_fputs
 15455  0C94  01C3               	clrf	??_fputs+1
 15456  0C95  0842               	movf	??_fputs,w
 15457  0C96  00B9               	movwf	fputc@c
 15458  0C97  0843               	movf	??_fputs+1,w
 15459  0C98  00BA               	movwf	fputc@c+1
 15460  0C99  0841               	movf	fputs@fp,w
 15461  0C9A  00C4               	movwf	??_fputs+2
 15462  0C9B  0844               	movf	??_fputs+2,w
 15463  0C9C  00BB               	movwf	fputc@fp
 15464  0C9D  318E  2658  318C   	fcall	_fputc
 15465  0CA0  3001               	movlw	1
 15466  0CA1  0140               	movlb	0	; select bank0
 15467  0CA2  07C6               	addwf	fputs@i,f
 15468  0CA3  3000               	movlw	0
 15469  0CA4  3DC7               	addwfc	fputs@i+1,f
 15470  0CA5  2C84               	goto	l4860
 15471  0CA6                     __end_of_fputs:	
 15472                           
 15473                           	psect	text35
 15474  0E58                     __ptext35:	
 15475 ;; *************** function _fputc *****************
 15476 ;; Defined at:
 15477 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;  c               2   25[BANK0 ] int 
 15480 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 15481 ;;		 -> NULL(0), 
 15482 ;; Auto vars:     Size  Location     Type
 15483 ;;		None
 15484 ;; Return value:  Size  Location     Type
 15485 ;;                  2   25[BANK0 ] int 
 15486 ;; Registers used:
 15487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15488 ;; Tracked objects:
 15489 ;;		On entry : 0/0
 15490 ;;		On exit  : 0/0
 15491 ;;		Unchanged: 0/0
 15492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15493 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15495 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15496 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15497 ;;Total ram usage:        8 bytes
 15498 ;; Hardware stack levels used:    1
 15499 ;; Hardware stack levels required when called:   10
 15500 ;; This function calls:
 15501 ;;		_putch
 15502 ;; This function is called by:
 15503 ;;		_pad
 15504 ;;		_vfpfcnvrt
 15505 ;;		_fputs
 15506 ;; This function uses a non-reentrant model
 15507 ;;
 15508                           
 15509                           
 15510                           ;psect for function _fputc
 15511  0E58                     _fputc:	
 15512                           
 15513                           ;incstack = 0
 15514                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15515  0E58  0140               	movlb	0	; select bank0
 15516  0E59  083B               	movf	fputc@fp,w
 15517  0E5A  1D03               	btfss	3,2
 15518  0E5B  083B               	movf	fputc@fp,w
 15519  0E5C  1D03               	btfss	3,2
 15520  0E5D  2E62               	goto	l4846
 15521  0E5E  0839               	movf	fputc@c,w
 15522  0E5F  318C  2438         	fcall	_putch
 15523  0E61  0008               	return
 15524  0E62                     l4846:	
 15525  0E62  083B               	movf	fputc@fp,w
 15526  0E63  3E03               	addlw	3
 15527  0E64  0086               	movwf	6
 15528  0E65  0187               	clrf	7
 15529  0E66  0016               	moviw fsr1++
 15530  0E67  0401               	iorwf	1,w
 15531  0E68  1903               	btfsc	3,2
 15532  0E69  2E85               	goto	l4850
 15533  0E6A  083B               	movf	fputc@fp,w
 15534  0E6B  3E03               	addlw	3
 15535  0E6C  0086               	movwf	6
 15536  0E6D  0187               	clrf	7
 15537  0E6E  3F40               	moviw [0]fsr1
 15538  0E6F  00BC               	movwf	??_fputc
 15539  0E70  3F41               	moviw [1]fsr1
 15540  0E71  00BD               	movwf	??_fputc+1
 15541  0E72  0A3B               	incf	fputc@fp,w
 15542  0E73  0086               	movwf	6
 15543  0E74  0187               	clrf	7
 15544  0E75  3F40               	moviw [0]fsr1
 15545  0E76  00BE               	movwf	??_fputc+2
 15546  0E77  3F41               	moviw [1]fsr1
 15547  0E78  00BF               	movwf	??_fputc+3
 15548  0E79  083F               	movf	??_fputc+3,w
 15549  0E7A  3A80               	xorlw	128
 15550  0E7B  00C0               	movwf	??_fputc+4
 15551  0E7C  083D               	movf	??_fputc+1,w
 15552  0E7D  3A80               	xorlw	128
 15553  0E7E  0240               	subwf	??_fputc+4,w
 15554  0E7F  1D03               	skipz
 15555  0E80  2E83               	goto	u3585
 15556  0E81  083C               	movf	??_fputc,w
 15557  0E82  023E               	subwf	??_fputc+2,w
 15558  0E83                     u3585:	
 15559  0E83  1803               	skipnc
 15560  0E84  0008               	return
 15561  0E85                     l4850:	
 15562  0E85  0140               	movlb	0	; select bank0
 15563  0E86  0A3B               	incf	fputc@fp,w
 15564  0E87  0086               	movwf	6
 15565  0E88  0187               	clrf	7
 15566  0E89  3001               	movlw	1
 15567  0E8A  0781               	addwf	1,f
 15568  0E8B  3141               	addfsr 1,1
 15569  0E8C  1803               	skipnc
 15570  0E8D  0A81               	incf	1,f
 15571  0E8E  0008               	return
 15572  0E8F                     __end_of_fputc:	
 15573                           
 15574                           	psect	text36
 15575  0C38                     __ptext36:	
 15576 ;; *************** function _putch *****************
 15577 ;; Defined at:
 15578 ;;		line 120 in file "tm1650.c"
 15579 ;; Parameters:    Size  Location     Type
 15580 ;;  n               1    wreg     unsigned char 
 15581 ;; Auto vars:     Size  Location     Type
 15582 ;;  n               1   24[BANK0 ] unsigned char 
 15583 ;; Return value:  Size  Location     Type
 15584 ;;                  1    wreg      void 
 15585 ;; Registers used:
 15586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15587 ;; Tracked objects:
 15588 ;;		On entry : 0/0
 15589 ;;		On exit  : 0/0
 15590 ;;		Unchanged: 0/0
 15591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15596 ;;Total ram usage:        2 bytes
 15597 ;; Hardware stack levels used:    1
 15598 ;; Hardware stack levels required when called:    9
 15599 ;; This function calls:
 15600 ;;		_TM1650_setDigit
 15601 ;; This function is called by:
 15602 ;;		_fputc
 15603 ;; This function uses a non-reentrant model
 15604 ;;
 15605                           
 15606                           
 15607                           ;psect for function _putch
 15608  0C38                     _putch:	
 15609                           
 15610                           ;incstack = 0
 15611                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15612                           ;putch@n stored from wreg
 15613  0C38  0140               	movlb	0	; select bank0
 15614  0C39  00B8               	movwf	putch@n
 15615                           
 15616                           ;tm1650.c: 122:     if(position > 3 || n == '\r' || n == '\0')
 15617  0C3A  3004               	movlw	4
 15618  0C3B  0141               	movlb	1	; select bank1
 15619  0C3C  023C               	subwf	_position^(0+128),w
 15620  0C3D  1803               	skipnc
 15621  0C3E  2C46               	goto	l4832
 15622  0C3F  300D               	movlw	13
 15623  0C40  0140               	movlb	0	; select bank0
 15624  0C41  0638               	xorwf	putch@n,w
 15625  0C42  1D03               	btfss	3,2
 15626  0C43  0838               	movf	putch@n,w
 15627  0C44  1D03               	btfss	3,2
 15628  0C45  2C48               	goto	l4834
 15629  0C46                     l4832:	
 15630                           
 15631                           ;tm1650.c: 123:         position = 0;
 15632  0C46  0141               	movlb	1	; select bank1
 15633  0C47  01BC               	clrf	_position^(0+128)
 15634  0C48                     l4834:	
 15635                           
 15636                           ;tm1650.c: 125:     if(n != '\r'){
 15637  0C48  300D               	movlw	13
 15638  0C49  0140               	movlb	0	; select bank0
 15639  0C4A  0638               	xorwf	putch@n,w
 15640  0C4B  1903               	btfsc	3,2
 15641  0C4C  0008               	return
 15642                           
 15643                           ;tm1650.c: 126:         TM1650_setDigit(position, n);
 15644  0C4D  0838               	movf	putch@n,w
 15645  0C4E  00B7               	movwf	??_putch
 15646  0C4F  0837               	movf	??_putch,w
 15647  0C50  00B4               	movwf	TM1650_setDigit@data
 15648  0C51  0141               	movlb	1	; select bank1
 15649  0C52  083C               	movf	_position^(0+128),w
 15650  0C53  318A  223B         	fcall	_TM1650_setDigit
 15651                           
 15652                           ;tm1650.c: 127:         position++;
 15653  0C55  3001               	movlw	1
 15654  0C56  0140               	movlb	0	; select bank0
 15655  0C57  00B7               	movwf	??_putch
 15656  0C58  0837               	movf	??_putch,w
 15657  0C59  0141               	movlb	1	; select bank1
 15658  0C5A  07BC               	addwf	_position^(0+128),f
 15659  0C5B  0008               	return
 15660  0C5C                     __end_of_putch:	
 15661                           
 15662                           	psect	text37
 15663  0A3B                     __ptext37:	
 15664 ;; *************** function _TM1650_setDigit *****************
 15665 ;; Defined at:
 15666 ;;		line 95 in file "tm1650.c"
 15667 ;; Parameters:    Size  Location     Type
 15668 ;;  digit           1    wreg     unsigned char 
 15669 ;;  data            1   20[BANK0 ] unsigned char 
 15670 ;; Auto vars:     Size  Location     Type
 15671 ;;  digit           1   22[BANK0 ] unsigned char 
 15672 ;; Return value:  Size  Location     Type
 15673 ;;                  1    wreg      void 
 15674 ;; Registers used:
 15675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15676 ;; Tracked objects:
 15677 ;;		On entry : 0/0
 15678 ;;		On exit  : 0/0
 15679 ;;		Unchanged: 0/0
 15680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15681 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15683 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15684 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15685 ;;Total ram usage:        3 bytes
 15686 ;; Hardware stack levels used:    1
 15687 ;; Hardware stack levels required when called:    8
 15688 ;; This function calls:
 15689 ;;		_writeData
 15690 ;; This function is called by:
 15691 ;;		_putch
 15692 ;; This function uses a non-reentrant model
 15693 ;;
 15694                           
 15695                           
 15696                           ;psect for function _TM1650_setDigit
 15697  0A3B                     _TM1650_setDigit:	
 15698                           
 15699                           ;incstack = 0
 15700                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15701                           ;TM1650_setDigit@digit stored from wreg
 15702  0A3B  0140               	movlb	0	; select bank0
 15703  0A3C  00B6               	movwf	TM1650_setDigit@digit
 15704                           
 15705                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 15706  0A3D  0834               	movf	TM1650_setDigit@data,w
 15707  0A3E  3E26               	addlw	low ((_charTable+65504)| (0+32768))
 15708  0A3F  0084               	movwf	4
 15709  0A40  3087               	movlw	high ((_charTable+65504)| (0+32768))
 15710  0A41  1803               	skipnc
 15711  0A42  3E01               	addlw	1
 15712  0A43  0085               	movwf	5
 15713  0A44  0800               	movf	0,w	;code access
 15714  0A45  00B5               	movwf	??_TM1650_setDigit
 15715  0A46  0835               	movf	??_TM1650_setDigit,w
 15716  0A47  00AE               	movwf	writeData@data
 15717  0A48  0836               	movf	TM1650_setDigit@digit,w
 15718  0A49  3E34               	addlw	52
 15719  0A4A  318B  2360         	fcall	_writeData
 15720  0A4C  0008               	return
 15721  0A4D                     __end_of_TM1650_setDigit:	
 15722                           
 15723                           	psect	text38
 15724  0B2B                     __ptext38:	
 15725 ;; *************** function _address_inc *****************
 15726 ;; Defined at:
 15727 ;;		line 28 in file "controller.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;		None
 15730 ;; Auto vars:     Size  Location     Type
 15731 ;;		None
 15732 ;; Return value:  Size  Location     Type
 15733 ;;                  1    wreg      void 
 15734 ;; Registers used:
 15735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15736 ;; Tracked objects:
 15737 ;;		On entry : 0/0
 15738 ;;		On exit  : 0/0
 15739 ;;		Unchanged: 0/0
 15740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15745 ;;Total ram usage:        0 bytes
 15746 ;; Hardware stack levels used:    1
 15747 ;; Hardware stack levels required when called:    9
 15748 ;; This function calls:
 15749 ;;		_TM1650_fastPrintNum
 15750 ;; This function is called by:
 15751 ;;		_CONTROLLER_task
 15752 ;; This function uses a non-reentrant model
 15753 ;;
 15754                           
 15755                           
 15756                           ;psect for function _address_inc
 15757  0B2B                     _address_inc:	
 15758                           
 15759                           ;controller.c: 30:     if(address == 512)
 15760                           
 15761                           ;incstack = 0
 15762                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15763  0B2B  3002               	movlw	2
 15764  0B2C  0141               	movlb	1	; select bank1
 15765  0B2D  066B               	xorwf	(_address+1)^(0+128),w
 15766  0B2E  046A               	iorwf	_address^(0+128),w
 15767  0B2F  1D03               	btfss	3,2
 15768  0B30  2B36               	goto	l5216
 15769                           
 15770                           ;controller.c: 31:         address = 1;
 15771  0B31  3001               	movlw	1
 15772  0B32  00EA               	movwf	_address^(0+128)
 15773  0B33  3000               	movlw	0
 15774  0B34  00EB               	movwf	(_address^(0+128)+1)
 15775  0B35  2B3A               	goto	l5218
 15776  0B36                     l5216:	
 15777                           
 15778                           ;controller.c: 33:         address++;
 15779  0B36  3001               	movlw	1
 15780  0B37  07EA               	addwf	_address^(0+128),f
 15781  0B38  3000               	movlw	0
 15782  0B39  3DEB               	addwfc	(_address+1)^(0+128),f
 15783  0B3A                     l5218:	
 15784                           
 15785                           ;controller.c: 36:     TM1650_fastPrintNum(address);
 15786  0B3A  086B               	movf	(_address+1)^(0+128),w
 15787  0B3B  0140               	movlb	0	; select bank0
 15788  0B3C  00B5               	movwf	TM1650_fastPrintNum@num+1
 15789  0B3D  0141               	movlb	1	; select bank1
 15790  0B3E  086A               	movf	_address^(0+128),w
 15791  0B3F  0140               	movlb	0	; select bank0
 15792  0B40  00B4               	movwf	TM1650_fastPrintNum@num
 15793  0B41  3185  25DB         	fcall	_TM1650_fastPrintNum
 15794  0B43  0008               	return
 15795  0B44                     __end_of_address_inc:	
 15796                           
 15797                           	psect	text39
 15798  0AE2                     __ptext39:	
 15799 ;; *************** function _address_dec *****************
 15800 ;; Defined at:
 15801 ;;		line 42 in file "controller.c"
 15802 ;; Parameters:    Size  Location     Type
 15803 ;;		None
 15804 ;; Auto vars:     Size  Location     Type
 15805 ;;		None
 15806 ;; Return value:  Size  Location     Type
 15807 ;;                  1    wreg      void 
 15808 ;; Registers used:
 15809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15810 ;; Tracked objects:
 15811 ;;		On entry : 0/0
 15812 ;;		On exit  : 0/0
 15813 ;;		Unchanged: 0/0
 15814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15819 ;;Total ram usage:        0 bytes
 15820 ;; Hardware stack levels used:    1
 15821 ;; Hardware stack levels required when called:    9
 15822 ;; This function calls:
 15823 ;;		_TM1650_fastPrintNum
 15824 ;; This function is called by:
 15825 ;;		_CONTROLLER_task
 15826 ;; This function uses a non-reentrant model
 15827 ;;
 15828                           
 15829                           
 15830                           ;psect for function _address_dec
 15831  0AE2                     _address_dec:	
 15832                           
 15833                           ;controller.c: 44:     if(address == 1)
 15834                           
 15835                           ;incstack = 0
 15836                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15837  0AE2  0141               	movlb	1	; select bank1
 15838  0AE3  036A               	decf	_address^(0+128),w
 15839  0AE4  046B               	iorwf	(_address+1)^(0+128),w
 15840  0AE5  1D03               	btfss	3,2
 15841  0AE6  2AEC               	goto	l5224
 15842                           
 15843                           ;controller.c: 45:         address = 512;
 15844  0AE7  3000               	movlw	0
 15845  0AE8  00EA               	movwf	_address^(0+128)
 15846  0AE9  3002               	movlw	2
 15847  0AEA  00EB               	movwf	(_address^(0+128)+1)
 15848  0AEB  2AF0               	goto	l5226
 15849  0AEC                     l5224:	
 15850                           
 15851                           ;controller.c: 47:         address--;
 15852  0AEC  3001               	movlw	1
 15853  0AED  02EA               	subwf	_address^(0+128),f
 15854  0AEE  3000               	movlw	0
 15855  0AEF  3BEB               	subwfb	(_address+1)^(0+128),f
 15856  0AF0                     l5226:	
 15857                           
 15858                           ;controller.c: 50:     TM1650_fastPrintNum(address);
 15859  0AF0  086B               	movf	(_address+1)^(0+128),w
 15860  0AF1  0140               	movlb	0	; select bank0
 15861  0AF2  00B5               	movwf	TM1650_fastPrintNum@num+1
 15862  0AF3  0141               	movlb	1	; select bank1
 15863  0AF4  086A               	movf	_address^(0+128),w
 15864  0AF5  0140               	movlb	0	; select bank0
 15865  0AF6  00B4               	movwf	TM1650_fastPrintNum@num
 15866  0AF7  3185  25DB         	fcall	_TM1650_fastPrintNum
 15867  0AF9  0008               	return
 15868  0AFA                     __end_of_address_dec:	
 15869                           
 15870                           	psect	text40
 15871  0A89                     __ptext40:	
 15872 ;; *************** function _TM1650_enable *****************
 15873 ;; Defined at:
 15874 ;;		line 41 in file "tm1650.c"
 15875 ;; Parameters:    Size  Location     Type
 15876 ;;  enable          1    wreg     _Bool 
 15877 ;; Auto vars:     Size  Location     Type
 15878 ;;  enable          1   20[BANK0 ] _Bool 
 15879 ;; Return value:  Size  Location     Type
 15880 ;;                  1    wreg      void 
 15881 ;; Registers used:
 15882 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15883 ;; Tracked objects:
 15884 ;;		On entry : 0/0
 15885 ;;		On exit  : 0/0
 15886 ;;		Unchanged: 0/0
 15887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15891 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15892 ;;Total ram usage:        1 bytes
 15893 ;; Hardware stack levels used:    1
 15894 ;; Hardware stack levels required when called:    8
 15895 ;; This function calls:
 15896 ;;		_writeData
 15897 ;; This function is called by:
 15898 ;;		_CONTROLLER_task
 15899 ;;		_TM1650_init
 15900 ;; This function uses a non-reentrant model
 15901 ;;
 15902                           
 15903                           
 15904                           ;psect for function _TM1650_enable
 15905  0A89                     _TM1650_enable:	
 15906                           
 15907                           ;incstack = 0
 15908                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15909                           ;TM1650_enable@enable stored from wreg
 15910  0A89  0140               	movlb	0	; select bank0
 15911  0A8A  00B4               	movwf	TM1650_enable@enable
 15912                           
 15913                           ;tm1650.c: 42:     if(enable){
 15914  0A8B  0834               	movf	TM1650_enable@enable,w
 15915  0A8C  1903               	btfsc	3,2
 15916  0A8D  2A97               	goto	l5274
 15917                           
 15918                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 15919  0A8E  01AE               	clrf	writeData@data
 15920  0A8F  0AAE               	incf	writeData@data,f
 15921  0A90  3024               	movlw	36
 15922  0A91  318B  2360         	fcall	_writeData
 15923                           
 15924                           ;tm1650.c: 44:         tm1650_status = 1;
 15925  0A93  0141               	movlb	1	; select bank1
 15926  0A94  01BD               	clrf	_tm1650_status^(0+128)
 15927  0A95  0ABD               	incf	_tm1650_status^(0+128),f
 15928                           
 15929                           ;tm1650.c: 45:     } else {
 15930  0A96  0008               	return
 15931  0A97                     l5274:	
 15932                           
 15933                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 15934  0A97  01AE               	clrf	writeData@data
 15935  0A98  3024               	movlw	36
 15936  0A99  318B  2360         	fcall	_writeData
 15937                           
 15938                           ;tm1650.c: 47:         tm1650_status = 0;
 15939  0A9B  0141               	movlb	1	; select bank1
 15940  0A9C  01BD               	clrf	_tm1650_status^(0+128)
 15941  0A9D  0008               	return
 15942  0A9E                     __end_of_TM1650_enable:	
 15943                           
 15944                           	psect	text41
 15945  0A4D                     __ptext41:	
 15946 ;; *************** function _BUTTONS_isClicked *****************
 15947 ;; Defined at:
 15948 ;;		line 97 in file "buttons.c"
 15949 ;; Parameters:    Size  Location     Type
 15950 ;;  button          1    wreg     PTR struct .
 15951 ;;		 -> buttons(32), NULL(0), 
 15952 ;; Auto vars:     Size  Location     Type
 15953 ;;  button          1    0[BANK0 ] PTR struct .
 15954 ;;		 -> buttons(32), NULL(0), 
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  1    wreg      _Bool 
 15957 ;; Registers used:
 15958 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15959 ;; Tracked objects:
 15960 ;;		On entry : 0/0
 15961 ;;		On exit  : 0/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15967 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15968 ;;Total ram usage:        1 bytes
 15969 ;; Hardware stack levels used:    1
 15970 ;; Hardware stack levels required when called:    4
 15971 ;; This function calls:
 15972 ;;		Nothing
 15973 ;; This function is called by:
 15974 ;;		_CONTROLLER_task
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           
 15979                           ;psect for function _BUTTONS_isClicked
 15980  0A4D                     _BUTTONS_isClicked:	
 15981                           
 15982                           ;incstack = 0
 15983                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 15984                           ;BUTTONS_isClicked@button stored from wreg
 15985  0A4D  0140               	movlb	0	; select bank0
 15986  0A4E  00A0               	movwf	BUTTONS_isClicked@button
 15987                           
 15988                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 15989  0A4F  0820               	movf	BUTTONS_isClicked@button,w
 15990  0A50  3E07               	addlw	7
 15991  0A51  0086               	movwf	6
 15992  0A52  3001               	movlw	1	; select bank2/3
 15993  0A53  0087               	movwf	7
 15994  0A54  0301               	decf	1,w
 15995  0A55  1D03               	btfss	3,2
 15996  0A56  2A5F               	goto	l5208
 15997                           
 15998                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 15999  0A57  0820               	movf	BUTTONS_isClicked@button,w
 16000  0A58  3E07               	addlw	7
 16001  0A59  0086               	movwf	6
 16002  0A5A  3001               	movlw	1	; select bank2/3
 16003  0A5B  0087               	movwf	7
 16004  0A5C  0181               	clrf	1
 16005                           
 16006                           ;buttons.c: 100:         return 1;
 16007  0A5D  3001               	movlw	1
 16008  0A5E  0008               	return
 16009  0A5F                     l5208:	
 16010                           
 16011                           ;buttons.c: 103:     return 0;
 16012  0A5F  3000               	movlw	0
 16013  0A60  0008               	return
 16014  0A61                     __end_of_BUTTONS_isClicked:	
 16015                           
 16016                           	psect	text42
 16017  0995                     __ptext42:	
 16018 ;; *************** function _CONTROLLER_init *****************
 16019 ;; Defined at:
 16020 ;;		line 21 in file "controller.c"
 16021 ;; Parameters:    Size  Location     Type
 16022 ;;		None
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;		None
 16025 ;; Return value:  Size  Location     Type
 16026 ;;                  1    wreg      void 
 16027 ;; Registers used:
 16028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 0/0
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16038 ;;Total ram usage:        0 bytes
 16039 ;; Hardware stack levels used:    1
 16040 ;; Hardware stack levels required when called:    9
 16041 ;; This function calls:
 16042 ;;		_TM1650_fastPrintNum
 16043 ;; This function is called by:
 16044 ;;		_main
 16045 ;; This function uses a non-reentrant model
 16046 ;;
 16047                           
 16048                           
 16049                           ;psect for function _CONTROLLER_init
 16050  0995                     _CONTROLLER_init:	
 16051                           
 16052                           ;controller.c: 22:     TM1650_fastPrintNum(address);
 16053                           
 16054                           ;incstack = 0
 16055                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16056  0995  0141               	movlb	1	; select bank1
 16057  0996  086B               	movf	(_address+1)^(0+128),w
 16058  0997  0140               	movlb	0	; select bank0
 16059  0998  00B5               	movwf	TM1650_fastPrintNum@num+1
 16060  0999  0141               	movlb	1	; select bank1
 16061  099A  086A               	movf	_address^(0+128),w
 16062  099B  0140               	movlb	0	; select bank0
 16063  099C  00B4               	movwf	TM1650_fastPrintNum@num
 16064  099D  3185  25DB         	fcall	_TM1650_fastPrintNum
 16065  099F  0008               	return
 16066  09A0                     __end_of_CONTROLLER_init:	
 16067                           
 16068                           	psect	text43
 16069  05DB                     __ptext43:	
 16070 ;; *************** function _TM1650_fastPrintNum *****************
 16071 ;; Defined at:
 16072 ;;		line 101 in file "tm1650.c"
 16073 ;; Parameters:    Size  Location     Type
 16074 ;;  num             2   20[BANK0 ] unsigned short 
 16075 ;; Auto vars:     Size  Location     Type
 16076 ;;		None
 16077 ;; Return value:  Size  Location     Type
 16078 ;;                  1    wreg      void 
 16079 ;; Registers used:
 16080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16081 ;; Tracked objects:
 16082 ;;		On entry : 0/0
 16083 ;;		On exit  : 0/0
 16084 ;;		Unchanged: 0/0
 16085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16086 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16088 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16089 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16090 ;;Total ram usage:        3 bytes
 16091 ;; Hardware stack levels used:    1
 16092 ;; Hardware stack levels required when called:    8
 16093 ;; This function calls:
 16094 ;;		___lwdiv
 16095 ;;		___lwmod
 16096 ;;		_writeData
 16097 ;; This function is called by:
 16098 ;;		_CONTROLLER_init
 16099 ;;		_address_inc
 16100 ;;		_address_dec
 16101 ;;		_CONTROLLER_task
 16102 ;; This function uses a non-reentrant model
 16103 ;;
 16104                           
 16105                           
 16106                           ;psect for function _TM1650_fastPrintNum
 16107  05DB                     _TM1650_fastPrintNum:	
 16108                           
 16109                           ;tm1650.c: 103:     if(num > 9999){
 16110                           
 16111                           ;incstack = 0
 16112                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16113  05DB  3027               	movlw	39
 16114  05DC  0140               	movlb	0	; select bank0
 16115  05DD  0235               	subwf	TM1650_fastPrintNum@num+1,w
 16116  05DE  3010               	movlw	16
 16117  05DF  1903               	skipnz
 16118  05E0  0234               	subwf	TM1650_fastPrintNum@num,w
 16119  05E1  1C03               	skipc
 16120  05E2  2E06               	goto	l4970
 16121                           
 16122                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 16123  05E3  3079               	movlw	121
 16124  05E4  00B6               	movwf	??_TM1650_fastPrintNum
 16125  05E5  0836               	movf	??_TM1650_fastPrintNum,w
 16126  05E6  00AE               	movwf	writeData@data
 16127  05E7  3034               	movlw	52
 16128  05E8  318B  2360  3185   	fcall	_writeData
 16129                           
 16130                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 16131  05EB  3079               	movlw	121
 16132  05EC  0140               	movlb	0	; select bank0
 16133  05ED  00B6               	movwf	??_TM1650_fastPrintNum
 16134  05EE  0836               	movf	??_TM1650_fastPrintNum,w
 16135  05EF  00AE               	movwf	writeData@data
 16136  05F0  3035               	movlw	53
 16137  05F1  318B  2360  3185   	fcall	_writeData
 16138                           
 16139                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 16140  05F4  3079               	movlw	121
 16141  05F5  0140               	movlb	0	; select bank0
 16142  05F6  00B6               	movwf	??_TM1650_fastPrintNum
 16143  05F7  0836               	movf	??_TM1650_fastPrintNum,w
 16144  05F8  00AE               	movwf	writeData@data
 16145  05F9  3036               	movlw	54
 16146  05FA  318B  2360  3185   	fcall	_writeData
 16147                           
 16148                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 16149  05FD  3079               	movlw	121
 16150  05FE  0140               	movlb	0	; select bank0
 16151  05FF  00B6               	movwf	??_TM1650_fastPrintNum
 16152  0600  0836               	movf	??_TM1650_fastPrintNum,w
 16153  0601  00AE               	movwf	writeData@data
 16154  0602  3037               	movlw	55
 16155  0603  318B  2360         	fcall	_writeData
 16156  0605  0008               	return
 16157  0606                     l4970:	
 16158                           
 16159                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 16160  0606  300A               	movlw	10
 16161  0607  00A8               	movwf	___lwmod@divisor
 16162  0608  3000               	movlw	0
 16163  0609  00A9               	movwf	___lwmod@divisor+1
 16164  060A  0835               	movf	TM1650_fastPrintNum@num+1,w
 16165  060B  00AB               	movwf	___lwmod@dividend+1
 16166  060C  0834               	movf	TM1650_fastPrintNum@num,w
 16167  060D  00AA               	movwf	___lwmod@dividend
 16168  060E  318C  24F6  3185   	fcall	___lwmod
 16169  0611  0140               	movlb	0	; select bank0
 16170  0612  0829               	movf	?___lwmod+1,w
 16171  0613  0085               	movwf	5
 16172  0614  0828               	movf	?___lwmod,w
 16173  0615  0084               	movwf	4
 16174  0616  3056               	movlw	low ((_charTable+16)| (0+32768))
 16175  0617  0784               	addwf	4,f
 16176  0618  3087               	movlw	high ((_charTable+16)| (0+32768))
 16177  0619  3D85               	addwfc	5,f
 16178  061A  0800               	movf	0,w	;code access
 16179  061B  00B6               	movwf	??_TM1650_fastPrintNum
 16180  061C  0836               	movf	??_TM1650_fastPrintNum,w
 16181  061D  00AE               	movwf	writeData@data
 16182  061E  3037               	movlw	55
 16183  061F  318B  2360  3185   	fcall	_writeData
 16184                           
 16185                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 16186  0622  300A               	movlw	10
 16187  0623  0140               	movlb	0	; select bank0
 16188  0624  00A8               	movwf	___lwmod@divisor
 16189  0625  3000               	movlw	0
 16190  0626  00A9               	movwf	___lwmod@divisor+1
 16191  0627  300A               	movlw	10
 16192  0628  00A0               	movwf	___lwdiv@divisor
 16193  0629  3000               	movlw	0
 16194  062A  00A1               	movwf	___lwdiv@divisor+1
 16195  062B  0835               	movf	TM1650_fastPrintNum@num+1,w
 16196  062C  00A3               	movwf	___lwdiv@dividend+1
 16197  062D  0834               	movf	TM1650_fastPrintNum@num,w
 16198  062E  00A2               	movwf	___lwdiv@dividend
 16199  062F  318D  2582  3185   	fcall	___lwdiv
 16200  0632  0140               	movlb	0	; select bank0
 16201  0633  0821               	movf	?___lwdiv+1,w
 16202  0634  00AB               	movwf	___lwmod@dividend+1
 16203  0635  0820               	movf	?___lwdiv,w
 16204  0636  00AA               	movwf	___lwmod@dividend
 16205  0637  318C  24F6  3185   	fcall	___lwmod
 16206  063A  0140               	movlb	0	; select bank0
 16207  063B  0829               	movf	?___lwmod+1,w
 16208  063C  0085               	movwf	5
 16209  063D  0828               	movf	?___lwmod,w
 16210  063E  0084               	movwf	4
 16211  063F  3056               	movlw	low ((_charTable+16)| (0+32768))
 16212  0640  0784               	addwf	4,f
 16213  0641  3087               	movlw	high ((_charTable+16)| (0+32768))
 16214  0642  3D85               	addwfc	5,f
 16215  0643  0800               	movf	0,w	;code access
 16216  0644  00B6               	movwf	??_TM1650_fastPrintNum
 16217  0645  0836               	movf	??_TM1650_fastPrintNum,w
 16218  0646  00AE               	movwf	writeData@data
 16219  0647  3036               	movlw	54
 16220  0648  318B  2360  3185   	fcall	_writeData
 16221                           
 16222                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 16223  064B  300A               	movlw	10
 16224  064C  0140               	movlb	0	; select bank0
 16225  064D  00A8               	movwf	___lwmod@divisor
 16226  064E  3000               	movlw	0
 16227  064F  00A9               	movwf	___lwmod@divisor+1
 16228  0650  3064               	movlw	100
 16229  0651  00A0               	movwf	___lwdiv@divisor
 16230  0652  3000               	movlw	0
 16231  0653  00A1               	movwf	___lwdiv@divisor+1
 16232  0654  0835               	movf	TM1650_fastPrintNum@num+1,w
 16233  0655  00A3               	movwf	___lwdiv@dividend+1
 16234  0656  0834               	movf	TM1650_fastPrintNum@num,w
 16235  0657  00A2               	movwf	___lwdiv@dividend
 16236  0658  318D  2582  3185   	fcall	___lwdiv
 16237  065B  0140               	movlb	0	; select bank0
 16238  065C  0821               	movf	?___lwdiv+1,w
 16239  065D  00AB               	movwf	___lwmod@dividend+1
 16240  065E  0820               	movf	?___lwdiv,w
 16241  065F  00AA               	movwf	___lwmod@dividend
 16242  0660  318C  24F6  3185   	fcall	___lwmod
 16243  0663  0140               	movlb	0	; select bank0
 16244  0664  0829               	movf	?___lwmod+1,w
 16245  0665  0085               	movwf	5
 16246  0666  0828               	movf	?___lwmod,w
 16247  0667  0084               	movwf	4
 16248  0668  3056               	movlw	low ((_charTable+16)| (0+32768))
 16249  0669  0784               	addwf	4,f
 16250  066A  3087               	movlw	high ((_charTable+16)| (0+32768))
 16251  066B  3D85               	addwfc	5,f
 16252  066C  0800               	movf	0,w	;code access
 16253  066D  00B6               	movwf	??_TM1650_fastPrintNum
 16254  066E  0836               	movf	??_TM1650_fastPrintNum,w
 16255  066F  00AE               	movwf	writeData@data
 16256  0670  3035               	movlw	53
 16257  0671  318B  2360  3185   	fcall	_writeData
 16258                           
 16259                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 16260  0674  300A               	movlw	10
 16261  0675  0140               	movlb	0	; select bank0
 16262  0676  00A8               	movwf	___lwmod@divisor
 16263  0677  3000               	movlw	0
 16264  0678  00A9               	movwf	___lwmod@divisor+1
 16265  0679  30E8               	movlw	232
 16266  067A  00A0               	movwf	___lwdiv@divisor
 16267  067B  3003               	movlw	3
 16268  067C  00A1               	movwf	___lwdiv@divisor+1
 16269  067D  0835               	movf	TM1650_fastPrintNum@num+1,w
 16270  067E  00A3               	movwf	___lwdiv@dividend+1
 16271  067F  0834               	movf	TM1650_fastPrintNum@num,w
 16272  0680  00A2               	movwf	___lwdiv@dividend
 16273  0681  318D  2582  3185   	fcall	___lwdiv
 16274  0684  0140               	movlb	0	; select bank0
 16275  0685  0821               	movf	?___lwdiv+1,w
 16276  0686  00AB               	movwf	___lwmod@dividend+1
 16277  0687  0820               	movf	?___lwdiv,w
 16278  0688  00AA               	movwf	___lwmod@dividend
 16279  0689  318C  24F6  3185   	fcall	___lwmod
 16280  068C  0140               	movlb	0	; select bank0
 16281  068D  0829               	movf	?___lwmod+1,w
 16282  068E  0085               	movwf	5
 16283  068F  0828               	movf	?___lwmod,w
 16284  0690  0084               	movwf	4
 16285  0691  3056               	movlw	low ((_charTable+16)| (0+32768))
 16286  0692  0784               	addwf	4,f
 16287  0693  3087               	movlw	high ((_charTable+16)| (0+32768))
 16288  0694  3D85               	addwfc	5,f
 16289  0695  0800               	movf	0,w	;code access
 16290  0696  00B6               	movwf	??_TM1650_fastPrintNum
 16291  0697  0836               	movf	??_TM1650_fastPrintNum,w
 16292  0698  00AE               	movwf	writeData@data
 16293  0699  3034               	movlw	52
 16294  069A  318B  2360         	fcall	_writeData
 16295  069C  0008               	return
 16296  069D                     __end_of_TM1650_fastPrintNum:	
 16297                           
 16298                           	psect	text44
 16299  0B60                     __ptext44:	
 16300 ;; *************** function _writeData *****************
 16301 ;; Defined at:
 16302 ;;		line 31 in file "tm1650.c"
 16303 ;; Parameters:    Size  Location     Type
 16304 ;;  address         1    wreg     unsigned char 
 16305 ;;  data            1   14[BANK0 ] unsigned char 
 16306 ;; Auto vars:     Size  Location     Type
 16307 ;;  address         1   18[BANK0 ] unsigned char 
 16308 ;;  status          1   19[BANK0 ] enum E11370
 16309 ;; Return value:  Size  Location     Type
 16310 ;;                  1    wreg      void 
 16311 ;; Registers used:
 16312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16313 ;; Tracked objects:
 16314 ;;		On entry : 0/0
 16315 ;;		On exit  : 0/0
 16316 ;;		Unchanged: 0/0
 16317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16318 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16319 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16320 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16321 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16322 ;;Total ram usage:        6 bytes
 16323 ;; Hardware stack levels used:    1
 16324 ;; Hardware stack levels required when called:    7
 16325 ;; This function calls:
 16326 ;;		_I2C1_MasterWrite
 16327 ;; This function is called by:
 16328 ;;		_TM1650_enable
 16329 ;;		_TM1650_setDigit
 16330 ;;		_TM1650_fastPrintNum
 16331 ;;		_TM1650_brightness
 16332 ;; This function uses a non-reentrant model
 16333 ;;
 16334                           
 16335                           
 16336                           ;psect for function _writeData
 16337  0B60                     _writeData:	
 16338                           
 16339                           ;incstack = 0
 16340                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16341                           ;writeData@address stored from wreg
 16342  0B60  0140               	movlb	0	; select bank0
 16343  0B61  00B2               	movwf	writeData@address
 16344                           
 16345                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 16346  0B62  3002               	movlw	2
 16347  0B63  00AF               	movwf	??_writeData
 16348  0B64  082F               	movf	??_writeData,w
 16349  0B65  00B3               	movwf	writeData@status
 16350                           
 16351                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 16352  0B66  01A7               	clrf	I2C1_MasterWrite@length
 16353  0B67  0AA7               	incf	I2C1_MasterWrite@length,f
 16354  0B68  0832               	movf	writeData@address,w
 16355  0B69  00AF               	movwf	??_writeData
 16356  0B6A  01B0               	clrf	??_writeData+1
 16357  0B6B  082F               	movf	??_writeData,w
 16358  0B6C  00A8               	movwf	I2C1_MasterWrite@address
 16359  0B6D  0830               	movf	??_writeData+1,w
 16360  0B6E  00A9               	movwf	I2C1_MasterWrite@address+1
 16361  0B6F  3033               	movlw	(low (writeData@status| 0))& (0+255)
 16362  0B70  00B1               	movwf	??_writeData+2
 16363  0B71  0831               	movf	??_writeData+2,w
 16364  0B72  00AA               	movwf	I2C1_MasterWrite@pflag
 16365  0B73  302E               	movlw	(low (writeData@data| 0))& (0+255)
 16366  0B74  318C  24CC  318B   	fcall	_I2C1_MasterWrite
 16367  0B77                     l4822:	
 16368                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 16369                           
 16370  0B77  3002               	movlw	2
 16371  0B78  0140               	movlb	0	; select bank0
 16372  0B79  0633               	xorwf	writeData@status,w
 16373  0B7A  1D03               	btfss	3,2
 16374  0B7B  0008               	return
 16375  0B7C  2B77               	goto	l4822
 16376  0B7D                     __end_of_writeData:	
 16377                           
 16378                           	psect	text45
 16379  0CCC                     __ptext45:	
 16380 ;; *************** function _I2C1_MasterWrite *****************
 16381 ;; Defined at:
 16382 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 16383 ;; Parameters:    Size  Location     Type
 16384 ;;  pdata           1    wreg     PTR unsigned char 
 16385 ;;		 -> writeData@data(1), 
 16386 ;;  length          1    7[BANK0 ] unsigned char 
 16387 ;;  address         2    8[BANK0 ] unsigned short 
 16388 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 16389 ;;		 -> writeData@status(1), 
 16390 ;; Auto vars:     Size  Location     Type
 16391 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 16392 ;;		 -> writeData@data(1), 
 16393 ;; Return value:  Size  Location     Type
 16394 ;;                  1    wreg      void 
 16395 ;; Registers used:
 16396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16397 ;; Tracked objects:
 16398 ;;		On entry : 0/0
 16399 ;;		On exit  : 0/0
 16400 ;;		Unchanged: 0/0
 16401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16402 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16404 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16405 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16406 ;;Total ram usage:        7 bytes
 16407 ;; Hardware stack levels used:    1
 16408 ;; Hardware stack levels required when called:    6
 16409 ;; This function calls:
 16410 ;;		_I2C1_MasterTRBInsert
 16411 ;;		_I2C1_MasterWriteTRBBuild
 16412 ;; This function is called by:
 16413 ;;		_writeData
 16414 ;; This function uses a non-reentrant model
 16415 ;;
 16416                           
 16417                           
 16418                           ;psect for function _I2C1_MasterWrite
 16419  0CCC                     _I2C1_MasterWrite:	
 16420                           
 16421                           ;incstack = 0
 16422                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16423                           ;I2C1_MasterWrite@pdata stored from wreg
 16424  0CCC  0140               	movlb	0	; select bank0
 16425  0CCD  00AD               	movwf	I2C1_MasterWrite@pdata
 16426                           
 16427                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 16428  0CCE  0141               	movlb	1	; select bank1
 16429  0CCF  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 16430  0CD0  2CEF               	goto	l4816
 16431                           
 16432                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 16433  0CD1  0140               	movlb	0	; select bank0
 16434  0CD2  082D               	movf	I2C1_MasterWrite@pdata,w
 16435  0CD3  00AB               	movwf	??_I2C1_MasterWrite
 16436  0CD4  082B               	movf	??_I2C1_MasterWrite,w
 16437  0CD5  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 16438  0CD6  0827               	movf	I2C1_MasterWrite@length,w
 16439  0CD7  00AC               	movwf	??_I2C1_MasterWrite+1
 16440  0CD8  082C               	movf	??_I2C1_MasterWrite+1,w
 16441  0CD9  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 16442  0CDA  0829               	movf	I2C1_MasterWrite@address+1,w
 16443  0CDB  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 16444  0CDC  0828               	movf	I2C1_MasterWrite@address,w
 16445  0CDD  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 16446  0CDE  305E               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 16447  0CDF  318C  2415  318C   	fcall	_I2C1_MasterWriteTRBBuild
 16448                           
 16449                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 16450  0CE2  305E               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 16451  0CE3  0140               	movlb	0	; select bank0
 16452  0CE4  00AB               	movwf	??_I2C1_MasterWrite
 16453  0CE5  082B               	movf	??_I2C1_MasterWrite,w
 16454  0CE6  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 16455  0CE7  082A               	movf	I2C1_MasterWrite@pflag,w
 16456  0CE8  00AC               	movwf	??_I2C1_MasterWrite+1
 16457  0CE9  082C               	movf	??_I2C1_MasterWrite+1,w
 16458  0CEA  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 16459  0CEB  3001               	movlw	1
 16460  0CEC  318F  2753         	fcall	_I2C1_MasterTRBInsert
 16461                           
 16462                           ;mcc_generated_files/i2c1.c: 613:     }
 16463  0CEE  0008               	return
 16464  0CEF                     l4816:	
 16465                           
 16466                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 16467  0CEF  0140               	movlb	0	; select bank0
 16468  0CF0  082A               	movf	I2C1_MasterWrite@pflag,w
 16469  0CF1  0086               	movwf	6
 16470  0CF2  0187               	clrf	7
 16471  0CF3  0181               	clrf	1
 16472  0CF4  0A81               	incf	1,f
 16473  0CF5  0008               	return
 16474  0CF6                     __end_of_I2C1_MasterWrite:	
 16475                           
 16476                           	psect	text46
 16477  0C15                     __ptext46:	
 16478 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 16479 ;; Defined at:
 16480 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;  ptrb            1    wreg     PTR struct .
 16483 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 16484 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 16485 ;;		 -> writeData@data(1), 
 16486 ;;  length          1    1[BANK0 ] unsigned char 
 16487 ;;  address         2    2[BANK0 ] unsigned short 
 16488 ;; Auto vars:     Size  Location     Type
 16489 ;;  ptrb            1    6[BANK0 ] PTR struct .
 16490 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 16491 ;; Return value:  Size  Location     Type
 16492 ;;                  1    wreg      void 
 16493 ;; Registers used:
 16494 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16495 ;; Tracked objects:
 16496 ;;		On entry : 0/0
 16497 ;;		On exit  : 0/0
 16498 ;;		Unchanged: 0/0
 16499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16503 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16504 ;;Total ram usage:        7 bytes
 16505 ;; Hardware stack levels used:    1
 16506 ;; Hardware stack levels required when called:    4
 16507 ;; This function calls:
 16508 ;;		Nothing
 16509 ;; This function is called by:
 16510 ;;		_I2C1_MasterWrite
 16511 ;; This function uses a non-reentrant model
 16512 ;;
 16513                           
 16514                           
 16515                           ;psect for function _I2C1_MasterWriteTRBBuild
 16516  0C15                     _I2C1_MasterWriteTRBBuild:	
 16517                           
 16518                           ;incstack = 0
 16519                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 16520                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 16521  0C15  0140               	movlb	0	; select bank0
 16522  0C16  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 16523                           
 16524                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 16525  0C17  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 16526  0C18  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 16527  0C19  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 16528  0C1A  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 16529  0C1B  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 16530  0C1C  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 16531  0C1D  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 16532  0C1E  0086               	movwf	6
 16533  0C1F  3001               	movlw	1	; select bank2/3
 16534  0C20  0087               	movwf	7
 16535  0C21  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 16536  0C22  3FC0               	movwi [0]fsr1
 16537  0C23  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 16538  0C24  3FC1               	movwi [1]fsr1
 16539                           
 16540                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 16541  0C25  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 16542  0C26  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 16543  0C27  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 16544  0C28  3E02               	addlw	2
 16545  0C29  0086               	movwf	6
 16546  0C2A  3001               	movlw	1	; select bank2/3
 16547  0C2B  0087               	movwf	7
 16548  0C2C  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 16549  0C2D  0081               	movwf	1
 16550                           
 16551                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 16552  0C2E  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 16553  0C2F  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 16554  0C30  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 16555  0C31  3E03               	addlw	3
 16556  0C32  0086               	movwf	6
 16557  0C33  3001               	movlw	1	; select bank2/3
 16558  0C34  0087               	movwf	7
 16559  0C35  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 16560  0C36  0081               	movwf	1
 16561  0C37  0008               	return
 16562  0C38                     __end_of_I2C1_MasterWriteTRBBuild:	
 16563                           
 16564                           	psect	text47
 16565  0F53                     __ptext47:	
 16566 ;; *************** function _I2C1_MasterTRBInsert *****************
 16567 ;; Defined at:
 16568 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 16569 ;; Parameters:    Size  Location     Type
 16570 ;;  count           1    wreg     unsigned char 
 16571 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 16572 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 16573 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 16574 ;;		 -> writeData@status(1), 
 16575 ;; Auto vars:     Size  Location     Type
 16576 ;;  count           1    3[BANK0 ] unsigned char 
 16577 ;; Return value:  Size  Location     Type
 16578 ;;                  1    wreg      void 
 16579 ;; Registers used:
 16580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16581 ;; Tracked objects:
 16582 ;;		On entry : 0/0
 16583 ;;		On exit  : 0/0
 16584 ;;		Unchanged: 0/0
 16585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16588 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16590 ;;Total ram usage:        4 bytes
 16591 ;; Hardware stack levels used:    1
 16592 ;; Hardware stack levels required when called:    5
 16593 ;; This function calls:
 16594 ;;		_I2C1_WaitForLastPacketToComplete
 16595 ;; This function is called by:
 16596 ;;		_I2C1_MasterWrite
 16597 ;;		_I2C1_MasterRead
 16598 ;; This function uses a non-reentrant model
 16599 ;;
 16600                           
 16601                           
 16602                           ;psect for function _I2C1_MasterTRBInsert
 16603  0F53                     _I2C1_MasterTRBInsert:	
 16604                           
 16605                           ;incstack = 0
 16606                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16607                           ;I2C1_MasterTRBInsert@count stored from wreg
 16608  0F53  0140               	movlb	0	; select bank0
 16609  0F54  00A3               	movwf	I2C1_MasterTRBInsert@count
 16610                           
 16611                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 16612  0F55  0141               	movlb	1	; select bank1
 16613  0F56  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 16614  0F57  2F92               	goto	l4804
 16615                           
 16616                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 16617  0F58  3002               	movlw	2
 16618  0F59  0140               	movlb	0	; select bank0
 16619  0F5A  00A2               	movwf	??_I2C1_MasterTRBInsert
 16620  0F5B  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 16621  0F5C  0086               	movwf	6
 16622  0F5D  0187               	clrf	7
 16623  0F5E  0822               	movf	??_I2C1_MasterTRBInsert,w
 16624  0F5F  0081               	movwf	1
 16625                           
 16626                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 16627  0F60  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 16628  0F61  00A2               	movwf	??_I2C1_MasterTRBInsert
 16629  0F62  0141               	movlb	1	; select bank1
 16630  0F63  0A20               	incf	_i2c1_object^(0+128),w
 16631  0F64  0086               	movwf	6
 16632  0F65  0187               	clrf	7
 16633  0F66  0140               	movlb	0	; select bank0
 16634  0F67  0822               	movf	??_I2C1_MasterTRBInsert,w
 16635  0F68  0081               	movwf	1
 16636                           
 16637                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 16638  0F69  0823               	movf	I2C1_MasterTRBInsert@count,w
 16639  0F6A  00A2               	movwf	??_I2C1_MasterTRBInsert
 16640  0F6B  0141               	movlb	1	; select bank1
 16641  0F6C  0820               	movf	_i2c1_object^(0+128),w
 16642  0F6D  0086               	movwf	6
 16643  0F6E  0187               	clrf	7
 16644  0F6F  0140               	movlb	0	; select bank0
 16645  0F70  0822               	movf	??_I2C1_MasterTRBInsert,w
 16646  0F71  0081               	movwf	1
 16647                           
 16648                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 16649  0F72  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 16650  0F73  00A2               	movwf	??_I2C1_MasterTRBInsert
 16651  0F74  0141               	movlb	1	; select bank1
 16652  0F75  0820               	movf	_i2c1_object^(0+128),w
 16653  0F76  3E02               	addlw	2
 16654  0F77  0086               	movwf	6
 16655  0F78  0187               	clrf	7
 16656  0F79  0140               	movlb	0	; select bank0
 16657  0F7A  0822               	movf	??_I2C1_MasterTRBInsert,w
 16658  0F7B  0081               	movwf	1
 16659                           
 16660                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 16661  0F7C  3003               	movlw	3
 16662  0F7D  00A2               	movwf	??_I2C1_MasterTRBInsert
 16663  0F7E  0822               	movf	??_I2C1_MasterTRBInsert,w
 16664  0F7F  0141               	movlb	1	; select bank1
 16665  0F80  07A0               	addwf	_i2c1_object^(0+128),f
 16666                           
 16667                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 16668  0F81  0820               	movf	_i2c1_object^(0+128),w
 16669  0F82  3AD2               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 16670  0F83  1D03               	skipz
 16671  0F84  2F8B               	goto	l4800
 16672                           
 16673                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 16674  0F85  30CF               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 16675  0F86  0140               	movlb	0	; select bank0
 16676  0F87  00A2               	movwf	??_I2C1_MasterTRBInsert
 16677  0F88  0822               	movf	??_I2C1_MasterTRBInsert,w
 16678  0F89  0141               	movlb	1	; select bank1
 16679  0F8A  00A0               	movwf	_i2c1_object^(0+128)
 16680  0F8B                     l4800:	
 16681                           
 16682                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 16683  0F8B  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 16684                           
 16685                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 16686  0F8C  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16687  0F8D  0620               	xorwf	_i2c1_object^(0+128),w
 16688  0F8E  1D03               	skipz
 16689  0F8F  2F98               	goto	l4806
 16690                           
 16691                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 16692  0F90  1422               	bsf	(_i2c1_object^(0+128)+2),0
 16693  0F91  2F98               	goto	l4806
 16694  0F92                     l4804:	
 16695                           
 16696                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 16697  0F92  0140               	movlb	0	; select bank0
 16698  0F93  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 16699  0F94  0086               	movwf	6
 16700  0F95  0187               	clrf	7
 16701  0F96  0181               	clrf	1
 16702  0F97  0A81               	incf	1,f
 16703  0F98                     l4806:	
 16704                           
 16705                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 16706  0F98  0140               	movlb	0	; select bank0
 16707  0F99  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 16708  0F9A  0086               	movwf	6
 16709  0F9B  0187               	clrf	7
 16710  0F9C  3002               	movlw	2
 16711  0F9D  0601               	xorwf	1,w
 16712  0F9E  1D03               	btfss	3,2
 16713  0F9F  0008               	return
 16714                           
 16715                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 16716  0FA0  3189  2113         	fcall	_I2C1_WaitForLastPacketToComplete
 16717                           
 16718                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 16719  0FA2  014E               	movlb	14	; select bank14
 16720  0FA3  140F               	bsf	15,0	;volatile
 16721  0FA4  0008               	return
 16722  0FA5                     __end_of_I2C1_MasterTRBInsert:	
 16723                           
 16724                           	psect	text48
 16725  0913                     __ptext48:	
 16726 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 16727 ;; Defined at:
 16728 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 16729 ;; Parameters:    Size  Location     Type
 16730 ;;		None
 16731 ;; Auto vars:     Size  Location     Type
 16732 ;;		None
 16733 ;; Return value:  Size  Location     Type
 16734 ;;                  1    wreg      void 
 16735 ;; Registers used:
 16736 ;;		wreg, status,2, status,0
 16737 ;; Tracked objects:
 16738 ;;		On entry : 0/0
 16739 ;;		On exit  : 0/0
 16740 ;;		Unchanged: 0/0
 16741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16746 ;;Total ram usage:        0 bytes
 16747 ;; Hardware stack levels used:    1
 16748 ;; Hardware stack levels required when called:    4
 16749 ;; This function calls:
 16750 ;;		Nothing
 16751 ;; This function is called by:
 16752 ;;		_I2C1_MasterTRBInsert
 16753 ;; This function uses a non-reentrant model
 16754 ;;
 16755                           
 16756                           
 16757                           ;psect for function _I2C1_WaitForLastPacketToComplete
 16758  0913                     _I2C1_WaitForLastPacketToComplete:	
 16759  0913                     l4788:	
 16760                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 16761                           
 16762                           ;incstack = 0
 16763                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 16764                           
 16765                           
 16766                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 16767  0913  0141               	movlb	1	; select bank1
 16768  0914  084C               	movf	_i2c1_state^(0+128),w
 16769  0915  1903               	btfsc	3,2
 16770  0916  0008               	return
 16771  0917  2913               	goto	l4788
 16772  0918                     __end_of_I2C1_WaitForLastPacketToComplete:	
 16773                           
 16774                           	psect	text49
 16775  0CF6                     __ptext49:	
 16776 ;; *************** function ___lwmod *****************
 16777 ;; Defined at:
 16778 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 16779 ;; Parameters:    Size  Location     Type
 16780 ;;  divisor         2    8[BANK0 ] unsigned int 
 16781 ;;  dividend        2   10[BANK0 ] unsigned int 
 16782 ;; Auto vars:     Size  Location     Type
 16783 ;;  counter         1   13[BANK0 ] unsigned char 
 16784 ;; Return value:  Size  Location     Type
 16785 ;;                  2    8[BANK0 ] unsigned int 
 16786 ;; Registers used:
 16787 ;;		wreg, status,2, status,0
 16788 ;; Tracked objects:
 16789 ;;		On entry : 0/0
 16790 ;;		On exit  : 0/0
 16791 ;;		Unchanged: 0/0
 16792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16795 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16796 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16797 ;;Total ram usage:        6 bytes
 16798 ;; Hardware stack levels used:    1
 16799 ;; Hardware stack levels required when called:    4
 16800 ;; This function calls:
 16801 ;;		Nothing
 16802 ;; This function is called by:
 16803 ;;		_TM1650_fastPrintNum
 16804 ;; This function uses a non-reentrant model
 16805 ;;
 16806                           
 16807                           
 16808                           ;psect for function ___lwmod
 16809  0CF6                     ___lwmod:	
 16810                           
 16811                           ;incstack = 0
 16812                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16813  0CF6  0140               	movlb	0	; select bank0
 16814  0CF7  0828               	movf	___lwmod@divisor,w
 16815  0CF8  0429               	iorwf	___lwmod@divisor+1,w
 16816  0CF9  1903               	btfsc	3,2
 16817  0CFA  2D1E               	goto	l3664
 16818  0CFB  01AD               	clrf	___lwmod@counter
 16819  0CFC  0AAD               	incf	___lwmod@counter,f
 16820  0CFD                     l3654:	
 16821  0CFD  1BA9               	btfsc	___lwmod@divisor+1,7
 16822  0CFE  2D09               	goto	l3656
 16823  0CFF  3001               	movlw	1
 16824  0D00                     u2095:	
 16825  0D00  35A8               	lslf	___lwmod@divisor,f
 16826  0D01  0DA9               	rlf	___lwmod@divisor+1,f
 16827  0D02  0B89               	decfsz	9,f
 16828  0D03  2D00               	goto	u2095
 16829  0D04  3001               	movlw	1
 16830  0D05  00AC               	movwf	??___lwmod
 16831  0D06  082C               	movf	??___lwmod,w
 16832  0D07  07AD               	addwf	___lwmod@counter,f
 16833  0D08  2CFD               	goto	l3654
 16834  0D09                     l3656:	
 16835  0D09  0829               	movf	___lwmod@divisor+1,w
 16836  0D0A  022B               	subwf	___lwmod@dividend+1,w
 16837  0D0B  1D03               	skipz
 16838  0D0C  2D0F               	goto	u2115
 16839  0D0D  0828               	movf	___lwmod@divisor,w
 16840  0D0E  022A               	subwf	___lwmod@dividend,w
 16841  0D0F                     u2115:	
 16842  0D0F  1C03               	skipc
 16843  0D10  2D15               	goto	l3660
 16844  0D11  0828               	movf	___lwmod@divisor,w
 16845  0D12  02AA               	subwf	___lwmod@dividend,f
 16846  0D13  0829               	movf	___lwmod@divisor+1,w
 16847  0D14  3BAB               	subwfb	___lwmod@dividend+1,f
 16848  0D15                     l3660:	
 16849  0D15  3001               	movlw	1
 16850  0D16                     u2125:	
 16851  0D16  36A9               	lsrf	___lwmod@divisor+1,f
 16852  0D17  0CA8               	rrf	___lwmod@divisor,f
 16853  0D18  0B89               	decfsz	9,f
 16854  0D19  2D16               	goto	u2125
 16855  0D1A  3001               	movlw	1
 16856  0D1B  02AD               	subwf	___lwmod@counter,f
 16857  0D1C  1D03               	btfss	3,2
 16858  0D1D  2D09               	goto	l3656
 16859  0D1E                     l3664:	
 16860  0D1E  082B               	movf	___lwmod@dividend+1,w
 16861  0D1F  00A9               	movwf	?___lwmod+1
 16862  0D20  082A               	movf	___lwmod@dividend,w
 16863  0D21  00A8               	movwf	?___lwmod
 16864  0D22  0008               	return
 16865  0D23                     __end_of___lwmod:	
 16866                           
 16867                           	psect	text50
 16868  0918                     __ptext50:	
 16869 ;; *************** function _CLOCK_init *****************
 16870 ;; Defined at:
 16871 ;;		line 8 in file "clock.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;		None
 16874 ;; Auto vars:     Size  Location     Type
 16875 ;;		None
 16876 ;; Return value:  Size  Location     Type
 16877 ;;                  1    wreg      void 
 16878 ;; Registers used:
 16879 ;;		wreg, status,2, status,0, pclath, cstack
 16880 ;; Tracked objects:
 16881 ;;		On entry : 0/0
 16882 ;;		On exit  : 0/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16889 ;;Total ram usage:        0 bytes
 16890 ;; Hardware stack levels used:    1
 16891 ;; Hardware stack levels required when called:    5
 16892 ;; This function calls:
 16893 ;;		_TMR0_SetInterruptHandler
 16894 ;; This function is called by:
 16895 ;;		_main
 16896 ;; This function uses a non-reentrant model
 16897 ;;
 16898                           
 16899                           
 16900                           ;psect for function _CLOCK_init
 16901  0918                     _CLOCK_init:	
 16902                           
 16903                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 16904                           
 16905                           ;incstack = 0
 16906                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 16907  0918  30F9               	movlw	low _CLOCK_timerCallback
 16908  0919  0140               	movlb	0	; select bank0
 16909  091A  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16910  091B  3007               	movlw	high _CLOCK_timerCallback
 16911  091C  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16912  091D  3189  214C         	fcall	_TMR0_SetInterruptHandler
 16913  091F  0008               	return
 16914  0920                     __end_of_CLOCK_init:	
 16915                           
 16916                           	psect	text51
 16917  094C                     __ptext51:	
 16918 ;; *************** function _TMR0_SetInterruptHandler *****************
 16919 ;; Defined at:
 16920 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16921 ;; Parameters:    Size  Location     Type
 16922 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16923 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 16924 ;; Auto vars:     Size  Location     Type
 16925 ;;		None
 16926 ;; Return value:  Size  Location     Type
 16927 ;;                  1    wreg      void 
 16928 ;; Registers used:
 16929 ;;		wreg
 16930 ;; Tracked objects:
 16931 ;;		On entry : 0/0
 16932 ;;		On exit  : 0/0
 16933 ;;		Unchanged: 0/0
 16934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16938 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16939 ;;Total ram usage:        2 bytes
 16940 ;; Hardware stack levels used:    1
 16941 ;; Hardware stack levels required when called:    4
 16942 ;; This function calls:
 16943 ;;		Nothing
 16944 ;; This function is called by:
 16945 ;;		_TMR0_Initialize
 16946 ;;		_CLOCK_init
 16947 ;; This function uses a non-reentrant model
 16948 ;;
 16949                           
 16950                           
 16951                           ;psect for function _TMR0_SetInterruptHandler
 16952  094C                     _TMR0_SetInterruptHandler:	
 16953                           
 16954                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16955                           
 16956                           ;incstack = 0
 16957                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16958  094C  0140               	movlb	0	; select bank0
 16959  094D  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16960  094E  0142               	movlb	2	; select bank2
 16961  094F  00E5               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 16962  0950  0140               	movlb	0	; select bank0
 16963  0951  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16964  0952  0142               	movlb	2	; select bank2
 16965  0953  00E4               	movwf	_TMR0_InterruptHandler^(0+256)
 16966  0954  0008               	return
 16967  0955                     __end_of_TMR0_SetInterruptHandler:	
 16968                           
 16969                           	psect	text52
 16970  042A                     __ptext52:	
 16971 ;; *************** function _BUTTONS_task *****************
 16972 ;; Defined at:
 16973 ;;		line 56 in file "buttons.c"
 16974 ;; Parameters:    Size  Location     Type
 16975 ;;		None
 16976 ;; Auto vars:     Size  Location     Type
 16977 ;;  btn             1    8[BANK0 ] PTR struct .
 16978 ;;		 -> buttons(32), 
 16979 ;;  i               1    5[BANK0 ] unsigned char 
 16980 ;;  time            2    6[BANK0 ] unsigned short 
 16981 ;; Return value:  Size  Location     Type
 16982 ;;                  1    wreg      void 
 16983 ;; Registers used:
 16984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16985 ;; Tracked objects:
 16986 ;;		On entry : 0/0
 16987 ;;		On exit  : 0/0
 16988 ;;		Unchanged: 0/0
 16989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16991 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16992 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16993 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16994 ;;Total ram usage:        7 bytes
 16995 ;; Hardware stack levels used:    1
 16996 ;; Hardware stack levels required when called:    5
 16997 ;; This function calls:
 16998 ;;		_CLOCK_getTime
 16999 ;; This function is called by:
 17000 ;;		_main
 17001 ;; This function uses a non-reentrant model
 17002 ;;
 17003                           
 17004                           
 17005                           ;psect for function _BUTTONS_task
 17006  042A                     _BUTTONS_task:	
 17007                           
 17008                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 17009                           
 17010                           ;incstack = 0
 17011                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17012  042A  3189  2143  3184   	fcall	_CLOCK_getTime
 17013  042D  0140               	movlb	0	; select bank0
 17014  042E  0821               	movf	?_CLOCK_getTime+1,w
 17015  042F  00A7               	movwf	BUTTONS_task@time+1
 17016  0430  0820               	movf	?_CLOCK_getTime,w
 17017  0431  00A6               	movwf	BUTTONS_task@time
 17018                           
 17019                           ;buttons.c: 61:     if (time - lastTime < 2)
 17020  0432  0141               	movlb	1	; select bank1
 17021  0433  0835               	movf	_lastTime^(0+128),w
 17022  0434  0140               	movlb	0	; select bank0
 17023  0435  0226               	subwf	BUTTONS_task@time,w
 17024  0436  00A2               	movwf	??_BUTTONS_task
 17025  0437  0141               	movlb	1	; select bank1
 17026  0438  0836               	movf	(_lastTime+1)^(0+128),w
 17027  0439  0140               	movlb	0	; select bank0
 17028  043A  3B27               	subwfb	BUTTONS_task@time+1,w
 17029  043B  00A3               	movwf	??_BUTTONS_task+1
 17030  043C  3000               	movlw	0
 17031  043D  0223               	subwf	??_BUTTONS_task+1,w
 17032  043E  3002               	movlw	2
 17033  043F  1903               	skipnz
 17034  0440  0222               	subwf	??_BUTTONS_task,w
 17035  0441  1C03               	btfss	3,0
 17036  0442  0008               	return
 17037                           
 17038                           ;buttons.c: 64:     lastTime = time;
 17039  0443  0827               	movf	BUTTONS_task@time+1,w
 17040  0444  0141               	movlb	1	; select bank1
 17041  0445  00B6               	movwf	(_lastTime+1)^(0+128)
 17042  0446  0140               	movlb	0	; select bank0
 17043  0447  0826               	movf	BUTTONS_task@time,w
 17044  0448  0141               	movlb	1	; select bank1
 17045  0449  00B5               	movwf	_lastTime^(0+128)
 17046                           
 17047                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 17048  044A  0140               	movlb	0	; select bank0
 17049  044B  01A5               	clrf	BUTTONS_task@i
 17050  044C                     l5354:	
 17051                           
 17052                           ;buttons.c: 68:         button_t* btn = buttons + i;
 17053  044C  0825               	movf	BUTTONS_task@i,w
 17054  044D  00A2               	movwf	??_BUTTONS_task
 17055  044E  3002               	movlw	2
 17056  044F                     u3935:	
 17057  044F  35A2               	lslf	??_BUTTONS_task,f
 17058  0450  3EFF               	addlw	-1
 17059  0451  1D03               	skipz
 17060  0452  2C4F               	goto	u3935
 17061  0453  3522               	lslf	??_BUTTONS_task,w
 17062  0454  3E3A               	addlw	(low (_buttons| (0+256)))& (0+255)
 17063  0455  00A3               	movwf	??_BUTTONS_task+1
 17064  0456  0823               	movf	??_BUTTONS_task+1,w
 17065  0457  00A8               	movwf	BUTTONS_task@btn
 17066                           
 17067                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 17068  0458  0828               	movf	BUTTONS_task@btn,w
 17069  0459  0086               	movwf	6
 17070  045A  3001               	movlw	1	; select bank2/3
 17071  045B  0087               	movwf	7
 17072  045C  3F40               	moviw [0]fsr1
 17073  045D  00A2               	movwf	??_BUTTONS_task
 17074  045E  3F41               	moviw [1]fsr1
 17075  045F  00A3               	movwf	??_BUTTONS_task+1
 17076  0460  0822               	movf	??_BUTTONS_task,w
 17077  0461  0086               	movwf	6
 17078  0462  0823               	movf	??_BUTTONS_task+1,w
 17079  0463  0087               	movwf	7
 17080  0464  3001               	movlw	1
 17081  0465  00A4               	movwf	??_BUTTONS_task+2
 17082  0466  0828               	movf	BUTTONS_task@btn,w
 17083  0467  3E02               	addlw	2
 17084  0468  0084               	movwf	4
 17085  0469  3001               	movlw	1	; select bank2/3
 17086  046A  0085               	movwf	5
 17087  046B  0A00               	incf	0,w
 17088  046C  2C6E               	goto	u3944
 17089  046D                     u3945:	
 17090  046D  35A4               	lslf	??_BUTTONS_task+2,f
 17091  046E                     u3944:	
 17092  046E  0B89               	decfsz	9,f
 17093  046F  2C6D               	goto	u3945
 17094  0470  0824               	movf	??_BUTTONS_task+2,w
 17095  0471  0501               	andwf	1,w
 17096  0472  1D03               	btfss	3,2
 17097  0473  2C8D               	goto	l5362
 17098                           
 17099                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 17100  0474  0828               	movf	BUTTONS_task@btn,w
 17101  0475  3E03               	addlw	3
 17102  0476  0086               	movwf	6
 17103  0477  3001               	movlw	1	; select bank2/3
 17104  0478  0087               	movwf	7
 17105  0479  0181               	clrf	1
 17106  047A  0A81               	incf	1,f
 17107                           
 17108                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 17109  047B  0828               	movf	BUTTONS_task@btn,w
 17110  047C  3E07               	addlw	7
 17111  047D  0086               	movwf	6
 17112  047E  3001               	movlw	1	; select bank2/3
 17113  047F  0087               	movwf	7
 17114  0480  0801               	movf	1,w
 17115  0481  1D03               	btfss	3,2
 17116  0482  2C93               	goto	l911
 17117                           
 17118                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 17119  0483  0828               	movf	BUTTONS_task@btn,w
 17120  0484  3E05               	addlw	5
 17121  0485  0086               	movwf	6
 17122  0486  3001               	movlw	1	; select bank2/3
 17123  0487  0087               	movwf	7
 17124  0488  0826               	movf	BUTTONS_task@time,w
 17125  0489  3FC0               	movwi [0]fsr1
 17126  048A  0827               	movf	BUTTONS_task@time+1,w
 17127  048B  3FC1               	movwi [1]fsr1
 17128  048C  2C93               	goto	l911
 17129  048D                     l5362:	
 17130                           
 17131                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 17132  048D  0828               	movf	BUTTONS_task@btn,w
 17133  048E  3E03               	addlw	3
 17134  048F  0086               	movwf	6
 17135  0490  3001               	movlw	1	; select bank2/3
 17136  0491  0087               	movwf	7
 17137  0492  0181               	clrf	1
 17138  0493                     l911:	
 17139                           ;buttons.c: 78:         }
 17140                           
 17141                           
 17142                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 17143  0493  0828               	movf	BUTTONS_task@btn,w
 17144  0494  3E03               	addlw	3
 17145  0495  0086               	movwf	6
 17146  0496  3001               	movlw	1	; select bank2/3
 17147  0497  0087               	movwf	7
 17148  0498  0801               	movf	1,w
 17149  0499  1D03               	btfss	3,2
 17150  049A  2CAB               	goto	l5368
 17151  049B  0828               	movf	BUTTONS_task@btn,w
 17152  049C  3E04               	addlw	4
 17153  049D  0086               	movwf	6
 17154  049E  3001               	movlw	1	; select bank2/3
 17155  049F  0087               	movwf	7
 17156  04A0  0301               	decf	1,w
 17157  04A1  1D03               	btfss	3,2
 17158  04A2  2CAB               	goto	l5368
 17159                           
 17160                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 17161  04A3  0828               	movf	BUTTONS_task@btn,w
 17162  04A4  3E07               	addlw	7
 17163  04A5  0086               	movwf	6
 17164  04A6  3001               	movlw	1	; select bank2/3
 17165  04A7  0087               	movwf	7
 17166  04A8  0181               	clrf	1
 17167  04A9  0A81               	incf	1,f
 17168                           
 17169                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 17170  04AA  2CF8               	goto	l913
 17171  04AB                     l5368:	
 17172  04AB  0828               	movf	BUTTONS_task@btn,w
 17173  04AC  3E03               	addlw	3
 17174  04AD  0086               	movwf	6
 17175  04AE  3001               	movlw	1	; select bank2/3
 17176  04AF  0087               	movwf	7
 17177  04B0  0301               	decf	1,w
 17178  04B1  1D03               	btfss	3,2
 17179  04B2  2CD9               	goto	l5378
 17180  04B3  0828               	movf	BUTTONS_task@btn,w
 17181  04B4  3E04               	addlw	4
 17182  04B5  0086               	movwf	6
 17183  04B6  3001               	movlw	1	; select bank2/3
 17184  04B7  0087               	movwf	7
 17185  04B8  0301               	decf	1,w
 17186  04B9  1D03               	btfss	3,2
 17187  04BA  2CD9               	goto	l5378
 17188                           
 17189                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 500){
 17190  04BB  0828               	movf	BUTTONS_task@btn,w
 17191  04BC  3E05               	addlw	5
 17192  04BD  0086               	movwf	6
 17193  04BE  3001               	movlw	1	; select bank2/3
 17194  04BF  0087               	movwf	7
 17195  04C0  3F40               	moviw [0]fsr1
 17196  04C1  0226               	subwf	BUTTONS_task@time,w
 17197  04C2  00A2               	movwf	??_BUTTONS_task
 17198  04C3  3F41               	moviw [1]fsr1
 17199  04C4  3B27               	subwfb	BUTTONS_task@time+1,w
 17200  04C5  00A3               	movwf	??_BUTTONS_task+1
 17201  04C6  3001               	movlw	1
 17202  04C7  0223               	subwf	??_BUTTONS_task+1,w
 17203  04C8  30F5               	movlw	245
 17204  04C9  1903               	skipnz
 17205  04CA  0222               	subwf	??_BUTTONS_task,w
 17206  04CB  1C03               	skipc
 17207  04CC  2CCF               	goto	l5376
 17208                           
 17209                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 17210  04CD  3003               	movlw	3
 17211  04CE  2CD0               	goto	L13
 17212  04CF                     l5376:	
 17213                           ;buttons.c: 86:             } else {
 17214                           
 17215                           
 17216                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 17217  04CF  3002               	movlw	2
 17218  04D0                     L13:	
 17219  04D0  00A2               	movwf	??_BUTTONS_task
 17220  04D1  0828               	movf	BUTTONS_task@btn,w
 17221  04D2  3E07               	addlw	7
 17222  04D3  0086               	movwf	6
 17223  04D4  3001               	movlw	1	; select bank2/3
 17224  04D5  0087               	movwf	7
 17225  04D6  0822               	movf	??_BUTTONS_task,w
 17226  04D7  0081               	movwf	1
 17227  04D8  2CF8               	goto	l913
 17228  04D9                     l5378:	
 17229  04D9  0828               	movf	BUTTONS_task@btn,w
 17230  04DA  3E03               	addlw	3
 17231  04DB  0086               	movwf	6
 17232  04DC  3001               	movlw	1	; select bank2/3
 17233  04DD  0087               	movwf	7
 17234  04DE  0801               	movf	1,w
 17235  04DF  1D03               	btfss	3,2
 17236  04E0  2CF8               	goto	l913
 17237  04E1  0828               	movf	BUTTONS_task@btn,w
 17238  04E2  3E04               	addlw	4
 17239  04E3  0086               	movwf	6
 17240  04E4  3001               	movlw	1	; select bank2/3
 17241  04E5  0087               	movwf	7
 17242  04E6  0301               	decf	1,w
 17243  04E7  1D03               	btfss	3,2
 17244  04E8  2CF8               	goto	l913
 17245  04E9  0828               	movf	BUTTONS_task@btn,w
 17246  04EA  3E07               	addlw	7
 17247  04EB  0086               	movwf	6
 17248  04EC  3001               	movlw	1	; select bank2/3
 17249  04ED  0087               	movwf	7
 17250  04EE  3003               	movlw	3
 17251  04EF  0601               	xorwf	1,w
 17252  04F0  1D03               	btfss	3,2
 17253  04F1  2CF8               	goto	l913
 17254                           
 17255                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 17256  04F2  0828               	movf	BUTTONS_task@btn,w
 17257  04F3  3E07               	addlw	7
 17258  04F4  0086               	movwf	6
 17259  04F5  3001               	movlw	1	; select bank2/3
 17260  04F6  0087               	movwf	7
 17261  04F7  0181               	clrf	1
 17262  04F8                     l913:	
 17263                           
 17264                           ;buttons.c: 93:         btn->lastState = btn->state;
 17265  04F8  0828               	movf	BUTTONS_task@btn,w
 17266  04F9  3E03               	addlw	3
 17267  04FA  0086               	movwf	6
 17268  04FB  3001               	movlw	1	; select bank2/3
 17269  04FC  0087               	movwf	7
 17270  04FD  0801               	movf	1,w
 17271  04FE  00A2               	movwf	??_BUTTONS_task
 17272  04FF  0828               	movf	BUTTONS_task@btn,w
 17273  0500  3E04               	addlw	4
 17274  0501  0086               	movwf	6
 17275  0502  3001               	movlw	1	; select bank2/3
 17276  0503  0087               	movwf	7
 17277  0504  0822               	movf	??_BUTTONS_task,w
 17278  0505  0081               	movwf	1
 17279                           
 17280                           ;buttons.c: 94:     }
 17281  0506  3001               	movlw	1
 17282  0507  00A2               	movwf	??_BUTTONS_task
 17283  0508  0822               	movf	??_BUTTONS_task,w
 17284  0509  07A5               	addwf	BUTTONS_task@i,f
 17285  050A  3004               	movlw	4
 17286  050B  0225               	subwf	BUTTONS_task@i,w
 17287  050C  1803               	btfsc	3,0
 17288  050D  0008               	return
 17289  050E  2C4C               	goto	l5354
 17290  050F                     __end_of_BUTTONS_task:	
 17291                           
 17292                           	psect	text53
 17293  0F05                     __ptext53:	
 17294 ;; *************** function _BUTTONS_init *****************
 17295 ;; Defined at:
 17296 ;;		line 23 in file "buttons.c"
 17297 ;; Parameters:    Size  Location     Type
 17298 ;;		None
 17299 ;; Auto vars:     Size  Location     Type
 17300 ;;		None
 17301 ;; Return value:  Size  Location     Type
 17302 ;;                  1    wreg      void 
 17303 ;; Registers used:
 17304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17305 ;; Tracked objects:
 17306 ;;		On entry : 0/0
 17307 ;;		On exit  : 0/0
 17308 ;;		Unchanged: 0/0
 17309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17313 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17314 ;;Total ram usage:        1 bytes
 17315 ;; Hardware stack levels used:    1
 17316 ;; Hardware stack levels required when called:    5
 17317 ;; This function calls:
 17318 ;;		_GPIO_init
 17319 ;;		_init
 17320 ;; This function is called by:
 17321 ;;		_main
 17322 ;; This function uses a non-reentrant model
 17323 ;;
 17324                           
 17325                           
 17326                           ;psect for function _BUTTONS_init
 17327  0F05                     _BUTTONS_init:	
 17328                           
 17329                           ;buttons.c: 24:     menu = &buttons[0];
 17330                           
 17331                           ;incstack = 0
 17332                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17333  0F05  303A               	movlw	(low (_buttons| (0+256)))& (0+255)
 17334  0F06  0140               	movlb	0	; select bank0
 17335  0F07  00A5               	movwf	??_BUTTONS_init
 17336  0F08  0825               	movf	??_BUTTONS_init,w
 17337  0F09  0141               	movlb	1	; select bank1
 17338  0F0A  00C7               	movwf	_menu^(0+128)
 17339                           
 17340                           ;buttons.c: 25:     up = &buttons[1];
 17341  0F0B  3042               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 17342  0F0C  0140               	movlb	0	; select bank0
 17343  0F0D  00A5               	movwf	??_BUTTONS_init
 17344  0F0E  0825               	movf	??_BUTTONS_init,w
 17345  0F0F  0141               	movlb	1	; select bank1
 17346  0F10  00C6               	movwf	_up^(0+128)
 17347                           
 17348                           ;buttons.c: 26:     down = &buttons[2];
 17349  0F11  304A               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 17350  0F12  0140               	movlb	0	; select bank0
 17351  0F13  00A5               	movwf	??_BUTTONS_init
 17352  0F14  0825               	movf	??_BUTTONS_init,w
 17353  0F15  0141               	movlb	1	; select bank1
 17354  0F16  00C5               	movwf	_down^(0+128)
 17355                           
 17356                           ;buttons.c: 27:     enter = &buttons[3];
 17357  0F17  3052               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 17358  0F18  0140               	movlb	0	; select bank0
 17359  0F19  00A5               	movwf	??_BUTTONS_init
 17360  0F1A  0825               	movf	??_BUTTONS_init,w
 17361  0F1B  0141               	movlb	1	; select bank1
 17362  0F1C  00C4               	movwf	_enter^(0+128)
 17363                           
 17364                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 17365  0F1D  300E               	movlw	14
 17366  0F1E  0140               	movlb	0	; select bank0
 17367  0F1F  00A0               	movwf	init@port
 17368  0F20  3000               	movlw	0
 17369  0F21  00A1               	movwf	init@port+1
 17370  0F22  3002               	movlw	2
 17371  0F23  00A5               	movwf	??_BUTTONS_init
 17372  0F24  0825               	movf	??_BUTTONS_init,w
 17373  0F25  00A2               	movwf	init@pin
 17374  0F26  0141               	movlb	1	; select bank1
 17375  0F27  0847               	movf	_menu^(0+128),w
 17376  0F28  318B  23F5  318F   	fcall	_init
 17377                           
 17378                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 17379  0F2B  300C               	movlw	12
 17380  0F2C  0140               	movlb	0	; select bank0
 17381  0F2D  00A0               	movwf	init@port
 17382  0F2E  3000               	movlw	0
 17383  0F2F  00A1               	movwf	init@port+1
 17384  0F30  3002               	movlw	2
 17385  0F31  00A5               	movwf	??_BUTTONS_init
 17386  0F32  0825               	movf	??_BUTTONS_init,w
 17387  0F33  00A2               	movwf	init@pin
 17388  0F34  0141               	movlb	1	; select bank1
 17389  0F35  0844               	movf	_enter^(0+128),w
 17390  0F36  318B  23F5  318F   	fcall	_init
 17391                           
 17392                           ;buttons.c: 31:     init(down, &PORTC, 0);
 17393  0F39  300E               	movlw	14
 17394  0F3A  0140               	movlb	0	; select bank0
 17395  0F3B  00A0               	movwf	init@port
 17396  0F3C  3000               	movlw	0
 17397  0F3D  00A1               	movwf	init@port+1
 17398  0F3E  01A2               	clrf	init@pin
 17399  0F3F  0141               	movlb	1	; select bank1
 17400  0F40  0845               	movf	_down^(0+128),w
 17401  0F41  318B  23F5  318F   	fcall	_init
 17402                           
 17403                           ;buttons.c: 32:     init(up, &PORTC, 1);
 17404  0F44  300E               	movlw	14
 17405  0F45  0140               	movlb	0	; select bank0
 17406  0F46  00A0               	movwf	init@port
 17407  0F47  3000               	movlw	0
 17408  0F48  00A1               	movwf	init@port+1
 17409  0F49  01A2               	clrf	init@pin
 17410  0F4A  0AA2               	incf	init@pin,f
 17411  0F4B  0141               	movlb	1	; select bank1
 17412  0F4C  0846               	movf	_up^(0+128),w
 17413  0F4D  318B  23F5  318F   	fcall	_init
 17414                           
 17415                           ;buttons.c: 34:     GPIO_init();
 17416  0F50  318A  222A         	fcall	_GPIO_init
 17417  0F52  0008               	return
 17418  0F53                     __end_of_BUTTONS_init:	
 17419                           
 17420                           	psect	text54
 17421  0BF5                     __ptext54:	
 17422 ;; *************** function _init *****************
 17423 ;; Defined at:
 17424 ;;		line 16 in file "buttons.c"
 17425 ;; Parameters:    Size  Location     Type
 17426 ;;  btn             1    wreg     PTR struct .
 17427 ;;		 -> buttons(32), NULL(0), 
 17428 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 17429 ;;		 -> PORTA(1), PORTC(1), 
 17430 ;;  pin             1    2[BANK0 ] unsigned char 
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;  btn             1    4[BANK0 ] PTR struct .
 17433 ;;		 -> buttons(32), NULL(0), 
 17434 ;; Return value:  Size  Location     Type
 17435 ;;                  1    wreg      void 
 17436 ;; Registers used:
 17437 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17438 ;; Tracked objects:
 17439 ;;		On entry : 0/0
 17440 ;;		On exit  : 0/0
 17441 ;;		Unchanged: 0/0
 17442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17443 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17446 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17447 ;;Total ram usage:        5 bytes
 17448 ;; Hardware stack levels used:    1
 17449 ;; Hardware stack levels required when called:    4
 17450 ;; This function calls:
 17451 ;;		Nothing
 17452 ;; This function is called by:
 17453 ;;		_BUTTONS_init
 17454 ;; This function uses a non-reentrant model
 17455 ;;
 17456                           
 17457                           
 17458                           ;psect for function _init
 17459  0BF5                     _init:	
 17460                           
 17461                           ;incstack = 0
 17462                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 17463                           ;init@btn stored from wreg
 17464  0BF5  0140               	movlb	0	; select bank0
 17465  0BF6  00A4               	movwf	init@btn
 17466                           
 17467                           ;buttons.c: 17:     btn->port = port;
 17468  0BF7  0824               	movf	init@btn,w
 17469  0BF8  0086               	movwf	6
 17470  0BF9  3001               	movlw	1	; select bank2/3
 17471  0BFA  0087               	movwf	7
 17472  0BFB  0820               	movf	init@port,w
 17473  0BFC  3FC0               	movwi [0]fsr1
 17474  0BFD  0821               	movf	init@port+1,w
 17475  0BFE  3FC1               	movwi [1]fsr1
 17476                           
 17477                           ;buttons.c: 18:     btn->pin = pin;
 17478  0BFF  0822               	movf	init@pin,w
 17479  0C00  00A3               	movwf	??_init
 17480  0C01  0824               	movf	init@btn,w
 17481  0C02  3E02               	addlw	2
 17482  0C03  0086               	movwf	6
 17483  0C04  3001               	movlw	1	; select bank2/3
 17484  0C05  0087               	movwf	7
 17485  0C06  0823               	movf	??_init,w
 17486  0C07  0081               	movwf	1
 17487                           
 17488                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 17489  0C08  0824               	movf	init@btn,w
 17490  0C09  3E03               	addlw	3
 17491  0C0A  0086               	movwf	6
 17492  0C0B  3001               	movlw	1	; select bank2/3
 17493  0C0C  0087               	movwf	7
 17494  0C0D  0181               	clrf	1
 17495                           
 17496                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 17497  0C0E  0824               	movf	init@btn,w
 17498  0C0F  3E07               	addlw	7
 17499  0C10  0086               	movwf	6
 17500  0C11  3001               	movlw	1	; select bank2/3
 17501  0C12  0087               	movwf	7
 17502  0C13  0181               	clrf	1
 17503  0C14  0008               	return
 17504  0C15                     __end_of_init:	
 17505                           
 17506                           	psect	text55
 17507  0A2A                     __ptext55:	
 17508 ;; *************** function _GPIO_init *****************
 17509 ;; Defined at:
 17510 ;;		line 38 in file "buttons.c"
 17511 ;; Parameters:    Size  Location     Type
 17512 ;;		None
 17513 ;; Auto vars:     Size  Location     Type
 17514 ;;		None
 17515 ;; Return value:  Size  Location     Type
 17516 ;;                  1    wreg      void 
 17517 ;; Registers used:
 17518 ;;		None
 17519 ;; Tracked objects:
 17520 ;;		On entry : 0/0
 17521 ;;		On exit  : 0/0
 17522 ;;		Unchanged: 0/0
 17523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17528 ;;Total ram usage:        0 bytes
 17529 ;; Hardware stack levels used:    1
 17530 ;; Hardware stack levels required when called:    4
 17531 ;; This function calls:
 17532 ;;		Nothing
 17533 ;; This function is called by:
 17534 ;;		_BUTTONS_init
 17535 ;; This function uses a non-reentrant model
 17536 ;;
 17537                           
 17538                           
 17539                           ;psect for function _GPIO_init
 17540  0A2A                     _GPIO_init:	
 17541                           
 17542                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 17543                           
 17544                           ;incstack = 0
 17545                           ; Regs used in _GPIO_init: []
 17546  0A2A  0140               	movlb	0	; select bank0
 17547  0A2B  1512               	bsf	18,2	;volatile
 17548                           
 17549                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 17550  0A2C  017E               	movlb	62	; select bank62
 17551  0A2D  1138               	bcf	56,2	;volatile
 17552                           
 17553                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 17554  0A2E  1539               	bsf	57,2	;volatile
 17555                           
 17556                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 17557  0A2F  0140               	movlb	0	; select bank0
 17558  0A30  1414               	bsf	20,0	;volatile
 17559                           
 17560                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 17561  0A31  1494               	bsf	20,1	;volatile
 17562                           
 17563                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 17564  0A32  1514               	bsf	20,2	;volatile
 17565                           
 17566                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 17567  0A33  017E               	movlb	62	; select bank62
 17568  0A34  104E               	bcf	78,0	;volatile
 17569                           
 17570                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 17571  0A35  10CE               	bcf	78,1	;volatile
 17572                           
 17573                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 17574  0A36  114E               	bcf	78,2	;volatile
 17575                           
 17576                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 17577  0A37  144F               	bsf	79,0	;volatile
 17578                           
 17579                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 17580  0A38  14CF               	bsf	79,1	;volatile
 17581                           
 17582                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 17583  0A39  154F               	bsf	79,2	;volatile
 17584  0A3A  0008               	return
 17585  0A3B                     __end_of_GPIO_init:	
 17586                           
 17587                           	psect	text56
 17588  050F                     __ptext56:	
 17589 ;; *************** function _BEAT_task *****************
 17590 ;; Defined at:
 17591 ;;		line 65 in file "beat.c"
 17592 ;; Parameters:    Size  Location     Type
 17593 ;;		None
 17594 ;; Auto vars:     Size  Location     Type
 17595 ;;  offset          2   10[BANK0 ] unsigned short 
 17596 ;; Return value:  Size  Location     Type
 17597 ;;                  1    wreg      void 
 17598 ;; Registers used:
 17599 ;;		wreg, status,2, status,0, pclath, cstack
 17600 ;; Tracked objects:
 17601 ;;		On entry : 0/0
 17602 ;;		On exit  : 0/0
 17603 ;;		Unchanged: 0/0
 17604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17606 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17607 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17608 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17609 ;;Total ram usage:        4 bytes
 17610 ;; Hardware stack levels used:    1
 17611 ;; Hardware stack levels required when called:    5
 17612 ;; This function calls:
 17613 ;;		_ADCC_SetUpperThreshold
 17614 ;;		_CLOCK_getTime
 17615 ;;		___lwdiv
 17616 ;; This function is called by:
 17617 ;;		_main
 17618 ;; This function uses a non-reentrant model
 17619 ;;
 17620                           
 17621                           
 17622                           ;psect for function _BEAT_task
 17623  050F                     _BEAT_task:	
 17624                           
 17625                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 17626                           
 17627                           ;incstack = 0
 17628                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 17629  050F  3189  2143  3185   	fcall	_CLOCK_getTime
 17630  0512  0141               	movlb	1	; select bank1
 17631  0513  082B               	movf	_lastRun^(0+128),w
 17632  0514  0140               	movlb	0	; select bank0
 17633  0515  0220               	subwf	?_CLOCK_getTime,w
 17634  0516  00A8               	movwf	??_BEAT_task
 17635  0517  0141               	movlb	1	; select bank1
 17636  0518  082C               	movf	(_lastRun+1)^(0+128),w
 17637  0519  0140               	movlb	0	; select bank0
 17638  051A  3B21               	subwfb	?_CLOCK_getTime+1,w
 17639  051B  00A9               	movwf	??_BEAT_task+1
 17640  051C  0141               	movlb	1	; select bank1
 17641  051D  0865               	movf	(_delay+1)^(0+128),w
 17642  051E  0140               	movlb	0	; select bank0
 17643  051F  0229               	subwf	??_BEAT_task+1,w
 17644  0520  1D03               	skipz
 17645  0521  2D26               	goto	u4425
 17646  0522  0141               	movlb	1	; select bank1
 17647  0523  0864               	movf	_delay^(0+128),w
 17648  0524  0140               	movlb	0	; select bank0
 17649  0525  0228               	subwf	??_BEAT_task,w
 17650  0526                     u4425:	
 17651  0526  1C03               	btfss	3,0
 17652  0527  0008               	return
 17653                           
 17654                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 17655  0528  3189  2143  3185   	fcall	_CLOCK_getTime
 17656  052B  0140               	movlb	0	; select bank0
 17657  052C  0821               	movf	?_CLOCK_getTime+1,w
 17658  052D  0141               	movlb	1	; select bank1
 17659  052E  00AC               	movwf	(_lastRun+1)^(0+128)
 17660  052F  0140               	movlb	0	; select bank0
 17661  0530  0820               	movf	?_CLOCK_getTime,w
 17662  0531  0141               	movlb	1	; select bank1
 17663  0532  00AB               	movwf	_lastRun^(0+128)
 17664                           
 17665                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 17666  0533  033A               	decf	_thresholdExceeded^(0+128),w
 17667  0534  1D03               	btfss	3,2
 17668  0535  2D3B               	goto	l5534
 17669                           
 17670                           ;beat.c: 77:         thresholdCount++;
 17671  0536  3001               	movlw	1
 17672  0537  07A9               	addwf	_thresholdCount^(0+128),f
 17673  0538  3000               	movlw	0
 17674  0539  3DAA               	addwfc	(_thresholdCount+1)^(0+128),f
 17675                           
 17676                           ;beat.c: 78:     } else {
 17677  053A  2D41               	goto	l5538
 17678  053B                     l5534:	
 17679                           
 17680                           ;beat.c: 80:         thresholdCount = 0;
 17681  053B  01A9               	clrf	_thresholdCount^(0+128)
 17682  053C  01AA               	clrf	(_thresholdCount+1)^(0+128)
 17683                           
 17684                           ;beat.c: 81:         delay = 20;
 17685  053D  3014               	movlw	20
 17686  053E  00E4               	movwf	_delay^(0+128)
 17687  053F  3000               	movlw	0
 17688  0540  00E5               	movwf	(_delay^(0+128)+1)
 17689  0541                     l5538:	
 17690                           
 17691                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 17692  0541  033A               	decf	_thresholdExceeded^(0+128),w
 17693  0542  1D03               	btfss	3,2
 17694  0543  2D86               	goto	l5556
 17695  0544  0839               	movf	_lastDetected^(0+128),w
 17696  0545  1D03               	btfss	3,2
 17697  0546  2D86               	goto	l5556
 17698                           
 17699                           ;beat.c: 89:         detected = 1;
 17700  0547  01BB               	clrf	_detected^(0+128)
 17701  0548  0ABB               	incf	_detected^(0+128),f
 17702                           
 17703                           ;beat.c: 92:         delay = 100;
 17704  0549  3064               	movlw	100
 17705  054A  00E4               	movwf	_delay^(0+128)
 17706  054B  3000               	movlw	0
 17707  054C  00E5               	movwf	(_delay^(0+128)+1)
 17708                           
 17709                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 17710  054D  3189  2143  3185   	fcall	_CLOCK_getTime
 17711  0550  0141               	movlb	1	; select bank1
 17712  0551  082D               	movf	_lastBeat^(0+128),w
 17713  0552  0140               	movlb	0	; select bank0
 17714  0553  0220               	subwf	?_CLOCK_getTime,w
 17715  0554  00AA               	movwf	BEAT_task@offset
 17716  0555  0141               	movlb	1	; select bank1
 17717  0556  082E               	movf	(_lastBeat+1)^(0+128),w
 17718  0557  0140               	movlb	0	; select bank0
 17719  0558  3B21               	subwfb	?_CLOCK_getTime+1,w
 17720  0559  00AB               	movwf	BEAT_task@offset+1
 17721                           
 17722                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 17723  055A  3189  2143  3185   	fcall	_CLOCK_getTime
 17724  055D  0140               	movlb	0	; select bank0
 17725  055E  0821               	movf	?_CLOCK_getTime+1,w
 17726  055F  0141               	movlb	1	; select bank1
 17727  0560  00AE               	movwf	(_lastBeat+1)^(0+128)
 17728  0561  0140               	movlb	0	; select bank0
 17729  0562  0820               	movf	?_CLOCK_getTime,w
 17730  0563  0141               	movlb	1	; select bank1
 17731  0564  00AD               	movwf	_lastBeat^(0+128)
 17732                           
 17733                           ;beat.c: 99:         if (offset < 150)
 17734  0565  3000               	movlw	0
 17735  0566  0140               	movlb	0	; select bank0
 17736  0567  022B               	subwf	BEAT_task@offset+1,w
 17737  0568  3096               	movlw	150
 17738  0569  1903               	skipnz
 17739  056A  022A               	subwf	BEAT_task@offset,w
 17740  056B  1803               	skipnc
 17741  056C  2D73               	goto	l5554
 17742                           
 17743                           ;beat.c: 100:             bpm = 400;
 17744  056D  3090               	movlw	144
 17745  056E  0142               	movlb	2	; select bank2
 17746  056F  00B8               	movwf	_bpm^(0+256)
 17747  0570  3001               	movlw	1
 17748  0571  00B9               	movwf	(_bpm^(0+256)+1)
 17749  0572  2D86               	goto	l5556
 17750  0573                     l5554:	
 17751                           
 17752                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 17753  0573  082B               	movf	BEAT_task@offset+1,w
 17754  0574  00A1               	movwf	___lwdiv@divisor+1
 17755  0575  082A               	movf	BEAT_task@offset,w
 17756  0576  00A0               	movwf	___lwdiv@divisor
 17757  0577  3060               	movlw	96
 17758  0578  00A2               	movwf	___lwdiv@dividend
 17759  0579  30EA               	movlw	234
 17760  057A  00A3               	movwf	___lwdiv@dividend+1
 17761  057B  318D  2582  3185   	fcall	___lwdiv
 17762  057E  0140               	movlb	0	; select bank0
 17763  057F  0821               	movf	?___lwdiv+1,w
 17764  0580  0142               	movlb	2	; select bank2
 17765  0581  00B9               	movwf	(_bpm+1)^(0+256)
 17766  0582  0140               	movlb	0	; select bank0
 17767  0583  0820               	movf	?___lwdiv,w
 17768  0584  0142               	movlb	2	; select bank2
 17769  0585  00B8               	movwf	_bpm^(0+256)
 17770  0586                     l5556:	
 17771                           
 17772                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 17773  0586  0141               	movlb	1	; select bank1
 17774  0587  083A               	movf	_thresholdExceeded^(0+128),w
 17775  0588  0140               	movlb	0	; select bank0
 17776  0589  00A8               	movwf	??_BEAT_task
 17777  058A  0828               	movf	??_BEAT_task,w
 17778  058B  0141               	movlb	1	; select bank1
 17779  058C  00B9               	movwf	_lastDetected^(0+128)
 17780                           
 17781                           ;beat.c: 109:     thresholdExceeded = 0;
 17782  058D  01BA               	clrf	_thresholdExceeded^(0+128)
 17783                           
 17784                           ;beat.c: 111:     if (thresholdCount > 3) {
 17785  058E  082A               	movf	(_thresholdCount+1)^(0+128),w
 17786  058F  3A80               	xorlw	128
 17787  0590  0140               	movlb	0	; select bank0
 17788  0591  00A8               	movwf	??_BEAT_task
 17789  0592  3080               	movlw	128
 17790  0593  0228               	subwf	??_BEAT_task,w
 17791  0594  1D03               	skipz
 17792  0595  2D99               	goto	u4475
 17793  0596  3004               	movlw	4
 17794  0597  0141               	movlb	1	; select bank1
 17795  0598  0229               	subwf	_thresholdCount^(0+128),w
 17796  0599                     u4475:	
 17797  0599  1C03               	skipc
 17798  059A  2DB8               	goto	l5570
 17799                           
 17800                           ;beat.c: 112:         threshold += 1;
 17801  059B  3001               	movlw	1
 17802  059C  0141               	movlb	1	; select bank1
 17803  059D  07E6               	addwf	_threshold^(0+128),f
 17804  059E  3000               	movlw	0
 17805  059F  3DE7               	addwfc	(_threshold+1)^(0+128),f
 17806                           
 17807                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 17808  05A0  0867               	movf	(_threshold+1)^(0+128),w
 17809  05A1  0140               	movlb	0	; select bank0
 17810  05A2  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 17811  05A3  0141               	movlb	1	; select bank1
 17812  05A4  0866               	movf	_threshold^(0+128),w
 17813  05A5  0140               	movlb	0	; select bank0
 17814  05A6  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 17815  05A7  3189  2131  3185   	fcall	_ADCC_SetUpperThreshold
 17816                           
 17817                           ;beat.c: 114:         thresholdCount = 0;
 17818  05AA  0141               	movlb	1	; select bank1
 17819  05AB  01A9               	clrf	_thresholdCount^(0+128)
 17820  05AC  01AA               	clrf	(_thresholdCount+1)^(0+128)
 17821                           
 17822                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 17823  05AD  3189  2143         	fcall	_CLOCK_getTime
 17824  05AF  0140               	movlb	0	; select bank0
 17825  05B0  0821               	movf	?_CLOCK_getTime+1,w
 17826  05B1  0141               	movlb	1	; select bank1
 17827  05B2  00AE               	movwf	(_lastBeat+1)^(0+128)
 17828  05B3  0140               	movlb	0	; select bank0
 17829  05B4  0820               	movf	?_CLOCK_getTime,w
 17830  05B5  0141               	movlb	1	; select bank1
 17831  05B6  00AD               	movwf	_lastBeat^(0+128)
 17832                           
 17833                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 17834  05B7  0008               	return
 17835  05B8                     l5570:	
 17836  05B8  3189  2143  3185   	fcall	_CLOCK_getTime
 17837  05BB  0141               	movlb	1	; select bank1
 17838  05BC  082D               	movf	_lastBeat^(0+128),w
 17839  05BD  0140               	movlb	0	; select bank0
 17840  05BE  0220               	subwf	?_CLOCK_getTime,w
 17841  05BF  00A8               	movwf	??_BEAT_task
 17842  05C0  0141               	movlb	1	; select bank1
 17843  05C1  082E               	movf	(_lastBeat+1)^(0+128),w
 17844  05C2  0140               	movlb	0	; select bank0
 17845  05C3  3B21               	subwfb	?_CLOCK_getTime+1,w
 17846  05C4  00A9               	movwf	??_BEAT_task+1
 17847  05C5  3003               	movlw	3
 17848  05C6  0229               	subwf	??_BEAT_task+1,w
 17849  05C7  30E9               	movlw	233
 17850  05C8  1903               	skipnz
 17851  05C9  0228               	subwf	??_BEAT_task,w
 17852  05CA  1C03               	skipc
 17853  05CB  0008               	return
 17854                           
 17855                           ;beat.c: 119:         threshold -= 1;
 17856  05CC  3001               	movlw	1
 17857  05CD  0141               	movlb	1	; select bank1
 17858  05CE  02E6               	subwf	_threshold^(0+128),f
 17859  05CF  3000               	movlw	0
 17860  05D0  3BE7               	subwfb	(_threshold+1)^(0+128),f
 17861                           
 17862                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 17863  05D1  0867               	movf	(_threshold+1)^(0+128),w
 17864  05D2  0140               	movlb	0	; select bank0
 17865  05D3  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 17866  05D4  0141               	movlb	1	; select bank1
 17867  05D5  0866               	movf	_threshold^(0+128),w
 17868  05D6  0140               	movlb	0	; select bank0
 17869  05D7  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 17870  05D8  3189  2131         	fcall	_ADCC_SetUpperThreshold
 17871  05DA  0008               	return
 17872  05DB                     __end_of_BEAT_task:	
 17873                           
 17874                           	psect	text57
 17875  0D82                     __ptext57:	
 17876 ;; *************** function ___lwdiv *****************
 17877 ;; Defined at:
 17878 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 17879 ;; Parameters:    Size  Location     Type
 17880 ;;  divisor         2    0[BANK0 ] unsigned int 
 17881 ;;  dividend        2    2[BANK0 ] unsigned int 
 17882 ;; Auto vars:     Size  Location     Type
 17883 ;;  quotient        2    5[BANK0 ] unsigned int 
 17884 ;;  counter         1    7[BANK0 ] unsigned char 
 17885 ;; Return value:  Size  Location     Type
 17886 ;;                  2    0[BANK0 ] unsigned int 
 17887 ;; Registers used:
 17888 ;;		wreg, status,2, status,0
 17889 ;; Tracked objects:
 17890 ;;		On entry : 0/0
 17891 ;;		On exit  : 0/0
 17892 ;;		Unchanged: 0/0
 17893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17895 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17897 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17898 ;;Total ram usage:        8 bytes
 17899 ;; Hardware stack levels used:    1
 17900 ;; Hardware stack levels required when called:    4
 17901 ;; This function calls:
 17902 ;;		Nothing
 17903 ;; This function is called by:
 17904 ;;		_TM1650_fastPrintNum
 17905 ;;		_BEAT_task
 17906 ;; This function uses a non-reentrant model
 17907 ;;
 17908                           
 17909                           
 17910                           ;psect for function ___lwdiv
 17911  0D82                     ___lwdiv:	
 17912                           
 17913                           ;incstack = 0
 17914                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 17915  0D82  0140               	movlb	0	; select bank0
 17916  0D83  01A5               	clrf	___lwdiv@quotient
 17917  0D84  01A6               	clrf	___lwdiv@quotient+1
 17918  0D85  0820               	movf	___lwdiv@divisor,w
 17919  0D86  0421               	iorwf	___lwdiv@divisor+1,w
 17920  0D87  1903               	btfsc	3,2
 17921  0D88  2DB2               	goto	l3642
 17922  0D89  01A7               	clrf	___lwdiv@counter
 17923  0D8A  0AA7               	incf	___lwdiv@counter,f
 17924  0D8B                     l3630:	
 17925  0D8B  1BA1               	btfsc	___lwdiv@divisor+1,7
 17926  0D8C  2D97               	goto	l3632
 17927  0D8D  3001               	movlw	1
 17928  0D8E                     u2025:	
 17929  0D8E  35A0               	lslf	___lwdiv@divisor,f
 17930  0D8F  0DA1               	rlf	___lwdiv@divisor+1,f
 17931  0D90  0B89               	decfsz	9,f
 17932  0D91  2D8E               	goto	u2025
 17933  0D92  3001               	movlw	1
 17934  0D93  00A4               	movwf	??___lwdiv
 17935  0D94  0824               	movf	??___lwdiv,w
 17936  0D95  07A7               	addwf	___lwdiv@counter,f
 17937  0D96  2D8B               	goto	l3630
 17938  0D97                     l3632:	
 17939  0D97  3001               	movlw	1
 17940  0D98                     u2045:	
 17941  0D98  35A5               	lslf	___lwdiv@quotient,f
 17942  0D99  0DA6               	rlf	___lwdiv@quotient+1,f
 17943  0D9A  0B89               	decfsz	9,f
 17944  0D9B  2D98               	goto	u2045
 17945  0D9C  0821               	movf	___lwdiv@divisor+1,w
 17946  0D9D  0223               	subwf	___lwdiv@dividend+1,w
 17947  0D9E  1D03               	skipz
 17948  0D9F  2DA2               	goto	u2055
 17949  0DA0  0820               	movf	___lwdiv@divisor,w
 17950  0DA1  0222               	subwf	___lwdiv@dividend,w
 17951  0DA2                     u2055:	
 17952  0DA2  1C03               	skipc
 17953  0DA3  2DA9               	goto	l3638
 17954  0DA4  0820               	movf	___lwdiv@divisor,w
 17955  0DA5  02A2               	subwf	___lwdiv@dividend,f
 17956  0DA6  0821               	movf	___lwdiv@divisor+1,w
 17957  0DA7  3BA3               	subwfb	___lwdiv@dividend+1,f
 17958  0DA8  1425               	bsf	___lwdiv@quotient,0
 17959  0DA9                     l3638:	
 17960  0DA9  3001               	movlw	1
 17961  0DAA                     u2065:	
 17962  0DAA  36A1               	lsrf	___lwdiv@divisor+1,f
 17963  0DAB  0CA0               	rrf	___lwdiv@divisor,f
 17964  0DAC  0B89               	decfsz	9,f
 17965  0DAD  2DAA               	goto	u2065
 17966  0DAE  3001               	movlw	1
 17967  0DAF  02A7               	subwf	___lwdiv@counter,f
 17968  0DB0  1D03               	btfss	3,2
 17969  0DB1  2D97               	goto	l3632
 17970  0DB2                     l3642:	
 17971  0DB2  0826               	movf	___lwdiv@quotient+1,w
 17972  0DB3  00A1               	movwf	?___lwdiv+1
 17973  0DB4  0825               	movf	___lwdiv@quotient,w
 17974  0DB5  00A0               	movwf	?___lwdiv
 17975  0DB6  0008               	return
 17976  0DB7                     __end_of___lwdiv:	
 17977                           
 17978                           	psect	text58
 17979  0943                     __ptext58:	
 17980 ;; *************** function _CLOCK_getTime *****************
 17981 ;; Defined at:
 17982 ;;		line 16 in file "clock.c"
 17983 ;; Parameters:    Size  Location     Type
 17984 ;;		None
 17985 ;; Auto vars:     Size  Location     Type
 17986 ;;		None
 17987 ;; Return value:  Size  Location     Type
 17988 ;;                  2    0[BANK0 ] unsigned short 
 17989 ;; Registers used:
 17990 ;;		wreg
 17991 ;; Tracked objects:
 17992 ;;		On entry : 0/0
 17993 ;;		On exit  : 0/0
 17994 ;;		Unchanged: 0/0
 17995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18000 ;;Total ram usage:        2 bytes
 18001 ;; Hardware stack levels used:    1
 18002 ;; Hardware stack levels required when called:    4
 18003 ;; This function calls:
 18004 ;;		Nothing
 18005 ;; This function is called by:
 18006 ;;		_main
 18007 ;;		_BUTTONS_task
 18008 ;;		_CONTROLLER_task
 18009 ;;		_BEAT_task
 18010 ;;		_LED_task
 18011 ;; This function uses a non-reentrant model
 18012 ;;
 18013                           
 18014                           
 18015                           ;psect for function _CLOCK_getTime
 18016  0943                     _CLOCK_getTime:	
 18017                           
 18018                           ;clock.c: 17:     return currentTime;
 18019                           
 18020                           ;incstack = 0
 18021                           ; Regs used in _CLOCK_getTime: [wreg]
 18022  0943  0141               	movlb	1	; select bank1
 18023  0944  0834               	movf	(_currentTime+1)^(0+128),w
 18024  0945  0140               	movlb	0	; select bank0
 18025  0946  00A1               	movwf	?_CLOCK_getTime+1
 18026  0947  0141               	movlb	1	; select bank1
 18027  0948  0833               	movf	_currentTime^(0+128),w
 18028  0949  0140               	movlb	0	; select bank0
 18029  094A  00A0               	movwf	?_CLOCK_getTime
 18030  094B  0008               	return
 18031  094C                     __end_of_CLOCK_getTime:	
 18032                           
 18033                           	psect	text59
 18034  0AB3                     __ptext59:	
 18035 ;; *************** function _BEAT_init *****************
 18036 ;; Defined at:
 18037 ;;		line 39 in file "beat.c"
 18038 ;; Parameters:    Size  Location     Type
 18039 ;;		None
 18040 ;; Auto vars:     Size  Location     Type
 18041 ;;		None
 18042 ;; Return value:  Size  Location     Type
 18043 ;;                  1    wreg      void 
 18044 ;; Registers used:
 18045 ;;		wreg, status,2, status,0, pclath, cstack
 18046 ;; Tracked objects:
 18047 ;;		On entry : 0/0
 18048 ;;		On exit  : 0/0
 18049 ;;		Unchanged: 0/0
 18050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18055 ;;Total ram usage:        0 bytes
 18056 ;; Hardware stack levels used:    1
 18057 ;; Hardware stack levels required when called:    5
 18058 ;; This function calls:
 18059 ;;		_ADCC_SetADTIInterruptHandler
 18060 ;;		_ADCC_SetUpperThreshold
 18061 ;;		_ADCC_StartConversion
 18062 ;; This function is called by:
 18063 ;;		_main
 18064 ;; This function uses a non-reentrant model
 18065 ;;
 18066                           
 18067                           
 18068                           ;psect for function _BEAT_init
 18069  0AB3                     _BEAT_init:	
 18070                           
 18071                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 18072                           
 18073                           ;incstack = 0
 18074                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 18075  0AB3  0141               	movlb	1	; select bank1
 18076  0AB4  0867               	movf	(_threshold+1)^(0+128),w
 18077  0AB5  0140               	movlb	0	; select bank0
 18078  0AB6  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 18079  0AB7  0141               	movlb	1	; select bank1
 18080  0AB8  0866               	movf	_threshold^(0+128),w
 18081  0AB9  0140               	movlb	0	; select bank0
 18082  0ABA  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 18083  0ABB  3189  2131  318A   	fcall	_ADCC_SetUpperThreshold
 18084                           
 18085                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 18086  0ABE  300B               	movlw	low _adcThresholdHandler
 18087  0ABF  0140               	movlb	0	; select bank0
 18088  0AC0  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 18089  0AC1  3009               	movlw	high _adcThresholdHandler
 18090  0AC2  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 18091  0AC3  3189  2128  318A   	fcall	_ADCC_SetADTIInterruptHandler
 18092                           
 18093                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 18094  0AC6  300F               	movlw	15
 18095  0AC7  3189  213A         	fcall	_ADCC_StartConversion
 18096  0AC9  0008               	return
 18097  0ACA                     __end_of_BEAT_init:	
 18098                           
 18099                           	psect	text60
 18100  093A                     __ptext60:	
 18101 ;; *************** function _ADCC_StartConversion *****************
 18102 ;; Defined at:
 18103 ;;		line 121 in file "mcc_generated_files/adcc.c"
 18104 ;; Parameters:    Size  Location     Type
 18105 ;;  channel         1    wreg     enum E10867
 18106 ;; Auto vars:     Size  Location     Type
 18107 ;;  channel         1    0[BANK0 ] enum E10867
 18108 ;; Return value:  Size  Location     Type
 18109 ;;                  1    wreg      void 
 18110 ;; Registers used:
 18111 ;;		wreg
 18112 ;; Tracked objects:
 18113 ;;		On entry : 0/0
 18114 ;;		On exit  : 0/0
 18115 ;;		Unchanged: 0/0
 18116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18118 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18120 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18121 ;;Total ram usage:        1 bytes
 18122 ;; Hardware stack levels used:    1
 18123 ;; Hardware stack levels required when called:    4
 18124 ;; This function calls:
 18125 ;;		Nothing
 18126 ;; This function is called by:
 18127 ;;		_BEAT_init
 18128 ;; This function uses a non-reentrant model
 18129 ;;
 18130                           
 18131                           
 18132                           ;psect for function _ADCC_StartConversion
 18133  093A                     _ADCC_StartConversion:	
 18134                           
 18135                           ;incstack = 0
 18136                           ; Regs used in _ADCC_StartConversion: [wreg]
 18137                           ;ADCC_StartConversion@channel stored from wreg
 18138  093A  0140               	movlb	0	; select bank0
 18139  093B  00A0               	movwf	ADCC_StartConversion@channel
 18140                           
 18141                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 18142  093C  0820               	movf	ADCC_StartConversion@channel,w
 18143  093D  0141               	movlb	1	; select bank1
 18144  093E  009F               	movwf	31	;volatile
 18145                           
 18146                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 18147  093F  0142               	movlb	2	; select bank2
 18148  0940  1791               	bsf	17,7	;volatile
 18149                           
 18150                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 18151  0941  1411               	bsf	17,0	;volatile
 18152  0942  0008               	return
 18153  0943                     __end_of_ADCC_StartConversion:	
 18154                           
 18155                           	psect	text61
 18156  0931                     __ptext61:	
 18157 ;; *************** function _ADCC_SetUpperThreshold *****************
 18158 ;; Defined at:
 18159 ;;		line 251 in file "mcc_generated_files/adcc.c"
 18160 ;; Parameters:    Size  Location     Type
 18161 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 18162 ;; Auto vars:     Size  Location     Type
 18163 ;;		None
 18164 ;; Return value:  Size  Location     Type
 18165 ;;                  1    wreg      void 
 18166 ;; Registers used:
 18167 ;;		wreg, status,2
 18168 ;; Tracked objects:
 18169 ;;		On entry : 0/0
 18170 ;;		On exit  : 0/0
 18171 ;;		Unchanged: 0/0
 18172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18177 ;;Total ram usage:        2 bytes
 18178 ;; Hardware stack levels used:    1
 18179 ;; Hardware stack levels required when called:    4
 18180 ;; This function calls:
 18181 ;;		Nothing
 18182 ;; This function is called by:
 18183 ;;		_BEAT_init
 18184 ;;		_BEAT_task
 18185 ;; This function uses a non-reentrant model
 18186 ;;
 18187                           
 18188                           
 18189                           ;psect for function _ADCC_SetUpperThreshold
 18190  0931                     _ADCC_SetUpperThreshold:	
 18191                           
 18192                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 18193                           
 18194                           ;incstack = 0
 18195                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 18196  0931  0140               	movlb	0	; select bank0
 18197  0932  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 18198  0933  0141               	movlb	1	; select bank1
 18199  0934  008F               	movwf	15	;volatile
 18200                           
 18201                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 18202  0935  0140               	movlb	0	; select bank0
 18203  0936  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 18204  0937  0141               	movlb	1	; select bank1
 18205  0938  008E               	movwf	14	;volatile
 18206  0939  0008               	return
 18207  093A                     __end_of_ADCC_SetUpperThreshold:	
 18208                           
 18209                           	psect	text62
 18210  0928                     __ptext62:	
 18211 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 18212 ;; Defined at:
 18213 ;;		line 317 in file "mcc_generated_files/adcc.c"
 18214 ;; Parameters:    Size  Location     Type
 18215 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 18216 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 18217 ;; Auto vars:     Size  Location     Type
 18218 ;;		None
 18219 ;; Return value:  Size  Location     Type
 18220 ;;                  1    wreg      void 
 18221 ;; Registers used:
 18222 ;;		wreg
 18223 ;; Tracked objects:
 18224 ;;		On entry : 0/0
 18225 ;;		On exit  : 0/0
 18226 ;;		Unchanged: 0/0
 18227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18232 ;;Total ram usage:        2 bytes
 18233 ;; Hardware stack levels used:    1
 18234 ;; Hardware stack levels required when called:    4
 18235 ;; This function calls:
 18236 ;;		Nothing
 18237 ;; This function is called by:
 18238 ;;		_ADCC_Initialize
 18239 ;;		_BEAT_init
 18240 ;; This function uses a non-reentrant model
 18241 ;;
 18242                           
 18243                           
 18244                           ;psect for function _ADCC_SetADTIInterruptHandler
 18245  0928                     _ADCC_SetADTIInterruptHandler:	
 18246                           
 18247                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 18248                           
 18249                           ;incstack = 0
 18250                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 18251  0928  0140               	movlb	0	; select bank0
 18252  0929  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 18253  092A  0142               	movlb	2	; select bank2
 18254  092B  00E3               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 18255  092C  0140               	movlb	0	; select bank0
 18256  092D  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 18257  092E  0142               	movlb	2	; select bank2
 18258  092F  00E2               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 18259  0930  0008               	return
 18260  0931                     __end_of_ADCC_SetADTIInterruptHandler:	
 18261                           
 18262                           	psect	intentry
 18263  0004                     __pintentry:	
 18264 ;; *************** function _INTERRUPT_InterruptManager *****************
 18265 ;; Defined at:
 18266 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18267 ;; Parameters:    Size  Location     Type
 18268 ;;		None
 18269 ;; Auto vars:     Size  Location     Type
 18270 ;;		None
 18271 ;; Return value:  Size  Location     Type
 18272 ;;                  1    wreg      void 
 18273 ;; Registers used:
 18274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18275 ;; Tracked objects:
 18276 ;;		On entry : 0/0
 18277 ;;		On exit  : 0/0
 18278 ;;		Unchanged: 0/0
 18279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18284 ;;Total ram usage:        0 bytes
 18285 ;; Hardware stack levels used:    1
 18286 ;; Hardware stack levels required when called:    3
 18287 ;; This function calls:
 18288 ;;		Absolute function
 18289 ;;		_ADCC_ThresholdISR
 18290 ;;		_DMX_interrupt
 18291 ;;		_EUSART1_Receive_ISR
 18292 ;;		_I2C1_BusCollisionISR
 18293 ;;		_I2C1_ISR
 18294 ;;		_TMR0_ISR
 18295 ;; This function is called by:
 18296 ;;		Interrupt level 1
 18297 ;; This function uses a non-reentrant model
 18298 ;;
 18299                           
 18300  0004                     _INTERRUPT_InterruptManager:	
 18301                           
 18302                           ;incstack = 0
 18303 ;; hardware stack exceeded
 18304  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18305                           
 18306                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18307  0005  3180               	pagesel	$
 18308                           
 18309                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 18310  0006  014E               	movlb	14	; select bank14
 18311  0007  1A96               	btfsc	22,5	;volatile
 18312  0008  1E8C               	btfss	12,5	;volatile
 18313  0009  280E               	goto	i1l429
 18314                           
 18315                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 18316  000A  3189  21F1  3180   	fcall	_TMR0_ISR
 18317                           
 18318                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 18319  000D  282E               	goto	i1l441
 18320  000E                     i1l429:	
 18321                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 18322                           
 18323  000E  1F0B               	btfss	11,6	;volatile
 18324  000F  282E               	goto	i1l441
 18325                           
 18326                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 18327  0010  1899               	btfsc	25,1	;volatile
 18328  0011  1C8F               	btfss	15,1	;volatile
 18329  0012  2817               	goto	i1l432
 18330                           
 18331                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 18332  0013  3189  2108  3180   	fcall	_I2C1_BusCollisionISR
 18333                           
 18334                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 18335  0016  282E               	goto	i1l441
 18336  0017                     i1l432:	
 18337                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 18338                           
 18339  0017  1819               	btfsc	25,0	;volatile
 18340  0018  1C0F               	btfss	15,0	;volatile
 18341  0019  281E               	goto	i1l434
 18342                           
 18343                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 18344  001A  3181  21E3  3180   	fcall	_I2C1_ISR
 18345                           
 18346                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 18347  001D  282E               	goto	i1l441
 18348  001E                     i1l434:	
 18349                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 18350                           
 18351  001E  1897               	btfsc	23,1	;volatile
 18352  001F  1C8D               	btfss	13,1	;volatile
 18353  0020  2825               	goto	i1l436
 18354                           
 18355                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 18356  0021  3189  21E4  3180   	fcall	_ADCC_ThresholdISR
 18357                           
 18358                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 18359  0024  282E               	goto	i1l441
 18360  0025                     i1l436:	
 18361                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 18362                           
 18363  0025  1A99               	btfsc	25,5	;volatile
 18364  0026  1E8F               	btfss	15,5	;volatile
 18365  0027  282E               	goto	i1l441
 18366                           
 18367                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 18368  0028  0142               	movlb	2	; select bank2
 18369  0029  086D               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 18370  002A  008A               	movwf	10
 18371  002B  086C               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 18372  002C  000A               	callw
 18373  002D  3180               	pagesel	$
 18374  002E                     i1l441:	
 18375                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 18376                           
 18377  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18378  002F  0009               	retfie
 18379  0030                     __end_of_INTERRUPT_InterruptManager:	
 18380                           
 18381                           	psect	text64
 18382  09F1                     __ptext64:	
 18383 ;; *************** function _TMR0_ISR *****************
 18384 ;; Defined at:
 18385 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;		None
 18388 ;; Auto vars:     Size  Location     Type
 18389 ;;		None
 18390 ;; Return value:  Size  Location     Type
 18391 ;;                  1    wreg      void 
 18392 ;; Registers used:
 18393 ;;		wreg, status,2, status,0, pclath, cstack
 18394 ;; Tracked objects:
 18395 ;;		On entry : 0/0
 18396 ;;		On exit  : 0/0
 18397 ;;		Unchanged: 0/0
 18398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18403 ;;Total ram usage:        0 bytes
 18404 ;; Hardware stack levels used:    1
 18405 ;; Hardware stack levels required when called:    1
 18406 ;; This function calls:
 18407 ;;		Absolute function
 18408 ;;		_CLOCK_timerCallback
 18409 ;;		_TMR0_DefaultInterruptHandler
 18410 ;; This function is called by:
 18411 ;;		_INTERRUPT_InterruptManager
 18412 ;; This function uses a non-reentrant model
 18413 ;;
 18414                           
 18415                           
 18416                           ;psect for function _TMR0_ISR
 18417  09F1                     _TMR0_ISR:	
 18418                           
 18419                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 18420                           
 18421                           ;incstack = 0
 18422 ;; hardware stack exceeded
 18423                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 18424  09F1  014E               	movlb	14	; select bank14
 18425  09F2  128C               	bcf	12,5	;volatile
 18426                           
 18427                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 18428  09F3  0142               	movlb	2	; select bank2
 18429  09F4  0864               	movf	_TMR0_InterruptHandler^(0+256),w
 18430  09F5  0465               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 18431  09F6  1903               	btfsc	3,2
 18432  09F7  0008               	return
 18433                           
 18434                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 18435  09F8  0865               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 18436  09F9  008A               	movwf	10
 18437  09FA  0864               	movf	_TMR0_InterruptHandler^(0+256),w
 18438  09FB  000A               	callw
 18439  09FC  3189               	pagesel	$
 18440  09FD  0008               	return
 18441  09FE                     __end_of_TMR0_ISR:	
 18442                           
 18443                           	psect	text65
 18444  07F9                     __ptext65:	
 18445 ;; *************** function _CLOCK_timerCallback *****************
 18446 ;; Defined at:
 18447 ;;		line 20 in file "clock.c"
 18448 ;; Parameters:    Size  Location     Type
 18449 ;;		None
 18450 ;; Auto vars:     Size  Location     Type
 18451 ;;		None
 18452 ;; Return value:  Size  Location     Type
 18453 ;;                  1    wreg      void 
 18454 ;; Registers used:
 18455 ;;		wreg
 18456 ;; Tracked objects:
 18457 ;;		On entry : 0/0
 18458 ;;		On exit  : 0/0
 18459 ;;		Unchanged: 0/0
 18460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18465 ;;Total ram usage:        0 bytes
 18466 ;; Hardware stack levels used:    1
 18467 ;; This function calls:
 18468 ;;		Nothing
 18469 ;; This function is called by:
 18470 ;;		_CLOCK_init
 18471 ;;		_TMR0_ISR
 18472 ;; This function uses a non-reentrant model
 18473 ;;
 18474                           
 18475                           
 18476                           ;psect for function _CLOCK_timerCallback
 18477  07F9                     _CLOCK_timerCallback:	
 18478                           
 18479                           ;clock.c: 21:     currentTime++;
 18480                           
 18481                           ;incstack = 0
 18482 ;; hardware stack exceeded
 18483                           ; Regs used in _CLOCK_timerCallback: [wreg]
 18484  07F9  3001               	movlw	1
 18485  07FA  0141               	movlb	1	; select bank1
 18486  07FB  07B3               	addwf	_currentTime^(0+128),f
 18487  07FC  3000               	movlw	0
 18488  07FD  3DB4               	addwfc	(_currentTime+1)^(0+128),f
 18489  07FE  0008               	return
 18490  07FF                     __end_of_CLOCK_timerCallback:	
 18491                           
 18492                           	psect	text66
 18493  07FF                     __ptext66:	
 18494 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 18495 ;; Defined at:
 18496 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 18497 ;; Parameters:    Size  Location     Type
 18498 ;;		None
 18499 ;; Auto vars:     Size  Location     Type
 18500 ;;		None
 18501 ;; Return value:  Size  Location     Type
 18502 ;;                  1    wreg      void 
 18503 ;; Registers used:
 18504 ;;		None
 18505 ;; Tracked objects:
 18506 ;;		On entry : 0/0
 18507 ;;		On exit  : 0/0
 18508 ;;		Unchanged: 0/0
 18509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18514 ;;Total ram usage:        0 bytes
 18515 ;; Hardware stack levels used:    1
 18516 ;; This function calls:
 18517 ;;		Nothing
 18518 ;; This function is called by:
 18519 ;;		_TMR0_Initialize
 18520 ;;		_TMR0_ISR
 18521 ;; This function uses a non-reentrant model
 18522 ;;
 18523                           
 18524                           
 18525                           ;psect for function _TMR0_DefaultInterruptHandler
 18526  07FF                     _TMR0_DefaultInterruptHandler:	
 18527                           
 18528                           ;incstack = 0
 18529 ;; hardware stack exceeded
 18530                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 18531  07FF  0008               	return
 18532  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 18533                           
 18534                           	psect	text67
 18535  01E3                     __ptext67:	
 18536 ;; *************** function _I2C1_ISR *****************
 18537 ;; Defined at:
 18538 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 18539 ;; Parameters:    Size  Location     Type
 18540 ;;		None
 18541 ;; Auto vars:     Size  Location     Type
 18542 ;;		None
 18543 ;; Return value:  Size  Location     Type
 18544 ;;                  1    wreg      void 
 18545 ;; Registers used:
 18546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18547 ;; Tracked objects:
 18548 ;;		On entry : 0/0
 18549 ;;		On exit  : 0/0
 18550 ;;		Unchanged: 0/0
 18551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18556 ;;Total ram usage:        4 bytes
 18557 ;; Hardware stack levels used:    1
 18558 ;; Hardware stack levels required when called:    1
 18559 ;; This function calls:
 18560 ;;		_I2C1_FunctionComplete
 18561 ;;		_I2C1_Stop
 18562 ;; This function is called by:
 18563 ;;		_INTERRUPT_InterruptManager
 18564 ;; This function uses a non-reentrant model
 18565 ;;
 18566                           
 18567                           
 18568                           ;psect for function _I2C1_ISR
 18569  01E3                     _I2C1_ISR:	
 18570                           
 18571                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 18572                           
 18573                           ;incstack = 0
 18574 ;; hardware stack exceeded
 18575                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18576  01E3  014E               	movlb	14	; select bank14
 18577  01E4  100F               	bcf	15,0	;volatile
 18578                           
 18579                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 18580  01E5  0143               	movlb	3	; select bank3
 18581  01E6  1F90               	btfss	16,7	;volatile
 18582  01E7  2B04               	goto	i1l4254
 18583                           
 18584                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 18585  01E8  1390               	bcf	16,7	;volatile
 18586                           
 18587                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 18588  01E9  0141               	movlb	1	; select bank1
 18589  01EA  01CC               	clrf	_i2c1_state^(0+128)
 18590                           
 18591                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 18592  01EB  0872               	movf	_p_i2c1_current,w
 18593  01EC  3E02               	addlw	2
 18594  01ED  0086               	movwf	6
 18595  01EE  0187               	clrf	7
 18596  01EF  0801               	movf	1,w
 18597  01F0  0086               	movwf	6
 18598  01F1  0187               	clrf	7
 18599  01F2  0181               	clrf	1
 18600  01F3  0A81               	incf	1,f
 18601                           
 18602                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 18603  01F4  01F2               	clrf	_p_i2c1_current
 18604  01F5  0008               	return
 18605  01F6                     i1l549:	
 18606                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 18607                           
 18608                           
 18609                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 18610  01F6  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 18611  01F7  0008               	return
 18612                           
 18613                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 18614  01F8  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18615  01F9  00F9               	movwf	??_I2C1_ISR
 18616  01FA  0879               	movf	??_I2C1_ISR,w
 18617  01FB  00F2               	movwf	_p_i2c1_current
 18618                           
 18619                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 18620  01FC  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18621  01FD  0086               	movwf	6
 18622  01FE  0187               	clrf	7
 18623  01FF  0801               	movf	1,w
 18624  0200  00F9               	movwf	??_I2C1_ISR
 18625  0201  0879               	movf	??_I2C1_ISR,w
 18626  0202  00CB               	movwf	_i2c1_trb_count^(0+128)
 18627                           
 18628                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 18629  0203  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18630  0204  0086               	movwf	6
 18631  0205  0187               	clrf	7
 18632  0206  3F41               	moviw [1]fsr1
 18633  0207  00F3               	movwf	_p_i2c1_trb_current
 18634                           
 18635                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 18636  0208  3003               	movlw	3
 18637  0209  00F9               	movwf	??_I2C1_ISR
 18638  020A  0879               	movf	??_I2C1_ISR,w
 18639  020B  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 18640                           
 18641                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 18642  020C  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18643  020D  3AD2               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 18644  020E  1D03               	skipz
 18645  020F  2A14               	goto	i1l4142
 18646                           
 18647                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 18648  0210  30CF               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 18649  0211  00F9               	movwf	??_I2C1_ISR
 18650  0212  0879               	movf	??_I2C1_ISR,w
 18651  0213  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 18652  0214                     i1l4142:	
 18653                           
 18654                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 18655  0214  1022               	bcf	(_i2c1_object^(0+128)+2),0
 18656                           
 18657                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 18658  0215  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18659  0216  0620               	xorwf	_i2c1_object^(0+128),w
 18660  0217  1903               	btfsc	3,2
 18661                           
 18662                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 18663  0218  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 18664                           
 18665                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 18666                           
 18667                           ;mcc_generated_files/i2c1.c: 290:                 }
 18668  0219  0143               	movlb	3	; select bank3
 18669  021A  1411               	bsf	17,0	;volatile
 18670  021B                     i1l4146:	
 18671                           
 18672                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 18673  021B  3002               	movlw	2
 18674  021C  00F9               	movwf	??_I2C1_ISR
 18675  021D  0879               	movf	??_I2C1_ISR,w
 18676  021E  0141               	movlb	1	; select bank1
 18677  021F  00CC               	movwf	_i2c1_state^(0+128)
 18678  0220  0008               	return
 18679  0221                     i1l554:	
 18680                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 18681                           
 18682  0221  2AAD               	goto	i1l575
 18683  0222                     i1l555:	
 18684                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 18685                           
 18686                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 18687                           
 18688                           
 18689                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 18690  0222  0143               	movlb	3	; select bank3
 18691  0223  1F11               	btfss	17,6	;volatile
 18692  0224  2A2E               	goto	i1l4154
 18693                           
 18694                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 18695  0225  3001               	movlw	1
 18696  0226  00F9               	movwf	??_I2C1_ISR
 18697  0227  0879               	movf	??_I2C1_ISR,w
 18698  0228  0141               	movlb	1	; select bank1
 18699  0229  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 18700                           
 18701                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18702  022A  3004               	movlw	4
 18703  022B  318A  22CA         	fcall	_I2C1_Stop
 18704                           
 18705                           ;mcc_generated_files/i2c1.c: 319:             }
 18706  022D  0008               	return
 18707  022E                     i1l4154:	
 18708                           
 18709                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 18710  022E  0876               	movf	I2C1_ISR@i2c_address+1,w
 18711  022F  00FA               	movwf	??_I2C1_ISR+1
 18712  0230  0875               	movf	I2C1_ISR@i2c_address,w
 18713  0231  00F9               	movwf	??_I2C1_ISR
 18714  0232  36FA               	lsrf	??_I2C1_ISR+1,f
 18715  0233  0CF9               	rrf	??_I2C1_ISR,f
 18716  0234  0879               	movf	??_I2C1_ISR,w
 18717  0235  008C               	movwf	12	;volatile
 18718                           
 18719                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 18720  0236  1C75               	btfss	I2C1_ISR@i2c_address,0
 18721  0237  2A3E               	goto	i1l4160
 18722                           
 18723                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 18724  0238  300B               	movlw	11
 18725  0239  00F9               	movwf	??_I2C1_ISR
 18726  023A  0879               	movf	??_I2C1_ISR,w
 18727  023B  0141               	movlb	1	; select bank1
 18728  023C  00CC               	movwf	_i2c1_state^(0+128)
 18729                           
 18730                           ;mcc_generated_files/i2c1.c: 331:                 }
 18731  023D  0008               	return
 18732  023E                     i1l4160:	
 18733                           
 18734                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 18735  023E  3003               	movlw	3
 18736  023F  00F9               	movwf	??_I2C1_ISR
 18737  0240  0879               	movf	??_I2C1_ISR,w
 18738  0241  0141               	movlb	1	; select bank1
 18739  0242  00CC               	movwf	_i2c1_state^(0+128)
 18740  0243  0008               	return
 18741  0244                     i1l560:	
 18742                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 18743                           
 18744                           
 18745                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 18746  0244  0143               	movlb	3	; select bank3
 18747  0245  1F11               	btfss	17,6	;volatile
 18748  0246  2A50               	goto	i1l561
 18749                           
 18750                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 18751  0247  3001               	movlw	1
 18752  0248  00F9               	movwf	??_I2C1_ISR
 18753  0249  0879               	movf	??_I2C1_ISR,w
 18754  024A  0141               	movlb	1	; select bank1
 18755  024B  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 18756                           
 18757                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18758  024C  3004               	movlw	4
 18759  024D  318A  22CA         	fcall	_I2C1_Stop
 18760                           
 18761                           ;mcc_generated_files/i2c1.c: 347:             }
 18762  024F  0008               	return
 18763  0250                     i1l561:	
 18764                           ;mcc_generated_files/i2c1.c: 348:             else
 18765                           
 18766                           
 18767                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 18768  0250  1491               	bsf	17,1	;volatile
 18769                           
 18770                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 18771  0251  0876               	movf	I2C1_ISR@i2c_address+1,w
 18772  0252  00FA               	movwf	??_I2C1_ISR+1
 18773  0253  0875               	movf	I2C1_ISR@i2c_address,w
 18774  0254  00F9               	movwf	??_I2C1_ISR
 18775  0255  087A               	movf	??_I2C1_ISR+1,w
 18776  0256  00F9               	movwf	??_I2C1_ISR
 18777  0257  01FA               	clrf	??_I2C1_ISR+1
 18778  0258  3006               	movlw	6
 18779  0259  0579               	andwf	??_I2C1_ISR,w
 18780  025A  00FB               	movwf	??_I2C1_ISR+2
 18781  025B  3000               	movlw	0
 18782  025C  057A               	andwf	??_I2C1_ISR+1,w
 18783  025D  00FC               	movwf	??_I2C1_ISR+3
 18784  025E  30F0               	movlw	240
 18785  025F  047B               	iorwf	??_I2C1_ISR+2,w
 18786  0260  00F5               	movwf	I2C1_ISR@i2c_address
 18787  0261  3000               	movlw	0
 18788  0262  047C               	iorwf	??_I2C1_ISR+3,w
 18789  0263  00F6               	movwf	I2C1_ISR@i2c_address+1
 18790                           
 18791                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 18792  0264  1475               	bsf	I2C1_ISR@i2c_address,0
 18793                           
 18794                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 18795  0265  0141               	movlb	1	; select bank1
 18796  0266  01C8               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 18797  0267  0AC8               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 18798  0268  2A1B               	goto	i1l4146
 18799  0269                     i1l4174:	
 18800                           
 18801                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 18802  0269  0348               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 18803  026A  1903               	btfsc	3,2
 18804  026B  2A82               	goto	i1l4194
 18805                           
 18806                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 18807  026C  0873               	movf	_p_i2c1_trb_current,w
 18808  026D  0086               	movwf	6
 18809  026E  3001               	movlw	1	; select bank2/3
 18810  026F  0087               	movwf	7
 18811  0270  3F40               	moviw [0]fsr1
 18812  0271  00F5               	movwf	I2C1_ISR@i2c_address
 18813  0272  3F41               	moviw [1]fsr1
 18814  0273  00F6               	movwf	I2C1_ISR@i2c_address+1
 18815                           
 18816                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 18817  0274  0873               	movf	_p_i2c1_trb_current,w
 18818  0275  0086               	movwf	6
 18819  0276  3001               	movlw	1	; select bank2/3
 18820  0277  0087               	movwf	7
 18821  0278  3001               	movlw	1	; select bank2/3
 18822  0279  3F43               	moviw [3]fsr1
 18823  027A  00CA               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 18824                           
 18825                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 18826  027B  0873               	movf	_p_i2c1_trb_current,w
 18827  027C  0086               	movwf	6
 18828  027D  3001               	movlw	1	; select bank2/3
 18829  027E  0087               	movwf	7
 18830  027F  3001               	movlw	1	; select bank2/3
 18831  0280  3F42               	moviw [2]fsr1
 18832  0281  00C9               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 18833  0282                     i1l4194:	
 18834                           
 18835                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 18836  0282  0875               	movf	I2C1_ISR@i2c_address,w
 18837  0283  0143               	movlb	3	; select bank3
 18838  0284  008C               	movwf	12	;volatile
 18839                           
 18840                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 18841  0285  1C75               	btfss	I2C1_ISR@i2c_address,0
 18842  0286  2A3E               	goto	i1l4160
 18843                           
 18844                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 18845  0287  3005               	movlw	5
 18846  0288  00F9               	movwf	??_I2C1_ISR
 18847  0289  0879               	movf	??_I2C1_ISR,w
 18848  028A  0141               	movlb	1	; select bank1
 18849  028B  00CC               	movwf	_i2c1_state^(0+128)
 18850                           
 18851                           ;mcc_generated_files/i2c1.c: 419:                 }
 18852  028C  0008               	return
 18853  028D                     i1l571:	
 18854                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 18855                           
 18856                           
 18857                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 18858  028D  0143               	movlb	3	; select bank3
 18859  028E  1F11               	btfss	17,6	;volatile
 18860  028F  2A9B               	goto	i1l4208
 18861                           
 18862                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 18863  0290  3001               	movlw	1
 18864  0291  00F9               	movwf	??_I2C1_ISR
 18865  0292  0879               	movf	??_I2C1_ISR,w
 18866  0293  0141               	movlb	1	; select bank1
 18867  0294  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 18868                           
 18869                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 18870  0295  0143               	movlb	3	; select bank3
 18871  0296  1311               	bcf	17,6	;volatile
 18872                           
 18873                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 18874  0297  3005               	movlw	5
 18875  0298  318A  22CA         	fcall	_I2C1_Stop
 18876                           
 18877                           ;mcc_generated_files/i2c1.c: 442:             }
 18878  029A  0008               	return
 18879  029B                     i1l4208:	
 18880                           
 18881                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 18882  029B  3001               	movlw	1
 18883  029C  0141               	movlb	1	; select bank1
 18884  029D  02C9               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 18885  029E  0A49               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 18886  029F  1D03               	btfss	3,2
 18887  02A0  2AB0               	goto	i1l4216
 18888                           
 18889                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 18890  02A1  3004               	movlw	4
 18891  02A2  00F9               	movwf	??_I2C1_ISR
 18892  02A3  0879               	movf	??_I2C1_ISR,w
 18893  02A4  07F3               	addwf	_p_i2c1_trb_current,f
 18894                           
 18895                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 18896  02A5  3001               	movlw	1
 18897  02A6  02CB               	subwf	_i2c1_trb_count^(0+128),f
 18898  02A7  1D03               	btfss	3,2
 18899  02A8  2AAD               	goto	i1l575
 18900                           
 18901                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18902  02A9  3000               	movlw	0
 18903  02AA  318A  22CA         	fcall	_I2C1_Stop
 18904                           
 18905                           ;mcc_generated_files/i2c1.c: 457:                     }
 18906  02AC  0008               	return
 18907  02AD                     i1l575:	
 18908                           ;mcc_generated_files/i2c1.c: 458:                     else
 18909                           
 18910                           
 18911                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 18912  02AD  0143               	movlb	3	; select bank3
 18913  02AE  1491               	bsf	17,1	;volatile
 18914  02AF  2A1B               	goto	i1l4146
 18915  02B0                     i1l4216:	
 18916                           
 18917                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 18918  02B0  084A               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 18919  02B1  0086               	movwf	6
 18920  02B2  0187               	clrf	7
 18921  02B3  0801               	movf	1,w
 18922  02B4  0143               	movlb	3	; select bank3
 18923  02B5  008C               	movwf	12	;volatile
 18924  02B6  3001               	movlw	1
 18925  02B7  00F9               	movwf	??_I2C1_ISR
 18926  02B8  0879               	movf	??_I2C1_ISR,w
 18927  02B9  0141               	movlb	1	; select bank1
 18928  02BA  07CA               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 18929  02BB  0008               	return
 18930  02BC                     i1l578:	
 18931                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 18932                           
 18933                           
 18934                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 18935  02BC  0143               	movlb	3	; select bank3
 18936  02BD  1F11               	btfss	17,6	;volatile
 18937  02BE  2ACA               	goto	i1l579
 18938                           
 18939                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 18940  02BF  3001               	movlw	1
 18941  02C0  00F9               	movwf	??_I2C1_ISR
 18942  02C1  0879               	movf	??_I2C1_ISR,w
 18943  02C2  0141               	movlb	1	; select bank1
 18944  02C3  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 18945                           
 18946                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18947  02C4  3004               	movlw	4
 18948  02C5  318A  22CA         	fcall	_I2C1_Stop
 18949                           
 18950                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 18951  02C7  0143               	movlb	3	; select bank3
 18952  02C8  1311               	bcf	17,6	;volatile
 18953                           
 18954                           ;mcc_generated_files/i2c1.c: 495:             }
 18955  02C9  0008               	return
 18956  02CA                     i1l579:	
 18957                           ;mcc_generated_files/i2c1.c: 496:             else
 18958                           
 18959                           
 18960                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 18961  02CA  1591               	bsf	17,3	;volatile
 18962                           
 18963                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 18964  02CB  3008               	movlw	8
 18965  02CC  00F9               	movwf	??_I2C1_ISR
 18966  02CD  0879               	movf	??_I2C1_ISR,w
 18967  02CE  0141               	movlb	1	; select bank1
 18968  02CF  00CC               	movwf	_i2c1_state^(0+128)
 18969  02D0  0008               	return
 18970  02D1                     i1l4228:	
 18971                           
 18972                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 18973  02D1  3008               	movlw	8
 18974  02D2  00F9               	movwf	??_I2C1_ISR
 18975  02D3  0879               	movf	??_I2C1_ISR,w
 18976  02D4  00CC               	movwf	_i2c1_state^(0+128)
 18977                           
 18978                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 18979  02D5  0143               	movlb	3	; select bank3
 18980  02D6  1591               	bsf	17,3	;volatile
 18981                           
 18982                           ;mcc_generated_files/i2c1.c: 513:             break;
 18983  02D7  0008               	return
 18984  02D8                     i1l4232:	
 18985                           
 18986                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 18987  02D8  0143               	movlb	3	; select bank3
 18988  02D9  080C               	movf	12,w	;volatile
 18989  02DA  00F9               	movwf	??_I2C1_ISR
 18990  02DB  0141               	movlb	1	; select bank1
 18991  02DC  084A               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 18992  02DD  0086               	movwf	6
 18993  02DE  0187               	clrf	7
 18994  02DF  0879               	movf	??_I2C1_ISR,w
 18995  02E0  0081               	movwf	1
 18996  02E1  3001               	movlw	1
 18997  02E2  00F9               	movwf	??_I2C1_ISR
 18998  02E3  0879               	movf	??_I2C1_ISR,w
 18999  02E4  07CA               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 19000                           
 19001                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 19002  02E5  3001               	movlw	1
 19003  02E6  02C9               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 19004  02E7  1903               	btfsc	3,2
 19005  02E8  2AF1               	goto	i1l583
 19006                           
 19007                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 19008  02E9  0143               	movlb	3	; select bank3
 19009  02EA  1291               	bcf	17,5	;volatile
 19010                           
 19011                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 19012  02EB  3006               	movlw	6
 19013  02EC  00F9               	movwf	??_I2C1_ISR
 19014  02ED  0879               	movf	??_I2C1_ISR,w
 19015  02EE  0141               	movlb	1	; select bank1
 19016  02EF  00CC               	movwf	_i2c1_state^(0+128)
 19017                           
 19018                           ;mcc_generated_files/i2c1.c: 532:             }
 19019  02F0  2AF5               	goto	i1l4244
 19020  02F1                     i1l583:	
 19021                           ;mcc_generated_files/i2c1.c: 533:             else
 19022                           
 19023                           
 19024                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 19025  02F1  0143               	movlb	3	; select bank3
 19026  02F2  1691               	bsf	17,5	;volatile
 19027                           
 19028                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 19029  02F3  318A  2219         	fcall	_I2C1_FunctionComplete
 19030  02F5                     i1l4244:	
 19031                           
 19032                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 19033  02F5  0143               	movlb	3	; select bank3
 19034  02F6  1611               	bsf	17,4	;volatile
 19035                           
 19036                           ;mcc_generated_files/i2c1.c: 545:             break;
 19037  02F7  0008               	return
 19038  02F8                     i1l4246:	
 19039                           
 19040                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 19041  02F8  3000               	movlw	0
 19042  02F9  318A  22CA         	fcall	_I2C1_Stop
 19043                           
 19044                           ;mcc_generated_files/i2c1.c: 552:             break;
 19045  02FB  0008               	return
 19046  02FC                     i1l4248:	
 19047                           
 19048                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 19049  02FC  3001               	movlw	1
 19050  02FD  00F9               	movwf	??_I2C1_ISR
 19051  02FE  0879               	movf	??_I2C1_ISR,w
 19052  02FF  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 19053                           
 19054                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 19055  0300  3006               	movlw	6
 19056  0301  318A  22CA         	fcall	_I2C1_Stop
 19057                           
 19058                           ;mcc_generated_files/i2c1.c: 560:             break;
 19059  0303  0008               	return
 19060  0304                     i1l4254:	
 19061  0304  0141               	movlb	1	; select bank1
 19062  0305  084C               	movf	_i2c1_state^(0+128),w
 19063  0306  00F9               	movwf	??_I2C1_ISR
 19064  0307  01FA               	clrf	??_I2C1_ISR+1
 19065                           
 19066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19067                           ; Switch size 1, requested type "simple"
 19068                           ; Number of cases is 1, Range of values is 0 to 0
 19069                           ; switch strategies available:
 19070                           ; Name         Instructions Cycles
 19071                           ; simple_byte            4     3 (average)
 19072                           ; direct_byte            8     6 (fixed)
 19073                           ; jumptable            260     6 (fixed)
 19074                           ;	Chosen strategy is simple_byte
 19075  0308  087A               	movf	??_I2C1_ISR+1,w
 19076  0309  3A00               	xorlw	0	; case 0
 19077  030A  1903               	skipnz
 19078  030B  2B0D               	goto	i1l5766
 19079  030C  2AFC               	goto	i1l4248
 19080  030D                     i1l5766:	
 19081                           
 19082                           ; Switch size 1, requested type "simple"
 19083                           ; Number of cases is 11, Range of values is 0 to 11
 19084                           ; switch strategies available:
 19085                           ; Name         Instructions Cycles
 19086                           ; direct_byte           30     6 (fixed)
 19087                           ; simple_byte           34    18 (average)
 19088                           ; jumptable            260     6 (fixed)
 19089                           ;	Chosen strategy is simple_byte
 19090  030D  0879               	movf	??_I2C1_ISR,w
 19091  030E  3A00               	xorlw	0	; case 0
 19092  030F  1903               	skipnz
 19093  0310  29F6               	goto	i1l549
 19094  0311  3A01               	xorlw	1	; case 1
 19095  0312  1903               	skipnz
 19096  0313  2A21               	goto	i1l554
 19097  0314  3A03               	xorlw	3	; case 2
 19098  0315  1903               	skipnz
 19099  0316  2A69               	goto	i1l4174
 19100  0317  3A01               	xorlw	1	; case 3
 19101  0318  1903               	skipnz
 19102  0319  2A8D               	goto	i1l571
 19103  031A  3A07               	xorlw	7	; case 4
 19104  031B  1903               	skipnz
 19105  031C  2AF8               	goto	i1l4246
 19106  031D  3A01               	xorlw	1	; case 5
 19107  031E  1903               	skipnz
 19108  031F  2ABC               	goto	i1l578
 19109  0320  3A03               	xorlw	3	; case 6
 19110  0321  1903               	skipnz
 19111  0322  2AD1               	goto	i1l4228
 19112  0323  3A01               	xorlw	1	; case 7
 19113  0324  1903               	skipnz
 19114  0325  2AF8               	goto	i1l4246
 19115  0326  3A0F               	xorlw	15	; case 8
 19116  0327  1903               	skipnz
 19117  0328  2AD8               	goto	i1l4232
 19118  0329  3A02               	xorlw	2	; case 10
 19119  032A  1903               	skipnz
 19120  032B  2A22               	goto	i1l555
 19121  032C  3A01               	xorlw	1	; case 11
 19122  032D  1903               	skipnz
 19123  032E  2A44               	goto	i1l560
 19124  032F  2AFC               	goto	i1l4248
 19125  0330  0008               	return
 19126  0331                     __end_of_I2C1_ISR:	
 19127                           
 19128                           	psect	text68
 19129  0ACA                     __ptext68:	
 19130 ;; *************** function _I2C1_Stop *****************
 19131 ;; Defined at:
 19132 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 19133 ;; Parameters:    Size  Location     Type
 19134 ;;  completion_c    1    wreg     enum E10866
 19135 ;; Auto vars:     Size  Location     Type
 19136 ;;  completion_c    1    1[COMMON] enum E10866
 19137 ;; Return value:  Size  Location     Type
 19138 ;;                  1    wreg      void 
 19139 ;; Registers used:
 19140 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19141 ;; Tracked objects:
 19142 ;;		On entry : 0/0
 19143 ;;		On exit  : 0/0
 19144 ;;		Unchanged: 0/0
 19145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19150 ;;Total ram usage:        2 bytes
 19151 ;; Hardware stack levels used:    1
 19152 ;; This function calls:
 19153 ;;		Nothing
 19154 ;; This function is called by:
 19155 ;;		_I2C1_ISR
 19156 ;; This function uses a non-reentrant model
 19157 ;;
 19158                           
 19159                           
 19160                           ;psect for function _I2C1_Stop
 19161  0ACA                     _I2C1_Stop:	
 19162                           
 19163                           ;incstack = 0
 19164 ;; hardware stack exceeded
 19165                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 19166                           ;I2C1_Stop@completion_code stored from wreg
 19167  0ACA  00F8               	movwf	I2C1_Stop@completion_code
 19168                           
 19169                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 19170  0ACB  0143               	movlb	3	; select bank3
 19171  0ACC  1511               	bsf	17,2	;volatile
 19172                           
 19173                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 19174  0ACD  0872               	movf	_p_i2c1_current,w
 19175  0ACE  3E02               	addlw	2
 19176  0ACF  0086               	movwf	6
 19177  0AD0  0187               	clrf	7
 19178  0AD1  0801               	movf	1,w
 19179  0AD2  1903               	btfsc	3,2
 19180  0AD3  2ADF               	goto	i1l3942
 19181                           
 19182                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 19183  0AD4  0878               	movf	I2C1_Stop@completion_code,w
 19184  0AD5  00F7               	movwf	??_I2C1_Stop
 19185  0AD6  0872               	movf	_p_i2c1_current,w
 19186  0AD7  3E02               	addlw	2
 19187  0AD8  0086               	movwf	6
 19188  0AD9  0187               	clrf	7
 19189  0ADA  0801               	movf	1,w
 19190  0ADB  0086               	movwf	6
 19191  0ADC  0187               	clrf	7
 19192  0ADD  0877               	movf	??_I2C1_Stop,w
 19193  0ADE  0081               	movwf	1
 19194  0ADF                     i1l3942:	
 19195                           
 19196                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 19197  0ADF  0141               	movlb	1	; select bank1
 19198  0AE0  01CC               	clrf	_i2c1_state^(0+128)
 19199  0AE1  0008               	return
 19200  0AE2                     __end_of_I2C1_Stop:	
 19201                           
 19202                           	psect	text69
 19203  0A19                     __ptext69:	
 19204 ;; *************** function _I2C1_FunctionComplete *****************
 19205 ;; Defined at:
 19206 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 19207 ;; Parameters:    Size  Location     Type
 19208 ;;		None
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;		None
 19211 ;; Return value:  Size  Location     Type
 19212 ;;                  1    wreg      void 
 19213 ;; Registers used:
 19214 ;;		wreg, status,2, status,0
 19215 ;; Tracked objects:
 19216 ;;		On entry : 0/0
 19217 ;;		On exit  : 0/0
 19218 ;;		Unchanged: 0/0
 19219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19224 ;;Total ram usage:        1 bytes
 19225 ;; Hardware stack levels used:    1
 19226 ;; This function calls:
 19227 ;;		Nothing
 19228 ;; This function is called by:
 19229 ;;		_I2C1_ISR
 19230 ;; This function uses a non-reentrant model
 19231 ;;
 19232                           
 19233                           
 19234                           ;psect for function _I2C1_FunctionComplete
 19235  0A19                     _I2C1_FunctionComplete:	
 19236                           
 19237                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 19238                           
 19239                           ;incstack = 0
 19240 ;; hardware stack exceeded
 19241                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 19242  0A19  3004               	movlw	4
 19243  0A1A  00F7               	movwf	??_I2C1_FunctionComplete
 19244  0A1B  0877               	movf	??_I2C1_FunctionComplete,w
 19245  0A1C  07F3               	addwf	_p_i2c1_trb_current,f
 19246                           
 19247                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 19248  0A1D  3001               	movlw	1
 19249  0A1E  0141               	movlb	1	; select bank1
 19250  0A1F  02CB               	subwf	_i2c1_trb_count^(0+128),f
 19251  0A20  1D03               	btfss	3,2
 19252  0A21  2A27               	goto	i1l590
 19253                           
 19254                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 19255  0A22  3004               	movlw	4
 19256  0A23  00F7               	movwf	??_I2C1_FunctionComplete
 19257  0A24  0877               	movf	??_I2C1_FunctionComplete,w
 19258  0A25  00CC               	movwf	_i2c1_state^(0+128)
 19259                           
 19260                           ;mcc_generated_files/i2c1.c: 575:     }
 19261  0A26  0008               	return
 19262  0A27                     i1l590:	
 19263                           ;mcc_generated_files/i2c1.c: 576:     else
 19264                           
 19265                           
 19266                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 19267  0A27  01CC               	clrf	_i2c1_state^(0+128)
 19268  0A28  0ACC               	incf	_i2c1_state^(0+128),f
 19269  0A29  0008               	return
 19270  0A2A                     __end_of_I2C1_FunctionComplete:	
 19271                           
 19272                           	psect	text70
 19273  0908                     __ptext70:	
 19274 ;; *************** function _I2C1_BusCollisionISR *****************
 19275 ;; Defined at:
 19276 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 19277 ;; Parameters:    Size  Location     Type
 19278 ;;		None
 19279 ;; Auto vars:     Size  Location     Type
 19280 ;;		None
 19281 ;; Return value:  Size  Location     Type
 19282 ;;                  1    wreg      void 
 19283 ;; Registers used:
 19284 ;;		None
 19285 ;; Tracked objects:
 19286 ;;		On entry : 0/0
 19287 ;;		On exit  : 0/0
 19288 ;;		Unchanged: 0/0
 19289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19294 ;;Total ram usage:        0 bytes
 19295 ;; Hardware stack levels used:    1
 19296 ;; This function calls:
 19297 ;;		Nothing
 19298 ;; This function is called by:
 19299 ;;		_INTERRUPT_InterruptManager
 19300 ;; This function uses a non-reentrant model
 19301 ;;
 19302                           
 19303                           
 19304                           ;psect for function _I2C1_BusCollisionISR
 19305  0908                     _I2C1_BusCollisionISR:	
 19306                           
 19307                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 19308                           
 19309                           ;incstack = 0
 19310 ;; hardware stack exceeded
 19311                           ; Regs used in _I2C1_BusCollisionISR: []
 19312  0908  014E               	movlb	14	; select bank14
 19313  0909  108F               	bcf	15,1	;volatile
 19314  090A  0008               	return
 19315  090B                     __end_of_I2C1_BusCollisionISR:	
 19316                           
 19317                           	psect	text71
 19318  0E21                     __ptext71:	
 19319 ;; *************** function _DMX_interrupt *****************
 19320 ;; Defined at:
 19321 ;;		line 22 in file "dmx.c"
 19322 ;; Parameters:    Size  Location     Type
 19323 ;;		None
 19324 ;; Auto vars:     Size  Location     Type
 19325 ;;  dummy           1    6[COMMON] volatile unsigned char 
 19326 ;; Return value:  Size  Location     Type
 19327 ;;                  1    wreg      void 
 19328 ;; Registers used:
 19329 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19330 ;; Tracked objects:
 19331 ;;		On entry : 0/0
 19332 ;;		On exit  : 0/0
 19333 ;;		Unchanged: 0/0
 19334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19337 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19338 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19339 ;;Total ram usage:        7 bytes
 19340 ;; Hardware stack levels used:    1
 19341 ;; This function calls:
 19342 ;;		Nothing
 19343 ;; This function is called by:
 19344 ;;		_DMX_init
 19345 ;;		_INTERRUPT_InterruptManager
 19346 ;; This function uses a non-reentrant model
 19347 ;;
 19348                           
 19349                           
 19350                           ;psect for function _DMX_interrupt
 19351  0E21                     _DMX_interrupt:	
 19352                           
 19353                           ;dmx.c: 24:     if (RC1STAbits.OERR) {
 19354                           
 19355                           ;incstack = 0
 19356 ;; hardware stack exceeded
 19357                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 19358  0E21  0142               	movlb	2	; select bank2
 19359  0E22  1C9D               	btfss	29,1	;volatile
 19360  0E23  2E26               	goto	i1l4590
 19361                           
 19362                           ;dmx.c: 25:         RC1STAbits.CREN = 0;
 19363  0E24  121D               	bcf	29,4	;volatile
 19364                           
 19365                           ;dmx.c: 26:         RC1STAbits.CREN = 1;
 19366  0E25  161D               	bsf	29,4	;volatile
 19367  0E26                     i1l4590:	
 19368                           
 19369                           ;dmx.c: 29:     if (initial == 0 && !(RC1STAbits.FERR)) {
 19370  0E26  0141               	movlb	1	; select bank1
 19371  0E27  0862               	movf	_initial^(0+128),w
 19372  0E28  0463               	iorwf	(_initial+1)^(0+128),w
 19373  0E29  1D03               	btfss	3,2
 19374  0E2A  2E4A               	goto	i1l4598
 19375  0E2B  0142               	movlb	2	; select bank2
 19376  0E2C  191D               	btfsc	29,2	;volatile
 19377  0E2D  2E4A               	goto	i1l4598
 19378                           
 19379                           ;dmx.c: 30:         dmxArray[arrayIndex] = RC1REG;
 19380  0E2E  0819               	movf	25,w	;volatile
 19381  0E2F  00F7               	movwf	??_DMX_interrupt
 19382  0E30  01F8               	clrf	??_DMX_interrupt+1
 19383  0E31  0837               	movf	(_arrayIndex+1)^(0+256),w
 19384  0E32  00FA               	movwf	??_DMX_interrupt+3
 19385  0E33  0836               	movf	_arrayIndex^(0+256),w
 19386  0E34  00F9               	movwf	??_DMX_interrupt+2
 19387  0E35  35F9               	lslf	??_DMX_interrupt+2,f
 19388  0E36  0DFA               	rlf	??_DMX_interrupt+3,f
 19389  0E37  30EE               	movlw	238
 19390  0E38  00FB               	movwf	??_DMX_interrupt+4
 19391  0E39  3023               	movlw	35
 19392  0E3A  00FC               	movwf	??_DMX_interrupt+5
 19393  0E3B  0879               	movf	??_DMX_interrupt+2,w
 19394  0E3C  077B               	addwf	??_DMX_interrupt+4,w
 19395  0E3D  0086               	movwf	6
 19396  0E3E  087A               	movf	??_DMX_interrupt+3,w
 19397  0E3F  3D7C               	addwfc	??_DMX_interrupt+5,w
 19398  0E40  0087               	movwf	7
 19399  0E41  0877               	movf	??_DMX_interrupt,w
 19400  0E42  3FC0               	movwi [0]fsr1
 19401  0E43  0878               	movf	??_DMX_interrupt+1,w
 19402  0E44  3FC1               	movwi [1]fsr1
 19403                           
 19404                           ;dmx.c: 31:         arrayIndex += 1;
 19405  0E45  3001               	movlw	1
 19406  0E46  07B6               	addwf	_arrayIndex^(0+256),f
 19407  0E47  3000               	movlw	0
 19408  0E48  3DB7               	addwfc	(_arrayIndex+1)^(0+256),f
 19409                           
 19410                           ;dmx.c: 32:     } else {
 19411  0E49  2E55               	goto	i1l4602
 19412  0E4A                     i1l4598:	
 19413                           
 19414                           ;dmx.c: 33:         arrayIndex = 0;
 19415  0E4A  0142               	movlb	2	; select bank2
 19416  0E4B  01B6               	clrf	_arrayIndex^(0+256)
 19417  0E4C  01B7               	clrf	(_arrayIndex+1)^(0+256)
 19418                           
 19419                           ;dmx.c: 34:         initial = 0;
 19420  0E4D  0141               	movlb	1	; select bank1
 19421  0E4E  01E2               	clrf	_initial^(0+128)
 19422  0E4F  01E3               	clrf	(_initial+1)^(0+128)
 19423                           
 19424                           ;dmx.c: 35:         volatile uint8_t dummy = RC1REG;
 19425  0E50  0142               	movlb	2	; select bank2
 19426  0E51  0819               	movf	25,w	;volatile
 19427  0E52  00F7               	movwf	??_DMX_interrupt
 19428  0E53  0877               	movf	??_DMX_interrupt,w
 19429  0E54  00FD               	movwf	DMX_interrupt@dummy	;volatile
 19430  0E55                     i1l4602:	
 19431                           
 19432                           ;dmx.c: 38:     PIR3bits.RC1IF = 0;
 19433  0E55  014E               	movlb	14	; select bank14
 19434  0E56  128F               	bcf	15,5	;volatile
 19435  0E57  0008               	return
 19436  0E58                     __end_of_DMX_interrupt:	
 19437                           
 19438                           	psect	text72
 19439  0E8F                     __ptext72:	
 19440 ;; *************** function _EUSART1_Receive_ISR *****************
 19441 ;; Defined at:
 19442 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 19443 ;; Parameters:    Size  Location     Type
 19444 ;;		None
 19445 ;; Auto vars:     Size  Location     Type
 19446 ;;		None
 19447 ;; Return value:  Size  Location     Type
 19448 ;;                  1    wreg      void 
 19449 ;; Registers used:
 19450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19451 ;; Tracked objects:
 19452 ;;		On entry : 0/0
 19453 ;;		On exit  : 0/0
 19454 ;;		Unchanged: 0/0
 19455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19460 ;;Total ram usage:        0 bytes
 19461 ;; Hardware stack levels used:    1
 19462 ;; Hardware stack levels required when called:    2
 19463 ;; This function calls:
 19464 ;;		Absolute function
 19465 ;;		_EUSART1_DefaultErrorHandler
 19466 ;;		_EUSART1_DefaultFramingErrorHandler
 19467 ;;		_EUSART1_DefaultOverrunErrorHandler
 19468 ;;		_EUSART1_RxDataHandler
 19469 ;; This function is called by:
 19470 ;;		_EUSART1_Initialize
 19471 ;;		_INTERRUPT_InterruptManager
 19472 ;; This function uses a non-reentrant model
 19473 ;;
 19474                           
 19475                           
 19476                           ;psect for function _EUSART1_Receive_ISR
 19477  0E8F                     _EUSART1_Receive_ISR:	
 19478                           
 19479                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 19480                           
 19481                           ;incstack = 0
 19482 ;; hardware stack exceeded
 19483                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19484  0E8F  0140               	movlb	0	; select bank0
 19485  0E90  086F               	movf	_eusart1RxHead,w	;volatile
 19486  0E91  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19487  0E92  0086               	movwf	6
 19488  0E93  3001               	movlw	1	; select bank2/3
 19489  0E94  0087               	movwf	7
 19490  0E95  0181               	clrf	1
 19491                           
 19492                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 19493  0E96  0142               	movlb	2	; select bank2
 19494  0E97  1D1D               	btfss	29,2	;volatile
 19495  0E98  2EA6               	goto	i1l4098
 19496                           
 19497                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 19498  0E99  0140               	movlb	0	; select bank0
 19499  0E9A  086F               	movf	_eusart1RxHead,w	;volatile
 19500  0E9B  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19501  0E9C  0086               	movwf	6
 19502  0E9D  3001               	movlw	1	; select bank2/3
 19503  0E9E  0087               	movwf	7
 19504  0E9F  1481               	bsf	1,1
 19505                           
 19506                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 19507  0EA0  0142               	movlb	2	; select bank2
 19508  0EA1  086B               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 19509  0EA2  008A               	movwf	10
 19510  0EA3  086A               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 19511  0EA4  000A               	callw
 19512  0EA5  318E               	pagesel	$
 19513  0EA6                     i1l4098:	
 19514                           
 19515                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 19516  0EA6  0142               	movlb	2	; select bank2
 19517  0EA7  1C9D               	btfss	29,1	;volatile
 19518  0EA8  2EB6               	goto	i1l4104
 19519                           
 19520                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 19521  0EA9  0140               	movlb	0	; select bank0
 19522  0EAA  086F               	movf	_eusart1RxHead,w	;volatile
 19523  0EAB  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19524  0EAC  0086               	movwf	6
 19525  0EAD  3001               	movlw	1	; select bank2/3
 19526  0EAE  0087               	movwf	7
 19527  0EAF  1501               	bsf	1,2
 19528                           
 19529                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 19530  0EB0  0142               	movlb	2	; select bank2
 19531  0EB1  0869               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 19532  0EB2  008A               	movwf	10
 19533  0EB3  0868               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 19534  0EB4  000A               	callw
 19535  0EB5  318E               	pagesel	$
 19536  0EB6                     i1l4104:	
 19537                           
 19538                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 19539  0EB6  0140               	movlb	0	; select bank0
 19540  0EB7  086F               	movf	_eusart1RxHead,w	;volatile
 19541  0EB8  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19542  0EB9  0086               	movwf	6
 19543  0EBA  3001               	movlw	1	; select bank2/3
 19544  0EBB  0087               	movwf	7
 19545  0EBC  0801               	movf	1,w
 19546  0EBD  1903               	btfsc	3,2
 19547  0EBE  2EC6               	goto	i1l4108
 19548                           
 19549                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 19550  0EBF  0142               	movlb	2	; select bank2
 19551  0EC0  0867               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 19552  0EC1  008A               	movwf	10
 19553  0EC2  0866               	movf	_EUSART1_ErrorHandler^(0+256),w
 19554  0EC3  000A               	callw
 19555  0EC4  318E               	pagesel	$
 19556                           
 19557                           ;mcc_generated_files/eusart1.c: 188:     } else {
 19558  0EC5  0008               	return
 19559  0EC6                     i1l4108:	
 19560                           
 19561                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 19562  0EC6  318B  2312         	fcall	_EUSART1_RxDataHandler
 19563  0EC8  0008               	return
 19564  0EC9                     __end_of_EUSART1_Receive_ISR:	
 19565                           
 19566                           	psect	text73
 19567  090F                     __ptext73:	
 19568 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 19569 ;; Defined at:
 19570 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 19571 ;; Parameters:    Size  Location     Type
 19572 ;;		None
 19573 ;; Auto vars:     Size  Location     Type
 19574 ;;		None
 19575 ;; Return value:  Size  Location     Type
 19576 ;;                  1    wreg      void 
 19577 ;; Registers used:
 19578 ;;		None
 19579 ;; Tracked objects:
 19580 ;;		On entry : 0/0
 19581 ;;		On exit  : 0/0
 19582 ;;		Unchanged: 0/0
 19583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19588 ;;Total ram usage:        0 bytes
 19589 ;; Hardware stack levels used:    1
 19590 ;; This function calls:
 19591 ;;		Nothing
 19592 ;; This function is called by:
 19593 ;;		_EUSART1_Initialize
 19594 ;;		_EUSART1_Receive_ISR
 19595 ;; This function uses a non-reentrant model
 19596 ;;
 19597                           
 19598                           
 19599                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 19600  090F                     _EUSART1_DefaultOverrunErrorHandler:	
 19601                           
 19602                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 19603                           
 19604                           ;incstack = 0
 19605 ;; hardware stack exceeded
 19606                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 19607  090F  0142               	movlb	2	; select bank2
 19608  0910  121D               	bcf	29,4	;volatile
 19609                           
 19610                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 19611  0911  161D               	bsf	29,4	;volatile
 19612  0912  0008               	return
 19613  0913                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 19614                           
 19615                           	psect	text74
 19616  0003                     __ptext74:	
 19617 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 19618 ;; Defined at:
 19619 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 19620 ;; Parameters:    Size  Location     Type
 19621 ;;		None
 19622 ;; Auto vars:     Size  Location     Type
 19623 ;;		None
 19624 ;; Return value:  Size  Location     Type
 19625 ;;                  1    wreg      void 
 19626 ;; Registers used:
 19627 ;;		None
 19628 ;; Tracked objects:
 19629 ;;		On entry : 0/0
 19630 ;;		On exit  : 0/0
 19631 ;;		Unchanged: 0/0
 19632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19637 ;;Total ram usage:        0 bytes
 19638 ;; Hardware stack levels used:    1
 19639 ;; This function calls:
 19640 ;;		Nothing
 19641 ;; This function is called by:
 19642 ;;		_EUSART1_Initialize
 19643 ;;		_EUSART1_Receive_ISR
 19644 ;; This function uses a non-reentrant model
 19645 ;;
 19646                           
 19647                           
 19648                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 19649  0003                     _EUSART1_DefaultFramingErrorHandler:	
 19650                           
 19651                           ;incstack = 0
 19652 ;; hardware stack exceeded
 19653                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 19654  0003  0008               	return
 19655  0004                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 19656                           
 19657                           	psect	text75
 19658  0905                     __ptext75:	
 19659 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 19660 ;; Defined at:
 19661 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 19662 ;; Parameters:    Size  Location     Type
 19663 ;;		None
 19664 ;; Auto vars:     Size  Location     Type
 19665 ;;		None
 19666 ;; Return value:  Size  Location     Type
 19667 ;;                  1    wreg      void 
 19668 ;; Registers used:
 19669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19670 ;; Tracked objects:
 19671 ;;		On entry : 0/0
 19672 ;;		On exit  : 0/0
 19673 ;;		Unchanged: 0/0
 19674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19679 ;;Total ram usage:        0 bytes
 19680 ;; Hardware stack levels used:    1
 19681 ;; Hardware stack levels required when called:    1
 19682 ;; This function calls:
 19683 ;;		_EUSART1_RxDataHandler
 19684 ;; This function is called by:
 19685 ;;		_EUSART1_Initialize
 19686 ;;		_EUSART1_Receive_ISR
 19687 ;; This function uses a non-reentrant model
 19688 ;;
 19689                           
 19690                           
 19691                           ;psect for function _EUSART1_DefaultErrorHandler
 19692  0905                     _EUSART1_DefaultErrorHandler:	
 19693                           
 19694                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 19695                           
 19696                           ;incstack = 0
 19697 ;; hardware stack exceeded
 19698                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19699  0905  318B  2312         	fcall	_EUSART1_RxDataHandler
 19700  0907  0008               	return
 19701  0908                     __end_of_EUSART1_DefaultErrorHandler:	
 19702                           
 19703                           	psect	text76
 19704  0B12                     __ptext76:	
 19705 ;; *************** function _EUSART1_RxDataHandler *****************
 19706 ;; Defined at:
 19707 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 19708 ;; Parameters:    Size  Location     Type
 19709 ;;		None
 19710 ;; Auto vars:     Size  Location     Type
 19711 ;;		None
 19712 ;; Return value:  Size  Location     Type
 19713 ;;                  1    wreg      void 
 19714 ;; Registers used:
 19715 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19716 ;; Tracked objects:
 19717 ;;		On entry : 0/0
 19718 ;;		On exit  : 0/0
 19719 ;;		Unchanged: 0/0
 19720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19725 ;;Total ram usage:        1 bytes
 19726 ;; Hardware stack levels used:    1
 19727 ;; This function calls:
 19728 ;;		Nothing
 19729 ;; This function is called by:
 19730 ;;		_EUSART1_Receive_ISR
 19731 ;;		_EUSART1_DefaultErrorHandler
 19732 ;; This function uses a non-reentrant model
 19733 ;;
 19734                           
 19735                           
 19736                           ;psect for function _EUSART1_RxDataHandler
 19737  0B12                     _EUSART1_RxDataHandler:	
 19738                           
 19739                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 19740                           
 19741                           ;incstack = 0
 19742 ;; hardware stack exceeded
 19743                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 19744  0B12  0142               	movlb	2	; select bank2
 19745  0B13  0819               	movf	25,w	;volatile
 19746  0B14  00F7               	movwf	??_EUSART1_RxDataHandler
 19747  0B15  0140               	movlb	0	; select bank0
 19748  0B16  086F               	movf	_eusart1RxHead,w
 19749  0B17  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 19750  0B18  0086               	movwf	6
 19751  0B19  3001               	movlw	1	; select bank2/3
 19752  0B1A  0087               	movwf	7
 19753  0B1B  0877               	movf	??_EUSART1_RxDataHandler,w
 19754  0B1C  0081               	movwf	1
 19755  0B1D  3001               	movlw	1
 19756  0B1E  00F7               	movwf	??_EUSART1_RxDataHandler
 19757  0B1F  0877               	movf	??_EUSART1_RxDataHandler,w
 19758  0B20  07EF               	addwf	_eusart1RxHead,f	;volatile
 19759                           
 19760                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 19761  0B21  3008               	movlw	8
 19762  0B22  026F               	subwf	_eusart1RxHead,w	;volatile
 19763  0B23  1803               	btfsc	3,0
 19764                           
 19765                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 19766  0B24  01EF               	clrf	_eusart1RxHead	;volatile
 19767                           
 19768                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 19769  0B25  3001               	movlw	1
 19770  0B26  00F7               	movwf	??_EUSART1_RxDataHandler
 19771  0B27  0877               	movf	??_EUSART1_RxDataHandler,w
 19772  0B28  0141               	movlb	1	; select bank1
 19773  0B29  07CE               	addwf	_eusart1RxCount^(0+128),f	;volatile
 19774  0B2A  0008               	return
 19775  0B2B                     __end_of_EUSART1_RxDataHandler:	
 19776                           
 19777                           	psect	text77
 19778  09E4                     __ptext77:	
 19779 ;; *************** function _ADCC_ThresholdISR *****************
 19780 ;; Defined at:
 19781 ;;		line 308 in file "mcc_generated_files/adcc.c"
 19782 ;; Parameters:    Size  Location     Type
 19783 ;;		None
 19784 ;; Auto vars:     Size  Location     Type
 19785 ;;		None
 19786 ;; Return value:  Size  Location     Type
 19787 ;;                  1    wreg      void 
 19788 ;; Registers used:
 19789 ;;		wreg, status,2, status,0, pclath, cstack
 19790 ;; Tracked objects:
 19791 ;;		On entry : 0/0
 19792 ;;		On exit  : 0/0
 19793 ;;		Unchanged: 0/0
 19794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19799 ;;Total ram usage:        0 bytes
 19800 ;; Hardware stack levels used:    1
 19801 ;; Hardware stack levels required when called:    1
 19802 ;; This function calls:
 19803 ;;		Absolute function
 19804 ;;		_ADCC_DefaultInterruptHandler
 19805 ;;		_adcThresholdHandler
 19806 ;; This function is called by:
 19807 ;;		_INTERRUPT_InterruptManager
 19808 ;; This function uses a non-reentrant model
 19809 ;;
 19810                           
 19811                           
 19812                           ;psect for function _ADCC_ThresholdISR
 19813  09E4                     _ADCC_ThresholdISR:	
 19814                           
 19815                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 19816                           
 19817                           ;incstack = 0
 19818 ;; hardware stack exceeded
 19819                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 19820  09E4  014E               	movlb	14	; select bank14
 19821  09E5  108D               	bcf	13,1	;volatile
 19822                           
 19823                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 19824  09E6  0142               	movlb	2	; select bank2
 19825  09E7  0862               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 19826  09E8  0463               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 19827  09E9  1903               	btfsc	3,2
 19828  09EA  0008               	return
 19829                           
 19830                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 19831  09EB  0863               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 19832  09EC  008A               	movwf	10
 19833  09ED  0862               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 19834  09EE  000A               	callw
 19835  09EF  3189               	pagesel	$
 19836  09F0  0008               	return
 19837  09F1                     __end_of_ADCC_ThresholdISR:	
 19838                           
 19839                           	psect	text78
 19840  0002                     __ptext78:	
 19841 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 19842 ;; Defined at:
 19843 ;;		line 320 in file "mcc_generated_files/adcc.c"
 19844 ;; Parameters:    Size  Location     Type
 19845 ;;		None
 19846 ;; Auto vars:     Size  Location     Type
 19847 ;;		None
 19848 ;; Return value:  Size  Location     Type
 19849 ;;                  1    wreg      void 
 19850 ;; Registers used:
 19851 ;;		None
 19852 ;; Tracked objects:
 19853 ;;		On entry : 0/0
 19854 ;;		On exit  : 0/0
 19855 ;;		Unchanged: 0/0
 19856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19861 ;;Total ram usage:        0 bytes
 19862 ;; Hardware stack levels used:    1
 19863 ;; This function calls:
 19864 ;;		Nothing
 19865 ;; This function is called by:
 19866 ;;		_ADCC_Initialize
 19867 ;;		_ADCC_ThresholdISR
 19868 ;; This function uses a non-reentrant model
 19869 ;;
 19870                           
 19871                           
 19872                           ;psect for function _ADCC_DefaultInterruptHandler
 19873  0002                     _ADCC_DefaultInterruptHandler:	
 19874                           
 19875                           ;incstack = 0
 19876 ;; hardware stack exceeded
 19877                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 19878  0002  0008               	return
 19879  0003                     __end_of_ADCC_DefaultInterruptHandler:	
 19880                           
 19881                           	psect	text79
 19882  090B                     __ptext79:	
 19883 ;; *************** function _adcThresholdHandler *****************
 19884 ;; Defined at:
 19885 ;;		line 35 in file "beat.c"
 19886 ;; Parameters:    Size  Location     Type
 19887 ;;		None
 19888 ;; Auto vars:     Size  Location     Type
 19889 ;;		None
 19890 ;; Return value:  Size  Location     Type
 19891 ;;                  1    wreg      void 
 19892 ;; Registers used:
 19893 ;;		None
 19894 ;; Tracked objects:
 19895 ;;		On entry : 0/0
 19896 ;;		On exit  : 0/0
 19897 ;;		Unchanged: 0/0
 19898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19903 ;;Total ram usage:        0 bytes
 19904 ;; Hardware stack levels used:    1
 19905 ;; This function calls:
 19906 ;;		Nothing
 19907 ;; This function is called by:
 19908 ;;		_BEAT_init
 19909 ;;		_ADCC_ThresholdISR
 19910 ;; This function uses a non-reentrant model
 19911 ;;
 19912                           
 19913                           
 19914                           ;psect for function _adcThresholdHandler
 19915  090B                     _adcThresholdHandler:	
 19916                           
 19917                           ;beat.c: 36:     thresholdExceeded = 1;
 19918                           
 19919                           ;incstack = 0
 19920 ;; hardware stack exceeded
 19921                           ; Regs used in _adcThresholdHandler: []
 19922  090B  0141               	movlb	1	; select bank1
 19923  090C  01BA               	clrf	_thresholdExceeded^(0+128)
 19924  090D  0ABA               	incf	_thresholdExceeded^(0+128),f
 19925  090E  0008               	return
 19926  090F                     __end_of_adcThresholdHandler:	
 19927  007E                     btemp	set	126	;btemp
 19928  007E                     int$flags	set	126
 19929  007E                     wtemp0	set	126


Data Sizes:
    Strings     106
    Constant    96
    Data        13
    BSS         156
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     79      80
    BANK1            80     16      79
    BANK2            80      0      78
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_8(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_8(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2928_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    S1994$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1140$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S1163$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S1163$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_printf
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_CLOCK_getTime
    _LED_task->_PWM1_LoadDutyValue
    _LED_task->_PWM2_LoadDutyValue
    _LED_task->_PWM3_LoadDutyValue
    _LED_task->_PWM4_LoadDutyValue
    _DMX_init->_EUSART1_SetRxInterruptHandler
    _CONTROLLER_task->_menuSelection
    _menuSelection->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->_I2C1_MasterWrite
    _writeData->___lwmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_CONTROLLER_task
    _TM1650_init->_printf
    _CONTROLLER_task->_printf
    _menuSelection->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   81921
                                             14 BANK1      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   18907
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0    3884
                                              2 BANK0      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0     211
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      4     4      0   49528
                                             10 BANK1      4     4      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                _TM1650_fastPrintNum
                        _address_dec
                        _address_inc
                      _menuSelection
                             _printf
 ---------------------------------------------------------------------------------
 (2) _menuSelection                                        2     2      0   16206
                                             77 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   16206
                                             73 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   14775
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   14340
                                             56 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2    9778
                                             50 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    9534
                                             41 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    4282
                                             33 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    3890
                                             25 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    2946
                                             23 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    2822
                                             20 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2701
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum                                  3     1      2    4722
                                             20 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    2670
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1400
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     767
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     849
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1167
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _address_dec
       _TM1650_fastPrintNum
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
     _address_inc
       _TM1650_fastPrintNum
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
     _menuSelection
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
   _LED_task
     _BEAT_detected
     _CLOCK_getTime
     _PWM1_LoadDutyValue
     _PWM2_LoadDutyValue
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     11B       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     10      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4E      10       97.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     11B      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 27 21:34:15 2019

                      ??_ADCC_SetUpperThreshold 0022                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0077                                              _up 00C6  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00CC  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 090B  
                                           l911 0493                                             l913 04F8  
                                           _PR2 028D                                             _bpm 0138  
                                           _pad 07A6                         __size_of_PMD_Initialize 000A  
                               _TMR2_Initialize 0A0B                                 _PWM4_Initialize 09C1  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                 __CFG_BBEN$OFF 0000                                __end_of_I2C1_ISR 0331  
                                          l1030 0171                                            l1008 00BE  
                                          l1053 0FFF                                            l1411 07BE  
                                          l1414 07DE                                            l3516 0AFF  
                                          l3630 0D8B                                            l3518 0B0B  
                          _ADCC_StartConversion 093A                                            l3632 0D97  
                                          l5208 0A5F                                            l5224 0AEC  
                                          l5216 0B36                                            l5160 0B92  
                                          l5128 0BCE                                            l5144 0BEC  
                                          l3642 0DB2                                            l5226 0AF0  
                                          l5218 0B3A                                            l5242 0FC5  
                                          l5234 0FB4                                            l3660 0D15  
                                          l5244 0FC6                                            l5236 0FBB  
                                          l5500 01B6                                            l3638 0DA9  
                                          l3654 0CFD                                            l5254 0FD3  
                                          l5262 0FEB                                            l5510 01C9  
                                          l5414 00CB                                            ?_pad 0049  
                                          l3656 0D09                                            l3664 0D1E  
                                          l4800 0F8B                                            l5256 0FDB  
                                          l5408 00C1                                            l5176 0BB0  
                                          l5600 038D                                            l5362 048D  
                                          l5354 044C                                            l5274 0A97  
                                          l5258 0FE3                                            l5506 01D2  
                                          l5442 00FF                                            l4804 0F92  
                                          l5516 01D8                                            l5508 01D5  
                                          l5436 00F4                                            l5428 00DE  
                                          l5612 039D                                            l5534 053B  
                                          l4806 0F98                                            l4822 0B77  
                                          l5470 015C                                            l5286 0965  
                                          l5606 0399                                            l5376 04CF  
                                          l5368 04AB                                            l4816 0CEF  
                                          l4832 0C46                                            l5456 013B  
                                          l5624 03C5                                            l5570 05B8  
                                          l5554 0573                                            l5538 0541  
                                          l5378 04D9                                            l4834 0C48  
                                          l4850 0E85                                            l4922 0712  
                                          l5482 0173                                            l5618 03B9  
                                          l5556 0586                                            l4860 0C84  
                                          l4916 06F1                                            l4932 0723  
                                          l5492 018B                                            l5476 0168  
                                          l4846 0E62                                            l4870 07BC  
                                          l4926 0718                                            l5478 0169  
                                          l4880 07EA                                            l5488 017D  
                                          l5592 03E8                                            l4970 0606  
                                          l4866 07B4                                            l4890 0D6A  
                                          l4946 0D2C                                            l5498 01B2  
                                          l5594 0389                                            l5586 0372  
                                          l5658 0EF8                                            l4788 0913  
                                          l4876 07C0                                            l4948 0D49  
                                          l5764 0FF4                                            l4888 0D61  
                                ?_TM1650_enable 0077                                            STR_1 1055  
                                          STR_2 1066                                            STR_3 104F  
                                          STR_4 105B                                            STR_5 1049  
                                          STR_6 1061                                            STR_7 1047  
                                          STR_8 101C                                            STR_9 103C  
                       __end_of_PWM1_Initialize 09AB                                            u2025 0D8E  
                                          u2115 0D0F                                            u2045 0D98  
                                          u2125 0D16                                            _LATA 0018  
                                          _LATB 0019                                            u2055 0DA2  
                                          _LATC 001A                                            u2065 0DAA  
                                          u2095 0D00                                            _T2PR 028D  
                                          u4215 0116                                            u4235 0133  
                                          u4255 0152                                            u4425 0526  
                                          u3625 07CA                                            _PMD0 0796  
                                          u3725 0BCA                                            _PMD1 0797  
                                          _PMD2 0798                                            u3815 0BAC  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u3585 0E83                                            u4617 0ED2  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u4475 0599                                            u3755 0BE8  
                                          _PMD7 079D                                            u3935 044F  
                                          u3944 046E                                            u3945 046D  
                                          u3785 0B8E                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                 ?_BUTTONS_init 0077                                   ?_BUTTONS_task 0077  
                                          _dbuf 01A0                            ?_adcThresholdHandler 0077  
                                          _ctoa 0D52                                            _main 0EC9  
                                          _down 00C5                                            _init 0BF5  
                                          _menu 00C7                                            _prec 0132  
                                          _nout 0130                                            pad@i 004D  
                                          pad@p 004A                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            pad@w 004F  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0030  
                       __end_of_TM1650_setDigit 0A4D                              __size_of_GPIO_init 0011  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0018  
                          __size_of_address_inc 0019                  I2C1_MasterWriteTRBBuild@length 0021  
                                         ??_pad 004C                         __end_of_PWM2_Initialize 09B6  
                       __end_of_TMR0_Initialize 0A75                                      _i2c1_state 00CC  
                ??_TMR0_DefaultInterruptHandler 0077                  __size_of_OSCILLATOR_Initialize 0009  
                     I2C1_MasterTRBInsert@count 0023                   __end_of_OSCILLATOR_Initialize 098B  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 0120  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_ctoa 0052                                __end_of_LED_task 042A  
                                         ?_main 0077                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                           _ADREF 0116  
                             __end_of_I2C1_Stop 0AE2                                           STR_10 102D  
                                         STR_11 1013                                           STR_12 1000  
                                         STR_13 100A                                           STR_14 1025  
                                         STR_15 1035                                           STR_16 1043  
                                 __CFG_WDTE$OFF 0000                                __end_of_DMX_init 0928  
                                         _ADRPT 009A                                           _T2CON 028E  
                                         _T2HLT 028F                                 __end_of___lwdiv 0DB7  
                    _ADCC_ADTI_InterruptHandler 0162                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l432 0017  
                                         i1l441 002E                                 __end_of___lwmod 0D23  
                                         i1l434 001E                                           i1l436 0025  
                                         i1l429 000E                                           i1l560 0244  
                                         i1l561 0250                                           i1l554 0221  
                                         i1l571 028D                                           i1l555 0222  
                                         i1l549 01F6                                           i1l590 0A27  
                                         i1l583 02F1                                           i1l575 02AD  
                                         i1l578 02BC                                           i1l579 02CA  
                                         _OSCEN 0891                                    vfpfcnvrt@fmt 0058  
                            _PWM4_LoadDutyValue 0BD7                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 090B  
                     ?_TMR0_SetInterruptHandler 0020                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 09FE                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                                         _delay 00E4                                           _flags 00A7  
                                         _enter 00C4                           ?_ADCC_StartConversion 0077  
                                         _fputc 0E58                                           _fputs 0C80  
                           ?_PWM4_LoadDutyValue 0020                                           pad@fp 0051  
                                         _width 00A5                                           ctoa@c 0052  
                                         _putch 0C38                                           ctoa@w 0055  
                       __end_of_PWM3_Initialize 09C1                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0077                               __end_of_BEAT_init 0ACA  
                             __end_of_BEAT_task 05DB                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 0004  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0077  
           ?_EUSART1_DefaultFramingErrorHandler 0077              _EUSART1_DefaultFramingErrorHandler 0003  
               I2C1_MasterWriteTRBBuild@address 0022                                 __initialization 0032  
                          TM1650_setDigit@digit 0036                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                                    __end_of_ctoa 0D82  
                    __end_of_EUSART1_Initialize 0DEC                                    __end_of_main 0F05  
                                  __end_of_init 0C15                                 _CONTROLLER_init 0995  
                               _CONTROLLER_task 0077                            ??_PWM4_LoadDutyValue 0022  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 094C  
                       __end_of_PWM4_Initialize 09CC                         __end_of_TMR2_Initialize 0A19  
                   ?_INTERRUPT_InterruptManager 0077                                     _i2c1_object 00A0  
                                        ??_ctoa 0054                                          ??_main 00E0  
                                        ??_init 0023                               __end_of_GPIO_init 0A3B  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                                        ?_fputc 0039                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          ?_fputs 0041  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR3H 0315                                          _CCPR1L 030C  
                                        _CCPR4H 0319                                          _CCPR2L 0310  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        ?_putch 0077                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RC4PPS 1F24  
                              ?_PWM1_Initialize 0077                                          _RC5PPS 1F25  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        i1l4104 0EB6                                          _RC7PPS 1F27  
                                        i1l4108 0EC6                                          i1l4142 0214  
                                        i1l4232 02D8                                          i1l4216 02B0  
                                        i1l4208 029B                                          i1l4160 023E  
                                        i1l4154 022E                                          i1l4146 021B  
                                        i1l4244 02F5                                          i1l4228 02D1  
                                        i1l4246 02F8                                          i1l4174 0269  
                                        i1l4254 0304                                          i1l4248 02FC  
                                        i1l4098 0EA6                                          i1l4602 0E55  
                                        i1l4194 0282                                  __CFG_WDTCCS$SC 0000  
                                        i1l4590 0E26                                          i1l3942 0ADF  
                                        i1l4598 0E4A                                          i1l5766 030D  
                                        _OSCFRQ 0893                          __size_of_DMX_interrupt 0037  
                                        _TX1REG 011A                                          _TX1STA 011E  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0034                              ??_I2C1_MasterWrite 002B  
                                  _CCPTMRS0bits 021E                                    vfprintf@cfmt 0067  
                                _p_i2c1_current 0072                     __size_of_PWM3_LoadDutyValue 001E  
                   __end_of_TM1650_fastPrintNum 069D                               _ADCC_ThresholdISR 09E4  
                        __size_of_menuSelection 005B                                  __CFG_STVREN$ON 0000  
                                     ??___lwdiv 0024                                       ??___lwmod 002C  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                              ?_TMR0_Initialize 0077                                ?_PWM2_Initialize 0077  
                            ?_ADCC_ThresholdISR 0077                                       ?_I2C1_ISR 0077  
                                        _printf 0A9E                          __size_of_BEAT_detected 0009  
                                        pad@buf 0049                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                          ctoa@fp 0057  
                                _lastActiveTime 00AF                                          _strlen 0AFA  
                          __size_of_TM1650_init 0014                                 _ADCC_Initialize 0CA6  
                                        fputc@c 0039                                  _PMD_Initialize 098B  
                                        fputs@c 0045                                    ??_CLOCK_init 0022  
                                        fputs@i 0046                                          fputs@s 0048  
                           ??_ADCC_ThresholdISR 0077                          ??_ADCC_StartConversion 0020  
                                        putch@n 0038                                __end_of_vfprintf 0D52  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 0931  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                   _tm1650_status 00BD  
                               _eusart1RxBuffer 0128                                ?_PWM3_Initialize 0077  
                             _SYSTEM_Initialize 0C5C                         __end_of__initialization 0073  
                       __end_of_CONTROLLER_init 09A0                         __end_of_CONTROLLER_task 01E3  
                            ?_SYSTEM_Initialize 0077                      __end_of_PWM2_LoadDutyValue 0BB9  
                                     ?_LED_task 0077                                       ?_DMX_init 0077  
                                _i2c1_trb_count 00CB                     PWM1_LoadDutyValue@dutyValue 0020  
                __size_of_EUSART1_RxDataHandler 0019                       __end_of_ADCC_ThresholdISR 09F1  
                 __end_of_EUSART1_RxDataHandler 0B2B                           _I2C1_FunctionComplete 0A19  
                          _I2C1_BusCollisionISR 0908                                  __pcstackCOMMON 0077  
                            __end_of_CLOCK_init 0920                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 09FE                             ??_SYSTEM_Initialize 0022  
                                     ?_TMR0_ISR 0077                                   __end_of_fputc 0E8F  
                                 __end_of_fputs 0CA6                                   __end_of_putch 0C5C  
                            _PWM1_LoadDutyValue 0B7D                                      ??_I2C1_ISR 0079  
                              ?_TMR2_Initialize 0077                                ?_PWM4_Initialize 0077  
                                 _DMX_interrupt 0E21                            __end_of_BUTTONS_init 0F53  
                        __end_of_PMD_Initialize 0995                            __end_of_BUTTONS_task 050F  
                   PWM4_LoadDutyValue@dutyValue 0020                             ?_PWM1_LoadDutyValue 0020  
                   __end_of_EUSART1_Receive_ISR 0EC9                               _thresholdExceeded 00BA  
                   ADCC_StartConversion@channel 0020                                   _menuSelection 0FA5  
                                       ??_fputc 003C                       __end_of_SYSTEM_Initialize 0C80  
                                       ??_fputs 0042                                         ??_putch 0037  
                                 _eusart1RxHead 006F                                   _eusart1RxTail 0074  
                                    __pbssBANK0 006F                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
               ??_EUSART1_SetRxInterruptHandler 0022                                   _BEAT_detected 095E  
                                    ??_LED_task 0022                                      ??_DMX_init 0022  
                          ??_PWM1_LoadDutyValue 0022                           ?_I2C1_BusCollisionISR 0077  
               __end_of_EUSART1_SetErrorHandler 0970                                      __pmaintext 0EC9  
              __end_of_TMR0_SetInterruptHandler 0955                                      ??_TMR0_ISR 0077  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 0CCC                                      __pintentry 0004  
                               _I2C1_Initialize 0B44                                         _CCP1CON 030E  
                                       _CCP2CON 0312                                         _CCP3CON 0316  
                                       _CCP4CON 031A                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                  ?_DMX_interrupt 0077  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 0931  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 0928  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               __CFG_ZCDDIS$OFF 0000                                         ?_printf 00D2  
                               ?_PMD_Initialize 0077                                         ?_strlen 0020  
        __end_of_EUSART1_SetFramingErrorHandler 0979         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 0970                    ?_EUSART1_DefaultErrorHandler 0077  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                            __size_of_vfpfcnvrt 00A9                                       _I2C1_Stop 0ACA  
                                    _arrayIndex 0136                                  ?_menuSelection 0077  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                             __end_of_charTable 07A6                             _CLOCK_timerCallback 07F9  
                                ?_BEAT_detected 0077                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0037  
                              ?_CONTROLLER_init 0077                                   ??_address_inc 0037  
                              ?_CONTROLLER_task 0077                                      _enterState 00BE  
                               BUTTONS_task@btn 0028                          ?_I2C1_FunctionComplete 0077  
                                     _BEAT_init 0AB3                   __size_of_I2C1_MasterTRBInsert 0052  
                                     _BEAT_task 050F                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 0073                            ?_CLOCK_timerCallback 0077  
                                       ___lwdiv 0D82                                         ___lwmod 0CF6  
                                     ?_vfprintf 0061                                         _address 00EA  
                                       __ptext1 0A75                                         __ptext2 0C5C  
                                       __ptext3 0A0B                                         __ptext4 0A61  
                                       __ptext5 09C1                                         __ptext6 09B6  
                                       __ptext7 09AB                                         __ptext8 09A0  
                                       __ptext9 098B                                 __size_of_printf 0015  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                               __size_of_strlen 0018                                         _lastRun 00AB  
                         _OSCILLATOR_Initialize 0982                                       _T2CONbits 028E  
                                  __size_of_pad 0053                                         _initial 00E2  
                                       _buttons 013A                              _EUSART1_Initialize 0DB7  
                      ??_PIN_MANAGER_Initialize 0020                                       _T2HLTbits 028F  
                               __CFG_WRTSAF$OFF 0000                                      ?_I2C1_Stop 0077  
                   __end_of_adcThresholdHandler 090F                                         _upState 00C1  
                 ??_EUSART1_DefaultErrorHandler 0078                                         _startup 00EE  
                    __size_of_SYSTEM_Initialize 0024                            I2C1_ISR@pi2c_buf_ptr 00CA  
                                       clrloop0 09CD                                _currentSelection 00EC  
                          end_of_initialization 0073                                       _T2RSTbits 0291  
                                     _GPIO_init 0A2A                             ?_EUSART1_Initialize 0077  
                                       init@btn 0024                                         init@pin 0022  
                                       fputc@fp 003B                                         init_ram 09D8  
                   _EUSART1_OverrunErrorHandler 0168                                         fputs@fp 0041  
                                       initloop 09D9                          ??_I2C1_BusCollisionISR 0077  
                       __end_of_I2C1_Initialize 0B60           __end_of_EUSART1_SetRxInterruptHandler 095E  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 0955  
                                    ?_BEAT_init 0077                                      ?_BEAT_task 0077  
                             __end_of_vfpfcnvrt 0746                           __size_of_BUTTONS_init 004E  
                         __size_of_BUTTONS_task 00E5                           ??_CLOCK_timerCallback 0077  
                               ??_DMX_interrupt 0077                             __end_of_address_dec 0AFA  
                   __size_of_PWM4_LoadDutyValue 001E                             __end_of_address_inc 0B44  
                              ?_ADCC_Initialize 0077                                      ??_vfprintf 0064  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                                       strlen@a 0023                                         strlen@s 0020  
                      _TMR0_SetInterruptHandler 094C                       __size_of_I2C1_MasterWrite 002A  
                             __size_of_I2C1_ISR 014E                               __end_of_writeData 0B7D  
                               ??_menuSelection 006D                         ?_ADCC_SetUpperThreshold 0020  
                                     _TRISAbits 0012                                       _TRISCbits 0014  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 0A9E  
             I2C1_ISR@i2c_10bit_address_restart 00C8                                      ?_GPIO_init 0077  
                        __size_of_CLOCK_getTime 0009                                    _BUTTONS_init 0F05  
                                  _BUTTONS_task 042A                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
                    __end_of_PWM3_LoadDutyValue 0BD7            __size_of_EUSART1_DefaultErrorHandler 0003  
                      __size_of_PWM1_Initialize 000B                               __size_of_LED_task 00F9  
                             __size_of_DMX_init 0008                  ??_ADCC_DefaultInterruptHandler 0077  
                                 ??_TM1650_init 006D                                     vfpfcnvrt@ap 0059  
                                   vfpfcnvrt@fp 0060                         I2C1_MasterWrite@trBlock 015E  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0078  
                            _PWM2_LoadDutyValue 0B9B                        __size_of_TM1650_setDigit 0012  
                        ?_OSCILLATOR_Initialize 0077                  __end_of_ADCC_SetUpperThreshold 093A  
                  __size_of_TM1650_fastPrintNum 00C2                                  __end_of_printf 0AB3  
                                __end_of_strlen 0B12                                    _lastDetected 00B9  
                           start_initialization 0032                                    _enterPressed 00C2  
                                   ??_I2C1_Stop 0077                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                             ?_PWM2_LoadDutyValue 0020  
               __size_of_PIN_MANAGER_Initialize 0035                             TM1650_setDigit@data 0034  
                                   __end_of_pad 07F9   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 0A4D  
                            ?_BUTTONS_isClicked 0077                                     _address_dec 0AE2  
                                   _address_inc 0B2B                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0077                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                            ??_PWM2_LoadDutyValue 0022  
                      __size_of_PWM3_Initialize 000B                                     vfprintf@fmt 0061  
                   PWM2_LoadDutyValue@dutyValue 0020                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 0B12  
                ?_EUSART1_SetRxInterruptHandler 0020                                     __pdataBANK1 00E2  
                                 _CLOCK_getTime 0943                                        ??_printf 0069  
                                      ??_strlen 0022                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00CE                                     __pbssBIGRAM 23EE  
                           __end_of_TM1650_init 0A89                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 016C                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00D2  
                      __size_of_PWM4_Initialize 000B                        __size_of_TMR2_Initialize 000E  
                                 _i2c1_tr_queue 00CF                       __end_of_BUTTONS_isClicked 0A61  
                                   ??_GPIO_init 0020                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0077  
                  __size_of_EUSART1_Receive_ISR 003A                                    _menuSelected 00ED  
                                  _currentState 0070                                       _charTable 0746  
                         _TMR0_InterruptHandler 0164                                       __pnvBANK2 0162  
                   __size_of_PWM1_LoadDutyValue 001E                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 0DEC                                        ?___lwdiv 0020  
                                      ?___lwmod 0028                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 01E3                               ??_PWM1_Initialize 0020  
                  ??_INTERRUPT_InterruptManager 007E                                 writeData@status 0033  
                             __size_of_vfprintf 002F                                _I2C1_MasterWrite 0CCC  
                                      _BAUD1CON 011F                    __end_of_I2C1_MasterTRBInsert 0FA5  
    __end_of_EUSART1_DefaultOverrunErrorHandler 0913     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0077             ?_EUSART1_DefaultOverrunErrorHandler 0077  
            _EUSART1_DefaultOverrunErrorHandler 090F                            _EUSART1_ErrorHandler 0166  
                                     _downState 00C0                         _EUSART1_SetErrorHandler 0967  
                             ??_TM1650_setDigit 0035                                ___lwdiv@quotient 0025  
                                __size_of_fputc 0037                                        _T2CLKCON 0290  
                                     _menuState 00BF                                  __size_of_fputs 0026  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 0918  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0077                _I2C1_WaitForLastPacketToComplete 0913  
                        I2C1_MasterRead@trBlock 015A                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 09CC  
                                      _PIE0bits 0716                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 0331  
                                      _DMX_init 0920             __size_of_INTERRUPT_InterruptManager 002C  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 00E8                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0077  
                       CONTROLLER_task@isActive 00DF                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 09F1                                        _SSP1STAT 018F  
                      __size_of_CONTROLLER_init 000B                        __size_of_CONTROLLER_task 016C  
                                   _TM1650_init 0A75                                       _threshold 00E6  
                                     _vfpfcnvrt 069D                               ??_PWM3_Initialize 0020  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                                     _startTime 00B7                              DMX_interrupt@dummy 007D  
                                      _WPUAbits 1F39                                        _WPUCbits 1F4F  
                                     _writeData 0B60                      __size_of_BUTTONS_isClicked 0014  
                                    vfpfcnvrt@c 005F                                     _lastIncTime 00B1  
                             ??_TMR2_Initialize 0020                               ??_PWM4_Initialize 0020  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 07FF  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 05DB  
                                    _ADSTATbits 0115                      __end_of_PWM4_LoadDutyValue 0BF5  
                 __size_of_I2C1_BusCollisionISR 0003                                      vfprintf@ap 0063  
                                    vfprintf@fp 0066                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 00C9                         ??_OSCILLATOR_Initialize 0020  
                         __end_of_DMX_interrupt 0E58                     __size_of_EUSART1_Initialize 0035  
                                    ?_vfpfcnvrt 0058                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                __end_of_I2C1_MasterWriteTRBBuild 0C38  
                            _PWM3_LoadDutyValue 0BB9                                      _ANSELAbits 1F38  
                                    _ANSELCbits 1F4E                            ?_TM1650_fastPrintNum 0034  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                           TM1650_enable@enable 0034             __end_of_EUSART1_DefaultErrorHandler 0908  
                   _EUSART1_DefaultErrorHandler 0905                                     _currentTime 00B3  
                                    _CLOCK_init 0918                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                     _menuPressed 00C3  
                               ___lwdiv@divisor 0020                           __end_of_menuSelection 1000  
                           I2C1_ISR@i2c_address 0075                                 ___lwdiv@counter 0027  
                                      _detected 00BB                                      ?_writeData 002E  
                                      __ptext10 0DEC                                        __ptext11 0982  
                                      __ptext20 0BB9                                        __ptext12 0B44  
                                      __ptext21 0B9B                                        __ptext13 0DB7  
                                      __ptext30 069D                                        __ptext22 0B7D  
                                      __ptext14 0979                                        __ptext31 0D52  
                                      __ptext23 095E                                        __ptext15 0970  
                                      __ptext40 0A89                                        __ptext32 07A6  
                                      __ptext24 0920                                        __ptext16 0967  
                                      __ptext41 0A4D                                        __ptext33 0AFA  
                                      __ptext25 0955                                        __ptext17 0CA6  
                                      __ptext50 0918                                        __ptext42 0995  
                                      __ptext34 0C80                                        __ptext26 0077  
                                      __ptext18 0331                                        __ptext51 094C  
                                      __ptext43 05DB                                        __ptext35 0E58  
                                      __ptext27 0FA5                                        __ptext19 0BD7  
                                      __ptext60 093A                                        __ptext52 042A  
                                      __ptext44 0B60                                        __ptext36 0C38  
                                      __ptext28 0A9E                                        __ptext61 0931  
                                      __ptext53 0F05                                        __ptext45 0CCC  
                                      __ptext37 0A3B                                        __ptext29 0D23  
                                      __ptext70 0908                                        __ptext62 0928  
                                      __ptext54 0BF5                                        __ptext46 0C15  
                                      __ptext38 0B2B                                        __ptext71 0E21  
                                      __ptext55 0A2A                                        __ptext47 0F53  
                                      __ptext39 0AE2                                        __ptext72 0E8F  
                                      __ptext64 09F1                                        __ptext56 050F  
                                      __ptext48 0913                                        __ptext73 090F  
                                      __ptext65 07F9                                        __ptext57 0D82  
                                      __ptext49 0CF6                                        __ptext74 0003  
                                      __ptext66 07FF                                        __ptext58 0943  
                           ?_PWM3_LoadDutyValue 0020                                        __ptext75 0905  
                                      __ptext67 01E3                                        __ptext59 0AB3  
                                      __ptext76 0B12                                        __ptext68 0ACA  
                                      __ptext77 09E4                                        __ptext69 0A19  
                                      __ptext78 0002                                        __ptext79 090B  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _dmxArray 23EE                           __end_of_BEAT_detected 0967  
                                      _lastBeat 00AD                                        _lastTime 00B5  
                                 __size_of_ctoa 0030                                   __size_of_main 003C  
                                 __size_of_init 0020                                    ?_address_dec 0077  
          __end_of_TMR0_DefaultInterruptHandler 0800           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 07FF                                    ?_address_inc 0077  
                          __CFG_WDTCWS$WDTCWS_7 0000                            _I2C1_MasterTRBInsert 0F53  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                          ??_PWM3_LoadDutyValue 0022                    __end_of_ADCC_StartConversion 0943  
                                      int$flags 007E                                        _position 00BC  
                                      _vfprintf 0D23              __end_of_INTERRUPT_InterruptManager 0030  
                    _INTERRUPT_InterruptManager 0004                                       printf@fmt 00D2  
                        __size_of_TM1650_enable 0015                     _EUSART1_FramingErrorHandler 016A  
                           _EUSART1_Receive_ISR 0E8F                           ??_TM1650_fastPrintNum 0036  
                                    _INTCONbits 000B                               ??_CONTROLLER_init 0037  
                             ??_CONTROLLER_task 00DC                                        init@port 0020  
                                __pstringtext10 1043                                  __pstringtext11 1049  
                                __pstringtext12 104F                                  __pstringtext13 1055  
                                __pstringtext14 105B                                  __pstringtext15 1061  
                                __pstringtext16 1066                                  __pstringtext17 0000  
          __end_of_ADCC_DefaultInterruptHandler 0003           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 0002                                        intlevel1 0000  
                                _thresholdCount 00A9                            ?_EUSART1_Receive_ISR 0077  
                                 writeData@data 002E                                ___lwmod@dividend 002A  
                       ?_PIN_MANAGER_Initialize 0077                        __end_of_I2C1_MasterWrite 0CF6  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 0982         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 0979                   __end_of_I2C1_FunctionComplete 0A2A  
                         ?_I2C1_MasterTRBInsert 0020                                 _PWM1_Initialize 09A0  
                 ?_TMR0_DefaultInterruptHandler 0077                     __size_of_PWM2_LoadDutyValue 001E  
                        TM1650_fastPrintNum@num 0034                               _lastLedActiveTime 0134  
                                      printf@ap 006C  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                   PWM3_LoadDutyValue@dutyValue 0020                           CONTROLLER_task@status 00DE  
                               _TM1650_setDigit 0A3B                                     ??_vfpfcnvrt 005A  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 00CD  
                                 __pstringtext1 0746                                   __pstringtext2 1000  
                                 __pstringtext3 100A                                   __pstringtext4 1013  
                                 __pstringtext5 101C                                   __pstringtext6 1025  
                                 __pstringtext7 102D                                   __pstringtext8 1035  
                                 __pstringtext9 103C                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0028  
                                   ?_CLOCK_init 0077                                 _TMR0_Initialize 0A61  
                               _PWM2_Initialize 09AB                                 ___lwmod@counter 002D  
                      _I2C1_MasterWriteTRBBuild 0C15                                     ??_writeData 002F  
                                    _TX1STAbits 011E                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0078                  __end_of_PIN_MANAGER_Initialize 0E21  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 0A89  
                            __size_of_I2C1_Stop 0018                   ?_ADCC_DefaultInterruptHandler 0077  
                    __end_of_PWM1_LoadDutyValue 0B9B                         ??_EUSART1_RxDataHandler 0077  
                               _PWM3_Initialize 09B6  
