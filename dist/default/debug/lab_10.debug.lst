

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 27 23:39:16 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	stringtext14,global,class=STRCODE,delta=2
    21                           	psect	stringtext15,global,class=STRCODE,delta=2
    22                           	psect	stringtext16,global,class=STRCODE,delta=2
    23                           	psect	stringtext17,global,class=STRCODE,delta=2
    24                           	psect	cinit,global,class=CODE,merge=1,delta=2
    25                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    29                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    30                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    36                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    37                           	psect	text1,local,class=CODE,merge=1,delta=2
    38                           	psect	text2,local,class=CODE,merge=1,delta=2
    39                           	psect	text3,local,class=CODE,merge=1,delta=2
    40                           	psect	text4,local,class=CODE,merge=1,delta=2
    41                           	psect	text5,local,class=CODE,merge=1,delta=2
    42                           	psect	text6,local,class=CODE,merge=1,delta=2
    43                           	psect	text7,local,class=CODE,merge=1,delta=2
    44                           	psect	text8,local,class=CODE,merge=1,delta=2
    45                           	psect	text9,local,class=CODE,merge=1,delta=2
    46                           	psect	text10,local,class=CODE,merge=1,delta=2
    47                           	psect	text11,local,class=CODE,merge=1,delta=2
    48                           	psect	text12,local,class=CODE,merge=1,delta=2
    49                           	psect	text13,local,class=CODE,merge=1,delta=2
    50                           	psect	text14,local,class=CODE,merge=1,delta=2
    51                           	psect	text15,local,class=CODE,merge=1,delta=2
    52                           	psect	text16,local,class=CODE,merge=1,delta=2
    53                           	psect	text17,local,class=CODE,merge=1,delta=2
    54                           	psect	text18,local,class=CODE,merge=1,delta=2
    55                           	psect	text19,local,class=CODE,merge=1,delta=2
    56                           	psect	text20,local,class=CODE,merge=1,delta=2
    57                           	psect	text21,local,class=CODE,merge=1,delta=2
    58                           	psect	text22,local,class=CODE,merge=1,delta=2
    59                           	psect	text23,local,class=CODE,merge=1,delta=2
    60                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text29,local,class=CODE,merge=1,delta=2
    66                           	psect	text30,local,class=CODE,merge=1,delta=2
    67                           	psect	text31,local,class=CODE,merge=1,delta=2
    68                           	psect	text32,local,class=CODE,merge=1,delta=2
    69                           	psect	text33,local,class=CODE,merge=1,delta=2
    70                           	psect	text34,local,class=CODE,merge=1,delta=2
    71                           	psect	text35,local,class=CODE,merge=1,delta=2
    72                           	psect	text36,local,class=CODE,merge=1,delta=2
    73                           	psect	text37,local,class=CODE,merge=1,delta=2
    74                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text39,local,class=CODE,merge=1,delta=2
    76                           	psect	text40,local,class=CODE,merge=1,delta=2
    77                           	psect	text41,local,class=CODE,merge=1,delta=2
    78                           	psect	text42,local,class=CODE,merge=1,delta=2
    79                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text46,local,class=CODE,merge=1,delta=2
    83                           	psect	text47,local,class=CODE,merge=1,delta=2
    84                           	psect	text48,local,class=CODE,merge=1,delta=2
    85                           	psect	text49,local,class=CODE,merge=1,delta=2
    86                           	psect	text50,local,class=CODE,merge=1,delta=2
    87                           	psect	text51,local,class=CODE,merge=1,delta=2
    88                           	psect	text52,local,class=CODE,merge=1,delta=2
    89                           	psect	text53,local,class=CODE,merge=1,delta=2
    90                           	psect	text54,local,class=CODE,merge=1,delta=2
    91                           	psect	text55,local,class=CODE,merge=1,delta=2
    92                           	psect	text56,local,class=CODE,merge=1,delta=2
    93                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
    95                           	psect	text59,local,class=CODE,merge=1,delta=2
    96                           	psect	text60,local,class=CODE,merge=1,delta=2
    97                           	psect	text61,local,class=CODE,merge=1,delta=2
    98                           	psect	text62,local,class=CODE,merge=1,delta=2
    99                           	psect	text63,local,class=CODE,merge=1,delta=2
   100                           	psect	text64,local,class=CODE,merge=1,delta=2
   101                           	psect	text65,local,class=CODE,merge=1,delta=2
   102                           	psect	text66,local,class=CODE,merge=1,delta=2
   103                           	psect	text67,local,class=CODE,merge=1,delta=2
   104                           	psect	text68,local,class=CODE,merge=1,delta=2
   105                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text70,local,class=CODE,merge=1,delta=2
   107                           	psect	text71,local,class=CODE,merge=1,delta=2
   108                           	psect	text72,local,class=CODE,merge=1,delta=2
   109                           	psect	text73,local,class=CODE,merge=1,delta=2
   110                           	psect	text74,local,class=CODE,merge=1,delta=2
   111                           	psect	intentry,global,class=CODE,delta=2
   112                           	psect	text76,local,class=CODE,merge=1,delta=2
   113                           	psect	text77,local,class=CODE,merge=1,delta=2
   114                           	psect	text78,local,class=CODE,merge=1,delta=2
   115                           	psect	text79,local,class=CODE,merge=1,delta=2
   116                           	psect	text80,local,class=CODE,merge=1,delta=2
   117                           	psect	text81,local,class=CODE,merge=1,delta=2
   118                           	psect	text82,local,class=CODE,merge=1,delta=2
   119                           	psect	text83,local,class=CODE,merge=1,delta=2
   120                           	psect	text84,local,class=CODE,merge=1,delta=2
   121                           	psect	text85,local,class=CODE,merge=1,delta=2
   122                           	psect	text86,local,class=CODE,merge=1,delta=2
   123                           	psect	text87,local,class=CODE,merge=1,delta=2
   124                           	psect	text88,local,class=CODE,merge=1,delta=2
   125                           	psect	text89,local,class=CODE,merge=1,delta=2
   126                           	psect	text90,local,class=CODE,merge=1,delta=2
   127                           	psect	text91,local,class=CODE,merge=1,delta=2
   128                           	dabs	1,0xCA0,32
   129                           	dabs	1,0xC20,80
   130                           	dabs	1,0xBA0,80
   131                           	dabs	1,0xB20,80
   132                           	dabs	1,0xAA0,80
   133                           	dabs	1,0xA20,80
   134                           	dabs	1,0x9A0,80
   135                           	dabs	1,0x920,80
   136                           	dabs	1,0x8A0,80
   137                           	dabs	1,0x820,80
   138                           	dabs	1,0x7A0,80
   139                           	dabs	1,0x720,80
   140                           	dabs	1,0x6A0,80
   141                           	dabs	1,0x64E,34
   142                           	dabs	1,0x23EE,0,_dmxArray
   143                           	dabs	1,0x7E,2
   144  0000                     
   145                           ; Version 2.05
   146                           ; Generated 20/12/2018 GMT
   147                           ; 
   148                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   149                           ; All rights reserved.
   150                           ; 
   151                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   152                           ; 
   153                           ; Redistribution and use in source and binary forms, with or without modification, are
   154                           ; permitted provided that the following conditions are met:
   155                           ; 
   156                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   157                           ;        conditions and the following disclaimer.
   158                           ; 
   159                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   160                           ;        of conditions and the following disclaimer in the documentation and/or other
   161                           ;        materials provided with the distribution.
   162                           ; 
   163                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   164                           ;        software without specific prior written permission.
   165                           ; 
   166                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   167                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   168                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   169                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   170                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   171                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   172                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   173                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   174                           ; 
   175                           ; 
   176                           ; Code-generator required, PIC16F18446 Definitions
   177                           ; 
   178                           ; SFR Addresses
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  008C                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  008E                     	;# 
   205  008F                     	;# 
   206  0090                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  010F                     	;# 
   234  0110                     	;# 
   235  0111                     	;# 
   236  0112                     	;# 
   237  0113                     	;# 
   238  0114                     	;# 
   239  0115                     	;# 
   240  0116                     	;# 
   241  0117                     	;# 
   242  0118                     	;# 
   243  0119                     	;# 
   244  0119                     	;# 
   245  0119                     	;# 
   246  011A                     	;# 
   247  011A                     	;# 
   248  011A                     	;# 
   249  011B                     	;# 
   250  011B                     	;# 
   251  011B                     	;# 
   252  011B                     	;# 
   253  011B                     	;# 
   254  011C                     	;# 
   255  011C                     	;# 
   256  011C                     	;# 
   257  011D                     	;# 
   258  011D                     	;# 
   259  011D                     	;# 
   260  011E                     	;# 
   261  011E                     	;# 
   262  011E                     	;# 
   263  011F                     	;# 
   264  011F                     	;# 
   265  011F                     	;# 
   266  011F                     	;# 
   267  011F                     	;# 
   268  018C                     	;# 
   269  018D                     	;# 
   270  018E                     	;# 
   271  018F                     	;# 
   272  0190                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0196                     	;# 
   276  0197                     	;# 
   277  0198                     	;# 
   278  0199                     	;# 
   279  019A                     	;# 
   280  019B                     	;# 
   281  019C                     	;# 
   282  020C                     	;# 
   283  020D                     	;# 
   284  020E                     	;# 
   285  020E                     	;# 
   286  020F                     	;# 
   287  020F                     	;# 
   288  0210                     	;# 
   289  0210                     	;# 
   290  0211                     	;# 
   291  0211                     	;# 
   292  0212                     	;# 
   293  0213                     	;# 
   294  0214                     	;# 
   295  0214                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0216                     	;# 
   299  0216                     	;# 
   300  0217                     	;# 
   301  0217                     	;# 
   302  0218                     	;# 
   303  0219                     	;# 
   304  021A                     	;# 
   305  021A                     	;# 
   306  021B                     	;# 
   307  021B                     	;# 
   308  021C                     	;# 
   309  021C                     	;# 
   310  021D                     	;# 
   311  021D                     	;# 
   312  021E                     	;# 
   313  021F                     	;# 
   314  028C                     	;# 
   315  028C                     	;# 
   316  028D                     	;# 
   317  028D                     	;# 
   318  028E                     	;# 
   319  028F                     	;# 
   320  0290                     	;# 
   321  0291                     	;# 
   322  0292                     	;# 
   323  0292                     	;# 
   324  0293                     	;# 
   325  0293                     	;# 
   326  0294                     	;# 
   327  0295                     	;# 
   328  0296                     	;# 
   329  0297                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  0299                     	;# 
   334  029A                     	;# 
   335  029B                     	;# 
   336  029C                     	;# 
   337  029D                     	;# 
   338  029F                     	;# 
   339  030C                     	;# 
   340  030C                     	;# 
   341  030D                     	;# 
   342  030E                     	;# 
   343  030F                     	;# 
   344  0310                     	;# 
   345  0310                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0314                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0317                     	;# 
   354  0318                     	;# 
   355  0318                     	;# 
   356  0319                     	;# 
   357  031A                     	;# 
   358  031B                     	;# 
   359  038C                     	;# 
   360  038C                     	;# 
   361  038D                     	;# 
   362  038E                     	;# 
   363  0390                     	;# 
   364  0390                     	;# 
   365  0391                     	;# 
   366  0392                     	;# 
   367  048C                     	;# 
   368  048C                     	;# 
   369  048D                     	;# 
   370  048E                     	;# 
   371  048F                     	;# 
   372  048F                     	;# 
   373  0490                     	;# 
   374  0491                     	;# 
   375  0492                     	;# 
   376  0492                     	;# 
   377  0493                     	;# 
   378  0494                     	;# 
   379  0495                     	;# 
   380  0495                     	;# 
   381  0496                     	;# 
   382  0497                     	;# 
   383  0498                     	;# 
   384  0499                     	;# 
   385  049A                     	;# 
   386  049B                     	;# 
   387  049C                     	;# 
   388  049D                     	;# 
   389  058C                     	;# 
   390  058C                     	;# 
   391  058D                     	;# 
   392  058E                     	;# 
   393  058F                     	;# 
   394  058F                     	;# 
   395  0590                     	;# 
   396  0591                     	;# 
   397  0592                     	;# 
   398  0593                     	;# 
   399  059C                     	;# 
   400  059C                     	;# 
   401  059D                     	;# 
   402  059D                     	;# 
   403  059E                     	;# 
   404  059F                     	;# 
   405  060C                     	;# 
   406  060C                     	;# 
   407  060D                     	;# 
   408  060D                     	;# 
   409  060E                     	;# 
   410  060F                     	;# 
   411  0610                     	;# 
   412  0611                     	;# 
   413  0612                     	;# 
   414  0613                     	;# 
   415  0614                     	;# 
   416  0616                     	;# 
   417  0616                     	;# 
   418  0617                     	;# 
   419  0617                     	;# 
   420  0618                     	;# 
   421  0619                     	;# 
   422  061A                     	;# 
   423  061B                     	;# 
   424  061C                     	;# 
   425  061D                     	;# 
   426  061E                     	;# 
   427  070C                     	;# 
   428  070D                     	;# 
   429  070E                     	;# 
   430  070F                     	;# 
   431  0710                     	;# 
   432  0711                     	;# 
   433  0712                     	;# 
   434  0713                     	;# 
   435  0714                     	;# 
   436  0716                     	;# 
   437  0717                     	;# 
   438  0718                     	;# 
   439  0719                     	;# 
   440  071A                     	;# 
   441  071B                     	;# 
   442  071C                     	;# 
   443  071D                     	;# 
   444  071E                     	;# 
   445  0796                     	;# 
   446  0797                     	;# 
   447  0798                     	;# 
   448  0799                     	;# 
   449  079A                     	;# 
   450  079B                     	;# 
   451  079C                     	;# 
   452  079D                     	;# 
   453  080C                     	;# 
   454  080D                     	;# 
   455  080E                     	;# 
   456  080F                     	;# 
   457  0810                     	;# 
   458  0811                     	;# 
   459  0812                     	;# 
   460  0813                     	;# 
   461  0814                     	;# 
   462  081A                     	;# 
   463  081A                     	;# 
   464  081B                     	;# 
   465  081C                     	;# 
   466  081C                     	;# 
   467  081D                     	;# 
   468  081E                     	;# 
   469  081F                     	;# 
   470  088C                     	;# 
   471  088D                     	;# 
   472  088E                     	;# 
   473  088F                     	;# 
   474  0890                     	;# 
   475  0891                     	;# 
   476  0892                     	;# 
   477  0893                     	;# 
   478  0895                     	;# 
   479  0896                     	;# 
   480  0897                     	;# 
   481  0898                     	;# 
   482  0899                     	;# 
   483  089A                     	;# 
   484  089B                     	;# 
   485  090C                     	;# 
   486  090E                     	;# 
   487  090F                     	;# 
   488  091F                     	;# 
   489  098F                     	;# 
   490  098F                     	;# 
   491  0990                     	;# 
   492  0991                     	;# 
   493  0992                     	;# 
   494  0993                     	;# 
   495  0994                     	;# 
   496  0995                     	;# 
   497  0996                     	;# 
   498  0997                     	;# 
   499  1E0F                     	;# 
   500  1E10                     	;# 
   501  1E11                     	;# 
   502  1E12                     	;# 
   503  1E13                     	;# 
   504  1E14                     	;# 
   505  1E15                     	;# 
   506  1E16                     	;# 
   507  1E17                     	;# 
   508  1E18                     	;# 
   509  1E19                     	;# 
   510  1E1A                     	;# 
   511  1E1B                     	;# 
   512  1E1C                     	;# 
   513  1E1D                     	;# 
   514  1E1E                     	;# 
   515  1E1F                     	;# 
   516  1E20                     	;# 
   517  1E21                     	;# 
   518  1E22                     	;# 
   519  1E23                     	;# 
   520  1E24                     	;# 
   521  1E25                     	;# 
   522  1E26                     	;# 
   523  1E27                     	;# 
   524  1E28                     	;# 
   525  1E29                     	;# 
   526  1E2A                     	;# 
   527  1E2B                     	;# 
   528  1E2C                     	;# 
   529  1E2D                     	;# 
   530  1E2E                     	;# 
   531  1E2F                     	;# 
   532  1E30                     	;# 
   533  1E31                     	;# 
   534  1E32                     	;# 
   535  1E33                     	;# 
   536  1E34                     	;# 
   537  1E35                     	;# 
   538  1E36                     	;# 
   539  1E37                     	;# 
   540  1E8F                     	;# 
   541  1E90                     	;# 
   542  1E91                     	;# 
   543  1E92                     	;# 
   544  1E93                     	;# 
   545  1E94                     	;# 
   546  1E95                     	;# 
   547  1E96                     	;# 
   548  1E97                     	;# 
   549  1E9C                     	;# 
   550  1E9D                     	;# 
   551  1E9E                     	;# 
   552  1EA1                     	;# 
   553  1EA2                     	;# 
   554  1EA3                     	;# 
   555  1EA4                     	;# 
   556  1EA9                     	;# 
   557  1EAA                     	;# 
   558  1EB1                     	;# 
   559  1EB2                     	;# 
   560  1EB8                     	;# 
   561  1EB9                     	;# 
   562  1EBA                     	;# 
   563  1EBB                     	;# 
   564  1EBC                     	;# 
   565  1EBD                     	;# 
   566  1EBE                     	;# 
   567  1EC3                     	;# 
   568  1EC5                     	;# 
   569  1EC6                     	;# 
   570  1EC7                     	;# 
   571  1EC8                     	;# 
   572  1EC9                     	;# 
   573  1ECA                     	;# 
   574  1ECB                     	;# 
   575  1ECB                     	;# 
   576  1ECB                     	;# 
   577  1ECC                     	;# 
   578  1ECC                     	;# 
   579  1ECC                     	;# 
   580  1F10                     	;# 
   581  1F11                     	;# 
   582  1F12                     	;# 
   583  1F14                     	;# 
   584  1F15                     	;# 
   585  1F1C                     	;# 
   586  1F1D                     	;# 
   587  1F1E                     	;# 
   588  1F1F                     	;# 
   589  1F20                     	;# 
   590  1F21                     	;# 
   591  1F22                     	;# 
   592  1F23                     	;# 
   593  1F24                     	;# 
   594  1F25                     	;# 
   595  1F26                     	;# 
   596  1F27                     	;# 
   597  1F38                     	;# 
   598  1F39                     	;# 
   599  1F3A                     	;# 
   600  1F3B                     	;# 
   601  1F3C                     	;# 
   602  1F3D                     	;# 
   603  1F3E                     	;# 
   604  1F3F                     	;# 
   605  1F43                     	;# 
   606  1F44                     	;# 
   607  1F45                     	;# 
   608  1F46                     	;# 
   609  1F47                     	;# 
   610  1F48                     	;# 
   611  1F49                     	;# 
   612  1F4A                     	;# 
   613  1F4E                     	;# 
   614  1F4F                     	;# 
   615  1F50                     	;# 
   616  1F51                     	;# 
   617  1F52                     	;# 
   618  1F53                     	;# 
   619  1F54                     	;# 
   620  1F55                     	;# 
   621  1FE4                     	;# 
   622  1FE5                     	;# 
   623  1FE6                     	;# 
   624  1FE7                     	;# 
   625  1FE8                     	;# 
   626  1FE8                     	;# 
   627  1FE9                     	;# 
   628  1FEA                     	;# 
   629  1FEB                     	;# 
   630  1FED                     	;# 
   631  1FEE                     	;# 
   632  1FEF                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0008                     	;# 
   642  0009                     	;# 
   643  000A                     	;# 
   644  000B                     	;# 
   645  000C                     	;# 
   646  000D                     	;# 
   647  000E                     	;# 
   648  0012                     	;# 
   649  0013                     	;# 
   650  0014                     	;# 
   651  0018                     	;# 
   652  0019                     	;# 
   653  001A                     	;# 
   654  008C                     	;# 
   655  008C                     	;# 
   656  008D                     	;# 
   657  008E                     	;# 
   658  008E                     	;# 
   659  008F                     	;# 
   660  0090                     	;# 
   661  0090                     	;# 
   662  0091                     	;# 
   663  0092                     	;# 
   664  0092                     	;# 
   665  0093                     	;# 
   666  0094                     	;# 
   667  0094                     	;# 
   668  0095                     	;# 
   669  0096                     	;# 
   670  0096                     	;# 
   671  0097                     	;# 
   672  0098                     	;# 
   673  0099                     	;# 
   674  009A                     	;# 
   675  009B                     	;# 
   676  009B                     	;# 
   677  009C                     	;# 
   678  009D                     	;# 
   679  009D                     	;# 
   680  009E                     	;# 
   681  009F                     	;# 
   682  010C                     	;# 
   683  010C                     	;# 
   684  010D                     	;# 
   685  010E                     	;# 
   686  010F                     	;# 
   687  010F                     	;# 
   688  0110                     	;# 
   689  0111                     	;# 
   690  0112                     	;# 
   691  0113                     	;# 
   692  0114                     	;# 
   693  0115                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0118                     	;# 
   697  0119                     	;# 
   698  0119                     	;# 
   699  0119                     	;# 
   700  011A                     	;# 
   701  011A                     	;# 
   702  011A                     	;# 
   703  011B                     	;# 
   704  011B                     	;# 
   705  011B                     	;# 
   706  011B                     	;# 
   707  011B                     	;# 
   708  011C                     	;# 
   709  011C                     	;# 
   710  011C                     	;# 
   711  011D                     	;# 
   712  011D                     	;# 
   713  011D                     	;# 
   714  011E                     	;# 
   715  011E                     	;# 
   716  011E                     	;# 
   717  011F                     	;# 
   718  011F                     	;# 
   719  011F                     	;# 
   720  011F                     	;# 
   721  011F                     	;# 
   722  018C                     	;# 
   723  018D                     	;# 
   724  018E                     	;# 
   725  018F                     	;# 
   726  0190                     	;# 
   727  0191                     	;# 
   728  0192                     	;# 
   729  0196                     	;# 
   730  0197                     	;# 
   731  0198                     	;# 
   732  0199                     	;# 
   733  019A                     	;# 
   734  019B                     	;# 
   735  019C                     	;# 
   736  020C                     	;# 
   737  020D                     	;# 
   738  020E                     	;# 
   739  020E                     	;# 
   740  020F                     	;# 
   741  020F                     	;# 
   742  0210                     	;# 
   743  0210                     	;# 
   744  0211                     	;# 
   745  0211                     	;# 
   746  0212                     	;# 
   747  0213                     	;# 
   748  0214                     	;# 
   749  0214                     	;# 
   750  0215                     	;# 
   751  0215                     	;# 
   752  0216                     	;# 
   753  0216                     	;# 
   754  0217                     	;# 
   755  0217                     	;# 
   756  0218                     	;# 
   757  0219                     	;# 
   758  021A                     	;# 
   759  021A                     	;# 
   760  021B                     	;# 
   761  021B                     	;# 
   762  021C                     	;# 
   763  021C                     	;# 
   764  021D                     	;# 
   765  021D                     	;# 
   766  021E                     	;# 
   767  021F                     	;# 
   768  028C                     	;# 
   769  028C                     	;# 
   770  028D                     	;# 
   771  028D                     	;# 
   772  028E                     	;# 
   773  028F                     	;# 
   774  0290                     	;# 
   775  0291                     	;# 
   776  0292                     	;# 
   777  0292                     	;# 
   778  0293                     	;# 
   779  0293                     	;# 
   780  0294                     	;# 
   781  0295                     	;# 
   782  0296                     	;# 
   783  0297                     	;# 
   784  0298                     	;# 
   785  0298                     	;# 
   786  0299                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  029B                     	;# 
   790  029C                     	;# 
   791  029D                     	;# 
   792  029F                     	;# 
   793  030C                     	;# 
   794  030C                     	;# 
   795  030D                     	;# 
   796  030E                     	;# 
   797  030F                     	;# 
   798  0310                     	;# 
   799  0310                     	;# 
   800  0311                     	;# 
   801  0312                     	;# 
   802  0313                     	;# 
   803  0314                     	;# 
   804  0314                     	;# 
   805  0315                     	;# 
   806  0316                     	;# 
   807  0317                     	;# 
   808  0318                     	;# 
   809  0318                     	;# 
   810  0319                     	;# 
   811  031A                     	;# 
   812  031B                     	;# 
   813  038C                     	;# 
   814  038C                     	;# 
   815  038D                     	;# 
   816  038E                     	;# 
   817  0390                     	;# 
   818  0390                     	;# 
   819  0391                     	;# 
   820  0392                     	;# 
   821  048C                     	;# 
   822  048C                     	;# 
   823  048D                     	;# 
   824  048E                     	;# 
   825  048F                     	;# 
   826  048F                     	;# 
   827  0490                     	;# 
   828  0491                     	;# 
   829  0492                     	;# 
   830  0492                     	;# 
   831  0493                     	;# 
   832  0494                     	;# 
   833  0495                     	;# 
   834  0495                     	;# 
   835  0496                     	;# 
   836  0497                     	;# 
   837  0498                     	;# 
   838  0499                     	;# 
   839  049A                     	;# 
   840  049B                     	;# 
   841  049C                     	;# 
   842  049D                     	;# 
   843  058C                     	;# 
   844  058C                     	;# 
   845  058D                     	;# 
   846  058E                     	;# 
   847  058F                     	;# 
   848  058F                     	;# 
   849  0590                     	;# 
   850  0591                     	;# 
   851  0592                     	;# 
   852  0593                     	;# 
   853  059C                     	;# 
   854  059C                     	;# 
   855  059D                     	;# 
   856  059D                     	;# 
   857  059E                     	;# 
   858  059F                     	;# 
   859  060C                     	;# 
   860  060C                     	;# 
   861  060D                     	;# 
   862  060D                     	;# 
   863  060E                     	;# 
   864  060F                     	;# 
   865  0610                     	;# 
   866  0611                     	;# 
   867  0612                     	;# 
   868  0613                     	;# 
   869  0614                     	;# 
   870  0616                     	;# 
   871  0616                     	;# 
   872  0617                     	;# 
   873  0617                     	;# 
   874  0618                     	;# 
   875  0619                     	;# 
   876  061A                     	;# 
   877  061B                     	;# 
   878  061C                     	;# 
   879  061D                     	;# 
   880  061E                     	;# 
   881  070C                     	;# 
   882  070D                     	;# 
   883  070E                     	;# 
   884  070F                     	;# 
   885  0710                     	;# 
   886  0711                     	;# 
   887  0712                     	;# 
   888  0713                     	;# 
   889  0714                     	;# 
   890  0716                     	;# 
   891  0717                     	;# 
   892  0718                     	;# 
   893  0719                     	;# 
   894  071A                     	;# 
   895  071B                     	;# 
   896  071C                     	;# 
   897  071D                     	;# 
   898  071E                     	;# 
   899  0796                     	;# 
   900  0797                     	;# 
   901  0798                     	;# 
   902  0799                     	;# 
   903  079A                     	;# 
   904  079B                     	;# 
   905  079C                     	;# 
   906  079D                     	;# 
   907  080C                     	;# 
   908  080D                     	;# 
   909  080E                     	;# 
   910  080F                     	;# 
   911  0810                     	;# 
   912  0811                     	;# 
   913  0812                     	;# 
   914  0813                     	;# 
   915  0814                     	;# 
   916  081A                     	;# 
   917  081A                     	;# 
   918  081B                     	;# 
   919  081C                     	;# 
   920  081C                     	;# 
   921  081D                     	;# 
   922  081E                     	;# 
   923  081F                     	;# 
   924  088C                     	;# 
   925  088D                     	;# 
   926  088E                     	;# 
   927  088F                     	;# 
   928  0890                     	;# 
   929  0891                     	;# 
   930  0892                     	;# 
   931  0893                     	;# 
   932  0895                     	;# 
   933  0896                     	;# 
   934  0897                     	;# 
   935  0898                     	;# 
   936  0899                     	;# 
   937  089A                     	;# 
   938  089B                     	;# 
   939  090C                     	;# 
   940  090E                     	;# 
   941  090F                     	;# 
   942  091F                     	;# 
   943  098F                     	;# 
   944  098F                     	;# 
   945  0990                     	;# 
   946  0991                     	;# 
   947  0992                     	;# 
   948  0993                     	;# 
   949  0994                     	;# 
   950  0995                     	;# 
   951  0996                     	;# 
   952  0997                     	;# 
   953  1E0F                     	;# 
   954  1E10                     	;# 
   955  1E11                     	;# 
   956  1E12                     	;# 
   957  1E13                     	;# 
   958  1E14                     	;# 
   959  1E15                     	;# 
   960  1E16                     	;# 
   961  1E17                     	;# 
   962  1E18                     	;# 
   963  1E19                     	;# 
   964  1E1A                     	;# 
   965  1E1B                     	;# 
   966  1E1C                     	;# 
   967  1E1D                     	;# 
   968  1E1E                     	;# 
   969  1E1F                     	;# 
   970  1E20                     	;# 
   971  1E21                     	;# 
   972  1E22                     	;# 
   973  1E23                     	;# 
   974  1E24                     	;# 
   975  1E25                     	;# 
   976  1E26                     	;# 
   977  1E27                     	;# 
   978  1E28                     	;# 
   979  1E29                     	;# 
   980  1E2A                     	;# 
   981  1E2B                     	;# 
   982  1E2C                     	;# 
   983  1E2D                     	;# 
   984  1E2E                     	;# 
   985  1E2F                     	;# 
   986  1E30                     	;# 
   987  1E31                     	;# 
   988  1E32                     	;# 
   989  1E33                     	;# 
   990  1E34                     	;# 
   991  1E35                     	;# 
   992  1E36                     	;# 
   993  1E37                     	;# 
   994  1E8F                     	;# 
   995  1E90                     	;# 
   996  1E91                     	;# 
   997  1E92                     	;# 
   998  1E93                     	;# 
   999  1E94                     	;# 
  1000  1E95                     	;# 
  1001  1E96                     	;# 
  1002  1E97                     	;# 
  1003  1E9C                     	;# 
  1004  1E9D                     	;# 
  1005  1E9E                     	;# 
  1006  1EA1                     	;# 
  1007  1EA2                     	;# 
  1008  1EA3                     	;# 
  1009  1EA4                     	;# 
  1010  1EA9                     	;# 
  1011  1EAA                     	;# 
  1012  1EB1                     	;# 
  1013  1EB2                     	;# 
  1014  1EB8                     	;# 
  1015  1EB9                     	;# 
  1016  1EBA                     	;# 
  1017  1EBB                     	;# 
  1018  1EBC                     	;# 
  1019  1EBD                     	;# 
  1020  1EBE                     	;# 
  1021  1EC3                     	;# 
  1022  1EC5                     	;# 
  1023  1EC6                     	;# 
  1024  1EC7                     	;# 
  1025  1EC8                     	;# 
  1026  1EC9                     	;# 
  1027  1ECA                     	;# 
  1028  1ECB                     	;# 
  1029  1ECB                     	;# 
  1030  1ECB                     	;# 
  1031  1ECC                     	;# 
  1032  1ECC                     	;# 
  1033  1ECC                     	;# 
  1034  1F10                     	;# 
  1035  1F11                     	;# 
  1036  1F12                     	;# 
  1037  1F14                     	;# 
  1038  1F15                     	;# 
  1039  1F1C                     	;# 
  1040  1F1D                     	;# 
  1041  1F1E                     	;# 
  1042  1F1F                     	;# 
  1043  1F20                     	;# 
  1044  1F21                     	;# 
  1045  1F22                     	;# 
  1046  1F23                     	;# 
  1047  1F24                     	;# 
  1048  1F25                     	;# 
  1049  1F26                     	;# 
  1050  1F27                     	;# 
  1051  1F38                     	;# 
  1052  1F39                     	;# 
  1053  1F3A                     	;# 
  1054  1F3B                     	;# 
  1055  1F3C                     	;# 
  1056  1F3D                     	;# 
  1057  1F3E                     	;# 
  1058  1F3F                     	;# 
  1059  1F43                     	;# 
  1060  1F44                     	;# 
  1061  1F45                     	;# 
  1062  1F46                     	;# 
  1063  1F47                     	;# 
  1064  1F48                     	;# 
  1065  1F49                     	;# 
  1066  1F4A                     	;# 
  1067  1F4E                     	;# 
  1068  1F4F                     	;# 
  1069  1F50                     	;# 
  1070  1F51                     	;# 
  1071  1F52                     	;# 
  1072  1F53                     	;# 
  1073  1F54                     	;# 
  1074  1F55                     	;# 
  1075  1FE4                     	;# 
  1076  1FE5                     	;# 
  1077  1FE6                     	;# 
  1078  1FE7                     	;# 
  1079  1FE8                     	;# 
  1080  1FE8                     	;# 
  1081  1FE9                     	;# 
  1082  1FEA                     	;# 
  1083  1FEB                     	;# 
  1084  1FED                     	;# 
  1085  1FEE                     	;# 
  1086  1FEF                     	;# 
  1087  0000                     	;# 
  1088  0001                     	;# 
  1089  0002                     	;# 
  1090  0003                     	;# 
  1091  0004                     	;# 
  1092  0005                     	;# 
  1093  0006                     	;# 
  1094  0007                     	;# 
  1095  0008                     	;# 
  1096  0009                     	;# 
  1097  000A                     	;# 
  1098  000B                     	;# 
  1099  000C                     	;# 
  1100  000D                     	;# 
  1101  000E                     	;# 
  1102  0012                     	;# 
  1103  0013                     	;# 
  1104  0014                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  008C                     	;# 
  1109  008C                     	;# 
  1110  008D                     	;# 
  1111  008E                     	;# 
  1112  008E                     	;# 
  1113  008F                     	;# 
  1114  0090                     	;# 
  1115  0090                     	;# 
  1116  0091                     	;# 
  1117  0092                     	;# 
  1118  0092                     	;# 
  1119  0093                     	;# 
  1120  0094                     	;# 
  1121  0094                     	;# 
  1122  0095                     	;# 
  1123  0096                     	;# 
  1124  0096                     	;# 
  1125  0097                     	;# 
  1126  0098                     	;# 
  1127  0099                     	;# 
  1128  009A                     	;# 
  1129  009B                     	;# 
  1130  009B                     	;# 
  1131  009C                     	;# 
  1132  009D                     	;# 
  1133  009D                     	;# 
  1134  009E                     	;# 
  1135  009F                     	;# 
  1136  010C                     	;# 
  1137  010C                     	;# 
  1138  010D                     	;# 
  1139  010E                     	;# 
  1140  010F                     	;# 
  1141  010F                     	;# 
  1142  0110                     	;# 
  1143  0111                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0115                     	;# 
  1148  0116                     	;# 
  1149  0117                     	;# 
  1150  0118                     	;# 
  1151  0119                     	;# 
  1152  0119                     	;# 
  1153  0119                     	;# 
  1154  011A                     	;# 
  1155  011A                     	;# 
  1156  011A                     	;# 
  1157  011B                     	;# 
  1158  011B                     	;# 
  1159  011B                     	;# 
  1160  011B                     	;# 
  1161  011B                     	;# 
  1162  011C                     	;# 
  1163  011C                     	;# 
  1164  011C                     	;# 
  1165  011D                     	;# 
  1166  011D                     	;# 
  1167  011D                     	;# 
  1168  011E                     	;# 
  1169  011E                     	;# 
  1170  011E                     	;# 
  1171  011F                     	;# 
  1172  011F                     	;# 
  1173  011F                     	;# 
  1174  011F                     	;# 
  1175  011F                     	;# 
  1176  018C                     	;# 
  1177  018D                     	;# 
  1178  018E                     	;# 
  1179  018F                     	;# 
  1180  0190                     	;# 
  1181  0191                     	;# 
  1182  0192                     	;# 
  1183  0196                     	;# 
  1184  0197                     	;# 
  1185  0198                     	;# 
  1186  0199                     	;# 
  1187  019A                     	;# 
  1188  019B                     	;# 
  1189  019C                     	;# 
  1190  020C                     	;# 
  1191  020D                     	;# 
  1192  020E                     	;# 
  1193  020E                     	;# 
  1194  020F                     	;# 
  1195  020F                     	;# 
  1196  0210                     	;# 
  1197  0210                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0213                     	;# 
  1202  0214                     	;# 
  1203  0214                     	;# 
  1204  0215                     	;# 
  1205  0215                     	;# 
  1206  0216                     	;# 
  1207  0216                     	;# 
  1208  0217                     	;# 
  1209  0217                     	;# 
  1210  0218                     	;# 
  1211  0219                     	;# 
  1212  021A                     	;# 
  1213  021A                     	;# 
  1214  021B                     	;# 
  1215  021B                     	;# 
  1216  021C                     	;# 
  1217  021C                     	;# 
  1218  021D                     	;# 
  1219  021D                     	;# 
  1220  021E                     	;# 
  1221  021F                     	;# 
  1222  028C                     	;# 
  1223  028C                     	;# 
  1224  028D                     	;# 
  1225  028D                     	;# 
  1226  028E                     	;# 
  1227  028F                     	;# 
  1228  0290                     	;# 
  1229  0291                     	;# 
  1230  0292                     	;# 
  1231  0292                     	;# 
  1232  0293                     	;# 
  1233  0293                     	;# 
  1234  0294                     	;# 
  1235  0295                     	;# 
  1236  0296                     	;# 
  1237  0297                     	;# 
  1238  0298                     	;# 
  1239  0298                     	;# 
  1240  0299                     	;# 
  1241  0299                     	;# 
  1242  029A                     	;# 
  1243  029B                     	;# 
  1244  029C                     	;# 
  1245  029D                     	;# 
  1246  029F                     	;# 
  1247  030C                     	;# 
  1248  030C                     	;# 
  1249  030D                     	;# 
  1250  030E                     	;# 
  1251  030F                     	;# 
  1252  0310                     	;# 
  1253  0310                     	;# 
  1254  0311                     	;# 
  1255  0312                     	;# 
  1256  0313                     	;# 
  1257  0314                     	;# 
  1258  0314                     	;# 
  1259  0315                     	;# 
  1260  0316                     	;# 
  1261  0317                     	;# 
  1262  0318                     	;# 
  1263  0318                     	;# 
  1264  0319                     	;# 
  1265  031A                     	;# 
  1266  031B                     	;# 
  1267  038C                     	;# 
  1268  038C                     	;# 
  1269  038D                     	;# 
  1270  038E                     	;# 
  1271  0390                     	;# 
  1272  0390                     	;# 
  1273  0391                     	;# 
  1274  0392                     	;# 
  1275  048C                     	;# 
  1276  048C                     	;# 
  1277  048D                     	;# 
  1278  048E                     	;# 
  1279  048F                     	;# 
  1280  048F                     	;# 
  1281  0490                     	;# 
  1282  0491                     	;# 
  1283  0492                     	;# 
  1284  0492                     	;# 
  1285  0493                     	;# 
  1286  0494                     	;# 
  1287  0495                     	;# 
  1288  0495                     	;# 
  1289  0496                     	;# 
  1290  0497                     	;# 
  1291  0498                     	;# 
  1292  0499                     	;# 
  1293  049A                     	;# 
  1294  049B                     	;# 
  1295  049C                     	;# 
  1296  049D                     	;# 
  1297  058C                     	;# 
  1298  058C                     	;# 
  1299  058D                     	;# 
  1300  058E                     	;# 
  1301  058F                     	;# 
  1302  058F                     	;# 
  1303  0590                     	;# 
  1304  0591                     	;# 
  1305  0592                     	;# 
  1306  0593                     	;# 
  1307  059C                     	;# 
  1308  059C                     	;# 
  1309  059D                     	;# 
  1310  059D                     	;# 
  1311  059E                     	;# 
  1312  059F                     	;# 
  1313  060C                     	;# 
  1314  060C                     	;# 
  1315  060D                     	;# 
  1316  060D                     	;# 
  1317  060E                     	;# 
  1318  060F                     	;# 
  1319  0610                     	;# 
  1320  0611                     	;# 
  1321  0612                     	;# 
  1322  0613                     	;# 
  1323  0614                     	;# 
  1324  0616                     	;# 
  1325  0616                     	;# 
  1326  0617                     	;# 
  1327  0617                     	;# 
  1328  0618                     	;# 
  1329  0619                     	;# 
  1330  061A                     	;# 
  1331  061B                     	;# 
  1332  061C                     	;# 
  1333  061D                     	;# 
  1334  061E                     	;# 
  1335  070C                     	;# 
  1336  070D                     	;# 
  1337  070E                     	;# 
  1338  070F                     	;# 
  1339  0710                     	;# 
  1340  0711                     	;# 
  1341  0712                     	;# 
  1342  0713                     	;# 
  1343  0714                     	;# 
  1344  0716                     	;# 
  1345  0717                     	;# 
  1346  0718                     	;# 
  1347  0719                     	;# 
  1348  071A                     	;# 
  1349  071B                     	;# 
  1350  071C                     	;# 
  1351  071D                     	;# 
  1352  071E                     	;# 
  1353  0796                     	;# 
  1354  0797                     	;# 
  1355  0798                     	;# 
  1356  0799                     	;# 
  1357  079A                     	;# 
  1358  079B                     	;# 
  1359  079C                     	;# 
  1360  079D                     	;# 
  1361  080C                     	;# 
  1362  080D                     	;# 
  1363  080E                     	;# 
  1364  080F                     	;# 
  1365  0810                     	;# 
  1366  0811                     	;# 
  1367  0812                     	;# 
  1368  0813                     	;# 
  1369  0814                     	;# 
  1370  081A                     	;# 
  1371  081A                     	;# 
  1372  081B                     	;# 
  1373  081C                     	;# 
  1374  081C                     	;# 
  1375  081D                     	;# 
  1376  081E                     	;# 
  1377  081F                     	;# 
  1378  088C                     	;# 
  1379  088D                     	;# 
  1380  088E                     	;# 
  1381  088F                     	;# 
  1382  0890                     	;# 
  1383  0891                     	;# 
  1384  0892                     	;# 
  1385  0893                     	;# 
  1386  0895                     	;# 
  1387  0896                     	;# 
  1388  0897                     	;# 
  1389  0898                     	;# 
  1390  0899                     	;# 
  1391  089A                     	;# 
  1392  089B                     	;# 
  1393  090C                     	;# 
  1394  090E                     	;# 
  1395  090F                     	;# 
  1396  091F                     	;# 
  1397  098F                     	;# 
  1398  098F                     	;# 
  1399  0990                     	;# 
  1400  0991                     	;# 
  1401  0992                     	;# 
  1402  0993                     	;# 
  1403  0994                     	;# 
  1404  0995                     	;# 
  1405  0996                     	;# 
  1406  0997                     	;# 
  1407  1E0F                     	;# 
  1408  1E10                     	;# 
  1409  1E11                     	;# 
  1410  1E12                     	;# 
  1411  1E13                     	;# 
  1412  1E14                     	;# 
  1413  1E15                     	;# 
  1414  1E16                     	;# 
  1415  1E17                     	;# 
  1416  1E18                     	;# 
  1417  1E19                     	;# 
  1418  1E1A                     	;# 
  1419  1E1B                     	;# 
  1420  1E1C                     	;# 
  1421  1E1D                     	;# 
  1422  1E1E                     	;# 
  1423  1E1F                     	;# 
  1424  1E20                     	;# 
  1425  1E21                     	;# 
  1426  1E22                     	;# 
  1427  1E23                     	;# 
  1428  1E24                     	;# 
  1429  1E25                     	;# 
  1430  1E26                     	;# 
  1431  1E27                     	;# 
  1432  1E28                     	;# 
  1433  1E29                     	;# 
  1434  1E2A                     	;# 
  1435  1E2B                     	;# 
  1436  1E2C                     	;# 
  1437  1E2D                     	;# 
  1438  1E2E                     	;# 
  1439  1E2F                     	;# 
  1440  1E30                     	;# 
  1441  1E31                     	;# 
  1442  1E32                     	;# 
  1443  1E33                     	;# 
  1444  1E34                     	;# 
  1445  1E35                     	;# 
  1446  1E36                     	;# 
  1447  1E37                     	;# 
  1448  1E8F                     	;# 
  1449  1E90                     	;# 
  1450  1E91                     	;# 
  1451  1E92                     	;# 
  1452  1E93                     	;# 
  1453  1E94                     	;# 
  1454  1E95                     	;# 
  1455  1E96                     	;# 
  1456  1E97                     	;# 
  1457  1E9C                     	;# 
  1458  1E9D                     	;# 
  1459  1E9E                     	;# 
  1460  1EA1                     	;# 
  1461  1EA2                     	;# 
  1462  1EA3                     	;# 
  1463  1EA4                     	;# 
  1464  1EA9                     	;# 
  1465  1EAA                     	;# 
  1466  1EB1                     	;# 
  1467  1EB2                     	;# 
  1468  1EB8                     	;# 
  1469  1EB9                     	;# 
  1470  1EBA                     	;# 
  1471  1EBB                     	;# 
  1472  1EBC                     	;# 
  1473  1EBD                     	;# 
  1474  1EBE                     	;# 
  1475  1EC3                     	;# 
  1476  1EC5                     	;# 
  1477  1EC6                     	;# 
  1478  1EC7                     	;# 
  1479  1EC8                     	;# 
  1480  1EC9                     	;# 
  1481  1ECA                     	;# 
  1482  1ECB                     	;# 
  1483  1ECB                     	;# 
  1484  1ECB                     	;# 
  1485  1ECC                     	;# 
  1486  1ECC                     	;# 
  1487  1ECC                     	;# 
  1488  1F10                     	;# 
  1489  1F11                     	;# 
  1490  1F12                     	;# 
  1491  1F14                     	;# 
  1492  1F15                     	;# 
  1493  1F1C                     	;# 
  1494  1F1D                     	;# 
  1495  1F1E                     	;# 
  1496  1F1F                     	;# 
  1497  1F20                     	;# 
  1498  1F21                     	;# 
  1499  1F22                     	;# 
  1500  1F23                     	;# 
  1501  1F24                     	;# 
  1502  1F25                     	;# 
  1503  1F26                     	;# 
  1504  1F27                     	;# 
  1505  1F38                     	;# 
  1506  1F39                     	;# 
  1507  1F3A                     	;# 
  1508  1F3B                     	;# 
  1509  1F3C                     	;# 
  1510  1F3D                     	;# 
  1511  1F3E                     	;# 
  1512  1F3F                     	;# 
  1513  1F43                     	;# 
  1514  1F44                     	;# 
  1515  1F45                     	;# 
  1516  1F46                     	;# 
  1517  1F47                     	;# 
  1518  1F48                     	;# 
  1519  1F49                     	;# 
  1520  1F4A                     	;# 
  1521  1F4E                     	;# 
  1522  1F4F                     	;# 
  1523  1F50                     	;# 
  1524  1F51                     	;# 
  1525  1F52                     	;# 
  1526  1F53                     	;# 
  1527  1F54                     	;# 
  1528  1F55                     	;# 
  1529  1FE4                     	;# 
  1530  1FE5                     	;# 
  1531  1FE6                     	;# 
  1532  1FE7                     	;# 
  1533  1FE8                     	;# 
  1534  1FE8                     	;# 
  1535  1FE9                     	;# 
  1536  1FEA                     	;# 
  1537  1FEB                     	;# 
  1538  1FED                     	;# 
  1539  1FEE                     	;# 
  1540  1FEF                     	;# 
  1541  0000                     	;# 
  1542  0001                     	;# 
  1543  0002                     	;# 
  1544  0003                     	;# 
  1545  0004                     	;# 
  1546  0005                     	;# 
  1547  0006                     	;# 
  1548  0007                     	;# 
  1549  0008                     	;# 
  1550  0009                     	;# 
  1551  000A                     	;# 
  1552  000B                     	;# 
  1553  000C                     	;# 
  1554  000D                     	;# 
  1555  000E                     	;# 
  1556  0012                     	;# 
  1557  0013                     	;# 
  1558  0014                     	;# 
  1559  0018                     	;# 
  1560  0019                     	;# 
  1561  001A                     	;# 
  1562  008C                     	;# 
  1563  008C                     	;# 
  1564  008D                     	;# 
  1565  008E                     	;# 
  1566  008E                     	;# 
  1567  008F                     	;# 
  1568  0090                     	;# 
  1569  0090                     	;# 
  1570  0091                     	;# 
  1571  0092                     	;# 
  1572  0092                     	;# 
  1573  0093                     	;# 
  1574  0094                     	;# 
  1575  0094                     	;# 
  1576  0095                     	;# 
  1577  0096                     	;# 
  1578  0096                     	;# 
  1579  0097                     	;# 
  1580  0098                     	;# 
  1581  0099                     	;# 
  1582  009A                     	;# 
  1583  009B                     	;# 
  1584  009B                     	;# 
  1585  009C                     	;# 
  1586  009D                     	;# 
  1587  009D                     	;# 
  1588  009E                     	;# 
  1589  009F                     	;# 
  1590  010C                     	;# 
  1591  010C                     	;# 
  1592  010D                     	;# 
  1593  010E                     	;# 
  1594  010F                     	;# 
  1595  010F                     	;# 
  1596  0110                     	;# 
  1597  0111                     	;# 
  1598  0112                     	;# 
  1599  0113                     	;# 
  1600  0114                     	;# 
  1601  0115                     	;# 
  1602  0116                     	;# 
  1603  0117                     	;# 
  1604  0118                     	;# 
  1605  0119                     	;# 
  1606  0119                     	;# 
  1607  0119                     	;# 
  1608  011A                     	;# 
  1609  011A                     	;# 
  1610  011A                     	;# 
  1611  011B                     	;# 
  1612  011B                     	;# 
  1613  011B                     	;# 
  1614  011B                     	;# 
  1615  011B                     	;# 
  1616  011C                     	;# 
  1617  011C                     	;# 
  1618  011C                     	;# 
  1619  011D                     	;# 
  1620  011D                     	;# 
  1621  011D                     	;# 
  1622  011E                     	;# 
  1623  011E                     	;# 
  1624  011E                     	;# 
  1625  011F                     	;# 
  1626  011F                     	;# 
  1627  011F                     	;# 
  1628  011F                     	;# 
  1629  011F                     	;# 
  1630  018C                     	;# 
  1631  018D                     	;# 
  1632  018E                     	;# 
  1633  018F                     	;# 
  1634  0190                     	;# 
  1635  0191                     	;# 
  1636  0192                     	;# 
  1637  0196                     	;# 
  1638  0197                     	;# 
  1639  0198                     	;# 
  1640  0199                     	;# 
  1641  019A                     	;# 
  1642  019B                     	;# 
  1643  019C                     	;# 
  1644  020C                     	;# 
  1645  020D                     	;# 
  1646  020E                     	;# 
  1647  020E                     	;# 
  1648  020F                     	;# 
  1649  020F                     	;# 
  1650  0210                     	;# 
  1651  0210                     	;# 
  1652  0211                     	;# 
  1653  0211                     	;# 
  1654  0212                     	;# 
  1655  0213                     	;# 
  1656  0214                     	;# 
  1657  0214                     	;# 
  1658  0215                     	;# 
  1659  0215                     	;# 
  1660  0216                     	;# 
  1661  0216                     	;# 
  1662  0217                     	;# 
  1663  0217                     	;# 
  1664  0218                     	;# 
  1665  0219                     	;# 
  1666  021A                     	;# 
  1667  021A                     	;# 
  1668  021B                     	;# 
  1669  021B                     	;# 
  1670  021C                     	;# 
  1671  021C                     	;# 
  1672  021D                     	;# 
  1673  021D                     	;# 
  1674  021E                     	;# 
  1675  021F                     	;# 
  1676  028C                     	;# 
  1677  028C                     	;# 
  1678  028D                     	;# 
  1679  028D                     	;# 
  1680  028E                     	;# 
  1681  028F                     	;# 
  1682  0290                     	;# 
  1683  0291                     	;# 
  1684  0292                     	;# 
  1685  0292                     	;# 
  1686  0293                     	;# 
  1687  0293                     	;# 
  1688  0294                     	;# 
  1689  0295                     	;# 
  1690  0296                     	;# 
  1691  0297                     	;# 
  1692  0298                     	;# 
  1693  0298                     	;# 
  1694  0299                     	;# 
  1695  0299                     	;# 
  1696  029A                     	;# 
  1697  029B                     	;# 
  1698  029C                     	;# 
  1699  029D                     	;# 
  1700  029F                     	;# 
  1701  030C                     	;# 
  1702  030C                     	;# 
  1703  030D                     	;# 
  1704  030E                     	;# 
  1705  030F                     	;# 
  1706  0310                     	;# 
  1707  0310                     	;# 
  1708  0311                     	;# 
  1709  0312                     	;# 
  1710  0313                     	;# 
  1711  0314                     	;# 
  1712  0314                     	;# 
  1713  0315                     	;# 
  1714  0316                     	;# 
  1715  0317                     	;# 
  1716  0318                     	;# 
  1717  0318                     	;# 
  1718  0319                     	;# 
  1719  031A                     	;# 
  1720  031B                     	;# 
  1721  038C                     	;# 
  1722  038C                     	;# 
  1723  038D                     	;# 
  1724  038E                     	;# 
  1725  0390                     	;# 
  1726  0390                     	;# 
  1727  0391                     	;# 
  1728  0392                     	;# 
  1729  048C                     	;# 
  1730  048C                     	;# 
  1731  048D                     	;# 
  1732  048E                     	;# 
  1733  048F                     	;# 
  1734  048F                     	;# 
  1735  0490                     	;# 
  1736  0491                     	;# 
  1737  0492                     	;# 
  1738  0492                     	;# 
  1739  0493                     	;# 
  1740  0494                     	;# 
  1741  0495                     	;# 
  1742  0495                     	;# 
  1743  0496                     	;# 
  1744  0497                     	;# 
  1745  0498                     	;# 
  1746  0499                     	;# 
  1747  049A                     	;# 
  1748  049B                     	;# 
  1749  049C                     	;# 
  1750  049D                     	;# 
  1751  058C                     	;# 
  1752  058C                     	;# 
  1753  058D                     	;# 
  1754  058E                     	;# 
  1755  058F                     	;# 
  1756  058F                     	;# 
  1757  0590                     	;# 
  1758  0591                     	;# 
  1759  0592                     	;# 
  1760  0593                     	;# 
  1761  059C                     	;# 
  1762  059C                     	;# 
  1763  059D                     	;# 
  1764  059D                     	;# 
  1765  059E                     	;# 
  1766  059F                     	;# 
  1767  060C                     	;# 
  1768  060C                     	;# 
  1769  060D                     	;# 
  1770  060D                     	;# 
  1771  060E                     	;# 
  1772  060F                     	;# 
  1773  0610                     	;# 
  1774  0611                     	;# 
  1775  0612                     	;# 
  1776  0613                     	;# 
  1777  0614                     	;# 
  1778  0616                     	;# 
  1779  0616                     	;# 
  1780  0617                     	;# 
  1781  0617                     	;# 
  1782  0618                     	;# 
  1783  0619                     	;# 
  1784  061A                     	;# 
  1785  061B                     	;# 
  1786  061C                     	;# 
  1787  061D                     	;# 
  1788  061E                     	;# 
  1789  070C                     	;# 
  1790  070D                     	;# 
  1791  070E                     	;# 
  1792  070F                     	;# 
  1793  0710                     	;# 
  1794  0711                     	;# 
  1795  0712                     	;# 
  1796  0713                     	;# 
  1797  0714                     	;# 
  1798  0716                     	;# 
  1799  0717                     	;# 
  1800  0718                     	;# 
  1801  0719                     	;# 
  1802  071A                     	;# 
  1803  071B                     	;# 
  1804  071C                     	;# 
  1805  071D                     	;# 
  1806  071E                     	;# 
  1807  0796                     	;# 
  1808  0797                     	;# 
  1809  0798                     	;# 
  1810  0799                     	;# 
  1811  079A                     	;# 
  1812  079B                     	;# 
  1813  079C                     	;# 
  1814  079D                     	;# 
  1815  080C                     	;# 
  1816  080D                     	;# 
  1817  080E                     	;# 
  1818  080F                     	;# 
  1819  0810                     	;# 
  1820  0811                     	;# 
  1821  0812                     	;# 
  1822  0813                     	;# 
  1823  0814                     	;# 
  1824  081A                     	;# 
  1825  081A                     	;# 
  1826  081B                     	;# 
  1827  081C                     	;# 
  1828  081C                     	;# 
  1829  081D                     	;# 
  1830  081E                     	;# 
  1831  081F                     	;# 
  1832  088C                     	;# 
  1833  088D                     	;# 
  1834  088E                     	;# 
  1835  088F                     	;# 
  1836  0890                     	;# 
  1837  0891                     	;# 
  1838  0892                     	;# 
  1839  0893                     	;# 
  1840  0895                     	;# 
  1841  0896                     	;# 
  1842  0897                     	;# 
  1843  0898                     	;# 
  1844  0899                     	;# 
  1845  089A                     	;# 
  1846  089B                     	;# 
  1847  090C                     	;# 
  1848  090E                     	;# 
  1849  090F                     	;# 
  1850  091F                     	;# 
  1851  098F                     	;# 
  1852  098F                     	;# 
  1853  0990                     	;# 
  1854  0991                     	;# 
  1855  0992                     	;# 
  1856  0993                     	;# 
  1857  0994                     	;# 
  1858  0995                     	;# 
  1859  0996                     	;# 
  1860  0997                     	;# 
  1861  1E0F                     	;# 
  1862  1E10                     	;# 
  1863  1E11                     	;# 
  1864  1E12                     	;# 
  1865  1E13                     	;# 
  1866  1E14                     	;# 
  1867  1E15                     	;# 
  1868  1E16                     	;# 
  1869  1E17                     	;# 
  1870  1E18                     	;# 
  1871  1E19                     	;# 
  1872  1E1A                     	;# 
  1873  1E1B                     	;# 
  1874  1E1C                     	;# 
  1875  1E1D                     	;# 
  1876  1E1E                     	;# 
  1877  1E1F                     	;# 
  1878  1E20                     	;# 
  1879  1E21                     	;# 
  1880  1E22                     	;# 
  1881  1E23                     	;# 
  1882  1E24                     	;# 
  1883  1E25                     	;# 
  1884  1E26                     	;# 
  1885  1E27                     	;# 
  1886  1E28                     	;# 
  1887  1E29                     	;# 
  1888  1E2A                     	;# 
  1889  1E2B                     	;# 
  1890  1E2C                     	;# 
  1891  1E2D                     	;# 
  1892  1E2E                     	;# 
  1893  1E2F                     	;# 
  1894  1E30                     	;# 
  1895  1E31                     	;# 
  1896  1E32                     	;# 
  1897  1E33                     	;# 
  1898  1E34                     	;# 
  1899  1E35                     	;# 
  1900  1E36                     	;# 
  1901  1E37                     	;# 
  1902  1E8F                     	;# 
  1903  1E90                     	;# 
  1904  1E91                     	;# 
  1905  1E92                     	;# 
  1906  1E93                     	;# 
  1907  1E94                     	;# 
  1908  1E95                     	;# 
  1909  1E96                     	;# 
  1910  1E97                     	;# 
  1911  1E9C                     	;# 
  1912  1E9D                     	;# 
  1913  1E9E                     	;# 
  1914  1EA1                     	;# 
  1915  1EA2                     	;# 
  1916  1EA3                     	;# 
  1917  1EA4                     	;# 
  1918  1EA9                     	;# 
  1919  1EAA                     	;# 
  1920  1EB1                     	;# 
  1921  1EB2                     	;# 
  1922  1EB8                     	;# 
  1923  1EB9                     	;# 
  1924  1EBA                     	;# 
  1925  1EBB                     	;# 
  1926  1EBC                     	;# 
  1927  1EBD                     	;# 
  1928  1EBE                     	;# 
  1929  1EC3                     	;# 
  1930  1EC5                     	;# 
  1931  1EC6                     	;# 
  1932  1EC7                     	;# 
  1933  1EC8                     	;# 
  1934  1EC9                     	;# 
  1935  1ECA                     	;# 
  1936  1ECB                     	;# 
  1937  1ECB                     	;# 
  1938  1ECB                     	;# 
  1939  1ECC                     	;# 
  1940  1ECC                     	;# 
  1941  1ECC                     	;# 
  1942  1F10                     	;# 
  1943  1F11                     	;# 
  1944  1F12                     	;# 
  1945  1F14                     	;# 
  1946  1F15                     	;# 
  1947  1F1C                     	;# 
  1948  1F1D                     	;# 
  1949  1F1E                     	;# 
  1950  1F1F                     	;# 
  1951  1F20                     	;# 
  1952  1F21                     	;# 
  1953  1F22                     	;# 
  1954  1F23                     	;# 
  1955  1F24                     	;# 
  1956  1F25                     	;# 
  1957  1F26                     	;# 
  1958  1F27                     	;# 
  1959  1F38                     	;# 
  1960  1F39                     	;# 
  1961  1F3A                     	;# 
  1962  1F3B                     	;# 
  1963  1F3C                     	;# 
  1964  1F3D                     	;# 
  1965  1F3E                     	;# 
  1966  1F3F                     	;# 
  1967  1F43                     	;# 
  1968  1F44                     	;# 
  1969  1F45                     	;# 
  1970  1F46                     	;# 
  1971  1F47                     	;# 
  1972  1F48                     	;# 
  1973  1F49                     	;# 
  1974  1F4A                     	;# 
  1975  1F4E                     	;# 
  1976  1F4F                     	;# 
  1977  1F50                     	;# 
  1978  1F51                     	;# 
  1979  1F52                     	;# 
  1980  1F53                     	;# 
  1981  1F54                     	;# 
  1982  1F55                     	;# 
  1983  1FE4                     	;# 
  1984  1FE5                     	;# 
  1985  1FE6                     	;# 
  1986  1FE7                     	;# 
  1987  1FE8                     	;# 
  1988  1FE8                     	;# 
  1989  1FE9                     	;# 
  1990  1FEA                     	;# 
  1991  1FEB                     	;# 
  1992  1FED                     	;# 
  1993  1FEE                     	;# 
  1994  1FEF                     	;# 
  1995  0000                     	;# 
  1996  0001                     	;# 
  1997  0002                     	;# 
  1998  0003                     	;# 
  1999  0004                     	;# 
  2000  0005                     	;# 
  2001  0006                     	;# 
  2002  0007                     	;# 
  2003  0008                     	;# 
  2004  0009                     	;# 
  2005  000A                     	;# 
  2006  000B                     	;# 
  2007  000C                     	;# 
  2008  000D                     	;# 
  2009  000E                     	;# 
  2010  0012                     	;# 
  2011  0013                     	;# 
  2012  0014                     	;# 
  2013  0018                     	;# 
  2014  0019                     	;# 
  2015  001A                     	;# 
  2016  008C                     	;# 
  2017  008C                     	;# 
  2018  008D                     	;# 
  2019  008E                     	;# 
  2020  008E                     	;# 
  2021  008F                     	;# 
  2022  0090                     	;# 
  2023  0090                     	;# 
  2024  0091                     	;# 
  2025  0092                     	;# 
  2026  0092                     	;# 
  2027  0093                     	;# 
  2028  0094                     	;# 
  2029  0094                     	;# 
  2030  0095                     	;# 
  2031  0096                     	;# 
  2032  0096                     	;# 
  2033  0097                     	;# 
  2034  0098                     	;# 
  2035  0099                     	;# 
  2036  009A                     	;# 
  2037  009B                     	;# 
  2038  009B                     	;# 
  2039  009C                     	;# 
  2040  009D                     	;# 
  2041  009D                     	;# 
  2042  009E                     	;# 
  2043  009F                     	;# 
  2044  010C                     	;# 
  2045  010C                     	;# 
  2046  010D                     	;# 
  2047  010E                     	;# 
  2048  010F                     	;# 
  2049  010F                     	;# 
  2050  0110                     	;# 
  2051  0111                     	;# 
  2052  0112                     	;# 
  2053  0113                     	;# 
  2054  0114                     	;# 
  2055  0115                     	;# 
  2056  0116                     	;# 
  2057  0117                     	;# 
  2058  0118                     	;# 
  2059  0119                     	;# 
  2060  0119                     	;# 
  2061  0119                     	;# 
  2062  011A                     	;# 
  2063  011A                     	;# 
  2064  011A                     	;# 
  2065  011B                     	;# 
  2066  011B                     	;# 
  2067  011B                     	;# 
  2068  011B                     	;# 
  2069  011B                     	;# 
  2070  011C                     	;# 
  2071  011C                     	;# 
  2072  011C                     	;# 
  2073  011D                     	;# 
  2074  011D                     	;# 
  2075  011D                     	;# 
  2076  011E                     	;# 
  2077  011E                     	;# 
  2078  011E                     	;# 
  2079  011F                     	;# 
  2080  011F                     	;# 
  2081  011F                     	;# 
  2082  011F                     	;# 
  2083  011F                     	;# 
  2084  018C                     	;# 
  2085  018D                     	;# 
  2086  018E                     	;# 
  2087  018F                     	;# 
  2088  0190                     	;# 
  2089  0191                     	;# 
  2090  0192                     	;# 
  2091  0196                     	;# 
  2092  0197                     	;# 
  2093  0198                     	;# 
  2094  0199                     	;# 
  2095  019A                     	;# 
  2096  019B                     	;# 
  2097  019C                     	;# 
  2098  020C                     	;# 
  2099  020D                     	;# 
  2100  020E                     	;# 
  2101  020E                     	;# 
  2102  020F                     	;# 
  2103  020F                     	;# 
  2104  0210                     	;# 
  2105  0210                     	;# 
  2106  0211                     	;# 
  2107  0211                     	;# 
  2108  0212                     	;# 
  2109  0213                     	;# 
  2110  0214                     	;# 
  2111  0214                     	;# 
  2112  0215                     	;# 
  2113  0215                     	;# 
  2114  0216                     	;# 
  2115  0216                     	;# 
  2116  0217                     	;# 
  2117  0217                     	;# 
  2118  0218                     	;# 
  2119  0219                     	;# 
  2120  021A                     	;# 
  2121  021A                     	;# 
  2122  021B                     	;# 
  2123  021B                     	;# 
  2124  021C                     	;# 
  2125  021C                     	;# 
  2126  021D                     	;# 
  2127  021D                     	;# 
  2128  021E                     	;# 
  2129  021F                     	;# 
  2130  028C                     	;# 
  2131  028C                     	;# 
  2132  028D                     	;# 
  2133  028D                     	;# 
  2134  028E                     	;# 
  2135  028F                     	;# 
  2136  0290                     	;# 
  2137  0291                     	;# 
  2138  0292                     	;# 
  2139  0292                     	;# 
  2140  0293                     	;# 
  2141  0293                     	;# 
  2142  0294                     	;# 
  2143  0295                     	;# 
  2144  0296                     	;# 
  2145  0297                     	;# 
  2146  0298                     	;# 
  2147  0298                     	;# 
  2148  0299                     	;# 
  2149  0299                     	;# 
  2150  029A                     	;# 
  2151  029B                     	;# 
  2152  029C                     	;# 
  2153  029D                     	;# 
  2154  029F                     	;# 
  2155  030C                     	;# 
  2156  030C                     	;# 
  2157  030D                     	;# 
  2158  030E                     	;# 
  2159  030F                     	;# 
  2160  0310                     	;# 
  2161  0310                     	;# 
  2162  0311                     	;# 
  2163  0312                     	;# 
  2164  0313                     	;# 
  2165  0314                     	;# 
  2166  0314                     	;# 
  2167  0315                     	;# 
  2168  0316                     	;# 
  2169  0317                     	;# 
  2170  0318                     	;# 
  2171  0318                     	;# 
  2172  0319                     	;# 
  2173  031A                     	;# 
  2174  031B                     	;# 
  2175  038C                     	;# 
  2176  038C                     	;# 
  2177  038D                     	;# 
  2178  038E                     	;# 
  2179  0390                     	;# 
  2180  0390                     	;# 
  2181  0391                     	;# 
  2182  0392                     	;# 
  2183  048C                     	;# 
  2184  048C                     	;# 
  2185  048D                     	;# 
  2186  048E                     	;# 
  2187  048F                     	;# 
  2188  048F                     	;# 
  2189  0490                     	;# 
  2190  0491                     	;# 
  2191  0492                     	;# 
  2192  0492                     	;# 
  2193  0493                     	;# 
  2194  0494                     	;# 
  2195  0495                     	;# 
  2196  0495                     	;# 
  2197  0496                     	;# 
  2198  0497                     	;# 
  2199  0498                     	;# 
  2200  0499                     	;# 
  2201  049A                     	;# 
  2202  049B                     	;# 
  2203  049C                     	;# 
  2204  049D                     	;# 
  2205  058C                     	;# 
  2206  058C                     	;# 
  2207  058D                     	;# 
  2208  058E                     	;# 
  2209  058F                     	;# 
  2210  058F                     	;# 
  2211  0590                     	;# 
  2212  0591                     	;# 
  2213  0592                     	;# 
  2214  0593                     	;# 
  2215  059C                     	;# 
  2216  059C                     	;# 
  2217  059D                     	;# 
  2218  059D                     	;# 
  2219  059E                     	;# 
  2220  059F                     	;# 
  2221  060C                     	;# 
  2222  060C                     	;# 
  2223  060D                     	;# 
  2224  060D                     	;# 
  2225  060E                     	;# 
  2226  060F                     	;# 
  2227  0610                     	;# 
  2228  0611                     	;# 
  2229  0612                     	;# 
  2230  0613                     	;# 
  2231  0614                     	;# 
  2232  0616                     	;# 
  2233  0616                     	;# 
  2234  0617                     	;# 
  2235  0617                     	;# 
  2236  0618                     	;# 
  2237  0619                     	;# 
  2238  061A                     	;# 
  2239  061B                     	;# 
  2240  061C                     	;# 
  2241  061D                     	;# 
  2242  061E                     	;# 
  2243  070C                     	;# 
  2244  070D                     	;# 
  2245  070E                     	;# 
  2246  070F                     	;# 
  2247  0710                     	;# 
  2248  0711                     	;# 
  2249  0712                     	;# 
  2250  0713                     	;# 
  2251  0714                     	;# 
  2252  0716                     	;# 
  2253  0717                     	;# 
  2254  0718                     	;# 
  2255  0719                     	;# 
  2256  071A                     	;# 
  2257  071B                     	;# 
  2258  071C                     	;# 
  2259  071D                     	;# 
  2260  071E                     	;# 
  2261  0796                     	;# 
  2262  0797                     	;# 
  2263  0798                     	;# 
  2264  0799                     	;# 
  2265  079A                     	;# 
  2266  079B                     	;# 
  2267  079C                     	;# 
  2268  079D                     	;# 
  2269  080C                     	;# 
  2270  080D                     	;# 
  2271  080E                     	;# 
  2272  080F                     	;# 
  2273  0810                     	;# 
  2274  0811                     	;# 
  2275  0812                     	;# 
  2276  0813                     	;# 
  2277  0814                     	;# 
  2278  081A                     	;# 
  2279  081A                     	;# 
  2280  081B                     	;# 
  2281  081C                     	;# 
  2282  081C                     	;# 
  2283  081D                     	;# 
  2284  081E                     	;# 
  2285  081F                     	;# 
  2286  088C                     	;# 
  2287  088D                     	;# 
  2288  088E                     	;# 
  2289  088F                     	;# 
  2290  0890                     	;# 
  2291  0891                     	;# 
  2292  0892                     	;# 
  2293  0893                     	;# 
  2294  0895                     	;# 
  2295  0896                     	;# 
  2296  0897                     	;# 
  2297  0898                     	;# 
  2298  0899                     	;# 
  2299  089A                     	;# 
  2300  089B                     	;# 
  2301  090C                     	;# 
  2302  090E                     	;# 
  2303  090F                     	;# 
  2304  091F                     	;# 
  2305  098F                     	;# 
  2306  098F                     	;# 
  2307  0990                     	;# 
  2308  0991                     	;# 
  2309  0992                     	;# 
  2310  0993                     	;# 
  2311  0994                     	;# 
  2312  0995                     	;# 
  2313  0996                     	;# 
  2314  0997                     	;# 
  2315  1E0F                     	;# 
  2316  1E10                     	;# 
  2317  1E11                     	;# 
  2318  1E12                     	;# 
  2319  1E13                     	;# 
  2320  1E14                     	;# 
  2321  1E15                     	;# 
  2322  1E16                     	;# 
  2323  1E17                     	;# 
  2324  1E18                     	;# 
  2325  1E19                     	;# 
  2326  1E1A                     	;# 
  2327  1E1B                     	;# 
  2328  1E1C                     	;# 
  2329  1E1D                     	;# 
  2330  1E1E                     	;# 
  2331  1E1F                     	;# 
  2332  1E20                     	;# 
  2333  1E21                     	;# 
  2334  1E22                     	;# 
  2335  1E23                     	;# 
  2336  1E24                     	;# 
  2337  1E25                     	;# 
  2338  1E26                     	;# 
  2339  1E27                     	;# 
  2340  1E28                     	;# 
  2341  1E29                     	;# 
  2342  1E2A                     	;# 
  2343  1E2B                     	;# 
  2344  1E2C                     	;# 
  2345  1E2D                     	;# 
  2346  1E2E                     	;# 
  2347  1E2F                     	;# 
  2348  1E30                     	;# 
  2349  1E31                     	;# 
  2350  1E32                     	;# 
  2351  1E33                     	;# 
  2352  1E34                     	;# 
  2353  1E35                     	;# 
  2354  1E36                     	;# 
  2355  1E37                     	;# 
  2356  1E8F                     	;# 
  2357  1E90                     	;# 
  2358  1E91                     	;# 
  2359  1E92                     	;# 
  2360  1E93                     	;# 
  2361  1E94                     	;# 
  2362  1E95                     	;# 
  2363  1E96                     	;# 
  2364  1E97                     	;# 
  2365  1E9C                     	;# 
  2366  1E9D                     	;# 
  2367  1E9E                     	;# 
  2368  1EA1                     	;# 
  2369  1EA2                     	;# 
  2370  1EA3                     	;# 
  2371  1EA4                     	;# 
  2372  1EA9                     	;# 
  2373  1EAA                     	;# 
  2374  1EB1                     	;# 
  2375  1EB2                     	;# 
  2376  1EB8                     	;# 
  2377  1EB9                     	;# 
  2378  1EBA                     	;# 
  2379  1EBB                     	;# 
  2380  1EBC                     	;# 
  2381  1EBD                     	;# 
  2382  1EBE                     	;# 
  2383  1EC3                     	;# 
  2384  1EC5                     	;# 
  2385  1EC6                     	;# 
  2386  1EC7                     	;# 
  2387  1EC8                     	;# 
  2388  1EC9                     	;# 
  2389  1ECA                     	;# 
  2390  1ECB                     	;# 
  2391  1ECB                     	;# 
  2392  1ECB                     	;# 
  2393  1ECC                     	;# 
  2394  1ECC                     	;# 
  2395  1ECC                     	;# 
  2396  1F10                     	;# 
  2397  1F11                     	;# 
  2398  1F12                     	;# 
  2399  1F14                     	;# 
  2400  1F15                     	;# 
  2401  1F1C                     	;# 
  2402  1F1D                     	;# 
  2403  1F1E                     	;# 
  2404  1F1F                     	;# 
  2405  1F20                     	;# 
  2406  1F21                     	;# 
  2407  1F22                     	;# 
  2408  1F23                     	;# 
  2409  1F24                     	;# 
  2410  1F25                     	;# 
  2411  1F26                     	;# 
  2412  1F27                     	;# 
  2413  1F38                     	;# 
  2414  1F39                     	;# 
  2415  1F3A                     	;# 
  2416  1F3B                     	;# 
  2417  1F3C                     	;# 
  2418  1F3D                     	;# 
  2419  1F3E                     	;# 
  2420  1F3F                     	;# 
  2421  1F43                     	;# 
  2422  1F44                     	;# 
  2423  1F45                     	;# 
  2424  1F46                     	;# 
  2425  1F47                     	;# 
  2426  1F48                     	;# 
  2427  1F49                     	;# 
  2428  1F4A                     	;# 
  2429  1F4E                     	;# 
  2430  1F4F                     	;# 
  2431  1F50                     	;# 
  2432  1F51                     	;# 
  2433  1F52                     	;# 
  2434  1F53                     	;# 
  2435  1F54                     	;# 
  2436  1F55                     	;# 
  2437  1FE4                     	;# 
  2438  1FE5                     	;# 
  2439  1FE6                     	;# 
  2440  1FE7                     	;# 
  2441  1FE8                     	;# 
  2442  1FE8                     	;# 
  2443  1FE9                     	;# 
  2444  1FEA                     	;# 
  2445  1FEB                     	;# 
  2446  1FED                     	;# 
  2447  1FEE                     	;# 
  2448  1FEF                     	;# 
  2449  0000                     	;# 
  2450  0001                     	;# 
  2451  0002                     	;# 
  2452  0003                     	;# 
  2453  0004                     	;# 
  2454  0005                     	;# 
  2455  0006                     	;# 
  2456  0007                     	;# 
  2457  0008                     	;# 
  2458  0009                     	;# 
  2459  000A                     	;# 
  2460  000B                     	;# 
  2461  000C                     	;# 
  2462  000D                     	;# 
  2463  000E                     	;# 
  2464  0012                     	;# 
  2465  0013                     	;# 
  2466  0014                     	;# 
  2467  0018                     	;# 
  2468  0019                     	;# 
  2469  001A                     	;# 
  2470  008C                     	;# 
  2471  008C                     	;# 
  2472  008D                     	;# 
  2473  008E                     	;# 
  2474  008E                     	;# 
  2475  008F                     	;# 
  2476  0090                     	;# 
  2477  0090                     	;# 
  2478  0091                     	;# 
  2479  0092                     	;# 
  2480  0092                     	;# 
  2481  0093                     	;# 
  2482  0094                     	;# 
  2483  0094                     	;# 
  2484  0095                     	;# 
  2485  0096                     	;# 
  2486  0096                     	;# 
  2487  0097                     	;# 
  2488  0098                     	;# 
  2489  0099                     	;# 
  2490  009A                     	;# 
  2491  009B                     	;# 
  2492  009B                     	;# 
  2493  009C                     	;# 
  2494  009D                     	;# 
  2495  009D                     	;# 
  2496  009E                     	;# 
  2497  009F                     	;# 
  2498  010C                     	;# 
  2499  010C                     	;# 
  2500  010D                     	;# 
  2501  010E                     	;# 
  2502  010F                     	;# 
  2503  010F                     	;# 
  2504  0110                     	;# 
  2505  0111                     	;# 
  2506  0112                     	;# 
  2507  0113                     	;# 
  2508  0114                     	;# 
  2509  0115                     	;# 
  2510  0116                     	;# 
  2511  0117                     	;# 
  2512  0118                     	;# 
  2513  0119                     	;# 
  2514  0119                     	;# 
  2515  0119                     	;# 
  2516  011A                     	;# 
  2517  011A                     	;# 
  2518  011A                     	;# 
  2519  011B                     	;# 
  2520  011B                     	;# 
  2521  011B                     	;# 
  2522  011B                     	;# 
  2523  011B                     	;# 
  2524  011C                     	;# 
  2525  011C                     	;# 
  2526  011C                     	;# 
  2527  011D                     	;# 
  2528  011D                     	;# 
  2529  011D                     	;# 
  2530  011E                     	;# 
  2531  011E                     	;# 
  2532  011E                     	;# 
  2533  011F                     	;# 
  2534  011F                     	;# 
  2535  011F                     	;# 
  2536  011F                     	;# 
  2537  011F                     	;# 
  2538  018C                     	;# 
  2539  018D                     	;# 
  2540  018E                     	;# 
  2541  018F                     	;# 
  2542  0190                     	;# 
  2543  0191                     	;# 
  2544  0192                     	;# 
  2545  0196                     	;# 
  2546  0197                     	;# 
  2547  0198                     	;# 
  2548  0199                     	;# 
  2549  019A                     	;# 
  2550  019B                     	;# 
  2551  019C                     	;# 
  2552  020C                     	;# 
  2553  020D                     	;# 
  2554  020E                     	;# 
  2555  020E                     	;# 
  2556  020F                     	;# 
  2557  020F                     	;# 
  2558  0210                     	;# 
  2559  0210                     	;# 
  2560  0211                     	;# 
  2561  0211                     	;# 
  2562  0212                     	;# 
  2563  0213                     	;# 
  2564  0214                     	;# 
  2565  0214                     	;# 
  2566  0215                     	;# 
  2567  0215                     	;# 
  2568  0216                     	;# 
  2569  0216                     	;# 
  2570  0217                     	;# 
  2571  0217                     	;# 
  2572  0218                     	;# 
  2573  0219                     	;# 
  2574  021A                     	;# 
  2575  021A                     	;# 
  2576  021B                     	;# 
  2577  021B                     	;# 
  2578  021C                     	;# 
  2579  021C                     	;# 
  2580  021D                     	;# 
  2581  021D                     	;# 
  2582  021E                     	;# 
  2583  021F                     	;# 
  2584  028C                     	;# 
  2585  028C                     	;# 
  2586  028D                     	;# 
  2587  028D                     	;# 
  2588  028E                     	;# 
  2589  028F                     	;# 
  2590  0290                     	;# 
  2591  0291                     	;# 
  2592  0292                     	;# 
  2593  0292                     	;# 
  2594  0293                     	;# 
  2595  0293                     	;# 
  2596  0294                     	;# 
  2597  0295                     	;# 
  2598  0296                     	;# 
  2599  0297                     	;# 
  2600  0298                     	;# 
  2601  0298                     	;# 
  2602  0299                     	;# 
  2603  0299                     	;# 
  2604  029A                     	;# 
  2605  029B                     	;# 
  2606  029C                     	;# 
  2607  029D                     	;# 
  2608  029F                     	;# 
  2609  030C                     	;# 
  2610  030C                     	;# 
  2611  030D                     	;# 
  2612  030E                     	;# 
  2613  030F                     	;# 
  2614  0310                     	;# 
  2615  0310                     	;# 
  2616  0311                     	;# 
  2617  0312                     	;# 
  2618  0313                     	;# 
  2619  0314                     	;# 
  2620  0314                     	;# 
  2621  0315                     	;# 
  2622  0316                     	;# 
  2623  0317                     	;# 
  2624  0318                     	;# 
  2625  0318                     	;# 
  2626  0319                     	;# 
  2627  031A                     	;# 
  2628  031B                     	;# 
  2629  038C                     	;# 
  2630  038C                     	;# 
  2631  038D                     	;# 
  2632  038E                     	;# 
  2633  0390                     	;# 
  2634  0390                     	;# 
  2635  0391                     	;# 
  2636  0392                     	;# 
  2637  048C                     	;# 
  2638  048C                     	;# 
  2639  048D                     	;# 
  2640  048E                     	;# 
  2641  048F                     	;# 
  2642  048F                     	;# 
  2643  0490                     	;# 
  2644  0491                     	;# 
  2645  0492                     	;# 
  2646  0492                     	;# 
  2647  0493                     	;# 
  2648  0494                     	;# 
  2649  0495                     	;# 
  2650  0495                     	;# 
  2651  0496                     	;# 
  2652  0497                     	;# 
  2653  0498                     	;# 
  2654  0499                     	;# 
  2655  049A                     	;# 
  2656  049B                     	;# 
  2657  049C                     	;# 
  2658  049D                     	;# 
  2659  058C                     	;# 
  2660  058C                     	;# 
  2661  058D                     	;# 
  2662  058E                     	;# 
  2663  058F                     	;# 
  2664  058F                     	;# 
  2665  0590                     	;# 
  2666  0591                     	;# 
  2667  0592                     	;# 
  2668  0593                     	;# 
  2669  059C                     	;# 
  2670  059C                     	;# 
  2671  059D                     	;# 
  2672  059D                     	;# 
  2673  059E                     	;# 
  2674  059F                     	;# 
  2675  060C                     	;# 
  2676  060C                     	;# 
  2677  060D                     	;# 
  2678  060D                     	;# 
  2679  060E                     	;# 
  2680  060F                     	;# 
  2681  0610                     	;# 
  2682  0611                     	;# 
  2683  0612                     	;# 
  2684  0613                     	;# 
  2685  0614                     	;# 
  2686  0616                     	;# 
  2687  0616                     	;# 
  2688  0617                     	;# 
  2689  0617                     	;# 
  2690  0618                     	;# 
  2691  0619                     	;# 
  2692  061A                     	;# 
  2693  061B                     	;# 
  2694  061C                     	;# 
  2695  061D                     	;# 
  2696  061E                     	;# 
  2697  070C                     	;# 
  2698  070D                     	;# 
  2699  070E                     	;# 
  2700  070F                     	;# 
  2701  0710                     	;# 
  2702  0711                     	;# 
  2703  0712                     	;# 
  2704  0713                     	;# 
  2705  0714                     	;# 
  2706  0716                     	;# 
  2707  0717                     	;# 
  2708  0718                     	;# 
  2709  0719                     	;# 
  2710  071A                     	;# 
  2711  071B                     	;# 
  2712  071C                     	;# 
  2713  071D                     	;# 
  2714  071E                     	;# 
  2715  0796                     	;# 
  2716  0797                     	;# 
  2717  0798                     	;# 
  2718  0799                     	;# 
  2719  079A                     	;# 
  2720  079B                     	;# 
  2721  079C                     	;# 
  2722  079D                     	;# 
  2723  080C                     	;# 
  2724  080D                     	;# 
  2725  080E                     	;# 
  2726  080F                     	;# 
  2727  0810                     	;# 
  2728  0811                     	;# 
  2729  0812                     	;# 
  2730  0813                     	;# 
  2731  0814                     	;# 
  2732  081A                     	;# 
  2733  081A                     	;# 
  2734  081B                     	;# 
  2735  081C                     	;# 
  2736  081C                     	;# 
  2737  081D                     	;# 
  2738  081E                     	;# 
  2739  081F                     	;# 
  2740  088C                     	;# 
  2741  088D                     	;# 
  2742  088E                     	;# 
  2743  088F                     	;# 
  2744  0890                     	;# 
  2745  0891                     	;# 
  2746  0892                     	;# 
  2747  0893                     	;# 
  2748  0895                     	;# 
  2749  0896                     	;# 
  2750  0897                     	;# 
  2751  0898                     	;# 
  2752  0899                     	;# 
  2753  089A                     	;# 
  2754  089B                     	;# 
  2755  090C                     	;# 
  2756  090E                     	;# 
  2757  090F                     	;# 
  2758  091F                     	;# 
  2759  098F                     	;# 
  2760  098F                     	;# 
  2761  0990                     	;# 
  2762  0991                     	;# 
  2763  0992                     	;# 
  2764  0993                     	;# 
  2765  0994                     	;# 
  2766  0995                     	;# 
  2767  0996                     	;# 
  2768  0997                     	;# 
  2769  1E0F                     	;# 
  2770  1E10                     	;# 
  2771  1E11                     	;# 
  2772  1E12                     	;# 
  2773  1E13                     	;# 
  2774  1E14                     	;# 
  2775  1E15                     	;# 
  2776  1E16                     	;# 
  2777  1E17                     	;# 
  2778  1E18                     	;# 
  2779  1E19                     	;# 
  2780  1E1A                     	;# 
  2781  1E1B                     	;# 
  2782  1E1C                     	;# 
  2783  1E1D                     	;# 
  2784  1E1E                     	;# 
  2785  1E1F                     	;# 
  2786  1E20                     	;# 
  2787  1E21                     	;# 
  2788  1E22                     	;# 
  2789  1E23                     	;# 
  2790  1E24                     	;# 
  2791  1E25                     	;# 
  2792  1E26                     	;# 
  2793  1E27                     	;# 
  2794  1E28                     	;# 
  2795  1E29                     	;# 
  2796  1E2A                     	;# 
  2797  1E2B                     	;# 
  2798  1E2C                     	;# 
  2799  1E2D                     	;# 
  2800  1E2E                     	;# 
  2801  1E2F                     	;# 
  2802  1E30                     	;# 
  2803  1E31                     	;# 
  2804  1E32                     	;# 
  2805  1E33                     	;# 
  2806  1E34                     	;# 
  2807  1E35                     	;# 
  2808  1E36                     	;# 
  2809  1E37                     	;# 
  2810  1E8F                     	;# 
  2811  1E90                     	;# 
  2812  1E91                     	;# 
  2813  1E92                     	;# 
  2814  1E93                     	;# 
  2815  1E94                     	;# 
  2816  1E95                     	;# 
  2817  1E96                     	;# 
  2818  1E97                     	;# 
  2819  1E9C                     	;# 
  2820  1E9D                     	;# 
  2821  1E9E                     	;# 
  2822  1EA1                     	;# 
  2823  1EA2                     	;# 
  2824  1EA3                     	;# 
  2825  1EA4                     	;# 
  2826  1EA9                     	;# 
  2827  1EAA                     	;# 
  2828  1EB1                     	;# 
  2829  1EB2                     	;# 
  2830  1EB8                     	;# 
  2831  1EB9                     	;# 
  2832  1EBA                     	;# 
  2833  1EBB                     	;# 
  2834  1EBC                     	;# 
  2835  1EBD                     	;# 
  2836  1EBE                     	;# 
  2837  1EC3                     	;# 
  2838  1EC5                     	;# 
  2839  1EC6                     	;# 
  2840  1EC7                     	;# 
  2841  1EC8                     	;# 
  2842  1EC9                     	;# 
  2843  1ECA                     	;# 
  2844  1ECB                     	;# 
  2845  1ECB                     	;# 
  2846  1ECB                     	;# 
  2847  1ECC                     	;# 
  2848  1ECC                     	;# 
  2849  1ECC                     	;# 
  2850  1F10                     	;# 
  2851  1F11                     	;# 
  2852  1F12                     	;# 
  2853  1F14                     	;# 
  2854  1F15                     	;# 
  2855  1F1C                     	;# 
  2856  1F1D                     	;# 
  2857  1F1E                     	;# 
  2858  1F1F                     	;# 
  2859  1F20                     	;# 
  2860  1F21                     	;# 
  2861  1F22                     	;# 
  2862  1F23                     	;# 
  2863  1F24                     	;# 
  2864  1F25                     	;# 
  2865  1F26                     	;# 
  2866  1F27                     	;# 
  2867  1F38                     	;# 
  2868  1F39                     	;# 
  2869  1F3A                     	;# 
  2870  1F3B                     	;# 
  2871  1F3C                     	;# 
  2872  1F3D                     	;# 
  2873  1F3E                     	;# 
  2874  1F3F                     	;# 
  2875  1F43                     	;# 
  2876  1F44                     	;# 
  2877  1F45                     	;# 
  2878  1F46                     	;# 
  2879  1F47                     	;# 
  2880  1F48                     	;# 
  2881  1F49                     	;# 
  2882  1F4A                     	;# 
  2883  1F4E                     	;# 
  2884  1F4F                     	;# 
  2885  1F50                     	;# 
  2886  1F51                     	;# 
  2887  1F52                     	;# 
  2888  1F53                     	;# 
  2889  1F54                     	;# 
  2890  1F55                     	;# 
  2891  1FE4                     	;# 
  2892  1FE5                     	;# 
  2893  1FE6                     	;# 
  2894  1FE7                     	;# 
  2895  1FE8                     	;# 
  2896  1FE8                     	;# 
  2897  1FE9                     	;# 
  2898  1FEA                     	;# 
  2899  1FEB                     	;# 
  2900  1FED                     	;# 
  2901  1FEE                     	;# 
  2902  1FEF                     	;# 
  2903  0000                     	;# 
  2904  0001                     	;# 
  2905  0002                     	;# 
  2906  0003                     	;# 
  2907  0004                     	;# 
  2908  0005                     	;# 
  2909  0006                     	;# 
  2910  0007                     	;# 
  2911  0008                     	;# 
  2912  0009                     	;# 
  2913  000A                     	;# 
  2914  000B                     	;# 
  2915  000C                     	;# 
  2916  000D                     	;# 
  2917  000E                     	;# 
  2918  0012                     	;# 
  2919  0013                     	;# 
  2920  0014                     	;# 
  2921  0018                     	;# 
  2922  0019                     	;# 
  2923  001A                     	;# 
  2924  008C                     	;# 
  2925  008C                     	;# 
  2926  008D                     	;# 
  2927  008E                     	;# 
  2928  008E                     	;# 
  2929  008F                     	;# 
  2930  0090                     	;# 
  2931  0090                     	;# 
  2932  0091                     	;# 
  2933  0092                     	;# 
  2934  0092                     	;# 
  2935  0093                     	;# 
  2936  0094                     	;# 
  2937  0094                     	;# 
  2938  0095                     	;# 
  2939  0096                     	;# 
  2940  0096                     	;# 
  2941  0097                     	;# 
  2942  0098                     	;# 
  2943  0099                     	;# 
  2944  009A                     	;# 
  2945  009B                     	;# 
  2946  009B                     	;# 
  2947  009C                     	;# 
  2948  009D                     	;# 
  2949  009D                     	;# 
  2950  009E                     	;# 
  2951  009F                     	;# 
  2952  010C                     	;# 
  2953  010C                     	;# 
  2954  010D                     	;# 
  2955  010E                     	;# 
  2956  010F                     	;# 
  2957  010F                     	;# 
  2958  0110                     	;# 
  2959  0111                     	;# 
  2960  0112                     	;# 
  2961  0113                     	;# 
  2962  0114                     	;# 
  2963  0115                     	;# 
  2964  0116                     	;# 
  2965  0117                     	;# 
  2966  0118                     	;# 
  2967  0119                     	;# 
  2968  0119                     	;# 
  2969  0119                     	;# 
  2970  011A                     	;# 
  2971  011A                     	;# 
  2972  011A                     	;# 
  2973  011B                     	;# 
  2974  011B                     	;# 
  2975  011B                     	;# 
  2976  011B                     	;# 
  2977  011B                     	;# 
  2978  011C                     	;# 
  2979  011C                     	;# 
  2980  011C                     	;# 
  2981  011D                     	;# 
  2982  011D                     	;# 
  2983  011D                     	;# 
  2984  011E                     	;# 
  2985  011E                     	;# 
  2986  011E                     	;# 
  2987  011F                     	;# 
  2988  011F                     	;# 
  2989  011F                     	;# 
  2990  011F                     	;# 
  2991  011F                     	;# 
  2992  018C                     	;# 
  2993  018D                     	;# 
  2994  018E                     	;# 
  2995  018F                     	;# 
  2996  0190                     	;# 
  2997  0191                     	;# 
  2998  0192                     	;# 
  2999  0196                     	;# 
  3000  0197                     	;# 
  3001  0198                     	;# 
  3002  0199                     	;# 
  3003  019A                     	;# 
  3004  019B                     	;# 
  3005  019C                     	;# 
  3006  020C                     	;# 
  3007  020D                     	;# 
  3008  020E                     	;# 
  3009  020E                     	;# 
  3010  020F                     	;# 
  3011  020F                     	;# 
  3012  0210                     	;# 
  3013  0210                     	;# 
  3014  0211                     	;# 
  3015  0211                     	;# 
  3016  0212                     	;# 
  3017  0213                     	;# 
  3018  0214                     	;# 
  3019  0214                     	;# 
  3020  0215                     	;# 
  3021  0215                     	;# 
  3022  0216                     	;# 
  3023  0216                     	;# 
  3024  0217                     	;# 
  3025  0217                     	;# 
  3026  0218                     	;# 
  3027  0219                     	;# 
  3028  021A                     	;# 
  3029  021A                     	;# 
  3030  021B                     	;# 
  3031  021B                     	;# 
  3032  021C                     	;# 
  3033  021C                     	;# 
  3034  021D                     	;# 
  3035  021D                     	;# 
  3036  021E                     	;# 
  3037  021F                     	;# 
  3038  028C                     	;# 
  3039  028C                     	;# 
  3040  028D                     	;# 
  3041  028D                     	;# 
  3042  028E                     	;# 
  3043  028F                     	;# 
  3044  0290                     	;# 
  3045  0291                     	;# 
  3046  0292                     	;# 
  3047  0292                     	;# 
  3048  0293                     	;# 
  3049  0293                     	;# 
  3050  0294                     	;# 
  3051  0295                     	;# 
  3052  0296                     	;# 
  3053  0297                     	;# 
  3054  0298                     	;# 
  3055  0298                     	;# 
  3056  0299                     	;# 
  3057  0299                     	;# 
  3058  029A                     	;# 
  3059  029B                     	;# 
  3060  029C                     	;# 
  3061  029D                     	;# 
  3062  029F                     	;# 
  3063  030C                     	;# 
  3064  030C                     	;# 
  3065  030D                     	;# 
  3066  030E                     	;# 
  3067  030F                     	;# 
  3068  0310                     	;# 
  3069  0310                     	;# 
  3070  0311                     	;# 
  3071  0312                     	;# 
  3072  0313                     	;# 
  3073  0314                     	;# 
  3074  0314                     	;# 
  3075  0315                     	;# 
  3076  0316                     	;# 
  3077  0317                     	;# 
  3078  0318                     	;# 
  3079  0318                     	;# 
  3080  0319                     	;# 
  3081  031A                     	;# 
  3082  031B                     	;# 
  3083  038C                     	;# 
  3084  038C                     	;# 
  3085  038D                     	;# 
  3086  038E                     	;# 
  3087  0390                     	;# 
  3088  0390                     	;# 
  3089  0391                     	;# 
  3090  0392                     	;# 
  3091  048C                     	;# 
  3092  048C                     	;# 
  3093  048D                     	;# 
  3094  048E                     	;# 
  3095  048F                     	;# 
  3096  048F                     	;# 
  3097  0490                     	;# 
  3098  0491                     	;# 
  3099  0492                     	;# 
  3100  0492                     	;# 
  3101  0493                     	;# 
  3102  0494                     	;# 
  3103  0495                     	;# 
  3104  0495                     	;# 
  3105  0496                     	;# 
  3106  0497                     	;# 
  3107  0498                     	;# 
  3108  0499                     	;# 
  3109  049A                     	;# 
  3110  049B                     	;# 
  3111  049C                     	;# 
  3112  049D                     	;# 
  3113  058C                     	;# 
  3114  058C                     	;# 
  3115  058D                     	;# 
  3116  058E                     	;# 
  3117  058F                     	;# 
  3118  058F                     	;# 
  3119  0590                     	;# 
  3120  0591                     	;# 
  3121  0592                     	;# 
  3122  0593                     	;# 
  3123  059C                     	;# 
  3124  059C                     	;# 
  3125  059D                     	;# 
  3126  059D                     	;# 
  3127  059E                     	;# 
  3128  059F                     	;# 
  3129  060C                     	;# 
  3130  060C                     	;# 
  3131  060D                     	;# 
  3132  060D                     	;# 
  3133  060E                     	;# 
  3134  060F                     	;# 
  3135  0610                     	;# 
  3136  0611                     	;# 
  3137  0612                     	;# 
  3138  0613                     	;# 
  3139  0614                     	;# 
  3140  0616                     	;# 
  3141  0616                     	;# 
  3142  0617                     	;# 
  3143  0617                     	;# 
  3144  0618                     	;# 
  3145  0619                     	;# 
  3146  061A                     	;# 
  3147  061B                     	;# 
  3148  061C                     	;# 
  3149  061D                     	;# 
  3150  061E                     	;# 
  3151  070C                     	;# 
  3152  070D                     	;# 
  3153  070E                     	;# 
  3154  070F                     	;# 
  3155  0710                     	;# 
  3156  0711                     	;# 
  3157  0712                     	;# 
  3158  0713                     	;# 
  3159  0714                     	;# 
  3160  0716                     	;# 
  3161  0717                     	;# 
  3162  0718                     	;# 
  3163  0719                     	;# 
  3164  071A                     	;# 
  3165  071B                     	;# 
  3166  071C                     	;# 
  3167  071D                     	;# 
  3168  071E                     	;# 
  3169  0796                     	;# 
  3170  0797                     	;# 
  3171  0798                     	;# 
  3172  0799                     	;# 
  3173  079A                     	;# 
  3174  079B                     	;# 
  3175  079C                     	;# 
  3176  079D                     	;# 
  3177  080C                     	;# 
  3178  080D                     	;# 
  3179  080E                     	;# 
  3180  080F                     	;# 
  3181  0810                     	;# 
  3182  0811                     	;# 
  3183  0812                     	;# 
  3184  0813                     	;# 
  3185  0814                     	;# 
  3186  081A                     	;# 
  3187  081A                     	;# 
  3188  081B                     	;# 
  3189  081C                     	;# 
  3190  081C                     	;# 
  3191  081D                     	;# 
  3192  081E                     	;# 
  3193  081F                     	;# 
  3194  088C                     	;# 
  3195  088D                     	;# 
  3196  088E                     	;# 
  3197  088F                     	;# 
  3198  0890                     	;# 
  3199  0891                     	;# 
  3200  0892                     	;# 
  3201  0893                     	;# 
  3202  0895                     	;# 
  3203  0896                     	;# 
  3204  0897                     	;# 
  3205  0898                     	;# 
  3206  0899                     	;# 
  3207  089A                     	;# 
  3208  089B                     	;# 
  3209  090C                     	;# 
  3210  090E                     	;# 
  3211  090F                     	;# 
  3212  091F                     	;# 
  3213  098F                     	;# 
  3214  098F                     	;# 
  3215  0990                     	;# 
  3216  0991                     	;# 
  3217  0992                     	;# 
  3218  0993                     	;# 
  3219  0994                     	;# 
  3220  0995                     	;# 
  3221  0996                     	;# 
  3222  0997                     	;# 
  3223  1E0F                     	;# 
  3224  1E10                     	;# 
  3225  1E11                     	;# 
  3226  1E12                     	;# 
  3227  1E13                     	;# 
  3228  1E14                     	;# 
  3229  1E15                     	;# 
  3230  1E16                     	;# 
  3231  1E17                     	;# 
  3232  1E18                     	;# 
  3233  1E19                     	;# 
  3234  1E1A                     	;# 
  3235  1E1B                     	;# 
  3236  1E1C                     	;# 
  3237  1E1D                     	;# 
  3238  1E1E                     	;# 
  3239  1E1F                     	;# 
  3240  1E20                     	;# 
  3241  1E21                     	;# 
  3242  1E22                     	;# 
  3243  1E23                     	;# 
  3244  1E24                     	;# 
  3245  1E25                     	;# 
  3246  1E26                     	;# 
  3247  1E27                     	;# 
  3248  1E28                     	;# 
  3249  1E29                     	;# 
  3250  1E2A                     	;# 
  3251  1E2B                     	;# 
  3252  1E2C                     	;# 
  3253  1E2D                     	;# 
  3254  1E2E                     	;# 
  3255  1E2F                     	;# 
  3256  1E30                     	;# 
  3257  1E31                     	;# 
  3258  1E32                     	;# 
  3259  1E33                     	;# 
  3260  1E34                     	;# 
  3261  1E35                     	;# 
  3262  1E36                     	;# 
  3263  1E37                     	;# 
  3264  1E8F                     	;# 
  3265  1E90                     	;# 
  3266  1E91                     	;# 
  3267  1E92                     	;# 
  3268  1E93                     	;# 
  3269  1E94                     	;# 
  3270  1E95                     	;# 
  3271  1E96                     	;# 
  3272  1E97                     	;# 
  3273  1E9C                     	;# 
  3274  1E9D                     	;# 
  3275  1E9E                     	;# 
  3276  1EA1                     	;# 
  3277  1EA2                     	;# 
  3278  1EA3                     	;# 
  3279  1EA4                     	;# 
  3280  1EA9                     	;# 
  3281  1EAA                     	;# 
  3282  1EB1                     	;# 
  3283  1EB2                     	;# 
  3284  1EB8                     	;# 
  3285  1EB9                     	;# 
  3286  1EBA                     	;# 
  3287  1EBB                     	;# 
  3288  1EBC                     	;# 
  3289  1EBD                     	;# 
  3290  1EBE                     	;# 
  3291  1EC3                     	;# 
  3292  1EC5                     	;# 
  3293  1EC6                     	;# 
  3294  1EC7                     	;# 
  3295  1EC8                     	;# 
  3296  1EC9                     	;# 
  3297  1ECA                     	;# 
  3298  1ECB                     	;# 
  3299  1ECB                     	;# 
  3300  1ECB                     	;# 
  3301  1ECC                     	;# 
  3302  1ECC                     	;# 
  3303  1ECC                     	;# 
  3304  1F10                     	;# 
  3305  1F11                     	;# 
  3306  1F12                     	;# 
  3307  1F14                     	;# 
  3308  1F15                     	;# 
  3309  1F1C                     	;# 
  3310  1F1D                     	;# 
  3311  1F1E                     	;# 
  3312  1F1F                     	;# 
  3313  1F20                     	;# 
  3314  1F21                     	;# 
  3315  1F22                     	;# 
  3316  1F23                     	;# 
  3317  1F24                     	;# 
  3318  1F25                     	;# 
  3319  1F26                     	;# 
  3320  1F27                     	;# 
  3321  1F38                     	;# 
  3322  1F39                     	;# 
  3323  1F3A                     	;# 
  3324  1F3B                     	;# 
  3325  1F3C                     	;# 
  3326  1F3D                     	;# 
  3327  1F3E                     	;# 
  3328  1F3F                     	;# 
  3329  1F43                     	;# 
  3330  1F44                     	;# 
  3331  1F45                     	;# 
  3332  1F46                     	;# 
  3333  1F47                     	;# 
  3334  1F48                     	;# 
  3335  1F49                     	;# 
  3336  1F4A                     	;# 
  3337  1F4E                     	;# 
  3338  1F4F                     	;# 
  3339  1F50                     	;# 
  3340  1F51                     	;# 
  3341  1F52                     	;# 
  3342  1F53                     	;# 
  3343  1F54                     	;# 
  3344  1F55                     	;# 
  3345  1FE4                     	;# 
  3346  1FE5                     	;# 
  3347  1FE6                     	;# 
  3348  1FE7                     	;# 
  3349  1FE8                     	;# 
  3350  1FE8                     	;# 
  3351  1FE9                     	;# 
  3352  1FEA                     	;# 
  3353  1FEB                     	;# 
  3354  1FED                     	;# 
  3355  1FEE                     	;# 
  3356  1FEF                     	;# 
  3357  0000                     	;# 
  3358  0001                     	;# 
  3359  0002                     	;# 
  3360  0003                     	;# 
  3361  0004                     	;# 
  3362  0005                     	;# 
  3363  0006                     	;# 
  3364  0007                     	;# 
  3365  0008                     	;# 
  3366  0009                     	;# 
  3367  000A                     	;# 
  3368  000B                     	;# 
  3369  000C                     	;# 
  3370  000D                     	;# 
  3371  000E                     	;# 
  3372  0012                     	;# 
  3373  0013                     	;# 
  3374  0014                     	;# 
  3375  0018                     	;# 
  3376  0019                     	;# 
  3377  001A                     	;# 
  3378  008C                     	;# 
  3379  008C                     	;# 
  3380  008D                     	;# 
  3381  008E                     	;# 
  3382  008E                     	;# 
  3383  008F                     	;# 
  3384  0090                     	;# 
  3385  0090                     	;# 
  3386  0091                     	;# 
  3387  0092                     	;# 
  3388  0092                     	;# 
  3389  0093                     	;# 
  3390  0094                     	;# 
  3391  0094                     	;# 
  3392  0095                     	;# 
  3393  0096                     	;# 
  3394  0096                     	;# 
  3395  0097                     	;# 
  3396  0098                     	;# 
  3397  0099                     	;# 
  3398  009A                     	;# 
  3399  009B                     	;# 
  3400  009B                     	;# 
  3401  009C                     	;# 
  3402  009D                     	;# 
  3403  009D                     	;# 
  3404  009E                     	;# 
  3405  009F                     	;# 
  3406  010C                     	;# 
  3407  010C                     	;# 
  3408  010D                     	;# 
  3409  010E                     	;# 
  3410  010F                     	;# 
  3411  010F                     	;# 
  3412  0110                     	;# 
  3413  0111                     	;# 
  3414  0112                     	;# 
  3415  0113                     	;# 
  3416  0114                     	;# 
  3417  0115                     	;# 
  3418  0116                     	;# 
  3419  0117                     	;# 
  3420  0118                     	;# 
  3421  0119                     	;# 
  3422  0119                     	;# 
  3423  0119                     	;# 
  3424  011A                     	;# 
  3425  011A                     	;# 
  3426  011A                     	;# 
  3427  011B                     	;# 
  3428  011B                     	;# 
  3429  011B                     	;# 
  3430  011B                     	;# 
  3431  011B                     	;# 
  3432  011C                     	;# 
  3433  011C                     	;# 
  3434  011C                     	;# 
  3435  011D                     	;# 
  3436  011D                     	;# 
  3437  011D                     	;# 
  3438  011E                     	;# 
  3439  011E                     	;# 
  3440  011E                     	;# 
  3441  011F                     	;# 
  3442  011F                     	;# 
  3443  011F                     	;# 
  3444  011F                     	;# 
  3445  011F                     	;# 
  3446  018C                     	;# 
  3447  018D                     	;# 
  3448  018E                     	;# 
  3449  018F                     	;# 
  3450  0190                     	;# 
  3451  0191                     	;# 
  3452  0192                     	;# 
  3453  0196                     	;# 
  3454  0197                     	;# 
  3455  0198                     	;# 
  3456  0199                     	;# 
  3457  019A                     	;# 
  3458  019B                     	;# 
  3459  019C                     	;# 
  3460  020C                     	;# 
  3461  020D                     	;# 
  3462  020E                     	;# 
  3463  020E                     	;# 
  3464  020F                     	;# 
  3465  020F                     	;# 
  3466  0210                     	;# 
  3467  0210                     	;# 
  3468  0211                     	;# 
  3469  0211                     	;# 
  3470  0212                     	;# 
  3471  0213                     	;# 
  3472  0214                     	;# 
  3473  0214                     	;# 
  3474  0215                     	;# 
  3475  0215                     	;# 
  3476  0216                     	;# 
  3477  0216                     	;# 
  3478  0217                     	;# 
  3479  0217                     	;# 
  3480  0218                     	;# 
  3481  0219                     	;# 
  3482  021A                     	;# 
  3483  021A                     	;# 
  3484  021B                     	;# 
  3485  021B                     	;# 
  3486  021C                     	;# 
  3487  021C                     	;# 
  3488  021D                     	;# 
  3489  021D                     	;# 
  3490  021E                     	;# 
  3491  021F                     	;# 
  3492  028C                     	;# 
  3493  028C                     	;# 
  3494  028D                     	;# 
  3495  028D                     	;# 
  3496  028E                     	;# 
  3497  028F                     	;# 
  3498  0290                     	;# 
  3499  0291                     	;# 
  3500  0292                     	;# 
  3501  0292                     	;# 
  3502  0293                     	;# 
  3503  0293                     	;# 
  3504  0294                     	;# 
  3505  0295                     	;# 
  3506  0296                     	;# 
  3507  0297                     	;# 
  3508  0298                     	;# 
  3509  0298                     	;# 
  3510  0299                     	;# 
  3511  0299                     	;# 
  3512  029A                     	;# 
  3513  029B                     	;# 
  3514  029C                     	;# 
  3515  029D                     	;# 
  3516  029F                     	;# 
  3517  030C                     	;# 
  3518  030C                     	;# 
  3519  030D                     	;# 
  3520  030E                     	;# 
  3521  030F                     	;# 
  3522  0310                     	;# 
  3523  0310                     	;# 
  3524  0311                     	;# 
  3525  0312                     	;# 
  3526  0313                     	;# 
  3527  0314                     	;# 
  3528  0314                     	;# 
  3529  0315                     	;# 
  3530  0316                     	;# 
  3531  0317                     	;# 
  3532  0318                     	;# 
  3533  0318                     	;# 
  3534  0319                     	;# 
  3535  031A                     	;# 
  3536  031B                     	;# 
  3537  038C                     	;# 
  3538  038C                     	;# 
  3539  038D                     	;# 
  3540  038E                     	;# 
  3541  0390                     	;# 
  3542  0390                     	;# 
  3543  0391                     	;# 
  3544  0392                     	;# 
  3545  048C                     	;# 
  3546  048C                     	;# 
  3547  048D                     	;# 
  3548  048E                     	;# 
  3549  048F                     	;# 
  3550  048F                     	;# 
  3551  0490                     	;# 
  3552  0491                     	;# 
  3553  0492                     	;# 
  3554  0492                     	;# 
  3555  0493                     	;# 
  3556  0494                     	;# 
  3557  0495                     	;# 
  3558  0495                     	;# 
  3559  0496                     	;# 
  3560  0497                     	;# 
  3561  0498                     	;# 
  3562  0499                     	;# 
  3563  049A                     	;# 
  3564  049B                     	;# 
  3565  049C                     	;# 
  3566  049D                     	;# 
  3567  058C                     	;# 
  3568  058C                     	;# 
  3569  058D                     	;# 
  3570  058E                     	;# 
  3571  058F                     	;# 
  3572  058F                     	;# 
  3573  0590                     	;# 
  3574  0591                     	;# 
  3575  0592                     	;# 
  3576  0593                     	;# 
  3577  059C                     	;# 
  3578  059C                     	;# 
  3579  059D                     	;# 
  3580  059D                     	;# 
  3581  059E                     	;# 
  3582  059F                     	;# 
  3583  060C                     	;# 
  3584  060C                     	;# 
  3585  060D                     	;# 
  3586  060D                     	;# 
  3587  060E                     	;# 
  3588  060F                     	;# 
  3589  0610                     	;# 
  3590  0611                     	;# 
  3591  0612                     	;# 
  3592  0613                     	;# 
  3593  0614                     	;# 
  3594  0616                     	;# 
  3595  0616                     	;# 
  3596  0617                     	;# 
  3597  0617                     	;# 
  3598  0618                     	;# 
  3599  0619                     	;# 
  3600  061A                     	;# 
  3601  061B                     	;# 
  3602  061C                     	;# 
  3603  061D                     	;# 
  3604  061E                     	;# 
  3605  070C                     	;# 
  3606  070D                     	;# 
  3607  070E                     	;# 
  3608  070F                     	;# 
  3609  0710                     	;# 
  3610  0711                     	;# 
  3611  0712                     	;# 
  3612  0713                     	;# 
  3613  0714                     	;# 
  3614  0716                     	;# 
  3615  0717                     	;# 
  3616  0718                     	;# 
  3617  0719                     	;# 
  3618  071A                     	;# 
  3619  071B                     	;# 
  3620  071C                     	;# 
  3621  071D                     	;# 
  3622  071E                     	;# 
  3623  0796                     	;# 
  3624  0797                     	;# 
  3625  0798                     	;# 
  3626  0799                     	;# 
  3627  079A                     	;# 
  3628  079B                     	;# 
  3629  079C                     	;# 
  3630  079D                     	;# 
  3631  080C                     	;# 
  3632  080D                     	;# 
  3633  080E                     	;# 
  3634  080F                     	;# 
  3635  0810                     	;# 
  3636  0811                     	;# 
  3637  0812                     	;# 
  3638  0813                     	;# 
  3639  0814                     	;# 
  3640  081A                     	;# 
  3641  081A                     	;# 
  3642  081B                     	;# 
  3643  081C                     	;# 
  3644  081C                     	;# 
  3645  081D                     	;# 
  3646  081E                     	;# 
  3647  081F                     	;# 
  3648  088C                     	;# 
  3649  088D                     	;# 
  3650  088E                     	;# 
  3651  088F                     	;# 
  3652  0890                     	;# 
  3653  0891                     	;# 
  3654  0892                     	;# 
  3655  0893                     	;# 
  3656  0895                     	;# 
  3657  0896                     	;# 
  3658  0897                     	;# 
  3659  0898                     	;# 
  3660  0899                     	;# 
  3661  089A                     	;# 
  3662  089B                     	;# 
  3663  090C                     	;# 
  3664  090E                     	;# 
  3665  090F                     	;# 
  3666  091F                     	;# 
  3667  098F                     	;# 
  3668  098F                     	;# 
  3669  0990                     	;# 
  3670  0991                     	;# 
  3671  0992                     	;# 
  3672  0993                     	;# 
  3673  0994                     	;# 
  3674  0995                     	;# 
  3675  0996                     	;# 
  3676  0997                     	;# 
  3677  1E0F                     	;# 
  3678  1E10                     	;# 
  3679  1E11                     	;# 
  3680  1E12                     	;# 
  3681  1E13                     	;# 
  3682  1E14                     	;# 
  3683  1E15                     	;# 
  3684  1E16                     	;# 
  3685  1E17                     	;# 
  3686  1E18                     	;# 
  3687  1E19                     	;# 
  3688  1E1A                     	;# 
  3689  1E1B                     	;# 
  3690  1E1C                     	;# 
  3691  1E1D                     	;# 
  3692  1E1E                     	;# 
  3693  1E1F                     	;# 
  3694  1E20                     	;# 
  3695  1E21                     	;# 
  3696  1E22                     	;# 
  3697  1E23                     	;# 
  3698  1E24                     	;# 
  3699  1E25                     	;# 
  3700  1E26                     	;# 
  3701  1E27                     	;# 
  3702  1E28                     	;# 
  3703  1E29                     	;# 
  3704  1E2A                     	;# 
  3705  1E2B                     	;# 
  3706  1E2C                     	;# 
  3707  1E2D                     	;# 
  3708  1E2E                     	;# 
  3709  1E2F                     	;# 
  3710  1E30                     	;# 
  3711  1E31                     	;# 
  3712  1E32                     	;# 
  3713  1E33                     	;# 
  3714  1E34                     	;# 
  3715  1E35                     	;# 
  3716  1E36                     	;# 
  3717  1E37                     	;# 
  3718  1E8F                     	;# 
  3719  1E90                     	;# 
  3720  1E91                     	;# 
  3721  1E92                     	;# 
  3722  1E93                     	;# 
  3723  1E94                     	;# 
  3724  1E95                     	;# 
  3725  1E96                     	;# 
  3726  1E97                     	;# 
  3727  1E9C                     	;# 
  3728  1E9D                     	;# 
  3729  1E9E                     	;# 
  3730  1EA1                     	;# 
  3731  1EA2                     	;# 
  3732  1EA3                     	;# 
  3733  1EA4                     	;# 
  3734  1EA9                     	;# 
  3735  1EAA                     	;# 
  3736  1EB1                     	;# 
  3737  1EB2                     	;# 
  3738  1EB8                     	;# 
  3739  1EB9                     	;# 
  3740  1EBA                     	;# 
  3741  1EBB                     	;# 
  3742  1EBC                     	;# 
  3743  1EBD                     	;# 
  3744  1EBE                     	;# 
  3745  1EC3                     	;# 
  3746  1EC5                     	;# 
  3747  1EC6                     	;# 
  3748  1EC7                     	;# 
  3749  1EC8                     	;# 
  3750  1EC9                     	;# 
  3751  1ECA                     	;# 
  3752  1ECB                     	;# 
  3753  1ECB                     	;# 
  3754  1ECB                     	;# 
  3755  1ECC                     	;# 
  3756  1ECC                     	;# 
  3757  1ECC                     	;# 
  3758  1F10                     	;# 
  3759  1F11                     	;# 
  3760  1F12                     	;# 
  3761  1F14                     	;# 
  3762  1F15                     	;# 
  3763  1F1C                     	;# 
  3764  1F1D                     	;# 
  3765  1F1E                     	;# 
  3766  1F1F                     	;# 
  3767  1F20                     	;# 
  3768  1F21                     	;# 
  3769  1F22                     	;# 
  3770  1F23                     	;# 
  3771  1F24                     	;# 
  3772  1F25                     	;# 
  3773  1F26                     	;# 
  3774  1F27                     	;# 
  3775  1F38                     	;# 
  3776  1F39                     	;# 
  3777  1F3A                     	;# 
  3778  1F3B                     	;# 
  3779  1F3C                     	;# 
  3780  1F3D                     	;# 
  3781  1F3E                     	;# 
  3782  1F3F                     	;# 
  3783  1F43                     	;# 
  3784  1F44                     	;# 
  3785  1F45                     	;# 
  3786  1F46                     	;# 
  3787  1F47                     	;# 
  3788  1F48                     	;# 
  3789  1F49                     	;# 
  3790  1F4A                     	;# 
  3791  1F4E                     	;# 
  3792  1F4F                     	;# 
  3793  1F50                     	;# 
  3794  1F51                     	;# 
  3795  1F52                     	;# 
  3796  1F53                     	;# 
  3797  1F54                     	;# 
  3798  1F55                     	;# 
  3799  1FE4                     	;# 
  3800  1FE5                     	;# 
  3801  1FE6                     	;# 
  3802  1FE7                     	;# 
  3803  1FE8                     	;# 
  3804  1FE8                     	;# 
  3805  1FE9                     	;# 
  3806  1FEA                     	;# 
  3807  1FEB                     	;# 
  3808  1FED                     	;# 
  3809  1FEE                     	;# 
  3810  1FEF                     	;# 
  3811  0000                     	;# 
  3812  0001                     	;# 
  3813  0002                     	;# 
  3814  0003                     	;# 
  3815  0004                     	;# 
  3816  0005                     	;# 
  3817  0006                     	;# 
  3818  0007                     	;# 
  3819  0008                     	;# 
  3820  0009                     	;# 
  3821  000A                     	;# 
  3822  000B                     	;# 
  3823  000C                     	;# 
  3824  000D                     	;# 
  3825  000E                     	;# 
  3826  0012                     	;# 
  3827  0013                     	;# 
  3828  0014                     	;# 
  3829  0018                     	;# 
  3830  0019                     	;# 
  3831  001A                     	;# 
  3832  008C                     	;# 
  3833  008C                     	;# 
  3834  008D                     	;# 
  3835  008E                     	;# 
  3836  008E                     	;# 
  3837  008F                     	;# 
  3838  0090                     	;# 
  3839  0090                     	;# 
  3840  0091                     	;# 
  3841  0092                     	;# 
  3842  0092                     	;# 
  3843  0093                     	;# 
  3844  0094                     	;# 
  3845  0094                     	;# 
  3846  0095                     	;# 
  3847  0096                     	;# 
  3848  0096                     	;# 
  3849  0097                     	;# 
  3850  0098                     	;# 
  3851  0099                     	;# 
  3852  009A                     	;# 
  3853  009B                     	;# 
  3854  009B                     	;# 
  3855  009C                     	;# 
  3856  009D                     	;# 
  3857  009D                     	;# 
  3858  009E                     	;# 
  3859  009F                     	;# 
  3860  010C                     	;# 
  3861  010C                     	;# 
  3862  010D                     	;# 
  3863  010E                     	;# 
  3864  010F                     	;# 
  3865  010F                     	;# 
  3866  0110                     	;# 
  3867  0111                     	;# 
  3868  0112                     	;# 
  3869  0113                     	;# 
  3870  0114                     	;# 
  3871  0115                     	;# 
  3872  0116                     	;# 
  3873  0117                     	;# 
  3874  0118                     	;# 
  3875  0119                     	;# 
  3876  0119                     	;# 
  3877  0119                     	;# 
  3878  011A                     	;# 
  3879  011A                     	;# 
  3880  011A                     	;# 
  3881  011B                     	;# 
  3882  011B                     	;# 
  3883  011B                     	;# 
  3884  011B                     	;# 
  3885  011B                     	;# 
  3886  011C                     	;# 
  3887  011C                     	;# 
  3888  011C                     	;# 
  3889  011D                     	;# 
  3890  011D                     	;# 
  3891  011D                     	;# 
  3892  011E                     	;# 
  3893  011E                     	;# 
  3894  011E                     	;# 
  3895  011F                     	;# 
  3896  011F                     	;# 
  3897  011F                     	;# 
  3898  011F                     	;# 
  3899  011F                     	;# 
  3900  018C                     	;# 
  3901  018D                     	;# 
  3902  018E                     	;# 
  3903  018F                     	;# 
  3904  0190                     	;# 
  3905  0191                     	;# 
  3906  0192                     	;# 
  3907  0196                     	;# 
  3908  0197                     	;# 
  3909  0198                     	;# 
  3910  0199                     	;# 
  3911  019A                     	;# 
  3912  019B                     	;# 
  3913  019C                     	;# 
  3914  020C                     	;# 
  3915  020D                     	;# 
  3916  020E                     	;# 
  3917  020E                     	;# 
  3918  020F                     	;# 
  3919  020F                     	;# 
  3920  0210                     	;# 
  3921  0210                     	;# 
  3922  0211                     	;# 
  3923  0211                     	;# 
  3924  0212                     	;# 
  3925  0213                     	;# 
  3926  0214                     	;# 
  3927  0214                     	;# 
  3928  0215                     	;# 
  3929  0215                     	;# 
  3930  0216                     	;# 
  3931  0216                     	;# 
  3932  0217                     	;# 
  3933  0217                     	;# 
  3934  0218                     	;# 
  3935  0219                     	;# 
  3936  021A                     	;# 
  3937  021A                     	;# 
  3938  021B                     	;# 
  3939  021B                     	;# 
  3940  021C                     	;# 
  3941  021C                     	;# 
  3942  021D                     	;# 
  3943  021D                     	;# 
  3944  021E                     	;# 
  3945  021F                     	;# 
  3946  028C                     	;# 
  3947  028C                     	;# 
  3948  028D                     	;# 
  3949  028D                     	;# 
  3950  028E                     	;# 
  3951  028F                     	;# 
  3952  0290                     	;# 
  3953  0291                     	;# 
  3954  0292                     	;# 
  3955  0292                     	;# 
  3956  0293                     	;# 
  3957  0293                     	;# 
  3958  0294                     	;# 
  3959  0295                     	;# 
  3960  0296                     	;# 
  3961  0297                     	;# 
  3962  0298                     	;# 
  3963  0298                     	;# 
  3964  0299                     	;# 
  3965  0299                     	;# 
  3966  029A                     	;# 
  3967  029B                     	;# 
  3968  029C                     	;# 
  3969  029D                     	;# 
  3970  029F                     	;# 
  3971  030C                     	;# 
  3972  030C                     	;# 
  3973  030D                     	;# 
  3974  030E                     	;# 
  3975  030F                     	;# 
  3976  0310                     	;# 
  3977  0310                     	;# 
  3978  0311                     	;# 
  3979  0312                     	;# 
  3980  0313                     	;# 
  3981  0314                     	;# 
  3982  0314                     	;# 
  3983  0315                     	;# 
  3984  0316                     	;# 
  3985  0317                     	;# 
  3986  0318                     	;# 
  3987  0318                     	;# 
  3988  0319                     	;# 
  3989  031A                     	;# 
  3990  031B                     	;# 
  3991  038C                     	;# 
  3992  038C                     	;# 
  3993  038D                     	;# 
  3994  038E                     	;# 
  3995  0390                     	;# 
  3996  0390                     	;# 
  3997  0391                     	;# 
  3998  0392                     	;# 
  3999  048C                     	;# 
  4000  048C                     	;# 
  4001  048D                     	;# 
  4002  048E                     	;# 
  4003  048F                     	;# 
  4004  048F                     	;# 
  4005  0490                     	;# 
  4006  0491                     	;# 
  4007  0492                     	;# 
  4008  0492                     	;# 
  4009  0493                     	;# 
  4010  0494                     	;# 
  4011  0495                     	;# 
  4012  0495                     	;# 
  4013  0496                     	;# 
  4014  0497                     	;# 
  4015  0498                     	;# 
  4016  0499                     	;# 
  4017  049A                     	;# 
  4018  049B                     	;# 
  4019  049C                     	;# 
  4020  049D                     	;# 
  4021  058C                     	;# 
  4022  058C                     	;# 
  4023  058D                     	;# 
  4024  058E                     	;# 
  4025  058F                     	;# 
  4026  058F                     	;# 
  4027  0590                     	;# 
  4028  0591                     	;# 
  4029  0592                     	;# 
  4030  0593                     	;# 
  4031  059C                     	;# 
  4032  059C                     	;# 
  4033  059D                     	;# 
  4034  059D                     	;# 
  4035  059E                     	;# 
  4036  059F                     	;# 
  4037  060C                     	;# 
  4038  060C                     	;# 
  4039  060D                     	;# 
  4040  060D                     	;# 
  4041  060E                     	;# 
  4042  060F                     	;# 
  4043  0610                     	;# 
  4044  0611                     	;# 
  4045  0612                     	;# 
  4046  0613                     	;# 
  4047  0614                     	;# 
  4048  0616                     	;# 
  4049  0616                     	;# 
  4050  0617                     	;# 
  4051  0617                     	;# 
  4052  0618                     	;# 
  4053  0619                     	;# 
  4054  061A                     	;# 
  4055  061B                     	;# 
  4056  061C                     	;# 
  4057  061D                     	;# 
  4058  061E                     	;# 
  4059  070C                     	;# 
  4060  070D                     	;# 
  4061  070E                     	;# 
  4062  070F                     	;# 
  4063  0710                     	;# 
  4064  0711                     	;# 
  4065  0712                     	;# 
  4066  0713                     	;# 
  4067  0714                     	;# 
  4068  0716                     	;# 
  4069  0717                     	;# 
  4070  0718                     	;# 
  4071  0719                     	;# 
  4072  071A                     	;# 
  4073  071B                     	;# 
  4074  071C                     	;# 
  4075  071D                     	;# 
  4076  071E                     	;# 
  4077  0796                     	;# 
  4078  0797                     	;# 
  4079  0798                     	;# 
  4080  0799                     	;# 
  4081  079A                     	;# 
  4082  079B                     	;# 
  4083  079C                     	;# 
  4084  079D                     	;# 
  4085  080C                     	;# 
  4086  080D                     	;# 
  4087  080E                     	;# 
  4088  080F                     	;# 
  4089  0810                     	;# 
  4090  0811                     	;# 
  4091  0812                     	;# 
  4092  0813                     	;# 
  4093  0814                     	;# 
  4094  081A                     	;# 
  4095  081A                     	;# 
  4096  081B                     	;# 
  4097  081C                     	;# 
  4098  081C                     	;# 
  4099  081D                     	;# 
  4100  081E                     	;# 
  4101  081F                     	;# 
  4102  088C                     	;# 
  4103  088D                     	;# 
  4104  088E                     	;# 
  4105  088F                     	;# 
  4106  0890                     	;# 
  4107  0891                     	;# 
  4108  0892                     	;# 
  4109  0893                     	;# 
  4110  0895                     	;# 
  4111  0896                     	;# 
  4112  0897                     	;# 
  4113  0898                     	;# 
  4114  0899                     	;# 
  4115  089A                     	;# 
  4116  089B                     	;# 
  4117  090C                     	;# 
  4118  090E                     	;# 
  4119  090F                     	;# 
  4120  091F                     	;# 
  4121  098F                     	;# 
  4122  098F                     	;# 
  4123  0990                     	;# 
  4124  0991                     	;# 
  4125  0992                     	;# 
  4126  0993                     	;# 
  4127  0994                     	;# 
  4128  0995                     	;# 
  4129  0996                     	;# 
  4130  0997                     	;# 
  4131  1E0F                     	;# 
  4132  1E10                     	;# 
  4133  1E11                     	;# 
  4134  1E12                     	;# 
  4135  1E13                     	;# 
  4136  1E14                     	;# 
  4137  1E15                     	;# 
  4138  1E16                     	;# 
  4139  1E17                     	;# 
  4140  1E18                     	;# 
  4141  1E19                     	;# 
  4142  1E1A                     	;# 
  4143  1E1B                     	;# 
  4144  1E1C                     	;# 
  4145  1E1D                     	;# 
  4146  1E1E                     	;# 
  4147  1E1F                     	;# 
  4148  1E20                     	;# 
  4149  1E21                     	;# 
  4150  1E22                     	;# 
  4151  1E23                     	;# 
  4152  1E24                     	;# 
  4153  1E25                     	;# 
  4154  1E26                     	;# 
  4155  1E27                     	;# 
  4156  1E28                     	;# 
  4157  1E29                     	;# 
  4158  1E2A                     	;# 
  4159  1E2B                     	;# 
  4160  1E2C                     	;# 
  4161  1E2D                     	;# 
  4162  1E2E                     	;# 
  4163  1E2F                     	;# 
  4164  1E30                     	;# 
  4165  1E31                     	;# 
  4166  1E32                     	;# 
  4167  1E33                     	;# 
  4168  1E34                     	;# 
  4169  1E35                     	;# 
  4170  1E36                     	;# 
  4171  1E37                     	;# 
  4172  1E8F                     	;# 
  4173  1E90                     	;# 
  4174  1E91                     	;# 
  4175  1E92                     	;# 
  4176  1E93                     	;# 
  4177  1E94                     	;# 
  4178  1E95                     	;# 
  4179  1E96                     	;# 
  4180  1E97                     	;# 
  4181  1E9C                     	;# 
  4182  1E9D                     	;# 
  4183  1E9E                     	;# 
  4184  1EA1                     	;# 
  4185  1EA2                     	;# 
  4186  1EA3                     	;# 
  4187  1EA4                     	;# 
  4188  1EA9                     	;# 
  4189  1EAA                     	;# 
  4190  1EB1                     	;# 
  4191  1EB2                     	;# 
  4192  1EB8                     	;# 
  4193  1EB9                     	;# 
  4194  1EBA                     	;# 
  4195  1EBB                     	;# 
  4196  1EBC                     	;# 
  4197  1EBD                     	;# 
  4198  1EBE                     	;# 
  4199  1EC3                     	;# 
  4200  1EC5                     	;# 
  4201  1EC6                     	;# 
  4202  1EC7                     	;# 
  4203  1EC8                     	;# 
  4204  1EC9                     	;# 
  4205  1ECA                     	;# 
  4206  1ECB                     	;# 
  4207  1ECB                     	;# 
  4208  1ECB                     	;# 
  4209  1ECC                     	;# 
  4210  1ECC                     	;# 
  4211  1ECC                     	;# 
  4212  1F10                     	;# 
  4213  1F11                     	;# 
  4214  1F12                     	;# 
  4215  1F14                     	;# 
  4216  1F15                     	;# 
  4217  1F1C                     	;# 
  4218  1F1D                     	;# 
  4219  1F1E                     	;# 
  4220  1F1F                     	;# 
  4221  1F20                     	;# 
  4222  1F21                     	;# 
  4223  1F22                     	;# 
  4224  1F23                     	;# 
  4225  1F24                     	;# 
  4226  1F25                     	;# 
  4227  1F26                     	;# 
  4228  1F27                     	;# 
  4229  1F38                     	;# 
  4230  1F39                     	;# 
  4231  1F3A                     	;# 
  4232  1F3B                     	;# 
  4233  1F3C                     	;# 
  4234  1F3D                     	;# 
  4235  1F3E                     	;# 
  4236  1F3F                     	;# 
  4237  1F43                     	;# 
  4238  1F44                     	;# 
  4239  1F45                     	;# 
  4240  1F46                     	;# 
  4241  1F47                     	;# 
  4242  1F48                     	;# 
  4243  1F49                     	;# 
  4244  1F4A                     	;# 
  4245  1F4E                     	;# 
  4246  1F4F                     	;# 
  4247  1F50                     	;# 
  4248  1F51                     	;# 
  4249  1F52                     	;# 
  4250  1F53                     	;# 
  4251  1F54                     	;# 
  4252  1F55                     	;# 
  4253  1FE4                     	;# 
  4254  1FE5                     	;# 
  4255  1FE6                     	;# 
  4256  1FE7                     	;# 
  4257  1FE8                     	;# 
  4258  1FE8                     	;# 
  4259  1FE9                     	;# 
  4260  1FEA                     	;# 
  4261  1FEB                     	;# 
  4262  1FED                     	;# 
  4263  1FEE                     	;# 
  4264  1FEF                     	;# 
  4265  0000                     	;# 
  4266  0001                     	;# 
  4267  0002                     	;# 
  4268  0003                     	;# 
  4269  0004                     	;# 
  4270  0005                     	;# 
  4271  0006                     	;# 
  4272  0007                     	;# 
  4273  0008                     	;# 
  4274  0009                     	;# 
  4275  000A                     	;# 
  4276  000B                     	;# 
  4277  000C                     	;# 
  4278  000D                     	;# 
  4279  000E                     	;# 
  4280  0012                     	;# 
  4281  0013                     	;# 
  4282  0014                     	;# 
  4283  0018                     	;# 
  4284  0019                     	;# 
  4285  001A                     	;# 
  4286  008C                     	;# 
  4287  008C                     	;# 
  4288  008D                     	;# 
  4289  008E                     	;# 
  4290  008E                     	;# 
  4291  008F                     	;# 
  4292  0090                     	;# 
  4293  0090                     	;# 
  4294  0091                     	;# 
  4295  0092                     	;# 
  4296  0092                     	;# 
  4297  0093                     	;# 
  4298  0094                     	;# 
  4299  0094                     	;# 
  4300  0095                     	;# 
  4301  0096                     	;# 
  4302  0096                     	;# 
  4303  0097                     	;# 
  4304  0098                     	;# 
  4305  0099                     	;# 
  4306  009A                     	;# 
  4307  009B                     	;# 
  4308  009B                     	;# 
  4309  009C                     	;# 
  4310  009D                     	;# 
  4311  009D                     	;# 
  4312  009E                     	;# 
  4313  009F                     	;# 
  4314  010C                     	;# 
  4315  010C                     	;# 
  4316  010D                     	;# 
  4317  010E                     	;# 
  4318  010F                     	;# 
  4319  010F                     	;# 
  4320  0110                     	;# 
  4321  0111                     	;# 
  4322  0112                     	;# 
  4323  0113                     	;# 
  4324  0114                     	;# 
  4325  0115                     	;# 
  4326  0116                     	;# 
  4327  0117                     	;# 
  4328  0118                     	;# 
  4329  0119                     	;# 
  4330  0119                     	;# 
  4331  0119                     	;# 
  4332  011A                     	;# 
  4333  011A                     	;# 
  4334  011A                     	;# 
  4335  011B                     	;# 
  4336  011B                     	;# 
  4337  011B                     	;# 
  4338  011B                     	;# 
  4339  011B                     	;# 
  4340  011C                     	;# 
  4341  011C                     	;# 
  4342  011C                     	;# 
  4343  011D                     	;# 
  4344  011D                     	;# 
  4345  011D                     	;# 
  4346  011E                     	;# 
  4347  011E                     	;# 
  4348  011E                     	;# 
  4349  011F                     	;# 
  4350  011F                     	;# 
  4351  011F                     	;# 
  4352  011F                     	;# 
  4353  011F                     	;# 
  4354  018C                     	;# 
  4355  018D                     	;# 
  4356  018E                     	;# 
  4357  018F                     	;# 
  4358  0190                     	;# 
  4359  0191                     	;# 
  4360  0192                     	;# 
  4361  0196                     	;# 
  4362  0197                     	;# 
  4363  0198                     	;# 
  4364  0199                     	;# 
  4365  019A                     	;# 
  4366  019B                     	;# 
  4367  019C                     	;# 
  4368  020C                     	;# 
  4369  020D                     	;# 
  4370  020E                     	;# 
  4371  020E                     	;# 
  4372  020F                     	;# 
  4373  020F                     	;# 
  4374  0210                     	;# 
  4375  0210                     	;# 
  4376  0211                     	;# 
  4377  0211                     	;# 
  4378  0212                     	;# 
  4379  0213                     	;# 
  4380  0214                     	;# 
  4381  0214                     	;# 
  4382  0215                     	;# 
  4383  0215                     	;# 
  4384  0216                     	;# 
  4385  0216                     	;# 
  4386  0217                     	;# 
  4387  0217                     	;# 
  4388  0218                     	;# 
  4389  0219                     	;# 
  4390  021A                     	;# 
  4391  021A                     	;# 
  4392  021B                     	;# 
  4393  021B                     	;# 
  4394  021C                     	;# 
  4395  021C                     	;# 
  4396  021D                     	;# 
  4397  021D                     	;# 
  4398  021E                     	;# 
  4399  021F                     	;# 
  4400  028C                     	;# 
  4401  028C                     	;# 
  4402  028D                     	;# 
  4403  028D                     	;# 
  4404  028E                     	;# 
  4405  028F                     	;# 
  4406  0290                     	;# 
  4407  0291                     	;# 
  4408  0292                     	;# 
  4409  0292                     	;# 
  4410  0293                     	;# 
  4411  0293                     	;# 
  4412  0294                     	;# 
  4413  0295                     	;# 
  4414  0296                     	;# 
  4415  0297                     	;# 
  4416  0298                     	;# 
  4417  0298                     	;# 
  4418  0299                     	;# 
  4419  0299                     	;# 
  4420  029A                     	;# 
  4421  029B                     	;# 
  4422  029C                     	;# 
  4423  029D                     	;# 
  4424  029F                     	;# 
  4425  030C                     	;# 
  4426  030C                     	;# 
  4427  030D                     	;# 
  4428  030E                     	;# 
  4429  030F                     	;# 
  4430  0310                     	;# 
  4431  0310                     	;# 
  4432  0311                     	;# 
  4433  0312                     	;# 
  4434  0313                     	;# 
  4435  0314                     	;# 
  4436  0314                     	;# 
  4437  0315                     	;# 
  4438  0316                     	;# 
  4439  0317                     	;# 
  4440  0318                     	;# 
  4441  0318                     	;# 
  4442  0319                     	;# 
  4443  031A                     	;# 
  4444  031B                     	;# 
  4445  038C                     	;# 
  4446  038C                     	;# 
  4447  038D                     	;# 
  4448  038E                     	;# 
  4449  0390                     	;# 
  4450  0390                     	;# 
  4451  0391                     	;# 
  4452  0392                     	;# 
  4453  048C                     	;# 
  4454  048C                     	;# 
  4455  048D                     	;# 
  4456  048E                     	;# 
  4457  048F                     	;# 
  4458  048F                     	;# 
  4459  0490                     	;# 
  4460  0491                     	;# 
  4461  0492                     	;# 
  4462  0492                     	;# 
  4463  0493                     	;# 
  4464  0494                     	;# 
  4465  0495                     	;# 
  4466  0495                     	;# 
  4467  0496                     	;# 
  4468  0497                     	;# 
  4469  0498                     	;# 
  4470  0499                     	;# 
  4471  049A                     	;# 
  4472  049B                     	;# 
  4473  049C                     	;# 
  4474  049D                     	;# 
  4475  058C                     	;# 
  4476  058C                     	;# 
  4477  058D                     	;# 
  4478  058E                     	;# 
  4479  058F                     	;# 
  4480  058F                     	;# 
  4481  0590                     	;# 
  4482  0591                     	;# 
  4483  0592                     	;# 
  4484  0593                     	;# 
  4485  059C                     	;# 
  4486  059C                     	;# 
  4487  059D                     	;# 
  4488  059D                     	;# 
  4489  059E                     	;# 
  4490  059F                     	;# 
  4491  060C                     	;# 
  4492  060C                     	;# 
  4493  060D                     	;# 
  4494  060D                     	;# 
  4495  060E                     	;# 
  4496  060F                     	;# 
  4497  0610                     	;# 
  4498  0611                     	;# 
  4499  0612                     	;# 
  4500  0613                     	;# 
  4501  0614                     	;# 
  4502  0616                     	;# 
  4503  0616                     	;# 
  4504  0617                     	;# 
  4505  0617                     	;# 
  4506  0618                     	;# 
  4507  0619                     	;# 
  4508  061A                     	;# 
  4509  061B                     	;# 
  4510  061C                     	;# 
  4511  061D                     	;# 
  4512  061E                     	;# 
  4513  070C                     	;# 
  4514  070D                     	;# 
  4515  070E                     	;# 
  4516  070F                     	;# 
  4517  0710                     	;# 
  4518  0711                     	;# 
  4519  0712                     	;# 
  4520  0713                     	;# 
  4521  0714                     	;# 
  4522  0716                     	;# 
  4523  0717                     	;# 
  4524  0718                     	;# 
  4525  0719                     	;# 
  4526  071A                     	;# 
  4527  071B                     	;# 
  4528  071C                     	;# 
  4529  071D                     	;# 
  4530  071E                     	;# 
  4531  0796                     	;# 
  4532  0797                     	;# 
  4533  0798                     	;# 
  4534  0799                     	;# 
  4535  079A                     	;# 
  4536  079B                     	;# 
  4537  079C                     	;# 
  4538  079D                     	;# 
  4539  080C                     	;# 
  4540  080D                     	;# 
  4541  080E                     	;# 
  4542  080F                     	;# 
  4543  0810                     	;# 
  4544  0811                     	;# 
  4545  0812                     	;# 
  4546  0813                     	;# 
  4547  0814                     	;# 
  4548  081A                     	;# 
  4549  081A                     	;# 
  4550  081B                     	;# 
  4551  081C                     	;# 
  4552  081C                     	;# 
  4553  081D                     	;# 
  4554  081E                     	;# 
  4555  081F                     	;# 
  4556  088C                     	;# 
  4557  088D                     	;# 
  4558  088E                     	;# 
  4559  088F                     	;# 
  4560  0890                     	;# 
  4561  0891                     	;# 
  4562  0892                     	;# 
  4563  0893                     	;# 
  4564  0895                     	;# 
  4565  0896                     	;# 
  4566  0897                     	;# 
  4567  0898                     	;# 
  4568  0899                     	;# 
  4569  089A                     	;# 
  4570  089B                     	;# 
  4571  090C                     	;# 
  4572  090E                     	;# 
  4573  090F                     	;# 
  4574  091F                     	;# 
  4575  098F                     	;# 
  4576  098F                     	;# 
  4577  0990                     	;# 
  4578  0991                     	;# 
  4579  0992                     	;# 
  4580  0993                     	;# 
  4581  0994                     	;# 
  4582  0995                     	;# 
  4583  0996                     	;# 
  4584  0997                     	;# 
  4585  1E0F                     	;# 
  4586  1E10                     	;# 
  4587  1E11                     	;# 
  4588  1E12                     	;# 
  4589  1E13                     	;# 
  4590  1E14                     	;# 
  4591  1E15                     	;# 
  4592  1E16                     	;# 
  4593  1E17                     	;# 
  4594  1E18                     	;# 
  4595  1E19                     	;# 
  4596  1E1A                     	;# 
  4597  1E1B                     	;# 
  4598  1E1C                     	;# 
  4599  1E1D                     	;# 
  4600  1E1E                     	;# 
  4601  1E1F                     	;# 
  4602  1E20                     	;# 
  4603  1E21                     	;# 
  4604  1E22                     	;# 
  4605  1E23                     	;# 
  4606  1E24                     	;# 
  4607  1E25                     	;# 
  4608  1E26                     	;# 
  4609  1E27                     	;# 
  4610  1E28                     	;# 
  4611  1E29                     	;# 
  4612  1E2A                     	;# 
  4613  1E2B                     	;# 
  4614  1E2C                     	;# 
  4615  1E2D                     	;# 
  4616  1E2E                     	;# 
  4617  1E2F                     	;# 
  4618  1E30                     	;# 
  4619  1E31                     	;# 
  4620  1E32                     	;# 
  4621  1E33                     	;# 
  4622  1E34                     	;# 
  4623  1E35                     	;# 
  4624  1E36                     	;# 
  4625  1E37                     	;# 
  4626  1E8F                     	;# 
  4627  1E90                     	;# 
  4628  1E91                     	;# 
  4629  1E92                     	;# 
  4630  1E93                     	;# 
  4631  1E94                     	;# 
  4632  1E95                     	;# 
  4633  1E96                     	;# 
  4634  1E97                     	;# 
  4635  1E9C                     	;# 
  4636  1E9D                     	;# 
  4637  1E9E                     	;# 
  4638  1EA1                     	;# 
  4639  1EA2                     	;# 
  4640  1EA3                     	;# 
  4641  1EA4                     	;# 
  4642  1EA9                     	;# 
  4643  1EAA                     	;# 
  4644  1EB1                     	;# 
  4645  1EB2                     	;# 
  4646  1EB8                     	;# 
  4647  1EB9                     	;# 
  4648  1EBA                     	;# 
  4649  1EBB                     	;# 
  4650  1EBC                     	;# 
  4651  1EBD                     	;# 
  4652  1EBE                     	;# 
  4653  1EC3                     	;# 
  4654  1EC5                     	;# 
  4655  1EC6                     	;# 
  4656  1EC7                     	;# 
  4657  1EC8                     	;# 
  4658  1EC9                     	;# 
  4659  1ECA                     	;# 
  4660  1ECB                     	;# 
  4661  1ECB                     	;# 
  4662  1ECB                     	;# 
  4663  1ECC                     	;# 
  4664  1ECC                     	;# 
  4665  1ECC                     	;# 
  4666  1F10                     	;# 
  4667  1F11                     	;# 
  4668  1F12                     	;# 
  4669  1F14                     	;# 
  4670  1F15                     	;# 
  4671  1F1C                     	;# 
  4672  1F1D                     	;# 
  4673  1F1E                     	;# 
  4674  1F1F                     	;# 
  4675  1F20                     	;# 
  4676  1F21                     	;# 
  4677  1F22                     	;# 
  4678  1F23                     	;# 
  4679  1F24                     	;# 
  4680  1F25                     	;# 
  4681  1F26                     	;# 
  4682  1F27                     	;# 
  4683  1F38                     	;# 
  4684  1F39                     	;# 
  4685  1F3A                     	;# 
  4686  1F3B                     	;# 
  4687  1F3C                     	;# 
  4688  1F3D                     	;# 
  4689  1F3E                     	;# 
  4690  1F3F                     	;# 
  4691  1F43                     	;# 
  4692  1F44                     	;# 
  4693  1F45                     	;# 
  4694  1F46                     	;# 
  4695  1F47                     	;# 
  4696  1F48                     	;# 
  4697  1F49                     	;# 
  4698  1F4A                     	;# 
  4699  1F4E                     	;# 
  4700  1F4F                     	;# 
  4701  1F50                     	;# 
  4702  1F51                     	;# 
  4703  1F52                     	;# 
  4704  1F53                     	;# 
  4705  1F54                     	;# 
  4706  1F55                     	;# 
  4707  1FE4                     	;# 
  4708  1FE5                     	;# 
  4709  1FE6                     	;# 
  4710  1FE7                     	;# 
  4711  1FE8                     	;# 
  4712  1FE8                     	;# 
  4713  1FE9                     	;# 
  4714  1FEA                     	;# 
  4715  1FEB                     	;# 
  4716  1FED                     	;# 
  4717  1FEE                     	;# 
  4718  1FEF                     	;# 
  4719  0000                     	;# 
  4720  0001                     	;# 
  4721  0002                     	;# 
  4722  0003                     	;# 
  4723  0004                     	;# 
  4724  0005                     	;# 
  4725  0006                     	;# 
  4726  0007                     	;# 
  4727  0008                     	;# 
  4728  0009                     	;# 
  4729  000A                     	;# 
  4730  000B                     	;# 
  4731  000C                     	;# 
  4732  000D                     	;# 
  4733  000E                     	;# 
  4734  0012                     	;# 
  4735  0013                     	;# 
  4736  0014                     	;# 
  4737  0018                     	;# 
  4738  0019                     	;# 
  4739  001A                     	;# 
  4740  008C                     	;# 
  4741  008C                     	;# 
  4742  008D                     	;# 
  4743  008E                     	;# 
  4744  008E                     	;# 
  4745  008F                     	;# 
  4746  0090                     	;# 
  4747  0090                     	;# 
  4748  0091                     	;# 
  4749  0092                     	;# 
  4750  0092                     	;# 
  4751  0093                     	;# 
  4752  0094                     	;# 
  4753  0094                     	;# 
  4754  0095                     	;# 
  4755  0096                     	;# 
  4756  0096                     	;# 
  4757  0097                     	;# 
  4758  0098                     	;# 
  4759  0099                     	;# 
  4760  009A                     	;# 
  4761  009B                     	;# 
  4762  009B                     	;# 
  4763  009C                     	;# 
  4764  009D                     	;# 
  4765  009D                     	;# 
  4766  009E                     	;# 
  4767  009F                     	;# 
  4768  010C                     	;# 
  4769  010C                     	;# 
  4770  010D                     	;# 
  4771  010E                     	;# 
  4772  010F                     	;# 
  4773  010F                     	;# 
  4774  0110                     	;# 
  4775  0111                     	;# 
  4776  0112                     	;# 
  4777  0113                     	;# 
  4778  0114                     	;# 
  4779  0115                     	;# 
  4780  0116                     	;# 
  4781  0117                     	;# 
  4782  0118                     	;# 
  4783  0119                     	;# 
  4784  0119                     	;# 
  4785  0119                     	;# 
  4786  011A                     	;# 
  4787  011A                     	;# 
  4788  011A                     	;# 
  4789  011B                     	;# 
  4790  011B                     	;# 
  4791  011B                     	;# 
  4792  011B                     	;# 
  4793  011B                     	;# 
  4794  011C                     	;# 
  4795  011C                     	;# 
  4796  011C                     	;# 
  4797  011D                     	;# 
  4798  011D                     	;# 
  4799  011D                     	;# 
  4800  011E                     	;# 
  4801  011E                     	;# 
  4802  011E                     	;# 
  4803  011F                     	;# 
  4804  011F                     	;# 
  4805  011F                     	;# 
  4806  011F                     	;# 
  4807  011F                     	;# 
  4808  018C                     	;# 
  4809  018D                     	;# 
  4810  018E                     	;# 
  4811  018F                     	;# 
  4812  0190                     	;# 
  4813  0191                     	;# 
  4814  0192                     	;# 
  4815  0196                     	;# 
  4816  0197                     	;# 
  4817  0198                     	;# 
  4818  0199                     	;# 
  4819  019A                     	;# 
  4820  019B                     	;# 
  4821  019C                     	;# 
  4822  020C                     	;# 
  4823  020D                     	;# 
  4824  020E                     	;# 
  4825  020E                     	;# 
  4826  020F                     	;# 
  4827  020F                     	;# 
  4828  0210                     	;# 
  4829  0210                     	;# 
  4830  0211                     	;# 
  4831  0211                     	;# 
  4832  0212                     	;# 
  4833  0213                     	;# 
  4834  0214                     	;# 
  4835  0214                     	;# 
  4836  0215                     	;# 
  4837  0215                     	;# 
  4838  0216                     	;# 
  4839  0216                     	;# 
  4840  0217                     	;# 
  4841  0217                     	;# 
  4842  0218                     	;# 
  4843  0219                     	;# 
  4844  021A                     	;# 
  4845  021A                     	;# 
  4846  021B                     	;# 
  4847  021B                     	;# 
  4848  021C                     	;# 
  4849  021C                     	;# 
  4850  021D                     	;# 
  4851  021D                     	;# 
  4852  021E                     	;# 
  4853  021F                     	;# 
  4854  028C                     	;# 
  4855  028C                     	;# 
  4856  028D                     	;# 
  4857  028D                     	;# 
  4858  028E                     	;# 
  4859  028F                     	;# 
  4860  0290                     	;# 
  4861  0291                     	;# 
  4862  0292                     	;# 
  4863  0292                     	;# 
  4864  0293                     	;# 
  4865  0293                     	;# 
  4866  0294                     	;# 
  4867  0295                     	;# 
  4868  0296                     	;# 
  4869  0297                     	;# 
  4870  0298                     	;# 
  4871  0298                     	;# 
  4872  0299                     	;# 
  4873  0299                     	;# 
  4874  029A                     	;# 
  4875  029B                     	;# 
  4876  029C                     	;# 
  4877  029D                     	;# 
  4878  029F                     	;# 
  4879  030C                     	;# 
  4880  030C                     	;# 
  4881  030D                     	;# 
  4882  030E                     	;# 
  4883  030F                     	;# 
  4884  0310                     	;# 
  4885  0310                     	;# 
  4886  0311                     	;# 
  4887  0312                     	;# 
  4888  0313                     	;# 
  4889  0314                     	;# 
  4890  0314                     	;# 
  4891  0315                     	;# 
  4892  0316                     	;# 
  4893  0317                     	;# 
  4894  0318                     	;# 
  4895  0318                     	;# 
  4896  0319                     	;# 
  4897  031A                     	;# 
  4898  031B                     	;# 
  4899  038C                     	;# 
  4900  038C                     	;# 
  4901  038D                     	;# 
  4902  038E                     	;# 
  4903  0390                     	;# 
  4904  0390                     	;# 
  4905  0391                     	;# 
  4906  0392                     	;# 
  4907  048C                     	;# 
  4908  048C                     	;# 
  4909  048D                     	;# 
  4910  048E                     	;# 
  4911  048F                     	;# 
  4912  048F                     	;# 
  4913  0490                     	;# 
  4914  0491                     	;# 
  4915  0492                     	;# 
  4916  0492                     	;# 
  4917  0493                     	;# 
  4918  0494                     	;# 
  4919  0495                     	;# 
  4920  0495                     	;# 
  4921  0496                     	;# 
  4922  0497                     	;# 
  4923  0498                     	;# 
  4924  0499                     	;# 
  4925  049A                     	;# 
  4926  049B                     	;# 
  4927  049C                     	;# 
  4928  049D                     	;# 
  4929  058C                     	;# 
  4930  058C                     	;# 
  4931  058D                     	;# 
  4932  058E                     	;# 
  4933  058F                     	;# 
  4934  058F                     	;# 
  4935  0590                     	;# 
  4936  0591                     	;# 
  4937  0592                     	;# 
  4938  0593                     	;# 
  4939  059C                     	;# 
  4940  059C                     	;# 
  4941  059D                     	;# 
  4942  059D                     	;# 
  4943  059E                     	;# 
  4944  059F                     	;# 
  4945  060C                     	;# 
  4946  060C                     	;# 
  4947  060D                     	;# 
  4948  060D                     	;# 
  4949  060E                     	;# 
  4950  060F                     	;# 
  4951  0610                     	;# 
  4952  0611                     	;# 
  4953  0612                     	;# 
  4954  0613                     	;# 
  4955  0614                     	;# 
  4956  0616                     	;# 
  4957  0616                     	;# 
  4958  0617                     	;# 
  4959  0617                     	;# 
  4960  0618                     	;# 
  4961  0619                     	;# 
  4962  061A                     	;# 
  4963  061B                     	;# 
  4964  061C                     	;# 
  4965  061D                     	;# 
  4966  061E                     	;# 
  4967  070C                     	;# 
  4968  070D                     	;# 
  4969  070E                     	;# 
  4970  070F                     	;# 
  4971  0710                     	;# 
  4972  0711                     	;# 
  4973  0712                     	;# 
  4974  0713                     	;# 
  4975  0714                     	;# 
  4976  0716                     	;# 
  4977  0717                     	;# 
  4978  0718                     	;# 
  4979  0719                     	;# 
  4980  071A                     	;# 
  4981  071B                     	;# 
  4982  071C                     	;# 
  4983  071D                     	;# 
  4984  071E                     	;# 
  4985  0796                     	;# 
  4986  0797                     	;# 
  4987  0798                     	;# 
  4988  0799                     	;# 
  4989  079A                     	;# 
  4990  079B                     	;# 
  4991  079C                     	;# 
  4992  079D                     	;# 
  4993  080C                     	;# 
  4994  080D                     	;# 
  4995  080E                     	;# 
  4996  080F                     	;# 
  4997  0810                     	;# 
  4998  0811                     	;# 
  4999  0812                     	;# 
  5000  0813                     	;# 
  5001  0814                     	;# 
  5002  081A                     	;# 
  5003  081A                     	;# 
  5004  081B                     	;# 
  5005  081C                     	;# 
  5006  081C                     	;# 
  5007  081D                     	;# 
  5008  081E                     	;# 
  5009  081F                     	;# 
  5010  088C                     	;# 
  5011  088D                     	;# 
  5012  088E                     	;# 
  5013  088F                     	;# 
  5014  0890                     	;# 
  5015  0891                     	;# 
  5016  0892                     	;# 
  5017  0893                     	;# 
  5018  0895                     	;# 
  5019  0896                     	;# 
  5020  0897                     	;# 
  5021  0898                     	;# 
  5022  0899                     	;# 
  5023  089A                     	;# 
  5024  089B                     	;# 
  5025  090C                     	;# 
  5026  090E                     	;# 
  5027  090F                     	;# 
  5028  091F                     	;# 
  5029  098F                     	;# 
  5030  098F                     	;# 
  5031  0990                     	;# 
  5032  0991                     	;# 
  5033  0992                     	;# 
  5034  0993                     	;# 
  5035  0994                     	;# 
  5036  0995                     	;# 
  5037  0996                     	;# 
  5038  0997                     	;# 
  5039  1E0F                     	;# 
  5040  1E10                     	;# 
  5041  1E11                     	;# 
  5042  1E12                     	;# 
  5043  1E13                     	;# 
  5044  1E14                     	;# 
  5045  1E15                     	;# 
  5046  1E16                     	;# 
  5047  1E17                     	;# 
  5048  1E18                     	;# 
  5049  1E19                     	;# 
  5050  1E1A                     	;# 
  5051  1E1B                     	;# 
  5052  1E1C                     	;# 
  5053  1E1D                     	;# 
  5054  1E1E                     	;# 
  5055  1E1F                     	;# 
  5056  1E20                     	;# 
  5057  1E21                     	;# 
  5058  1E22                     	;# 
  5059  1E23                     	;# 
  5060  1E24                     	;# 
  5061  1E25                     	;# 
  5062  1E26                     	;# 
  5063  1E27                     	;# 
  5064  1E28                     	;# 
  5065  1E29                     	;# 
  5066  1E2A                     	;# 
  5067  1E2B                     	;# 
  5068  1E2C                     	;# 
  5069  1E2D                     	;# 
  5070  1E2E                     	;# 
  5071  1E2F                     	;# 
  5072  1E30                     	;# 
  5073  1E31                     	;# 
  5074  1E32                     	;# 
  5075  1E33                     	;# 
  5076  1E34                     	;# 
  5077  1E35                     	;# 
  5078  1E36                     	;# 
  5079  1E37                     	;# 
  5080  1E8F                     	;# 
  5081  1E90                     	;# 
  5082  1E91                     	;# 
  5083  1E92                     	;# 
  5084  1E93                     	;# 
  5085  1E94                     	;# 
  5086  1E95                     	;# 
  5087  1E96                     	;# 
  5088  1E97                     	;# 
  5089  1E9C                     	;# 
  5090  1E9D                     	;# 
  5091  1E9E                     	;# 
  5092  1EA1                     	;# 
  5093  1EA2                     	;# 
  5094  1EA3                     	;# 
  5095  1EA4                     	;# 
  5096  1EA9                     	;# 
  5097  1EAA                     	;# 
  5098  1EB1                     	;# 
  5099  1EB2                     	;# 
  5100  1EB8                     	;# 
  5101  1EB9                     	;# 
  5102  1EBA                     	;# 
  5103  1EBB                     	;# 
  5104  1EBC                     	;# 
  5105  1EBD                     	;# 
  5106  1EBE                     	;# 
  5107  1EC3                     	;# 
  5108  1EC5                     	;# 
  5109  1EC6                     	;# 
  5110  1EC7                     	;# 
  5111  1EC8                     	;# 
  5112  1EC9                     	;# 
  5113  1ECA                     	;# 
  5114  1ECB                     	;# 
  5115  1ECB                     	;# 
  5116  1ECB                     	;# 
  5117  1ECC                     	;# 
  5118  1ECC                     	;# 
  5119  1ECC                     	;# 
  5120  1F10                     	;# 
  5121  1F11                     	;# 
  5122  1F12                     	;# 
  5123  1F14                     	;# 
  5124  1F15                     	;# 
  5125  1F1C                     	;# 
  5126  1F1D                     	;# 
  5127  1F1E                     	;# 
  5128  1F1F                     	;# 
  5129  1F20                     	;# 
  5130  1F21                     	;# 
  5131  1F22                     	;# 
  5132  1F23                     	;# 
  5133  1F24                     	;# 
  5134  1F25                     	;# 
  5135  1F26                     	;# 
  5136  1F27                     	;# 
  5137  1F38                     	;# 
  5138  1F39                     	;# 
  5139  1F3A                     	;# 
  5140  1F3B                     	;# 
  5141  1F3C                     	;# 
  5142  1F3D                     	;# 
  5143  1F3E                     	;# 
  5144  1F3F                     	;# 
  5145  1F43                     	;# 
  5146  1F44                     	;# 
  5147  1F45                     	;# 
  5148  1F46                     	;# 
  5149  1F47                     	;# 
  5150  1F48                     	;# 
  5151  1F49                     	;# 
  5152  1F4A                     	;# 
  5153  1F4E                     	;# 
  5154  1F4F                     	;# 
  5155  1F50                     	;# 
  5156  1F51                     	;# 
  5157  1F52                     	;# 
  5158  1F53                     	;# 
  5159  1F54                     	;# 
  5160  1F55                     	;# 
  5161  1FE4                     	;# 
  5162  1FE5                     	;# 
  5163  1FE6                     	;# 
  5164  1FE7                     	;# 
  5165  1FE8                     	;# 
  5166  1FE8                     	;# 
  5167  1FE9                     	;# 
  5168  1FEA                     	;# 
  5169  1FEB                     	;# 
  5170  1FED                     	;# 
  5171  1FEE                     	;# 
  5172  1FEF                     	;# 
  5173  0000                     	;# 
  5174  0001                     	;# 
  5175  0002                     	;# 
  5176  0003                     	;# 
  5177  0004                     	;# 
  5178  0005                     	;# 
  5179  0006                     	;# 
  5180  0007                     	;# 
  5181  0008                     	;# 
  5182  0009                     	;# 
  5183  000A                     	;# 
  5184  000B                     	;# 
  5185  000C                     	;# 
  5186  000D                     	;# 
  5187  000E                     	;# 
  5188  0012                     	;# 
  5189  0013                     	;# 
  5190  0014                     	;# 
  5191  0018                     	;# 
  5192  0019                     	;# 
  5193  001A                     	;# 
  5194  008C                     	;# 
  5195  008C                     	;# 
  5196  008D                     	;# 
  5197  008E                     	;# 
  5198  008E                     	;# 
  5199  008F                     	;# 
  5200  0090                     	;# 
  5201  0090                     	;# 
  5202  0091                     	;# 
  5203  0092                     	;# 
  5204  0092                     	;# 
  5205  0093                     	;# 
  5206  0094                     	;# 
  5207  0094                     	;# 
  5208  0095                     	;# 
  5209  0096                     	;# 
  5210  0096                     	;# 
  5211  0097                     	;# 
  5212  0098                     	;# 
  5213  0099                     	;# 
  5214  009A                     	;# 
  5215  009B                     	;# 
  5216  009B                     	;# 
  5217  009C                     	;# 
  5218  009D                     	;# 
  5219  009D                     	;# 
  5220  009E                     	;# 
  5221  009F                     	;# 
  5222  010C                     	;# 
  5223  010C                     	;# 
  5224  010D                     	;# 
  5225  010E                     	;# 
  5226  010F                     	;# 
  5227  010F                     	;# 
  5228  0110                     	;# 
  5229  0111                     	;# 
  5230  0112                     	;# 
  5231  0113                     	;# 
  5232  0114                     	;# 
  5233  0115                     	;# 
  5234  0116                     	;# 
  5235  0117                     	;# 
  5236  0118                     	;# 
  5237  0119                     	;# 
  5238  0119                     	;# 
  5239  0119                     	;# 
  5240  011A                     	;# 
  5241  011A                     	;# 
  5242  011A                     	;# 
  5243  011B                     	;# 
  5244  011B                     	;# 
  5245  011B                     	;# 
  5246  011B                     	;# 
  5247  011B                     	;# 
  5248  011C                     	;# 
  5249  011C                     	;# 
  5250  011C                     	;# 
  5251  011D                     	;# 
  5252  011D                     	;# 
  5253  011D                     	;# 
  5254  011E                     	;# 
  5255  011E                     	;# 
  5256  011E                     	;# 
  5257  011F                     	;# 
  5258  011F                     	;# 
  5259  011F                     	;# 
  5260  011F                     	;# 
  5261  011F                     	;# 
  5262  018C                     	;# 
  5263  018D                     	;# 
  5264  018E                     	;# 
  5265  018F                     	;# 
  5266  0190                     	;# 
  5267  0191                     	;# 
  5268  0192                     	;# 
  5269  0196                     	;# 
  5270  0197                     	;# 
  5271  0198                     	;# 
  5272  0199                     	;# 
  5273  019A                     	;# 
  5274  019B                     	;# 
  5275  019C                     	;# 
  5276  020C                     	;# 
  5277  020D                     	;# 
  5278  020E                     	;# 
  5279  020E                     	;# 
  5280  020F                     	;# 
  5281  020F                     	;# 
  5282  0210                     	;# 
  5283  0210                     	;# 
  5284  0211                     	;# 
  5285  0211                     	;# 
  5286  0212                     	;# 
  5287  0213                     	;# 
  5288  0214                     	;# 
  5289  0214                     	;# 
  5290  0215                     	;# 
  5291  0215                     	;# 
  5292  0216                     	;# 
  5293  0216                     	;# 
  5294  0217                     	;# 
  5295  0217                     	;# 
  5296  0218                     	;# 
  5297  0219                     	;# 
  5298  021A                     	;# 
  5299  021A                     	;# 
  5300  021B                     	;# 
  5301  021B                     	;# 
  5302  021C                     	;# 
  5303  021C                     	;# 
  5304  021D                     	;# 
  5305  021D                     	;# 
  5306  021E                     	;# 
  5307  021F                     	;# 
  5308  028C                     	;# 
  5309  028C                     	;# 
  5310  028D                     	;# 
  5311  028D                     	;# 
  5312  028E                     	;# 
  5313  028F                     	;# 
  5314  0290                     	;# 
  5315  0291                     	;# 
  5316  0292                     	;# 
  5317  0292                     	;# 
  5318  0293                     	;# 
  5319  0293                     	;# 
  5320  0294                     	;# 
  5321  0295                     	;# 
  5322  0296                     	;# 
  5323  0297                     	;# 
  5324  0298                     	;# 
  5325  0298                     	;# 
  5326  0299                     	;# 
  5327  0299                     	;# 
  5328  029A                     	;# 
  5329  029B                     	;# 
  5330  029C                     	;# 
  5331  029D                     	;# 
  5332  029F                     	;# 
  5333  030C                     	;# 
  5334  030C                     	;# 
  5335  030D                     	;# 
  5336  030E                     	;# 
  5337  030F                     	;# 
  5338  0310                     	;# 
  5339  0310                     	;# 
  5340  0311                     	;# 
  5341  0312                     	;# 
  5342  0313                     	;# 
  5343  0314                     	;# 
  5344  0314                     	;# 
  5345  0315                     	;# 
  5346  0316                     	;# 
  5347  0317                     	;# 
  5348  0318                     	;# 
  5349  0318                     	;# 
  5350  0319                     	;# 
  5351  031A                     	;# 
  5352  031B                     	;# 
  5353  038C                     	;# 
  5354  038C                     	;# 
  5355  038D                     	;# 
  5356  038E                     	;# 
  5357  0390                     	;# 
  5358  0390                     	;# 
  5359  0391                     	;# 
  5360  0392                     	;# 
  5361  048C                     	;# 
  5362  048C                     	;# 
  5363  048D                     	;# 
  5364  048E                     	;# 
  5365  048F                     	;# 
  5366  048F                     	;# 
  5367  0490                     	;# 
  5368  0491                     	;# 
  5369  0492                     	;# 
  5370  0492                     	;# 
  5371  0493                     	;# 
  5372  0494                     	;# 
  5373  0495                     	;# 
  5374  0495                     	;# 
  5375  0496                     	;# 
  5376  0497                     	;# 
  5377  0498                     	;# 
  5378  0499                     	;# 
  5379  049A                     	;# 
  5380  049B                     	;# 
  5381  049C                     	;# 
  5382  049D                     	;# 
  5383  058C                     	;# 
  5384  058C                     	;# 
  5385  058D                     	;# 
  5386  058E                     	;# 
  5387  058F                     	;# 
  5388  058F                     	;# 
  5389  0590                     	;# 
  5390  0591                     	;# 
  5391  0592                     	;# 
  5392  0593                     	;# 
  5393  059C                     	;# 
  5394  059C                     	;# 
  5395  059D                     	;# 
  5396  059D                     	;# 
  5397  059E                     	;# 
  5398  059F                     	;# 
  5399  060C                     	;# 
  5400  060C                     	;# 
  5401  060D                     	;# 
  5402  060D                     	;# 
  5403  060E                     	;# 
  5404  060F                     	;# 
  5405  0610                     	;# 
  5406  0611                     	;# 
  5407  0612                     	;# 
  5408  0613                     	;# 
  5409  0614                     	;# 
  5410  0616                     	;# 
  5411  0616                     	;# 
  5412  0617                     	;# 
  5413  0617                     	;# 
  5414  0618                     	;# 
  5415  0619                     	;# 
  5416  061A                     	;# 
  5417  061B                     	;# 
  5418  061C                     	;# 
  5419  061D                     	;# 
  5420  061E                     	;# 
  5421  070C                     	;# 
  5422  070D                     	;# 
  5423  070E                     	;# 
  5424  070F                     	;# 
  5425  0710                     	;# 
  5426  0711                     	;# 
  5427  0712                     	;# 
  5428  0713                     	;# 
  5429  0714                     	;# 
  5430  0716                     	;# 
  5431  0717                     	;# 
  5432  0718                     	;# 
  5433  0719                     	;# 
  5434  071A                     	;# 
  5435  071B                     	;# 
  5436  071C                     	;# 
  5437  071D                     	;# 
  5438  071E                     	;# 
  5439  0796                     	;# 
  5440  0797                     	;# 
  5441  0798                     	;# 
  5442  0799                     	;# 
  5443  079A                     	;# 
  5444  079B                     	;# 
  5445  079C                     	;# 
  5446  079D                     	;# 
  5447  080C                     	;# 
  5448  080D                     	;# 
  5449  080E                     	;# 
  5450  080F                     	;# 
  5451  0810                     	;# 
  5452  0811                     	;# 
  5453  0812                     	;# 
  5454  0813                     	;# 
  5455  0814                     	;# 
  5456  081A                     	;# 
  5457  081A                     	;# 
  5458  081B                     	;# 
  5459  081C                     	;# 
  5460  081C                     	;# 
  5461  081D                     	;# 
  5462  081E                     	;# 
  5463  081F                     	;# 
  5464  088C                     	;# 
  5465  088D                     	;# 
  5466  088E                     	;# 
  5467  088F                     	;# 
  5468  0890                     	;# 
  5469  0891                     	;# 
  5470  0892                     	;# 
  5471  0893                     	;# 
  5472  0895                     	;# 
  5473  0896                     	;# 
  5474  0897                     	;# 
  5475  0898                     	;# 
  5476  0899                     	;# 
  5477  089A                     	;# 
  5478  089B                     	;# 
  5479  090C                     	;# 
  5480  090E                     	;# 
  5481  090F                     	;# 
  5482  091F                     	;# 
  5483  098F                     	;# 
  5484  098F                     	;# 
  5485  0990                     	;# 
  5486  0991                     	;# 
  5487  0992                     	;# 
  5488  0993                     	;# 
  5489  0994                     	;# 
  5490  0995                     	;# 
  5491  0996                     	;# 
  5492  0997                     	;# 
  5493  1E0F                     	;# 
  5494  1E10                     	;# 
  5495  1E11                     	;# 
  5496  1E12                     	;# 
  5497  1E13                     	;# 
  5498  1E14                     	;# 
  5499  1E15                     	;# 
  5500  1E16                     	;# 
  5501  1E17                     	;# 
  5502  1E18                     	;# 
  5503  1E19                     	;# 
  5504  1E1A                     	;# 
  5505  1E1B                     	;# 
  5506  1E1C                     	;# 
  5507  1E1D                     	;# 
  5508  1E1E                     	;# 
  5509  1E1F                     	;# 
  5510  1E20                     	;# 
  5511  1E21                     	;# 
  5512  1E22                     	;# 
  5513  1E23                     	;# 
  5514  1E24                     	;# 
  5515  1E25                     	;# 
  5516  1E26                     	;# 
  5517  1E27                     	;# 
  5518  1E28                     	;# 
  5519  1E29                     	;# 
  5520  1E2A                     	;# 
  5521  1E2B                     	;# 
  5522  1E2C                     	;# 
  5523  1E2D                     	;# 
  5524  1E2E                     	;# 
  5525  1E2F                     	;# 
  5526  1E30                     	;# 
  5527  1E31                     	;# 
  5528  1E32                     	;# 
  5529  1E33                     	;# 
  5530  1E34                     	;# 
  5531  1E35                     	;# 
  5532  1E36                     	;# 
  5533  1E37                     	;# 
  5534  1E8F                     	;# 
  5535  1E90                     	;# 
  5536  1E91                     	;# 
  5537  1E92                     	;# 
  5538  1E93                     	;# 
  5539  1E94                     	;# 
  5540  1E95                     	;# 
  5541  1E96                     	;# 
  5542  1E97                     	;# 
  5543  1E9C                     	;# 
  5544  1E9D                     	;# 
  5545  1E9E                     	;# 
  5546  1EA1                     	;# 
  5547  1EA2                     	;# 
  5548  1EA3                     	;# 
  5549  1EA4                     	;# 
  5550  1EA9                     	;# 
  5551  1EAA                     	;# 
  5552  1EB1                     	;# 
  5553  1EB2                     	;# 
  5554  1EB8                     	;# 
  5555  1EB9                     	;# 
  5556  1EBA                     	;# 
  5557  1EBB                     	;# 
  5558  1EBC                     	;# 
  5559  1EBD                     	;# 
  5560  1EBE                     	;# 
  5561  1EC3                     	;# 
  5562  1EC5                     	;# 
  5563  1EC6                     	;# 
  5564  1EC7                     	;# 
  5565  1EC8                     	;# 
  5566  1EC9                     	;# 
  5567  1ECA                     	;# 
  5568  1ECB                     	;# 
  5569  1ECB                     	;# 
  5570  1ECB                     	;# 
  5571  1ECC                     	;# 
  5572  1ECC                     	;# 
  5573  1ECC                     	;# 
  5574  1F10                     	;# 
  5575  1F11                     	;# 
  5576  1F12                     	;# 
  5577  1F14                     	;# 
  5578  1F15                     	;# 
  5579  1F1C                     	;# 
  5580  1F1D                     	;# 
  5581  1F1E                     	;# 
  5582  1F1F                     	;# 
  5583  1F20                     	;# 
  5584  1F21                     	;# 
  5585  1F22                     	;# 
  5586  1F23                     	;# 
  5587  1F24                     	;# 
  5588  1F25                     	;# 
  5589  1F26                     	;# 
  5590  1F27                     	;# 
  5591  1F38                     	;# 
  5592  1F39                     	;# 
  5593  1F3A                     	;# 
  5594  1F3B                     	;# 
  5595  1F3C                     	;# 
  5596  1F3D                     	;# 
  5597  1F3E                     	;# 
  5598  1F3F                     	;# 
  5599  1F43                     	;# 
  5600  1F44                     	;# 
  5601  1F45                     	;# 
  5602  1F46                     	;# 
  5603  1F47                     	;# 
  5604  1F48                     	;# 
  5605  1F49                     	;# 
  5606  1F4A                     	;# 
  5607  1F4E                     	;# 
  5608  1F4F                     	;# 
  5609  1F50                     	;# 
  5610  1F51                     	;# 
  5611  1F52                     	;# 
  5612  1F53                     	;# 
  5613  1F54                     	;# 
  5614  1F55                     	;# 
  5615  1FE4                     	;# 
  5616  1FE5                     	;# 
  5617  1FE6                     	;# 
  5618  1FE7                     	;# 
  5619  1FE8                     	;# 
  5620  1FE8                     	;# 
  5621  1FE9                     	;# 
  5622  1FEA                     	;# 
  5623  1FEB                     	;# 
  5624  1FED                     	;# 
  5625  1FEE                     	;# 
  5626  1FEF                     	;# 
  5627  0000                     	;# 
  5628  0001                     	;# 
  5629  0002                     	;# 
  5630  0003                     	;# 
  5631  0004                     	;# 
  5632  0005                     	;# 
  5633  0006                     	;# 
  5634  0007                     	;# 
  5635  0008                     	;# 
  5636  0009                     	;# 
  5637  000A                     	;# 
  5638  000B                     	;# 
  5639  000C                     	;# 
  5640  000D                     	;# 
  5641  000E                     	;# 
  5642  0012                     	;# 
  5643  0013                     	;# 
  5644  0014                     	;# 
  5645  0018                     	;# 
  5646  0019                     	;# 
  5647  001A                     	;# 
  5648  008C                     	;# 
  5649  008C                     	;# 
  5650  008D                     	;# 
  5651  008E                     	;# 
  5652  008E                     	;# 
  5653  008F                     	;# 
  5654  0090                     	;# 
  5655  0090                     	;# 
  5656  0091                     	;# 
  5657  0092                     	;# 
  5658  0092                     	;# 
  5659  0093                     	;# 
  5660  0094                     	;# 
  5661  0094                     	;# 
  5662  0095                     	;# 
  5663  0096                     	;# 
  5664  0096                     	;# 
  5665  0097                     	;# 
  5666  0098                     	;# 
  5667  0099                     	;# 
  5668  009A                     	;# 
  5669  009B                     	;# 
  5670  009B                     	;# 
  5671  009C                     	;# 
  5672  009D                     	;# 
  5673  009D                     	;# 
  5674  009E                     	;# 
  5675  009F                     	;# 
  5676  010C                     	;# 
  5677  010C                     	;# 
  5678  010D                     	;# 
  5679  010E                     	;# 
  5680  010F                     	;# 
  5681  010F                     	;# 
  5682  0110                     	;# 
  5683  0111                     	;# 
  5684  0112                     	;# 
  5685  0113                     	;# 
  5686  0114                     	;# 
  5687  0115                     	;# 
  5688  0116                     	;# 
  5689  0117                     	;# 
  5690  0118                     	;# 
  5691  0119                     	;# 
  5692  0119                     	;# 
  5693  0119                     	;# 
  5694  011A                     	;# 
  5695  011A                     	;# 
  5696  011A                     	;# 
  5697  011B                     	;# 
  5698  011B                     	;# 
  5699  011B                     	;# 
  5700  011B                     	;# 
  5701  011B                     	;# 
  5702  011C                     	;# 
  5703  011C                     	;# 
  5704  011C                     	;# 
  5705  011D                     	;# 
  5706  011D                     	;# 
  5707  011D                     	;# 
  5708  011E                     	;# 
  5709  011E                     	;# 
  5710  011E                     	;# 
  5711  011F                     	;# 
  5712  011F                     	;# 
  5713  011F                     	;# 
  5714  011F                     	;# 
  5715  011F                     	;# 
  5716  018C                     	;# 
  5717  018D                     	;# 
  5718  018E                     	;# 
  5719  018F                     	;# 
  5720  0190                     	;# 
  5721  0191                     	;# 
  5722  0192                     	;# 
  5723  0196                     	;# 
  5724  0197                     	;# 
  5725  0198                     	;# 
  5726  0199                     	;# 
  5727  019A                     	;# 
  5728  019B                     	;# 
  5729  019C                     	;# 
  5730  020C                     	;# 
  5731  020D                     	;# 
  5732  020E                     	;# 
  5733  020E                     	;# 
  5734  020F                     	;# 
  5735  020F                     	;# 
  5736  0210                     	;# 
  5737  0210                     	;# 
  5738  0211                     	;# 
  5739  0211                     	;# 
  5740  0212                     	;# 
  5741  0213                     	;# 
  5742  0214                     	;# 
  5743  0214                     	;# 
  5744  0215                     	;# 
  5745  0215                     	;# 
  5746  0216                     	;# 
  5747  0216                     	;# 
  5748  0217                     	;# 
  5749  0217                     	;# 
  5750  0218                     	;# 
  5751  0219                     	;# 
  5752  021A                     	;# 
  5753  021A                     	;# 
  5754  021B                     	;# 
  5755  021B                     	;# 
  5756  021C                     	;# 
  5757  021C                     	;# 
  5758  021D                     	;# 
  5759  021D                     	;# 
  5760  021E                     	;# 
  5761  021F                     	;# 
  5762  028C                     	;# 
  5763  028C                     	;# 
  5764  028D                     	;# 
  5765  028D                     	;# 
  5766  028E                     	;# 
  5767  028F                     	;# 
  5768  0290                     	;# 
  5769  0291                     	;# 
  5770  0292                     	;# 
  5771  0292                     	;# 
  5772  0293                     	;# 
  5773  0293                     	;# 
  5774  0294                     	;# 
  5775  0295                     	;# 
  5776  0296                     	;# 
  5777  0297                     	;# 
  5778  0298                     	;# 
  5779  0298                     	;# 
  5780  0299                     	;# 
  5781  0299                     	;# 
  5782  029A                     	;# 
  5783  029B                     	;# 
  5784  029C                     	;# 
  5785  029D                     	;# 
  5786  029F                     	;# 
  5787  030C                     	;# 
  5788  030C                     	;# 
  5789  030D                     	;# 
  5790  030E                     	;# 
  5791  030F                     	;# 
  5792  0310                     	;# 
  5793  0310                     	;# 
  5794  0311                     	;# 
  5795  0312                     	;# 
  5796  0313                     	;# 
  5797  0314                     	;# 
  5798  0314                     	;# 
  5799  0315                     	;# 
  5800  0316                     	;# 
  5801  0317                     	;# 
  5802  0318                     	;# 
  5803  0318                     	;# 
  5804  0319                     	;# 
  5805  031A                     	;# 
  5806  031B                     	;# 
  5807  038C                     	;# 
  5808  038C                     	;# 
  5809  038D                     	;# 
  5810  038E                     	;# 
  5811  0390                     	;# 
  5812  0390                     	;# 
  5813  0391                     	;# 
  5814  0392                     	;# 
  5815  048C                     	;# 
  5816  048C                     	;# 
  5817  048D                     	;# 
  5818  048E                     	;# 
  5819  048F                     	;# 
  5820  048F                     	;# 
  5821  0490                     	;# 
  5822  0491                     	;# 
  5823  0492                     	;# 
  5824  0492                     	;# 
  5825  0493                     	;# 
  5826  0494                     	;# 
  5827  0495                     	;# 
  5828  0495                     	;# 
  5829  0496                     	;# 
  5830  0497                     	;# 
  5831  0498                     	;# 
  5832  0499                     	;# 
  5833  049A                     	;# 
  5834  049B                     	;# 
  5835  049C                     	;# 
  5836  049D                     	;# 
  5837  058C                     	;# 
  5838  058C                     	;# 
  5839  058D                     	;# 
  5840  058E                     	;# 
  5841  058F                     	;# 
  5842  058F                     	;# 
  5843  0590                     	;# 
  5844  0591                     	;# 
  5845  0592                     	;# 
  5846  0593                     	;# 
  5847  059C                     	;# 
  5848  059C                     	;# 
  5849  059D                     	;# 
  5850  059D                     	;# 
  5851  059E                     	;# 
  5852  059F                     	;# 
  5853  060C                     	;# 
  5854  060C                     	;# 
  5855  060D                     	;# 
  5856  060D                     	;# 
  5857  060E                     	;# 
  5858  060F                     	;# 
  5859  0610                     	;# 
  5860  0611                     	;# 
  5861  0612                     	;# 
  5862  0613                     	;# 
  5863  0614                     	;# 
  5864  0616                     	;# 
  5865  0616                     	;# 
  5866  0617                     	;# 
  5867  0617                     	;# 
  5868  0618                     	;# 
  5869  0619                     	;# 
  5870  061A                     	;# 
  5871  061B                     	;# 
  5872  061C                     	;# 
  5873  061D                     	;# 
  5874  061E                     	;# 
  5875  070C                     	;# 
  5876  070D                     	;# 
  5877  070E                     	;# 
  5878  070F                     	;# 
  5879  0710                     	;# 
  5880  0711                     	;# 
  5881  0712                     	;# 
  5882  0713                     	;# 
  5883  0714                     	;# 
  5884  0716                     	;# 
  5885  0717                     	;# 
  5886  0718                     	;# 
  5887  0719                     	;# 
  5888  071A                     	;# 
  5889  071B                     	;# 
  5890  071C                     	;# 
  5891  071D                     	;# 
  5892  071E                     	;# 
  5893  0796                     	;# 
  5894  0797                     	;# 
  5895  0798                     	;# 
  5896  0799                     	;# 
  5897  079A                     	;# 
  5898  079B                     	;# 
  5899  079C                     	;# 
  5900  079D                     	;# 
  5901  080C                     	;# 
  5902  080D                     	;# 
  5903  080E                     	;# 
  5904  080F                     	;# 
  5905  0810                     	;# 
  5906  0811                     	;# 
  5907  0812                     	;# 
  5908  0813                     	;# 
  5909  0814                     	;# 
  5910  081A                     	;# 
  5911  081A                     	;# 
  5912  081B                     	;# 
  5913  081C                     	;# 
  5914  081C                     	;# 
  5915  081D                     	;# 
  5916  081E                     	;# 
  5917  081F                     	;# 
  5918  088C                     	;# 
  5919  088D                     	;# 
  5920  088E                     	;# 
  5921  088F                     	;# 
  5922  0890                     	;# 
  5923  0891                     	;# 
  5924  0892                     	;# 
  5925  0893                     	;# 
  5926  0895                     	;# 
  5927  0896                     	;# 
  5928  0897                     	;# 
  5929  0898                     	;# 
  5930  0899                     	;# 
  5931  089A                     	;# 
  5932  089B                     	;# 
  5933  090C                     	;# 
  5934  090E                     	;# 
  5935  090F                     	;# 
  5936  091F                     	;# 
  5937  098F                     	;# 
  5938  098F                     	;# 
  5939  0990                     	;# 
  5940  0991                     	;# 
  5941  0992                     	;# 
  5942  0993                     	;# 
  5943  0994                     	;# 
  5944  0995                     	;# 
  5945  0996                     	;# 
  5946  0997                     	;# 
  5947  1E0F                     	;# 
  5948  1E10                     	;# 
  5949  1E11                     	;# 
  5950  1E12                     	;# 
  5951  1E13                     	;# 
  5952  1E14                     	;# 
  5953  1E15                     	;# 
  5954  1E16                     	;# 
  5955  1E17                     	;# 
  5956  1E18                     	;# 
  5957  1E19                     	;# 
  5958  1E1A                     	;# 
  5959  1E1B                     	;# 
  5960  1E1C                     	;# 
  5961  1E1D                     	;# 
  5962  1E1E                     	;# 
  5963  1E1F                     	;# 
  5964  1E20                     	;# 
  5965  1E21                     	;# 
  5966  1E22                     	;# 
  5967  1E23                     	;# 
  5968  1E24                     	;# 
  5969  1E25                     	;# 
  5970  1E26                     	;# 
  5971  1E27                     	;# 
  5972  1E28                     	;# 
  5973  1E29                     	;# 
  5974  1E2A                     	;# 
  5975  1E2B                     	;# 
  5976  1E2C                     	;# 
  5977  1E2D                     	;# 
  5978  1E2E                     	;# 
  5979  1E2F                     	;# 
  5980  1E30                     	;# 
  5981  1E31                     	;# 
  5982  1E32                     	;# 
  5983  1E33                     	;# 
  5984  1E34                     	;# 
  5985  1E35                     	;# 
  5986  1E36                     	;# 
  5987  1E37                     	;# 
  5988  1E8F                     	;# 
  5989  1E90                     	;# 
  5990  1E91                     	;# 
  5991  1E92                     	;# 
  5992  1E93                     	;# 
  5993  1E94                     	;# 
  5994  1E95                     	;# 
  5995  1E96                     	;# 
  5996  1E97                     	;# 
  5997  1E9C                     	;# 
  5998  1E9D                     	;# 
  5999  1E9E                     	;# 
  6000  1EA1                     	;# 
  6001  1EA2                     	;# 
  6002  1EA3                     	;# 
  6003  1EA4                     	;# 
  6004  1EA9                     	;# 
  6005  1EAA                     	;# 
  6006  1EB1                     	;# 
  6007  1EB2                     	;# 
  6008  1EB8                     	;# 
  6009  1EB9                     	;# 
  6010  1EBA                     	;# 
  6011  1EBB                     	;# 
  6012  1EBC                     	;# 
  6013  1EBD                     	;# 
  6014  1EBE                     	;# 
  6015  1EC3                     	;# 
  6016  1EC5                     	;# 
  6017  1EC6                     	;# 
  6018  1EC7                     	;# 
  6019  1EC8                     	;# 
  6020  1EC9                     	;# 
  6021  1ECA                     	;# 
  6022  1ECB                     	;# 
  6023  1ECB                     	;# 
  6024  1ECB                     	;# 
  6025  1ECC                     	;# 
  6026  1ECC                     	;# 
  6027  1ECC                     	;# 
  6028  1F10                     	;# 
  6029  1F11                     	;# 
  6030  1F12                     	;# 
  6031  1F14                     	;# 
  6032  1F15                     	;# 
  6033  1F1C                     	;# 
  6034  1F1D                     	;# 
  6035  1F1E                     	;# 
  6036  1F1F                     	;# 
  6037  1F20                     	;# 
  6038  1F21                     	;# 
  6039  1F22                     	;# 
  6040  1F23                     	;# 
  6041  1F24                     	;# 
  6042  1F25                     	;# 
  6043  1F26                     	;# 
  6044  1F27                     	;# 
  6045  1F38                     	;# 
  6046  1F39                     	;# 
  6047  1F3A                     	;# 
  6048  1F3B                     	;# 
  6049  1F3C                     	;# 
  6050  1F3D                     	;# 
  6051  1F3E                     	;# 
  6052  1F3F                     	;# 
  6053  1F43                     	;# 
  6054  1F44                     	;# 
  6055  1F45                     	;# 
  6056  1F46                     	;# 
  6057  1F47                     	;# 
  6058  1F48                     	;# 
  6059  1F49                     	;# 
  6060  1F4A                     	;# 
  6061  1F4E                     	;# 
  6062  1F4F                     	;# 
  6063  1F50                     	;# 
  6064  1F51                     	;# 
  6065  1F52                     	;# 
  6066  1F53                     	;# 
  6067  1F54                     	;# 
  6068  1F55                     	;# 
  6069  1FE4                     	;# 
  6070  1FE5                     	;# 
  6071  1FE6                     	;# 
  6072  1FE7                     	;# 
  6073  1FE8                     	;# 
  6074  1FE8                     	;# 
  6075  1FE9                     	;# 
  6076  1FEA                     	;# 
  6077  1FEB                     	;# 
  6078  1FED                     	;# 
  6079  1FEE                     	;# 
  6080  1FEF                     	;# 
  6081  0000                     	;# 
  6082  0001                     	;# 
  6083  0002                     	;# 
  6084  0003                     	;# 
  6085  0004                     	;# 
  6086  0005                     	;# 
  6087  0006                     	;# 
  6088  0007                     	;# 
  6089  0008                     	;# 
  6090  0009                     	;# 
  6091  000A                     	;# 
  6092  000B                     	;# 
  6093  000C                     	;# 
  6094  000D                     	;# 
  6095  000E                     	;# 
  6096  0012                     	;# 
  6097  0013                     	;# 
  6098  0014                     	;# 
  6099  0018                     	;# 
  6100  0019                     	;# 
  6101  001A                     	;# 
  6102  008C                     	;# 
  6103  008C                     	;# 
  6104  008D                     	;# 
  6105  008E                     	;# 
  6106  008E                     	;# 
  6107  008F                     	;# 
  6108  0090                     	;# 
  6109  0090                     	;# 
  6110  0091                     	;# 
  6111  0092                     	;# 
  6112  0092                     	;# 
  6113  0093                     	;# 
  6114  0094                     	;# 
  6115  0094                     	;# 
  6116  0095                     	;# 
  6117  0096                     	;# 
  6118  0096                     	;# 
  6119  0097                     	;# 
  6120  0098                     	;# 
  6121  0099                     	;# 
  6122  009A                     	;# 
  6123  009B                     	;# 
  6124  009B                     	;# 
  6125  009C                     	;# 
  6126  009D                     	;# 
  6127  009D                     	;# 
  6128  009E                     	;# 
  6129  009F                     	;# 
  6130  010C                     	;# 
  6131  010C                     	;# 
  6132  010D                     	;# 
  6133  010E                     	;# 
  6134  010F                     	;# 
  6135  010F                     	;# 
  6136  0110                     	;# 
  6137  0111                     	;# 
  6138  0112                     	;# 
  6139  0113                     	;# 
  6140  0114                     	;# 
  6141  0115                     	;# 
  6142  0116                     	;# 
  6143  0117                     	;# 
  6144  0118                     	;# 
  6145  0119                     	;# 
  6146  0119                     	;# 
  6147  0119                     	;# 
  6148  011A                     	;# 
  6149  011A                     	;# 
  6150  011A                     	;# 
  6151  011B                     	;# 
  6152  011B                     	;# 
  6153  011B                     	;# 
  6154  011B                     	;# 
  6155  011B                     	;# 
  6156  011C                     	;# 
  6157  011C                     	;# 
  6158  011C                     	;# 
  6159  011D                     	;# 
  6160  011D                     	;# 
  6161  011D                     	;# 
  6162  011E                     	;# 
  6163  011E                     	;# 
  6164  011E                     	;# 
  6165  011F                     	;# 
  6166  011F                     	;# 
  6167  011F                     	;# 
  6168  011F                     	;# 
  6169  011F                     	;# 
  6170  018C                     	;# 
  6171  018D                     	;# 
  6172  018E                     	;# 
  6173  018F                     	;# 
  6174  0190                     	;# 
  6175  0191                     	;# 
  6176  0192                     	;# 
  6177  0196                     	;# 
  6178  0197                     	;# 
  6179  0198                     	;# 
  6180  0199                     	;# 
  6181  019A                     	;# 
  6182  019B                     	;# 
  6183  019C                     	;# 
  6184  020C                     	;# 
  6185  020D                     	;# 
  6186  020E                     	;# 
  6187  020E                     	;# 
  6188  020F                     	;# 
  6189  020F                     	;# 
  6190  0210                     	;# 
  6191  0210                     	;# 
  6192  0211                     	;# 
  6193  0211                     	;# 
  6194  0212                     	;# 
  6195  0213                     	;# 
  6196  0214                     	;# 
  6197  0214                     	;# 
  6198  0215                     	;# 
  6199  0215                     	;# 
  6200  0216                     	;# 
  6201  0216                     	;# 
  6202  0217                     	;# 
  6203  0217                     	;# 
  6204  0218                     	;# 
  6205  0219                     	;# 
  6206  021A                     	;# 
  6207  021A                     	;# 
  6208  021B                     	;# 
  6209  021B                     	;# 
  6210  021C                     	;# 
  6211  021C                     	;# 
  6212  021D                     	;# 
  6213  021D                     	;# 
  6214  021E                     	;# 
  6215  021F                     	;# 
  6216  028C                     	;# 
  6217  028C                     	;# 
  6218  028D                     	;# 
  6219  028D                     	;# 
  6220  028E                     	;# 
  6221  028F                     	;# 
  6222  0290                     	;# 
  6223  0291                     	;# 
  6224  0292                     	;# 
  6225  0292                     	;# 
  6226  0293                     	;# 
  6227  0293                     	;# 
  6228  0294                     	;# 
  6229  0295                     	;# 
  6230  0296                     	;# 
  6231  0297                     	;# 
  6232  0298                     	;# 
  6233  0298                     	;# 
  6234  0299                     	;# 
  6235  0299                     	;# 
  6236  029A                     	;# 
  6237  029B                     	;# 
  6238  029C                     	;# 
  6239  029D                     	;# 
  6240  029F                     	;# 
  6241  030C                     	;# 
  6242  030C                     	;# 
  6243  030D                     	;# 
  6244  030E                     	;# 
  6245  030F                     	;# 
  6246  0310                     	;# 
  6247  0310                     	;# 
  6248  0311                     	;# 
  6249  0312                     	;# 
  6250  0313                     	;# 
  6251  0314                     	;# 
  6252  0314                     	;# 
  6253  0315                     	;# 
  6254  0316                     	;# 
  6255  0317                     	;# 
  6256  0318                     	;# 
  6257  0318                     	;# 
  6258  0319                     	;# 
  6259  031A                     	;# 
  6260  031B                     	;# 
  6261  038C                     	;# 
  6262  038C                     	;# 
  6263  038D                     	;# 
  6264  038E                     	;# 
  6265  0390                     	;# 
  6266  0390                     	;# 
  6267  0391                     	;# 
  6268  0392                     	;# 
  6269  048C                     	;# 
  6270  048C                     	;# 
  6271  048D                     	;# 
  6272  048E                     	;# 
  6273  048F                     	;# 
  6274  048F                     	;# 
  6275  0490                     	;# 
  6276  0491                     	;# 
  6277  0492                     	;# 
  6278  0492                     	;# 
  6279  0493                     	;# 
  6280  0494                     	;# 
  6281  0495                     	;# 
  6282  0495                     	;# 
  6283  0496                     	;# 
  6284  0497                     	;# 
  6285  0498                     	;# 
  6286  0499                     	;# 
  6287  049A                     	;# 
  6288  049B                     	;# 
  6289  049C                     	;# 
  6290  049D                     	;# 
  6291  058C                     	;# 
  6292  058C                     	;# 
  6293  058D                     	;# 
  6294  058E                     	;# 
  6295  058F                     	;# 
  6296  058F                     	;# 
  6297  0590                     	;# 
  6298  0591                     	;# 
  6299  0592                     	;# 
  6300  0593                     	;# 
  6301  059C                     	;# 
  6302  059C                     	;# 
  6303  059D                     	;# 
  6304  059D                     	;# 
  6305  059E                     	;# 
  6306  059F                     	;# 
  6307  060C                     	;# 
  6308  060C                     	;# 
  6309  060D                     	;# 
  6310  060D                     	;# 
  6311  060E                     	;# 
  6312  060F                     	;# 
  6313  0610                     	;# 
  6314  0611                     	;# 
  6315  0612                     	;# 
  6316  0613                     	;# 
  6317  0614                     	;# 
  6318  0616                     	;# 
  6319  0616                     	;# 
  6320  0617                     	;# 
  6321  0617                     	;# 
  6322  0618                     	;# 
  6323  0619                     	;# 
  6324  061A                     	;# 
  6325  061B                     	;# 
  6326  061C                     	;# 
  6327  061D                     	;# 
  6328  061E                     	;# 
  6329  070C                     	;# 
  6330  070D                     	;# 
  6331  070E                     	;# 
  6332  070F                     	;# 
  6333  0710                     	;# 
  6334  0711                     	;# 
  6335  0712                     	;# 
  6336  0713                     	;# 
  6337  0714                     	;# 
  6338  0716                     	;# 
  6339  0717                     	;# 
  6340  0718                     	;# 
  6341  0719                     	;# 
  6342  071A                     	;# 
  6343  071B                     	;# 
  6344  071C                     	;# 
  6345  071D                     	;# 
  6346  071E                     	;# 
  6347  0796                     	;# 
  6348  0797                     	;# 
  6349  0798                     	;# 
  6350  0799                     	;# 
  6351  079A                     	;# 
  6352  079B                     	;# 
  6353  079C                     	;# 
  6354  079D                     	;# 
  6355  080C                     	;# 
  6356  080D                     	;# 
  6357  080E                     	;# 
  6358  080F                     	;# 
  6359  0810                     	;# 
  6360  0811                     	;# 
  6361  0812                     	;# 
  6362  0813                     	;# 
  6363  0814                     	;# 
  6364  081A                     	;# 
  6365  081A                     	;# 
  6366  081B                     	;# 
  6367  081C                     	;# 
  6368  081C                     	;# 
  6369  081D                     	;# 
  6370  081E                     	;# 
  6371  081F                     	;# 
  6372  088C                     	;# 
  6373  088D                     	;# 
  6374  088E                     	;# 
  6375  088F                     	;# 
  6376  0890                     	;# 
  6377  0891                     	;# 
  6378  0892                     	;# 
  6379  0893                     	;# 
  6380  0895                     	;# 
  6381  0896                     	;# 
  6382  0897                     	;# 
  6383  0898                     	;# 
  6384  0899                     	;# 
  6385  089A                     	;# 
  6386  089B                     	;# 
  6387  090C                     	;# 
  6388  090E                     	;# 
  6389  090F                     	;# 
  6390  091F                     	;# 
  6391  098F                     	;# 
  6392  098F                     	;# 
  6393  0990                     	;# 
  6394  0991                     	;# 
  6395  0992                     	;# 
  6396  0993                     	;# 
  6397  0994                     	;# 
  6398  0995                     	;# 
  6399  0996                     	;# 
  6400  0997                     	;# 
  6401  1E0F                     	;# 
  6402  1E10                     	;# 
  6403  1E11                     	;# 
  6404  1E12                     	;# 
  6405  1E13                     	;# 
  6406  1E14                     	;# 
  6407  1E15                     	;# 
  6408  1E16                     	;# 
  6409  1E17                     	;# 
  6410  1E18                     	;# 
  6411  1E19                     	;# 
  6412  1E1A                     	;# 
  6413  1E1B                     	;# 
  6414  1E1C                     	;# 
  6415  1E1D                     	;# 
  6416  1E1E                     	;# 
  6417  1E1F                     	;# 
  6418  1E20                     	;# 
  6419  1E21                     	;# 
  6420  1E22                     	;# 
  6421  1E23                     	;# 
  6422  1E24                     	;# 
  6423  1E25                     	;# 
  6424  1E26                     	;# 
  6425  1E27                     	;# 
  6426  1E28                     	;# 
  6427  1E29                     	;# 
  6428  1E2A                     	;# 
  6429  1E2B                     	;# 
  6430  1E2C                     	;# 
  6431  1E2D                     	;# 
  6432  1E2E                     	;# 
  6433  1E2F                     	;# 
  6434  1E30                     	;# 
  6435  1E31                     	;# 
  6436  1E32                     	;# 
  6437  1E33                     	;# 
  6438  1E34                     	;# 
  6439  1E35                     	;# 
  6440  1E36                     	;# 
  6441  1E37                     	;# 
  6442  1E8F                     	;# 
  6443  1E90                     	;# 
  6444  1E91                     	;# 
  6445  1E92                     	;# 
  6446  1E93                     	;# 
  6447  1E94                     	;# 
  6448  1E95                     	;# 
  6449  1E96                     	;# 
  6450  1E97                     	;# 
  6451  1E9C                     	;# 
  6452  1E9D                     	;# 
  6453  1E9E                     	;# 
  6454  1EA1                     	;# 
  6455  1EA2                     	;# 
  6456  1EA3                     	;# 
  6457  1EA4                     	;# 
  6458  1EA9                     	;# 
  6459  1EAA                     	;# 
  6460  1EB1                     	;# 
  6461  1EB2                     	;# 
  6462  1EB8                     	;# 
  6463  1EB9                     	;# 
  6464  1EBA                     	;# 
  6465  1EBB                     	;# 
  6466  1EBC                     	;# 
  6467  1EBD                     	;# 
  6468  1EBE                     	;# 
  6469  1EC3                     	;# 
  6470  1EC5                     	;# 
  6471  1EC6                     	;# 
  6472  1EC7                     	;# 
  6473  1EC8                     	;# 
  6474  1EC9                     	;# 
  6475  1ECA                     	;# 
  6476  1ECB                     	;# 
  6477  1ECB                     	;# 
  6478  1ECB                     	;# 
  6479  1ECC                     	;# 
  6480  1ECC                     	;# 
  6481  1ECC                     	;# 
  6482  1F10                     	;# 
  6483  1F11                     	;# 
  6484  1F12                     	;# 
  6485  1F14                     	;# 
  6486  1F15                     	;# 
  6487  1F1C                     	;# 
  6488  1F1D                     	;# 
  6489  1F1E                     	;# 
  6490  1F1F                     	;# 
  6491  1F20                     	;# 
  6492  1F21                     	;# 
  6493  1F22                     	;# 
  6494  1F23                     	;# 
  6495  1F24                     	;# 
  6496  1F25                     	;# 
  6497  1F26                     	;# 
  6498  1F27                     	;# 
  6499  1F38                     	;# 
  6500  1F39                     	;# 
  6501  1F3A                     	;# 
  6502  1F3B                     	;# 
  6503  1F3C                     	;# 
  6504  1F3D                     	;# 
  6505  1F3E                     	;# 
  6506  1F3F                     	;# 
  6507  1F43                     	;# 
  6508  1F44                     	;# 
  6509  1F45                     	;# 
  6510  1F46                     	;# 
  6511  1F47                     	;# 
  6512  1F48                     	;# 
  6513  1F49                     	;# 
  6514  1F4A                     	;# 
  6515  1F4E                     	;# 
  6516  1F4F                     	;# 
  6517  1F50                     	;# 
  6518  1F51                     	;# 
  6519  1F52                     	;# 
  6520  1F53                     	;# 
  6521  1F54                     	;# 
  6522  1F55                     	;# 
  6523  1FE4                     	;# 
  6524  1FE5                     	;# 
  6525  1FE6                     	;# 
  6526  1FE7                     	;# 
  6527  1FE8                     	;# 
  6528  1FE8                     	;# 
  6529  1FE9                     	;# 
  6530  1FEA                     	;# 
  6531  1FEB                     	;# 
  6532  1FED                     	;# 
  6533  1FEE                     	;# 
  6534  1FEF                     	;# 
  6535  0000                     	;# 
  6536  0001                     	;# 
  6537  0002                     	;# 
  6538  0003                     	;# 
  6539  0004                     	;# 
  6540  0005                     	;# 
  6541  0006                     	;# 
  6542  0007                     	;# 
  6543  0008                     	;# 
  6544  0009                     	;# 
  6545  000A                     	;# 
  6546  000B                     	;# 
  6547  000C                     	;# 
  6548  000D                     	;# 
  6549  000E                     	;# 
  6550  0012                     	;# 
  6551  0013                     	;# 
  6552  0014                     	;# 
  6553  0018                     	;# 
  6554  0019                     	;# 
  6555  001A                     	;# 
  6556  008C                     	;# 
  6557  008C                     	;# 
  6558  008D                     	;# 
  6559  008E                     	;# 
  6560  008E                     	;# 
  6561  008F                     	;# 
  6562  0090                     	;# 
  6563  0090                     	;# 
  6564  0091                     	;# 
  6565  0092                     	;# 
  6566  0092                     	;# 
  6567  0093                     	;# 
  6568  0094                     	;# 
  6569  0094                     	;# 
  6570  0095                     	;# 
  6571  0096                     	;# 
  6572  0096                     	;# 
  6573  0097                     	;# 
  6574  0098                     	;# 
  6575  0099                     	;# 
  6576  009A                     	;# 
  6577  009B                     	;# 
  6578  009B                     	;# 
  6579  009C                     	;# 
  6580  009D                     	;# 
  6581  009D                     	;# 
  6582  009E                     	;# 
  6583  009F                     	;# 
  6584  010C                     	;# 
  6585  010C                     	;# 
  6586  010D                     	;# 
  6587  010E                     	;# 
  6588  010F                     	;# 
  6589  010F                     	;# 
  6590  0110                     	;# 
  6591  0111                     	;# 
  6592  0112                     	;# 
  6593  0113                     	;# 
  6594  0114                     	;# 
  6595  0115                     	;# 
  6596  0116                     	;# 
  6597  0117                     	;# 
  6598  0118                     	;# 
  6599  0119                     	;# 
  6600  0119                     	;# 
  6601  0119                     	;# 
  6602  011A                     	;# 
  6603  011A                     	;# 
  6604  011A                     	;# 
  6605  011B                     	;# 
  6606  011B                     	;# 
  6607  011B                     	;# 
  6608  011B                     	;# 
  6609  011B                     	;# 
  6610  011C                     	;# 
  6611  011C                     	;# 
  6612  011C                     	;# 
  6613  011D                     	;# 
  6614  011D                     	;# 
  6615  011D                     	;# 
  6616  011E                     	;# 
  6617  011E                     	;# 
  6618  011E                     	;# 
  6619  011F                     	;# 
  6620  011F                     	;# 
  6621  011F                     	;# 
  6622  011F                     	;# 
  6623  011F                     	;# 
  6624  018C                     	;# 
  6625  018D                     	;# 
  6626  018E                     	;# 
  6627  018F                     	;# 
  6628  0190                     	;# 
  6629  0191                     	;# 
  6630  0192                     	;# 
  6631  0196                     	;# 
  6632  0197                     	;# 
  6633  0198                     	;# 
  6634  0199                     	;# 
  6635  019A                     	;# 
  6636  019B                     	;# 
  6637  019C                     	;# 
  6638  020C                     	;# 
  6639  020D                     	;# 
  6640  020E                     	;# 
  6641  020E                     	;# 
  6642  020F                     	;# 
  6643  020F                     	;# 
  6644  0210                     	;# 
  6645  0210                     	;# 
  6646  0211                     	;# 
  6647  0211                     	;# 
  6648  0212                     	;# 
  6649  0213                     	;# 
  6650  0214                     	;# 
  6651  0214                     	;# 
  6652  0215                     	;# 
  6653  0215                     	;# 
  6654  0216                     	;# 
  6655  0216                     	;# 
  6656  0217                     	;# 
  6657  0217                     	;# 
  6658  0218                     	;# 
  6659  0219                     	;# 
  6660  021A                     	;# 
  6661  021A                     	;# 
  6662  021B                     	;# 
  6663  021B                     	;# 
  6664  021C                     	;# 
  6665  021C                     	;# 
  6666  021D                     	;# 
  6667  021D                     	;# 
  6668  021E                     	;# 
  6669  021F                     	;# 
  6670  028C                     	;# 
  6671  028C                     	;# 
  6672  028D                     	;# 
  6673  028D                     	;# 
  6674  028E                     	;# 
  6675  028F                     	;# 
  6676  0290                     	;# 
  6677  0291                     	;# 
  6678  0292                     	;# 
  6679  0292                     	;# 
  6680  0293                     	;# 
  6681  0293                     	;# 
  6682  0294                     	;# 
  6683  0295                     	;# 
  6684  0296                     	;# 
  6685  0297                     	;# 
  6686  0298                     	;# 
  6687  0298                     	;# 
  6688  0299                     	;# 
  6689  0299                     	;# 
  6690  029A                     	;# 
  6691  029B                     	;# 
  6692  029C                     	;# 
  6693  029D                     	;# 
  6694  029F                     	;# 
  6695  030C                     	;# 
  6696  030C                     	;# 
  6697  030D                     	;# 
  6698  030E                     	;# 
  6699  030F                     	;# 
  6700  0310                     	;# 
  6701  0310                     	;# 
  6702  0311                     	;# 
  6703  0312                     	;# 
  6704  0313                     	;# 
  6705  0314                     	;# 
  6706  0314                     	;# 
  6707  0315                     	;# 
  6708  0316                     	;# 
  6709  0317                     	;# 
  6710  0318                     	;# 
  6711  0318                     	;# 
  6712  0319                     	;# 
  6713  031A                     	;# 
  6714  031B                     	;# 
  6715  038C                     	;# 
  6716  038C                     	;# 
  6717  038D                     	;# 
  6718  038E                     	;# 
  6719  0390                     	;# 
  6720  0390                     	;# 
  6721  0391                     	;# 
  6722  0392                     	;# 
  6723  048C                     	;# 
  6724  048C                     	;# 
  6725  048D                     	;# 
  6726  048E                     	;# 
  6727  048F                     	;# 
  6728  048F                     	;# 
  6729  0490                     	;# 
  6730  0491                     	;# 
  6731  0492                     	;# 
  6732  0492                     	;# 
  6733  0493                     	;# 
  6734  0494                     	;# 
  6735  0495                     	;# 
  6736  0495                     	;# 
  6737  0496                     	;# 
  6738  0497                     	;# 
  6739  0498                     	;# 
  6740  0499                     	;# 
  6741  049A                     	;# 
  6742  049B                     	;# 
  6743  049C                     	;# 
  6744  049D                     	;# 
  6745  058C                     	;# 
  6746  058C                     	;# 
  6747  058D                     	;# 
  6748  058E                     	;# 
  6749  058F                     	;# 
  6750  058F                     	;# 
  6751  0590                     	;# 
  6752  0591                     	;# 
  6753  0592                     	;# 
  6754  0593                     	;# 
  6755  059C                     	;# 
  6756  059C                     	;# 
  6757  059D                     	;# 
  6758  059D                     	;# 
  6759  059E                     	;# 
  6760  059F                     	;# 
  6761  060C                     	;# 
  6762  060C                     	;# 
  6763  060D                     	;# 
  6764  060D                     	;# 
  6765  060E                     	;# 
  6766  060F                     	;# 
  6767  0610                     	;# 
  6768  0611                     	;# 
  6769  0612                     	;# 
  6770  0613                     	;# 
  6771  0614                     	;# 
  6772  0616                     	;# 
  6773  0616                     	;# 
  6774  0617                     	;# 
  6775  0617                     	;# 
  6776  0618                     	;# 
  6777  0619                     	;# 
  6778  061A                     	;# 
  6779  061B                     	;# 
  6780  061C                     	;# 
  6781  061D                     	;# 
  6782  061E                     	;# 
  6783  070C                     	;# 
  6784  070D                     	;# 
  6785  070E                     	;# 
  6786  070F                     	;# 
  6787  0710                     	;# 
  6788  0711                     	;# 
  6789  0712                     	;# 
  6790  0713                     	;# 
  6791  0714                     	;# 
  6792  0716                     	;# 
  6793  0717                     	;# 
  6794  0718                     	;# 
  6795  0719                     	;# 
  6796  071A                     	;# 
  6797  071B                     	;# 
  6798  071C                     	;# 
  6799  071D                     	;# 
  6800  071E                     	;# 
  6801  0796                     	;# 
  6802  0797                     	;# 
  6803  0798                     	;# 
  6804  0799                     	;# 
  6805  079A                     	;# 
  6806  079B                     	;# 
  6807  079C                     	;# 
  6808  079D                     	;# 
  6809  080C                     	;# 
  6810  080D                     	;# 
  6811  080E                     	;# 
  6812  080F                     	;# 
  6813  0810                     	;# 
  6814  0811                     	;# 
  6815  0812                     	;# 
  6816  0813                     	;# 
  6817  0814                     	;# 
  6818  081A                     	;# 
  6819  081A                     	;# 
  6820  081B                     	;# 
  6821  081C                     	;# 
  6822  081C                     	;# 
  6823  081D                     	;# 
  6824  081E                     	;# 
  6825  081F                     	;# 
  6826  088C                     	;# 
  6827  088D                     	;# 
  6828  088E                     	;# 
  6829  088F                     	;# 
  6830  0890                     	;# 
  6831  0891                     	;# 
  6832  0892                     	;# 
  6833  0893                     	;# 
  6834  0895                     	;# 
  6835  0896                     	;# 
  6836  0897                     	;# 
  6837  0898                     	;# 
  6838  0899                     	;# 
  6839  089A                     	;# 
  6840  089B                     	;# 
  6841  090C                     	;# 
  6842  090E                     	;# 
  6843  090F                     	;# 
  6844  091F                     	;# 
  6845  098F                     	;# 
  6846  098F                     	;# 
  6847  0990                     	;# 
  6848  0991                     	;# 
  6849  0992                     	;# 
  6850  0993                     	;# 
  6851  0994                     	;# 
  6852  0995                     	;# 
  6853  0996                     	;# 
  6854  0997                     	;# 
  6855  1E0F                     	;# 
  6856  1E10                     	;# 
  6857  1E11                     	;# 
  6858  1E12                     	;# 
  6859  1E13                     	;# 
  6860  1E14                     	;# 
  6861  1E15                     	;# 
  6862  1E16                     	;# 
  6863  1E17                     	;# 
  6864  1E18                     	;# 
  6865  1E19                     	;# 
  6866  1E1A                     	;# 
  6867  1E1B                     	;# 
  6868  1E1C                     	;# 
  6869  1E1D                     	;# 
  6870  1E1E                     	;# 
  6871  1E1F                     	;# 
  6872  1E20                     	;# 
  6873  1E21                     	;# 
  6874  1E22                     	;# 
  6875  1E23                     	;# 
  6876  1E24                     	;# 
  6877  1E25                     	;# 
  6878  1E26                     	;# 
  6879  1E27                     	;# 
  6880  1E28                     	;# 
  6881  1E29                     	;# 
  6882  1E2A                     	;# 
  6883  1E2B                     	;# 
  6884  1E2C                     	;# 
  6885  1E2D                     	;# 
  6886  1E2E                     	;# 
  6887  1E2F                     	;# 
  6888  1E30                     	;# 
  6889  1E31                     	;# 
  6890  1E32                     	;# 
  6891  1E33                     	;# 
  6892  1E34                     	;# 
  6893  1E35                     	;# 
  6894  1E36                     	;# 
  6895  1E37                     	;# 
  6896  1E8F                     	;# 
  6897  1E90                     	;# 
  6898  1E91                     	;# 
  6899  1E92                     	;# 
  6900  1E93                     	;# 
  6901  1E94                     	;# 
  6902  1E95                     	;# 
  6903  1E96                     	;# 
  6904  1E97                     	;# 
  6905  1E9C                     	;# 
  6906  1E9D                     	;# 
  6907  1E9E                     	;# 
  6908  1EA1                     	;# 
  6909  1EA2                     	;# 
  6910  1EA3                     	;# 
  6911  1EA4                     	;# 
  6912  1EA9                     	;# 
  6913  1EAA                     	;# 
  6914  1EB1                     	;# 
  6915  1EB2                     	;# 
  6916  1EB8                     	;# 
  6917  1EB9                     	;# 
  6918  1EBA                     	;# 
  6919  1EBB                     	;# 
  6920  1EBC                     	;# 
  6921  1EBD                     	;# 
  6922  1EBE                     	;# 
  6923  1EC3                     	;# 
  6924  1EC5                     	;# 
  6925  1EC6                     	;# 
  6926  1EC7                     	;# 
  6927  1EC8                     	;# 
  6928  1EC9                     	;# 
  6929  1ECA                     	;# 
  6930  1ECB                     	;# 
  6931  1ECB                     	;# 
  6932  1ECB                     	;# 
  6933  1ECC                     	;# 
  6934  1ECC                     	;# 
  6935  1ECC                     	;# 
  6936  1F10                     	;# 
  6937  1F11                     	;# 
  6938  1F12                     	;# 
  6939  1F14                     	;# 
  6940  1F15                     	;# 
  6941  1F1C                     	;# 
  6942  1F1D                     	;# 
  6943  1F1E                     	;# 
  6944  1F1F                     	;# 
  6945  1F20                     	;# 
  6946  1F21                     	;# 
  6947  1F22                     	;# 
  6948  1F23                     	;# 
  6949  1F24                     	;# 
  6950  1F25                     	;# 
  6951  1F26                     	;# 
  6952  1F27                     	;# 
  6953  1F38                     	;# 
  6954  1F39                     	;# 
  6955  1F3A                     	;# 
  6956  1F3B                     	;# 
  6957  1F3C                     	;# 
  6958  1F3D                     	;# 
  6959  1F3E                     	;# 
  6960  1F3F                     	;# 
  6961  1F43                     	;# 
  6962  1F44                     	;# 
  6963  1F45                     	;# 
  6964  1F46                     	;# 
  6965  1F47                     	;# 
  6966  1F48                     	;# 
  6967  1F49                     	;# 
  6968  1F4A                     	;# 
  6969  1F4E                     	;# 
  6970  1F4F                     	;# 
  6971  1F50                     	;# 
  6972  1F51                     	;# 
  6973  1F52                     	;# 
  6974  1F53                     	;# 
  6975  1F54                     	;# 
  6976  1F55                     	;# 
  6977  1FE4                     	;# 
  6978  1FE5                     	;# 
  6979  1FE6                     	;# 
  6980  1FE7                     	;# 
  6981  1FE8                     	;# 
  6982  1FE8                     	;# 
  6983  1FE9                     	;# 
  6984  1FEA                     	;# 
  6985  1FEB                     	;# 
  6986  1FED                     	;# 
  6987  1FEE                     	;# 
  6988  1FEF                     	;# 
  6989  0000                     	;# 
  6990  0001                     	;# 
  6991  0002                     	;# 
  6992  0003                     	;# 
  6993  0004                     	;# 
  6994  0005                     	;# 
  6995  0006                     	;# 
  6996  0007                     	;# 
  6997  0008                     	;# 
  6998  0009                     	;# 
  6999  000A                     	;# 
  7000  000B                     	;# 
  7001  000C                     	;# 
  7002  000D                     	;# 
  7003  000E                     	;# 
  7004  0012                     	;# 
  7005  0013                     	;# 
  7006  0014                     	;# 
  7007  0018                     	;# 
  7008  0019                     	;# 
  7009  001A                     	;# 
  7010  008C                     	;# 
  7011  008C                     	;# 
  7012  008D                     	;# 
  7013  008E                     	;# 
  7014  008E                     	;# 
  7015  008F                     	;# 
  7016  0090                     	;# 
  7017  0090                     	;# 
  7018  0091                     	;# 
  7019  0092                     	;# 
  7020  0092                     	;# 
  7021  0093                     	;# 
  7022  0094                     	;# 
  7023  0094                     	;# 
  7024  0095                     	;# 
  7025  0096                     	;# 
  7026  0096                     	;# 
  7027  0097                     	;# 
  7028  0098                     	;# 
  7029  0099                     	;# 
  7030  009A                     	;# 
  7031  009B                     	;# 
  7032  009B                     	;# 
  7033  009C                     	;# 
  7034  009D                     	;# 
  7035  009D                     	;# 
  7036  009E                     	;# 
  7037  009F                     	;# 
  7038  010C                     	;# 
  7039  010C                     	;# 
  7040  010D                     	;# 
  7041  010E                     	;# 
  7042  010F                     	;# 
  7043  010F                     	;# 
  7044  0110                     	;# 
  7045  0111                     	;# 
  7046  0112                     	;# 
  7047  0113                     	;# 
  7048  0114                     	;# 
  7049  0115                     	;# 
  7050  0116                     	;# 
  7051  0117                     	;# 
  7052  0118                     	;# 
  7053  0119                     	;# 
  7054  0119                     	;# 
  7055  0119                     	;# 
  7056  011A                     	;# 
  7057  011A                     	;# 
  7058  011A                     	;# 
  7059  011B                     	;# 
  7060  011B                     	;# 
  7061  011B                     	;# 
  7062  011B                     	;# 
  7063  011B                     	;# 
  7064  011C                     	;# 
  7065  011C                     	;# 
  7066  011C                     	;# 
  7067  011D                     	;# 
  7068  011D                     	;# 
  7069  011D                     	;# 
  7070  011E                     	;# 
  7071  011E                     	;# 
  7072  011E                     	;# 
  7073  011F                     	;# 
  7074  011F                     	;# 
  7075  011F                     	;# 
  7076  011F                     	;# 
  7077  011F                     	;# 
  7078  018C                     	;# 
  7079  018D                     	;# 
  7080  018E                     	;# 
  7081  018F                     	;# 
  7082  0190                     	;# 
  7083  0191                     	;# 
  7084  0192                     	;# 
  7085  0196                     	;# 
  7086  0197                     	;# 
  7087  0198                     	;# 
  7088  0199                     	;# 
  7089  019A                     	;# 
  7090  019B                     	;# 
  7091  019C                     	;# 
  7092  020C                     	;# 
  7093  020D                     	;# 
  7094  020E                     	;# 
  7095  020E                     	;# 
  7096  020F                     	;# 
  7097  020F                     	;# 
  7098  0210                     	;# 
  7099  0210                     	;# 
  7100  0211                     	;# 
  7101  0211                     	;# 
  7102  0212                     	;# 
  7103  0213                     	;# 
  7104  0214                     	;# 
  7105  0214                     	;# 
  7106  0215                     	;# 
  7107  0215                     	;# 
  7108  0216                     	;# 
  7109  0216                     	;# 
  7110  0217                     	;# 
  7111  0217                     	;# 
  7112  0218                     	;# 
  7113  0219                     	;# 
  7114  021A                     	;# 
  7115  021A                     	;# 
  7116  021B                     	;# 
  7117  021B                     	;# 
  7118  021C                     	;# 
  7119  021C                     	;# 
  7120  021D                     	;# 
  7121  021D                     	;# 
  7122  021E                     	;# 
  7123  021F                     	;# 
  7124  028C                     	;# 
  7125  028C                     	;# 
  7126  028D                     	;# 
  7127  028D                     	;# 
  7128  028E                     	;# 
  7129  028F                     	;# 
  7130  0290                     	;# 
  7131  0291                     	;# 
  7132  0292                     	;# 
  7133  0292                     	;# 
  7134  0293                     	;# 
  7135  0293                     	;# 
  7136  0294                     	;# 
  7137  0295                     	;# 
  7138  0296                     	;# 
  7139  0297                     	;# 
  7140  0298                     	;# 
  7141  0298                     	;# 
  7142  0299                     	;# 
  7143  0299                     	;# 
  7144  029A                     	;# 
  7145  029B                     	;# 
  7146  029C                     	;# 
  7147  029D                     	;# 
  7148  029F                     	;# 
  7149  030C                     	;# 
  7150  030C                     	;# 
  7151  030D                     	;# 
  7152  030E                     	;# 
  7153  030F                     	;# 
  7154  0310                     	;# 
  7155  0310                     	;# 
  7156  0311                     	;# 
  7157  0312                     	;# 
  7158  0313                     	;# 
  7159  0314                     	;# 
  7160  0314                     	;# 
  7161  0315                     	;# 
  7162  0316                     	;# 
  7163  0317                     	;# 
  7164  0318                     	;# 
  7165  0318                     	;# 
  7166  0319                     	;# 
  7167  031A                     	;# 
  7168  031B                     	;# 
  7169  038C                     	;# 
  7170  038C                     	;# 
  7171  038D                     	;# 
  7172  038E                     	;# 
  7173  0390                     	;# 
  7174  0390                     	;# 
  7175  0391                     	;# 
  7176  0392                     	;# 
  7177  048C                     	;# 
  7178  048C                     	;# 
  7179  048D                     	;# 
  7180  048E                     	;# 
  7181  048F                     	;# 
  7182  048F                     	;# 
  7183  0490                     	;# 
  7184  0491                     	;# 
  7185  0492                     	;# 
  7186  0492                     	;# 
  7187  0493                     	;# 
  7188  0494                     	;# 
  7189  0495                     	;# 
  7190  0495                     	;# 
  7191  0496                     	;# 
  7192  0497                     	;# 
  7193  0498                     	;# 
  7194  0499                     	;# 
  7195  049A                     	;# 
  7196  049B                     	;# 
  7197  049C                     	;# 
  7198  049D                     	;# 
  7199  058C                     	;# 
  7200  058C                     	;# 
  7201  058D                     	;# 
  7202  058E                     	;# 
  7203  058F                     	;# 
  7204  058F                     	;# 
  7205  0590                     	;# 
  7206  0591                     	;# 
  7207  0592                     	;# 
  7208  0593                     	;# 
  7209  059C                     	;# 
  7210  059C                     	;# 
  7211  059D                     	;# 
  7212  059D                     	;# 
  7213  059E                     	;# 
  7214  059F                     	;# 
  7215  060C                     	;# 
  7216  060C                     	;# 
  7217  060D                     	;# 
  7218  060D                     	;# 
  7219  060E                     	;# 
  7220  060F                     	;# 
  7221  0610                     	;# 
  7222  0611                     	;# 
  7223  0612                     	;# 
  7224  0613                     	;# 
  7225  0614                     	;# 
  7226  0616                     	;# 
  7227  0616                     	;# 
  7228  0617                     	;# 
  7229  0617                     	;# 
  7230  0618                     	;# 
  7231  0619                     	;# 
  7232  061A                     	;# 
  7233  061B                     	;# 
  7234  061C                     	;# 
  7235  061D                     	;# 
  7236  061E                     	;# 
  7237  070C                     	;# 
  7238  070D                     	;# 
  7239  070E                     	;# 
  7240  070F                     	;# 
  7241  0710                     	;# 
  7242  0711                     	;# 
  7243  0712                     	;# 
  7244  0713                     	;# 
  7245  0714                     	;# 
  7246  0716                     	;# 
  7247  0717                     	;# 
  7248  0718                     	;# 
  7249  0719                     	;# 
  7250  071A                     	;# 
  7251  071B                     	;# 
  7252  071C                     	;# 
  7253  071D                     	;# 
  7254  071E                     	;# 
  7255  0796                     	;# 
  7256  0797                     	;# 
  7257  0798                     	;# 
  7258  0799                     	;# 
  7259  079A                     	;# 
  7260  079B                     	;# 
  7261  079C                     	;# 
  7262  079D                     	;# 
  7263  080C                     	;# 
  7264  080D                     	;# 
  7265  080E                     	;# 
  7266  080F                     	;# 
  7267  0810                     	;# 
  7268  0811                     	;# 
  7269  0812                     	;# 
  7270  0813                     	;# 
  7271  0814                     	;# 
  7272  081A                     	;# 
  7273  081A                     	;# 
  7274  081B                     	;# 
  7275  081C                     	;# 
  7276  081C                     	;# 
  7277  081D                     	;# 
  7278  081E                     	;# 
  7279  081F                     	;# 
  7280  088C                     	;# 
  7281  088D                     	;# 
  7282  088E                     	;# 
  7283  088F                     	;# 
  7284  0890                     	;# 
  7285  0891                     	;# 
  7286  0892                     	;# 
  7287  0893                     	;# 
  7288  0895                     	;# 
  7289  0896                     	;# 
  7290  0897                     	;# 
  7291  0898                     	;# 
  7292  0899                     	;# 
  7293  089A                     	;# 
  7294  089B                     	;# 
  7295  090C                     	;# 
  7296  090E                     	;# 
  7297  090F                     	;# 
  7298  091F                     	;# 
  7299  098F                     	;# 
  7300  098F                     	;# 
  7301  0990                     	;# 
  7302  0991                     	;# 
  7303  0992                     	;# 
  7304  0993                     	;# 
  7305  0994                     	;# 
  7306  0995                     	;# 
  7307  0996                     	;# 
  7308  0997                     	;# 
  7309  1E0F                     	;# 
  7310  1E10                     	;# 
  7311  1E11                     	;# 
  7312  1E12                     	;# 
  7313  1E13                     	;# 
  7314  1E14                     	;# 
  7315  1E15                     	;# 
  7316  1E16                     	;# 
  7317  1E17                     	;# 
  7318  1E18                     	;# 
  7319  1E19                     	;# 
  7320  1E1A                     	;# 
  7321  1E1B                     	;# 
  7322  1E1C                     	;# 
  7323  1E1D                     	;# 
  7324  1E1E                     	;# 
  7325  1E1F                     	;# 
  7326  1E20                     	;# 
  7327  1E21                     	;# 
  7328  1E22                     	;# 
  7329  1E23                     	;# 
  7330  1E24                     	;# 
  7331  1E25                     	;# 
  7332  1E26                     	;# 
  7333  1E27                     	;# 
  7334  1E28                     	;# 
  7335  1E29                     	;# 
  7336  1E2A                     	;# 
  7337  1E2B                     	;# 
  7338  1E2C                     	;# 
  7339  1E2D                     	;# 
  7340  1E2E                     	;# 
  7341  1E2F                     	;# 
  7342  1E30                     	;# 
  7343  1E31                     	;# 
  7344  1E32                     	;# 
  7345  1E33                     	;# 
  7346  1E34                     	;# 
  7347  1E35                     	;# 
  7348  1E36                     	;# 
  7349  1E37                     	;# 
  7350  1E8F                     	;# 
  7351  1E90                     	;# 
  7352  1E91                     	;# 
  7353  1E92                     	;# 
  7354  1E93                     	;# 
  7355  1E94                     	;# 
  7356  1E95                     	;# 
  7357  1E96                     	;# 
  7358  1E97                     	;# 
  7359  1E9C                     	;# 
  7360  1E9D                     	;# 
  7361  1E9E                     	;# 
  7362  1EA1                     	;# 
  7363  1EA2                     	;# 
  7364  1EA3                     	;# 
  7365  1EA4                     	;# 
  7366  1EA9                     	;# 
  7367  1EAA                     	;# 
  7368  1EB1                     	;# 
  7369  1EB2                     	;# 
  7370  1EB8                     	;# 
  7371  1EB9                     	;# 
  7372  1EBA                     	;# 
  7373  1EBB                     	;# 
  7374  1EBC                     	;# 
  7375  1EBD                     	;# 
  7376  1EBE                     	;# 
  7377  1EC3                     	;# 
  7378  1EC5                     	;# 
  7379  1EC6                     	;# 
  7380  1EC7                     	;# 
  7381  1EC8                     	;# 
  7382  1EC9                     	;# 
  7383  1ECA                     	;# 
  7384  1ECB                     	;# 
  7385  1ECB                     	;# 
  7386  1ECB                     	;# 
  7387  1ECC                     	;# 
  7388  1ECC                     	;# 
  7389  1ECC                     	;# 
  7390  1F10                     	;# 
  7391  1F11                     	;# 
  7392  1F12                     	;# 
  7393  1F14                     	;# 
  7394  1F15                     	;# 
  7395  1F1C                     	;# 
  7396  1F1D                     	;# 
  7397  1F1E                     	;# 
  7398  1F1F                     	;# 
  7399  1F20                     	;# 
  7400  1F21                     	;# 
  7401  1F22                     	;# 
  7402  1F23                     	;# 
  7403  1F24                     	;# 
  7404  1F25                     	;# 
  7405  1F26                     	;# 
  7406  1F27                     	;# 
  7407  1F38                     	;# 
  7408  1F39                     	;# 
  7409  1F3A                     	;# 
  7410  1F3B                     	;# 
  7411  1F3C                     	;# 
  7412  1F3D                     	;# 
  7413  1F3E                     	;# 
  7414  1F3F                     	;# 
  7415  1F43                     	;# 
  7416  1F44                     	;# 
  7417  1F45                     	;# 
  7418  1F46                     	;# 
  7419  1F47                     	;# 
  7420  1F48                     	;# 
  7421  1F49                     	;# 
  7422  1F4A                     	;# 
  7423  1F4E                     	;# 
  7424  1F4F                     	;# 
  7425  1F50                     	;# 
  7426  1F51                     	;# 
  7427  1F52                     	;# 
  7428  1F53                     	;# 
  7429  1F54                     	;# 
  7430  1F55                     	;# 
  7431  1FE4                     	;# 
  7432  1FE5                     	;# 
  7433  1FE6                     	;# 
  7434  1FE7                     	;# 
  7435  1FE8                     	;# 
  7436  1FE8                     	;# 
  7437  1FE9                     	;# 
  7438  1FEA                     	;# 
  7439  1FEB                     	;# 
  7440  1FED                     	;# 
  7441  1FEE                     	;# 
  7442  1FEF                     	;# 
  7443  0000                     	;# 
  7444  0001                     	;# 
  7445  0002                     	;# 
  7446  0003                     	;# 
  7447  0004                     	;# 
  7448  0005                     	;# 
  7449  0006                     	;# 
  7450  0007                     	;# 
  7451  0008                     	;# 
  7452  0009                     	;# 
  7453  000A                     	;# 
  7454  000B                     	;# 
  7455  000C                     	;# 
  7456  000D                     	;# 
  7457  000E                     	;# 
  7458  0012                     	;# 
  7459  0013                     	;# 
  7460  0014                     	;# 
  7461  0018                     	;# 
  7462  0019                     	;# 
  7463  001A                     	;# 
  7464  008C                     	;# 
  7465  008C                     	;# 
  7466  008D                     	;# 
  7467  008E                     	;# 
  7468  008E                     	;# 
  7469  008F                     	;# 
  7470  0090                     	;# 
  7471  0090                     	;# 
  7472  0091                     	;# 
  7473  0092                     	;# 
  7474  0092                     	;# 
  7475  0093                     	;# 
  7476  0094                     	;# 
  7477  0094                     	;# 
  7478  0095                     	;# 
  7479  0096                     	;# 
  7480  0096                     	;# 
  7481  0097                     	;# 
  7482  0098                     	;# 
  7483  0099                     	;# 
  7484  009A                     	;# 
  7485  009B                     	;# 
  7486  009B                     	;# 
  7487  009C                     	;# 
  7488  009D                     	;# 
  7489  009D                     	;# 
  7490  009E                     	;# 
  7491  009F                     	;# 
  7492  010C                     	;# 
  7493  010C                     	;# 
  7494  010D                     	;# 
  7495  010E                     	;# 
  7496  010F                     	;# 
  7497  010F                     	;# 
  7498  0110                     	;# 
  7499  0111                     	;# 
  7500  0112                     	;# 
  7501  0113                     	;# 
  7502  0114                     	;# 
  7503  0115                     	;# 
  7504  0116                     	;# 
  7505  0117                     	;# 
  7506  0118                     	;# 
  7507  0119                     	;# 
  7508  0119                     	;# 
  7509  0119                     	;# 
  7510  011A                     	;# 
  7511  011A                     	;# 
  7512  011A                     	;# 
  7513  011B                     	;# 
  7514  011B                     	;# 
  7515  011B                     	;# 
  7516  011B                     	;# 
  7517  011B                     	;# 
  7518  011C                     	;# 
  7519  011C                     	;# 
  7520  011C                     	;# 
  7521  011D                     	;# 
  7522  011D                     	;# 
  7523  011D                     	;# 
  7524  011E                     	;# 
  7525  011E                     	;# 
  7526  011E                     	;# 
  7527  011F                     	;# 
  7528  011F                     	;# 
  7529  011F                     	;# 
  7530  011F                     	;# 
  7531  011F                     	;# 
  7532  018C                     	;# 
  7533  018D                     	;# 
  7534  018E                     	;# 
  7535  018F                     	;# 
  7536  0190                     	;# 
  7537  0191                     	;# 
  7538  0192                     	;# 
  7539  0196                     	;# 
  7540  0197                     	;# 
  7541  0198                     	;# 
  7542  0199                     	;# 
  7543  019A                     	;# 
  7544  019B                     	;# 
  7545  019C                     	;# 
  7546  020C                     	;# 
  7547  020D                     	;# 
  7548  020E                     	;# 
  7549  020E                     	;# 
  7550  020F                     	;# 
  7551  020F                     	;# 
  7552  0210                     	;# 
  7553  0210                     	;# 
  7554  0211                     	;# 
  7555  0211                     	;# 
  7556  0212                     	;# 
  7557  0213                     	;# 
  7558  0214                     	;# 
  7559  0214                     	;# 
  7560  0215                     	;# 
  7561  0215                     	;# 
  7562  0216                     	;# 
  7563  0216                     	;# 
  7564  0217                     	;# 
  7565  0217                     	;# 
  7566  0218                     	;# 
  7567  0219                     	;# 
  7568  021A                     	;# 
  7569  021A                     	;# 
  7570  021B                     	;# 
  7571  021B                     	;# 
  7572  021C                     	;# 
  7573  021C                     	;# 
  7574  021D                     	;# 
  7575  021D                     	;# 
  7576  021E                     	;# 
  7577  021F                     	;# 
  7578  028C                     	;# 
  7579  028C                     	;# 
  7580  028D                     	;# 
  7581  028D                     	;# 
  7582  028E                     	;# 
  7583  028F                     	;# 
  7584  0290                     	;# 
  7585  0291                     	;# 
  7586  0292                     	;# 
  7587  0292                     	;# 
  7588  0293                     	;# 
  7589  0293                     	;# 
  7590  0294                     	;# 
  7591  0295                     	;# 
  7592  0296                     	;# 
  7593  0297                     	;# 
  7594  0298                     	;# 
  7595  0298                     	;# 
  7596  0299                     	;# 
  7597  0299                     	;# 
  7598  029A                     	;# 
  7599  029B                     	;# 
  7600  029C                     	;# 
  7601  029D                     	;# 
  7602  029F                     	;# 
  7603  030C                     	;# 
  7604  030C                     	;# 
  7605  030D                     	;# 
  7606  030E                     	;# 
  7607  030F                     	;# 
  7608  0310                     	;# 
  7609  0310                     	;# 
  7610  0311                     	;# 
  7611  0312                     	;# 
  7612  0313                     	;# 
  7613  0314                     	;# 
  7614  0314                     	;# 
  7615  0315                     	;# 
  7616  0316                     	;# 
  7617  0317                     	;# 
  7618  0318                     	;# 
  7619  0318                     	;# 
  7620  0319                     	;# 
  7621  031A                     	;# 
  7622  031B                     	;# 
  7623  038C                     	;# 
  7624  038C                     	;# 
  7625  038D                     	;# 
  7626  038E                     	;# 
  7627  0390                     	;# 
  7628  0390                     	;# 
  7629  0391                     	;# 
  7630  0392                     	;# 
  7631  048C                     	;# 
  7632  048C                     	;# 
  7633  048D                     	;# 
  7634  048E                     	;# 
  7635  048F                     	;# 
  7636  048F                     	;# 
  7637  0490                     	;# 
  7638  0491                     	;# 
  7639  0492                     	;# 
  7640  0492                     	;# 
  7641  0493                     	;# 
  7642  0494                     	;# 
  7643  0495                     	;# 
  7644  0495                     	;# 
  7645  0496                     	;# 
  7646  0497                     	;# 
  7647  0498                     	;# 
  7648  0499                     	;# 
  7649  049A                     	;# 
  7650  049B                     	;# 
  7651  049C                     	;# 
  7652  049D                     	;# 
  7653  058C                     	;# 
  7654  058C                     	;# 
  7655  058D                     	;# 
  7656  058E                     	;# 
  7657  058F                     	;# 
  7658  058F                     	;# 
  7659  0590                     	;# 
  7660  0591                     	;# 
  7661  0592                     	;# 
  7662  0593                     	;# 
  7663  059C                     	;# 
  7664  059C                     	;# 
  7665  059D                     	;# 
  7666  059D                     	;# 
  7667  059E                     	;# 
  7668  059F                     	;# 
  7669  060C                     	;# 
  7670  060C                     	;# 
  7671  060D                     	;# 
  7672  060D                     	;# 
  7673  060E                     	;# 
  7674  060F                     	;# 
  7675  0610                     	;# 
  7676  0611                     	;# 
  7677  0612                     	;# 
  7678  0613                     	;# 
  7679  0614                     	;# 
  7680  0616                     	;# 
  7681  0616                     	;# 
  7682  0617                     	;# 
  7683  0617                     	;# 
  7684  0618                     	;# 
  7685  0619                     	;# 
  7686  061A                     	;# 
  7687  061B                     	;# 
  7688  061C                     	;# 
  7689  061D                     	;# 
  7690  061E                     	;# 
  7691  070C                     	;# 
  7692  070D                     	;# 
  7693  070E                     	;# 
  7694  070F                     	;# 
  7695  0710                     	;# 
  7696  0711                     	;# 
  7697  0712                     	;# 
  7698  0713                     	;# 
  7699  0714                     	;# 
  7700  0716                     	;# 
  7701  0717                     	;# 
  7702  0718                     	;# 
  7703  0719                     	;# 
  7704  071A                     	;# 
  7705  071B                     	;# 
  7706  071C                     	;# 
  7707  071D                     	;# 
  7708  071E                     	;# 
  7709  0796                     	;# 
  7710  0797                     	;# 
  7711  0798                     	;# 
  7712  0799                     	;# 
  7713  079A                     	;# 
  7714  079B                     	;# 
  7715  079C                     	;# 
  7716  079D                     	;# 
  7717  080C                     	;# 
  7718  080D                     	;# 
  7719  080E                     	;# 
  7720  080F                     	;# 
  7721  0810                     	;# 
  7722  0811                     	;# 
  7723  0812                     	;# 
  7724  0813                     	;# 
  7725  0814                     	;# 
  7726  081A                     	;# 
  7727  081A                     	;# 
  7728  081B                     	;# 
  7729  081C                     	;# 
  7730  081C                     	;# 
  7731  081D                     	;# 
  7732  081E                     	;# 
  7733  081F                     	;# 
  7734  088C                     	;# 
  7735  088D                     	;# 
  7736  088E                     	;# 
  7737  088F                     	;# 
  7738  0890                     	;# 
  7739  0891                     	;# 
  7740  0892                     	;# 
  7741  0893                     	;# 
  7742  0895                     	;# 
  7743  0896                     	;# 
  7744  0897                     	;# 
  7745  0898                     	;# 
  7746  0899                     	;# 
  7747  089A                     	;# 
  7748  089B                     	;# 
  7749  090C                     	;# 
  7750  090E                     	;# 
  7751  090F                     	;# 
  7752  091F                     	;# 
  7753  098F                     	;# 
  7754  098F                     	;# 
  7755  0990                     	;# 
  7756  0991                     	;# 
  7757  0992                     	;# 
  7758  0993                     	;# 
  7759  0994                     	;# 
  7760  0995                     	;# 
  7761  0996                     	;# 
  7762  0997                     	;# 
  7763  1E0F                     	;# 
  7764  1E10                     	;# 
  7765  1E11                     	;# 
  7766  1E12                     	;# 
  7767  1E13                     	;# 
  7768  1E14                     	;# 
  7769  1E15                     	;# 
  7770  1E16                     	;# 
  7771  1E17                     	;# 
  7772  1E18                     	;# 
  7773  1E19                     	;# 
  7774  1E1A                     	;# 
  7775  1E1B                     	;# 
  7776  1E1C                     	;# 
  7777  1E1D                     	;# 
  7778  1E1E                     	;# 
  7779  1E1F                     	;# 
  7780  1E20                     	;# 
  7781  1E21                     	;# 
  7782  1E22                     	;# 
  7783  1E23                     	;# 
  7784  1E24                     	;# 
  7785  1E25                     	;# 
  7786  1E26                     	;# 
  7787  1E27                     	;# 
  7788  1E28                     	;# 
  7789  1E29                     	;# 
  7790  1E2A                     	;# 
  7791  1E2B                     	;# 
  7792  1E2C                     	;# 
  7793  1E2D                     	;# 
  7794  1E2E                     	;# 
  7795  1E2F                     	;# 
  7796  1E30                     	;# 
  7797  1E31                     	;# 
  7798  1E32                     	;# 
  7799  1E33                     	;# 
  7800  1E34                     	;# 
  7801  1E35                     	;# 
  7802  1E36                     	;# 
  7803  1E37                     	;# 
  7804  1E8F                     	;# 
  7805  1E90                     	;# 
  7806  1E91                     	;# 
  7807  1E92                     	;# 
  7808  1E93                     	;# 
  7809  1E94                     	;# 
  7810  1E95                     	;# 
  7811  1E96                     	;# 
  7812  1E97                     	;# 
  7813  1E9C                     	;# 
  7814  1E9D                     	;# 
  7815  1E9E                     	;# 
  7816  1EA1                     	;# 
  7817  1EA2                     	;# 
  7818  1EA3                     	;# 
  7819  1EA4                     	;# 
  7820  1EA9                     	;# 
  7821  1EAA                     	;# 
  7822  1EB1                     	;# 
  7823  1EB2                     	;# 
  7824  1EB8                     	;# 
  7825  1EB9                     	;# 
  7826  1EBA                     	;# 
  7827  1EBB                     	;# 
  7828  1EBC                     	;# 
  7829  1EBD                     	;# 
  7830  1EBE                     	;# 
  7831  1EC3                     	;# 
  7832  1EC5                     	;# 
  7833  1EC6                     	;# 
  7834  1EC7                     	;# 
  7835  1EC8                     	;# 
  7836  1EC9                     	;# 
  7837  1ECA                     	;# 
  7838  1ECB                     	;# 
  7839  1ECB                     	;# 
  7840  1ECB                     	;# 
  7841  1ECC                     	;# 
  7842  1ECC                     	;# 
  7843  1ECC                     	;# 
  7844  1F10                     	;# 
  7845  1F11                     	;# 
  7846  1F12                     	;# 
  7847  1F14                     	;# 
  7848  1F15                     	;# 
  7849  1F1C                     	;# 
  7850  1F1D                     	;# 
  7851  1F1E                     	;# 
  7852  1F1F                     	;# 
  7853  1F20                     	;# 
  7854  1F21                     	;# 
  7855  1F22                     	;# 
  7856  1F23                     	;# 
  7857  1F24                     	;# 
  7858  1F25                     	;# 
  7859  1F26                     	;# 
  7860  1F27                     	;# 
  7861  1F38                     	;# 
  7862  1F39                     	;# 
  7863  1F3A                     	;# 
  7864  1F3B                     	;# 
  7865  1F3C                     	;# 
  7866  1F3D                     	;# 
  7867  1F3E                     	;# 
  7868  1F3F                     	;# 
  7869  1F43                     	;# 
  7870  1F44                     	;# 
  7871  1F45                     	;# 
  7872  1F46                     	;# 
  7873  1F47                     	;# 
  7874  1F48                     	;# 
  7875  1F49                     	;# 
  7876  1F4A                     	;# 
  7877  1F4E                     	;# 
  7878  1F4F                     	;# 
  7879  1F50                     	;# 
  7880  1F51                     	;# 
  7881  1F52                     	;# 
  7882  1F53                     	;# 
  7883  1F54                     	;# 
  7884  1F55                     	;# 
  7885  1FE4                     	;# 
  7886  1FE5                     	;# 
  7887  1FE6                     	;# 
  7888  1FE7                     	;# 
  7889  1FE8                     	;# 
  7890  1FE8                     	;# 
  7891  1FE9                     	;# 
  7892  1FEA                     	;# 
  7893  1FEB                     	;# 
  7894  1FED                     	;# 
  7895  1FEE                     	;# 
  7896  1FEF                     	;# 
  7897  0000                     	;# 
  7898  0001                     	;# 
  7899  0002                     	;# 
  7900  0003                     	;# 
  7901  0004                     	;# 
  7902  0005                     	;# 
  7903  0006                     	;# 
  7904  0007                     	;# 
  7905  0008                     	;# 
  7906  0009                     	;# 
  7907  000A                     	;# 
  7908  000B                     	;# 
  7909  000C                     	;# 
  7910  000D                     	;# 
  7911  000E                     	;# 
  7912  0012                     	;# 
  7913  0013                     	;# 
  7914  0014                     	;# 
  7915  0018                     	;# 
  7916  0019                     	;# 
  7917  001A                     	;# 
  7918  008C                     	;# 
  7919  008C                     	;# 
  7920  008D                     	;# 
  7921  008E                     	;# 
  7922  008E                     	;# 
  7923  008F                     	;# 
  7924  0090                     	;# 
  7925  0090                     	;# 
  7926  0091                     	;# 
  7927  0092                     	;# 
  7928  0092                     	;# 
  7929  0093                     	;# 
  7930  0094                     	;# 
  7931  0094                     	;# 
  7932  0095                     	;# 
  7933  0096                     	;# 
  7934  0096                     	;# 
  7935  0097                     	;# 
  7936  0098                     	;# 
  7937  0099                     	;# 
  7938  009A                     	;# 
  7939  009B                     	;# 
  7940  009B                     	;# 
  7941  009C                     	;# 
  7942  009D                     	;# 
  7943  009D                     	;# 
  7944  009E                     	;# 
  7945  009F                     	;# 
  7946  010C                     	;# 
  7947  010C                     	;# 
  7948  010D                     	;# 
  7949  010E                     	;# 
  7950  010F                     	;# 
  7951  010F                     	;# 
  7952  0110                     	;# 
  7953  0111                     	;# 
  7954  0112                     	;# 
  7955  0113                     	;# 
  7956  0114                     	;# 
  7957  0115                     	;# 
  7958  0116                     	;# 
  7959  0117                     	;# 
  7960  0118                     	;# 
  7961  0119                     	;# 
  7962  0119                     	;# 
  7963  0119                     	;# 
  7964  011A                     	;# 
  7965  011A                     	;# 
  7966  011A                     	;# 
  7967  011B                     	;# 
  7968  011B                     	;# 
  7969  011B                     	;# 
  7970  011B                     	;# 
  7971  011B                     	;# 
  7972  011C                     	;# 
  7973  011C                     	;# 
  7974  011C                     	;# 
  7975  011D                     	;# 
  7976  011D                     	;# 
  7977  011D                     	;# 
  7978  011E                     	;# 
  7979  011E                     	;# 
  7980  011E                     	;# 
  7981  011F                     	;# 
  7982  011F                     	;# 
  7983  011F                     	;# 
  7984  011F                     	;# 
  7985  011F                     	;# 
  7986  018C                     	;# 
  7987  018D                     	;# 
  7988  018E                     	;# 
  7989  018F                     	;# 
  7990  0190                     	;# 
  7991  0191                     	;# 
  7992  0192                     	;# 
  7993  0196                     	;# 
  7994  0197                     	;# 
  7995  0198                     	;# 
  7996  0199                     	;# 
  7997  019A                     	;# 
  7998  019B                     	;# 
  7999  019C                     	;# 
  8000  020C                     	;# 
  8001  020D                     	;# 
  8002  020E                     	;# 
  8003  020E                     	;# 
  8004  020F                     	;# 
  8005  020F                     	;# 
  8006  0210                     	;# 
  8007  0210                     	;# 
  8008  0211                     	;# 
  8009  0211                     	;# 
  8010  0212                     	;# 
  8011  0213                     	;# 
  8012  0214                     	;# 
  8013  0214                     	;# 
  8014  0215                     	;# 
  8015  0215                     	;# 
  8016  0216                     	;# 
  8017  0216                     	;# 
  8018  0217                     	;# 
  8019  0217                     	;# 
  8020  0218                     	;# 
  8021  0219                     	;# 
  8022  021A                     	;# 
  8023  021A                     	;# 
  8024  021B                     	;# 
  8025  021B                     	;# 
  8026  021C                     	;# 
  8027  021C                     	;# 
  8028  021D                     	;# 
  8029  021D                     	;# 
  8030  021E                     	;# 
  8031  021F                     	;# 
  8032  028C                     	;# 
  8033  028C                     	;# 
  8034  028D                     	;# 
  8035  028D                     	;# 
  8036  028E                     	;# 
  8037  028F                     	;# 
  8038  0290                     	;# 
  8039  0291                     	;# 
  8040  0292                     	;# 
  8041  0292                     	;# 
  8042  0293                     	;# 
  8043  0293                     	;# 
  8044  0294                     	;# 
  8045  0295                     	;# 
  8046  0296                     	;# 
  8047  0297                     	;# 
  8048  0298                     	;# 
  8049  0298                     	;# 
  8050  0299                     	;# 
  8051  0299                     	;# 
  8052  029A                     	;# 
  8053  029B                     	;# 
  8054  029C                     	;# 
  8055  029D                     	;# 
  8056  029F                     	;# 
  8057  030C                     	;# 
  8058  030C                     	;# 
  8059  030D                     	;# 
  8060  030E                     	;# 
  8061  030F                     	;# 
  8062  0310                     	;# 
  8063  0310                     	;# 
  8064  0311                     	;# 
  8065  0312                     	;# 
  8066  0313                     	;# 
  8067  0314                     	;# 
  8068  0314                     	;# 
  8069  0315                     	;# 
  8070  0316                     	;# 
  8071  0317                     	;# 
  8072  0318                     	;# 
  8073  0318                     	;# 
  8074  0319                     	;# 
  8075  031A                     	;# 
  8076  031B                     	;# 
  8077  038C                     	;# 
  8078  038C                     	;# 
  8079  038D                     	;# 
  8080  038E                     	;# 
  8081  0390                     	;# 
  8082  0390                     	;# 
  8083  0391                     	;# 
  8084  0392                     	;# 
  8085  048C                     	;# 
  8086  048C                     	;# 
  8087  048D                     	;# 
  8088  048E                     	;# 
  8089  048F                     	;# 
  8090  048F                     	;# 
  8091  0490                     	;# 
  8092  0491                     	;# 
  8093  0492                     	;# 
  8094  0492                     	;# 
  8095  0493                     	;# 
  8096  0494                     	;# 
  8097  0495                     	;# 
  8098  0495                     	;# 
  8099  0496                     	;# 
  8100  0497                     	;# 
  8101  0498                     	;# 
  8102  0499                     	;# 
  8103  049A                     	;# 
  8104  049B                     	;# 
  8105  049C                     	;# 
  8106  049D                     	;# 
  8107  058C                     	;# 
  8108  058C                     	;# 
  8109  058D                     	;# 
  8110  058E                     	;# 
  8111  058F                     	;# 
  8112  058F                     	;# 
  8113  0590                     	;# 
  8114  0591                     	;# 
  8115  0592                     	;# 
  8116  0593                     	;# 
  8117  059C                     	;# 
  8118  059C                     	;# 
  8119  059D                     	;# 
  8120  059D                     	;# 
  8121  059E                     	;# 
  8122  059F                     	;# 
  8123  060C                     	;# 
  8124  060C                     	;# 
  8125  060D                     	;# 
  8126  060D                     	;# 
  8127  060E                     	;# 
  8128  060F                     	;# 
  8129  0610                     	;# 
  8130  0611                     	;# 
  8131  0612                     	;# 
  8132  0613                     	;# 
  8133  0614                     	;# 
  8134  0616                     	;# 
  8135  0616                     	;# 
  8136  0617                     	;# 
  8137  0617                     	;# 
  8138  0618                     	;# 
  8139  0619                     	;# 
  8140  061A                     	;# 
  8141  061B                     	;# 
  8142  061C                     	;# 
  8143  061D                     	;# 
  8144  061E                     	;# 
  8145  070C                     	;# 
  8146  070D                     	;# 
  8147  070E                     	;# 
  8148  070F                     	;# 
  8149  0710                     	;# 
  8150  0711                     	;# 
  8151  0712                     	;# 
  8152  0713                     	;# 
  8153  0714                     	;# 
  8154  0716                     	;# 
  8155  0717                     	;# 
  8156  0718                     	;# 
  8157  0719                     	;# 
  8158  071A                     	;# 
  8159  071B                     	;# 
  8160  071C                     	;# 
  8161  071D                     	;# 
  8162  071E                     	;# 
  8163  0796                     	;# 
  8164  0797                     	;# 
  8165  0798                     	;# 
  8166  0799                     	;# 
  8167  079A                     	;# 
  8168  079B                     	;# 
  8169  079C                     	;# 
  8170  079D                     	;# 
  8171  080C                     	;# 
  8172  080D                     	;# 
  8173  080E                     	;# 
  8174  080F                     	;# 
  8175  0810                     	;# 
  8176  0811                     	;# 
  8177  0812                     	;# 
  8178  0813                     	;# 
  8179  0814                     	;# 
  8180  081A                     	;# 
  8181  081A                     	;# 
  8182  081B                     	;# 
  8183  081C                     	;# 
  8184  081C                     	;# 
  8185  081D                     	;# 
  8186  081E                     	;# 
  8187  081F                     	;# 
  8188  088C                     	;# 
  8189  088D                     	;# 
  8190  088E                     	;# 
  8191  088F                     	;# 
  8192  0890                     	;# 
  8193  0891                     	;# 
  8194  0892                     	;# 
  8195  0893                     	;# 
  8196  0895                     	;# 
  8197  0896                     	;# 
  8198  0897                     	;# 
  8199  0898                     	;# 
  8200  0899                     	;# 
  8201  089A                     	;# 
  8202  089B                     	;# 
  8203  090C                     	;# 
  8204  090E                     	;# 
  8205  090F                     	;# 
  8206  091F                     	;# 
  8207  098F                     	;# 
  8208  098F                     	;# 
  8209  0990                     	;# 
  8210  0991                     	;# 
  8211  0992                     	;# 
  8212  0993                     	;# 
  8213  0994                     	;# 
  8214  0995                     	;# 
  8215  0996                     	;# 
  8216  0997                     	;# 
  8217  1E0F                     	;# 
  8218  1E10                     	;# 
  8219  1E11                     	;# 
  8220  1E12                     	;# 
  8221  1E13                     	;# 
  8222  1E14                     	;# 
  8223  1E15                     	;# 
  8224  1E16                     	;# 
  8225  1E17                     	;# 
  8226  1E18                     	;# 
  8227  1E19                     	;# 
  8228  1E1A                     	;# 
  8229  1E1B                     	;# 
  8230  1E1C                     	;# 
  8231  1E1D                     	;# 
  8232  1E1E                     	;# 
  8233  1E1F                     	;# 
  8234  1E20                     	;# 
  8235  1E21                     	;# 
  8236  1E22                     	;# 
  8237  1E23                     	;# 
  8238  1E24                     	;# 
  8239  1E25                     	;# 
  8240  1E26                     	;# 
  8241  1E27                     	;# 
  8242  1E28                     	;# 
  8243  1E29                     	;# 
  8244  1E2A                     	;# 
  8245  1E2B                     	;# 
  8246  1E2C                     	;# 
  8247  1E2D                     	;# 
  8248  1E2E                     	;# 
  8249  1E2F                     	;# 
  8250  1E30                     	;# 
  8251  1E31                     	;# 
  8252  1E32                     	;# 
  8253  1E33                     	;# 
  8254  1E34                     	;# 
  8255  1E35                     	;# 
  8256  1E36                     	;# 
  8257  1E37                     	;# 
  8258  1E8F                     	;# 
  8259  1E90                     	;# 
  8260  1E91                     	;# 
  8261  1E92                     	;# 
  8262  1E93                     	;# 
  8263  1E94                     	;# 
  8264  1E95                     	;# 
  8265  1E96                     	;# 
  8266  1E97                     	;# 
  8267  1E9C                     	;# 
  8268  1E9D                     	;# 
  8269  1E9E                     	;# 
  8270  1EA1                     	;# 
  8271  1EA2                     	;# 
  8272  1EA3                     	;# 
  8273  1EA4                     	;# 
  8274  1EA9                     	;# 
  8275  1EAA                     	;# 
  8276  1EB1                     	;# 
  8277  1EB2                     	;# 
  8278  1EB8                     	;# 
  8279  1EB9                     	;# 
  8280  1EBA                     	;# 
  8281  1EBB                     	;# 
  8282  1EBC                     	;# 
  8283  1EBD                     	;# 
  8284  1EBE                     	;# 
  8285  1EC3                     	;# 
  8286  1EC5                     	;# 
  8287  1EC6                     	;# 
  8288  1EC7                     	;# 
  8289  1EC8                     	;# 
  8290  1EC9                     	;# 
  8291  1ECA                     	;# 
  8292  1ECB                     	;# 
  8293  1ECB                     	;# 
  8294  1ECB                     	;# 
  8295  1ECC                     	;# 
  8296  1ECC                     	;# 
  8297  1ECC                     	;# 
  8298  1F10                     	;# 
  8299  1F11                     	;# 
  8300  1F12                     	;# 
  8301  1F14                     	;# 
  8302  1F15                     	;# 
  8303  1F1C                     	;# 
  8304  1F1D                     	;# 
  8305  1F1E                     	;# 
  8306  1F1F                     	;# 
  8307  1F20                     	;# 
  8308  1F21                     	;# 
  8309  1F22                     	;# 
  8310  1F23                     	;# 
  8311  1F24                     	;# 
  8312  1F25                     	;# 
  8313  1F26                     	;# 
  8314  1F27                     	;# 
  8315  1F38                     	;# 
  8316  1F39                     	;# 
  8317  1F3A                     	;# 
  8318  1F3B                     	;# 
  8319  1F3C                     	;# 
  8320  1F3D                     	;# 
  8321  1F3E                     	;# 
  8322  1F3F                     	;# 
  8323  1F43                     	;# 
  8324  1F44                     	;# 
  8325  1F45                     	;# 
  8326  1F46                     	;# 
  8327  1F47                     	;# 
  8328  1F48                     	;# 
  8329  1F49                     	;# 
  8330  1F4A                     	;# 
  8331  1F4E                     	;# 
  8332  1F4F                     	;# 
  8333  1F50                     	;# 
  8334  1F51                     	;# 
  8335  1F52                     	;# 
  8336  1F53                     	;# 
  8337  1F54                     	;# 
  8338  1F55                     	;# 
  8339  1FE4                     	;# 
  8340  1FE5                     	;# 
  8341  1FE6                     	;# 
  8342  1FE7                     	;# 
  8343  1FE8                     	;# 
  8344  1FE8                     	;# 
  8345  1FE9                     	;# 
  8346  1FEA                     	;# 
  8347  1FEB                     	;# 
  8348  1FED                     	;# 
  8349  1FEE                     	;# 
  8350  1FEF                     	;# 
  8351  0000                     	;# 
  8352  0001                     	;# 
  8353  0002                     	;# 
  8354  0003                     	;# 
  8355  0004                     	;# 
  8356  0005                     	;# 
  8357  0006                     	;# 
  8358  0007                     	;# 
  8359  0008                     	;# 
  8360  0009                     	;# 
  8361  000A                     	;# 
  8362  000B                     	;# 
  8363  000C                     	;# 
  8364  000D                     	;# 
  8365  000E                     	;# 
  8366  0012                     	;# 
  8367  0013                     	;# 
  8368  0014                     	;# 
  8369  0018                     	;# 
  8370  0019                     	;# 
  8371  001A                     	;# 
  8372  008C                     	;# 
  8373  008C                     	;# 
  8374  008D                     	;# 
  8375  008E                     	;# 
  8376  008E                     	;# 
  8377  008F                     	;# 
  8378  0090                     	;# 
  8379  0090                     	;# 
  8380  0091                     	;# 
  8381  0092                     	;# 
  8382  0092                     	;# 
  8383  0093                     	;# 
  8384  0094                     	;# 
  8385  0094                     	;# 
  8386  0095                     	;# 
  8387  0096                     	;# 
  8388  0096                     	;# 
  8389  0097                     	;# 
  8390  0098                     	;# 
  8391  0099                     	;# 
  8392  009A                     	;# 
  8393  009B                     	;# 
  8394  009B                     	;# 
  8395  009C                     	;# 
  8396  009D                     	;# 
  8397  009D                     	;# 
  8398  009E                     	;# 
  8399  009F                     	;# 
  8400  010C                     	;# 
  8401  010C                     	;# 
  8402  010D                     	;# 
  8403  010E                     	;# 
  8404  010F                     	;# 
  8405  010F                     	;# 
  8406  0110                     	;# 
  8407  0111                     	;# 
  8408  0112                     	;# 
  8409  0113                     	;# 
  8410  0114                     	;# 
  8411  0115                     	;# 
  8412  0116                     	;# 
  8413  0117                     	;# 
  8414  0118                     	;# 
  8415  0119                     	;# 
  8416  0119                     	;# 
  8417  0119                     	;# 
  8418  011A                     	;# 
  8419  011A                     	;# 
  8420  011A                     	;# 
  8421  011B                     	;# 
  8422  011B                     	;# 
  8423  011B                     	;# 
  8424  011B                     	;# 
  8425  011B                     	;# 
  8426  011C                     	;# 
  8427  011C                     	;# 
  8428  011C                     	;# 
  8429  011D                     	;# 
  8430  011D                     	;# 
  8431  011D                     	;# 
  8432  011E                     	;# 
  8433  011E                     	;# 
  8434  011E                     	;# 
  8435  011F                     	;# 
  8436  011F                     	;# 
  8437  011F                     	;# 
  8438  011F                     	;# 
  8439  011F                     	;# 
  8440  018C                     	;# 
  8441  018D                     	;# 
  8442  018E                     	;# 
  8443  018F                     	;# 
  8444  0190                     	;# 
  8445  0191                     	;# 
  8446  0192                     	;# 
  8447  0196                     	;# 
  8448  0197                     	;# 
  8449  0198                     	;# 
  8450  0199                     	;# 
  8451  019A                     	;# 
  8452  019B                     	;# 
  8453  019C                     	;# 
  8454  020C                     	;# 
  8455  020D                     	;# 
  8456  020E                     	;# 
  8457  020E                     	;# 
  8458  020F                     	;# 
  8459  020F                     	;# 
  8460  0210                     	;# 
  8461  0210                     	;# 
  8462  0211                     	;# 
  8463  0211                     	;# 
  8464  0212                     	;# 
  8465  0213                     	;# 
  8466  0214                     	;# 
  8467  0214                     	;# 
  8468  0215                     	;# 
  8469  0215                     	;# 
  8470  0216                     	;# 
  8471  0216                     	;# 
  8472  0217                     	;# 
  8473  0217                     	;# 
  8474  0218                     	;# 
  8475  0219                     	;# 
  8476  021A                     	;# 
  8477  021A                     	;# 
  8478  021B                     	;# 
  8479  021B                     	;# 
  8480  021C                     	;# 
  8481  021C                     	;# 
  8482  021D                     	;# 
  8483  021D                     	;# 
  8484  021E                     	;# 
  8485  021F                     	;# 
  8486  028C                     	;# 
  8487  028C                     	;# 
  8488  028D                     	;# 
  8489  028D                     	;# 
  8490  028E                     	;# 
  8491  028F                     	;# 
  8492  0290                     	;# 
  8493  0291                     	;# 
  8494  0292                     	;# 
  8495  0292                     	;# 
  8496  0293                     	;# 
  8497  0293                     	;# 
  8498  0294                     	;# 
  8499  0295                     	;# 
  8500  0296                     	;# 
  8501  0297                     	;# 
  8502  0298                     	;# 
  8503  0298                     	;# 
  8504  0299                     	;# 
  8505  0299                     	;# 
  8506  029A                     	;# 
  8507  029B                     	;# 
  8508  029C                     	;# 
  8509  029D                     	;# 
  8510  029F                     	;# 
  8511  030C                     	;# 
  8512  030C                     	;# 
  8513  030D                     	;# 
  8514  030E                     	;# 
  8515  030F                     	;# 
  8516  0310                     	;# 
  8517  0310                     	;# 
  8518  0311                     	;# 
  8519  0312                     	;# 
  8520  0313                     	;# 
  8521  0314                     	;# 
  8522  0314                     	;# 
  8523  0315                     	;# 
  8524  0316                     	;# 
  8525  0317                     	;# 
  8526  0318                     	;# 
  8527  0318                     	;# 
  8528  0319                     	;# 
  8529  031A                     	;# 
  8530  031B                     	;# 
  8531  038C                     	;# 
  8532  038C                     	;# 
  8533  038D                     	;# 
  8534  038E                     	;# 
  8535  0390                     	;# 
  8536  0390                     	;# 
  8537  0391                     	;# 
  8538  0392                     	;# 
  8539  048C                     	;# 
  8540  048C                     	;# 
  8541  048D                     	;# 
  8542  048E                     	;# 
  8543  048F                     	;# 
  8544  048F                     	;# 
  8545  0490                     	;# 
  8546  0491                     	;# 
  8547  0492                     	;# 
  8548  0492                     	;# 
  8549  0493                     	;# 
  8550  0494                     	;# 
  8551  0495                     	;# 
  8552  0495                     	;# 
  8553  0496                     	;# 
  8554  0497                     	;# 
  8555  0498                     	;# 
  8556  0499                     	;# 
  8557  049A                     	;# 
  8558  049B                     	;# 
  8559  049C                     	;# 
  8560  049D                     	;# 
  8561  058C                     	;# 
  8562  058C                     	;# 
  8563  058D                     	;# 
  8564  058E                     	;# 
  8565  058F                     	;# 
  8566  058F                     	;# 
  8567  0590                     	;# 
  8568  0591                     	;# 
  8569  0592                     	;# 
  8570  0593                     	;# 
  8571  059C                     	;# 
  8572  059C                     	;# 
  8573  059D                     	;# 
  8574  059D                     	;# 
  8575  059E                     	;# 
  8576  059F                     	;# 
  8577  060C                     	;# 
  8578  060C                     	;# 
  8579  060D                     	;# 
  8580  060D                     	;# 
  8581  060E                     	;# 
  8582  060F                     	;# 
  8583  0610                     	;# 
  8584  0611                     	;# 
  8585  0612                     	;# 
  8586  0613                     	;# 
  8587  0614                     	;# 
  8588  0616                     	;# 
  8589  0616                     	;# 
  8590  0617                     	;# 
  8591  0617                     	;# 
  8592  0618                     	;# 
  8593  0619                     	;# 
  8594  061A                     	;# 
  8595  061B                     	;# 
  8596  061C                     	;# 
  8597  061D                     	;# 
  8598  061E                     	;# 
  8599  070C                     	;# 
  8600  070D                     	;# 
  8601  070E                     	;# 
  8602  070F                     	;# 
  8603  0710                     	;# 
  8604  0711                     	;# 
  8605  0712                     	;# 
  8606  0713                     	;# 
  8607  0714                     	;# 
  8608  0716                     	;# 
  8609  0717                     	;# 
  8610  0718                     	;# 
  8611  0719                     	;# 
  8612  071A                     	;# 
  8613  071B                     	;# 
  8614  071C                     	;# 
  8615  071D                     	;# 
  8616  071E                     	;# 
  8617  0796                     	;# 
  8618  0797                     	;# 
  8619  0798                     	;# 
  8620  0799                     	;# 
  8621  079A                     	;# 
  8622  079B                     	;# 
  8623  079C                     	;# 
  8624  079D                     	;# 
  8625  080C                     	;# 
  8626  080D                     	;# 
  8627  080E                     	;# 
  8628  080F                     	;# 
  8629  0810                     	;# 
  8630  0811                     	;# 
  8631  0812                     	;# 
  8632  0813                     	;# 
  8633  0814                     	;# 
  8634  081A                     	;# 
  8635  081A                     	;# 
  8636  081B                     	;# 
  8637  081C                     	;# 
  8638  081C                     	;# 
  8639  081D                     	;# 
  8640  081E                     	;# 
  8641  081F                     	;# 
  8642  088C                     	;# 
  8643  088D                     	;# 
  8644  088E                     	;# 
  8645  088F                     	;# 
  8646  0890                     	;# 
  8647  0891                     	;# 
  8648  0892                     	;# 
  8649  0893                     	;# 
  8650  0895                     	;# 
  8651  0896                     	;# 
  8652  0897                     	;# 
  8653  0898                     	;# 
  8654  0899                     	;# 
  8655  089A                     	;# 
  8656  089B                     	;# 
  8657  090C                     	;# 
  8658  090E                     	;# 
  8659  090F                     	;# 
  8660  091F                     	;# 
  8661  098F                     	;# 
  8662  098F                     	;# 
  8663  0990                     	;# 
  8664  0991                     	;# 
  8665  0992                     	;# 
  8666  0993                     	;# 
  8667  0994                     	;# 
  8668  0995                     	;# 
  8669  0996                     	;# 
  8670  0997                     	;# 
  8671  1E0F                     	;# 
  8672  1E10                     	;# 
  8673  1E11                     	;# 
  8674  1E12                     	;# 
  8675  1E13                     	;# 
  8676  1E14                     	;# 
  8677  1E15                     	;# 
  8678  1E16                     	;# 
  8679  1E17                     	;# 
  8680  1E18                     	;# 
  8681  1E19                     	;# 
  8682  1E1A                     	;# 
  8683  1E1B                     	;# 
  8684  1E1C                     	;# 
  8685  1E1D                     	;# 
  8686  1E1E                     	;# 
  8687  1E1F                     	;# 
  8688  1E20                     	;# 
  8689  1E21                     	;# 
  8690  1E22                     	;# 
  8691  1E23                     	;# 
  8692  1E24                     	;# 
  8693  1E25                     	;# 
  8694  1E26                     	;# 
  8695  1E27                     	;# 
  8696  1E28                     	;# 
  8697  1E29                     	;# 
  8698  1E2A                     	;# 
  8699  1E2B                     	;# 
  8700  1E2C                     	;# 
  8701  1E2D                     	;# 
  8702  1E2E                     	;# 
  8703  1E2F                     	;# 
  8704  1E30                     	;# 
  8705  1E31                     	;# 
  8706  1E32                     	;# 
  8707  1E33                     	;# 
  8708  1E34                     	;# 
  8709  1E35                     	;# 
  8710  1E36                     	;# 
  8711  1E37                     	;# 
  8712  1E8F                     	;# 
  8713  1E90                     	;# 
  8714  1E91                     	;# 
  8715  1E92                     	;# 
  8716  1E93                     	;# 
  8717  1E94                     	;# 
  8718  1E95                     	;# 
  8719  1E96                     	;# 
  8720  1E97                     	;# 
  8721  1E9C                     	;# 
  8722  1E9D                     	;# 
  8723  1E9E                     	;# 
  8724  1EA1                     	;# 
  8725  1EA2                     	;# 
  8726  1EA3                     	;# 
  8727  1EA4                     	;# 
  8728  1EA9                     	;# 
  8729  1EAA                     	;# 
  8730  1EB1                     	;# 
  8731  1EB2                     	;# 
  8732  1EB8                     	;# 
  8733  1EB9                     	;# 
  8734  1EBA                     	;# 
  8735  1EBB                     	;# 
  8736  1EBC                     	;# 
  8737  1EBD                     	;# 
  8738  1EBE                     	;# 
  8739  1EC3                     	;# 
  8740  1EC5                     	;# 
  8741  1EC6                     	;# 
  8742  1EC7                     	;# 
  8743  1EC8                     	;# 
  8744  1EC9                     	;# 
  8745  1ECA                     	;# 
  8746  1ECB                     	;# 
  8747  1ECB                     	;# 
  8748  1ECB                     	;# 
  8749  1ECC                     	;# 
  8750  1ECC                     	;# 
  8751  1ECC                     	;# 
  8752  1F10                     	;# 
  8753  1F11                     	;# 
  8754  1F12                     	;# 
  8755  1F14                     	;# 
  8756  1F15                     	;# 
  8757  1F1C                     	;# 
  8758  1F1D                     	;# 
  8759  1F1E                     	;# 
  8760  1F1F                     	;# 
  8761  1F20                     	;# 
  8762  1F21                     	;# 
  8763  1F22                     	;# 
  8764  1F23                     	;# 
  8765  1F24                     	;# 
  8766  1F25                     	;# 
  8767  1F26                     	;# 
  8768  1F27                     	;# 
  8769  1F38                     	;# 
  8770  1F39                     	;# 
  8771  1F3A                     	;# 
  8772  1F3B                     	;# 
  8773  1F3C                     	;# 
  8774  1F3D                     	;# 
  8775  1F3E                     	;# 
  8776  1F3F                     	;# 
  8777  1F43                     	;# 
  8778  1F44                     	;# 
  8779  1F45                     	;# 
  8780  1F46                     	;# 
  8781  1F47                     	;# 
  8782  1F48                     	;# 
  8783  1F49                     	;# 
  8784  1F4A                     	;# 
  8785  1F4E                     	;# 
  8786  1F4F                     	;# 
  8787  1F50                     	;# 
  8788  1F51                     	;# 
  8789  1F52                     	;# 
  8790  1F53                     	;# 
  8791  1F54                     	;# 
  8792  1F55                     	;# 
  8793  1FE4                     	;# 
  8794  1FE5                     	;# 
  8795  1FE6                     	;# 
  8796  1FE7                     	;# 
  8797  1FE8                     	;# 
  8798  1FE8                     	;# 
  8799  1FE9                     	;# 
  8800  1FEA                     	;# 
  8801  1FEB                     	;# 
  8802  1FED                     	;# 
  8803  1FEE                     	;# 
  8804  1FEF                     	;# 
  8805  0000                     	;# 
  8806  0001                     	;# 
  8807  0002                     	;# 
  8808  0003                     	;# 
  8809  0004                     	;# 
  8810  0005                     	;# 
  8811  0006                     	;# 
  8812  0007                     	;# 
  8813  0008                     	;# 
  8814  0009                     	;# 
  8815  000A                     	;# 
  8816  000B                     	;# 
  8817  000C                     	;# 
  8818  000D                     	;# 
  8819  000E                     	;# 
  8820  0012                     	;# 
  8821  0013                     	;# 
  8822  0014                     	;# 
  8823  0018                     	;# 
  8824  0019                     	;# 
  8825  001A                     	;# 
  8826  008C                     	;# 
  8827  008C                     	;# 
  8828  008D                     	;# 
  8829  008E                     	;# 
  8830  008E                     	;# 
  8831  008F                     	;# 
  8832  0090                     	;# 
  8833  0090                     	;# 
  8834  0091                     	;# 
  8835  0092                     	;# 
  8836  0092                     	;# 
  8837  0093                     	;# 
  8838  0094                     	;# 
  8839  0094                     	;# 
  8840  0095                     	;# 
  8841  0096                     	;# 
  8842  0096                     	;# 
  8843  0097                     	;# 
  8844  0098                     	;# 
  8845  0099                     	;# 
  8846  009A                     	;# 
  8847  009B                     	;# 
  8848  009B                     	;# 
  8849  009C                     	;# 
  8850  009D                     	;# 
  8851  009D                     	;# 
  8852  009E                     	;# 
  8853  009F                     	;# 
  8854  010C                     	;# 
  8855  010C                     	;# 
  8856  010D                     	;# 
  8857  010E                     	;# 
  8858  010F                     	;# 
  8859  010F                     	;# 
  8860  0110                     	;# 
  8861  0111                     	;# 
  8862  0112                     	;# 
  8863  0113                     	;# 
  8864  0114                     	;# 
  8865  0115                     	;# 
  8866  0116                     	;# 
  8867  0117                     	;# 
  8868  0118                     	;# 
  8869  0119                     	;# 
  8870  0119                     	;# 
  8871  0119                     	;# 
  8872  011A                     	;# 
  8873  011A                     	;# 
  8874  011A                     	;# 
  8875  011B                     	;# 
  8876  011B                     	;# 
  8877  011B                     	;# 
  8878  011B                     	;# 
  8879  011B                     	;# 
  8880  011C                     	;# 
  8881  011C                     	;# 
  8882  011C                     	;# 
  8883  011D                     	;# 
  8884  011D                     	;# 
  8885  011D                     	;# 
  8886  011E                     	;# 
  8887  011E                     	;# 
  8888  011E                     	;# 
  8889  011F                     	;# 
  8890  011F                     	;# 
  8891  011F                     	;# 
  8892  011F                     	;# 
  8893  011F                     	;# 
  8894  018C                     	;# 
  8895  018D                     	;# 
  8896  018E                     	;# 
  8897  018F                     	;# 
  8898  0190                     	;# 
  8899  0191                     	;# 
  8900  0192                     	;# 
  8901  0196                     	;# 
  8902  0197                     	;# 
  8903  0198                     	;# 
  8904  0199                     	;# 
  8905  019A                     	;# 
  8906  019B                     	;# 
  8907  019C                     	;# 
  8908  020C                     	;# 
  8909  020D                     	;# 
  8910  020E                     	;# 
  8911  020E                     	;# 
  8912  020F                     	;# 
  8913  020F                     	;# 
  8914  0210                     	;# 
  8915  0210                     	;# 
  8916  0211                     	;# 
  8917  0211                     	;# 
  8918  0212                     	;# 
  8919  0213                     	;# 
  8920  0214                     	;# 
  8921  0214                     	;# 
  8922  0215                     	;# 
  8923  0215                     	;# 
  8924  0216                     	;# 
  8925  0216                     	;# 
  8926  0217                     	;# 
  8927  0217                     	;# 
  8928  0218                     	;# 
  8929  0219                     	;# 
  8930  021A                     	;# 
  8931  021A                     	;# 
  8932  021B                     	;# 
  8933  021B                     	;# 
  8934  021C                     	;# 
  8935  021C                     	;# 
  8936  021D                     	;# 
  8937  021D                     	;# 
  8938  021E                     	;# 
  8939  021F                     	;# 
  8940  028C                     	;# 
  8941  028C                     	;# 
  8942  028D                     	;# 
  8943  028D                     	;# 
  8944  028E                     	;# 
  8945  028F                     	;# 
  8946  0290                     	;# 
  8947  0291                     	;# 
  8948  0292                     	;# 
  8949  0292                     	;# 
  8950  0293                     	;# 
  8951  0293                     	;# 
  8952  0294                     	;# 
  8953  0295                     	;# 
  8954  0296                     	;# 
  8955  0297                     	;# 
  8956  0298                     	;# 
  8957  0298                     	;# 
  8958  0299                     	;# 
  8959  0299                     	;# 
  8960  029A                     	;# 
  8961  029B                     	;# 
  8962  029C                     	;# 
  8963  029D                     	;# 
  8964  029F                     	;# 
  8965  030C                     	;# 
  8966  030C                     	;# 
  8967  030D                     	;# 
  8968  030E                     	;# 
  8969  030F                     	;# 
  8970  0310                     	;# 
  8971  0310                     	;# 
  8972  0311                     	;# 
  8973  0312                     	;# 
  8974  0313                     	;# 
  8975  0314                     	;# 
  8976  0314                     	;# 
  8977  0315                     	;# 
  8978  0316                     	;# 
  8979  0317                     	;# 
  8980  0318                     	;# 
  8981  0318                     	;# 
  8982  0319                     	;# 
  8983  031A                     	;# 
  8984  031B                     	;# 
  8985  038C                     	;# 
  8986  038C                     	;# 
  8987  038D                     	;# 
  8988  038E                     	;# 
  8989  0390                     	;# 
  8990  0390                     	;# 
  8991  0391                     	;# 
  8992  0392                     	;# 
  8993  048C                     	;# 
  8994  048C                     	;# 
  8995  048D                     	;# 
  8996  048E                     	;# 
  8997  048F                     	;# 
  8998  048F                     	;# 
  8999  0490                     	;# 
  9000  0491                     	;# 
  9001  0492                     	;# 
  9002  0492                     	;# 
  9003  0493                     	;# 
  9004  0494                     	;# 
  9005  0495                     	;# 
  9006  0495                     	;# 
  9007  0496                     	;# 
  9008  0497                     	;# 
  9009  0498                     	;# 
  9010  0499                     	;# 
  9011  049A                     	;# 
  9012  049B                     	;# 
  9013  049C                     	;# 
  9014  049D                     	;# 
  9015  058C                     	;# 
  9016  058C                     	;# 
  9017  058D                     	;# 
  9018  058E                     	;# 
  9019  058F                     	;# 
  9020  058F                     	;# 
  9021  0590                     	;# 
  9022  0591                     	;# 
  9023  0592                     	;# 
  9024  0593                     	;# 
  9025  059C                     	;# 
  9026  059C                     	;# 
  9027  059D                     	;# 
  9028  059D                     	;# 
  9029  059E                     	;# 
  9030  059F                     	;# 
  9031  060C                     	;# 
  9032  060C                     	;# 
  9033  060D                     	;# 
  9034  060D                     	;# 
  9035  060E                     	;# 
  9036  060F                     	;# 
  9037  0610                     	;# 
  9038  0611                     	;# 
  9039  0612                     	;# 
  9040  0613                     	;# 
  9041  0614                     	;# 
  9042  0616                     	;# 
  9043  0616                     	;# 
  9044  0617                     	;# 
  9045  0617                     	;# 
  9046  0618                     	;# 
  9047  0619                     	;# 
  9048  061A                     	;# 
  9049  061B                     	;# 
  9050  061C                     	;# 
  9051  061D                     	;# 
  9052  061E                     	;# 
  9053  070C                     	;# 
  9054  070D                     	;# 
  9055  070E                     	;# 
  9056  070F                     	;# 
  9057  0710                     	;# 
  9058  0711                     	;# 
  9059  0712                     	;# 
  9060  0713                     	;# 
  9061  0714                     	;# 
  9062  0716                     	;# 
  9063  0717                     	;# 
  9064  0718                     	;# 
  9065  0719                     	;# 
  9066  071A                     	;# 
  9067  071B                     	;# 
  9068  071C                     	;# 
  9069  071D                     	;# 
  9070  071E                     	;# 
  9071  0796                     	;# 
  9072  0797                     	;# 
  9073  0798                     	;# 
  9074  0799                     	;# 
  9075  079A                     	;# 
  9076  079B                     	;# 
  9077  079C                     	;# 
  9078  079D                     	;# 
  9079  080C                     	;# 
  9080  080D                     	;# 
  9081  080E                     	;# 
  9082  080F                     	;# 
  9083  0810                     	;# 
  9084  0811                     	;# 
  9085  0812                     	;# 
  9086  0813                     	;# 
  9087  0814                     	;# 
  9088  081A                     	;# 
  9089  081A                     	;# 
  9090  081B                     	;# 
  9091  081C                     	;# 
  9092  081C                     	;# 
  9093  081D                     	;# 
  9094  081E                     	;# 
  9095  081F                     	;# 
  9096  088C                     	;# 
  9097  088D                     	;# 
  9098  088E                     	;# 
  9099  088F                     	;# 
  9100  0890                     	;# 
  9101  0891                     	;# 
  9102  0892                     	;# 
  9103  0893                     	;# 
  9104  0895                     	;# 
  9105  0896                     	;# 
  9106  0897                     	;# 
  9107  0898                     	;# 
  9108  0899                     	;# 
  9109  089A                     	;# 
  9110  089B                     	;# 
  9111  090C                     	;# 
  9112  090E                     	;# 
  9113  090F                     	;# 
  9114  091F                     	;# 
  9115  098F                     	;# 
  9116  098F                     	;# 
  9117  0990                     	;# 
  9118  0991                     	;# 
  9119  0992                     	;# 
  9120  0993                     	;# 
  9121  0994                     	;# 
  9122  0995                     	;# 
  9123  0996                     	;# 
  9124  0997                     	;# 
  9125  1E0F                     	;# 
  9126  1E10                     	;# 
  9127  1E11                     	;# 
  9128  1E12                     	;# 
  9129  1E13                     	;# 
  9130  1E14                     	;# 
  9131  1E15                     	;# 
  9132  1E16                     	;# 
  9133  1E17                     	;# 
  9134  1E18                     	;# 
  9135  1E19                     	;# 
  9136  1E1A                     	;# 
  9137  1E1B                     	;# 
  9138  1E1C                     	;# 
  9139  1E1D                     	;# 
  9140  1E1E                     	;# 
  9141  1E1F                     	;# 
  9142  1E20                     	;# 
  9143  1E21                     	;# 
  9144  1E22                     	;# 
  9145  1E23                     	;# 
  9146  1E24                     	;# 
  9147  1E25                     	;# 
  9148  1E26                     	;# 
  9149  1E27                     	;# 
  9150  1E28                     	;# 
  9151  1E29                     	;# 
  9152  1E2A                     	;# 
  9153  1E2B                     	;# 
  9154  1E2C                     	;# 
  9155  1E2D                     	;# 
  9156  1E2E                     	;# 
  9157  1E2F                     	;# 
  9158  1E30                     	;# 
  9159  1E31                     	;# 
  9160  1E32                     	;# 
  9161  1E33                     	;# 
  9162  1E34                     	;# 
  9163  1E35                     	;# 
  9164  1E36                     	;# 
  9165  1E37                     	;# 
  9166  1E8F                     	;# 
  9167  1E90                     	;# 
  9168  1E91                     	;# 
  9169  1E92                     	;# 
  9170  1E93                     	;# 
  9171  1E94                     	;# 
  9172  1E95                     	;# 
  9173  1E96                     	;# 
  9174  1E97                     	;# 
  9175  1E9C                     	;# 
  9176  1E9D                     	;# 
  9177  1E9E                     	;# 
  9178  1EA1                     	;# 
  9179  1EA2                     	;# 
  9180  1EA3                     	;# 
  9181  1EA4                     	;# 
  9182  1EA9                     	;# 
  9183  1EAA                     	;# 
  9184  1EB1                     	;# 
  9185  1EB2                     	;# 
  9186  1EB8                     	;# 
  9187  1EB9                     	;# 
  9188  1EBA                     	;# 
  9189  1EBB                     	;# 
  9190  1EBC                     	;# 
  9191  1EBD                     	;# 
  9192  1EBE                     	;# 
  9193  1EC3                     	;# 
  9194  1EC5                     	;# 
  9195  1EC6                     	;# 
  9196  1EC7                     	;# 
  9197  1EC8                     	;# 
  9198  1EC9                     	;# 
  9199  1ECA                     	;# 
  9200  1ECB                     	;# 
  9201  1ECB                     	;# 
  9202  1ECB                     	;# 
  9203  1ECC                     	;# 
  9204  1ECC                     	;# 
  9205  1ECC                     	;# 
  9206  1F10                     	;# 
  9207  1F11                     	;# 
  9208  1F12                     	;# 
  9209  1F14                     	;# 
  9210  1F15                     	;# 
  9211  1F1C                     	;# 
  9212  1F1D                     	;# 
  9213  1F1E                     	;# 
  9214  1F1F                     	;# 
  9215  1F20                     	;# 
  9216  1F21                     	;# 
  9217  1F22                     	;# 
  9218  1F23                     	;# 
  9219  1F24                     	;# 
  9220  1F25                     	;# 
  9221  1F26                     	;# 
  9222  1F27                     	;# 
  9223  1F38                     	;# 
  9224  1F39                     	;# 
  9225  1F3A                     	;# 
  9226  1F3B                     	;# 
  9227  1F3C                     	;# 
  9228  1F3D                     	;# 
  9229  1F3E                     	;# 
  9230  1F3F                     	;# 
  9231  1F43                     	;# 
  9232  1F44                     	;# 
  9233  1F45                     	;# 
  9234  1F46                     	;# 
  9235  1F47                     	;# 
  9236  1F48                     	;# 
  9237  1F49                     	;# 
  9238  1F4A                     	;# 
  9239  1F4E                     	;# 
  9240  1F4F                     	;# 
  9241  1F50                     	;# 
  9242  1F51                     	;# 
  9243  1F52                     	;# 
  9244  1F53                     	;# 
  9245  1F54                     	;# 
  9246  1F55                     	;# 
  9247  1FE4                     	;# 
  9248  1FE5                     	;# 
  9249  1FE6                     	;# 
  9250  1FE7                     	;# 
  9251  1FE8                     	;# 
  9252  1FE8                     	;# 
  9253  1FE9                     	;# 
  9254  1FEA                     	;# 
  9255  1FEB                     	;# 
  9256  1FED                     	;# 
  9257  1FEE                     	;# 
  9258  1FEF                     	;# 
  9259  0000                     	;# 
  9260  0001                     	;# 
  9261  0002                     	;# 
  9262  0003                     	;# 
  9263  0004                     	;# 
  9264  0005                     	;# 
  9265  0006                     	;# 
  9266  0007                     	;# 
  9267  0008                     	;# 
  9268  0009                     	;# 
  9269  000A                     	;# 
  9270  000B                     	;# 
  9271  000C                     	;# 
  9272  000D                     	;# 
  9273  000E                     	;# 
  9274  0012                     	;# 
  9275  0013                     	;# 
  9276  0014                     	;# 
  9277  0018                     	;# 
  9278  0019                     	;# 
  9279  001A                     	;# 
  9280  008C                     	;# 
  9281  008C                     	;# 
  9282  008D                     	;# 
  9283  008E                     	;# 
  9284  008E                     	;# 
  9285  008F                     	;# 
  9286  0090                     	;# 
  9287  0090                     	;# 
  9288  0091                     	;# 
  9289  0092                     	;# 
  9290  0092                     	;# 
  9291  0093                     	;# 
  9292  0094                     	;# 
  9293  0094                     	;# 
  9294  0095                     	;# 
  9295  0096                     	;# 
  9296  0096                     	;# 
  9297  0097                     	;# 
  9298  0098                     	;# 
  9299  0099                     	;# 
  9300  009A                     	;# 
  9301  009B                     	;# 
  9302  009B                     	;# 
  9303  009C                     	;# 
  9304  009D                     	;# 
  9305  009D                     	;# 
  9306  009E                     	;# 
  9307  009F                     	;# 
  9308  010C                     	;# 
  9309  010C                     	;# 
  9310  010D                     	;# 
  9311  010E                     	;# 
  9312  010F                     	;# 
  9313  010F                     	;# 
  9314  0110                     	;# 
  9315  0111                     	;# 
  9316  0112                     	;# 
  9317  0113                     	;# 
  9318  0114                     	;# 
  9319  0115                     	;# 
  9320  0116                     	;# 
  9321  0117                     	;# 
  9322  0118                     	;# 
  9323  0119                     	;# 
  9324  0119                     	;# 
  9325  0119                     	;# 
  9326  011A                     	;# 
  9327  011A                     	;# 
  9328  011A                     	;# 
  9329  011B                     	;# 
  9330  011B                     	;# 
  9331  011B                     	;# 
  9332  011B                     	;# 
  9333  011B                     	;# 
  9334  011C                     	;# 
  9335  011C                     	;# 
  9336  011C                     	;# 
  9337  011D                     	;# 
  9338  011D                     	;# 
  9339  011D                     	;# 
  9340  011E                     	;# 
  9341  011E                     	;# 
  9342  011E                     	;# 
  9343  011F                     	;# 
  9344  011F                     	;# 
  9345  011F                     	;# 
  9346  011F                     	;# 
  9347  011F                     	;# 
  9348  018C                     	;# 
  9349  018D                     	;# 
  9350  018E                     	;# 
  9351  018F                     	;# 
  9352  0190                     	;# 
  9353  0191                     	;# 
  9354  0192                     	;# 
  9355  0196                     	;# 
  9356  0197                     	;# 
  9357  0198                     	;# 
  9358  0199                     	;# 
  9359  019A                     	;# 
  9360  019B                     	;# 
  9361  019C                     	;# 
  9362  020C                     	;# 
  9363  020D                     	;# 
  9364  020E                     	;# 
  9365  020E                     	;# 
  9366  020F                     	;# 
  9367  020F                     	;# 
  9368  0210                     	;# 
  9369  0210                     	;# 
  9370  0211                     	;# 
  9371  0211                     	;# 
  9372  0212                     	;# 
  9373  0213                     	;# 
  9374  0214                     	;# 
  9375  0214                     	;# 
  9376  0215                     	;# 
  9377  0215                     	;# 
  9378  0216                     	;# 
  9379  0216                     	;# 
  9380  0217                     	;# 
  9381  0217                     	;# 
  9382  0218                     	;# 
  9383  0219                     	;# 
  9384  021A                     	;# 
  9385  021A                     	;# 
  9386  021B                     	;# 
  9387  021B                     	;# 
  9388  021C                     	;# 
  9389  021C                     	;# 
  9390  021D                     	;# 
  9391  021D                     	;# 
  9392  021E                     	;# 
  9393  021F                     	;# 
  9394  028C                     	;# 
  9395  028C                     	;# 
  9396  028D                     	;# 
  9397  028D                     	;# 
  9398  028E                     	;# 
  9399  028F                     	;# 
  9400  0290                     	;# 
  9401  0291                     	;# 
  9402  0292                     	;# 
  9403  0292                     	;# 
  9404  0293                     	;# 
  9405  0293                     	;# 
  9406  0294                     	;# 
  9407  0295                     	;# 
  9408  0296                     	;# 
  9409  0297                     	;# 
  9410  0298                     	;# 
  9411  0298                     	;# 
  9412  0299                     	;# 
  9413  0299                     	;# 
  9414  029A                     	;# 
  9415  029B                     	;# 
  9416  029C                     	;# 
  9417  029D                     	;# 
  9418  029F                     	;# 
  9419  030C                     	;# 
  9420  030C                     	;# 
  9421  030D                     	;# 
  9422  030E                     	;# 
  9423  030F                     	;# 
  9424  0310                     	;# 
  9425  0310                     	;# 
  9426  0311                     	;# 
  9427  0312                     	;# 
  9428  0313                     	;# 
  9429  0314                     	;# 
  9430  0314                     	;# 
  9431  0315                     	;# 
  9432  0316                     	;# 
  9433  0317                     	;# 
  9434  0318                     	;# 
  9435  0318                     	;# 
  9436  0319                     	;# 
  9437  031A                     	;# 
  9438  031B                     	;# 
  9439  038C                     	;# 
  9440  038C                     	;# 
  9441  038D                     	;# 
  9442  038E                     	;# 
  9443  0390                     	;# 
  9444  0390                     	;# 
  9445  0391                     	;# 
  9446  0392                     	;# 
  9447  048C                     	;# 
  9448  048C                     	;# 
  9449  048D                     	;# 
  9450  048E                     	;# 
  9451  048F                     	;# 
  9452  048F                     	;# 
  9453  0490                     	;# 
  9454  0491                     	;# 
  9455  0492                     	;# 
  9456  0492                     	;# 
  9457  0493                     	;# 
  9458  0494                     	;# 
  9459  0495                     	;# 
  9460  0495                     	;# 
  9461  0496                     	;# 
  9462  0497                     	;# 
  9463  0498                     	;# 
  9464  0499                     	;# 
  9465  049A                     	;# 
  9466  049B                     	;# 
  9467  049C                     	;# 
  9468  049D                     	;# 
  9469  058C                     	;# 
  9470  058C                     	;# 
  9471  058D                     	;# 
  9472  058E                     	;# 
  9473  058F                     	;# 
  9474  058F                     	;# 
  9475  0590                     	;# 
  9476  0591                     	;# 
  9477  0592                     	;# 
  9478  0593                     	;# 
  9479  059C                     	;# 
  9480  059C                     	;# 
  9481  059D                     	;# 
  9482  059D                     	;# 
  9483  059E                     	;# 
  9484  059F                     	;# 
  9485  060C                     	;# 
  9486  060C                     	;# 
  9487  060D                     	;# 
  9488  060D                     	;# 
  9489  060E                     	;# 
  9490  060F                     	;# 
  9491  0610                     	;# 
  9492  0611                     	;# 
  9493  0612                     	;# 
  9494  0613                     	;# 
  9495  0614                     	;# 
  9496  0616                     	;# 
  9497  0616                     	;# 
  9498  0617                     	;# 
  9499  0617                     	;# 
  9500  0618                     	;# 
  9501  0619                     	;# 
  9502  061A                     	;# 
  9503  061B                     	;# 
  9504  061C                     	;# 
  9505  061D                     	;# 
  9506  061E                     	;# 
  9507  070C                     	;# 
  9508  070D                     	;# 
  9509  070E                     	;# 
  9510  070F                     	;# 
  9511  0710                     	;# 
  9512  0711                     	;# 
  9513  0712                     	;# 
  9514  0713                     	;# 
  9515  0714                     	;# 
  9516  0716                     	;# 
  9517  0717                     	;# 
  9518  0718                     	;# 
  9519  0719                     	;# 
  9520  071A                     	;# 
  9521  071B                     	;# 
  9522  071C                     	;# 
  9523  071D                     	;# 
  9524  071E                     	;# 
  9525  0796                     	;# 
  9526  0797                     	;# 
  9527  0798                     	;# 
  9528  0799                     	;# 
  9529  079A                     	;# 
  9530  079B                     	;# 
  9531  079C                     	;# 
  9532  079D                     	;# 
  9533  080C                     	;# 
  9534  080D                     	;# 
  9535  080E                     	;# 
  9536  080F                     	;# 
  9537  0810                     	;# 
  9538  0811                     	;# 
  9539  0812                     	;# 
  9540  0813                     	;# 
  9541  0814                     	;# 
  9542  081A                     	;# 
  9543  081A                     	;# 
  9544  081B                     	;# 
  9545  081C                     	;# 
  9546  081C                     	;# 
  9547  081D                     	;# 
  9548  081E                     	;# 
  9549  081F                     	;# 
  9550  088C                     	;# 
  9551  088D                     	;# 
  9552  088E                     	;# 
  9553  088F                     	;# 
  9554  0890                     	;# 
  9555  0891                     	;# 
  9556  0892                     	;# 
  9557  0893                     	;# 
  9558  0895                     	;# 
  9559  0896                     	;# 
  9560  0897                     	;# 
  9561  0898                     	;# 
  9562  0899                     	;# 
  9563  089A                     	;# 
  9564  089B                     	;# 
  9565  090C                     	;# 
  9566  090E                     	;# 
  9567  090F                     	;# 
  9568  091F                     	;# 
  9569  098F                     	;# 
  9570  098F                     	;# 
  9571  0990                     	;# 
  9572  0991                     	;# 
  9573  0992                     	;# 
  9574  0993                     	;# 
  9575  0994                     	;# 
  9576  0995                     	;# 
  9577  0996                     	;# 
  9578  0997                     	;# 
  9579  1E0F                     	;# 
  9580  1E10                     	;# 
  9581  1E11                     	;# 
  9582  1E12                     	;# 
  9583  1E13                     	;# 
  9584  1E14                     	;# 
  9585  1E15                     	;# 
  9586  1E16                     	;# 
  9587  1E17                     	;# 
  9588  1E18                     	;# 
  9589  1E19                     	;# 
  9590  1E1A                     	;# 
  9591  1E1B                     	;# 
  9592  1E1C                     	;# 
  9593  1E1D                     	;# 
  9594  1E1E                     	;# 
  9595  1E1F                     	;# 
  9596  1E20                     	;# 
  9597  1E21                     	;# 
  9598  1E22                     	;# 
  9599  1E23                     	;# 
  9600  1E24                     	;# 
  9601  1E25                     	;# 
  9602  1E26                     	;# 
  9603  1E27                     	;# 
  9604  1E28                     	;# 
  9605  1E29                     	;# 
  9606  1E2A                     	;# 
  9607  1E2B                     	;# 
  9608  1E2C                     	;# 
  9609  1E2D                     	;# 
  9610  1E2E                     	;# 
  9611  1E2F                     	;# 
  9612  1E30                     	;# 
  9613  1E31                     	;# 
  9614  1E32                     	;# 
  9615  1E33                     	;# 
  9616  1E34                     	;# 
  9617  1E35                     	;# 
  9618  1E36                     	;# 
  9619  1E37                     	;# 
  9620  1E8F                     	;# 
  9621  1E90                     	;# 
  9622  1E91                     	;# 
  9623  1E92                     	;# 
  9624  1E93                     	;# 
  9625  1E94                     	;# 
  9626  1E95                     	;# 
  9627  1E96                     	;# 
  9628  1E97                     	;# 
  9629  1E9C                     	;# 
  9630  1E9D                     	;# 
  9631  1E9E                     	;# 
  9632  1EA1                     	;# 
  9633  1EA2                     	;# 
  9634  1EA3                     	;# 
  9635  1EA4                     	;# 
  9636  1EA9                     	;# 
  9637  1EAA                     	;# 
  9638  1EB1                     	;# 
  9639  1EB2                     	;# 
  9640  1EB8                     	;# 
  9641  1EB9                     	;# 
  9642  1EBA                     	;# 
  9643  1EBB                     	;# 
  9644  1EBC                     	;# 
  9645  1EBD                     	;# 
  9646  1EBE                     	;# 
  9647  1EC3                     	;# 
  9648  1EC5                     	;# 
  9649  1EC6                     	;# 
  9650  1EC7                     	;# 
  9651  1EC8                     	;# 
  9652  1EC9                     	;# 
  9653  1ECA                     	;# 
  9654  1ECB                     	;# 
  9655  1ECB                     	;# 
  9656  1ECB                     	;# 
  9657  1ECC                     	;# 
  9658  1ECC                     	;# 
  9659  1ECC                     	;# 
  9660  1F10                     	;# 
  9661  1F11                     	;# 
  9662  1F12                     	;# 
  9663  1F14                     	;# 
  9664  1F15                     	;# 
  9665  1F1C                     	;# 
  9666  1F1D                     	;# 
  9667  1F1E                     	;# 
  9668  1F1F                     	;# 
  9669  1F20                     	;# 
  9670  1F21                     	;# 
  9671  1F22                     	;# 
  9672  1F23                     	;# 
  9673  1F24                     	;# 
  9674  1F25                     	;# 
  9675  1F26                     	;# 
  9676  1F27                     	;# 
  9677  1F38                     	;# 
  9678  1F39                     	;# 
  9679  1F3A                     	;# 
  9680  1F3B                     	;# 
  9681  1F3C                     	;# 
  9682  1F3D                     	;# 
  9683  1F3E                     	;# 
  9684  1F3F                     	;# 
  9685  1F43                     	;# 
  9686  1F44                     	;# 
  9687  1F45                     	;# 
  9688  1F46                     	;# 
  9689  1F47                     	;# 
  9690  1F48                     	;# 
  9691  1F49                     	;# 
  9692  1F4A                     	;# 
  9693  1F4E                     	;# 
  9694  1F4F                     	;# 
  9695  1F50                     	;# 
  9696  1F51                     	;# 
  9697  1F52                     	;# 
  9698  1F53                     	;# 
  9699  1F54                     	;# 
  9700  1F55                     	;# 
  9701  1FE4                     	;# 
  9702  1FE5                     	;# 
  9703  1FE6                     	;# 
  9704  1FE7                     	;# 
  9705  1FE8                     	;# 
  9706  1FE8                     	;# 
  9707  1FE9                     	;# 
  9708  1FEA                     	;# 
  9709  1FEB                     	;# 
  9710  1FED                     	;# 
  9711  1FEE                     	;# 
  9712  1FEF                     	;_dmxArray
  9713                           
  9714                           	psect	idataBANK1
  9715  1EE3                     __pidataBANK1:	
  9716                           
  9717                           ;initializer for _threshold
  9718  1EE3  3490               	retlw	144
  9719  1EE4  3406               	retlw	6
  9720                           
  9721                           ;initializer for _incInterval
  9722  1EE5  3464               	retlw	100
  9723  1EE6  3400               	retlw	0
  9724                           
  9725                           ;initializer for _address
  9726  1EE7  3401               	retlw	1
  9727  1EE8  3400               	retlw	0
  9728                           
  9729                           ;initializer for _currentSelection
  9730  1EE9  3402               	retlw	2
  9731                           
  9732                           ;initializer for _menuSelected
  9733  1EEA  3402               	retlw	2
  9734                           
  9735                           ;initializer for _startup
  9736  1EEB  3401               	retlw	1
  9737                           
  9738                           ;initializer for _beatBrightness
  9739  1EEC  3401               	retlw	1
  9740                           
  9741                           	psect	idataBANK2
  9742  1000                     __pidataBANK2:	
  9743                           
  9744                           ;initializer for _initial
  9745  1000  3401               	retlw	1
  9746  1001  3400               	retlw	0
  9747                           
  9748                           ;initializer for _delay
  9749  1002  340A               	retlw	10
  9750  1003  3400               	retlw	0
  9751                           
  9752                           	psect	stringtext1
  9753  1800                     __pstringtext1:	
  9754  1800                     _charTable:	
  9755  1800  3400               	retlw	0
  9756  1801  3482               	retlw	130
  9757  1802  3421               	retlw	33
  9758  1803  3400               	retlw	0
  9759  1804  3400               	retlw	0
  9760  1805  3400               	retlw	0
  9761  1806  3400               	retlw	0
  9762  1807  3402               	retlw	2
  9763  1808  3439               	retlw	57
  9764  1809  340F               	retlw	15
  9765  180A  3400               	retlw	0
  9766  180B  3400               	retlw	0
  9767  180C  3400               	retlw	0
  9768  180D  3440               	retlw	64
  9769  180E  3480               	retlw	128
  9770  180F  3400               	retlw	0
  9771  1810  343F               	retlw	63
  9772  1811  3406               	retlw	6
  9773  1812  345B               	retlw	91
  9774  1813  344F               	retlw	79
  9775  1814  3466               	retlw	102
  9776  1815  346D               	retlw	109
  9777  1816  347D               	retlw	125
  9778  1817  3407               	retlw	7
  9779  1818  347F               	retlw	127
  9780  1819  346F               	retlw	111
  9781  181A  3400               	retlw	0
  9782  181B  3400               	retlw	0
  9783  181C  3400               	retlw	0
  9784  181D  3448               	retlw	72
  9785  181E  3400               	retlw	0
  9786  181F  3453               	retlw	83
  9787  1820  3400               	retlw	0
  9788  1821  3477               	retlw	119
  9789  1822  347C               	retlw	124
  9790  1823  3439               	retlw	57
  9791  1824  345E               	retlw	94
  9792  1825  3479               	retlw	121
  9793  1826  3471               	retlw	113
  9794  1827  346F               	retlw	111
  9795  1828  3476               	retlw	118
  9796  1829  3406               	retlw	6
  9797  182A  341E               	retlw	30
  9798  182B  3400               	retlw	0
  9799  182C  3438               	retlw	56
  9800  182D  3400               	retlw	0
  9801  182E  3454               	retlw	84
  9802  182F  343F               	retlw	63
  9803  1830  3473               	retlw	115
  9804  1831  3467               	retlw	103
  9805  1832  3450               	retlw	80
  9806  1833  346D               	retlw	109
  9807  1834  3478               	retlw	120
  9808  1835  343E               	retlw	62
  9809  1836  3400               	retlw	0
  9810  1837  3400               	retlw	0
  9811  1838  3400               	retlw	0
  9812  1839  346E               	retlw	110
  9813  183A  3400               	retlw	0
  9814  183B  3439               	retlw	57
  9815  183C  3400               	retlw	0
  9816  183D  340F               	retlw	15
  9817  183E  3400               	retlw	0
  9818  183F  3408               	retlw	8
  9819  1840  3463               	retlw	99
  9820  1841  345F               	retlw	95
  9821  1842  347C               	retlw	124
  9822  1843  3458               	retlw	88
  9823  1844  345E               	retlw	94
  9824  1845  347B               	retlw	123
  9825  1846  3471               	retlw	113
  9826  1847  346F               	retlw	111
  9827  1848  3474               	retlw	116
  9828  1849  3402               	retlw	2
  9829  184A  341E               	retlw	30
  9830  184B  3400               	retlw	0
  9831  184C  3406               	retlw	6
  9832  184D  3400               	retlw	0
  9833  184E  3454               	retlw	84
  9834  184F  345C               	retlw	92
  9835  1850  3473               	retlw	115
  9836  1851  3467               	retlw	103
  9837  1852  3450               	retlw	80
  9838  1853  346D               	retlw	109
  9839  1854  3478               	retlw	120
  9840  1855  341C               	retlw	28
  9841  1856  3400               	retlw	0
  9842  1857  3400               	retlw	0
  9843  1858  3400               	retlw	0
  9844  1859  346E               	retlw	110
  9845  185A  3400               	retlw	0
  9846  185B  3439               	retlw	57
  9847  185C  3430               	retlw	48
  9848  185D  340F               	retlw	15
  9849  185E  3400               	retlw	0
  9850  185F  3400               	retlw	0
  9851  1860                     __end_of_charTable:	
  9852                           
  9853                           	psect	nvBANK2
  9854  0144                     __pnvBANK2:	
  9855  0144                     _ADCC_ADTI_InterruptHandler:	
  9856  0144                     	ds	2
  9857  0146                     _TMR0_InterruptHandler:	
  9858  0146                     	ds	2
  9859  0148                     _EUSART1_ErrorHandler:	
  9860  0148                     	ds	2
  9861  014A                     _EUSART1_OverrunErrorHandler:	
  9862  014A                     	ds	2
  9863  014C                     _EUSART1_FramingErrorHandler:	
  9864  014C                     	ds	2
  9865  014E                     _EUSART1_RxDefaultInterruptHandler:	
  9866  014E                     	ds	2
  9867  0014                     _TRISCbits	set	20
  9868  0012                     _TRISAbits	set	18
  9869  000B                     _INTCONbits	set	11
  9870  0014                     _TRISC	set	20
  9871  0013                     _TRISB	set	19
  9872  0012                     _TRISA	set	18
  9873  001A                     _LATC	set	26
  9874  0019                     _LATB	set	25
  9875  0018                     _LATA	set	24
  9876  000C                     _PORTA	set	12
  9877  000E                     _PORTC	set	14
  9878  0090                     _ADERRL	set	144
  9879  0091                     _ADERRH	set	145
  9880  009B                     _ADPREVL	set	155
  9881  009C                     _ADPREVH	set	156
  9882  0094                     _ADFLTRL	set	148
  9883  0095                     _ADFLTRH	set	149
  9884  0096                     _ADACCL	set	150
  9885  0097                     _ADACCH	set	151
  9886  0099                     _ADCNT	set	153
  9887  009D                     _ADRESL	set	157
  9888  009E                     _ADRESH	set	158
  9889  009F                     _ADPCH	set	159
  9890  009A                     _ADRPT	set	154
  9891  0098                     _ADACCU	set	152
  9892  0093                     _ADSTPTH	set	147
  9893  0092                     _ADSTPTL	set	146
  9894  008F                     _ADUTHH	set	143
  9895  008E                     _ADUTHL	set	142
  9896  008D                     _ADLTHH	set	141
  9897  008C                     _ADLTHL	set	140
  9898  0112                     _ADCON1bits	set	274
  9899  0115                     _ADSTATbits	set	277
  9900  0113                     _ADCON2bits	set	275
  9901  0114                     _ADCON3bits	set	276
  9902  0111                     _ADCON0bits	set	273
  9903  0111                     _ADCON0	set	273
  9904  0118                     _ADCLK	set	280
  9905  0117                     _ADACT	set	279
  9906  0116                     _ADREF	set	278
  9907  0115                     _ADSTAT	set	277
  9908  0114                     _ADCON3	set	276
  9909  0113                     _ADCON2	set	275
  9910  0112                     _ADCON1	set	274
  9911  0110                     _ADPREH	set	272
  9912  010F                     _ADPREL	set	271
  9913  010E                     _ADCAP	set	270
  9914  010D                     _ADACQH	set	269
  9915  010C                     _ADACQL	set	268
  9916  0119                     _RC1REG	set	281
  9917  011D                     _RC1STAbits	set	285
  9918  011A                     _TX1REG	set	282
  9919  011E                     _TX1STAbits	set	286
  9920  011C                     _SP1BRGH	set	284
  9921  011B                     _SP1BRGL	set	283
  9922  011E                     _TX1STA	set	286
  9923  011D                     _RC1STA	set	285
  9924  011F                     _BAUD1CON	set	287
  9925  018C                     _SSP1BUF	set	396
  9926  0191                     _SSP1CON2bits	set	401
  9927  0190                     _SSP1CON1bits	set	400
  9928  018D                     _SSP1ADD	set	397
  9929  0192                     _SSP1CON3	set	402
  9930  0190                     _SSP1CON1	set	400
  9931  018F                     _SSP1STAT	set	399
  9932  021E                     _CCPTMRS0bits	set	542
  9933  028D                     _PR2	set	653
  9934  028C                     _TMR2	set	652
  9935  028E                     _T2CONbits	set	654
  9936  0291                     _T2RSTbits	set	657
  9937  028F                     _T2HLTbits	set	655
  9938  028E                     _T2CON	set	654
  9939  028C                     _T2TMR	set	652
  9940  028D                     _T2PR	set	653
  9941  0291                     _T2RST	set	657
  9942  028F                     _T2HLT	set	655
  9943  0290                     _T2CLKCON	set	656
  9944  0312                     _CCP2CONbits	set	786
  9945  0310                     _CCPR2L	set	784
  9946  0311                     _CCPR2H	set	785
  9947  0312                     _CCP2CON	set	786
  9948  030E                     _CCP1CONbits	set	782
  9949  030C                     _CCPR1L	set	780
  9950  030D                     _CCPR1H	set	781
  9951  030E                     _CCP1CON	set	782
  9952  031A                     _CCP4CONbits	set	794
  9953  0318                     _CCPR4L	set	792
  9954  0319                     _CCPR4H	set	793
  9955  031A                     _CCP4CON	set	794
  9956  0316                     _CCP3CONbits	set	790
  9957  0314                     _CCPR3L	set	788
  9958  0315                     _CCPR3H	set	789
  9959  0316                     _CCP3CON	set	790
  9960  059E                     _T0CON0bits	set	1438
  9961  059E                     _T0CON0	set	1438
  9962  059C                     _TMR0L	set	1436
  9963  059D                     _TMR0H	set	1437
  9964  059F                     _T0CON1	set	1439
  9965  070D                     _PIR1bits	set	1805
  9966  0717                     _PIE1bits	set	1815
  9967  070C                     _PIR0bits	set	1804
  9968  0716                     _PIE0bits	set	1814
  9969  070F                     _PIR3bits	set	1807
  9970  0719                     _PIE3bits	set	1817
  9971  0710                     _PIR4bits	set	1808
  9972  079D                     _PMD7	set	1949
  9973  079C                     _PMD6	set	1948
  9974  079B                     _PMD5	set	1947
  9975  079A                     _PMD4	set	1946
  9976  0799                     _PMD3	set	1945
  9977  0798                     _PMD2	set	1944
  9978  0797                     _PMD1	set	1943
  9979  0796                     _PMD0	set	1942
  9980  0892                     _OSCTUNE	set	2194
  9981  0893                     _OSCFRQ	set	2195
  9982  0891                     _OSCEN	set	2193
  9983  088F                     _OSCCON3	set	2191
  9984  088D                     _OSCCON1	set	2189
  9985  1ECB                     _RX1DTPPS	set	7883
  9986  1EC6                     _SSP1DATPPS	set	7878
  9987  1EC5                     _SSP1CLKPPS	set	7877
  9988  1F4F                     _WPUCbits	set	8015
  9989  1F4E                     _ANSELCbits	set	8014
  9990  1F39                     _WPUAbits	set	7993
  9991  1F38                     _ANSELAbits	set	7992
  9992  1F27                     _RC7PPS	set	7975
  9993  1F26                     _RC6PPS	set	7974
  9994  1F25                     _RC5PPS	set	7973
  9995  1F15                     _RA5PPS	set	7957
  9996  1F24                     _RC4PPS	set	7972
  9997  1F23                     _RC3PPS	set	7971
  9998  1F14                     _RA4PPS	set	7956
  9999  1F51                     _SLRCONC	set	8017
 10000  1F46                     _SLRCONB	set	8006
 10001  1F3B                     _SLRCONA	set	7995
 10002  1F50                     _ODCONC	set	8016
 10003  1F45                     _ODCONB	set	8005
 10004  1F3A                     _ODCONA	set	7994
 10005  1F4F                     _WPUC	set	8015
 10006  1F39                     _WPUA	set	7993
 10007  1F44                     _WPUB	set	8004
 10008  1F38                     _ANSELA	set	7992
 10009  1F43                     _ANSELB	set	8003
 10010  1F4E                     _ANSELC	set	8014
 10011                           
 10012                           	psect	stringtext2
 10013  2000                     __pstringtext2:	
 10014  2000                     STR_12:	
 10015  2000  3425               	retlw	37	;'%'
 10016  2001  3463               	retlw	99	;'c'
 10017  2002  3425               	retlw	37	;'%'
 10018  2003  3463               	retlw	99	;'c'
 10019  2004  3425               	retlw	37	;'%'
 10020  2005  3463               	retlw	99	;'c'
 10021  2006  3425               	retlw	37	;'%'
 10022  2007  3463               	retlw	99	;'c'
 10023  2008  340D               	retlw	13
 10024  2009  3400               	retlw	0
 10025                           
 10026                           	psect	stringtext3
 10027  200A                     __pstringtext3:	
 10028  200A                     STR_13:	
 10029  200A  3425               	retlw	37	;'%'
 10030  200B  3463               	retlw	99	;'c'
 10031  200C  3425               	retlw	37	;'%'
 10032  200D  3463               	retlw	99	;'c'
 10033  200E  3425               	retlw	37	;'%'
 10034  200F  3463               	retlw	99	;'c'
 10035  2010  3420               	retlw	32	;' '
 10036  2011  340D               	retlw	13
 10037  2012  3400               	retlw	0
 10038                           
 10039                           	psect	stringtext4
 10040  2013                     __pstringtext4:	
 10041  2013                     STR_11:	
 10042  2013  3420               	retlw	32	;' '
 10043  2014  3425               	retlw	37	;'%'
 10044  2015  3463               	retlw	99	;'c'
 10045  2016  3425               	retlw	37	;'%'
 10046  2017  3463               	retlw	99	;'c'
 10047  2018  3425               	retlw	37	;'%'
 10048  2019  3463               	retlw	99	;'c'
 10049  201A  340D               	retlw	13
 10050  201B  3400               	retlw	0
 10051                           
 10052                           	psect	stringtext5
 10053  201C                     __pstringtext5:	
 10054  201C                     STR_8:	
 10055  201C  3448               	retlw	72	;'H'
 10056  201D  3445               	retlw	69	;'E'
 10057  201E  3459               	retlw	89	;'Y'
 10058  201F  3459               	retlw	89	;'Y'
 10059  2020  3459               	retlw	89	;'Y'
 10060  2021  3459               	retlw	89	;'Y'
 10061  2022  3459               	retlw	89	;'Y'
 10062  2023  3459               	retlw	89	;'Y'
 10063  2024  3400               	retlw	0
 10064                           
 10065                           	psect	stringtext6
 10066  2025                     __pstringtext6:	
 10067  2025                     STR_14:	
 10068  2025  3425               	retlw	37	;'%'
 10069  2026  3463               	retlw	99	;'c'
 10070  2027  3425               	retlw	37	;'%'
 10071  2028  3463               	retlw	99	;'c'
 10072  2029  3420               	retlw	32	;' '
 10073  202A  3420               	retlw	32	;' '
 10074  202B  340D               	retlw	13
 10075  202C  3400               	retlw	0
 10076                           
 10077                           	psect	stringtext7
 10078  202D                     __pstringtext7:	
 10079  202D                     STR_10:	
 10080  202D  3420               	retlw	32	;' '
 10081  202E  3420               	retlw	32	;' '
 10082  202F  3425               	retlw	37	;'%'
 10083  2030  3463               	retlw	99	;'c'
 10084  2031  3425               	retlw	37	;'%'
 10085  2032  3463               	retlw	99	;'c'
 10086  2033  340D               	retlw	13
 10087  2034  3400               	retlw	0
 10088                           
 10089                           	psect	stringtext8
 10090  2035                     __pstringtext8:	
 10091  2035                     STR_2:	
 10092  2035  3442               	retlw	66	;'B'
 10093  2036  342D               	retlw	45	;'-'
 10094  2037  3425               	retlw	37	;'%'
 10095  2038  3475               	retlw	117	;'u'
 10096  2039  3420               	retlw	32	;' '
 10097  203A  3420               	retlw	32	;' '
 10098  203B  340D               	retlw	13
 10099  203C  3400               	retlw	0
 10100                           
 10101                           	psect	stringtext9
 10102  203D                     __pstringtext9:	
 10103  203D                     STR_15:	
 10104  203D  3425               	retlw	37	;'%'
 10105  203E  3463               	retlw	99	;'c'
 10106  203F  3420               	retlw	32	;' '
 10107  2040  3420               	retlw	32	;' '
 10108  2041  3420               	retlw	32	;' '
 10109  2042  340D               	retlw	13
 10110  2043  3400               	retlw	0
 10111                           
 10112                           	psect	stringtext10
 10113  2044                     __pstringtext10:	
 10114  2044                     STR_9:	
 10115  2044  3420               	retlw	32	;' '
 10116  2045  3420               	retlw	32	;' '
 10117  2046  3420               	retlw	32	;' '
 10118  2047  3425               	retlw	37	;'%'
 10119  2048  3463               	retlw	99	;'c'
 10120  2049  340D               	retlw	13
 10121  204A  3400               	retlw	0
 10122                           
 10123                           	psect	stringtext11
 10124  204B                     __pstringtext11:	
 10125  204B                     STR_16:	
 10126  204B  3420               	retlw	32	;' '
 10127  204C  3420               	retlw	32	;' '
 10128  204D  3420               	retlw	32	;' '
 10129  204E  3420               	retlw	32	;' '
 10130  204F  340D               	retlw	13
 10131  2050  3400               	retlw	0
 10132                           
 10133                           	psect	stringtext12
 10134  2051                     __pstringtext12:	
 10135  2051                     STR_5:	
 10136  2051  3450               	retlw	80	;'P'
 10137  2052  3443               	retlw	67	;'C'
 10138  2053  3420               	retlw	32	;' '
 10139  2054  3420               	retlw	32	;' '
 10140  2055  340D               	retlw	13
 10141  2056  3400               	retlw	0
 10142                           
 10143                           	psect	stringtext13
 10144  2057                     __pstringtext13:	
 10145  2057                     STR_3:	
 10146  2057  3441               	retlw	65	;'A'
 10147  2058  344E               	retlw	78	;'N'
 10148  2059  3449               	retlw	73	;'I'
 10149  205A  3420               	retlw	32	;' '
 10150  205B  340D               	retlw	13
 10151  205C  3400               	retlw	0
 10152                           
 10153                           	psect	stringtext14
 10154  205D                     __pstringtext14:	
 10155  205D                     STR_1:	
 10156  205D  3453               	retlw	83	;'S'
 10157  205E  3445               	retlw	69	;'E'
 10158  205F  344C               	retlw	76	;'L'
 10159  2060  3431               	retlw	49	;'1'
 10160  2061  340D               	retlw	13
 10161  2062  3400               	retlw	0
 10162                           
 10163                           	psect	stringtext15
 10164  2063                     __pstringtext15:	
 10165  2063                     STR_4:	
 10166  2063  3442               	retlw	66	;'B'
 10167  2064  3445               	retlw	69	;'E'
 10168  2065  3441               	retlw	65	;'A'
 10169  2066  3454               	retlw	84	;'T'
 10170  2067  340D               	retlw	13
 10171  2068  3400               	retlw	0
 10172                           
 10173                           	psect	stringtext16
 10174  2069                     __pstringtext16:	
 10175  2069                     STR_6:	
 10176  2069  3420               	retlw	32	;' '
 10177  206A  3420               	retlw	32	;' '
 10178  206B  3420               	retlw	32	;' '
 10179  206C  3420               	retlw	32	;' '
 10180  206D  3400               	retlw	0
 10181                           
 10182                           	psect	stringtext17
 10183  0000                     __pstringtext17:	
 10184  204F                     
 10185                           ; #config settings
 10186  0000                     
 10187                           	psect	cinit
 10188  0032                     start_initialization:	
 10189  0032                     __initialization:		;BIGRAM
 10190                           
 10191                           ; Initialize objects allocated to BANK1
 10192  0032  30E3               	movlw	low __pidataBANK1
 10193  0033  0084               	movwf	4
 10194  0034  309E               	movlw	(high __pidataBANK1)| (0+128)
 10195  0035  0085               	movwf	5
 10196  0036  30E6               	movlw	low __pdataBANK1
 10197  0037  0086               	movwf	6
 10198  0038  3000               	movlw	high __pdataBANK1
 10199  0039  0087               	movwf	7
 10200  003A  3000               	movlw	0
 10201  003B  00FF               	movwf	btemp+1
 10202  003C  300A               	movlw	10
 10203  003D  319F  2725  3180   	fcall	init_ram
 10204                           
 10205                           ; Initialize objects allocated to BANK2
 10206  0040  3000               	movlw	low __pidataBANK2
 10207  0041  0084               	movwf	4
 10208  0042  3090               	movlw	(high __pidataBANK2)| (0+128)
 10209  0043  0085               	movwf	5
 10210  0044  3050               	movlw	low __pdataBANK2
 10211  0045  0086               	movwf	6
 10212  0046  3001               	movlw	high __pdataBANK2
 10213  0047  0087               	movwf	7
 10214  0048  3000               	movlw	0
 10215  0049  00FF               	movwf	btemp+1
 10216  004A  3004               	movlw	4
 10217  004B  319F  2725  3180   	fcall	init_ram
 10218                           
 10219                           ; Clear objects allocated to BIGRAM
 10220  004E  30EE               	movlw	low (0+9198)
 10221  004F  0084               	movwf	4
 10222  0050  3023               	movlw	high (0+9198)
 10223  0051  0085               	movwf	5
 10224  0052  3002               	movlw	2
 10225  0053  00FE               	movwf	btemp
 10226  0054  3004               	movlw	4
 10227  0055  00FF               	movwf	btemp+1
 10228  0056  319F  2719  3180   	fcall	clear_ram0
 10229                           
 10230                           ; Clear objects allocated to COMMON
 10231  0059  01F0               	clrf	__pbssCOMMON& (0+127)
 10232  005A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
 10233  005B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
 10234  005C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
 10235  005D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
 10236  005E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
 10237  005F  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
 10238                           
 10239                           ; Clear objects allocated to BANK1
 10240  0060  30A0               	movlw	low __pbssBANK1
 10241  0061  0084               	movwf	4
 10242  0062  3000               	movlw	high __pbssBANK1
 10243  0063  0085               	movwf	5
 10244  0064  3031               	movlw	49
 10245  0065  00FE               	movwf	btemp
 10246  0066  3000               	movlw	0
 10247  0067  00FF               	movwf	btemp+1
 10248  0068  319F  2719  3180   	fcall	clear_ram0
 10249                           
 10250                           ; Clear objects allocated to BANK2
 10251  006B  3020               	movlw	low __pbssBANK2
 10252  006C  0084               	movwf	4
 10253  006D  3001               	movlw	high __pbssBANK2
 10254  006E  0085               	movwf	5
 10255  006F  3024               	movlw	36
 10256  0070  00FE               	movwf	btemp
 10257  0071  3000               	movlw	0
 10258  0072  00FF               	movwf	btemp+1
 10259  0073  319F  2719  3180   	fcall	clear_ram0
 10260                           
 10261                           ; Clear objects allocated to BANK3
 10262  0076  30A0               	movlw	low __pbssBANK3
 10263  0077  0084               	movwf	4
 10264  0078  3001               	movlw	high __pbssBANK3
 10265  0079  0085               	movwf	5
 10266  007A  3040               	movlw	64
 10267  007B  00FE               	movwf	btemp
 10268  007C  3000               	movlw	0
 10269  007D  00FF               	movwf	btemp+1
 10270  007E  319F  2719         	fcall	clear_ram0
 10271  0080                     end_of_initialization:	
 10272                           ;End of C runtime variable initialization code
 10273                           
 10274  0080                     __end_of__initialization:	
 10275  0080  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10276  0081  0140               	movlb	0
 10277  0082  3194  2C36         	ljmp	_main	;jump to C main() function
 10278                           
 10279                           	psect	bssCOMMON
 10280  0070                     __pbssCOMMON:	
 10281  0070                     _thresholdExceeded:	
 10282  0070                     	ds	1
 10283  0071                     _p_i2c1_current:	
 10284  0071                     	ds	1
 10285  0072                     _p_i2c1_trb_current:	
 10286  0072                     	ds	1
 10287  0073                     _eusart1RxTail:	
 10288  0073                     	ds	1
 10289  0074                     _eusart1RxHead:	
 10290  0074                     	ds	1
 10291  0075                     I2C1_ISR@i2c_address:	
 10292  0075                     	ds	2
 10293                           
 10294                           	psect	bssBANK1
 10295  00A0                     __pbssBANK1:	
 10296  00A0                     _i2c1_object:	
 10297  00A0                     	ds	5
 10298  00A5                     _width:	
 10299  00A5                     	ds	2
 10300  00A7                     _flags:	
 10301  00A7                     	ds	2
 10302  00A9                     _currentState:	
 10303  00A9                     	ds	2
 10304  00AB                     _lastRun:	
 10305  00AB                     	ds	2
 10306  00AD                     _lastBeat:	
 10307  00AD                     	ds	2
 10308  00AF                     _lastActiveTime:	
 10309  00AF                     	ds	2
 10310  00B1                     _lastIncTime:	
 10311  00B1                     	ds	2
 10312  00B3                     _currentTime:	
 10313  00B3                     	ds	2
 10314  00B5                     _lastTime:	
 10315  00B5                     	ds	2
 10316  00B7                     _startTime:	
 10317  00B7                     	ds	2
 10318  00B9                     _lastDetected:	
 10319  00B9                     	ds	1
 10320  00BA                     _detected:	
 10321  00BA                     	ds	1
 10322  00BB                     _position:	
 10323  00BB                     	ds	1
 10324  00BC                     _tm1650_status:	
 10325  00BC                     	ds	1
 10326  00BD                     _enterState:	
 10327  00BD                     	ds	1
 10328  00BE                     _menuState:	
 10329  00BE                     	ds	1
 10330  00BF                     _downState:	
 10331  00BF                     	ds	1
 10332  00C0                     _upState:	
 10333  00C0                     	ds	1
 10334  00C1                     _enterPressed:	
 10335  00C1                     	ds	1
 10336  00C2                     _menuPressed:	
 10337  00C2                     	ds	1
 10338  00C3                     _enter:	
 10339  00C3                     	ds	1
 10340  00C4                     _down:	
 10341  00C4                     	ds	1
 10342  00C5                     _up:	
 10343  00C5                     	ds	1
 10344  00C6                     _menu:	
 10345  00C6                     	ds	1
 10346  00C7                     I2C1_ISR@i2c_10bit_address_restart:	
 10347  00C7                     	ds	1
 10348  00C8                     I2C1_ISR@i2c_bytes_left:	
 10349  00C8                     	ds	1
 10350  00C9                     I2C1_ISR@pi2c_buf_ptr:	
 10351  00C9                     	ds	1
 10352  00CA                     _i2c1_trb_count:	
 10353  00CA                     	ds	1
 10354  00CB                     _i2c1_state:	
 10355  00CB                     	ds	1
 10356  00CC                     _eusart1RxLastError:	
 10357  00CC                     	ds	1
 10358  00CD                     _eusart1RxCount:	
 10359  00CD                     	ds	1
 10360  00CE                     _i2c1_tr_queue:	
 10361  00CE                     	ds	3
 10362                           
 10363                           	psect	dataBANK1
 10364  00E6                     __pdataBANK1:	
 10365  00E6                     _threshold:	
 10366  00E6                     	ds	2
 10367  00E8                     _incInterval:	
 10368  00E8                     	ds	2
 10369  00EA                     _address:	
 10370  00EA                     	ds	2
 10371  00EC                     _currentSelection:	
 10372  00EC                     	ds	1
 10373  00ED                     _menuSelected:	
 10374  00ED                     	ds	1
 10375  00EE                     _startup:	
 10376  00EE                     	ds	1
 10377  00EF                     _beatBrightness:	
 10378  00EF                     	ds	1
 10379                           
 10380                           	psect	bssBANK2
 10381  0120                     __pbssBANK2:	
 10382  0120                     _eusart1RxStatusBuffer:	
 10383  0120                     	ds	8
 10384  0128                     _eusart1RxBuffer:	
 10385  0128                     	ds	8
 10386  0130                     _nout:	
 10387  0130                     	ds	2
 10388  0132                     _prec:	
 10389  0132                     	ds	2
 10390  0134                     _lastLedActiveTime:	
 10391  0134                     	ds	2
 10392  0136                     _arrayIndex:	
 10393  0136                     	ds	2
 10394  0138                     _thresholdCount:	
 10395  0138                     	ds	2
 10396  013A                     _bpm:	
 10397  013A                     	ds	2
 10398  013C                     I2C1_MasterRead@trBlock:	
 10399  013C                     	ds	4
 10400  0140                     I2C1_MasterWrite@trBlock:	
 10401  0140                     	ds	4
 10402                           
 10403                           	psect	dataBANK2
 10404  0150                     __pdataBANK2:	
 10405  0150                     _initial:	
 10406  0150                     	ds	2
 10407  0152                     _delay:	
 10408  0152                     	ds	2
 10409                           
 10410                           	psect	bssBANK3
 10411  01A0                     __pbssBANK3:	
 10412  01A0                     _dbuf:	
 10413  01A0                     	ds	32
 10414  01C0                     _buttons:	
 10415  01C0                     	ds	32
 10416                           
 10417                           	psect	inittext
 10418  1F25                     init_ram:	
 10419  1F25  00FE               	movwf	126
 10420  1F26                     initloop:	
 10421  1F26  0012               	moviw fsr0++
 10422  1F27  001E               	movwi fsr1++
 10423  1F28  3001               	movlw	1
 10424  1F29  02FE               	subwf	126,f
 10425  1F2A  3000               	movlw	0
 10426  1F2B  3BFF               	subwfb	127,f
 10427  1F2C  087F               	movf	127,w
 10428  1F2D  047E               	iorwf	126,w
 10429  1F2E  1903               	btfsc	3,2
 10430  1F2F  3400               	retlw	0
 10431  1F30  2F26               	goto	initloop
 10432                           
 10433                           	psect	clrtext
 10434  1F19                     clear_ram0:	
 10435                           ;	Called with FSR0 containing the base address, and
 10436                           ;	btemp/btemp+1 has the size to clear
 10437                           
 10438  1F19  0064               	clrwdt	;clear the watchdog before getting into this loop
 10439  1F1A                     clrloop0:	
 10440  1F1A  0180               	clrf	0	;clear RAM location pointed to by FSR
 10441  1F1B  3101               	addfsr 0,1
 10442  1F1C  3001               	movlw	1
 10443  1F1D  02FE               	subwf	126,f
 10444  1F1E  3000               	movlw	0
 10445  1F1F  3BFF               	subwfb	127,f
 10446  1F20  087F               	movf	127,w
 10447  1F21  047E               	iorwf	126,w
 10448  1F22  1903               	btfsc	3,2
 10449  1F23  3400               	retlw	0	;all done for this memory range, return
 10450  1F24  2F1A               	goto	clrloop0	;have we reached the end yet?
 10451                           
 10452                           	psect	cstackBANK1
 10453  00D1                     __pcstackBANK1:	
 10454  00D1                     ??_LED_task_BEAT:	
 10455  00D1                     ?_LED_setColor:	
 10456                           ; 1 bytes @ 0x0
 10457                           
 10458  00D1                     ?_printf:	
 10459                           ; 1 bytes @ 0x0
 10460                           
 10461  00D1                     printf@fmt:	
 10462                           ; 2 bytes @ 0x0
 10463                           
 10464  00D1                     LED_setColor@input:	
 10465                           ; 2 bytes @ 0x0
 10466                           
 10467                           
 10468                           ; 4 bytes @ 0x0
 10469  00D1                     	ds	4
 10470  00D5                     ??_LED_setColor:	
 10471  00D5                     LED_task_BEAT@temp:	
 10472                           ; 1 bytes @ 0x4
 10473                           
 10474                           
 10475                           ; 2 bytes @ 0x4
 10476  00D5                     	ds	4
 10477  00D9                     ??_LED_task_DMX:	
 10478                           
 10479                           ; 1 bytes @ 0x8
 10480  00D9                     	ds	2
 10481  00DB                     ??_CONTROLLER_task:	
 10482                           
 10483                           ; 1 bytes @ 0xA
 10484  00DB                     	ds	3
 10485  00DE                     LED_task_DMX@dmx:	
 10486                           
 10487                           ; 4 bytes @ 0xD
 10488  00DE                     	ds	4
 10489  00E2                     ??_LED_task:	
 10490                           
 10491                           ; 1 bytes @ 0x11
 10492  00E2                     	ds	2
 10493  00E4                     ??_main:	
 10494                           
 10495                           ; 1 bytes @ 0x13
 10496  00E4                     	ds	2
 10497                           
 10498                           	psect	cstackCOMMON
 10499  0077                     __pcstackCOMMON:	
 10500  0077                     ?_PMD_Initialize:	
 10501  0077                     ?_PIN_MANAGER_Initialize:	
 10502                           ; 1 bytes @ 0x0
 10503                           
 10504  0077                     ?_OSCILLATOR_Initialize:	
 10505                           ; 1 bytes @ 0x0
 10506                           
 10507  0077                     ?_I2C1_Initialize:	
 10508                           ; 1 bytes @ 0x0
 10509                           
 10510  0077                     ?_PWM1_Initialize:	
 10511                           ; 1 bytes @ 0x0
 10512                           
 10513  0077                     ?_PWM2_Initialize:	
 10514                           ; 1 bytes @ 0x0
 10515                           
 10516  0077                     ?_ADCC_Initialize:	
 10517                           ; 1 bytes @ 0x0
 10518                           
 10519  0077                     ?_PWM4_Initialize:	
 10520                           ; 1 bytes @ 0x0
 10521                           
 10522  0077                     ?_PWM3_Initialize:	
 10523                           ; 1 bytes @ 0x0
 10524                           
 10525  0077                     ?_TMR2_Initialize:	
 10526                           ; 1 bytes @ 0x0
 10527                           
 10528  0077                     ?_TMR0_Initialize:	
 10529                           ; 1 bytes @ 0x0
 10530                           
 10531  0077                     ?_EUSART1_Initialize:	
 10532                           ; 1 bytes @ 0x0
 10533                           
 10534  0077                     ?_EUSART1_Receive_ISR:	
 10535                           ; 1 bytes @ 0x0
 10536                           
 10537  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
 10538                           ; 1 bytes @ 0x0
 10539                           
 10540  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
 10541                           ; 1 bytes @ 0x0
 10542                           
 10543  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10544                           ; 1 bytes @ 0x0
 10545                           
 10546  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10547                           ; 1 bytes @ 0x0
 10548                           
 10549  0077                     ?_EUSART1_DefaultErrorHandler:	
 10550                           ; 1 bytes @ 0x0
 10551                           
 10552  0077                     ?_EUSART1_RxDataHandler:	
 10553                           ; 1 bytes @ 0x0
 10554                           
 10555  0077                     ??_EUSART1_RxDataHandler:	
 10556                           ; 1 bytes @ 0x0
 10557                           
 10558  0077                     ?_TMR0_ISR:	
 10559                           ; 1 bytes @ 0x0
 10560                           
 10561  0077                     ??_TMR0_ISR:	
 10562                           ; 1 bytes @ 0x0
 10563                           
 10564  0077                     ?_I2C1_BusCollisionISR:	
 10565                           ; 1 bytes @ 0x0
 10566                           
 10567  0077                     ??_I2C1_BusCollisionISR:	
 10568                           ; 1 bytes @ 0x0
 10569                           
 10570  0077                     ?_I2C1_ISR:	
 10571                           ; 1 bytes @ 0x0
 10572                           
 10573  0077                     ?_ADCC_ThresholdISR:	
 10574                           ; 1 bytes @ 0x0
 10575                           
 10576  0077                     ??_ADCC_ThresholdISR:	
 10577                           ; 1 bytes @ 0x0
 10578                           
 10579  0077                     ?_TMR0_DefaultInterruptHandler:	
 10580                           ; 1 bytes @ 0x0
 10581                           
 10582  0077                     ??_TMR0_DefaultInterruptHandler:	
 10583                           ; 1 bytes @ 0x0
 10584                           
 10585  0077                     ?_I2C1_Stop:	
 10586                           ; 1 bytes @ 0x0
 10587                           
 10588  0077                     ??_I2C1_Stop:	
 10589                           ; 1 bytes @ 0x0
 10590                           
 10591  0077                     ?_I2C1_FunctionComplete:	
 10592                           ; 1 bytes @ 0x0
 10593                           
 10594  0077                     ??_I2C1_FunctionComplete:	
 10595                           ; 1 bytes @ 0x0
 10596                           
 10597  0077                     ?_ADCC_DefaultInterruptHandler:	
 10598                           ; 1 bytes @ 0x0
 10599                           
 10600  0077                     ??_ADCC_DefaultInterruptHandler:	
 10601                           ; 1 bytes @ 0x0
 10602                           
 10603  0077                     ?_CLOCK_init:	
 10604                           ; 1 bytes @ 0x0
 10605                           
 10606  0077                     ?_BUTTONS_init:	
 10607                           ; 1 bytes @ 0x0
 10608                           
 10609  0077                     ?_BEAT_init:	
 10610                           ; 1 bytes @ 0x0
 10611                           
 10612  0077                     ?_TM1650_init:	
 10613                           ; 1 bytes @ 0x0
 10614                           
 10615  0077                     ?_DMX_init:	
 10616                           ; 1 bytes @ 0x0
 10617                           
 10618  0077                     ?_BUTTONS_task:	
 10619                           ; 1 bytes @ 0x0
 10620                           
 10621  0077                     ?_CONTROLLER_task:	
 10622                           ; 1 bytes @ 0x0
 10623                           
 10624  0077                     ?_BEAT_task:	
 10625                           ; 1 bytes @ 0x0
 10626                           
 10627  0077                     ?_LED_task:	
 10628                           ; 1 bytes @ 0x0
 10629                           
 10630  0077                     ?_GPIO_init:	
 10631                           ; 1 bytes @ 0x0
 10632                           
 10633  0077                     ?_CLOCK_timerCallback:	
 10634                           ; 1 bytes @ 0x0
 10635                           
 10636  0077                     ??_CLOCK_timerCallback:	
 10637                           ; 1 bytes @ 0x0
 10638                           
 10639  0077                     ?_menuSelection:	
 10640                           ; 1 bytes @ 0x0
 10641                           
 10642  0077                     ?_CONTROL_DMX:	
 10643                           ; 1 bytes @ 0x0
 10644                           
 10645  0077                     ?_CONTROL_BEAT:	
 10646                           ; 1 bytes @ 0x0
 10647                           
 10648  0077                     ?_TM1650_enable:	
 10649                           ; 1 bytes @ 0x0
 10650                           
 10651  0077                     ?_address_inc:	
 10652                           ; 1 bytes @ 0x0
 10653                           
 10654  0077                     ?_address_dec:	
 10655                           ; 1 bytes @ 0x0
 10656                           
 10657  0077                     ?_DMX_interrupt:	
 10658                           ; 1 bytes @ 0x0
 10659                           
 10660  0077                     ??_DMX_interrupt:	
 10661                           ; 1 bytes @ 0x0
 10662                           
 10663  0077                     ?_LED_task_BEAT:	
 10664                           ; 1 bytes @ 0x0
 10665                           
 10666  0077                     ?_LED_task_ANIMATION:	
 10667                           ; 1 bytes @ 0x0
 10668                           
 10669  0077                     ?_SYSTEM_Initialize:	
 10670                           ; 1 bytes @ 0x0
 10671                           
 10672  0077                     ?_INTERRUPT_InterruptManager:	
 10673                           ; 1 bytes @ 0x0
 10674                           
 10675  0077                     ?_I2C1_WaitForLastPacketToComplete:	
 10676                           ; 1 bytes @ 0x0
 10677                           
 10678  0077                     ?_ADCC_StartConversion:	
 10679                           ; 1 bytes @ 0x0
 10680                           
 10681  0077                     ?_main:	
 10682                           ; 1 bytes @ 0x0
 10683                           
 10684  0077                     ?_BUTTONS_isClicked:	
 10685                           ; 1 bytes @ 0x0
 10686                           
 10687  0077                     ?_BUTTONS_isHeld:	
 10688                           ; 1 bytes @ 0x0
 10689                           
 10690  0077                     ?_getMode:	
 10691                           ; 1 bytes @ 0x0
 10692                           
 10693  0077                     ?_putch:	
 10694                           ; 1 bytes @ 0x0
 10695                           
 10696  0077                     ?_adcThresholdHandler:	
 10697                           ; 1 bytes @ 0x0
 10698                           
 10699  0077                     ??_adcThresholdHandler:	
 10700                           ; 1 bytes @ 0x0
 10701                           
 10702  0077                     ?_DMX_getAddress:	
 10703                           ; 1 bytes @ 0x0
 10704                           
 10705  0077                     ?_LED_task_DMX:	
 10706                           ; 1 bytes @ 0x0
 10707                           
 10708                           
 10709                           ; 1 bytes @ 0x0
 10710  0077                     	ds	1
 10711  0078                     ??_EUSART1_Receive_ISR:	
 10712  0078                     ??_EUSART1_DefaultErrorHandler:	
 10713                           ; 1 bytes @ 0x1
 10714                           
 10715  0078                     I2C1_Stop@completion_code:	
 10716                           ; 1 bytes @ 0x1
 10717                           
 10718                           
 10719                           ; 1 bytes @ 0x1
 10720  0078                     	ds	1
 10721  0079                     ??_I2C1_ISR:	
 10722                           
 10723                           ; 1 bytes @ 0x2
 10724  0079                     	ds	4
 10725  007D                     DMX_interrupt@dummy:	
 10726                           
 10727                           ; 1 bytes @ 0x6
 10728  007D                     	ds	1
 10729  007E                     ??_INTERRUPT_InterruptManager:	
 10730                           
 10731                           	psect	cstackBANK0
 10732  0020                     __pcstackBANK0:	
 10733                           ; 1 bytes @ 0x7
 10734                           
 10735  0020                     ??_PMD_Initialize:	
 10736  0020                     ??_PIN_MANAGER_Initialize:	
 10737                           ; 1 bytes @ 0x0
 10738                           
 10739  0020                     ??_OSCILLATOR_Initialize:	
 10740                           ; 1 bytes @ 0x0
 10741                           
 10742  0020                     ??_I2C1_Initialize:	
 10743                           ; 1 bytes @ 0x0
 10744                           
 10745  0020                     ??_PWM1_Initialize:	
 10746                           ; 1 bytes @ 0x0
 10747                           
 10748  0020                     ??_PWM2_Initialize:	
 10749                           ; 1 bytes @ 0x0
 10750                           
 10751  0020                     ??_PWM4_Initialize:	
 10752                           ; 1 bytes @ 0x0
 10753                           
 10754  0020                     ??_PWM3_Initialize:	
 10755                           ; 1 bytes @ 0x0
 10756                           
 10757  0020                     ??_TMR2_Initialize:	
 10758                           ; 1 bytes @ 0x0
 10759                           
 10760  0020                     ?_EUSART1_SetRxInterruptHandler:	
 10761                           ; 1 bytes @ 0x0
 10762                           
 10763  0020                     ?_EUSART1_SetFramingErrorHandler:	
 10764                           ; 1 bytes @ 0x0
 10765                           
 10766  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 10767                           ; 1 bytes @ 0x0
 10768                           
 10769  0020                     ?_EUSART1_SetErrorHandler:	
 10770                           ; 1 bytes @ 0x0
 10771                           
 10772  0020                     ?_TMR0_SetInterruptHandler:	
 10773                           ; 1 bytes @ 0x0
 10774                           
 10775  0020                     ?_I2C1_MasterWriteTRBBuild:	
 10776                           ; 1 bytes @ 0x0
 10777                           
 10778  0020                     ?_I2C1_MasterTRBInsert:	
 10779                           ; 1 bytes @ 0x0
 10780                           
 10781  0020                     ?_ADCC_SetADTIInterruptHandler:	
 10782                           ; 1 bytes @ 0x0
 10783                           
 10784  0020                     ??_GPIO_init:	
 10785                           ; 1 bytes @ 0x0
 10786                           
 10787  0020                     ??_CONTROL_BEAT:	
 10788                           ; 1 bytes @ 0x0
 10789                           
 10790  0020                     ??_LED_task_ANIMATION:	
 10791                           ; 1 bytes @ 0x0
 10792                           
 10793  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 10794                           ; 1 bytes @ 0x0
 10795                           
 10796  0020                     ??_ADCC_StartConversion:	
 10797                           ; 1 bytes @ 0x0
 10798                           
 10799  0020                     ?_ADCC_SetUpperThreshold:	
 10800                           ; 1 bytes @ 0x0
 10801                           
 10802  0020                     ?_init:	
 10803                           ; 1 bytes @ 0x0
 10804                           
 10805  0020                     ??_BUTTONS_isClicked:	
 10806                           ; 1 bytes @ 0x0
 10807                           
 10808  0020                     ??_BUTTONS_isHeld:	
 10809                           ; 1 bytes @ 0x0
 10810                           
 10811  0020                     ??_getMode:	
 10812                           ; 1 bytes @ 0x0
 10813                           
 10814  0020                     ??_DMX_getAddress:	
 10815                           ; 1 bytes @ 0x0
 10816                           
 10817  0020                     ?_CLOCK_getTime:	
 10818                           ; 1 bytes @ 0x0
 10819                           
 10820  0020                     ?_strlen:	
 10821                           ; 2 bytes @ 0x0
 10822                           
 10823  0020                     ?__Umul8_16:	
 10824                           ; 2 bytes @ 0x0
 10825                           
 10826  0020                     ?___lwdiv:	
 10827                           ; 2 bytes @ 0x0
 10828                           
 10829  0020                     ?___xxtofl:	
 10830                           ; 2 bytes @ 0x0
 10831                           
 10832  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 10833                           ; 4 bytes @ 0x0
 10834                           
 10835  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 10836                           ; 1 bytes @ 0x0
 10837                           
 10838  0020                     ADCC_StartConversion@channel:	
 10839                           ; 1 bytes @ 0x0
 10840                           
 10841  0020                     BUTTONS_isClicked@button:	
 10842                           ; 1 bytes @ 0x0
 10843                           
 10844  0020                     BUTTONS_isHeld@button:	
 10845                           ; 1 bytes @ 0x0
 10846                           
 10847  0020                     __Umul8_16@multiplicand:	
 10848                           ; 1 bytes @ 0x0
 10849                           
 10850  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 10851                           ; 1 bytes @ 0x0
 10852                           
 10853  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 10854                           ; 2 bytes @ 0x0
 10855                           
 10856  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 10857                           ; 2 bytes @ 0x0
 10858                           
 10859  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 10860                           ; 2 bytes @ 0x0
 10861                           
 10862  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 10863                           ; 2 bytes @ 0x0
 10864                           
 10865  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 10866                           ; 2 bytes @ 0x0
 10867                           
 10868  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 10869                           ; 2 bytes @ 0x0
 10870                           
 10871  0020                     init@port:	
 10872                           ; 2 bytes @ 0x0
 10873                           
 10874  0020                     ___lwdiv@divisor:	
 10875                           ; 2 bytes @ 0x0
 10876                           
 10877  0020                     strlen@s:	
 10878                           ; 2 bytes @ 0x0
 10879                           
 10880  0020                     ___xxtofl@val:	
 10881                           ; 2 bytes @ 0x0
 10882                           
 10883                           
 10884                           ; 4 bytes @ 0x0
 10885  0020                     	ds	1
 10886  0021                     I2C1_MasterTRBInsert@pflag:	
 10887  0021                     I2C1_MasterWriteTRBBuild@length:	
 10888                           ; 1 bytes @ 0x1
 10889                           
 10890                           
 10891                           ; 1 bytes @ 0x1
 10892  0021                     	ds	1
 10893  0022                     ??_ADCC_Initialize:	
 10894  0022                     ??_TMR0_Initialize:	
 10895                           ; 1 bytes @ 0x2
 10896                           
 10897  0022                     ??_EUSART1_Initialize:	
 10898                           ; 1 bytes @ 0x2
 10899                           
 10900  0022                     ??_EUSART1_SetRxInterruptHandler:	
 10901                           ; 1 bytes @ 0x2
 10902                           
 10903  0022                     ??_EUSART1_SetFramingErrorHandler:	
 10904                           ; 1 bytes @ 0x2
 10905                           
 10906  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 10907                           ; 1 bytes @ 0x2
 10908                           
 10909  0022                     ??_EUSART1_SetErrorHandler:	
 10910                           ; 1 bytes @ 0x2
 10911                           
 10912  0022                     ??_TMR0_SetInterruptHandler:	
 10913                           ; 1 bytes @ 0x2
 10914                           
 10915  0022                     ??_I2C1_MasterTRBInsert:	
 10916                           ; 1 bytes @ 0x2
 10917                           
 10918  0022                     ??_ADCC_SetADTIInterruptHandler:	
 10919                           ; 1 bytes @ 0x2
 10920                           
 10921  0022                     ??_CLOCK_init:	
 10922                           ; 1 bytes @ 0x2
 10923                           
 10924  0022                     ??_BEAT_init:	
 10925                           ; 1 bytes @ 0x2
 10926                           
 10927  0022                     ??_CLOCK_getTime:	
 10928                           ; 1 bytes @ 0x2
 10929                           
 10930  0022                     ??_BUTTONS_task:	
 10931                           ; 1 bytes @ 0x2
 10932                           
 10933  0022                     ??_strlen:	
 10934                           ; 1 bytes @ 0x2
 10935                           
 10936  0022                     ??__Umul8_16:	
 10937                           ; 1 bytes @ 0x2
 10938                           
 10939  0022                     ??_SYSTEM_Initialize:	
 10940                           ; 1 bytes @ 0x2
 10941                           
 10942  0022                     ??_ADCC_SetUpperThreshold:	
 10943                           ; 1 bytes @ 0x2
 10944                           
 10945  0022                     init@pin:	
 10946                           ; 1 bytes @ 0x2
 10947                           
 10948  0022                     I2C1_MasterWriteTRBBuild@address:	
 10949                           ; 1 bytes @ 0x2
 10950                           
 10951  0022                     ___lwdiv@dividend:	
 10952                           ; 2 bytes @ 0x2
 10953                           
 10954                           
 10955                           ; 2 bytes @ 0x2
 10956  0022                     	ds	1
 10957  0023                     ??_init:	
 10958  0023                     I2C1_MasterTRBInsert@count:	
 10959                           ; 1 bytes @ 0x3
 10960                           
 10961  0023                     strlen@a:	
 10962                           ; 1 bytes @ 0x3
 10963                           
 10964                           
 10965                           ; 2 bytes @ 0x3
 10966  0023                     	ds	1
 10967  0024                     ??_I2C1_MasterWriteTRBBuild:	
 10968  0024                     ??___lwdiv:	
 10969                           ; 1 bytes @ 0x4
 10970                           
 10971  0024                     ??___xxtofl:	
 10972                           ; 1 bytes @ 0x4
 10973                           
 10974  0024                     init@btn:	
 10975                           ; 1 bytes @ 0x4
 10976                           
 10977  0024                     __Umul8_16@product:	
 10978                           ; 1 bytes @ 0x4
 10979                           
 10980                           
 10981                           ; 2 bytes @ 0x4
 10982  0024                     	ds	1
 10983  0025                     ??_BUTTONS_init:	
 10984  0025                     BUTTONS_task@i:	
 10985                           ; 1 bytes @ 0x5
 10986                           
 10987  0025                     ___lwdiv@quotient:	
 10988                           ; 1 bytes @ 0x5
 10989                           
 10990                           
 10991                           ; 2 bytes @ 0x5
 10992  0025                     	ds	1
 10993  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 10994  0026                     BUTTONS_task@time:	
 10995                           ; 1 bytes @ 0x6
 10996                           
 10997  0026                     __Umul8_16@word_mpld:	
 10998                           ; 2 bytes @ 0x6
 10999                           
 11000                           
 11001                           ; 2 bytes @ 0x6
 11002  0026                     	ds	1
 11003  0027                     ?_I2C1_MasterWrite:	
 11004  0027                     I2C1_MasterWrite@length:	
 11005                           ; 1 bytes @ 0x7
 11006                           
 11007  0027                     ___lwdiv@counter:	
 11008                           ; 1 bytes @ 0x7
 11009                           
 11010                           
 11011                           ; 1 bytes @ 0x7
 11012  0027                     	ds	1
 11013  0028                     ??_BEAT_task:	
 11014  0028                     ?___lwmod:	
 11015                           ; 1 bytes @ 0x8
 11016                           
 11017  0028                     BUTTONS_task@btn:	
 11018                           ; 2 bytes @ 0x8
 11019                           
 11020  0028                     ___xxtofl@sign:	
 11021                           ; 1 bytes @ 0x8
 11022                           
 11023  0028                     __Umul8_16@multiplier:	
 11024                           ; 1 bytes @ 0x8
 11025                           
 11026  0028                     I2C1_MasterWrite@address:	
 11027                           ; 1 bytes @ 0x8
 11028                           
 11029  0028                     ___lwmod@divisor:	
 11030                           ; 2 bytes @ 0x8
 11031                           
 11032                           
 11033                           ; 2 bytes @ 0x8
 11034  0028                     	ds	1
 11035  0029                     ___xxtofl@exp:	
 11036                           
 11037                           ; 1 bytes @ 0x9
 11038  0029                     	ds	1
 11039  002A                     I2C1_MasterWrite@pflag:	
 11040  002A                     BEAT_task@offset:	
 11041                           ; 1 bytes @ 0xA
 11042                           
 11043  002A                     ___lwmod@dividend:	
 11044                           ; 2 bytes @ 0xA
 11045                           
 11046  002A                     ___xxtofl@arg:	
 11047                           ; 2 bytes @ 0xA
 11048                           
 11049                           
 11050                           ; 4 bytes @ 0xA
 11051  002A                     	ds	1
 11052  002B                     ??_I2C1_MasterWrite:	
 11053                           
 11054                           ; 1 bytes @ 0xB
 11055  002B                     	ds	1
 11056  002C                     ??___lwmod:	
 11057                           
 11058                           ; 1 bytes @ 0xC
 11059  002C                     	ds	1
 11060  002D                     I2C1_MasterWrite@pdata:	
 11061  002D                     ___lwmod@counter:	
 11062                           ; 1 bytes @ 0xD
 11063                           
 11064                           
 11065                           ; 1 bytes @ 0xD
 11066  002D                     	ds	1
 11067  002E                     ?_writeData:	
 11068  002E                     ?___fldiv:	
 11069                           ; 1 bytes @ 0xE
 11070                           
 11071  002E                     writeData@data:	
 11072                           ; 4 bytes @ 0xE
 11073                           
 11074  002E                     ___fldiv@a:	
 11075                           ; 1 bytes @ 0xE
 11076                           
 11077                           
 11078                           ; 4 bytes @ 0xE
 11079  002E                     	ds	1
 11080  002F                     ??_writeData:	
 11081                           
 11082                           ; 1 bytes @ 0xF
 11083  002F                     	ds	3
 11084  0032                     writeData@address:	
 11085  0032                     ___fldiv@b:	
 11086                           ; 1 bytes @ 0x12
 11087                           
 11088                           
 11089                           ; 4 bytes @ 0x12
 11090  0032                     	ds	1
 11091  0033                     writeData@status:	
 11092                           
 11093                           ; 1 bytes @ 0x13
 11094  0033                     	ds	1
 11095  0034                     ??_TM1650_enable:	
 11096  0034                     ?_TM1650_fastPrintNum:	
 11097                           ; 1 bytes @ 0x14
 11098                           
 11099  0034                     ?_TM1650_setDigit:	
 11100                           ; 1 bytes @ 0x14
 11101                           
 11102  0034                     TM1650_enable@enable:	
 11103                           ; 1 bytes @ 0x14
 11104                           
 11105  0034                     TM1650_setDigit@data:	
 11106                           ; 1 bytes @ 0x14
 11107                           
 11108  0034                     TM1650_fastPrintNum@num:	
 11109                           ; 1 bytes @ 0x14
 11110                           
 11111                           
 11112                           ; 2 bytes @ 0x14
 11113  0034                     	ds	1
 11114  0035                     ??_TM1650_setDigit:	
 11115                           
 11116                           ; 1 bytes @ 0x15
 11117  0035                     	ds	1
 11118  0036                     ??_TM1650_fastPrintNum:	
 11119  0036                     ??___fldiv:	
 11120                           ; 1 bytes @ 0x16
 11121                           
 11122  0036                     TM1650_setDigit@digit:	
 11123                           ; 1 bytes @ 0x16
 11124                           
 11125                           
 11126                           ; 1 bytes @ 0x16
 11127  0036                     	ds	1
 11128  0037                     ??_DMX_init:	
 11129  0037                     ??_CONTROL_DMX:	
 11130                           ; 1 bytes @ 0x17
 11131                           
 11132  0037                     ??_address_inc:	
 11133                           ; 1 bytes @ 0x17
 11134                           
 11135  0037                     ??_address_dec:	
 11136                           ; 1 bytes @ 0x17
 11137                           
 11138  0037                     ??_putch:	
 11139                           ; 1 bytes @ 0x17
 11140                           
 11141                           
 11142                           ; 1 bytes @ 0x17
 11143  0037                     	ds	1
 11144  0038                     putch@n:	
 11145                           
 11146                           ; 1 bytes @ 0x18
 11147  0038                     	ds	1
 11148  0039                     ?_fputc:	
 11149  0039                     fputc@c:	
 11150                           ; 2 bytes @ 0x19
 11151                           
 11152                           
 11153                           ; 2 bytes @ 0x19
 11154  0039                     	ds	2
 11155  003B                     fputc@fp:	
 11156  003B                     ___fldiv@rem:	
 11157                           ; 1 bytes @ 0x1B
 11158                           
 11159                           
 11160                           ; 4 bytes @ 0x1B
 11161  003B                     	ds	1
 11162  003C                     ??_fputc:	
 11163                           
 11164                           ; 1 bytes @ 0x1C
 11165  003C                     	ds	3
 11166  003F                     ___fldiv@sign:	
 11167                           
 11168                           ; 1 bytes @ 0x1F
 11169  003F                     	ds	1
 11170  0040                     ___fldiv@new_exp:	
 11171                           
 11172                           ; 2 bytes @ 0x20
 11173  0040                     	ds	1
 11174  0041                     ?_fputs:	
 11175  0041                     fputs@fp:	
 11176                           ; 2 bytes @ 0x21
 11177                           
 11178                           
 11179                           ; 1 bytes @ 0x21
 11180  0041                     	ds	1
 11181  0042                     ??_fputs:	
 11182  0042                     ___fldiv@grs:	
 11183                           ; 1 bytes @ 0x22
 11184                           
 11185                           
 11186                           ; 4 bytes @ 0x22
 11187  0042                     	ds	3
 11188  0045                     fputs@c:	
 11189                           
 11190                           ; 1 bytes @ 0x25
 11191  0045                     	ds	1
 11192  0046                     ___fldiv@bexp:	
 11193  0046                     fputs@i:	
 11194                           ; 1 bytes @ 0x26
 11195                           
 11196                           
 11197                           ; 2 bytes @ 0x26
 11198  0046                     	ds	1
 11199  0047                     ___fldiv@aexp:	
 11200                           
 11201                           ; 1 bytes @ 0x27
 11202  0047                     	ds	1
 11203  0048                     ?___flmul:	
 11204  0048                     fputs@s:	
 11205                           ; 4 bytes @ 0x28
 11206                           
 11207  0048                     ___flmul@b:	
 11208                           ; 1 bytes @ 0x28
 11209                           
 11210                           
 11211                           ; 4 bytes @ 0x28
 11212  0048                     	ds	1
 11213  0049                     ?_pad:	
 11214  0049                     pad@buf:	
 11215                           ; 2 bytes @ 0x29
 11216                           
 11217                           
 11218                           ; 1 bytes @ 0x29
 11219  0049                     	ds	1
 11220  004A                     pad@p:	
 11221                           
 11222                           ; 2 bytes @ 0x2A
 11223  004A                     	ds	2
 11224  004C                     ??_pad:	
 11225  004C                     ___flmul@a:	
 11226                           ; 1 bytes @ 0x2C
 11227                           
 11228                           
 11229                           ; 4 bytes @ 0x2C
 11230  004C                     	ds	1
 11231  004D                     pad@i:	
 11232                           
 11233                           ; 2 bytes @ 0x2D
 11234  004D                     	ds	2
 11235  004F                     pad@w:	
 11236                           
 11237                           ; 2 bytes @ 0x2F
 11238  004F                     	ds	1
 11239  0050                     ??___flmul:	
 11240                           
 11241                           ; 1 bytes @ 0x30
 11242  0050                     	ds	1
 11243  0051                     pad@fp:	
 11244                           
 11245                           ; 1 bytes @ 0x31
 11246  0051                     	ds	1
 11247  0052                     ?_ctoa:	
 11248  0052                     ctoa@c:	
 11249                           ; 2 bytes @ 0x32
 11250                           
 11251                           
 11252                           ; 1 bytes @ 0x32
 11253  0052                     	ds	2
 11254  0054                     ??_ctoa:	
 11255                           
 11256                           ; 1 bytes @ 0x34
 11257  0054                     	ds	1
 11258  0055                     ___flmul@sign:	
 11259  0055                     ctoa@w:	
 11260                           ; 1 bytes @ 0x35
 11261                           
 11262                           
 11263                           ; 2 bytes @ 0x35
 11264  0055                     	ds	1
 11265  0056                     ___flmul@grs:	
 11266                           
 11267                           ; 4 bytes @ 0x36
 11268  0056                     	ds	1
 11269  0057                     ctoa@fp:	
 11270                           
 11271                           ; 1 bytes @ 0x37
 11272  0057                     	ds	1
 11273  0058                     ?_vfpfcnvrt:	
 11274  0058                     vfpfcnvrt@fmt:	
 11275                           ; 2 bytes @ 0x38
 11276                           
 11277                           
 11278                           ; 1 bytes @ 0x38
 11279  0058                     	ds	1
 11280  0059                     vfpfcnvrt@ap:	
 11281                           
 11282                           ; 1 bytes @ 0x39
 11283  0059                     	ds	1
 11284  005A                     ??_vfpfcnvrt:	
 11285  005A                     ___flmul@aexp:	
 11286                           ; 1 bytes @ 0x3A
 11287                           
 11288                           
 11289                           ; 1 bytes @ 0x3A
 11290  005A                     	ds	1
 11291  005B                     ___flmul@bexp:	
 11292                           
 11293                           ; 1 bytes @ 0x3B
 11294  005B                     	ds	1
 11295  005C                     ___flmul@prod:	
 11296                           
 11297                           ; 4 bytes @ 0x3C
 11298  005C                     	ds	3
 11299  005F                     vfpfcnvrt@c:	
 11300                           
 11301                           ; 1 bytes @ 0x3F
 11302  005F                     	ds	1
 11303  0060                     vfpfcnvrt@fp:	
 11304  0060                     ___flmul@temp:	
 11305                           ; 1 bytes @ 0x40
 11306                           
 11307                           
 11308                           ; 2 bytes @ 0x40
 11309  0060                     	ds	1
 11310  0061                     ?_vfprintf:	
 11311  0061                     vfprintf@fmt:	
 11312                           ; 2 bytes @ 0x41
 11313                           
 11314                           
 11315                           ; 2 bytes @ 0x41
 11316  0061                     	ds	1
 11317  0062                     ?___fltol:	
 11318  0062                     ___fltol@f1:	
 11319                           ; 4 bytes @ 0x42
 11320                           
 11321                           
 11322                           ; 4 bytes @ 0x42
 11323  0062                     	ds	1
 11324  0063                     vfprintf@ap:	
 11325                           
 11326                           ; 1 bytes @ 0x43
 11327  0063                     	ds	1
 11328  0064                     ??_vfprintf:	
 11329                           
 11330                           ; 1 bytes @ 0x44
 11331  0064                     	ds	2
 11332  0066                     ??___fltol:	
 11333  0066                     vfprintf@fp:	
 11334                           ; 1 bytes @ 0x46
 11335                           
 11336                           
 11337                           ; 1 bytes @ 0x46
 11338  0066                     	ds	1
 11339  0067                     vfprintf@cfmt:	
 11340                           
 11341                           ; 2 bytes @ 0x47
 11342  0067                     	ds	2
 11343  0069                     ??_printf:	
 11344                           
 11345                           ; 1 bytes @ 0x49
 11346  0069                     	ds	2
 11347  006B                     ___fltol@sign1:	
 11348                           
 11349                           ; 1 bytes @ 0x4B
 11350  006B                     	ds	1
 11351  006C                     ___fltol@exp1:	
 11352  006C                     printf@ap:	
 11353                           ; 1 bytes @ 0x4C
 11354                           
 11355                           
 11356                           ; 1 bytes @ 0x4C
 11357  006C                     	ds	1
 11358  006D                     ??_TM1650_init:	
 11359  006D                     ??_menuSelection:	
 11360                           ; 1 bytes @ 0x4D
 11361                           
 11362  006D                     ?_PWM3_LoadDutyValue:	
 11363                           ; 1 bytes @ 0x4D
 11364                           
 11365  006D                     ?_PWM4_LoadDutyValue:	
 11366                           ; 1 bytes @ 0x4D
 11367                           
 11368  006D                     ?_PWM1_LoadDutyValue:	
 11369                           ; 1 bytes @ 0x4D
 11370                           
 11371  006D                     ?_PWM2_LoadDutyValue:	
 11372                           ; 1 bytes @ 0x4D
 11373                           
 11374  006D                     PWM3_LoadDutyValue@dutyValue:	
 11375                           ; 1 bytes @ 0x4D
 11376                           
 11377  006D                     PWM4_LoadDutyValue@dutyValue:	
 11378                           ; 2 bytes @ 0x4D
 11379                           
 11380  006D                     PWM1_LoadDutyValue@dutyValue:	
 11381                           ; 2 bytes @ 0x4D
 11382                           
 11383  006D                     PWM2_LoadDutyValue@dutyValue:	
 11384                           ; 2 bytes @ 0x4D
 11385                           
 11386                           
 11387                           ; 2 bytes @ 0x4D
 11388  006D                     	ds	2
 11389  006F                     ??_PWM3_LoadDutyValue:	
 11390  006F                     ??_PWM4_LoadDutyValue:	
 11391                           ; 1 bytes @ 0x4F
 11392                           
 11393  006F                     ??_PWM1_LoadDutyValue:	
 11394                           ; 1 bytes @ 0x4F
 11395                           
 11396  006F                     ??_PWM2_LoadDutyValue:	
 11397                           ; 1 bytes @ 0x4F
 11398                           
 11399  006F                     CONTROLLER_task@isActive:	
 11400                           ; 1 bytes @ 0x4F
 11401                           
 11402                           
 11403                           ; 1 bytes @ 0x4F
 11404  006F                     	ds	1
 11405                           
 11406                           	psect	maintext
 11407  1436                     __pmaintext:	
 11408 ;;
 11409 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11410 ;;
 11411 ;; *************** function _main *****************
 11412 ;; Defined at:
 11413 ;;		line 58 in file "main.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;		None
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;		None
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  1    wreg      void 
 11420 ;; Registers used:
 11421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11422 ;; Tracked objects:
 11423 ;;		On entry : B3F/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11429 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11430 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11431 ;;Total ram usage:        2 bytes
 11432 ;; Hardware stack levels required when called:   19
 11433 ;; This function calls:
 11434 ;;		_BEAT_init
 11435 ;;		_BEAT_task
 11436 ;;		_BUTTONS_init
 11437 ;;		_BUTTONS_task
 11438 ;;		_CLOCK_getTime
 11439 ;;		_CLOCK_init
 11440 ;;		_CONTROLLER_task
 11441 ;;		_DMX_init
 11442 ;;		_LED_task
 11443 ;;		_SYSTEM_Initialize
 11444 ;;		_TM1650_init
 11445 ;; This function is called by:
 11446 ;;		Startup code after reset
 11447 ;; This function uses a non-reentrant model
 11448 ;;
 11449                           
 11450                           
 11451                           ;psect for function _main
 11452  1436                     _main:	
 11453                           
 11454                           ;main.c: 61:     SYSTEM_Initialize();
 11455                           
 11456                           ;incstack = 0
 11457 ;; hardware stack exceeded
 11458                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11459  1436  3192  220C  3194   	fcall	_SYSTEM_Initialize
 11460                           
 11461                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11462  1439  3015               	movlw	21
 11463  143A  0141               	movlb	1	; select bank1
 11464  143B  00E5               	movwf	(??_main^(0+128)+1)
 11465  143C  304B               	movlw	75
 11466  143D  00E4               	movwf	??_main^(0+128)
 11467  143E  30BE               	movlw	190
 11468  143F                     u6247:	
 11469  143F  0B89               	decfsz	9,f
 11470  1440  2C3F               	goto	u6247
 11471  1441  0BE4               	decfsz	??_main^(0+128),f
 11472  1442  2C3F               	goto	u6247
 11473  1443  0BE5               	decfsz	(??_main^(0+128)+1),f
 11474  1444  2C3F               	goto	u6247
 11475  1445  0000               	nop
 11476                           
 11477                           ;main.c: 63:     CLOCK_init();
 11478  1446  319E  2677  3194   	fcall	_CLOCK_init
 11479                           
 11480                           ;main.c: 64:     BUTTONS_init();
 11481  1449  3194  246F  3194   	fcall	_BUTTONS_init
 11482                           
 11483                           ;main.c: 65:     BEAT_init();
 11484  144C  3190  2019  3194   	fcall	_BEAT_init
 11485                           
 11486                           ;main.c: 67:     (INTCONbits.GIE = 1);
 11487  144F  178B               	bsf	11,7	;volatile
 11488                           
 11489                           ;main.c: 68:     (INTCONbits.PEIE = 1);
 11490  1450  170B               	bsf	11,6	;volatile
 11491                           
 11492                           ;main.c: 70:     TM1650_init();
 11493  1451  319F  27D7  3194   	fcall	_TM1650_init
 11494                           
 11495                           ;main.c: 71:     DMX_init();
 11496  1454  319F  279C  3194   	fcall	_DMX_init
 11497                           
 11498                           ;main.c: 72:     startTime = CLOCK_getTime();
 11499  1457  319E  269A  3194   	fcall	_CLOCK_getTime
 11500  145A  0140               	movlb	0	; select bank0
 11501  145B  0821               	movf	?_CLOCK_getTime+1,w
 11502  145C  0141               	movlb	1	; select bank1
 11503  145D  00B8               	movwf	(_startTime+1)^(0+128)
 11504  145E  0140               	movlb	0	; select bank0
 11505  145F  0820               	movf	?_CLOCK_getTime,w
 11506  1460  0141               	movlb	1	; select bank1
 11507  1461  00B7               	movwf	_startTime^(0+128)
 11508  1462                     l6784:	
 11509                           
 11510                           ;main.c: 75:     {;main.c: 76:         BUTTONS_task();
 11511  1462  318A  2210  3194   	fcall	_BUTTONS_task
 11512                           
 11513                           ;main.c: 77:         CONTROLLER_task();
 11514  1465  318A  22F5  3194   	fcall	_CONTROLLER_task
 11515                           
 11516                           ;main.c: 78:         BEAT_task();
 11517  1468  3189  2140  3194   	fcall	_BEAT_task
 11518                           
 11519                           ;main.c: 79:         LED_task();
 11520  146B  3191  2182  3194   	fcall	_LED_task
 11521  146E  2C62               	goto	l6784
 11522  146F                     __end_of_main:	
 11523                           
 11524                           	psect	text1
 11525  1FD7                     __ptext1:	
 11526 ;; *************** function _TM1650_init *****************
 11527 ;; Defined at:
 11528 ;;		line 51 in file "tm1650.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;		None
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;		None
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  1    wreg      void 
 11535 ;; Registers used:
 11536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11546 ;;Total ram usage:        0 bytes
 11547 ;; Hardware stack levels used:    1
 11548 ;; Hardware stack levels required when called:   17
 11549 ;; This function calls:
 11550 ;;		_TM1650_enable
 11551 ;;		_printf
 11552 ;; This function is called by:
 11553 ;;		_main
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           
 11558                           ;psect for function _TM1650_init
 11559  1FD7                     _TM1650_init:	
 11560                           
 11561                           ;tm1650.c: 53:     TM1650_enable(1);
 11562                           
 11563                           ;incstack = 0
 11564 ;; hardware stack exceeded
 11565                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11566  1FD7  3001               	movlw	1
 11567  1FD8  319F  27EB  319F   	fcall	_TM1650_enable
 11568                           
 11569                           ;tm1650.c: 54:     printf("    ");
 11570  1FDB  3069               	movlw	low (STR_6| (0+32768))
 11571  1FDC  0141               	movlb	1	; select bank1
 11572  1FDD  00D1               	movwf	printf@fmt^(0+128)
 11573  1FDE  30A0               	movlw	high (STR_6| (0+32768))
 11574  1FDF  00D2               	movwf	(printf@fmt^(0+128)+1)
 11575  1FE0  3190  2004  319F   	fcall	_printf
 11576                           
 11577                           ;tm1650.c: 55:     printf("\r");
 11578  1FE3  304F               	movlw	low ((STR_16+4)| (0+32768))
 11579  1FE4  0141               	movlb	1	; select bank1
 11580  1FE5  00D1               	movwf	printf@fmt^(0+128)
 11581  1FE6  30A0               	movlw	high ((STR_16+4)| (0+32768))
 11582  1FE7  00D2               	movwf	(printf@fmt^(0+128)+1)
 11583  1FE8  3190  2004         	fcall	_printf
 11584  1FEA  0008               	return
 11585  1FEB                     __end_of_TM1650_init:	
 11586                           
 11587                           	psect	text2
 11588  120C                     __ptext2:	
 11589 ;; *************** function _SYSTEM_Initialize *****************
 11590 ;; Defined at:
 11591 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;		None
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;		None
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  1    wreg      void 
 11598 ;; Registers used:
 11599 ;;		wreg, status,2, status,0, pclath, cstack
 11600 ;; Tracked objects:
 11601 ;;		On entry : 0/0
 11602 ;;		On exit  : 0/0
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11609 ;;Total ram usage:        0 bytes
 11610 ;; Hardware stack levels used:    1
 11611 ;; Hardware stack levels required when called:    6
 11612 ;; This function calls:
 11613 ;;		_ADCC_Initialize
 11614 ;;		_EUSART1_Initialize
 11615 ;;		_I2C1_Initialize
 11616 ;;		_OSCILLATOR_Initialize
 11617 ;;		_PIN_MANAGER_Initialize
 11618 ;;		_PMD_Initialize
 11619 ;;		_PWM1_Initialize
 11620 ;;		_PWM2_Initialize
 11621 ;;		_PWM3_Initialize
 11622 ;;		_PWM4_Initialize
 11623 ;;		_TMR0_Initialize
 11624 ;;		_TMR2_Initialize
 11625 ;; This function is called by:
 11626 ;;		_main
 11627 ;; This function uses a non-reentrant model
 11628 ;;
 11629                           
 11630                           
 11631                           ;psect for function _SYSTEM_Initialize
 11632  120C                     _SYSTEM_Initialize:	
 11633                           
 11634                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11635                           
 11636                           ;incstack = 0
 11637                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11638  120C  319E  26D9  3192   	fcall	_PMD_Initialize
 11639                           
 11640                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11641  120F  3187  27CA  3192   	fcall	_PIN_MANAGER_Initialize
 11642                           
 11643                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11644  1212  319E  26D0  3192   	fcall	_OSCILLATOR_Initialize
 11645                           
 11646                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 11647  1215  3190  2091  3192   	fcall	_I2C1_Initialize
 11648                           
 11649                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 11650  1218  319E  26ED  3192   	fcall	_PWM1_Initialize
 11651                           
 11652                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 11653  121B  319E  26F8  3192   	fcall	_PWM2_Initialize
 11654                           
 11655                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 11656  121E  3192  2256  3192   	fcall	_ADCC_Initialize
 11657                           
 11658                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 11659  1221  319F  270E  3192   	fcall	_PWM4_Initialize
 11660                           
 11661                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 11662  1224  319F  2703  3192   	fcall	_PWM3_Initialize
 11663                           
 11664                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 11665  1227  319F  274B  3192   	fcall	_TMR2_Initialize
 11666                           
 11667                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 11668  122A  319F  27C3  3192   	fcall	_TMR0_Initialize
 11669                           
 11670                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 11671  122D  3193  2363         	fcall	_EUSART1_Initialize
 11672  122F  0008               	return
 11673  1230                     __end_of_SYSTEM_Initialize:	
 11674                           
 11675                           	psect	text3
 11676  1F4B                     __ptext3:	
 11677 ;; *************** function _TMR2_Initialize *****************
 11678 ;; Defined at:
 11679 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;		None
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;		None
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      void 
 11686 ;; Registers used:
 11687 ;;		wreg, status,2
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11697 ;;Total ram usage:        0 bytes
 11698 ;; Hardware stack levels used:    1
 11699 ;; Hardware stack levels required when called:    4
 11700 ;; This function calls:
 11701 ;;		Nothing
 11702 ;; This function is called by:
 11703 ;;		_SYSTEM_Initialize
 11704 ;; This function uses a non-reentrant model
 11705 ;;
 11706                           
 11707                           
 11708                           ;psect for function _TMR2_Initialize
 11709  1F4B                     _TMR2_Initialize:	
 11710                           
 11711                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11712                           
 11713                           ;incstack = 0
 11714                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11715  1F4B  3001               	movlw	1
 11716  1F4C  0145               	movlb	5	; select bank5
 11717  1F4D  0090               	movwf	16	;volatile
 11718                           
 11719                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11720  1F4E  018F               	clrf	15	;volatile
 11721                           
 11722                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11723  1F4F  0191               	clrf	17	;volatile
 11724                           
 11725                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 11726  1F50  30FF               	movlw	255
 11727  1F51  008D               	movwf	13	;volatile
 11728                           
 11729                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11730  1F52  018C               	clrf	12	;volatile
 11731                           
 11732                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11733  1F53  014E               	movlb	14	; select bank14
 11734  1F54  1090               	bcf	16,1	;volatile
 11735                           
 11736                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xD0;
 11737  1F55  30D0               	movlw	208
 11738  1F56  0145               	movlb	5	; select bank5
 11739  1F57  008E               	movwf	14	;volatile
 11740  1F58  0008               	return
 11741  1F59                     __end_of_TMR2_Initialize:	
 11742                           
 11743                           	psect	text4
 11744  1FC3                     __ptext4:	
 11745 ;; *************** function _TMR0_Initialize *****************
 11746 ;; Defined at:
 11747 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 11748 ;; Parameters:    Size  Location     Type
 11749 ;;		None
 11750 ;; Auto vars:     Size  Location     Type
 11751 ;;		None
 11752 ;; Return value:  Size  Location     Type
 11753 ;;                  1    wreg      void 
 11754 ;; Registers used:
 11755 ;;		wreg, status,2, status,0, pclath, cstack
 11756 ;; Tracked objects:
 11757 ;;		On entry : 0/0
 11758 ;;		On exit  : 0/0
 11759 ;;		Unchanged: 0/0
 11760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11765 ;;Total ram usage:        0 bytes
 11766 ;; Hardware stack levels used:    1
 11767 ;; Hardware stack levels required when called:    5
 11768 ;; This function calls:
 11769 ;;		_TMR0_SetInterruptHandler
 11770 ;; This function is called by:
 11771 ;;		_SYSTEM_Initialize
 11772 ;; This function uses a non-reentrant model
 11773 ;;
 11774                           
 11775                           
 11776                           ;psect for function _TMR0_Initialize
 11777  1FC3                     _TMR0_Initialize:	
 11778                           
 11779                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 11780                           
 11781                           ;incstack = 0
 11782                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11783  1FC3  3045               	movlw	69
 11784  1FC4  014B               	movlb	11	; select bank11
 11785  1FC5  009F               	movwf	31	;volatile
 11786                           
 11787                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 11788  1FC6  30F9               	movlw	249
 11789  1FC7  009D               	movwf	29	;volatile
 11790                           
 11791                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 11792  1FC8  019C               	clrf	28	;volatile
 11793                           
 11794                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 11795  1FC9  014E               	movlb	14	; select bank14
 11796  1FCA  128C               	bcf	12,5	;volatile
 11797                           
 11798                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 11799  1FCB  1696               	bsf	22,5	;volatile
 11800                           
 11801                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 11802  1FCC  3003               	movlw	low _TMR0_DefaultInterruptHandler
 11803  1FCD  0140               	movlb	0	; select bank0
 11804  1FCE  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11805  1FCF  3000               	movlw	high _TMR0_DefaultInterruptHandler
 11806  1FD0  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11807  1FD1  319E  26A3         	fcall	_TMR0_SetInterruptHandler
 11808                           
 11809                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 11810  1FD3  3080               	movlw	128
 11811  1FD4  014B               	movlb	11	; select bank11
 11812  1FD5  009E               	movwf	30	;volatile
 11813  1FD6  0008               	return
 11814  1FD7                     __end_of_TMR0_Initialize:	
 11815                           
 11816                           	psect	text5
 11817  1F0E                     __ptext5:	
 11818 ;; *************** function _PWM4_Initialize *****************
 11819 ;; Defined at:
 11820 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 11821 ;; Parameters:    Size  Location     Type
 11822 ;;		None
 11823 ;; Auto vars:     Size  Location     Type
 11824 ;;		None
 11825 ;; Return value:  Size  Location     Type
 11826 ;;                  1    wreg      void 
 11827 ;; Registers used:
 11828 ;;		wreg, status,2, status,0
 11829 ;; Tracked objects:
 11830 ;;		On entry : 0/0
 11831 ;;		On exit  : 0/0
 11832 ;;		Unchanged: 0/0
 11833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11838 ;;Total ram usage:        0 bytes
 11839 ;; Hardware stack levels used:    1
 11840 ;; Hardware stack levels required when called:    4
 11841 ;; This function calls:
 11842 ;;		Nothing
 11843 ;; This function is called by:
 11844 ;;		_SYSTEM_Initialize
 11845 ;; This function uses a non-reentrant model
 11846 ;;
 11847                           
 11848                           
 11849                           ;psect for function _PWM4_Initialize
 11850  1F0E                     _PWM4_Initialize:	
 11851                           
 11852                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 11853                           
 11854                           ;incstack = 0
 11855                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 11856  1F0E  308C               	movlw	140
 11857  1F0F  0146               	movlb	6	; select bank6
 11858  1F10  009A               	movwf	26	;volatile
 11859                           
 11860                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 11861  1F11  0199               	clrf	25	;volatile
 11862                           
 11863                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 11864  1F12  0198               	clrf	24	;volatile
 11865                           
 11866                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 11867  1F13  0144               	movlb	4	; select bank4
 11868  1F14  081E               	movf	30,w	;volatile
 11869  1F15  393F               	andlw	-193
 11870  1F16  3840               	iorlw	64
 11871  1F17  009E               	movwf	30	;volatile
 11872  1F18  0008               	return
 11873  1F19                     __end_of_PWM4_Initialize:	
 11874                           
 11875                           	psect	text6
 11876  1F03                     __ptext6:	
 11877 ;; *************** function _PWM3_Initialize *****************
 11878 ;; Defined at:
 11879 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 11880 ;; Parameters:    Size  Location     Type
 11881 ;;		None
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;		None
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  1    wreg      void 
 11886 ;; Registers used:
 11887 ;;		wreg, status,2, status,0
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11897 ;;Total ram usage:        0 bytes
 11898 ;; Hardware stack levels used:    1
 11899 ;; Hardware stack levels required when called:    4
 11900 ;; This function calls:
 11901 ;;		Nothing
 11902 ;; This function is called by:
 11903 ;;		_SYSTEM_Initialize
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           
 11908                           ;psect for function _PWM3_Initialize
 11909  1F03                     _PWM3_Initialize:	
 11910                           
 11911                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 11912                           
 11913                           ;incstack = 0
 11914                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 11915  1F03  308C               	movlw	140
 11916  1F04  0146               	movlb	6	; select bank6
 11917  1F05  0096               	movwf	22	;volatile
 11918                           
 11919                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 11920  1F06  0195               	clrf	21	;volatile
 11921                           
 11922                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 11923  1F07  0194               	clrf	20	;volatile
 11924                           
 11925                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 11926  1F08  0144               	movlb	4	; select bank4
 11927  1F09  081E               	movf	30,w	;volatile
 11928  1F0A  39CF               	andlw	-49
 11929  1F0B  3810               	iorlw	16
 11930  1F0C  009E               	movwf	30	;volatile
 11931  1F0D  0008               	return
 11932  1F0E                     __end_of_PWM3_Initialize:	
 11933                           
 11934                           	psect	text7
 11935  1EF8                     __ptext7:	
 11936 ;; *************** function _PWM2_Initialize *****************
 11937 ;; Defined at:
 11938 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 11939 ;; Parameters:    Size  Location     Type
 11940 ;;		None
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;		None
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  1    wreg      void 
 11945 ;; Registers used:
 11946 ;;		wreg, status,2, status,0
 11947 ;; Tracked objects:
 11948 ;;		On entry : 0/0
 11949 ;;		On exit  : 0/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;Total ram usage:        0 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; Hardware stack levels required when called:    4
 11959 ;; This function calls:
 11960 ;;		Nothing
 11961 ;; This function is called by:
 11962 ;;		_SYSTEM_Initialize
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           
 11967                           ;psect for function _PWM2_Initialize
 11968  1EF8                     _PWM2_Initialize:	
 11969                           
 11970                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 11971                           
 11972                           ;incstack = 0
 11973                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 11974  1EF8  308C               	movlw	140
 11975  1EF9  0146               	movlb	6	; select bank6
 11976  1EFA  0092               	movwf	18	;volatile
 11977                           
 11978                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 11979  1EFB  0191               	clrf	17	;volatile
 11980                           
 11981                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 11982  1EFC  0190               	clrf	16	;volatile
 11983                           
 11984                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 11985  1EFD  0144               	movlb	4	; select bank4
 11986  1EFE  081E               	movf	30,w	;volatile
 11987  1EFF  39F3               	andlw	-13
 11988  1F00  3804               	iorlw	4
 11989  1F01  009E               	movwf	30	;volatile
 11990  1F02  0008               	return
 11991  1F03                     __end_of_PWM2_Initialize:	
 11992                           
 11993                           	psect	text8
 11994  1EED                     __ptext8:	
 11995 ;; *************** function _PWM1_Initialize *****************
 11996 ;; Defined at:
 11997 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 11998 ;; Parameters:    Size  Location     Type
 11999 ;;		None
 12000 ;; Auto vars:     Size  Location     Type
 12001 ;;		None
 12002 ;; Return value:  Size  Location     Type
 12003 ;;                  1    wreg      void 
 12004 ;; Registers used:
 12005 ;;		wreg, status,2, status,0
 12006 ;; Tracked objects:
 12007 ;;		On entry : 0/0
 12008 ;;		On exit  : 0/0
 12009 ;;		Unchanged: 0/0
 12010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12015 ;;Total ram usage:        0 bytes
 12016 ;; Hardware stack levels used:    1
 12017 ;; Hardware stack levels required when called:    4
 12018 ;; This function calls:
 12019 ;;		Nothing
 12020 ;; This function is called by:
 12021 ;;		_SYSTEM_Initialize
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           
 12026                           ;psect for function _PWM1_Initialize
 12027  1EED                     _PWM1_Initialize:	
 12028                           
 12029                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12030                           
 12031                           ;incstack = 0
 12032                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12033  1EED  308C               	movlw	140
 12034  1EEE  0146               	movlb	6	; select bank6
 12035  1EEF  008E               	movwf	14	;volatile
 12036                           
 12037                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12038  1EF0  018D               	clrf	13	;volatile
 12039                           
 12040                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12041  1EF1  018C               	clrf	12	;volatile
 12042                           
 12043                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12044  1EF2  0144               	movlb	4	; select bank4
 12045  1EF3  081E               	movf	30,w	;volatile
 12046  1EF4  39FC               	andlw	-4
 12047  1EF5  3801               	iorlw	1
 12048  1EF6  009E               	movwf	30	;volatile
 12049  1EF7  0008               	return
 12050  1EF8                     __end_of_PWM1_Initialize:	
 12051                           
 12052                           	psect	text9
 12053  1ED9                     __ptext9:	
 12054 ;; *************** function _PMD_Initialize *****************
 12055 ;; Defined at:
 12056 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;		None
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;		None
 12061 ;; Return value:  Size  Location     Type
 12062 ;;                  1    wreg      void 
 12063 ;; Registers used:
 12064 ;;		status,2
 12065 ;; Tracked objects:
 12066 ;;		On entry : 0/0
 12067 ;;		On exit  : 0/0
 12068 ;;		Unchanged: 0/0
 12069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12074 ;;Total ram usage:        0 bytes
 12075 ;; Hardware stack levels used:    1
 12076 ;; Hardware stack levels required when called:    4
 12077 ;; This function calls:
 12078 ;;		Nothing
 12079 ;; This function is called by:
 12080 ;;		_SYSTEM_Initialize
 12081 ;; This function uses a non-reentrant model
 12082 ;;
 12083                           
 12084                           
 12085                           ;psect for function _PMD_Initialize
 12086  1ED9                     _PMD_Initialize:	
 12087                           
 12088                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12089                           
 12090                           ;incstack = 0
 12091                           ; Regs used in _PMD_Initialize: [status,2]
 12092  1ED9  014F               	movlb	15	; select bank15
 12093  1EDA  0196               	clrf	22	;volatile
 12094                           
 12095                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12096  1EDB  0197               	clrf	23	;volatile
 12097                           
 12098                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12099  1EDC  0198               	clrf	24	;volatile
 12100                           
 12101                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12102  1EDD  0199               	clrf	25	;volatile
 12103                           
 12104                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12105  1EDE  019A               	clrf	26	;volatile
 12106                           
 12107                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12108  1EDF  019B               	clrf	27	;volatile
 12109                           
 12110                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12111  1EE0  019C               	clrf	28	;volatile
 12112                           
 12113                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12114  1EE1  019D               	clrf	29	;volatile
 12115  1EE2  0008               	return
 12116  1EE3                     __end_of_PMD_Initialize:	
 12117                           
 12118                           	psect	text10
 12119  07CA                     __ptext10:	
 12120 ;; *************** function _PIN_MANAGER_Initialize *****************
 12121 ;; Defined at:
 12122 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;		None
 12125 ;; Auto vars:     Size  Location     Type
 12126 ;;		None
 12127 ;; Return value:  Size  Location     Type
 12128 ;;                  1    wreg      void 
 12129 ;; Registers used:
 12130 ;;		wreg, status,2
 12131 ;; Tracked objects:
 12132 ;;		On entry : 0/0
 12133 ;;		On exit  : 0/0
 12134 ;;		Unchanged: 0/0
 12135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12140 ;;Total ram usage:        0 bytes
 12141 ;; Hardware stack levels used:    1
 12142 ;; Hardware stack levels required when called:    4
 12143 ;; This function calls:
 12144 ;;		Nothing
 12145 ;; This function is called by:
 12146 ;;		_SYSTEM_Initialize
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           
 12151                           ;psect for function _PIN_MANAGER_Initialize
 12152  07CA                     _PIN_MANAGER_Initialize:	
 12153                           
 12154                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12155                           
 12156                           ;incstack = 0
 12157                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12158  07CA  0140               	movlb	0	; select bank0
 12159  07CB  0198               	clrf	24	;volatile
 12160                           
 12161                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12162  07CC  0199               	clrf	25	;volatile
 12163                           
 12164                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12165  07CD  019A               	clrf	26	;volatile
 12166                           
 12167                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12168  07CE  303F               	movlw	63
 12169  07CF  0092               	movwf	18	;volatile
 12170                           
 12171                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12172  07D0  30F0               	movlw	240
 12173  07D1  0093               	movwf	19	;volatile
 12174                           
 12175                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x06;
 12176  07D2  3006               	movlw	6
 12177  07D3  0094               	movwf	20	;volatile
 12178                           
 12179                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12180  07D4  30FF               	movlw	255
 12181  07D5  017E               	movlb	62	; select bank62
 12182  07D6  00CE               	movwf	78	;volatile
 12183                           
 12184                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12185  07D7  30E0               	movlw	224
 12186  07D8  00C3               	movwf	67	;volatile
 12187                           
 12188                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12189  07D9  3007               	movlw	7
 12190  07DA  00B8               	movwf	56	;volatile
 12191                           
 12192                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12193  07DB  01C4               	clrf	68	;volatile
 12194                           
 12195                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12196  07DC  01B9               	clrf	57	;volatile
 12197                           
 12198                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12199  07DD  01CF               	clrf	79	;volatile
 12200                           
 12201                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12202  07DE  01BA               	clrf	58	;volatile
 12203                           
 12204                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12205  07DF  01C5               	clrf	69	;volatile
 12206                           
 12207                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12208  07E0  01D0               	clrf	80	;volatile
 12209                           
 12210                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12211  07E1  3037               	movlw	55
 12212  07E2  00BB               	movwf	59	;volatile
 12213                           
 12214                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12215  07E3  30F0               	movlw	240
 12216  07E4  00C6               	movwf	70	;volatile
 12217                           
 12218                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12219  07E5  30FF               	movlw	255
 12220  07E6  00D1               	movwf	81	;volatile
 12221                           
 12222                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12223  07E7  3005               	movlw	5
 12224  07E8  017D               	movlb	61	; select bank61
 12225  07E9  00C5               	movwf	69	;volatile
 12226                           
 12227                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12228  07EA  3014               	movlw	20
 12229  07EB  017E               	movlb	62	; select bank62
 12230  07EC  0094               	movwf	20	;volatile
 12231                           
 12232                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12233  07ED  300B               	movlw	11
 12234  07EE  00A3               	movwf	35	;volatile
 12235                           
 12236                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12237  07EF  300C               	movlw	12
 12238  07F0  00A4               	movwf	36	;volatile
 12239                           
 12240                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12241  07F1  3013               	movlw	19
 12242  07F2  0095               	movwf	21	;volatile
 12243                           
 12244                           ;mcc_generated_files/pin_manager.c: 111:     RC5PPS = 0x09;
 12245  07F3  3009               	movlw	9
 12246  07F4  00A5               	movwf	37	;volatile
 12247                           
 12248                           ;mcc_generated_files/pin_manager.c: 112:     RC6PPS = 0x0A;
 12249  07F5  300A               	movlw	10
 12250  07F6  00A6               	movwf	38	;volatile
 12251                           
 12252                           ;mcc_generated_files/pin_manager.c: 113:     RC7PPS = 0x09;
 12253  07F7  3009               	movlw	9
 12254  07F8  00A7               	movwf	39	;volatile
 12255                           
 12256                           ;mcc_generated_files/pin_manager.c: 114:     SSP1DATPPS = 0x04;
 12257  07F9  3004               	movlw	4
 12258  07FA  017D               	movlb	61	; select bank61
 12259  07FB  00C6               	movwf	70	;volatile
 12260                           
 12261                           ;mcc_generated_files/pin_manager.c: 115:     RX1DTPPS = 0x0C;
 12262  07FC  300C               	movlw	12
 12263  07FD  00CB               	movwf	75	;volatile
 12264  07FE  0008               	return
 12265  07FF                     __end_of_PIN_MANAGER_Initialize:	
 12266                           
 12267                           	psect	text11
 12268  1ED0                     __ptext11:	
 12269 ;; *************** function _OSCILLATOR_Initialize *****************
 12270 ;; Defined at:
 12271 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;		None
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;		None
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  1    wreg      void 
 12278 ;; Registers used:
 12279 ;;		wreg, status,2
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12289 ;;Total ram usage:        0 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; Hardware stack levels required when called:    4
 12292 ;; This function calls:
 12293 ;;		Nothing
 12294 ;; This function is called by:
 12295 ;;		_SYSTEM_Initialize
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           
 12300                           ;psect for function _OSCILLATOR_Initialize
 12301  1ED0                     _OSCILLATOR_Initialize:	
 12302                           
 12303                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12304                           
 12305                           ;incstack = 0
 12306                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12307  1ED0  3060               	movlw	96
 12308  1ED1  0151               	movlb	17	; select bank17
 12309  1ED2  008D               	movwf	13	;volatile
 12310                           
 12311                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12312  1ED3  018F               	clrf	15	;volatile
 12313                           
 12314                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12315  1ED4  0191               	clrf	17	;volatile
 12316                           
 12317                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12318  1ED5  3006               	movlw	6
 12319  1ED6  0093               	movwf	19	;volatile
 12320                           
 12321                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12322  1ED7  0192               	clrf	18	;volatile
 12323  1ED8  0008               	return
 12324  1ED9                     __end_of_OSCILLATOR_Initialize:	
 12325                           
 12326                           	psect	text12
 12327  1091                     __ptext12:	
 12328 ;; *************** function _I2C1_Initialize *****************
 12329 ;; Defined at:
 12330 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12331 ;; Parameters:    Size  Location     Type
 12332 ;;		None
 12333 ;; Auto vars:     Size  Location     Type
 12334 ;;		None
 12335 ;; Return value:  Size  Location     Type
 12336 ;;                  1    wreg      void 
 12337 ;; Registers used:
 12338 ;;		wreg, status,2
 12339 ;; Tracked objects:
 12340 ;;		On entry : 0/0
 12341 ;;		On exit  : 0/0
 12342 ;;		Unchanged: 0/0
 12343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12347 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12348 ;;Total ram usage:        1 bytes
 12349 ;; Hardware stack levels used:    1
 12350 ;; Hardware stack levels required when called:    4
 12351 ;; This function calls:
 12352 ;;		Nothing
 12353 ;; This function is called by:
 12354 ;;		_SYSTEM_Initialize
 12355 ;; This function uses a non-reentrant model
 12356 ;;
 12357                           
 12358                           
 12359                           ;psect for function _I2C1_Initialize
 12360  1091                     _I2C1_Initialize:	
 12361                           
 12362                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12363                           
 12364                           ;incstack = 0
 12365                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12366  1091  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12367  1092  0140               	movlb	0	; select bank0
 12368  1093  00A0               	movwf	??_I2C1_Initialize
 12369  1094  0820               	movf	??_I2C1_Initialize,w
 12370  1095  0141               	movlb	1	; select bank1
 12371  1096  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12372                           
 12373                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12374  1097  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12375  1098  0140               	movlb	0	; select bank0
 12376  1099  00A0               	movwf	??_I2C1_Initialize
 12377  109A  0820               	movf	??_I2C1_Initialize,w
 12378  109B  0141               	movlb	1	; select bank1
 12379  109C  00A0               	movwf	_i2c1_object^(0+128)
 12380                           
 12381                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12382  109D  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12383                           
 12384                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12385  109E  1022               	bcf	(_i2c1_object^(0+128)+2),0
 12386                           
 12387                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12388  109F  01A4               	clrf	(_i2c1_object^(0+128)+4)
 12389                           
 12390                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12391  10A0  0143               	movlb	3	; select bank3
 12392  10A1  018F               	clrf	15	;volatile
 12393                           
 12394                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12395  10A2  3028               	movlw	40
 12396  10A3  0090               	movwf	16	;volatile
 12397                           
 12398                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12399  10A4  0192               	clrf	18	;volatile
 12400                           
 12401                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12402  10A5  304F               	movlw	79
 12403  10A6  008D               	movwf	13	;volatile
 12404                           
 12405                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12406  10A7  014E               	movlb	14	; select bank14
 12407  10A8  100F               	bcf	15,0	;volatile
 12408                           
 12409                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12410  10A9  108F               	bcf	15,1	;volatile
 12411                           
 12412                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12413  10AA  1419               	bsf	25,0	;volatile
 12414                           
 12415                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12416  10AB  1499               	bsf	25,1	;volatile
 12417  10AC  0008               	return
 12418  10AD                     __end_of_I2C1_Initialize:	
 12419                           
 12420                           	psect	text13
 12421  1363                     __ptext13:	
 12422 ;; *************** function _EUSART1_Initialize *****************
 12423 ;; Defined at:
 12424 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;		None
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;		None
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  1    wreg      void 
 12431 ;; Registers used:
 12432 ;;		wreg, status,2, status,0, pclath, cstack
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12442 ;;Total ram usage:        0 bytes
 12443 ;; Hardware stack levels used:    1
 12444 ;; Hardware stack levels required when called:    5
 12445 ;; This function calls:
 12446 ;;		_EUSART1_SetErrorHandler
 12447 ;;		_EUSART1_SetFramingErrorHandler
 12448 ;;		_EUSART1_SetOverrunErrorHandler
 12449 ;;		_EUSART1_SetRxInterruptHandler
 12450 ;; This function is called by:
 12451 ;;		_SYSTEM_Initialize
 12452 ;; This function uses a non-reentrant model
 12453 ;;
 12454                           
 12455                           
 12456                           ;psect for function _EUSART1_Initialize
 12457  1363                     _EUSART1_Initialize:	
 12458                           
 12459                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12460                           
 12461                           ;incstack = 0
 12462                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12463  1363  014E               	movlb	14	; select bank14
 12464  1364  1299               	bcf	25,5	;volatile
 12465                           
 12466                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12467  1365  3096               	movlw	low _EUSART1_Receive_ISR
 12468  1366  0140               	movlb	0	; select bank0
 12469  1367  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12470  1368  3013               	movlw	high _EUSART1_Receive_ISR
 12471  1369  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12472  136A  319E  26AC  3193   	fcall	_EUSART1_SetRxInterruptHandler
 12473                           
 12474                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12475  136D  3008               	movlw	8
 12476  136E  0142               	movlb	2	; select bank2
 12477  136F  009F               	movwf	31	;volatile
 12478                           
 12479                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12480  1370  3090               	movlw	144
 12481  1371  009D               	movwf	29	;volatile
 12482                           
 12483                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12484  1372  3004               	movlw	4
 12485  1373  009E               	movwf	30	;volatile
 12486                           
 12487                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12488  1374  301F               	movlw	31
 12489  1375  009B               	movwf	27	;volatile
 12490                           
 12491                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12492  1376  019C               	clrf	28	;volatile
 12493                           
 12494                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12495  1377  3002               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12496  1378  0140               	movlb	0	; select bank0
 12497  1379  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12498  137A  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12499  137B  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12500  137C  319E  26BE  3193   	fcall	_EUSART1_SetFramingErrorHandler
 12501                           
 12502                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12503  137F  3068               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12504  1380  0140               	movlb	0	; select bank0
 12505  1381  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12506  1382  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12507  1383  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12508  1384  319E  26C7  3193   	fcall	_EUSART1_SetOverrunErrorHandler
 12509                           
 12510                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12511  1387  305C               	movlw	low _EUSART1_DefaultErrorHandler
 12512  1388  0140               	movlb	0	; select bank0
 12513  1389  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12514  138A  301E               	movlw	high _EUSART1_DefaultErrorHandler
 12515  138B  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12516  138C  319E  26B5         	fcall	_EUSART1_SetErrorHandler
 12517                           
 12518                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12519  138E  0141               	movlb	1	; select bank1
 12520  138F  01CC               	clrf	_eusart1RxLastError^(0+128)	;volatile
 12521                           
 12522                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12523  1390  01F4               	clrf	_eusart1RxHead	;volatile
 12524                           
 12525                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12526  1391  01F3               	clrf	_eusart1RxTail	;volatile
 12527                           
 12528                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12529  1392  01CD               	clrf	_eusart1RxCount^(0+128)	;volatile
 12530                           
 12531                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12532  1393  014E               	movlb	14	; select bank14
 12533  1394  1699               	bsf	25,5	;volatile
 12534  1395  0008               	return
 12535  1396                     __end_of_EUSART1_Initialize:	
 12536                           
 12537                           	psect	text14
 12538  1EC7                     __ptext14:	
 12539 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12540 ;; Defined at:
 12541 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12544 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12545 ;; Auto vars:     Size  Location     Type
 12546 ;;		None
 12547 ;; Return value:  Size  Location     Type
 12548 ;;                  1    wreg      void 
 12549 ;; Registers used:
 12550 ;;		wreg
 12551 ;; Tracked objects:
 12552 ;;		On entry : 0/0
 12553 ;;		On exit  : 0/0
 12554 ;;		Unchanged: 0/0
 12555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12556 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12559 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12560 ;;Total ram usage:        2 bytes
 12561 ;; Hardware stack levels used:    1
 12562 ;; Hardware stack levels required when called:    4
 12563 ;; This function calls:
 12564 ;;		Nothing
 12565 ;; This function is called by:
 12566 ;;		_EUSART1_Initialize
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           
 12571                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12572  1EC7                     _EUSART1_SetOverrunErrorHandler:	
 12573                           
 12574                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12575                           
 12576                           ;incstack = 0
 12577                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12578  1EC7  0140               	movlb	0	; select bank0
 12579  1EC8  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12580  1EC9  0142               	movlb	2	; select bank2
 12581  1ECA  00CB               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12582  1ECB  0140               	movlb	0	; select bank0
 12583  1ECC  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12584  1ECD  0142               	movlb	2	; select bank2
 12585  1ECE  00CA               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12586  1ECF  0008               	return
 12587  1ED0                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12588                           
 12589                           	psect	text15
 12590  1EBE                     __ptext15:	
 12591 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12592 ;; Defined at:
 12593 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12594 ;; Parameters:    Size  Location     Type
 12595 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12596 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12597 ;; Auto vars:     Size  Location     Type
 12598 ;;		None
 12599 ;; Return value:  Size  Location     Type
 12600 ;;                  1    wreg      void 
 12601 ;; Registers used:
 12602 ;;		wreg
 12603 ;; Tracked objects:
 12604 ;;		On entry : 0/0
 12605 ;;		On exit  : 0/0
 12606 ;;		Unchanged: 0/0
 12607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12608 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12611 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12612 ;;Total ram usage:        2 bytes
 12613 ;; Hardware stack levels used:    1
 12614 ;; Hardware stack levels required when called:    4
 12615 ;; This function calls:
 12616 ;;		Nothing
 12617 ;; This function is called by:
 12618 ;;		_EUSART1_Initialize
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           
 12623                           ;psect for function _EUSART1_SetFramingErrorHandler
 12624  1EBE                     _EUSART1_SetFramingErrorHandler:	
 12625                           
 12626                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12627                           
 12628                           ;incstack = 0
 12629                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12630  1EBE  0140               	movlb	0	; select bank0
 12631  1EBF  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12632  1EC0  0142               	movlb	2	; select bank2
 12633  1EC1  00CD               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12634  1EC2  0140               	movlb	0	; select bank0
 12635  1EC3  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12636  1EC4  0142               	movlb	2	; select bank2
 12637  1EC5  00CC               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12638  1EC6  0008               	return
 12639  1EC7                     __end_of_EUSART1_SetFramingErrorHandler:	
 12640                           
 12641                           	psect	text16
 12642  1EB5                     __ptext16:	
 12643 ;; *************** function _EUSART1_SetErrorHandler *****************
 12644 ;; Defined at:
 12645 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12648 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12649 ;; Auto vars:     Size  Location     Type
 12650 ;;		None
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  1    wreg      void 
 12653 ;; Registers used:
 12654 ;;		wreg
 12655 ;; Tracked objects:
 12656 ;;		On entry : 0/0
 12657 ;;		On exit  : 0/0
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12663 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12664 ;;Total ram usage:        2 bytes
 12665 ;; Hardware stack levels used:    1
 12666 ;; Hardware stack levels required when called:    4
 12667 ;; This function calls:
 12668 ;;		Nothing
 12669 ;; This function is called by:
 12670 ;;		_EUSART1_Initialize
 12671 ;; This function uses a non-reentrant model
 12672 ;;
 12673                           
 12674                           
 12675                           ;psect for function _EUSART1_SetErrorHandler
 12676  1EB5                     _EUSART1_SetErrorHandler:	
 12677                           
 12678                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 12679                           
 12680                           ;incstack = 0
 12681                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 12682  1EB5  0140               	movlb	0	; select bank0
 12683  1EB6  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 12684  1EB7  0142               	movlb	2	; select bank2
 12685  1EB8  00C9               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 12686  1EB9  0140               	movlb	0	; select bank0
 12687  1EBA  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 12688  1EBB  0142               	movlb	2	; select bank2
 12689  1EBC  00C8               	movwf	_EUSART1_ErrorHandler^(0+256)
 12690  1EBD  0008               	return
 12691  1EBE                     __end_of_EUSART1_SetErrorHandler:	
 12692                           
 12693                           	psect	text17
 12694  1256                     __ptext17:	
 12695 ;; *************** function _ADCC_Initialize *****************
 12696 ;; Defined at:
 12697 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12698 ;; Parameters:    Size  Location     Type
 12699 ;;		None
 12700 ;; Auto vars:     Size  Location     Type
 12701 ;;		None
 12702 ;; Return value:  Size  Location     Type
 12703 ;;                  1    wreg      void 
 12704 ;; Registers used:
 12705 ;;		wreg, status,2, status,0, pclath, cstack
 12706 ;; Tracked objects:
 12707 ;;		On entry : 0/0
 12708 ;;		On exit  : 0/0
 12709 ;;		Unchanged: 0/0
 12710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12715 ;;Total ram usage:        0 bytes
 12716 ;; Hardware stack levels used:    1
 12717 ;; Hardware stack levels required when called:    5
 12718 ;; This function calls:
 12719 ;;		_ADCC_SetADTIInterruptHandler
 12720 ;; This function is called by:
 12721 ;;		_SYSTEM_Initialize
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725                           
 12726                           ;psect for function _ADCC_Initialize
 12727  1256                     _ADCC_Initialize:	
 12728                           
 12729                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12730                           
 12731                           ;incstack = 0
 12732                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12733  1256  0141               	movlb	1	; select bank1
 12734  1257  018C               	clrf	12	;volatile
 12735                           
 12736                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12737  1258  018D               	clrf	13	;volatile
 12738                           
 12739                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12740  1259  018E               	clrf	14	;volatile
 12741                           
 12742                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12743  125A  018F               	clrf	15	;volatile
 12744                           
 12745                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12746  125B  0192               	clrf	18	;volatile
 12747                           
 12748                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12749  125C  0193               	clrf	19	;volatile
 12750                           
 12751                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12752  125D  0198               	clrf	24	;volatile
 12753                           
 12754                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12755  125E  019A               	clrf	26	;volatile
 12756                           
 12757                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12758  125F  019F               	clrf	31	;volatile
 12759                           
 12760                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12761  1260  0142               	movlb	2	; select bank2
 12762  1261  018C               	clrf	12	;volatile
 12763                           
 12764                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12765  1262  018D               	clrf	13	;volatile
 12766                           
 12767                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12768  1263  018E               	clrf	14	;volatile
 12769                           
 12770                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12771  1264  018F               	clrf	15	;volatile
 12772                           
 12773                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12774  1265  0190               	clrf	16	;volatile
 12775                           
 12776                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12777  1266  0192               	clrf	18	;volatile
 12778                           
 12779                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 12780  1267  3054               	movlw	84
 12781  1268  0093               	movwf	19	;volatile
 12782                           
 12783                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 12784  1269  3056               	movlw	86
 12785  126A  0094               	movwf	20	;volatile
 12786                           
 12787                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12788  126B  0195               	clrf	21	;volatile
 12789                           
 12790                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 12791  126C  0196               	clrf	22	;volatile
 12792                           
 12793                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12794  126D  0197               	clrf	23	;volatile
 12795                           
 12796                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12797  126E  0198               	clrf	24	;volatile
 12798                           
 12799                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 12800  126F  30D4               	movlw	212
 12801  1270  0091               	movwf	17	;volatile
 12802                           
 12803                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 12804  1271  014E               	movlb	14	; select bank14
 12805  1272  108D               	bcf	13,1	;volatile
 12806                           
 12807                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 12808  1273  1497               	bsf	23,1	;volatile
 12809                           
 12810                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 12811  1274  3058               	movlw	low _ADCC_DefaultInterruptHandler
 12812  1275  0140               	movlb	0	; select bank0
 12813  1276  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 12814  1277  301E               	movlw	high _ADCC_DefaultInterruptHandler
 12815  1278  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 12816  1279  319E  267F         	fcall	_ADCC_SetADTIInterruptHandler
 12817  127B  0008               	return
 12818  127C                     __end_of_ADCC_Initialize:	
 12819                           
 12820                           	psect	text18
 12821  1182                     __ptext18:	
 12822 ;; *************** function _LED_task *****************
 12823 ;; Defined at:
 12824 ;;		line 40 in file "led.c"
 12825 ;; Parameters:    Size  Location     Type
 12826 ;;		None
 12827 ;; Auto vars:     Size  Location     Type
 12828 ;;		None
 12829 ;; Return value:  Size  Location     Type
 12830 ;;                  1    wreg      void 
 12831 ;; Registers used:
 12832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12833 ;; Tracked objects:
 12834 ;;		On entry : 0/0
 12835 ;;		On exit  : 0/0
 12836 ;;		Unchanged: 0/0
 12837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12840 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12841 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12842 ;;Total ram usage:        2 bytes
 12843 ;; Hardware stack levels used:    1
 12844 ;; Hardware stack levels required when called:    8
 12845 ;; This function calls:
 12846 ;;		_LED_task_ANIMATION
 12847 ;;		_LED_task_BEAT
 12848 ;;		_LED_task_DMX
 12849 ;;		_getMode
 12850 ;; This function is called by:
 12851 ;;		_main
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           
 12856                           ;psect for function _LED_task
 12857  1182                     _LED_task:	
 12858                           
 12859                           ;led.c: 42:     switch(getMode()){
 12860                           
 12861                           ;incstack = 0
 12862                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12863  1182  298C               	goto	l6752
 12864  1183                     l6744:	
 12865                           
 12866                           ;led.c: 44:             LED_task_DMX();
 12867  1183  3195  25BC         	fcall	_LED_task_DMX
 12868                           
 12869                           ;led.c: 45:             break;
 12870  1185  0008               	return
 12871  1186                     l6746:	
 12872                           
 12873                           ;led.c: 48:             LED_task_BEAT();
 12874  1186  3180  2084         	fcall	_LED_task_BEAT
 12875                           
 12876                           ;led.c: 49:             break;
 12877  1188  0008               	return
 12878  1189                     l6748:	
 12879                           
 12880                           ;led.c: 52:             LED_task_ANIMATION();
 12881  1189  3187  27FF         	fcall	_LED_task_ANIMATION
 12882                           
 12883                           ;led.c: 53:             break;
 12884  118B  0008               	return
 12885  118C                     l6752:	
 12886  118C  319E  2665  3191   	fcall	_getMode
 12887  118F  0141               	movlb	1	; select bank1
 12888  1190  00E2               	movwf	??_LED_task^(0+128)
 12889  1191  01E3               	clrf	(??_LED_task^(0+128)+1)
 12890                           
 12891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12892                           ; Switch size 1, requested type "simple"
 12893                           ; Number of cases is 1, Range of values is 0 to 0
 12894                           ; switch strategies available:
 12895                           ; Name         Instructions Cycles
 12896                           ; simple_byte            4     3 (average)
 12897                           ; direct_byte            8     6 (fixed)
 12898                           ; jumptable            260     6 (fixed)
 12899                           ;	Chosen strategy is simple_byte
 12900  1192  0863               	movf	(??_LED_task+1)^(0+128),w
 12901  1193  3A00               	xorlw	0	; case 0
 12902  1194  1903               	skipnz
 12903  1195  2997               	goto	l6920
 12904  1196  29A2               	goto	l1269
 12905  1197                     l6920:	
 12906                           
 12907                           ; Switch size 1, requested type "simple"
 12908                           ; Number of cases is 3, Range of values is 0 to 2
 12909                           ; switch strategies available:
 12910                           ; Name         Instructions Cycles
 12911                           ; simple_byte           10     6 (average)
 12912                           ; direct_byte           12     6 (fixed)
 12913                           ; jumptable            260     6 (fixed)
 12914                           ;	Chosen strategy is simple_byte
 12915  1197  0862               	movf	??_LED_task^(0+128),w
 12916  1198  3A00               	xorlw	0	; case 0
 12917  1199  1903               	skipnz
 12918  119A  2989               	goto	l6748
 12919  119B  3A01               	xorlw	1	; case 1
 12920  119C  1903               	skipnz
 12921  119D  2986               	goto	l6746
 12922  119E  3A03               	xorlw	3	; case 2
 12923  119F  1903               	skipnz
 12924  11A0  2983               	goto	l6744
 12925  11A1  29A2               	goto	l1269
 12926  11A2                     l1269:	
 12927  11A2  0008               	return
 12928  11A3                     __end_of_LED_task:	
 12929                           
 12930                           	psect	text19
 12931  1E65                     __ptext19:	
 12932 ;; *************** function _getMode *****************
 12933 ;; Defined at:
 12934 ;;		line 118 in file "controller.c"
 12935 ;; Parameters:    Size  Location     Type
 12936 ;;		None
 12937 ;; Auto vars:     Size  Location     Type
 12938 ;;		None
 12939 ;; Return value:  Size  Location     Type
 12940 ;;                  1    wreg      enum E10869
 12941 ;; Registers used:
 12942 ;;		wreg
 12943 ;; Tracked objects:
 12944 ;;		On entry : 0/0
 12945 ;;		On exit  : 0/0
 12946 ;;		Unchanged: 0/0
 12947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12952 ;;Total ram usage:        0 bytes
 12953 ;; Hardware stack levels used:    1
 12954 ;; Hardware stack levels required when called:    4
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		_LED_task
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962                           
 12963                           ;psect for function _getMode
 12964  1E65                     _getMode:	
 12965                           
 12966                           ;controller.c: 119:     return currentSelection;
 12967                           
 12968                           ;incstack = 0
 12969                           ; Regs used in _getMode: [wreg]
 12970  1E65  0141               	movlb	1	; select bank1
 12971  1E66  086C               	movf	_currentSelection^(0+128),w
 12972  1E67  0008               	return
 12973  1E68                     __end_of_getMode:	
 12974                           
 12975                           	psect	text20
 12976  15BC                     __ptext20:	
 12977 ;; *************** function _LED_task_DMX *****************
 12978 ;; Defined at:
 12979 ;;		line 28 in file "led.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;		None
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;  dmx             4   13[BANK1 ] struct .
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1    wreg      void 
 12986 ;; Registers used:
 12987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12994 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12995 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12996 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12997 ;;Total ram usage:        9 bytes
 12998 ;; Hardware stack levels used:    1
 12999 ;; Hardware stack levels required when called:    7
 13000 ;; This function calls:
 13001 ;;		_DMX_getAddress
 13002 ;;		_LED_setColor
 13003 ;; This function is called by:
 13004 ;;		_LED_task
 13005 ;; This function uses a non-reentrant model
 13006 ;;
 13007                           
 13008                           
 13009                           ;psect for function _LED_task_DMX
 13010  15BC                     _LED_task_DMX:	
 13011                           
 13012                           ;led.c: 30:     color_t dmx;;led.c: 31:     dmx.red = dmxArray[DMX_getAddress()];
 13013                           
 13014                           ;incstack = 0
 13015                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13016  15BC  319E  2662  3195   	fcall	_DMX_getAddress
 13017  15BF  0141               	movlb	1	; select bank1
 13018  15C0  00D9               	movwf	??_LED_task_DMX^(0+128)
 13019  15C1  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 13020  15C2  35D9               	lslf	??_LED_task_DMX^(0+128),f
 13021  15C3  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13022  15C4  30EE               	movlw	238
 13023  15C5  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 13024  15C6  3023               	movlw	35
 13025  15C7  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13026  15C8  0859               	movf	??_LED_task_DMX^(0+128),w
 13027  15C9  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13028  15CA  0086               	movwf	6
 13029  15CB  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 13030  15CC  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13031  15CD  0087               	movwf	7
 13032  15CE  0801               	movf	1,w
 13033  15CF  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 13034  15D0  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 13035  15D1  00DF               	movwf	(LED_task_DMX@dmx^(0+128)+1)
 13036                           
 13037                           ;led.c: 32:     dmx.green = dmxArray[DMX_getAddress() + 1];
 13038  15D2  319E  2662  3195   	fcall	_DMX_getAddress
 13039  15D5  0141               	movlb	1	; select bank1
 13040  15D6  00D9               	movwf	??_LED_task_DMX^(0+128)
 13041  15D7  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 13042  15D8  35D9               	lslf	??_LED_task_DMX^(0+128),f
 13043  15D9  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13044  15DA  30F0               	movlw	240
 13045  15DB  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 13046  15DC  3023               	movlw	35
 13047  15DD  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13048  15DE  0859               	movf	??_LED_task_DMX^(0+128),w
 13049  15DF  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13050  15E0  0086               	movwf	6
 13051  15E1  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 13052  15E2  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13053  15E3  0087               	movwf	7
 13054  15E4  0801               	movf	1,w
 13055  15E5  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 13056  15E6  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 13057  15E7  00E0               	movwf	(LED_task_DMX@dmx^(0+128)+2)
 13058                           
 13059                           ;led.c: 33:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 13060  15E8  319E  2662  3195   	fcall	_DMX_getAddress
 13061  15EB  0141               	movlb	1	; select bank1
 13062  15EC  00D9               	movwf	??_LED_task_DMX^(0+128)
 13063  15ED  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 13064  15EE  35D9               	lslf	??_LED_task_DMX^(0+128),f
 13065  15EF  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13066  15F0  30F2               	movlw	242
 13067  15F1  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 13068  15F2  3023               	movlw	35
 13069  15F3  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13070  15F4  0859               	movf	??_LED_task_DMX^(0+128),w
 13071  15F5  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13072  15F6  0086               	movwf	6
 13073  15F7  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 13074  15F8  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13075  15F9  0087               	movwf	7
 13076  15FA  0801               	movf	1,w
 13077  15FB  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 13078  15FC  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 13079  15FD  00E1               	movwf	(LED_task_DMX@dmx^(0+128)+3)
 13080                           
 13081                           ;led.c: 34:     dmx.white = dmxArray[DMX_getAddress() + 3];
 13082  15FE  319E  2662  3195   	fcall	_DMX_getAddress
 13083  1601  0141               	movlb	1	; select bank1
 13084  1602  00D9               	movwf	??_LED_task_DMX^(0+128)
 13085  1603  01DA               	clrf	(??_LED_task_DMX^(0+128)+1)
 13086  1604  35D9               	lslf	??_LED_task_DMX^(0+128),f
 13087  1605  0DDA               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13088  1606  30F4               	movlw	244
 13089  1607  00DB               	movwf	(??_LED_task_DMX+2)^(0+128)
 13090  1608  3023               	movlw	35
 13091  1609  00DC               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13092  160A  0859               	movf	??_LED_task_DMX^(0+128),w
 13093  160B  075B               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13094  160C  0086               	movwf	6
 13095  160D  085A               	movf	(??_LED_task_DMX+1)^(0+128),w
 13096  160E  3D5C               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13097  160F  0087               	movwf	7
 13098  1610  0801               	movf	1,w
 13099  1611  00DD               	movwf	(??_LED_task_DMX+4)^(0+128)
 13100  1612  085D               	movf	(??_LED_task_DMX+4)^(0+128),w
 13101  1613  00DE               	movwf	LED_task_DMX@dmx^(0+128)
 13102                           
 13103                           ;led.c: 36:     LED_setColor(dmx);
 13104  1614  0861               	movf	(LED_task_DMX@dmx+3)^(0+128),w
 13105  1615  00D4               	movwf	(LED_setColor@input+3)^(0+128)
 13106  1616  0860               	movf	(LED_task_DMX@dmx+2)^(0+128),w
 13107  1617  00D3               	movwf	(LED_setColor@input+2)^(0+128)
 13108  1618  085F               	movf	(LED_task_DMX@dmx+1)^(0+128),w
 13109  1619  00D2               	movwf	(LED_setColor@input+1)^(0+128)
 13110  161A  085E               	movf	LED_task_DMX@dmx^(0+128),w
 13111  161B  00D1               	movwf	LED_setColor@input^(0+128)
 13112  161C  318D  2532         	fcall	_LED_setColor
 13113  161E  0008               	return
 13114  161F                     __end_of_LED_task_DMX:	
 13115                           
 13116                           	psect	text21
 13117  0D32                     __ptext21:	
 13118 ;; *************** function _LED_setColor *****************
 13119 ;; Defined at:
 13120 ;;		line 21 in file "led.c"
 13121 ;; Parameters:    Size  Location     Type
 13122 ;;  input           4    0[BANK1 ] struct .
 13123 ;; Auto vars:     Size  Location     Type
 13124 ;;		None
 13125 ;; Return value:  Size  Location     Type
 13126 ;;                  1    wreg      void 
 13127 ;; Registers used:
 13128 ;;		wreg, status,2, status,0, pclath, cstack
 13129 ;; Tracked objects:
 13130 ;;		On entry : 0/0
 13131 ;;		On exit  : 0/0
 13132 ;;		Unchanged: 0/0
 13133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13134 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13136 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13137 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13138 ;;Total ram usage:        8 bytes
 13139 ;; Hardware stack levels used:    1
 13140 ;; Hardware stack levels required when called:    6
 13141 ;; This function calls:
 13142 ;;		_PWM1_LoadDutyValue
 13143 ;;		_PWM2_LoadDutyValue
 13144 ;;		_PWM3_LoadDutyValue
 13145 ;;		_PWM4_LoadDutyValue
 13146 ;;		___fldiv
 13147 ;;		___flmul
 13148 ;;		___fltol
 13149 ;;		___xxtofl
 13150 ;; This function is called by:
 13151 ;;		_LED_task_DMX
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155                           
 13156                           ;psect for function _LED_setColor
 13157  0D32                     _LED_setColor:	
 13158                           
 13159                           ;led.c: 22:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 120 );
 13160                           
 13161                           ;incstack = 0
 13162                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 13163  0D32  0141               	movlb	1	; select bank1
 13164  0D33  0852               	movf	(LED_setColor@input^(0+128)+1),w
 13165  0D34  00D5               	movwf	??_LED_setColor^(0+128)
 13166  0D35  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 13167  0D36  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 13168  0D37  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 13169  0D38  0858               	movf	(??_LED_setColor+3)^(0+128),w
 13170  0D39  0140               	movlb	0	; select bank0
 13171  0D3A  00A3               	movwf	___xxtofl@val+3
 13172  0D3B  0141               	movlb	1	; select bank1
 13173  0D3C  0857               	movf	(??_LED_setColor+2)^(0+128),w
 13174  0D3D  0140               	movlb	0	; select bank0
 13175  0D3E  00A2               	movwf	___xxtofl@val+2
 13176  0D3F  0141               	movlb	1	; select bank1
 13177  0D40  0856               	movf	(??_LED_setColor+1)^(0+128),w
 13178  0D41  0140               	movlb	0	; select bank0
 13179  0D42  00A1               	movwf	___xxtofl@val+1
 13180  0D43  0141               	movlb	1	; select bank1
 13181  0D44  0855               	movf	??_LED_setColor^(0+128),w
 13182  0D45  0140               	movlb	0	; select bank0
 13183  0D46  00A0               	movwf	___xxtofl@val
 13184  0D47  3001               	movlw	1
 13185  0D48  3196  261F  318D   	fcall	___xxtofl
 13186  0D4B  0140               	movlb	0	; select bank0
 13187  0D4C  0823               	movf	?___xxtofl+3,w
 13188  0D4D  00B5               	movwf	___fldiv@b+3
 13189  0D4E  0822               	movf	?___xxtofl+2,w
 13190  0D4F  00B4               	movwf	___fldiv@b+2
 13191  0D50  0821               	movf	?___xxtofl+1,w
 13192  0D51  00B3               	movwf	___fldiv@b+1
 13193  0D52  0820               	movf	?___xxtofl,w
 13194  0D53  00B2               	movwf	___fldiv@b
 13195  0D54  3043               	movlw	67
 13196  0D55  00B1               	movwf	___fldiv@a+3
 13197  0D56  307F               	movlw	127
 13198  0D57  00B0               	movwf	___fldiv@a+2
 13199  0D58  3000               	movlw	0
 13200  0D59  00AF               	movwf	___fldiv@a+1
 13201  0D5A  3000               	movlw	0
 13202  0D5B  00AE               	movwf	___fldiv@a
 13203  0D5C  318E  2686  318D   	fcall	___fldiv
 13204  0D5F  0140               	movlb	0	; select bank0
 13205  0D60  0831               	movf	?___fldiv+3,w
 13206  0D61  00CF               	movwf	___flmul@a+3
 13207  0D62  0830               	movf	?___fldiv+2,w
 13208  0D63  00CE               	movwf	___flmul@a+2
 13209  0D64  082F               	movf	?___fldiv+1,w
 13210  0D65  00CD               	movwf	___flmul@a+1
 13211  0D66  082E               	movf	?___fldiv,w
 13212  0D67  00CC               	movwf	___flmul@a
 13213  0D68  3042               	movlw	66
 13214  0D69  00CB               	movwf	___flmul@b+3
 13215  0D6A  30F0               	movlw	240
 13216  0D6B  00CA               	movwf	___flmul@b+2
 13217  0D6C  3000               	movlw	0
 13218  0D6D  00C9               	movwf	___flmul@b+1
 13219  0D6E  3000               	movlw	0
 13220  0D6F  00C8               	movwf	___flmul@b
 13221  0D70  3185  259E  318D   	fcall	___flmul
 13222  0D73  0140               	movlb	0	; select bank0
 13223  0D74  084B               	movf	?___flmul+3,w
 13224  0D75  00E5               	movwf	___fltol@f1+3
 13225  0D76  084A               	movf	?___flmul+2,w
 13226  0D77  00E4               	movwf	___fltol@f1+2
 13227  0D78  0849               	movf	?___flmul+1,w
 13228  0D79  00E3               	movwf	___fltol@f1+1
 13229  0D7A  0848               	movf	?___flmul,w
 13230  0D7B  00E2               	movwf	___fltol@f1
 13231  0D7C  3188  2018  318D   	fcall	___fltol
 13232  0D7F  0140               	movlb	0	; select bank0
 13233  0D80  0863               	movf	?___fltol+1,w
 13234  0D81  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13235  0D82  0862               	movf	?___fltol,w
 13236  0D83  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13237  0D84  3190  20CA  318D   	fcall	_PWM1_LoadDutyValue
 13238                           
 13239                           ;led.c: 23:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 120 );
 13240  0D87  0141               	movlb	1	; select bank1
 13241  0D88  0853               	movf	(LED_setColor@input^(0+128)+2),w
 13242  0D89  00D5               	movwf	??_LED_setColor^(0+128)
 13243  0D8A  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 13244  0D8B  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 13245  0D8C  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 13246  0D8D  0858               	movf	(??_LED_setColor+3)^(0+128),w
 13247  0D8E  0140               	movlb	0	; select bank0
 13248  0D8F  00A3               	movwf	___xxtofl@val+3
 13249  0D90  0141               	movlb	1	; select bank1
 13250  0D91  0857               	movf	(??_LED_setColor+2)^(0+128),w
 13251  0D92  0140               	movlb	0	; select bank0
 13252  0D93  00A2               	movwf	___xxtofl@val+2
 13253  0D94  0141               	movlb	1	; select bank1
 13254  0D95  0856               	movf	(??_LED_setColor+1)^(0+128),w
 13255  0D96  0140               	movlb	0	; select bank0
 13256  0D97  00A1               	movwf	___xxtofl@val+1
 13257  0D98  0141               	movlb	1	; select bank1
 13258  0D99  0855               	movf	??_LED_setColor^(0+128),w
 13259  0D9A  0140               	movlb	0	; select bank0
 13260  0D9B  00A0               	movwf	___xxtofl@val
 13261  0D9C  3001               	movlw	1
 13262  0D9D  3196  261F  318D   	fcall	___xxtofl
 13263  0DA0  0140               	movlb	0	; select bank0
 13264  0DA1  0823               	movf	?___xxtofl+3,w
 13265  0DA2  00B5               	movwf	___fldiv@b+3
 13266  0DA3  0822               	movf	?___xxtofl+2,w
 13267  0DA4  00B4               	movwf	___fldiv@b+2
 13268  0DA5  0821               	movf	?___xxtofl+1,w
 13269  0DA6  00B3               	movwf	___fldiv@b+1
 13270  0DA7  0820               	movf	?___xxtofl,w
 13271  0DA8  00B2               	movwf	___fldiv@b
 13272  0DA9  3043               	movlw	67
 13273  0DAA  00B1               	movwf	___fldiv@a+3
 13274  0DAB  307F               	movlw	127
 13275  0DAC  00B0               	movwf	___fldiv@a+2
 13276  0DAD  3000               	movlw	0
 13277  0DAE  00AF               	movwf	___fldiv@a+1
 13278  0DAF  3000               	movlw	0
 13279  0DB0  00AE               	movwf	___fldiv@a
 13280  0DB1  318E  2686  318D   	fcall	___fldiv
 13281  0DB4  0140               	movlb	0	; select bank0
 13282  0DB5  0831               	movf	?___fldiv+3,w
 13283  0DB6  00CF               	movwf	___flmul@a+3
 13284  0DB7  0830               	movf	?___fldiv+2,w
 13285  0DB8  00CE               	movwf	___flmul@a+2
 13286  0DB9  082F               	movf	?___fldiv+1,w
 13287  0DBA  00CD               	movwf	___flmul@a+1
 13288  0DBB  082E               	movf	?___fldiv,w
 13289  0DBC  00CC               	movwf	___flmul@a
 13290  0DBD  3042               	movlw	66
 13291  0DBE  00CB               	movwf	___flmul@b+3
 13292  0DBF  30F0               	movlw	240
 13293  0DC0  00CA               	movwf	___flmul@b+2
 13294  0DC1  3000               	movlw	0
 13295  0DC2  00C9               	movwf	___flmul@b+1
 13296  0DC3  3000               	movlw	0
 13297  0DC4  00C8               	movwf	___flmul@b
 13298  0DC5  3185  259E  318D   	fcall	___flmul
 13299  0DC8  0140               	movlb	0	; select bank0
 13300  0DC9  084B               	movf	?___flmul+3,w
 13301  0DCA  00E5               	movwf	___fltol@f1+3
 13302  0DCB  084A               	movf	?___flmul+2,w
 13303  0DCC  00E4               	movwf	___fltol@f1+2
 13304  0DCD  0849               	movf	?___flmul+1,w
 13305  0DCE  00E3               	movwf	___fltol@f1+1
 13306  0DCF  0848               	movf	?___flmul,w
 13307  0DD0  00E2               	movwf	___fltol@f1
 13308  0DD1  3188  2018  318D   	fcall	___fltol
 13309  0DD4  0140               	movlb	0	; select bank0
 13310  0DD5  0863               	movf	?___fltol+1,w
 13311  0DD6  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13312  0DD7  0862               	movf	?___fltol,w
 13313  0DD8  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 13314  0DD9  3190  20E8  318D   	fcall	_PWM2_LoadDutyValue
 13315                           
 13316                           ;led.c: 24:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 120 );
 13317  0DDC  0141               	movlb	1	; select bank1
 13318  0DDD  0854               	movf	(LED_setColor@input^(0+128)+3),w
 13319  0DDE  00D5               	movwf	??_LED_setColor^(0+128)
 13320  0DDF  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 13321  0DE0  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 13322  0DE1  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 13323  0DE2  0858               	movf	(??_LED_setColor+3)^(0+128),w
 13324  0DE3  0140               	movlb	0	; select bank0
 13325  0DE4  00A3               	movwf	___xxtofl@val+3
 13326  0DE5  0141               	movlb	1	; select bank1
 13327  0DE6  0857               	movf	(??_LED_setColor+2)^(0+128),w
 13328  0DE7  0140               	movlb	0	; select bank0
 13329  0DE8  00A2               	movwf	___xxtofl@val+2
 13330  0DE9  0141               	movlb	1	; select bank1
 13331  0DEA  0856               	movf	(??_LED_setColor+1)^(0+128),w
 13332  0DEB  0140               	movlb	0	; select bank0
 13333  0DEC  00A1               	movwf	___xxtofl@val+1
 13334  0DED  0141               	movlb	1	; select bank1
 13335  0DEE  0855               	movf	??_LED_setColor^(0+128),w
 13336  0DEF  0140               	movlb	0	; select bank0
 13337  0DF0  00A0               	movwf	___xxtofl@val
 13338  0DF1  3001               	movlw	1
 13339  0DF2  3196  261F  318D   	fcall	___xxtofl
 13340  0DF5  0140               	movlb	0	; select bank0
 13341  0DF6  0823               	movf	?___xxtofl+3,w
 13342  0DF7  00B5               	movwf	___fldiv@b+3
 13343  0DF8  0822               	movf	?___xxtofl+2,w
 13344  0DF9  00B4               	movwf	___fldiv@b+2
 13345  0DFA  0821               	movf	?___xxtofl+1,w
 13346  0DFB  00B3               	movwf	___fldiv@b+1
 13347  0DFC  0820               	movf	?___xxtofl,w
 13348  0DFD  00B2               	movwf	___fldiv@b
 13349  0DFE  3043               	movlw	67
 13350  0DFF  00B1               	movwf	___fldiv@a+3
 13351  0E00  307F               	movlw	127
 13352  0E01  00B0               	movwf	___fldiv@a+2
 13353  0E02  3000               	movlw	0
 13354  0E03  00AF               	movwf	___fldiv@a+1
 13355  0E04  3000               	movlw	0
 13356  0E05  00AE               	movwf	___fldiv@a
 13357  0E06  318E  2686  318D   	fcall	___fldiv
 13358  0E09  0140               	movlb	0	; select bank0
 13359  0E0A  0831               	movf	?___fldiv+3,w
 13360  0E0B  00CF               	movwf	___flmul@a+3
 13361  0E0C  0830               	movf	?___fldiv+2,w
 13362  0E0D  00CE               	movwf	___flmul@a+2
 13363  0E0E  082F               	movf	?___fldiv+1,w
 13364  0E0F  00CD               	movwf	___flmul@a+1
 13365  0E10  082E               	movf	?___fldiv,w
 13366  0E11  00CC               	movwf	___flmul@a
 13367  0E12  3042               	movlw	66
 13368  0E13  00CB               	movwf	___flmul@b+3
 13369  0E14  30F0               	movlw	240
 13370  0E15  00CA               	movwf	___flmul@b+2
 13371  0E16  3000               	movlw	0
 13372  0E17  00C9               	movwf	___flmul@b+1
 13373  0E18  3000               	movlw	0
 13374  0E19  00C8               	movwf	___flmul@b
 13375  0E1A  3185  259E  318D   	fcall	___flmul
 13376  0E1D  0140               	movlb	0	; select bank0
 13377  0E1E  084B               	movf	?___flmul+3,w
 13378  0E1F  00E5               	movwf	___fltol@f1+3
 13379  0E20  084A               	movf	?___flmul+2,w
 13380  0E21  00E4               	movwf	___fltol@f1+2
 13381  0E22  0849               	movf	?___flmul+1,w
 13382  0E23  00E3               	movwf	___fltol@f1+1
 13383  0E24  0848               	movf	?___flmul,w
 13384  0E25  00E2               	movwf	___fltol@f1
 13385  0E26  3188  2018  318D   	fcall	___fltol
 13386  0E29  0140               	movlb	0	; select bank0
 13387  0E2A  0863               	movf	?___fltol+1,w
 13388  0E2B  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 13389  0E2C  0862               	movf	?___fltol,w
 13390  0E2D  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 13391  0E2E  3191  2106  318D   	fcall	_PWM3_LoadDutyValue
 13392                           
 13393                           ;led.c: 25:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 120 );
 13394  0E31  0141               	movlb	1	; select bank1
 13395  0E32  0851               	movf	LED_setColor@input^(0+128),w
 13396  0E33  00D5               	movwf	??_LED_setColor^(0+128)
 13397  0E34  01D6               	clrf	(??_LED_setColor^(0+128)+1)
 13398  0E35  01D7               	clrf	(??_LED_setColor^(0+128)+2)
 13399  0E36  01D8               	clrf	(??_LED_setColor^(0+128)+3)
 13400  0E37  0858               	movf	(??_LED_setColor+3)^(0+128),w
 13401  0E38  0140               	movlb	0	; select bank0
 13402  0E39  00A3               	movwf	___xxtofl@val+3
 13403  0E3A  0141               	movlb	1	; select bank1
 13404  0E3B  0857               	movf	(??_LED_setColor+2)^(0+128),w
 13405  0E3C  0140               	movlb	0	; select bank0
 13406  0E3D  00A2               	movwf	___xxtofl@val+2
 13407  0E3E  0141               	movlb	1	; select bank1
 13408  0E3F  0856               	movf	(??_LED_setColor+1)^(0+128),w
 13409  0E40  0140               	movlb	0	; select bank0
 13410  0E41  00A1               	movwf	___xxtofl@val+1
 13411  0E42  0141               	movlb	1	; select bank1
 13412  0E43  0855               	movf	??_LED_setColor^(0+128),w
 13413  0E44  0140               	movlb	0	; select bank0
 13414  0E45  00A0               	movwf	___xxtofl@val
 13415  0E46  3001               	movlw	1
 13416  0E47  3196  261F  318D   	fcall	___xxtofl
 13417  0E4A  0140               	movlb	0	; select bank0
 13418  0E4B  0823               	movf	?___xxtofl+3,w
 13419  0E4C  00B5               	movwf	___fldiv@b+3
 13420  0E4D  0822               	movf	?___xxtofl+2,w
 13421  0E4E  00B4               	movwf	___fldiv@b+2
 13422  0E4F  0821               	movf	?___xxtofl+1,w
 13423  0E50  00B3               	movwf	___fldiv@b+1
 13424  0E51  0820               	movf	?___xxtofl,w
 13425  0E52  00B2               	movwf	___fldiv@b
 13426  0E53  3043               	movlw	67
 13427  0E54  00B1               	movwf	___fldiv@a+3
 13428  0E55  307F               	movlw	127
 13429  0E56  00B0               	movwf	___fldiv@a+2
 13430  0E57  3000               	movlw	0
 13431  0E58  00AF               	movwf	___fldiv@a+1
 13432  0E59  3000               	movlw	0
 13433  0E5A  00AE               	movwf	___fldiv@a
 13434  0E5B  318E  2686  318D   	fcall	___fldiv
 13435  0E5E  0140               	movlb	0	; select bank0
 13436  0E5F  0831               	movf	?___fldiv+3,w
 13437  0E60  00CF               	movwf	___flmul@a+3
 13438  0E61  0830               	movf	?___fldiv+2,w
 13439  0E62  00CE               	movwf	___flmul@a+2
 13440  0E63  082F               	movf	?___fldiv+1,w
 13441  0E64  00CD               	movwf	___flmul@a+1
 13442  0E65  082E               	movf	?___fldiv,w
 13443  0E66  00CC               	movwf	___flmul@a
 13444  0E67  3042               	movlw	66
 13445  0E68  00CB               	movwf	___flmul@b+3
 13446  0E69  30F0               	movlw	240
 13447  0E6A  00CA               	movwf	___flmul@b+2
 13448  0E6B  3000               	movlw	0
 13449  0E6C  00C9               	movwf	___flmul@b+1
 13450  0E6D  3000               	movlw	0
 13451  0E6E  00C8               	movwf	___flmul@b
 13452  0E6F  3185  259E  318D   	fcall	___flmul
 13453  0E72  0140               	movlb	0	; select bank0
 13454  0E73  084B               	movf	?___flmul+3,w
 13455  0E74  00E5               	movwf	___fltol@f1+3
 13456  0E75  084A               	movf	?___flmul+2,w
 13457  0E76  00E4               	movwf	___fltol@f1+2
 13458  0E77  0849               	movf	?___flmul+1,w
 13459  0E78  00E3               	movwf	___fltol@f1+1
 13460  0E79  0848               	movf	?___flmul,w
 13461  0E7A  00E2               	movwf	___fltol@f1
 13462  0E7B  3188  2018  318D   	fcall	___fltol
 13463  0E7E  0140               	movlb	0	; select bank0
 13464  0E7F  0863               	movf	?___fltol+1,w
 13465  0E80  00EE               	movwf	PWM4_LoadDutyValue@dutyValue+1
 13466  0E81  0862               	movf	?___fltol,w
 13467  0E82  00ED               	movwf	PWM4_LoadDutyValue@dutyValue
 13468  0E83  3191  2124         	fcall	_PWM4_LoadDutyValue
 13469  0E85  0008               	return
 13470  0E86                     __end_of_LED_setColor:	
 13471                           
 13472                           	psect	text22
 13473  1E62                     __ptext22:	
 13474 ;; *************** function _DMX_getAddress *****************
 13475 ;; Defined at:
 13476 ;;		line 73 in file "dmx.c"
 13477 ;; Parameters:    Size  Location     Type
 13478 ;;		None
 13479 ;; Auto vars:     Size  Location     Type
 13480 ;;		None
 13481 ;; Return value:  Size  Location     Type
 13482 ;;                  1    wreg      unsigned char 
 13483 ;; Registers used:
 13484 ;;		wreg
 13485 ;; Tracked objects:
 13486 ;;		On entry : 0/0
 13487 ;;		On exit  : 0/0
 13488 ;;		Unchanged: 0/0
 13489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13494 ;;Total ram usage:        0 bytes
 13495 ;; Hardware stack levels used:    1
 13496 ;; Hardware stack levels required when called:    4
 13497 ;; This function calls:
 13498 ;;		Nothing
 13499 ;; This function is called by:
 13500 ;;		_LED_task_DMX
 13501 ;; This function uses a non-reentrant model
 13502 ;;
 13503                           
 13504                           
 13505                           ;psect for function _DMX_getAddress
 13506  1E62                     _DMX_getAddress:	
 13507                           
 13508                           ;dmx.c: 74:     return address;
 13509                           
 13510                           ;incstack = 0
 13511                           ; Regs used in _DMX_getAddress: [wreg]
 13512  1E62  0141               	movlb	1	; select bank1
 13513  1E63  086A               	movf	_address^(0+128),w
 13514  1E64  0008               	return
 13515  1E65                     __end_of_DMX_getAddress:	
 13516                           
 13517                           	psect	text23
 13518  0084                     __ptext23:	
 13519 ;; *************** function _LED_task_BEAT *****************
 13520 ;; Defined at:
 13521 ;;		line 58 in file "led.c"
 13522 ;; Parameters:    Size  Location     Type
 13523 ;;		None
 13524 ;; Auto vars:     Size  Location     Type
 13525 ;;  temp            2    4[BANK1 ] volatile int 
 13526 ;; Return value:  Size  Location     Type
 13527 ;;                  1    wreg      void 
 13528 ;; Registers used:
 13529 ;;		wreg, status,2, status,0, pclath, cstack
 13530 ;; Tracked objects:
 13531 ;;		On entry : 0/0
 13532 ;;		On exit  : 0/0
 13533 ;;		Unchanged: 0/0
 13534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13536 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13537 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13538 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13539 ;;Total ram usage:        6 bytes
 13540 ;; Hardware stack levels used:    1
 13541 ;; Hardware stack levels required when called:    6
 13542 ;; This function calls:
 13543 ;;		_CLOCK_getTime
 13544 ;;		_PWM1_LoadDutyValue
 13545 ;;		_PWM2_LoadDutyValue
 13546 ;;		_PWM3_LoadDutyValue
 13547 ;;		_PWM4_LoadDutyValue
 13548 ;;		___fldiv
 13549 ;;		___flmul
 13550 ;;		___fltol
 13551 ;;		___xxtofl
 13552 ;; This function is called by:
 13553 ;;		_LED_task
 13554 ;; This function uses a non-reentrant model
 13555 ;;
 13556                           
 13557                           
 13558                           ;psect for function _LED_task_BEAT
 13559  0084                     _LED_task_BEAT:	
 13560                           
 13561                           ;led.c: 60:     if(CLOCK_getTime() - lastLedActiveTime < 100){
 13562                           
 13563                           ;incstack = 0
 13564                           ; Regs used in _LED_task_BEAT: [wreg+status,2+status,0+pclath+cstack]
 13565  0084  319E  269A  3180   	fcall	_CLOCK_getTime
 13566  0087  0142               	movlb	2	; select bank2
 13567  0088  0834               	movf	_lastLedActiveTime^(0+256),w
 13568  0089  0140               	movlb	0	; select bank0
 13569  008A  0220               	subwf	?_CLOCK_getTime,w
 13570  008B  0141               	movlb	1	; select bank1
 13571  008C  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13572  008D  0142               	movlb	2	; select bank2
 13573  008E  0835               	movf	(_lastLedActiveTime+1)^(0+256),w
 13574  008F  0140               	movlb	0	; select bank0
 13575  0090  3B21               	subwfb	?_CLOCK_getTime+1,w
 13576  0091  0141               	movlb	1	; select bank1
 13577  0092  00D2               	movwf	(??_LED_task_BEAT+1)^(0+128)
 13578  0093  3000               	movlw	0
 13579  0094  0252               	subwf	(??_LED_task_BEAT+1)^(0+128),w
 13580  0095  3064               	movlw	100
 13581  0096  1903               	skipnz
 13582  0097  0251               	subwf	??_LED_task_BEAT^(0+128),w
 13583  0098  1C03               	btfss	3,0
 13584  0099  0008               	return
 13585                           
 13586                           ;led.c: 64:     volatile int temp = (float)(beatBrightness/9.0) * 120;
 13587  009A  086F               	movf	_beatBrightness^(0+128),w
 13588  009B  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13589  009C  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 13590  009D  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 13591  009E  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 13592  009F  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 13593  00A0  0140               	movlb	0	; select bank0
 13594  00A1  00A3               	movwf	___xxtofl@val+3
 13595  00A2  0141               	movlb	1	; select bank1
 13596  00A3  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 13597  00A4  0140               	movlb	0	; select bank0
 13598  00A5  00A2               	movwf	___xxtofl@val+2
 13599  00A6  0141               	movlb	1	; select bank1
 13600  00A7  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 13601  00A8  0140               	movlb	0	; select bank0
 13602  00A9  00A1               	movwf	___xxtofl@val+1
 13603  00AA  0141               	movlb	1	; select bank1
 13604  00AB  0851               	movf	??_LED_task_BEAT^(0+128),w
 13605  00AC  0140               	movlb	0	; select bank0
 13606  00AD  00A0               	movwf	___xxtofl@val
 13607  00AE  3001               	movlw	1
 13608  00AF  3196  261F  3180   	fcall	___xxtofl
 13609  00B2  0140               	movlb	0	; select bank0
 13610  00B3  0823               	movf	?___xxtofl+3,w
 13611  00B4  00B5               	movwf	___fldiv@b+3
 13612  00B5  0822               	movf	?___xxtofl+2,w
 13613  00B6  00B4               	movwf	___fldiv@b+2
 13614  00B7  0821               	movf	?___xxtofl+1,w
 13615  00B8  00B3               	movwf	___fldiv@b+1
 13616  00B9  0820               	movf	?___xxtofl,w
 13617  00BA  00B2               	movwf	___fldiv@b
 13618  00BB  3041               	movlw	65
 13619  00BC  00B1               	movwf	___fldiv@a+3
 13620  00BD  3010               	movlw	16
 13621  00BE  00B0               	movwf	___fldiv@a+2
 13622  00BF  3000               	movlw	0
 13623  00C0  00AF               	movwf	___fldiv@a+1
 13624  00C1  3000               	movlw	0
 13625  00C2  00AE               	movwf	___fldiv@a
 13626  00C3  318E  2686  3180   	fcall	___fldiv
 13627  00C6  0140               	movlb	0	; select bank0
 13628  00C7  0831               	movf	?___fldiv+3,w
 13629  00C8  00CF               	movwf	___flmul@a+3
 13630  00C9  0830               	movf	?___fldiv+2,w
 13631  00CA  00CE               	movwf	___flmul@a+2
 13632  00CB  082F               	movf	?___fldiv+1,w
 13633  00CC  00CD               	movwf	___flmul@a+1
 13634  00CD  082E               	movf	?___fldiv,w
 13635  00CE  00CC               	movwf	___flmul@a
 13636  00CF  3042               	movlw	66
 13637  00D0  00CB               	movwf	___flmul@b+3
 13638  00D1  30F0               	movlw	240
 13639  00D2  00CA               	movwf	___flmul@b+2
 13640  00D3  3000               	movlw	0
 13641  00D4  00C9               	movwf	___flmul@b+1
 13642  00D5  3000               	movlw	0
 13643  00D6  00C8               	movwf	___flmul@b
 13644  00D7  3185  259E  3180   	fcall	___flmul
 13645  00DA  0140               	movlb	0	; select bank0
 13646  00DB  084B               	movf	?___flmul+3,w
 13647  00DC  00E5               	movwf	___fltol@f1+3
 13648  00DD  084A               	movf	?___flmul+2,w
 13649  00DE  00E4               	movwf	___fltol@f1+2
 13650  00DF  0849               	movf	?___flmul+1,w
 13651  00E0  00E3               	movwf	___fltol@f1+1
 13652  00E1  0848               	movf	?___flmul,w
 13653  00E2  00E2               	movwf	___fltol@f1
 13654  00E3  3188  2018  3180   	fcall	___fltol
 13655  00E6  0140               	movlb	0	; select bank0
 13656  00E7  0863               	movf	?___fltol+1,w
 13657  00E8  0141               	movlb	1	; select bank1
 13658  00E9  00D6               	movwf	(LED_task_BEAT@temp+1)^(0+128)	;volatile
 13659  00EA  0140               	movlb	0	; select bank0
 13660  00EB  0862               	movf	?___fltol,w
 13661  00EC  0141               	movlb	1	; select bank1
 13662  00ED  00D5               	movwf	LED_task_BEAT@temp^(0+128)	;volatile
 13663                           
 13664                           ;led.c: 66:     lastLedActiveTime = CLOCK_getTime();
 13665  00EE  319E  269A  3180   	fcall	_CLOCK_getTime
 13666  00F1  0140               	movlb	0	; select bank0
 13667  00F2  0821               	movf	?_CLOCK_getTime+1,w
 13668  00F3  0142               	movlb	2	; select bank2
 13669  00F4  00B5               	movwf	(_lastLedActiveTime+1)^(0+256)
 13670  00F5  0140               	movlb	0	; select bank0
 13671  00F6  0820               	movf	?_CLOCK_getTime,w
 13672  00F7  0142               	movlb	2	; select bank2
 13673  00F8  00B4               	movwf	_lastLedActiveTime^(0+256)
 13674                           
 13675                           ;led.c: 68:     if (currentState == 1){
 13676  00F9  0141               	movlb	1	; select bank1
 13677  00FA  0329               	decf	_currentState^(0+128),w
 13678  00FB  042A               	iorwf	(_currentState+1)^(0+128),w
 13679  00FC  1D03               	btfss	3,2
 13680  00FD  2C28               	goto	l6464
 13681                           
 13682                           ;led.c: 69:         PWM1_LoadDutyValue( (float)(beatBrightness/9.0) * 120);
 13683  00FE  086F               	movf	_beatBrightness^(0+128),w
 13684  00FF  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13685  0100  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 13686  0101  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 13687  0102  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 13688  0103  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 13689  0104  0140               	movlb	0	; select bank0
 13690  0105  00A3               	movwf	___xxtofl@val+3
 13691  0106  0141               	movlb	1	; select bank1
 13692  0107  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 13693  0108  0140               	movlb	0	; select bank0
 13694  0109  00A2               	movwf	___xxtofl@val+2
 13695  010A  0141               	movlb	1	; select bank1
 13696  010B  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 13697  010C  0140               	movlb	0	; select bank0
 13698  010D  00A1               	movwf	___xxtofl@val+1
 13699  010E  0141               	movlb	1	; select bank1
 13700  010F  0851               	movf	??_LED_task_BEAT^(0+128),w
 13701  0110  0140               	movlb	0	; select bank0
 13702  0111  00A0               	movwf	___xxtofl@val
 13703  0112  3001               	movlw	1
 13704  0113  3196  261F  3180   	fcall	___xxtofl
 13705  0116  0140               	movlb	0	; select bank0
 13706  0117  0823               	movf	?___xxtofl+3,w
 13707  0118  00B5               	movwf	___fldiv@b+3
 13708  0119  0822               	movf	?___xxtofl+2,w
 13709  011A  00B4               	movwf	___fldiv@b+2
 13710  011B  0821               	movf	?___xxtofl+1,w
 13711  011C  00B3               	movwf	___fldiv@b+1
 13712  011D  0820               	movf	?___xxtofl,w
 13713  011E  00B2               	movwf	___fldiv@b
 13714  011F  3041               	movlw	65
 13715  0120  00B1               	movwf	___fldiv@a+3
 13716  0121  3010               	movlw	16
 13717  0122  00B0               	movwf	___fldiv@a+2
 13718  0123  3000               	movlw	0
 13719  0124  00AF               	movwf	___fldiv@a+1
 13720  0125  3000               	movlw	0
 13721  0126  00AE               	movwf	___fldiv@a
 13722  0127  318E  2686  3180   	fcall	___fldiv
 13723  012A  0140               	movlb	0	; select bank0
 13724  012B  0831               	movf	?___fldiv+3,w
 13725  012C  00CF               	movwf	___flmul@a+3
 13726  012D  0830               	movf	?___fldiv+2,w
 13727  012E  00CE               	movwf	___flmul@a+2
 13728  012F  082F               	movf	?___fldiv+1,w
 13729  0130  00CD               	movwf	___flmul@a+1
 13730  0131  082E               	movf	?___fldiv,w
 13731  0132  00CC               	movwf	___flmul@a
 13732  0133  3042               	movlw	66
 13733  0134  00CB               	movwf	___flmul@b+3
 13734  0135  30F0               	movlw	240
 13735  0136  00CA               	movwf	___flmul@b+2
 13736  0137  3000               	movlw	0
 13737  0138  00C9               	movwf	___flmul@b+1
 13738  0139  3000               	movlw	0
 13739  013A  00C8               	movwf	___flmul@b
 13740  013B  3185  259E  3180   	fcall	___flmul
 13741  013E  0140               	movlb	0	; select bank0
 13742  013F  084B               	movf	?___flmul+3,w
 13743  0140  00E5               	movwf	___fltol@f1+3
 13744  0141  084A               	movf	?___flmul+2,w
 13745  0142  00E4               	movwf	___fltol@f1+2
 13746  0143  0849               	movf	?___flmul+1,w
 13747  0144  00E3               	movwf	___fltol@f1+1
 13748  0145  0848               	movf	?___flmul,w
 13749  0146  00E2               	movwf	___fltol@f1
 13750  0147  3188  2018  3180   	fcall	___fltol
 13751  014A  0140               	movlb	0	; select bank0
 13752  014B  0863               	movf	?___fltol+1,w
 13753  014C  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13754  014D  0862               	movf	?___fltol,w
 13755  014E  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13756  014F  3190  20CA  3180   	fcall	_PWM1_LoadDutyValue
 13757                           
 13758                           ;led.c: 70:         PWM2_LoadDutyValue(0);
 13759  0152  3000               	movlw	0
 13760  0153  0140               	movlb	0	; select bank0
 13761  0154  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 13762  0155  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13763  0156  3190  20E8  3180   	fcall	_PWM2_LoadDutyValue
 13764                           
 13765                           ;led.c: 71:         PWM3_LoadDutyValue(0);
 13766  0159  3000               	movlw	0
 13767  015A  0140               	movlb	0	; select bank0
 13768  015B  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 13769  015C  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 13770  015D  2ABC               	goto	L10
 13771  015E                     l6466:	
 13772                           ;led.c: 72:         PWM4_LoadDutyValue(0);
 13773                           
 13774                           
 13775                           ;led.c: 75:         PWM1_LoadDutyValue(0);
 13776  015E  3000               	movlw	0
 13777  015F  0140               	movlb	0	; select bank0
 13778  0160  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13779  0161  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13780  0162  2A12               	goto	L7
 13781  0163                     l6472:	
 13782                           ;led.c: 78:         PWM4_LoadDutyValue(0);
 13783                           
 13784                           ;led.c: 77:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13785                           
 13786                           ;led.c: 76:         PWM2_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13787                           
 13788                           
 13789                           ;led.c: 81:         PWM1_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13790  0163  086F               	movf	_beatBrightness^(0+128),w
 13791  0164  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13792  0165  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 13793  0166  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 13794  0167  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 13795  0168  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 13796  0169  0140               	movlb	0	; select bank0
 13797  016A  00A3               	movwf	___xxtofl@val+3
 13798  016B  0141               	movlb	1	; select bank1
 13799  016C  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 13800  016D  0140               	movlb	0	; select bank0
 13801  016E  00A2               	movwf	___xxtofl@val+2
 13802  016F  0141               	movlb	1	; select bank1
 13803  0170  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 13804  0171  0140               	movlb	0	; select bank0
 13805  0172  00A1               	movwf	___xxtofl@val+1
 13806  0173  0141               	movlb	1	; select bank1
 13807  0174  0851               	movf	??_LED_task_BEAT^(0+128),w
 13808  0175  0140               	movlb	0	; select bank0
 13809  0176  00A0               	movwf	___xxtofl@val
 13810  0177  3001               	movlw	1
 13811  0178  3196  261F  3180   	fcall	___xxtofl
 13812  017B  0140               	movlb	0	; select bank0
 13813  017C  0823               	movf	?___xxtofl+3,w
 13814  017D  00B5               	movwf	___fldiv@b+3
 13815  017E  0822               	movf	?___xxtofl+2,w
 13816  017F  00B4               	movwf	___fldiv@b+2
 13817  0180  0821               	movf	?___xxtofl+1,w
 13818  0181  00B3               	movwf	___fldiv@b+1
 13819  0182  0820               	movf	?___xxtofl,w
 13820  0183  00B2               	movwf	___fldiv@b
 13821  0184  3041               	movlw	65
 13822  0185  00B1               	movwf	___fldiv@a+3
 13823  0186  3010               	movlw	16
 13824  0187  00B0               	movwf	___fldiv@a+2
 13825  0188  3000               	movlw	0
 13826  0189  00AF               	movwf	___fldiv@a+1
 13827  018A  3000               	movlw	0
 13828  018B  00AE               	movwf	___fldiv@a
 13829  018C  318E  2686  3180   	fcall	___fldiv
 13830  018F  0140               	movlb	0	; select bank0
 13831  0190  0831               	movf	?___fldiv+3,w
 13832  0191  00CF               	movwf	___flmul@a+3
 13833  0192  0830               	movf	?___fldiv+2,w
 13834  0193  00CE               	movwf	___flmul@a+2
 13835  0194  082F               	movf	?___fldiv+1,w
 13836  0195  00CD               	movwf	___flmul@a+1
 13837  0196  082E               	movf	?___fldiv,w
 13838  0197  00CC               	movwf	___flmul@a
 13839  0198  3042               	movlw	66
 13840  0199  00CB               	movwf	___flmul@b+3
 13841  019A  30F0               	movlw	240
 13842  019B  00CA               	movwf	___flmul@b+2
 13843  019C  3000               	movlw	0
 13844  019D  00C9               	movwf	___flmul@b+1
 13845  019E  3000               	movlw	0
 13846  019F  00C8               	movwf	___flmul@b
 13847  01A0  3185  259E  3180   	fcall	___flmul
 13848  01A3  0140               	movlb	0	; select bank0
 13849  01A4  084B               	movf	?___flmul+3,w
 13850  01A5  00E5               	movwf	___fltol@f1+3
 13851  01A6  084A               	movf	?___flmul+2,w
 13852  01A7  00E4               	movwf	___fltol@f1+2
 13853  01A8  0849               	movf	?___flmul+1,w
 13854  01A9  00E3               	movwf	___fltol@f1+1
 13855  01AA  0848               	movf	?___flmul,w
 13856  01AB  00E2               	movwf	___fltol@f1
 13857  01AC  3188  2018  3180   	fcall	___fltol
 13858  01AF  0140               	movlb	0	; select bank0
 13859  01B0  0863               	movf	?___fltol+1,w
 13860  01B1  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13861  01B2  0862               	movf	?___fltol,w
 13862  01B3  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13863  01B4  3190  20CA  3180   	fcall	_PWM1_LoadDutyValue
 13864                           
 13865                           ;led.c: 82:         PWM2_LoadDutyValue(0);
 13866  01B7  3000               	movlw	0
 13867  01B8  0140               	movlb	0	; select bank0
 13868  01B9  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 13869  01BA  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 13870  01BB  2A67               	goto	L8
 13871  01BC                     l6478:	
 13872                           ;led.c: 84:         PWM4_LoadDutyValue(0);
 13873                           
 13874                           ;led.c: 83:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13875                           
 13876                           
 13877                           ;led.c: 87:         PWM1_LoadDutyValue(0);
 13878  01BC  3000               	movlw	0
 13879  01BD  0140               	movlb	0	; select bank0
 13880  01BE  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13881  01BF  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13882  01C0  2B15               	goto	L9
 13883  01C1                     l6484:	
 13884                           ;led.c: 90:         PWM4_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13885                           
 13886                           ;led.c: 89:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13887                           
 13888                           ;led.c: 88:         PWM2_LoadDutyValue(0);
 13889                           
 13890                           
 13891                           ;led.c: 93:         PWM1_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13892  01C1  086F               	movf	_beatBrightness^(0+128),w
 13893  01C2  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13894  01C3  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 13895  01C4  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 13896  01C5  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 13897  01C6  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 13898  01C7  0140               	movlb	0	; select bank0
 13899  01C8  00A3               	movwf	___xxtofl@val+3
 13900  01C9  0141               	movlb	1	; select bank1
 13901  01CA  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 13902  01CB  0140               	movlb	0	; select bank0
 13903  01CC  00A2               	movwf	___xxtofl@val+2
 13904  01CD  0141               	movlb	1	; select bank1
 13905  01CE  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 13906  01CF  0140               	movlb	0	; select bank0
 13907  01D0  00A1               	movwf	___xxtofl@val+1
 13908  01D1  0141               	movlb	1	; select bank1
 13909  01D2  0851               	movf	??_LED_task_BEAT^(0+128),w
 13910  01D3  0140               	movlb	0	; select bank0
 13911  01D4  00A0               	movwf	___xxtofl@val
 13912  01D5  3001               	movlw	1
 13913  01D6  3196  261F  3180   	fcall	___xxtofl
 13914  01D9  0140               	movlb	0	; select bank0
 13915  01DA  0823               	movf	?___xxtofl+3,w
 13916  01DB  00B5               	movwf	___fldiv@b+3
 13917  01DC  0822               	movf	?___xxtofl+2,w
 13918  01DD  00B4               	movwf	___fldiv@b+2
 13919  01DE  0821               	movf	?___xxtofl+1,w
 13920  01DF  00B3               	movwf	___fldiv@b+1
 13921  01E0  0820               	movf	?___xxtofl,w
 13922  01E1  00B2               	movwf	___fldiv@b
 13923  01E2  3041               	movlw	65
 13924  01E3  00B1               	movwf	___fldiv@a+3
 13925  01E4  3010               	movlw	16
 13926  01E5  00B0               	movwf	___fldiv@a+2
 13927  01E6  3000               	movlw	0
 13928  01E7  00AF               	movwf	___fldiv@a+1
 13929  01E8  3000               	movlw	0
 13930  01E9  00AE               	movwf	___fldiv@a
 13931  01EA  318E  2686  3180   	fcall	___fldiv
 13932  01ED  0140               	movlb	0	; select bank0
 13933  01EE  0831               	movf	?___fldiv+3,w
 13934  01EF  00CF               	movwf	___flmul@a+3
 13935  01F0  0830               	movf	?___fldiv+2,w
 13936  01F1  00CE               	movwf	___flmul@a+2
 13937  01F2  082F               	movf	?___fldiv+1,w
 13938  01F3  00CD               	movwf	___flmul@a+1
 13939  01F4  082E               	movf	?___fldiv,w
 13940  01F5  00CC               	movwf	___flmul@a
 13941  01F6  3042               	movlw	66
 13942  01F7  00CB               	movwf	___flmul@b+3
 13943  01F8  30F0               	movlw	240
 13944  01F9  00CA               	movwf	___flmul@b+2
 13945  01FA  3000               	movlw	0
 13946  01FB  00C9               	movwf	___flmul@b+1
 13947  01FC  3000               	movlw	0
 13948  01FD  00C8               	movwf	___flmul@b
 13949  01FE  3185  259E  3180   	fcall	___flmul
 13950  0201  0140               	movlb	0	; select bank0
 13951  0202  084B               	movf	?___flmul+3,w
 13952  0203  00E5               	movwf	___fltol@f1+3
 13953  0204  084A               	movf	?___flmul+2,w
 13954  0205  00E4               	movwf	___fltol@f1+2
 13955  0206  0849               	movf	?___flmul+1,w
 13956  0207  00E3               	movwf	___fltol@f1+1
 13957  0208  0848               	movf	?___flmul,w
 13958  0209  00E2               	movwf	___fltol@f1
 13959  020A  3188  2018  3180   	fcall	___fltol
 13960  020D  0140               	movlb	0	; select bank0
 13961  020E  0863               	movf	?___fltol+1,w
 13962  020F  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 13963  0210  0862               	movf	?___fltol,w
 13964  0211  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 13965  0212                     L7:	
 13966  0212  3190  20CA  3180   	fcall	_PWM1_LoadDutyValue
 13967                           
 13968                           ;led.c: 94:         PWM2_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 13969  0215  0141               	movlb	1	; select bank1
 13970  0216  086F               	movf	_beatBrightness^(0+128),w
 13971  0217  00D1               	movwf	??_LED_task_BEAT^(0+128)
 13972  0218  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 13973  0219  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 13974  021A  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 13975  021B  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 13976  021C  0140               	movlb	0	; select bank0
 13977  021D  00A3               	movwf	___xxtofl@val+3
 13978  021E  0141               	movlb	1	; select bank1
 13979  021F  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 13980  0220  0140               	movlb	0	; select bank0
 13981  0221  00A2               	movwf	___xxtofl@val+2
 13982  0222  0141               	movlb	1	; select bank1
 13983  0223  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 13984  0224  0140               	movlb	0	; select bank0
 13985  0225  00A1               	movwf	___xxtofl@val+1
 13986  0226  0141               	movlb	1	; select bank1
 13987  0227  0851               	movf	??_LED_task_BEAT^(0+128),w
 13988  0228  0140               	movlb	0	; select bank0
 13989  0229  00A0               	movwf	___xxtofl@val
 13990  022A  3001               	movlw	1
 13991  022B  3196  261F  3180   	fcall	___xxtofl
 13992  022E  0140               	movlb	0	; select bank0
 13993  022F  0823               	movf	?___xxtofl+3,w
 13994  0230  00B5               	movwf	___fldiv@b+3
 13995  0231  0822               	movf	?___xxtofl+2,w
 13996  0232  00B4               	movwf	___fldiv@b+2
 13997  0233  0821               	movf	?___xxtofl+1,w
 13998  0234  00B3               	movwf	___fldiv@b+1
 13999  0235  0820               	movf	?___xxtofl,w
 14000  0236  00B2               	movwf	___fldiv@b
 14001  0237  3041               	movlw	65
 14002  0238  00B1               	movwf	___fldiv@a+3
 14003  0239  3010               	movlw	16
 14004  023A  00B0               	movwf	___fldiv@a+2
 14005  023B  3000               	movlw	0
 14006  023C  00AF               	movwf	___fldiv@a+1
 14007  023D  3000               	movlw	0
 14008  023E  00AE               	movwf	___fldiv@a
 14009  023F  318E  2686  3180   	fcall	___fldiv
 14010  0242  0140               	movlb	0	; select bank0
 14011  0243  0831               	movf	?___fldiv+3,w
 14012  0244  00CF               	movwf	___flmul@a+3
 14013  0245  0830               	movf	?___fldiv+2,w
 14014  0246  00CE               	movwf	___flmul@a+2
 14015  0247  082F               	movf	?___fldiv+1,w
 14016  0248  00CD               	movwf	___flmul@a+1
 14017  0249  082E               	movf	?___fldiv,w
 14018  024A  00CC               	movwf	___flmul@a
 14019  024B  3042               	movlw	66
 14020  024C  00CB               	movwf	___flmul@b+3
 14021  024D  30F0               	movlw	240
 14022  024E  00CA               	movwf	___flmul@b+2
 14023  024F  3000               	movlw	0
 14024  0250  00C9               	movwf	___flmul@b+1
 14025  0251  3000               	movlw	0
 14026  0252  00C8               	movwf	___flmul@b
 14027  0253  3185  259E  3180   	fcall	___flmul
 14028  0256  0140               	movlb	0	; select bank0
 14029  0257  084B               	movf	?___flmul+3,w
 14030  0258  00E5               	movwf	___fltol@f1+3
 14031  0259  084A               	movf	?___flmul+2,w
 14032  025A  00E4               	movwf	___fltol@f1+2
 14033  025B  0849               	movf	?___flmul+1,w
 14034  025C  00E3               	movwf	___fltol@f1+1
 14035  025D  0848               	movf	?___flmul,w
 14036  025E  00E2               	movwf	___fltol@f1
 14037  025F  3188  2018  3180   	fcall	___fltol
 14038  0262  0140               	movlb	0	; select bank0
 14039  0263  0863               	movf	?___fltol+1,w
 14040  0264  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 14041  0265  0862               	movf	?___fltol,w
 14042  0266  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 14043  0267                     L8:	
 14044  0267  3190  20E8  3180   	fcall	_PWM2_LoadDutyValue
 14045                           
 14046                           ;led.c: 95:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14047  026A  0141               	movlb	1	; select bank1
 14048  026B  086F               	movf	_beatBrightness^(0+128),w
 14049  026C  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14050  026D  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14051  026E  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14052  026F  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14053  0270  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14054  0271  0140               	movlb	0	; select bank0
 14055  0272  00A3               	movwf	___xxtofl@val+3
 14056  0273  0141               	movlb	1	; select bank1
 14057  0274  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14058  0275  0140               	movlb	0	; select bank0
 14059  0276  00A2               	movwf	___xxtofl@val+2
 14060  0277  0141               	movlb	1	; select bank1
 14061  0278  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14062  0279  0140               	movlb	0	; select bank0
 14063  027A  00A1               	movwf	___xxtofl@val+1
 14064  027B  0141               	movlb	1	; select bank1
 14065  027C  0851               	movf	??_LED_task_BEAT^(0+128),w
 14066  027D  0140               	movlb	0	; select bank0
 14067  027E  00A0               	movwf	___xxtofl@val
 14068  027F  3001               	movlw	1
 14069  0280  3196  261F  3180   	fcall	___xxtofl
 14070  0283  0140               	movlb	0	; select bank0
 14071  0284  0823               	movf	?___xxtofl+3,w
 14072  0285  00B5               	movwf	___fldiv@b+3
 14073  0286  0822               	movf	?___xxtofl+2,w
 14074  0287  00B4               	movwf	___fldiv@b+2
 14075  0288  0821               	movf	?___xxtofl+1,w
 14076  0289  00B3               	movwf	___fldiv@b+1
 14077  028A  0820               	movf	?___xxtofl,w
 14078  028B  00B2               	movwf	___fldiv@b
 14079  028C  3041               	movlw	65
 14080  028D  00B1               	movwf	___fldiv@a+3
 14081  028E  3010               	movlw	16
 14082  028F  00B0               	movwf	___fldiv@a+2
 14083  0290  3000               	movlw	0
 14084  0291  00AF               	movwf	___fldiv@a+1
 14085  0292  3000               	movlw	0
 14086  0293  00AE               	movwf	___fldiv@a
 14087  0294  318E  2686  3180   	fcall	___fldiv
 14088  0297  0140               	movlb	0	; select bank0
 14089  0298  0831               	movf	?___fldiv+3,w
 14090  0299  00CF               	movwf	___flmul@a+3
 14091  029A  0830               	movf	?___fldiv+2,w
 14092  029B  00CE               	movwf	___flmul@a+2
 14093  029C  082F               	movf	?___fldiv+1,w
 14094  029D  00CD               	movwf	___flmul@a+1
 14095  029E  082E               	movf	?___fldiv,w
 14096  029F  00CC               	movwf	___flmul@a
 14097  02A0  3042               	movlw	66
 14098  02A1  00CB               	movwf	___flmul@b+3
 14099  02A2  30F0               	movlw	240
 14100  02A3  00CA               	movwf	___flmul@b+2
 14101  02A4  3000               	movlw	0
 14102  02A5  00C9               	movwf	___flmul@b+1
 14103  02A6  3000               	movlw	0
 14104  02A7  00C8               	movwf	___flmul@b
 14105  02A8  3185  259E  3180   	fcall	___flmul
 14106  02AB  0140               	movlb	0	; select bank0
 14107  02AC  084B               	movf	?___flmul+3,w
 14108  02AD  00E5               	movwf	___fltol@f1+3
 14109  02AE  084A               	movf	?___flmul+2,w
 14110  02AF  00E4               	movwf	___fltol@f1+2
 14111  02B0  0849               	movf	?___flmul+1,w
 14112  02B1  00E3               	movwf	___fltol@f1+1
 14113  02B2  0848               	movf	?___flmul,w
 14114  02B3  00E2               	movwf	___fltol@f1
 14115  02B4  3188  2018  3180   	fcall	___fltol
 14116  02B7  0140               	movlb	0	; select bank0
 14117  02B8  0863               	movf	?___fltol+1,w
 14118  02B9  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 14119  02BA  0862               	movf	?___fltol,w
 14120  02BB  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 14121  02BC                     L10:	
 14122  02BC  3191  2106  3180   	fcall	_PWM3_LoadDutyValue
 14123                           
 14124                           ;led.c: 96:         PWM4_LoadDutyValue(0);
 14125  02BF  3000               	movlw	0
 14126  02C0  0140               	movlb	0	; select bank0
 14127  02C1  00ED               	movwf	PWM4_LoadDutyValue@dutyValue
 14128  02C2  00EE               	movwf	PWM4_LoadDutyValue@dutyValue+1
 14129  02C3  2C20               	goto	L1
 14130  02C4                     l6490:	
 14131                           
 14132                           ;led.c: 99:         PWM1_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14133  02C4  086F               	movf	_beatBrightness^(0+128),w
 14134  02C5  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14135  02C6  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14136  02C7  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14137  02C8  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14138  02C9  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14139  02CA  0140               	movlb	0	; select bank0
 14140  02CB  00A3               	movwf	___xxtofl@val+3
 14141  02CC  0141               	movlb	1	; select bank1
 14142  02CD  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14143  02CE  0140               	movlb	0	; select bank0
 14144  02CF  00A2               	movwf	___xxtofl@val+2
 14145  02D0  0141               	movlb	1	; select bank1
 14146  02D1  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14147  02D2  0140               	movlb	0	; select bank0
 14148  02D3  00A1               	movwf	___xxtofl@val+1
 14149  02D4  0141               	movlb	1	; select bank1
 14150  02D5  0851               	movf	??_LED_task_BEAT^(0+128),w
 14151  02D6  0140               	movlb	0	; select bank0
 14152  02D7  00A0               	movwf	___xxtofl@val
 14153  02D8  3001               	movlw	1
 14154  02D9  3196  261F  3180   	fcall	___xxtofl
 14155  02DC  0140               	movlb	0	; select bank0
 14156  02DD  0823               	movf	?___xxtofl+3,w
 14157  02DE  00B5               	movwf	___fldiv@b+3
 14158  02DF  0822               	movf	?___xxtofl+2,w
 14159  02E0  00B4               	movwf	___fldiv@b+2
 14160  02E1  0821               	movf	?___xxtofl+1,w
 14161  02E2  00B3               	movwf	___fldiv@b+1
 14162  02E3  0820               	movf	?___xxtofl,w
 14163  02E4  00B2               	movwf	___fldiv@b
 14164  02E5  3041               	movlw	65
 14165  02E6  00B1               	movwf	___fldiv@a+3
 14166  02E7  3010               	movlw	16
 14167  02E8  00B0               	movwf	___fldiv@a+2
 14168  02E9  3000               	movlw	0
 14169  02EA  00AF               	movwf	___fldiv@a+1
 14170  02EB  3000               	movlw	0
 14171  02EC  00AE               	movwf	___fldiv@a
 14172  02ED  318E  2686  3180   	fcall	___fldiv
 14173  02F0  0140               	movlb	0	; select bank0
 14174  02F1  0831               	movf	?___fldiv+3,w
 14175  02F2  00CF               	movwf	___flmul@a+3
 14176  02F3  0830               	movf	?___fldiv+2,w
 14177  02F4  00CE               	movwf	___flmul@a+2
 14178  02F5  082F               	movf	?___fldiv+1,w
 14179  02F6  00CD               	movwf	___flmul@a+1
 14180  02F7  082E               	movf	?___fldiv,w
 14181  02F8  00CC               	movwf	___flmul@a
 14182  02F9  3042               	movlw	66
 14183  02FA  00CB               	movwf	___flmul@b+3
 14184  02FB  30F0               	movlw	240
 14185  02FC  00CA               	movwf	___flmul@b+2
 14186  02FD  3000               	movlw	0
 14187  02FE  00C9               	movwf	___flmul@b+1
 14188  02FF  3000               	movlw	0
 14189  0300  00C8               	movwf	___flmul@b
 14190  0301  3185  259E  3180   	fcall	___flmul
 14191  0304  0140               	movlb	0	; select bank0
 14192  0305  084B               	movf	?___flmul+3,w
 14193  0306  00E5               	movwf	___fltol@f1+3
 14194  0307  084A               	movf	?___flmul+2,w
 14195  0308  00E4               	movwf	___fltol@f1+2
 14196  0309  0849               	movf	?___flmul+1,w
 14197  030A  00E3               	movwf	___fltol@f1+1
 14198  030B  0848               	movf	?___flmul,w
 14199  030C  00E2               	movwf	___fltol@f1
 14200  030D  3188  2018  3180   	fcall	___fltol
 14201  0310  0140               	movlb	0	; select bank0
 14202  0311  0863               	movf	?___fltol+1,w
 14203  0312  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 14204  0313  0862               	movf	?___fltol,w
 14205  0314  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 14206  0315                     L9:	
 14207  0315  3190  20CA  3180   	fcall	_PWM1_LoadDutyValue
 14208                           
 14209                           ;led.c: 100:         PWM2_LoadDutyValue(0);
 14210  0318  3000               	movlw	0
 14211  0319  0140               	movlb	0	; select bank0
 14212  031A  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 14213  031B  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 14214  031C  2B76               	goto	L5
 14215  031D                     l6496:	
 14216                           ;led.c: 102:         PWM4_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14217                           
 14218                           ;led.c: 101:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14219                           
 14220                           
 14221                           ;led.c: 105:         PWM1_LoadDutyValue(0);
 14222  031D  3000               	movlw	0
 14223  031E  0140               	movlb	0	; select bank0
 14224  031F  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 14225  0320  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 14226  0321  3190  20CA  3180   	fcall	_PWM1_LoadDutyValue
 14227                           
 14228                           ;led.c: 106:         PWM2_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14229  0324  0141               	movlb	1	; select bank1
 14230  0325  086F               	movf	_beatBrightness^(0+128),w
 14231  0326  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14232  0327  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14233  0328  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14234  0329  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14235  032A  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14236  032B  0140               	movlb	0	; select bank0
 14237  032C  00A3               	movwf	___xxtofl@val+3
 14238  032D  0141               	movlb	1	; select bank1
 14239  032E  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14240  032F  0140               	movlb	0	; select bank0
 14241  0330  00A2               	movwf	___xxtofl@val+2
 14242  0331  0141               	movlb	1	; select bank1
 14243  0332  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14244  0333  0140               	movlb	0	; select bank0
 14245  0334  00A1               	movwf	___xxtofl@val+1
 14246  0335  0141               	movlb	1	; select bank1
 14247  0336  0851               	movf	??_LED_task_BEAT^(0+128),w
 14248  0337  0140               	movlb	0	; select bank0
 14249  0338  00A0               	movwf	___xxtofl@val
 14250  0339  3001               	movlw	1
 14251  033A  3196  261F  3180   	fcall	___xxtofl
 14252  033D  0140               	movlb	0	; select bank0
 14253  033E  0823               	movf	?___xxtofl+3,w
 14254  033F  00B5               	movwf	___fldiv@b+3
 14255  0340  0822               	movf	?___xxtofl+2,w
 14256  0341  00B4               	movwf	___fldiv@b+2
 14257  0342  0821               	movf	?___xxtofl+1,w
 14258  0343  00B3               	movwf	___fldiv@b+1
 14259  0344  0820               	movf	?___xxtofl,w
 14260  0345  00B2               	movwf	___fldiv@b
 14261  0346  3041               	movlw	65
 14262  0347  00B1               	movwf	___fldiv@a+3
 14263  0348  3010               	movlw	16
 14264  0349  00B0               	movwf	___fldiv@a+2
 14265  034A  3000               	movlw	0
 14266  034B  00AF               	movwf	___fldiv@a+1
 14267  034C  3000               	movlw	0
 14268  034D  00AE               	movwf	___fldiv@a
 14269  034E  318E  2686  3180   	fcall	___fldiv
 14270  0351  0140               	movlb	0	; select bank0
 14271  0352  0831               	movf	?___fldiv+3,w
 14272  0353  00CF               	movwf	___flmul@a+3
 14273  0354  0830               	movf	?___fldiv+2,w
 14274  0355  00CE               	movwf	___flmul@a+2
 14275  0356  082F               	movf	?___fldiv+1,w
 14276  0357  00CD               	movwf	___flmul@a+1
 14277  0358  082E               	movf	?___fldiv,w
 14278  0359  00CC               	movwf	___flmul@a
 14279  035A  3042               	movlw	66
 14280  035B  00CB               	movwf	___flmul@b+3
 14281  035C  30F0               	movlw	240
 14282  035D  00CA               	movwf	___flmul@b+2
 14283  035E  3000               	movlw	0
 14284  035F  00C9               	movwf	___flmul@b+1
 14285  0360  3000               	movlw	0
 14286  0361  00C8               	movwf	___flmul@b
 14287  0362  3185  259E  3180   	fcall	___flmul
 14288  0365  0140               	movlb	0	; select bank0
 14289  0366  084B               	movf	?___flmul+3,w
 14290  0367  00E5               	movwf	___fltol@f1+3
 14291  0368  084A               	movf	?___flmul+2,w
 14292  0369  00E4               	movwf	___fltol@f1+2
 14293  036A  0849               	movf	?___flmul+1,w
 14294  036B  00E3               	movwf	___fltol@f1+1
 14295  036C  0848               	movf	?___flmul,w
 14296  036D  00E2               	movwf	___fltol@f1
 14297  036E  3188  2018  3180   	fcall	___fltol
 14298  0371  0140               	movlb	0	; select bank0
 14299  0372  0863               	movf	?___fltol+1,w
 14300  0373  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 14301  0374  0862               	movf	?___fltol,w
 14302  0375  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 14303  0376                     L5:	
 14304  0376  3190  20E8  3180   	fcall	_PWM2_LoadDutyValue
 14305                           
 14306                           ;led.c: 107:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14307  0379  0141               	movlb	1	; select bank1
 14308  037A  086F               	movf	_beatBrightness^(0+128),w
 14309  037B  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14310  037C  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14311  037D  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14312  037E  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14313  037F  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14314  0380  0140               	movlb	0	; select bank0
 14315  0381  00A3               	movwf	___xxtofl@val+3
 14316  0382  0141               	movlb	1	; select bank1
 14317  0383  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14318  0384  0140               	movlb	0	; select bank0
 14319  0385  00A2               	movwf	___xxtofl@val+2
 14320  0386  0141               	movlb	1	; select bank1
 14321  0387  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14322  0388  0140               	movlb	0	; select bank0
 14323  0389  00A1               	movwf	___xxtofl@val+1
 14324  038A  0141               	movlb	1	; select bank1
 14325  038B  0851               	movf	??_LED_task_BEAT^(0+128),w
 14326  038C  0140               	movlb	0	; select bank0
 14327  038D  00A0               	movwf	___xxtofl@val
 14328  038E  3001               	movlw	1
 14329  038F  3196  261F  3180   	fcall	___xxtofl
 14330  0392  0140               	movlb	0	; select bank0
 14331  0393  0823               	movf	?___xxtofl+3,w
 14332  0394  00B5               	movwf	___fldiv@b+3
 14333  0395  0822               	movf	?___xxtofl+2,w
 14334  0396  00B4               	movwf	___fldiv@b+2
 14335  0397  0821               	movf	?___xxtofl+1,w
 14336  0398  00B3               	movwf	___fldiv@b+1
 14337  0399  0820               	movf	?___xxtofl,w
 14338  039A  00B2               	movwf	___fldiv@b
 14339  039B  3041               	movlw	65
 14340  039C  00B1               	movwf	___fldiv@a+3
 14341  039D  3010               	movlw	16
 14342  039E  00B0               	movwf	___fldiv@a+2
 14343  039F  3000               	movlw	0
 14344  03A0  00AF               	movwf	___fldiv@a+1
 14345  03A1  3000               	movlw	0
 14346  03A2  00AE               	movwf	___fldiv@a
 14347  03A3  318E  2686  3180   	fcall	___fldiv
 14348  03A6  0140               	movlb	0	; select bank0
 14349  03A7  0831               	movf	?___fldiv+3,w
 14350  03A8  00CF               	movwf	___flmul@a+3
 14351  03A9  0830               	movf	?___fldiv+2,w
 14352  03AA  00CE               	movwf	___flmul@a+2
 14353  03AB  082F               	movf	?___fldiv+1,w
 14354  03AC  00CD               	movwf	___flmul@a+1
 14355  03AD  082E               	movf	?___fldiv,w
 14356  03AE  00CC               	movwf	___flmul@a
 14357  03AF  3042               	movlw	66
 14358  03B0  00CB               	movwf	___flmul@b+3
 14359  03B1  30F0               	movlw	240
 14360  03B2  00CA               	movwf	___flmul@b+2
 14361  03B3  3000               	movlw	0
 14362  03B4  00C9               	movwf	___flmul@b+1
 14363  03B5  3000               	movlw	0
 14364  03B6  00C8               	movwf	___flmul@b
 14365  03B7  3185  259E  3180   	fcall	___flmul
 14366  03BA  0140               	movlb	0	; select bank0
 14367  03BB  084B               	movf	?___flmul+3,w
 14368  03BC  00E5               	movwf	___fltol@f1+3
 14369  03BD  084A               	movf	?___flmul+2,w
 14370  03BE  00E4               	movwf	___fltol@f1+2
 14371  03BF  0849               	movf	?___flmul+1,w
 14372  03C0  00E3               	movwf	___fltol@f1+1
 14373  03C1  0848               	movf	?___flmul,w
 14374  03C2  00E2               	movwf	___fltol@f1
 14375  03C3  3188  2018  3180   	fcall	___fltol
 14376  03C6  0140               	movlb	0	; select bank0
 14377  03C7  0863               	movf	?___fltol+1,w
 14378  03C8  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 14379  03C9  0862               	movf	?___fltol,w
 14380  03CA  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 14381  03CB  3191  2106  3180   	fcall	_PWM3_LoadDutyValue
 14382                           
 14383                           ;led.c: 108:         PWM4_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14384  03CE  0141               	movlb	1	; select bank1
 14385  03CF  086F               	movf	_beatBrightness^(0+128),w
 14386  03D0  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14387  03D1  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14388  03D2  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14389  03D3  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14390  03D4  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14391  03D5  0140               	movlb	0	; select bank0
 14392  03D6  00A3               	movwf	___xxtofl@val+3
 14393  03D7  0141               	movlb	1	; select bank1
 14394  03D8  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14395  03D9  0140               	movlb	0	; select bank0
 14396  03DA  00A2               	movwf	___xxtofl@val+2
 14397  03DB  0141               	movlb	1	; select bank1
 14398  03DC  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14399  03DD  0140               	movlb	0	; select bank0
 14400  03DE  00A1               	movwf	___xxtofl@val+1
 14401  03DF  0141               	movlb	1	; select bank1
 14402  03E0  0851               	movf	??_LED_task_BEAT^(0+128),w
 14403  03E1  0140               	movlb	0	; select bank0
 14404  03E2  00A0               	movwf	___xxtofl@val
 14405  03E3  3001               	movlw	1
 14406  03E4  3196  261F  3180   	fcall	___xxtofl
 14407  03E7  0140               	movlb	0	; select bank0
 14408  03E8  0823               	movf	?___xxtofl+3,w
 14409  03E9  00B5               	movwf	___fldiv@b+3
 14410  03EA  0822               	movf	?___xxtofl+2,w
 14411  03EB  00B4               	movwf	___fldiv@b+2
 14412  03EC  0821               	movf	?___xxtofl+1,w
 14413  03ED  00B3               	movwf	___fldiv@b+1
 14414  03EE  0820               	movf	?___xxtofl,w
 14415  03EF  00B2               	movwf	___fldiv@b
 14416  03F0  3041               	movlw	65
 14417  03F1  00B1               	movwf	___fldiv@a+3
 14418  03F2  3010               	movlw	16
 14419  03F3  00B0               	movwf	___fldiv@a+2
 14420  03F4  3000               	movlw	0
 14421  03F5  00AF               	movwf	___fldiv@a+1
 14422  03F6  3000               	movlw	0
 14423  03F7  00AE               	movwf	___fldiv@a
 14424  03F8  318E  2686  3180   	fcall	___fldiv
 14425  03FB  0140               	movlb	0	; select bank0
 14426  03FC  0831               	movf	?___fldiv+3,w
 14427  03FD  00CF               	movwf	___flmul@a+3
 14428  03FE  0830               	movf	?___fldiv+2,w
 14429  03FF  00CE               	movwf	___flmul@a+2
 14430  0400  082F               	movf	?___fldiv+1,w
 14431  0401  00CD               	movwf	___flmul@a+1
 14432  0402  082E               	movf	?___fldiv,w
 14433  0403  00CC               	movwf	___flmul@a
 14434  0404  3042               	movlw	66
 14435  0405  00CB               	movwf	___flmul@b+3
 14436  0406  30F0               	movlw	240
 14437  0407  00CA               	movwf	___flmul@b+2
 14438  0408  3000               	movlw	0
 14439  0409  00C9               	movwf	___flmul@b+1
 14440  040A  3000               	movlw	0
 14441  040B  00C8               	movwf	___flmul@b
 14442  040C  3185  259E  3180   	fcall	___flmul
 14443  040F  0140               	movlb	0	; select bank0
 14444  0410  084B               	movf	?___flmul+3,w
 14445  0411  00E5               	movwf	___fltol@f1+3
 14446  0412  084A               	movf	?___flmul+2,w
 14447  0413  00E4               	movwf	___fltol@f1+2
 14448  0414  0849               	movf	?___flmul+1,w
 14449  0415  00E3               	movwf	___fltol@f1+1
 14450  0416  0848               	movf	?___flmul,w
 14451  0417  00E2               	movwf	___fltol@f1
 14452  0418  3188  2018  3180   	fcall	___fltol
 14453  041B  0140               	movlb	0	; select bank0
 14454  041C  0863               	movf	?___fltol+1,w
 14455  041D  00EE               	movwf	PWM4_LoadDutyValue@dutyValue+1
 14456  041E  0862               	movf	?___fltol,w
 14457  041F  00ED               	movwf	PWM4_LoadDutyValue@dutyValue
 14458  0420                     L1:	
 14459  0420  3191  2124         	fcall	_PWM4_LoadDutyValue
 14460                           
 14461                           ;led.c: 73:         currentState++;
 14462  0422  3001               	movlw	1
 14463  0423  0141               	movlb	1	; select bank1
 14464  0424  07A9               	addwf	_currentState^(0+128),f
 14465  0425  3000               	movlw	0
 14466  0426  3DAA               	addwfc	(_currentState+1)^(0+128),f
 14467                           
 14468                           ;led.c: 74:     } else if(currentState == 2){
 14469  0427  0008               	return
 14470  0428                     l6464:	
 14471  0428  3002               	movlw	2
 14472  0429  0629               	xorwf	_currentState^(0+128),w
 14473  042A  042A               	iorwf	(_currentState+1)^(0+128),w
 14474  042B  1903               	btfsc	3,2
 14475  042C  295E               	goto	l6466
 14476  042D  3003               	movlw	3
 14477  042E  0629               	xorwf	_currentState^(0+128),w
 14478  042F  042A               	iorwf	(_currentState+1)^(0+128),w
 14479  0430  1903               	btfsc	3,2
 14480  0431  2963               	goto	l6472
 14481  0432  3004               	movlw	4
 14482  0433  0629               	xorwf	_currentState^(0+128),w
 14483  0434  042A               	iorwf	(_currentState+1)^(0+128),w
 14484  0435  1903               	btfsc	3,2
 14485  0436  29BC               	goto	l6478
 14486  0437  3005               	movlw	5
 14487  0438  0629               	xorwf	_currentState^(0+128),w
 14488  0439  042A               	iorwf	(_currentState+1)^(0+128),w
 14489  043A  1903               	btfsc	3,2
 14490  043B  29C1               	goto	l6484
 14491  043C  3006               	movlw	6
 14492  043D  0629               	xorwf	_currentState^(0+128),w
 14493  043E  042A               	iorwf	(_currentState+1)^(0+128),w
 14494  043F  1903               	btfsc	3,2
 14495  0440  2AC4               	goto	l6490
 14496  0441  3008               	movlw	8
 14497  0442  0629               	xorwf	_currentState^(0+128),w
 14498  0443  042A               	iorwf	(_currentState+1)^(0+128),w
 14499  0444  1903               	btfsc	3,2
 14500  0445  2B1D               	goto	l6496
 14501                           
 14502                           ;led.c: 111:         PWM1_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14503  0446  086F               	movf	_beatBrightness^(0+128),w
 14504  0447  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14505  0448  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14506  0449  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14507  044A  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14508  044B  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14509  044C  0140               	movlb	0	; select bank0
 14510  044D  00A3               	movwf	___xxtofl@val+3
 14511  044E  0141               	movlb	1	; select bank1
 14512  044F  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14513  0450  0140               	movlb	0	; select bank0
 14514  0451  00A2               	movwf	___xxtofl@val+2
 14515  0452  0141               	movlb	1	; select bank1
 14516  0453  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14517  0454  0140               	movlb	0	; select bank0
 14518  0455  00A1               	movwf	___xxtofl@val+1
 14519  0456  0141               	movlb	1	; select bank1
 14520  0457  0851               	movf	??_LED_task_BEAT^(0+128),w
 14521  0458  0140               	movlb	0	; select bank0
 14522  0459  00A0               	movwf	___xxtofl@val
 14523  045A  3001               	movlw	1
 14524  045B  3196  261F  3180   	fcall	___xxtofl
 14525  045E  0140               	movlb	0	; select bank0
 14526  045F  0823               	movf	?___xxtofl+3,w
 14527  0460  00B5               	movwf	___fldiv@b+3
 14528  0461  0822               	movf	?___xxtofl+2,w
 14529  0462  00B4               	movwf	___fldiv@b+2
 14530  0463  0821               	movf	?___xxtofl+1,w
 14531  0464  00B3               	movwf	___fldiv@b+1
 14532  0465  0820               	movf	?___xxtofl,w
 14533  0466  00B2               	movwf	___fldiv@b
 14534  0467  3041               	movlw	65
 14535  0468  00B1               	movwf	___fldiv@a+3
 14536  0469  3010               	movlw	16
 14537  046A  00B0               	movwf	___fldiv@a+2
 14538  046B  3000               	movlw	0
 14539  046C  00AF               	movwf	___fldiv@a+1
 14540  046D  3000               	movlw	0
 14541  046E  00AE               	movwf	___fldiv@a
 14542  046F  318E  2686  3180   	fcall	___fldiv
 14543  0472  0140               	movlb	0	; select bank0
 14544  0473  0831               	movf	?___fldiv+3,w
 14545  0474  00CF               	movwf	___flmul@a+3
 14546  0475  0830               	movf	?___fldiv+2,w
 14547  0476  00CE               	movwf	___flmul@a+2
 14548  0477  082F               	movf	?___fldiv+1,w
 14549  0478  00CD               	movwf	___flmul@a+1
 14550  0479  082E               	movf	?___fldiv,w
 14551  047A  00CC               	movwf	___flmul@a
 14552  047B  3042               	movlw	66
 14553  047C  00CB               	movwf	___flmul@b+3
 14554  047D  30F0               	movlw	240
 14555  047E  00CA               	movwf	___flmul@b+2
 14556  047F  3000               	movlw	0
 14557  0480  00C9               	movwf	___flmul@b+1
 14558  0481  3000               	movlw	0
 14559  0482  00C8               	movwf	___flmul@b
 14560  0483  3185  259E  3180   	fcall	___flmul
 14561  0486  0140               	movlb	0	; select bank0
 14562  0487  084B               	movf	?___flmul+3,w
 14563  0488  00E5               	movwf	___fltol@f1+3
 14564  0489  084A               	movf	?___flmul+2,w
 14565  048A  00E4               	movwf	___fltol@f1+2
 14566  048B  0849               	movf	?___flmul+1,w
 14567  048C  00E3               	movwf	___fltol@f1+1
 14568  048D  0848               	movf	?___flmul,w
 14569  048E  00E2               	movwf	___fltol@f1
 14570  048F  3188  2018  3180   	fcall	___fltol
 14571  0492  0140               	movlb	0	; select bank0
 14572  0493  0863               	movf	?___fltol+1,w
 14573  0494  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 14574  0495  0862               	movf	?___fltol,w
 14575  0496  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 14576  0497  3190  20CA  3180   	fcall	_PWM1_LoadDutyValue
 14577                           
 14578                           ;led.c: 112:         PWM2_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14579  049A  0141               	movlb	1	; select bank1
 14580  049B  086F               	movf	_beatBrightness^(0+128),w
 14581  049C  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14582  049D  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14583  049E  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14584  049F  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14585  04A0  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14586  04A1  0140               	movlb	0	; select bank0
 14587  04A2  00A3               	movwf	___xxtofl@val+3
 14588  04A3  0141               	movlb	1	; select bank1
 14589  04A4  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14590  04A5  0140               	movlb	0	; select bank0
 14591  04A6  00A2               	movwf	___xxtofl@val+2
 14592  04A7  0141               	movlb	1	; select bank1
 14593  04A8  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14594  04A9  0140               	movlb	0	; select bank0
 14595  04AA  00A1               	movwf	___xxtofl@val+1
 14596  04AB  0141               	movlb	1	; select bank1
 14597  04AC  0851               	movf	??_LED_task_BEAT^(0+128),w
 14598  04AD  0140               	movlb	0	; select bank0
 14599  04AE  00A0               	movwf	___xxtofl@val
 14600  04AF  3001               	movlw	1
 14601  04B0  3196  261F  3180   	fcall	___xxtofl
 14602  04B3  0140               	movlb	0	; select bank0
 14603  04B4  0823               	movf	?___xxtofl+3,w
 14604  04B5  00B5               	movwf	___fldiv@b+3
 14605  04B6  0822               	movf	?___xxtofl+2,w
 14606  04B7  00B4               	movwf	___fldiv@b+2
 14607  04B8  0821               	movf	?___xxtofl+1,w
 14608  04B9  00B3               	movwf	___fldiv@b+1
 14609  04BA  0820               	movf	?___xxtofl,w
 14610  04BB  00B2               	movwf	___fldiv@b
 14611  04BC  3041               	movlw	65
 14612  04BD  00B1               	movwf	___fldiv@a+3
 14613  04BE  3010               	movlw	16
 14614  04BF  00B0               	movwf	___fldiv@a+2
 14615  04C0  3000               	movlw	0
 14616  04C1  00AF               	movwf	___fldiv@a+1
 14617  04C2  3000               	movlw	0
 14618  04C3  00AE               	movwf	___fldiv@a
 14619  04C4  318E  2686  3180   	fcall	___fldiv
 14620  04C7  0140               	movlb	0	; select bank0
 14621  04C8  0831               	movf	?___fldiv+3,w
 14622  04C9  00CF               	movwf	___flmul@a+3
 14623  04CA  0830               	movf	?___fldiv+2,w
 14624  04CB  00CE               	movwf	___flmul@a+2
 14625  04CC  082F               	movf	?___fldiv+1,w
 14626  04CD  00CD               	movwf	___flmul@a+1
 14627  04CE  082E               	movf	?___fldiv,w
 14628  04CF  00CC               	movwf	___flmul@a
 14629  04D0  3042               	movlw	66
 14630  04D1  00CB               	movwf	___flmul@b+3
 14631  04D2  30F0               	movlw	240
 14632  04D3  00CA               	movwf	___flmul@b+2
 14633  04D4  3000               	movlw	0
 14634  04D5  00C9               	movwf	___flmul@b+1
 14635  04D6  3000               	movlw	0
 14636  04D7  00C8               	movwf	___flmul@b
 14637  04D8  3185  259E  3180   	fcall	___flmul
 14638  04DB  0140               	movlb	0	; select bank0
 14639  04DC  084B               	movf	?___flmul+3,w
 14640  04DD  00E5               	movwf	___fltol@f1+3
 14641  04DE  084A               	movf	?___flmul+2,w
 14642  04DF  00E4               	movwf	___fltol@f1+2
 14643  04E0  0849               	movf	?___flmul+1,w
 14644  04E1  00E3               	movwf	___fltol@f1+1
 14645  04E2  0848               	movf	?___flmul,w
 14646  04E3  00E2               	movwf	___fltol@f1
 14647  04E4  3188  2018  3180   	fcall	___fltol
 14648  04E7  0140               	movlb	0	; select bank0
 14649  04E8  0863               	movf	?___fltol+1,w
 14650  04E9  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 14651  04EA  0862               	movf	?___fltol,w
 14652  04EB  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 14653  04EC  3190  20E8  3180   	fcall	_PWM2_LoadDutyValue
 14654                           
 14655                           ;led.c: 113:         PWM3_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14656  04EF  0141               	movlb	1	; select bank1
 14657  04F0  086F               	movf	_beatBrightness^(0+128),w
 14658  04F1  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14659  04F2  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14660  04F3  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14661  04F4  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14662  04F5  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14663  04F6  0140               	movlb	0	; select bank0
 14664  04F7  00A3               	movwf	___xxtofl@val+3
 14665  04F8  0141               	movlb	1	; select bank1
 14666  04F9  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14667  04FA  0140               	movlb	0	; select bank0
 14668  04FB  00A2               	movwf	___xxtofl@val+2
 14669  04FC  0141               	movlb	1	; select bank1
 14670  04FD  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14671  04FE  0140               	movlb	0	; select bank0
 14672  04FF  00A1               	movwf	___xxtofl@val+1
 14673  0500  0141               	movlb	1	; select bank1
 14674  0501  0851               	movf	??_LED_task_BEAT^(0+128),w
 14675  0502  0140               	movlb	0	; select bank0
 14676  0503  00A0               	movwf	___xxtofl@val
 14677  0504  3001               	movlw	1
 14678  0505  3196  261F  3180   	fcall	___xxtofl
 14679  0508  0140               	movlb	0	; select bank0
 14680  0509  0823               	movf	?___xxtofl+3,w
 14681  050A  00B5               	movwf	___fldiv@b+3
 14682  050B  0822               	movf	?___xxtofl+2,w
 14683  050C  00B4               	movwf	___fldiv@b+2
 14684  050D  0821               	movf	?___xxtofl+1,w
 14685  050E  00B3               	movwf	___fldiv@b+1
 14686  050F  0820               	movf	?___xxtofl,w
 14687  0510  00B2               	movwf	___fldiv@b
 14688  0511  3041               	movlw	65
 14689  0512  00B1               	movwf	___fldiv@a+3
 14690  0513  3010               	movlw	16
 14691  0514  00B0               	movwf	___fldiv@a+2
 14692  0515  3000               	movlw	0
 14693  0516  00AF               	movwf	___fldiv@a+1
 14694  0517  3000               	movlw	0
 14695  0518  00AE               	movwf	___fldiv@a
 14696  0519  318E  2686  3180   	fcall	___fldiv
 14697  051C  0140               	movlb	0	; select bank0
 14698  051D  0831               	movf	?___fldiv+3,w
 14699  051E  00CF               	movwf	___flmul@a+3
 14700  051F  0830               	movf	?___fldiv+2,w
 14701  0520  00CE               	movwf	___flmul@a+2
 14702  0521  082F               	movf	?___fldiv+1,w
 14703  0522  00CD               	movwf	___flmul@a+1
 14704  0523  082E               	movf	?___fldiv,w
 14705  0524  00CC               	movwf	___flmul@a
 14706  0525  3042               	movlw	66
 14707  0526  00CB               	movwf	___flmul@b+3
 14708  0527  30F0               	movlw	240
 14709  0528  00CA               	movwf	___flmul@b+2
 14710  0529  3000               	movlw	0
 14711  052A  00C9               	movwf	___flmul@b+1
 14712  052B  3000               	movlw	0
 14713  052C  00C8               	movwf	___flmul@b
 14714  052D  3185  259E  3180   	fcall	___flmul
 14715  0530  0140               	movlb	0	; select bank0
 14716  0531  084B               	movf	?___flmul+3,w
 14717  0532  00E5               	movwf	___fltol@f1+3
 14718  0533  084A               	movf	?___flmul+2,w
 14719  0534  00E4               	movwf	___fltol@f1+2
 14720  0535  0849               	movf	?___flmul+1,w
 14721  0536  00E3               	movwf	___fltol@f1+1
 14722  0537  0848               	movf	?___flmul,w
 14723  0538  00E2               	movwf	___fltol@f1
 14724  0539  3188  2018  3180   	fcall	___fltol
 14725  053C  0140               	movlb	0	; select bank0
 14726  053D  0863               	movf	?___fltol+1,w
 14727  053E  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 14728  053F  0862               	movf	?___fltol,w
 14729  0540  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 14730  0541  3191  2106  3180   	fcall	_PWM3_LoadDutyValue
 14731                           
 14732                           ;led.c: 114:         PWM4_LoadDutyValue((float)(beatBrightness/9.0) * 120);
 14733  0544  0141               	movlb	1	; select bank1
 14734  0545  086F               	movf	_beatBrightness^(0+128),w
 14735  0546  00D1               	movwf	??_LED_task_BEAT^(0+128)
 14736  0547  01D2               	clrf	(??_LED_task_BEAT^(0+128)+1)
 14737  0548  01D3               	clrf	(??_LED_task_BEAT^(0+128)+2)
 14738  0549  01D4               	clrf	(??_LED_task_BEAT^(0+128)+3)
 14739  054A  0854               	movf	(??_LED_task_BEAT+3)^(0+128),w
 14740  054B  0140               	movlb	0	; select bank0
 14741  054C  00A3               	movwf	___xxtofl@val+3
 14742  054D  0141               	movlb	1	; select bank1
 14743  054E  0853               	movf	(??_LED_task_BEAT+2)^(0+128),w
 14744  054F  0140               	movlb	0	; select bank0
 14745  0550  00A2               	movwf	___xxtofl@val+2
 14746  0551  0141               	movlb	1	; select bank1
 14747  0552  0852               	movf	(??_LED_task_BEAT+1)^(0+128),w
 14748  0553  0140               	movlb	0	; select bank0
 14749  0554  00A1               	movwf	___xxtofl@val+1
 14750  0555  0141               	movlb	1	; select bank1
 14751  0556  0851               	movf	??_LED_task_BEAT^(0+128),w
 14752  0557  0140               	movlb	0	; select bank0
 14753  0558  00A0               	movwf	___xxtofl@val
 14754  0559  3001               	movlw	1
 14755  055A  3196  261F  3180   	fcall	___xxtofl
 14756  055D  0140               	movlb	0	; select bank0
 14757  055E  0823               	movf	?___xxtofl+3,w
 14758  055F  00B5               	movwf	___fldiv@b+3
 14759  0560  0822               	movf	?___xxtofl+2,w
 14760  0561  00B4               	movwf	___fldiv@b+2
 14761  0562  0821               	movf	?___xxtofl+1,w
 14762  0563  00B3               	movwf	___fldiv@b+1
 14763  0564  0820               	movf	?___xxtofl,w
 14764  0565  00B2               	movwf	___fldiv@b
 14765  0566  3041               	movlw	65
 14766  0567  00B1               	movwf	___fldiv@a+3
 14767  0568  3010               	movlw	16
 14768  0569  00B0               	movwf	___fldiv@a+2
 14769  056A  3000               	movlw	0
 14770  056B  00AF               	movwf	___fldiv@a+1
 14771  056C  3000               	movlw	0
 14772  056D  00AE               	movwf	___fldiv@a
 14773  056E  318E  2686  3180   	fcall	___fldiv
 14774  0571  0140               	movlb	0	; select bank0
 14775  0572  0831               	movf	?___fldiv+3,w
 14776  0573  00CF               	movwf	___flmul@a+3
 14777  0574  0830               	movf	?___fldiv+2,w
 14778  0575  00CE               	movwf	___flmul@a+2
 14779  0576  082F               	movf	?___fldiv+1,w
 14780  0577  00CD               	movwf	___flmul@a+1
 14781  0578  082E               	movf	?___fldiv,w
 14782  0579  00CC               	movwf	___flmul@a
 14783  057A  3042               	movlw	66
 14784  057B  00CB               	movwf	___flmul@b+3
 14785  057C  30F0               	movlw	240
 14786  057D  00CA               	movwf	___flmul@b+2
 14787  057E  3000               	movlw	0
 14788  057F  00C9               	movwf	___flmul@b+1
 14789  0580  3000               	movlw	0
 14790  0581  00C8               	movwf	___flmul@b
 14791  0582  3185  259E  3180   	fcall	___flmul
 14792  0585  0140               	movlb	0	; select bank0
 14793  0586  084B               	movf	?___flmul+3,w
 14794  0587  00E5               	movwf	___fltol@f1+3
 14795  0588  084A               	movf	?___flmul+2,w
 14796  0589  00E4               	movwf	___fltol@f1+2
 14797  058A  0849               	movf	?___flmul+1,w
 14798  058B  00E3               	movwf	___fltol@f1+1
 14799  058C  0848               	movf	?___flmul,w
 14800  058D  00E2               	movwf	___fltol@f1
 14801  058E  3188  2018  3180   	fcall	___fltol
 14802  0591  0140               	movlb	0	; select bank0
 14803  0592  0863               	movf	?___fltol+1,w
 14804  0593  00EE               	movwf	PWM4_LoadDutyValue@dutyValue+1
 14805  0594  0862               	movf	?___fltol,w
 14806  0595  00ED               	movwf	PWM4_LoadDutyValue@dutyValue
 14807  0596  3191  2124         	fcall	_PWM4_LoadDutyValue
 14808                           
 14809                           ;led.c: 115:         currentState = 1;
 14810  0598  3001               	movlw	1
 14811  0599  0141               	movlb	1	; select bank1
 14812  059A  00A9               	movwf	_currentState^(0+128)
 14813  059B  3000               	movlw	0
 14814  059C  00AA               	movwf	(_currentState^(0+128)+1)
 14815  059D  0008               	return
 14816  059E                     __end_of_LED_task_BEAT:	
 14817                           
 14818                           	psect	text24
 14819  161F                     __ptext24:	
 14820 ;; *************** function ___xxtofl *****************
 14821 ;; Defined at:
 14822 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 14823 ;; Parameters:    Size  Location     Type
 14824 ;;  sign            1    wreg     unsigned char 
 14825 ;;  val             4    0[BANK0 ] long 
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;  sign            1    8[BANK0 ] unsigned char 
 14828 ;;  arg             4   10[BANK0 ] unsigned long 
 14829 ;;  exp             1    9[BANK0 ] unsigned char 
 14830 ;; Return value:  Size  Location     Type
 14831 ;;                  4    0[BANK0 ] unsigned char 
 14832 ;; Registers used:
 14833 ;;		wreg, status,2, status,0
 14834 ;; Tracked objects:
 14835 ;;		On entry : 0/0
 14836 ;;		On exit  : 0/0
 14837 ;;		Unchanged: 0/0
 14838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14840 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14841 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14842 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14843 ;;Total ram usage:       14 bytes
 14844 ;; Hardware stack levels used:    1
 14845 ;; Hardware stack levels required when called:    4
 14846 ;; This function calls:
 14847 ;;		Nothing
 14848 ;; This function is called by:
 14849 ;;		_LED_setColor
 14850 ;;		_LED_task_BEAT
 14851 ;; This function uses a non-reentrant model
 14852 ;;
 14853                           
 14854                           
 14855                           ;psect for function ___xxtofl
 14856  161F                     ___xxtofl:	
 14857                           
 14858                           ;incstack = 0
 14859                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14860                           ;___xxtofl@sign stored from wreg
 14861  161F  0140               	movlb	0	; select bank0
 14862  1620  00A8               	movwf	___xxtofl@sign
 14863  1621  0828               	movf	___xxtofl@sign,w
 14864  1622  1D03               	btfss	3,2
 14865  1623  1FA3               	btfss	___xxtofl@val+3,7
 14866  1624  2E35               	goto	l4616
 14867  1625  0920               	comf	___xxtofl@val,w
 14868  1626  00AA               	movwf	___xxtofl@arg
 14869  1627  0921               	comf	___xxtofl@val+1,w
 14870  1628  00AB               	movwf	___xxtofl@arg+1
 14871  1629  0922               	comf	___xxtofl@val+2,w
 14872  162A  00AC               	movwf	___xxtofl@arg+2
 14873  162B  0923               	comf	___xxtofl@val+3,w
 14874  162C  00AD               	movwf	___xxtofl@arg+3
 14875  162D  0AAA               	incf	___xxtofl@arg,f
 14876  162E  1903               	skipnz
 14877  162F  0AAB               	incf	___xxtofl@arg+1,f
 14878  1630  1903               	skipnz
 14879  1631  0AAC               	incf	___xxtofl@arg+2,f
 14880  1632  1903               	skipnz
 14881  1633  0AAD               	incf	___xxtofl@arg+3,f
 14882  1634  2E3D               	goto	l1926
 14883  1635                     l4616:	
 14884  1635  0823               	movf	___xxtofl@val+3,w
 14885  1636  00AD               	movwf	___xxtofl@arg+3
 14886  1637  0822               	movf	___xxtofl@val+2,w
 14887  1638  00AC               	movwf	___xxtofl@arg+2
 14888  1639  0821               	movf	___xxtofl@val+1,w
 14889  163A  00AB               	movwf	___xxtofl@arg+1
 14890  163B  0820               	movf	___xxtofl@val,w
 14891  163C  00AA               	movwf	___xxtofl@arg
 14892  163D                     l1926:	
 14893  163D  0823               	movf	___xxtofl@val+3,w
 14894  163E  0422               	iorwf	___xxtofl@val+2,w
 14895  163F  0421               	iorwf	___xxtofl@val+1,w
 14896  1640  0420               	iorwf	___xxtofl@val,w
 14897  1641  1D03               	skipz
 14898  1642  2E4C               	goto	l4622
 14899  1643  3000               	movlw	0
 14900  1644  00A3               	movwf	?___xxtofl+3
 14901  1645  3000               	movlw	0
 14902  1646  00A2               	movwf	?___xxtofl+2
 14903  1647  3000               	movlw	0
 14904  1648  00A1               	movwf	?___xxtofl+1
 14905  1649  3000               	movlw	0
 14906  164A  00A0               	movwf	?___xxtofl
 14907  164B  0008               	return
 14908  164C                     l4622:	
 14909  164C  3096               	movlw	150
 14910  164D  00A4               	movwf	??___xxtofl
 14911  164E  0824               	movf	??___xxtofl,w
 14912  164F  00A9               	movwf	___xxtofl@exp
 14913  1650                     l4626:	
 14914  1650  30FE               	movlw	254
 14915  1651  052D               	andwf	___xxtofl@arg+3,w
 14916  1652  1903               	btfsc	3,2
 14917  1653  2E73               	goto	l1932
 14918  1654  3001               	movlw	1
 14919  1655  00A4               	movwf	??___xxtofl
 14920  1656  0824               	movf	??___xxtofl,w
 14921  1657  07A9               	addwf	___xxtofl@exp,f
 14922  1658  3001               	movlw	1
 14923  1659                     u3745:	
 14924  1659  36AD               	lsrf	___xxtofl@arg+3,f
 14925  165A  0CAC               	rrf	___xxtofl@arg+2,f
 14926  165B  0CAB               	rrf	___xxtofl@arg+1,f
 14927  165C  0CAA               	rrf	___xxtofl@arg,f
 14928  165D  0B89               	decfsz	9,f
 14929  165E  2E59               	goto	u3745
 14930  165F  2E50               	goto	l4626
 14931  1660                     l4628:	
 14932  1660  3001               	movlw	1
 14933  1661  00A4               	movwf	??___xxtofl
 14934  1662  0824               	movf	??___xxtofl,w
 14935  1663  07A9               	addwf	___xxtofl@exp,f
 14936  1664  3001               	movlw	1
 14937  1665  07AA               	addwf	___xxtofl@arg,f
 14938  1666  3000               	movlw	0
 14939  1667  3DAB               	addwfc	___xxtofl@arg+1,f
 14940  1668  3000               	movlw	0
 14941  1669  3DAC               	addwfc	___xxtofl@arg+2,f
 14942  166A  3000               	movlw	0
 14943  166B  3DAD               	addwfc	___xxtofl@arg+3,f
 14944  166C  3001               	movlw	1
 14945  166D                     u3765:	
 14946  166D  36AD               	lsrf	___xxtofl@arg+3,f
 14947  166E  0CAC               	rrf	___xxtofl@arg+2,f
 14948  166F  0CAB               	rrf	___xxtofl@arg+1,f
 14949  1670  0CAA               	rrf	___xxtofl@arg,f
 14950  1671  0B89               	decfsz	9,f
 14951  1672  2E6D               	goto	u3765
 14952  1673                     l1932:	
 14953  1673  30FF               	movlw	255
 14954  1674  052D               	andwf	___xxtofl@arg+3,w
 14955  1675  1903               	btfsc	3,2
 14956  1676  2E85               	goto	l4636
 14957  1677  2E60               	goto	l4628
 14958  1678                     l4638:	
 14959  1678  3002               	movlw	2
 14960  1679  0229               	subwf	___xxtofl@exp,w
 14961  167A  1C03               	btfss	3,0
 14962  167B  2E87               	goto	l1939
 14963  167C  3001               	movlw	1
 14964  167D  02A9               	subwf	___xxtofl@exp,f
 14965  167E  3001               	movlw	1
 14966  167F                     u3785:	
 14967  167F  35AA               	lslf	___xxtofl@arg,f
 14968  1680  0DAB               	rlf	___xxtofl@arg+1,f
 14969  1681  0DAC               	rlf	___xxtofl@arg+2,f
 14970  1682  0DAD               	rlf	___xxtofl@arg+3,f
 14971  1683  0B89               	decfsz	9,f
 14972  1684  2E7F               	goto	u3785
 14973  1685                     l4636:	
 14974  1685  1FAC               	btfss	___xxtofl@arg+2,7
 14975  1686  2E78               	goto	l4638
 14976  1687                     l1939:	
 14977  1687  1829               	btfsc	___xxtofl@exp,0
 14978  1688  2E91               	goto	l1940
 14979  1689  30FF               	movlw	255
 14980  168A  05AA               	andwf	___xxtofl@arg,f
 14981  168B  30FF               	movlw	255
 14982  168C  05AB               	andwf	___xxtofl@arg+1,f
 14983  168D  307F               	movlw	127
 14984  168E  05AC               	andwf	___xxtofl@arg+2,f
 14985  168F  30FF               	movlw	255
 14986  1690  05AD               	andwf	___xxtofl@arg+3,f
 14987  1691                     l1940:	
 14988  1691  1003               	clrc
 14989  1692  0CA9               	rrf	___xxtofl@exp,f
 14990  1693  0829               	movf	___xxtofl@exp,w
 14991  1694  00A4               	movwf	??___xxtofl
 14992  1695  01A5               	clrf	??___xxtofl+1
 14993  1696  01A6               	clrf	??___xxtofl+2
 14994  1697  01A7               	clrf	??___xxtofl+3
 14995  1698  3018               	movlw	24
 14996  1699                     u3825:	
 14997  1699  35A4               	lslf	??___xxtofl,f
 14998  169A  0DA5               	rlf	??___xxtofl+1,f
 14999  169B  0DA6               	rlf	??___xxtofl+2,f
 15000  169C  0DA7               	rlf	??___xxtofl+3,f
 15001  169D  0B89               	decfsz	9,f
 15002  169E  2E99               	goto	u3825
 15003  169F  0824               	movf	??___xxtofl,w
 15004  16A0  04AA               	iorwf	___xxtofl@arg,f
 15005  16A1  0825               	movf	??___xxtofl+1,w
 15006  16A2  04AB               	iorwf	___xxtofl@arg+1,f
 15007  16A3  0826               	movf	??___xxtofl+2,w
 15008  16A4  04AC               	iorwf	___xxtofl@arg+2,f
 15009  16A5  0827               	movf	??___xxtofl+3,w
 15010  16A6  04AD               	iorwf	___xxtofl@arg+3,f
 15011  16A7  0828               	movf	___xxtofl@sign,w
 15012  16A8  1D03               	btfss	3,2
 15013  16A9  1FA3               	btfss	___xxtofl@val+3,7
 15014  16AA  2EAC               	goto	l4650
 15015  16AB  17AD               	bsf	___xxtofl@arg+3,7
 15016  16AC                     l4650:	
 15017  16AC  082D               	movf	___xxtofl@arg+3,w
 15018  16AD  00A3               	movwf	?___xxtofl+3
 15019  16AE  082C               	movf	___xxtofl@arg+2,w
 15020  16AF  00A2               	movwf	?___xxtofl+2
 15021  16B0  082B               	movf	___xxtofl@arg+1,w
 15022  16B1  00A1               	movwf	?___xxtofl+1
 15023  16B2  082A               	movf	___xxtofl@arg,w
 15024  16B3  00A0               	movwf	?___xxtofl
 15025  16B4  0008               	return
 15026  16B5                     __end_of___xxtofl:	
 15027                           
 15028                           	psect	text25
 15029  0818                     __ptext25:	
 15030 ;; *************** function ___fltol *****************
 15031 ;; Defined at:
 15032 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 15033 ;; Parameters:    Size  Location     Type
 15034 ;;  f1              4   66[BANK0 ] unsigned char 
 15035 ;; Auto vars:     Size  Location     Type
 15036 ;;  exp1            1   76[BANK0 ] unsigned char 
 15037 ;;  sign1           1   75[BANK0 ] unsigned char 
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  4   66[BANK0 ] long 
 15040 ;; Registers used:
 15041 ;;		wreg, status,2, status,0
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15047 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15048 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15049 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15050 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15051 ;;Total ram usage:       11 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; Hardware stack levels required when called:    4
 15054 ;; This function calls:
 15055 ;;		Nothing
 15056 ;; This function is called by:
 15057 ;;		_LED_setColor
 15058 ;;		_LED_task_BEAT
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           
 15063                           ;psect for function ___fltol
 15064  0818                     ___fltol:	
 15065                           
 15066                           ;incstack = 0
 15067                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15068  0818  1003               	clrc
 15069  0819  0140               	movlb	0	; select bank0
 15070  081A  0D64               	rlf	___fltol@f1+2,w
 15071  081B  0D65               	rlf	___fltol@f1+3,w
 15072  081C  00E6               	movwf	??___fltol
 15073  081D  0866               	movf	??___fltol,w
 15074  081E  00EC               	movwf	___fltol@exp1
 15075  081F  086C               	movf	___fltol@exp1,w
 15076  0820  1D03               	btfss	3,2
 15077  0821  282B               	goto	l4300
 15078  0822                     l4296:	
 15079  0822  3000               	movlw	0
 15080  0823  00E5               	movwf	?___fltol+3
 15081  0824  3000               	movlw	0
 15082  0825  00E4               	movwf	?___fltol+2
 15083  0826  3000               	movlw	0
 15084  0827  00E3               	movwf	?___fltol+1
 15085  0828  3000               	movlw	0
 15086  0829  00E2               	movwf	?___fltol
 15087  082A  0008               	return
 15088  082B                     l4300:	
 15089  082B  0862               	movf	___fltol@f1,w
 15090  082C  00E6               	movwf	??___fltol
 15091  082D  0863               	movf	___fltol@f1+1,w
 15092  082E  00E7               	movwf	??___fltol+1
 15093  082F  0864               	movf	___fltol@f1+2,w
 15094  0830  00E8               	movwf	??___fltol+2
 15095  0831  0865               	movf	___fltol@f1+3,w
 15096  0832  00E9               	movwf	??___fltol+3
 15097  0833  301F               	movlw	31
 15098  0834                     u3075:	
 15099  0834  36E9               	lsrf	??___fltol+3,f
 15100  0835  0CE8               	rrf	??___fltol+2,f
 15101  0836  0CE7               	rrf	??___fltol+1,f
 15102  0837  0CE6               	rrf	??___fltol,f
 15103  0838  0B89               	decfsz	9,f
 15104  0839  2834               	goto	u3075
 15105  083A  0866               	movf	??___fltol,w
 15106  083B  00EA               	movwf	??___fltol+4
 15107  083C  086A               	movf	??___fltol+4,w
 15108  083D  00EB               	movwf	___fltol@sign1
 15109  083E  17E4               	bsf	___fltol@f1+2,7
 15110  083F  30FF               	movlw	255
 15111  0840  05E2               	andwf	___fltol@f1,f
 15112  0841  30FF               	movlw	255
 15113  0842  05E3               	andwf	___fltol@f1+1,f
 15114  0843  30FF               	movlw	255
 15115  0844  05E4               	andwf	___fltol@f1+2,f
 15116  0845  3000               	movlw	0
 15117  0846  05E5               	andwf	___fltol@f1+3,f
 15118  0847  3096               	movlw	150
 15119  0848  02EC               	subwf	___fltol@exp1,f
 15120  0849  1FEC               	btfss	___fltol@exp1,7
 15121  084A  285E               	goto	l4318
 15122  084B  086C               	movf	___fltol@exp1,w
 15123  084C  3A80               	xorlw	128
 15124  084D  3E97               	addlw	151
 15125  084E  1C03               	btfss	3,0
 15126  084F  2822               	goto	l4296
 15127  0850                     l4316:	
 15128  0850  3001               	movlw	1
 15129  0851                     u3105:	
 15130  0851  36E5               	lsrf	___fltol@f1+3,f
 15131  0852  0CE4               	rrf	___fltol@f1+2,f
 15132  0853  0CE3               	rrf	___fltol@f1+1,f
 15133  0854  0CE2               	rrf	___fltol@f1,f
 15134  0855  0B89               	decfsz	9,f
 15135  0856  2851               	goto	u3105
 15136  0857  3001               	movlw	1
 15137  0858  00E6               	movwf	??___fltol
 15138  0859  0866               	movf	??___fltol,w
 15139  085A  07EC               	addwf	___fltol@exp1,f
 15140  085B  1903               	btfsc	3,2
 15141  085C  286F               	goto	l4326
 15142  085D  2850               	goto	l4316
 15143  085E                     l4318:	
 15144  085E  3020               	movlw	32
 15145  085F  026C               	subwf	___fltol@exp1,w
 15146  0860  1803               	btfsc	3,0
 15147  0861  2822               	goto	l4296
 15148  0862                     l1692:	
 15149  0862  086C               	movf	___fltol@exp1,w
 15150  0863  1903               	btfsc	3,2
 15151  0864  286F               	goto	l4326
 15152  0865  3001               	movlw	1
 15153  0866                     u3135:	
 15154  0866  35E2               	lslf	___fltol@f1,f
 15155  0867  0DE3               	rlf	___fltol@f1+1,f
 15156  0868  0DE4               	rlf	___fltol@f1+2,f
 15157  0869  0DE5               	rlf	___fltol@f1+3,f
 15158  086A  0B89               	decfsz	9,f
 15159  086B  2866               	goto	u3135
 15160  086C  3001               	movlw	1
 15161  086D  02EC               	subwf	___fltol@exp1,f
 15162  086E  2862               	goto	l1692
 15163  086F                     l4326:	
 15164  086F  086B               	movf	___fltol@sign1,w
 15165  0870  1903               	btfsc	3,2
 15166  0871  0008               	return
 15167  0872  09E2               	comf	___fltol@f1,f
 15168  0873  09E3               	comf	___fltol@f1+1,f
 15169  0874  09E4               	comf	___fltol@f1+2,f
 15170  0875  09E5               	comf	___fltol@f1+3,f
 15171  0876  0AE2               	incf	___fltol@f1,f
 15172  0877  1903               	skipnz
 15173  0878  0AE3               	incf	___fltol@f1+1,f
 15174  0879  1903               	skipnz
 15175  087A  0AE4               	incf	___fltol@f1+2,f
 15176  087B  1903               	skipnz
 15177  087C  0AE5               	incf	___fltol@f1+3,f
 15178  087D  0008               	return
 15179  087E                     __end_of___fltol:	
 15180                           
 15181                           	psect	text26
 15182  059E                     __ptext26:	
 15183 ;; *************** function ___flmul *****************
 15184 ;; Defined at:
 15185 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 15186 ;; Parameters:    Size  Location     Type
 15187 ;;  b               4   40[BANK0 ] long 
 15188 ;;  a               4   44[BANK0 ] long 
 15189 ;; Auto vars:     Size  Location     Type
 15190 ;;  prod            4   60[BANK0 ] struct .
 15191 ;;  grs             4   54[BANK0 ] unsigned long 
 15192 ;;  temp            2   64[BANK0 ] struct .
 15193 ;;  bexp            1   59[BANK0 ] unsigned char 
 15194 ;;  aexp            1   58[BANK0 ] unsigned char 
 15195 ;;  sign            1   53[BANK0 ] unsigned char 
 15196 ;; Return value:  Size  Location     Type
 15197 ;;                  4   40[BANK0 ] unsigned char 
 15198 ;; Registers used:
 15199 ;;		wreg, status,2, status,0, pclath, cstack
 15200 ;; Tracked objects:
 15201 ;;		On entry : 0/0
 15202 ;;		On exit  : 0/0
 15203 ;;		Unchanged: 0/0
 15204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15205 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15206 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15207 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15208 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15209 ;;Total ram usage:       26 bytes
 15210 ;; Hardware stack levels used:    1
 15211 ;; Hardware stack levels required when called:    5
 15212 ;; This function calls:
 15213 ;;		__Umul8_16
 15214 ;; This function is called by:
 15215 ;;		_LED_setColor
 15216 ;;		_LED_task_BEAT
 15217 ;; This function uses a non-reentrant model
 15218 ;;
 15219                           
 15220                           
 15221                           ;psect for function ___flmul
 15222  059E                     ___flmul:	
 15223                           
 15224                           ;incstack = 0
 15225                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15226  059E  0140               	movlb	0	; select bank0
 15227  059F  084B               	movf	___flmul@b+3,w
 15228  05A0  3980               	andlw	128
 15229  05A1  00D0               	movwf	??___flmul
 15230  05A2  0850               	movf	??___flmul,w
 15231  05A3  00D5               	movwf	___flmul@sign
 15232  05A4  354B               	lslf	___flmul@b+3,w
 15233  05A5  00D0               	movwf	??___flmul
 15234  05A6  0850               	movf	??___flmul,w
 15235  05A7  00DB               	movwf	___flmul@bexp
 15236  05A8  1BCA               	btfsc	___flmul@b+2,7
 15237  05A9  145B               	bsf	___flmul@bexp,0
 15238  05AA  085B               	movf	___flmul@bexp,w
 15239  05AB  1903               	btfsc	3,2
 15240  05AC  2DBA               	goto	l4486
 15241  05AD  0A5B               	incf	___flmul@bexp,w
 15242  05AE  1D03               	btfss	3,2
 15243  05AF  2DB8               	goto	l4484
 15244  05B0  3000               	movlw	0
 15245  05B1  00CB               	movwf	___flmul@b+3
 15246  05B2  3000               	movlw	0
 15247  05B3  00CA               	movwf	___flmul@b+2
 15248  05B4  3000               	movlw	0
 15249  05B5  00C9               	movwf	___flmul@b+1
 15250  05B6  3000               	movlw	0
 15251  05B7  00C8               	movwf	___flmul@b
 15252  05B8                     l4484:	
 15253  05B8  17CA               	bsf	___flmul@b+2,7
 15254  05B9  2DC2               	goto	l4488
 15255  05BA                     l4486:	
 15256  05BA  3000               	movlw	0
 15257  05BB  00CB               	movwf	___flmul@b+3
 15258  05BC  3000               	movlw	0
 15259  05BD  00CA               	movwf	___flmul@b+2
 15260  05BE  3000               	movlw	0
 15261  05BF  00C9               	movwf	___flmul@b+1
 15262  05C0  3000               	movlw	0
 15263  05C1  00C8               	movwf	___flmul@b
 15264  05C2                     l4488:	
 15265  05C2  084F               	movf	___flmul@a+3,w
 15266  05C3  3980               	andlw	128
 15267  05C4  00D0               	movwf	??___flmul
 15268  05C5  0850               	movf	??___flmul,w
 15269  05C6  06D5               	xorwf	___flmul@sign,f
 15270  05C7  354F               	lslf	___flmul@a+3,w
 15271  05C8  00D0               	movwf	??___flmul
 15272  05C9  0850               	movf	??___flmul,w
 15273  05CA  00DA               	movwf	___flmul@aexp
 15274  05CB  1BCE               	btfsc	___flmul@a+2,7
 15275  05CC  145A               	bsf	___flmul@aexp,0
 15276  05CD  085A               	movf	___flmul@aexp,w
 15277  05CE  1903               	btfsc	3,2
 15278  05CF  2DDD               	goto	l4504
 15279  05D0  0A5A               	incf	___flmul@aexp,w
 15280  05D1  1D03               	btfss	3,2
 15281  05D2  2DDB               	goto	l4502
 15282  05D3  3000               	movlw	0
 15283  05D4  00CF               	movwf	___flmul@a+3
 15284  05D5  3000               	movlw	0
 15285  05D6  00CE               	movwf	___flmul@a+2
 15286  05D7  3000               	movlw	0
 15287  05D8  00CD               	movwf	___flmul@a+1
 15288  05D9  3000               	movlw	0
 15289  05DA  00CC               	movwf	___flmul@a
 15290  05DB                     l4502:	
 15291  05DB  17CE               	bsf	___flmul@a+2,7
 15292  05DC  2DE5               	goto	l4506
 15293  05DD                     l4504:	
 15294  05DD  3000               	movlw	0
 15295  05DE  00CF               	movwf	___flmul@a+3
 15296  05DF  3000               	movlw	0
 15297  05E0  00CE               	movwf	___flmul@a+2
 15298  05E1  3000               	movlw	0
 15299  05E2  00CD               	movwf	___flmul@a+1
 15300  05E3  3000               	movlw	0
 15301  05E4  00CC               	movwf	___flmul@a
 15302  05E5                     l4506:	
 15303  05E5  085A               	movf	___flmul@aexp,w
 15304  05E6  1D03               	btfss	3,2
 15305  05E7  085B               	movf	___flmul@bexp,w
 15306  05E8  1D03               	btfss	3,2
 15307  05E9  2DF3               	goto	l4514
 15308  05EA  3000               	movlw	0
 15309  05EB  00CB               	movwf	?___flmul+3
 15310  05EC  3000               	movlw	0
 15311  05ED  00CA               	movwf	?___flmul+2
 15312  05EE  3000               	movlw	0
 15313  05EF  00C9               	movwf	?___flmul+1
 15314  05F0  3000               	movlw	0
 15315  05F1  00C8               	movwf	?___flmul
 15316  05F2  0008               	return
 15317  05F3                     l4514:	
 15318  05F3  0848               	movf	___flmul@b,w
 15319  05F4  00D0               	movwf	??___flmul
 15320  05F5  0850               	movf	??___flmul,w
 15321  05F6  00A0               	movwf	__Umul8_16@multiplicand
 15322  05F7  084E               	movf	___flmul@a+2,w
 15323  05F8  3191  2162  3185   	fcall	__Umul8_16
 15324  05FB  0140               	movlb	0	; select bank0
 15325  05FC  0821               	movf	?__Umul8_16+1,w
 15326  05FD  00E1               	movwf	___flmul@temp+1
 15327  05FE  0820               	movf	?__Umul8_16,w
 15328  05FF  00E0               	movwf	___flmul@temp
 15329  0600  0860               	movf	___flmul@temp,w
 15330  0601  00D0               	movwf	??___flmul
 15331  0602  01D1               	clrf	??___flmul+1
 15332  0603  01D2               	clrf	??___flmul+2
 15333  0604  01D3               	clrf	??___flmul+3
 15334  0605  0853               	movf	??___flmul+3,w
 15335  0606  00D9               	movwf	___flmul@grs+3
 15336  0607  0852               	movf	??___flmul+2,w
 15337  0608  00D8               	movwf	___flmul@grs+2
 15338  0609  0851               	movf	??___flmul+1,w
 15339  060A  00D7               	movwf	___flmul@grs+1
 15340  060B  0850               	movf	??___flmul,w
 15341  060C  00D6               	movwf	___flmul@grs
 15342  060D  0861               	movf	___flmul@temp+1,w
 15343  060E  00D0               	movwf	??___flmul
 15344  060F  01D1               	clrf	??___flmul+1
 15345  0610  01D2               	clrf	??___flmul+2
 15346  0611  01D3               	clrf	??___flmul+3
 15347  0612  0853               	movf	??___flmul+3,w
 15348  0613  00DF               	movwf	___flmul@prod+3
 15349  0614  0852               	movf	??___flmul+2,w
 15350  0615  00DE               	movwf	___flmul@prod+2
 15351  0616  0851               	movf	??___flmul+1,w
 15352  0617  00DD               	movwf	___flmul@prod+1
 15353  0618  0850               	movf	??___flmul,w
 15354  0619  00DC               	movwf	___flmul@prod
 15355  061A  0849               	movf	___flmul@b+1,w
 15356  061B  00D0               	movwf	??___flmul
 15357  061C  0850               	movf	??___flmul,w
 15358  061D  00A0               	movwf	__Umul8_16@multiplicand
 15359  061E  084D               	movf	___flmul@a+1,w
 15360  061F  3191  2162  3185   	fcall	__Umul8_16
 15361  0622  0140               	movlb	0	; select bank0
 15362  0623  0821               	movf	?__Umul8_16+1,w
 15363  0624  00E1               	movwf	___flmul@temp+1
 15364  0625  0820               	movf	?__Umul8_16,w
 15365  0626  00E0               	movwf	___flmul@temp
 15366  0627  0860               	movf	___flmul@temp,w
 15367  0628  00D0               	movwf	??___flmul
 15368  0629  01D1               	clrf	??___flmul+1
 15369  062A  01D2               	clrf	??___flmul+2
 15370  062B  01D3               	clrf	??___flmul+3
 15371  062C  0850               	movf	??___flmul,w
 15372  062D  07D6               	addwf	___flmul@grs,f
 15373  062E  0851               	movf	??___flmul+1,w
 15374  062F  3DD7               	addwfc	___flmul@grs+1,f
 15375  0630  0852               	movf	??___flmul+2,w
 15376  0631  3DD8               	addwfc	___flmul@grs+2,f
 15377  0632  0853               	movf	??___flmul+3,w
 15378  0633  3DD9               	addwfc	___flmul@grs+3,f
 15379  0634  0861               	movf	___flmul@temp+1,w
 15380  0635  00D0               	movwf	??___flmul
 15381  0636  01D1               	clrf	??___flmul+1
 15382  0637  01D2               	clrf	??___flmul+2
 15383  0638  01D3               	clrf	??___flmul+3
 15384  0639  0850               	movf	??___flmul,w
 15385  063A  07DC               	addwf	___flmul@prod,f
 15386  063B  0851               	movf	??___flmul+1,w
 15387  063C  3DDD               	addwfc	___flmul@prod+1,f
 15388  063D  0852               	movf	??___flmul+2,w
 15389  063E  3DDE               	addwfc	___flmul@prod+2,f
 15390  063F  0853               	movf	??___flmul+3,w
 15391  0640  3DDF               	addwfc	___flmul@prod+3,f
 15392  0641  084A               	movf	___flmul@b+2,w
 15393  0642  00D0               	movwf	??___flmul
 15394  0643  0850               	movf	??___flmul,w
 15395  0644  00A0               	movwf	__Umul8_16@multiplicand
 15396  0645  084C               	movf	___flmul@a,w
 15397  0646  3191  2162  3185   	fcall	__Umul8_16
 15398  0649  0140               	movlb	0	; select bank0
 15399  064A  0821               	movf	?__Umul8_16+1,w
 15400  064B  00E1               	movwf	___flmul@temp+1
 15401  064C  0820               	movf	?__Umul8_16,w
 15402  064D  00E0               	movwf	___flmul@temp
 15403  064E  0860               	movf	___flmul@temp,w
 15404  064F  00D0               	movwf	??___flmul
 15405  0650  01D1               	clrf	??___flmul+1
 15406  0651  01D2               	clrf	??___flmul+2
 15407  0652  01D3               	clrf	??___flmul+3
 15408  0653  0850               	movf	??___flmul,w
 15409  0654  07D6               	addwf	___flmul@grs,f
 15410  0655  0851               	movf	??___flmul+1,w
 15411  0656  3DD7               	addwfc	___flmul@grs+1,f
 15412  0657  0852               	movf	??___flmul+2,w
 15413  0658  3DD8               	addwfc	___flmul@grs+2,f
 15414  0659  0853               	movf	??___flmul+3,w
 15415  065A  3DD9               	addwfc	___flmul@grs+3,f
 15416  065B  0861               	movf	___flmul@temp+1,w
 15417  065C  00D0               	movwf	??___flmul
 15418  065D  01D1               	clrf	??___flmul+1
 15419  065E  01D2               	clrf	??___flmul+2
 15420  065F  01D3               	clrf	??___flmul+3
 15421  0660  0850               	movf	??___flmul,w
 15422  0661  07DC               	addwf	___flmul@prod,f
 15423  0662  0851               	movf	??___flmul+1,w
 15424  0663  3DDD               	addwfc	___flmul@prod+1,f
 15425  0664  0852               	movf	??___flmul+2,w
 15426  0665  3DDE               	addwfc	___flmul@prod+2,f
 15427  0666  0853               	movf	??___flmul+3,w
 15428  0667  3DDF               	addwfc	___flmul@prod+3,f
 15429  0668  3008               	movlw	8
 15430  0669                     u3535:	
 15431  0669  35D6               	lslf	___flmul@grs,f
 15432  066A  0DD7               	rlf	___flmul@grs+1,f
 15433  066B  0DD8               	rlf	___flmul@grs+2,f
 15434  066C  0DD9               	rlf	___flmul@grs+3,f
 15435  066D  0B89               	decfsz	9,f
 15436  066E  2E69               	goto	u3535
 15437  066F  0849               	movf	___flmul@b+1,w
 15438  0670  00D0               	movwf	??___flmul
 15439  0671  0850               	movf	??___flmul,w
 15440  0672  00A0               	movwf	__Umul8_16@multiplicand
 15441  0673  084C               	movf	___flmul@a,w
 15442  0674  3191  2162  3185   	fcall	__Umul8_16
 15443  0677  0140               	movlb	0	; select bank0
 15444  0678  0821               	movf	?__Umul8_16+1,w
 15445  0679  00E1               	movwf	___flmul@temp+1
 15446  067A  0820               	movf	?__Umul8_16,w
 15447  067B  00E0               	movwf	___flmul@temp
 15448  067C  0860               	movf	___flmul@temp,w
 15449  067D  07D6               	addwf	___flmul@grs,f
 15450  067E  0861               	movf	___flmul@temp+1,w
 15451  067F  3DD7               	addwfc	___flmul@grs+1,f
 15452  0680  3000               	movlw	0
 15453  0681  3DD8               	addwfc	___flmul@grs+2,f
 15454  0682  3DD9               	addwfc	___flmul@grs+3,f
 15455  0683  0848               	movf	___flmul@b,w
 15456  0684  00D0               	movwf	??___flmul
 15457  0685  0850               	movf	??___flmul,w
 15458  0686  00A0               	movwf	__Umul8_16@multiplicand
 15459  0687  084D               	movf	___flmul@a+1,w
 15460  0688  3191  2162  3185   	fcall	__Umul8_16
 15461  068B  0140               	movlb	0	; select bank0
 15462  068C  0821               	movf	?__Umul8_16+1,w
 15463  068D  00E1               	movwf	___flmul@temp+1
 15464  068E  0820               	movf	?__Umul8_16,w
 15465  068F  00E0               	movwf	___flmul@temp
 15466  0690  0860               	movf	___flmul@temp,w
 15467  0691  07D6               	addwf	___flmul@grs,f
 15468  0692  0861               	movf	___flmul@temp+1,w
 15469  0693  3DD7               	addwfc	___flmul@grs+1,f
 15470  0694  3000               	movlw	0
 15471  0695  3DD8               	addwfc	___flmul@grs+2,f
 15472  0696  3DD9               	addwfc	___flmul@grs+3,f
 15473  0697  3008               	movlw	8
 15474  0698                     u3545:	
 15475  0698  35D6               	lslf	___flmul@grs,f
 15476  0699  0DD7               	rlf	___flmul@grs+1,f
 15477  069A  0DD8               	rlf	___flmul@grs+2,f
 15478  069B  0DD9               	rlf	___flmul@grs+3,f
 15479  069C  0B89               	decfsz	9,f
 15480  069D  2E98               	goto	u3545
 15481  069E  0848               	movf	___flmul@b,w
 15482  069F  00D0               	movwf	??___flmul
 15483  06A0  0850               	movf	??___flmul,w
 15484  06A1  00A0               	movwf	__Umul8_16@multiplicand
 15485  06A2  084C               	movf	___flmul@a,w
 15486  06A3  3191  2162  3185   	fcall	__Umul8_16
 15487  06A6  0140               	movlb	0	; select bank0
 15488  06A7  0821               	movf	?__Umul8_16+1,w
 15489  06A8  00E1               	movwf	___flmul@temp+1
 15490  06A9  0820               	movf	?__Umul8_16,w
 15491  06AA  00E0               	movwf	___flmul@temp
 15492  06AB  0860               	movf	___flmul@temp,w
 15493  06AC  07D6               	addwf	___flmul@grs,f
 15494  06AD  0861               	movf	___flmul@temp+1,w
 15495  06AE  3DD7               	addwfc	___flmul@grs+1,f
 15496  06AF  3000               	movlw	0
 15497  06B0  3DD8               	addwfc	___flmul@grs+2,f
 15498  06B1  3DD9               	addwfc	___flmul@grs+3,f
 15499  06B2  0849               	movf	___flmul@b+1,w
 15500  06B3  00D0               	movwf	??___flmul
 15501  06B4  0850               	movf	??___flmul,w
 15502  06B5  00A0               	movwf	__Umul8_16@multiplicand
 15503  06B6  084E               	movf	___flmul@a+2,w
 15504  06B7  3191  2162  3185   	fcall	__Umul8_16
 15505  06BA  0140               	movlb	0	; select bank0
 15506  06BB  0821               	movf	?__Umul8_16+1,w
 15507  06BC  00E1               	movwf	___flmul@temp+1
 15508  06BD  0820               	movf	?__Umul8_16,w
 15509  06BE  00E0               	movwf	___flmul@temp
 15510  06BF  0860               	movf	___flmul@temp,w
 15511  06C0  07DC               	addwf	___flmul@prod,f
 15512  06C1  0861               	movf	___flmul@temp+1,w
 15513  06C2  3DDD               	addwfc	___flmul@prod+1,f
 15514  06C3  3000               	movlw	0
 15515  06C4  3DDE               	addwfc	___flmul@prod+2,f
 15516  06C5  3DDF               	addwfc	___flmul@prod+3,f
 15517  06C6  084A               	movf	___flmul@b+2,w
 15518  06C7  00D0               	movwf	??___flmul
 15519  06C8  0850               	movf	??___flmul,w
 15520  06C9  00A0               	movwf	__Umul8_16@multiplicand
 15521  06CA  084D               	movf	___flmul@a+1,w
 15522  06CB  3191  2162  3185   	fcall	__Umul8_16
 15523  06CE  0140               	movlb	0	; select bank0
 15524  06CF  0821               	movf	?__Umul8_16+1,w
 15525  06D0  00E1               	movwf	___flmul@temp+1
 15526  06D1  0820               	movf	?__Umul8_16,w
 15527  06D2  00E0               	movwf	___flmul@temp
 15528  06D3  0860               	movf	___flmul@temp,w
 15529  06D4  07DC               	addwf	___flmul@prod,f
 15530  06D5  0861               	movf	___flmul@temp+1,w
 15531  06D6  3DDD               	addwfc	___flmul@prod+1,f
 15532  06D7  3000               	movlw	0
 15533  06D8  3DDE               	addwfc	___flmul@prod+2,f
 15534  06D9  3DDF               	addwfc	___flmul@prod+3,f
 15535  06DA  084A               	movf	___flmul@b+2,w
 15536  06DB  00D0               	movwf	??___flmul
 15537  06DC  0850               	movf	??___flmul,w
 15538  06DD  00A0               	movwf	__Umul8_16@multiplicand
 15539  06DE  084E               	movf	___flmul@a+2,w
 15540  06DF  3191  2162  3185   	fcall	__Umul8_16
 15541  06E2  0140               	movlb	0	; select bank0
 15542  06E3  0821               	movf	?__Umul8_16+1,w
 15543  06E4  00E1               	movwf	___flmul@temp+1
 15544  06E5  0820               	movf	?__Umul8_16,w
 15545  06E6  00E0               	movwf	___flmul@temp
 15546  06E7  0860               	movf	___flmul@temp,w
 15547  06E8  00D0               	movwf	??___flmul
 15548  06E9  0861               	movf	___flmul@temp+1,w
 15549  06EA  00D1               	movwf	??___flmul+1
 15550  06EB  01D2               	clrf	??___flmul+2
 15551  06EC  01D3               	clrf	??___flmul+3
 15552  06ED  3008               	movlw	8
 15553  06EE                     u3555:	
 15554  06EE  35D0               	lslf	??___flmul,f
 15555  06EF  0DD1               	rlf	??___flmul+1,f
 15556  06F0  0DD2               	rlf	??___flmul+2,f
 15557  06F1  0DD3               	rlf	??___flmul+3,f
 15558  06F2  0B89               	decfsz	9,f
 15559  06F3  2EEE               	goto	u3555
 15560  06F4  0850               	movf	??___flmul,w
 15561  06F5  07DC               	addwf	___flmul@prod,f
 15562  06F6  0851               	movf	??___flmul+1,w
 15563  06F7  3DDD               	addwfc	___flmul@prod+1,f
 15564  06F8  0852               	movf	??___flmul+2,w
 15565  06F9  3DDE               	addwfc	___flmul@prod+2,f
 15566  06FA  0853               	movf	??___flmul+3,w
 15567  06FB  3DDF               	addwfc	___flmul@prod+3,f
 15568  06FC  0856               	movf	___flmul@grs,w
 15569  06FD  00D0               	movwf	??___flmul
 15570  06FE  0857               	movf	___flmul@grs+1,w
 15571  06FF  00D1               	movwf	??___flmul+1
 15572  0700  0858               	movf	___flmul@grs+2,w
 15573  0701  00D2               	movwf	??___flmul+2
 15574  0702  0859               	movf	___flmul@grs+3,w
 15575  0703  00D3               	movwf	??___flmul+3
 15576  0704  3018               	movlw	24
 15577  0705                     u3565:	
 15578  0705  36D3               	lsrf	??___flmul+3,f
 15579  0706  0CD2               	rrf	??___flmul+2,f
 15580  0707  0CD1               	rrf	??___flmul+1,f
 15581  0708  0CD0               	rrf	??___flmul,f
 15582  0709  0B89               	decfsz	9,f
 15583  070A  2F05               	goto	u3565
 15584  070B  0850               	movf	??___flmul,w
 15585  070C  07DC               	addwf	___flmul@prod,f
 15586  070D  0851               	movf	??___flmul+1,w
 15587  070E  3DDD               	addwfc	___flmul@prod+1,f
 15588  070F  0852               	movf	??___flmul+2,w
 15589  0710  3DDE               	addwfc	___flmul@prod+2,f
 15590  0711  0853               	movf	??___flmul+3,w
 15591  0712  3DDF               	addwfc	___flmul@prod+3,f
 15592  0713  3008               	movlw	8
 15593  0714                     u3575:	
 15594  0714  35D6               	lslf	___flmul@grs,f
 15595  0715  0DD7               	rlf	___flmul@grs+1,f
 15596  0716  0DD8               	rlf	___flmul@grs+2,f
 15597  0717  0DD9               	rlf	___flmul@grs+3,f
 15598  0718  0B89               	decfsz	9,f
 15599  0719  2F14               	goto	u3575
 15600  071A  085B               	movf	___flmul@bexp,w
 15601  071B  075A               	addwf	___flmul@aexp,w
 15602  071C  00D0               	movwf	??___flmul
 15603  071D  01D1               	clrf	??___flmul+1
 15604  071E  0DD1               	rlf	??___flmul+1,f
 15605  071F  0850               	movf	??___flmul,w
 15606  0720  3E82               	addlw	130
 15607  0721  00E0               	movwf	___flmul@temp
 15608  0722  30FF               	movlw	255
 15609  0723  3D51               	addwfc	??___flmul+1,w
 15610  0724  00E1               	movwf	___flmul@temp+1
 15611  0725                     l4566:	
 15612  0725  1BDE               	btfsc	___flmul@prod+2,7
 15613  0726  2F3C               	goto	l4568
 15614  0727  3001               	movlw	1
 15615  0728                     u3585:	
 15616  0728  35DC               	lslf	___flmul@prod,f
 15617  0729  0DDD               	rlf	___flmul@prod+1,f
 15618  072A  0DDE               	rlf	___flmul@prod+2,f
 15619  072B  0DDF               	rlf	___flmul@prod+3,f
 15620  072C  0B89               	decfsz	9,f
 15621  072D  2F28               	goto	u3585
 15622  072E  1BD9               	btfsc	___flmul@grs+3,7
 15623  072F  145C               	bsf	___flmul@prod,0
 15624  0730  3001               	movlw	1
 15625  0731                     u3605:	
 15626  0731  35D6               	lslf	___flmul@grs,f
 15627  0732  0DD7               	rlf	___flmul@grs+1,f
 15628  0733  0DD8               	rlf	___flmul@grs+2,f
 15629  0734  0DD9               	rlf	___flmul@grs+3,f
 15630  0735  0B89               	decfsz	9,f
 15631  0736  2F31               	goto	u3605
 15632  0737  30FF               	movlw	255
 15633  0738  07E0               	addwf	___flmul@temp,f
 15634  0739  30FF               	movlw	255
 15635  073A  3DE1               	addwfc	___flmul@temp+1,f
 15636  073B  2F25               	goto	l4566
 15637  073C                     l4568:	
 15638  073C  01DA               	clrf	___flmul@aexp
 15639  073D  1FD9               	btfss	___flmul@grs+3,7
 15640  073E  2F55               	goto	l4578
 15641  073F  30FF               	movlw	255
 15642  0740  0556               	andwf	___flmul@grs,w
 15643  0741  00D0               	movwf	??___flmul
 15644  0742  30FF               	movlw	255
 15645  0743  0557               	andwf	___flmul@grs+1,w
 15646  0744  00D1               	movwf	??___flmul+1
 15647  0745  30FF               	movlw	255
 15648  0746  0558               	andwf	___flmul@grs+2,w
 15649  0747  00D2               	movwf	??___flmul+2
 15650  0748  307F               	movlw	127
 15651  0749  0559               	andwf	___flmul@grs+3,w
 15652  074A  00D3               	movwf	??___flmul+3
 15653  074B  0853               	movf	??___flmul+3,w
 15654  074C  0452               	iorwf	??___flmul+2,w
 15655  074D  0451               	iorwf	??___flmul+1,w
 15656  074E  0450               	iorwf	??___flmul,w
 15657  074F  1903               	skipnz
 15658  0750  185C               	btfsc	___flmul@prod,0
 15659  0751  2F53               	goto	l4574
 15660  0752  2F55               	goto	l4578
 15661  0753                     l4574:	
 15662  0753  01DA               	clrf	___flmul@aexp
 15663  0754  0ADA               	incf	___flmul@aexp,f
 15664  0755                     l4578:	
 15665  0755  085A               	movf	___flmul@aexp,w
 15666  0756  1903               	btfsc	3,2
 15667  0757  2F7E               	goto	l4588
 15668  0758  3001               	movlw	1
 15669  0759  07DC               	addwf	___flmul@prod,f
 15670  075A  3000               	movlw	0
 15671  075B  3DDD               	addwfc	___flmul@prod+1,f
 15672  075C  3000               	movlw	0
 15673  075D  3DDE               	addwfc	___flmul@prod+2,f
 15674  075E  3000               	movlw	0
 15675  075F  3DDF               	addwfc	___flmul@prod+3,f
 15676  0760  1C5F               	btfss	___flmul@prod+3,0
 15677  0761  2F7E               	goto	l4588
 15678  0762  085C               	movf	___flmul@prod,w
 15679  0763  00D0               	movwf	??___flmul
 15680  0764  085D               	movf	___flmul@prod+1,w
 15681  0765  00D1               	movwf	??___flmul+1
 15682  0766  085E               	movf	___flmul@prod+2,w
 15683  0767  00D2               	movwf	??___flmul+2
 15684  0768  085F               	movf	___flmul@prod+3,w
 15685  0769  00D3               	movwf	??___flmul+3
 15686  076A  3001               	movlw	1
 15687  076B  00D4               	movwf	??___flmul+4
 15688  076C                     u3675:	
 15689  076C  37D3               	asrf	??___flmul+3,f
 15690  076D  0CD2               	rrf	??___flmul+2,f
 15691  076E  0CD1               	rrf	??___flmul+1,f
 15692  076F  0CD0               	rrf	??___flmul,f
 15693  0770  0BD4               	decfsz	??___flmul+4,f
 15694  0771  2F6C               	goto	u3675
 15695  0772  0853               	movf	??___flmul+3,w
 15696  0773  00DF               	movwf	___flmul@prod+3
 15697  0774  0852               	movf	??___flmul+2,w
 15698  0775  00DE               	movwf	___flmul@prod+2
 15699  0776  0851               	movf	??___flmul+1,w
 15700  0777  00DD               	movwf	___flmul@prod+1
 15701  0778  0850               	movf	??___flmul,w
 15702  0779  00DC               	movwf	___flmul@prod
 15703  077A  3001               	movlw	1
 15704  077B  07E0               	addwf	___flmul@temp,f
 15705  077C  3000               	movlw	0
 15706  077D  3DE1               	addwfc	___flmul@temp+1,f
 15707  077E                     l4588:	
 15708  077E  0861               	movf	___flmul@temp+1,w
 15709  077F  3A80               	xorlw	128
 15710  0780  00D0               	movwf	??___flmul
 15711  0781  3080               	movlw	128
 15712  0782  0250               	subwf	??___flmul,w
 15713  0783  1D03               	skipz
 15714  0784  2F87               	goto	u3685
 15715  0785  30FF               	movlw	255
 15716  0786  0260               	subwf	___flmul@temp,w
 15717  0787                     u3685:	
 15718  0787  1C03               	skipc
 15719  0788  2F93               	goto	l4592
 15720  0789  307F               	movlw	127
 15721  078A  0140               	movlb	0	; select bank0
 15722  078B  00DF               	movwf	___flmul@prod+3
 15723  078C  3080               	movlw	128
 15724  078D  00DE               	movwf	___flmul@prod+2
 15725  078E  3000               	movlw	0
 15726  078F  00DD               	movwf	___flmul@prod+1
 15727  0790  3000               	movlw	0
 15728  0791  00DC               	movwf	___flmul@prod
 15729  0792  2FBD               	goto	l1900
 15730  0793                     l4592:	
 15731  0793  0140               	movlb	0	; select bank0
 15732  0794  0861               	movf	___flmul@temp+1,w
 15733  0795  3A80               	xorlw	128
 15734  0796  00D0               	movwf	??___flmul
 15735  0797  3080               	movlw	128
 15736  0798  0250               	subwf	??___flmul,w
 15737  0799  1D03               	skipz
 15738  079A  2F9D               	goto	u3695
 15739  079B  3001               	movlw	1
 15740  079C  0260               	subwf	___flmul@temp,w
 15741  079D                     u3695:	
 15742  079D  1803               	skipnc
 15743  079E  2FAA               	goto	l4598
 15744  079F  3000               	movlw	0
 15745  07A0  0140               	movlb	0	; select bank0
 15746  07A1  00DF               	movwf	___flmul@prod+3
 15747  07A2  3000               	movlw	0
 15748  07A3  00DE               	movwf	___flmul@prod+2
 15749  07A4  3000               	movlw	0
 15750  07A5  00DD               	movwf	___flmul@prod+1
 15751  07A6  3000               	movlw	0
 15752  07A7  00DC               	movwf	___flmul@prod
 15753  07A8  01D5               	clrf	___flmul@sign
 15754  07A9  2FBD               	goto	l1900
 15755  07AA                     l4598:	
 15756  07AA  0140               	movlb	0	; select bank0
 15757  07AB  0860               	movf	___flmul@temp,w
 15758  07AC  00D0               	movwf	??___flmul
 15759  07AD  0850               	movf	??___flmul,w
 15760  07AE  00DB               	movwf	___flmul@bexp
 15761  07AF  30FF               	movlw	255
 15762  07B0  05DC               	andwf	___flmul@prod,f
 15763  07B1  30FF               	movlw	255
 15764  07B2  05DD               	andwf	___flmul@prod+1,f
 15765  07B3  307F               	movlw	127
 15766  07B4  05DE               	andwf	___flmul@prod+2,f
 15767  07B5  3000               	movlw	0
 15768  07B6  05DF               	andwf	___flmul@prod+3,f
 15769  07B7  185B               	btfsc	___flmul@bexp,0
 15770  07B8  17DE               	bsf	___flmul@prod+2,7
 15771  07B9  365B               	lsrf	___flmul@bexp,w
 15772  07BA  00D0               	movwf	??___flmul
 15773  07BB  0850               	movf	??___flmul,w
 15774  07BC  00DF               	movwf	___flmul@prod+3
 15775  07BD                     l1900:	
 15776  07BD  0855               	movf	___flmul@sign,w
 15777  07BE  00D0               	movwf	??___flmul
 15778  07BF  0850               	movf	??___flmul,w
 15779  07C0  04DF               	iorwf	___flmul@prod+3,f
 15780  07C1  085F               	movf	___flmul@prod+3,w
 15781  07C2  00CB               	movwf	?___flmul+3
 15782  07C3  085E               	movf	___flmul@prod+2,w
 15783  07C4  00CA               	movwf	?___flmul+2
 15784  07C5  085D               	movf	___flmul@prod+1,w
 15785  07C6  00C9               	movwf	?___flmul+1
 15786  07C7  085C               	movf	___flmul@prod,w
 15787  07C8  00C8               	movwf	?___flmul
 15788  07C9  0008               	return
 15789  07CA                     __end_of___flmul:	
 15790                           
 15791                           	psect	text27
 15792  1162                     __ptext27:	
 15793 ;; *************** function __Umul8_16 *****************
 15794 ;; Defined at:
 15795 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
 15796 ;; Parameters:    Size  Location     Type
 15797 ;;  multiplier      1    wreg     unsigned char 
 15798 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15799 ;; Auto vars:     Size  Location     Type
 15800 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15801 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15802 ;;  product         2    4[BANK0 ] unsigned int 
 15803 ;; Return value:  Size  Location     Type
 15804 ;;                  2    0[BANK0 ] unsigned int 
 15805 ;; Registers used:
 15806 ;;		wreg, status,2, status,0
 15807 ;; Tracked objects:
 15808 ;;		On entry : 0/0
 15809 ;;		On exit  : 0/0
 15810 ;;		Unchanged: 0/0
 15811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15813 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15815 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15816 ;;Total ram usage:        9 bytes
 15817 ;; Hardware stack levels used:    1
 15818 ;; Hardware stack levels required when called:    4
 15819 ;; This function calls:
 15820 ;;		Nothing
 15821 ;; This function is called by:
 15822 ;;		___flmul
 15823 ;; This function uses a non-reentrant model
 15824 ;;
 15825                           
 15826                           
 15827                           ;psect for function __Umul8_16
 15828  1162                     __Umul8_16:	
 15829                           
 15830                           ;incstack = 0
 15831                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15832                           ;__Umul8_16@multiplier stored from wreg
 15833  1162  0140               	movlb	0	; select bank0
 15834  1163  00A8               	movwf	__Umul8_16@multiplier
 15835  1164  01A4               	clrf	__Umul8_16@product
 15836  1165  01A5               	clrf	__Umul8_16@product+1
 15837  1166  0820               	movf	__Umul8_16@multiplicand,w
 15838  1167  00A2               	movwf	??__Umul8_16
 15839  1168  01A3               	clrf	??__Umul8_16+1
 15840  1169  0822               	movf	??__Umul8_16,w
 15841  116A  00A6               	movwf	__Umul8_16@word_mpld
 15842  116B  0823               	movf	??__Umul8_16+1,w
 15843  116C  00A7               	movwf	__Umul8_16@word_mpld+1
 15844  116D                     l4200:	
 15845  116D  1C28               	btfss	__Umul8_16@multiplier,0
 15846  116E  2973               	goto	l1978
 15847  116F  0826               	movf	__Umul8_16@word_mpld,w
 15848  1170  07A4               	addwf	__Umul8_16@product,f
 15849  1171  0827               	movf	__Umul8_16@word_mpld+1,w
 15850  1172  3DA5               	addwfc	__Umul8_16@product+1,f
 15851  1173                     l1978:	
 15852  1173  3001               	movlw	1
 15853  1174                     u2905:	
 15854  1174  35A6               	lslf	__Umul8_16@word_mpld,f
 15855  1175  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15856  1176  0B89               	decfsz	9,f
 15857  1177  2974               	goto	u2905
 15858  1178  1003               	clrc
 15859  1179  0CA8               	rrf	__Umul8_16@multiplier,f
 15860  117A  0828               	movf	__Umul8_16@multiplier,w
 15861  117B  1D03               	btfss	3,2
 15862  117C  296D               	goto	l4200
 15863  117D  0825               	movf	__Umul8_16@product+1,w
 15864  117E  00A1               	movwf	?__Umul8_16+1
 15865  117F  0824               	movf	__Umul8_16@product,w
 15866  1180  00A0               	movwf	?__Umul8_16
 15867  1181  0008               	return
 15868  1182                     __end_of__Umul8_16:	
 15869                           
 15870                           	psect	text28
 15871  0E86                     __ptext28:	
 15872 ;; *************** function ___fldiv *****************
 15873 ;; Defined at:
 15874 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 15875 ;; Parameters:    Size  Location     Type
 15876 ;;  a               4   14[BANK0 ] unsigned int 
 15877 ;;  b               4   18[BANK0 ] unsigned int 
 15878 ;; Auto vars:     Size  Location     Type
 15879 ;;  grs             4   34[BANK0 ] unsigned long 
 15880 ;;  rem             4   27[BANK0 ] unsigned long 
 15881 ;;  new_exp         2   32[BANK0 ] int 
 15882 ;;  aexp            1   39[BANK0 ] unsigned char 
 15883 ;;  bexp            1   38[BANK0 ] unsigned char 
 15884 ;;  sign            1   31[BANK0 ] unsigned char 
 15885 ;; Return value:  Size  Location     Type
 15886 ;;                  4   14[BANK0 ] unsigned char 
 15887 ;; Registers used:
 15888 ;;		wreg, status,2, status,0
 15889 ;; Tracked objects:
 15890 ;;		On entry : 0/0
 15891 ;;		On exit  : 0/0
 15892 ;;		Unchanged: 0/0
 15893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15894 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15895 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15896 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15897 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15898 ;;Total ram usage:       26 bytes
 15899 ;; Hardware stack levels used:    1
 15900 ;; Hardware stack levels required when called:    4
 15901 ;; This function calls:
 15902 ;;		Nothing
 15903 ;; This function is called by:
 15904 ;;		_LED_setColor
 15905 ;;		_LED_task_BEAT
 15906 ;; This function uses a non-reentrant model
 15907 ;;
 15908                           
 15909                           
 15910                           ;psect for function ___fldiv
 15911  0E86                     ___fldiv:	
 15912                           
 15913                           ;incstack = 0
 15914                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 15915  0E86  0140               	movlb	0	; select bank0
 15916  0E87  0835               	movf	___fldiv@b+3,w
 15917  0E88  3980               	andlw	128
 15918  0E89  00B6               	movwf	??___fldiv
 15919  0E8A  0836               	movf	??___fldiv,w
 15920  0E8B  00BF               	movwf	___fldiv@sign
 15921  0E8C  3535               	lslf	___fldiv@b+3,w
 15922  0E8D  00B6               	movwf	??___fldiv
 15923  0E8E  0836               	movf	??___fldiv,w
 15924  0E8F  00C6               	movwf	___fldiv@bexp
 15925  0E90  1BB4               	btfsc	___fldiv@b+2,7
 15926  0E91  1446               	bsf	___fldiv@bexp,0
 15927  0E92  0846               	movf	___fldiv@bexp,w
 15928  0E93  1903               	btfsc	3,2
 15929  0E94  2EA3               	goto	l4348
 15930  0E95  0A46               	incf	___fldiv@bexp,w
 15931  0E96  1D03               	btfss	3,2
 15932  0E97  2EA0               	goto	l4344
 15933  0E98  3000               	movlw	0
 15934  0E99  00B5               	movwf	___fldiv@b+3
 15935  0E9A  3000               	movlw	0
 15936  0E9B  00B4               	movwf	___fldiv@b+2
 15937  0E9C  3000               	movlw	0
 15938  0E9D  00B3               	movwf	___fldiv@b+1
 15939  0E9E  3000               	movlw	0
 15940  0E9F  00B2               	movwf	___fldiv@b
 15941  0EA0                     l4344:	
 15942  0EA0  17B4               	bsf	___fldiv@b+2,7
 15943  0EA1  01B5               	clrf	___fldiv@b+3
 15944  0EA2  2EAB               	goto	l4350
 15945  0EA3                     l4348:	
 15946  0EA3  3000               	movlw	0
 15947  0EA4  00B5               	movwf	___fldiv@b+3
 15948  0EA5  3000               	movlw	0
 15949  0EA6  00B4               	movwf	___fldiv@b+2
 15950  0EA7  3000               	movlw	0
 15951  0EA8  00B3               	movwf	___fldiv@b+1
 15952  0EA9  3000               	movlw	0
 15953  0EAA  00B2               	movwf	___fldiv@b
 15954  0EAB                     l4350:	
 15955  0EAB  0831               	movf	___fldiv@a+3,w
 15956  0EAC  3980               	andlw	128
 15957  0EAD  00B6               	movwf	??___fldiv
 15958  0EAE  0836               	movf	??___fldiv,w
 15959  0EAF  06BF               	xorwf	___fldiv@sign,f
 15960  0EB0  3531               	lslf	___fldiv@a+3,w
 15961  0EB1  00B6               	movwf	??___fldiv
 15962  0EB2  0836               	movf	??___fldiv,w
 15963  0EB3  00C7               	movwf	___fldiv@aexp
 15964  0EB4  1BB0               	btfsc	___fldiv@a+2,7
 15965  0EB5  1447               	bsf	___fldiv@aexp,0
 15966  0EB6  0847               	movf	___fldiv@aexp,w
 15967  0EB7  1903               	btfsc	3,2
 15968  0EB8  2EC7               	goto	l4368
 15969  0EB9  0A47               	incf	___fldiv@aexp,w
 15970  0EBA  1D03               	btfss	3,2
 15971  0EBB  2EC4               	goto	l4364
 15972  0EBC  3000               	movlw	0
 15973  0EBD  00B1               	movwf	___fldiv@a+3
 15974  0EBE  3000               	movlw	0
 15975  0EBF  00B0               	movwf	___fldiv@a+2
 15976  0EC0  3000               	movlw	0
 15977  0EC1  00AF               	movwf	___fldiv@a+1
 15978  0EC2  3000               	movlw	0
 15979  0EC3  00AE               	movwf	___fldiv@a
 15980  0EC4                     l4364:	
 15981  0EC4  17B0               	bsf	___fldiv@a+2,7
 15982  0EC5  01B1               	clrf	___fldiv@a+3
 15983  0EC6  2ECF               	goto	l1848
 15984  0EC7                     l4368:	
 15985  0EC7  3000               	movlw	0
 15986  0EC8  00B1               	movwf	___fldiv@a+3
 15987  0EC9  3000               	movlw	0
 15988  0ECA  00B0               	movwf	___fldiv@a+2
 15989  0ECB  3000               	movlw	0
 15990  0ECC  00AF               	movwf	___fldiv@a+1
 15991  0ECD  3000               	movlw	0
 15992  0ECE  00AE               	movwf	___fldiv@a
 15993  0ECF                     l1848:	
 15994  0ECF  0831               	movf	___fldiv@a+3,w
 15995  0ED0  0430               	iorwf	___fldiv@a+2,w
 15996  0ED1  042F               	iorwf	___fldiv@a+1,w
 15997  0ED2  042E               	iorwf	___fldiv@a,w
 15998  0ED3  1D03               	skipz
 15999  0ED4  2EEE               	goto	l4378
 16000  0ED5  3000               	movlw	0
 16001  0ED6  00B5               	movwf	___fldiv@b+3
 16002  0ED7  3000               	movlw	0
 16003  0ED8  00B4               	movwf	___fldiv@b+2
 16004  0ED9  3000               	movlw	0
 16005  0EDA  00B3               	movwf	___fldiv@b+1
 16006  0EDB  3000               	movlw	0
 16007  0EDC  00B2               	movwf	___fldiv@b
 16008  0EDD  3080               	movlw	128
 16009  0EDE  04B4               	iorwf	___fldiv@b+2,f
 16010  0EDF  307F               	movlw	127
 16011  0EE0  04B5               	iorwf	___fldiv@b+3,f
 16012  0EE1                     L11:	
 16013  0EE1  083F               	movf	___fldiv@sign,w
 16014  0EE2  00B6               	movwf	??___fldiv
 16015  0EE3  0836               	movf	??___fldiv,w
 16016  0EE4  04B5               	iorwf	___fldiv@b+3,f
 16017  0EE5  0835               	movf	___fldiv@b+3,w
 16018  0EE6  00B1               	movwf	?___fldiv+3
 16019  0EE7  0834               	movf	___fldiv@b+2,w
 16020  0EE8  00B0               	movwf	?___fldiv+2
 16021  0EE9  0833               	movf	___fldiv@b+1,w
 16022  0EEA  00AF               	movwf	?___fldiv+1
 16023  0EEB  0832               	movf	___fldiv@b,w
 16024  0EEC  00AE               	movwf	?___fldiv
 16025  0EED  0008               	return
 16026  0EEE                     l4378:	
 16027  0EEE  0846               	movf	___fldiv@bexp,w
 16028  0EEF  1D03               	btfss	3,2
 16029  0EF0  2EFA               	goto	l4384
 16030  0EF1  3000               	movlw	0
 16031  0EF2  00B1               	movwf	?___fldiv+3
 16032  0EF3  3000               	movlw	0
 16033  0EF4  00B0               	movwf	?___fldiv+2
 16034  0EF5  3000               	movlw	0
 16035  0EF6  00AF               	movwf	?___fldiv+1
 16036  0EF7  3000               	movlw	0
 16037  0EF8  00AE               	movwf	?___fldiv
 16038  0EF9  0008               	return
 16039  0EFA                     l4384:	
 16040  0EFA  0846               	movf	___fldiv@bexp,w
 16041  0EFB  00B6               	movwf	??___fldiv
 16042  0EFC  01B7               	clrf	??___fldiv+1
 16043  0EFD  0837               	movf	??___fldiv+1,w
 16044  0EFE  00B9               	movwf	??___fldiv+3
 16045  0EFF  0847               	movf	___fldiv@aexp,w
 16046  0F00  0236               	subwf	??___fldiv,w
 16047  0F01  00B8               	movwf	??___fldiv+2
 16048  0F02  1C03               	skipc
 16049  0F03  03B9               	decf	??___fldiv+3,f
 16050  0F04  0838               	movf	??___fldiv+2,w
 16051  0F05  3E7F               	addlw	127
 16052  0F06  00C0               	movwf	___fldiv@new_exp
 16053  0F07  3000               	movlw	0
 16054  0F08  3D39               	addwfc	??___fldiv+3,w
 16055  0F09  00C1               	movwf	___fldiv@new_exp+1
 16056  0F0A  0835               	movf	___fldiv@b+3,w
 16057  0F0B  00BE               	movwf	___fldiv@rem+3
 16058  0F0C  0834               	movf	___fldiv@b+2,w
 16059  0F0D  00BD               	movwf	___fldiv@rem+2
 16060  0F0E  0833               	movf	___fldiv@b+1,w
 16061  0F0F  00BC               	movwf	___fldiv@rem+1
 16062  0F10  0832               	movf	___fldiv@b,w
 16063  0F11  00BB               	movwf	___fldiv@rem
 16064  0F12  3000               	movlw	0
 16065  0F13  00B5               	movwf	___fldiv@b+3
 16066  0F14  3000               	movlw	0
 16067  0F15  00B4               	movwf	___fldiv@b+2
 16068  0F16  3000               	movlw	0
 16069  0F17  00B3               	movwf	___fldiv@b+1
 16070  0F18  3000               	movlw	0
 16071  0F19  00B2               	movwf	___fldiv@b
 16072  0F1A  3000               	movlw	0
 16073  0F1B  00C5               	movwf	___fldiv@grs+3
 16074  0F1C  3000               	movlw	0
 16075  0F1D  00C4               	movwf	___fldiv@grs+2
 16076  0F1E  3000               	movlw	0
 16077  0F1F  00C3               	movwf	___fldiv@grs+1
 16078  0F20  3000               	movlw	0
 16079  0F21  00C2               	movwf	___fldiv@grs
 16080  0F22  01C7               	clrf	___fldiv@aexp
 16081  0F23                     l4412:	
 16082  0F23  301A               	movlw	26
 16083  0F24  0247               	subwf	___fldiv@aexp,w
 16084  0F25  1803               	btfsc	3,0
 16085  0F26  2F5F               	goto	l4414
 16086  0F27  0847               	movf	___fldiv@aexp,w
 16087  0F28  1903               	btfsc	3,2
 16088  0F29  2F41               	goto	l4404
 16089  0F2A  3001               	movlw	1
 16090  0F2B                     u3255:	
 16091  0F2B  35BB               	lslf	___fldiv@rem,f
 16092  0F2C  0DBC               	rlf	___fldiv@rem+1,f
 16093  0F2D  0DBD               	rlf	___fldiv@rem+2,f
 16094  0F2E  0DBE               	rlf	___fldiv@rem+3,f
 16095  0F2F  0B89               	decfsz	9,f
 16096  0F30  2F2B               	goto	u3255
 16097  0F31  3001               	movlw	1
 16098  0F32                     u3265:	
 16099  0F32  35B2               	lslf	___fldiv@b,f
 16100  0F33  0DB3               	rlf	___fldiv@b+1,f
 16101  0F34  0DB4               	rlf	___fldiv@b+2,f
 16102  0F35  0DB5               	rlf	___fldiv@b+3,f
 16103  0F36  0B89               	decfsz	9,f
 16104  0F37  2F32               	goto	u3265
 16105  0F38  1BC5               	btfsc	___fldiv@grs+3,7
 16106  0F39  1432               	bsf	___fldiv@b,0
 16107  0F3A  3001               	movlw	1
 16108  0F3B                     u3285:	
 16109  0F3B  35C2               	lslf	___fldiv@grs,f
 16110  0F3C  0DC3               	rlf	___fldiv@grs+1,f
 16111  0F3D  0DC4               	rlf	___fldiv@grs+2,f
 16112  0F3E  0DC5               	rlf	___fldiv@grs+3,f
 16113  0F3F  0B89               	decfsz	9,f
 16114  0F40  2F3B               	goto	u3285
 16115  0F41                     l4404:	
 16116  0F41  0831               	movf	___fldiv@a+3,w
 16117  0F42  023E               	subwf	___fldiv@rem+3,w
 16118  0F43  1D03               	skipz
 16119  0F44  2F4F               	goto	u3295
 16120  0F45  0830               	movf	___fldiv@a+2,w
 16121  0F46  023D               	subwf	___fldiv@rem+2,w
 16122  0F47  1D03               	skipz
 16123  0F48  2F4F               	goto	u3295
 16124  0F49  082F               	movf	___fldiv@a+1,w
 16125  0F4A  023C               	subwf	___fldiv@rem+1,w
 16126  0F4B  1D03               	skipz
 16127  0F4C  2F4F               	goto	u3295
 16128  0F4D  082E               	movf	___fldiv@a,w
 16129  0F4E  023B               	subwf	___fldiv@rem,w
 16130  0F4F                     u3295:	
 16131  0F4F  1C03               	skipc
 16132  0F50  2F5A               	goto	l4410
 16133  0F51  1745               	bsf	___fldiv@grs+3,6
 16134  0F52  082E               	movf	___fldiv@a,w
 16135  0F53  02BB               	subwf	___fldiv@rem,f
 16136  0F54  082F               	movf	___fldiv@a+1,w
 16137  0F55  3BBC               	subwfb	___fldiv@rem+1,f
 16138  0F56  0830               	movf	___fldiv@a+2,w
 16139  0F57  3BBD               	subwfb	___fldiv@rem+2,f
 16140  0F58  0831               	movf	___fldiv@a+3,w
 16141  0F59  3BBE               	subwfb	___fldiv@rem+3,f
 16142  0F5A                     l4410:	
 16143  0F5A  3001               	movlw	1
 16144  0F5B  00B6               	movwf	??___fldiv
 16145  0F5C  0836               	movf	??___fldiv,w
 16146  0F5D  07C7               	addwf	___fldiv@aexp,f
 16147  0F5E  2F23               	goto	l4412
 16148  0F5F                     l4414:	
 16149  0F5F  083E               	movf	___fldiv@rem+3,w
 16150  0F60  043D               	iorwf	___fldiv@rem+2,w
 16151  0F61  043C               	iorwf	___fldiv@rem+1,w
 16152  0F62  043B               	iorwf	___fldiv@rem,w
 16153  0F63  1D03               	btfss	3,2
 16154  0F64  1442               	bsf	___fldiv@grs,0
 16155  0F65                     l4428:	
 16156  0F65  1BB4               	btfsc	___fldiv@b+2,7
 16157  0F66  2F7C               	goto	l4430
 16158  0F67  3001               	movlw	1
 16159  0F68                     u3325:	
 16160  0F68  35B2               	lslf	___fldiv@b,f
 16161  0F69  0DB3               	rlf	___fldiv@b+1,f
 16162  0F6A  0DB4               	rlf	___fldiv@b+2,f
 16163  0F6B  0DB5               	rlf	___fldiv@b+3,f
 16164  0F6C  0B89               	decfsz	9,f
 16165  0F6D  2F68               	goto	u3325
 16166  0F6E  1BC5               	btfsc	___fldiv@grs+3,7
 16167  0F6F  1432               	bsf	___fldiv@b,0
 16168  0F70  3001               	movlw	1
 16169  0F71                     u3345:	
 16170  0F71  35C2               	lslf	___fldiv@grs,f
 16171  0F72  0DC3               	rlf	___fldiv@grs+1,f
 16172  0F73  0DC4               	rlf	___fldiv@grs+2,f
 16173  0F74  0DC5               	rlf	___fldiv@grs+3,f
 16174  0F75  0B89               	decfsz	9,f
 16175  0F76  2F71               	goto	u3345
 16176  0F77  30FF               	movlw	255
 16177  0F78  07C0               	addwf	___fldiv@new_exp,f
 16178  0F79  30FF               	movlw	255
 16179  0F7A  3DC1               	addwfc	___fldiv@new_exp+1,f
 16180  0F7B  2F65               	goto	l4428
 16181  0F7C                     l4430:	
 16182  0F7C  01C7               	clrf	___fldiv@aexp
 16183  0F7D  1FC5               	btfss	___fldiv@grs+3,7
 16184  0F7E  2F95               	goto	l4440
 16185  0F7F  30FF               	movlw	255
 16186  0F80  0542               	andwf	___fldiv@grs,w
 16187  0F81  00B6               	movwf	??___fldiv
 16188  0F82  30FF               	movlw	255
 16189  0F83  0543               	andwf	___fldiv@grs+1,w
 16190  0F84  00B7               	movwf	??___fldiv+1
 16191  0F85  30FF               	movlw	255
 16192  0F86  0544               	andwf	___fldiv@grs+2,w
 16193  0F87  00B8               	movwf	??___fldiv+2
 16194  0F88  307F               	movlw	127
 16195  0F89  0545               	andwf	___fldiv@grs+3,w
 16196  0F8A  00B9               	movwf	??___fldiv+3
 16197  0F8B  0839               	movf	??___fldiv+3,w
 16198  0F8C  0438               	iorwf	??___fldiv+2,w
 16199  0F8D  0437               	iorwf	??___fldiv+1,w
 16200  0F8E  0436               	iorwf	??___fldiv,w
 16201  0F8F  1903               	skipnz
 16202  0F90  1832               	btfsc	___fldiv@b,0
 16203  0F91  2F93               	goto	l4436
 16204  0F92  2F95               	goto	l4440
 16205  0F93                     l4436:	
 16206  0F93  01C7               	clrf	___fldiv@aexp
 16207  0F94  0AC7               	incf	___fldiv@aexp,f
 16208  0F95                     l4440:	
 16209  0F95  0847               	movf	___fldiv@aexp,w
 16210  0F96  1903               	btfsc	3,2
 16211  0F97  2FBE               	goto	l4450
 16212  0F98  3001               	movlw	1
 16213  0F99  07B2               	addwf	___fldiv@b,f
 16214  0F9A  3000               	movlw	0
 16215  0F9B  3DB3               	addwfc	___fldiv@b+1,f
 16216  0F9C  3000               	movlw	0
 16217  0F9D  3DB4               	addwfc	___fldiv@b+2,f
 16218  0F9E  3000               	movlw	0
 16219  0F9F  3DB5               	addwfc	___fldiv@b+3,f
 16220  0FA0  1C35               	btfss	___fldiv@b+3,0
 16221  0FA1  2FBE               	goto	l4450
 16222  0FA2  0832               	movf	___fldiv@b,w
 16223  0FA3  00B6               	movwf	??___fldiv
 16224  0FA4  0833               	movf	___fldiv@b+1,w
 16225  0FA5  00B7               	movwf	??___fldiv+1
 16226  0FA6  0834               	movf	___fldiv@b+2,w
 16227  0FA7  00B8               	movwf	??___fldiv+2
 16228  0FA8  0835               	movf	___fldiv@b+3,w
 16229  0FA9  00B9               	movwf	??___fldiv+3
 16230  0FAA  3001               	movlw	1
 16231  0FAB  00BA               	movwf	??___fldiv+4
 16232  0FAC                     u3415:	
 16233  0FAC  37B9               	asrf	??___fldiv+3,f
 16234  0FAD  0CB8               	rrf	??___fldiv+2,f
 16235  0FAE  0CB7               	rrf	??___fldiv+1,f
 16236  0FAF  0CB6               	rrf	??___fldiv,f
 16237  0FB0  0BBA               	decfsz	??___fldiv+4,f
 16238  0FB1  2FAC               	goto	u3415
 16239  0FB2  0839               	movf	??___fldiv+3,w
 16240  0FB3  00B5               	movwf	___fldiv@b+3
 16241  0FB4  0838               	movf	??___fldiv+2,w
 16242  0FB5  00B4               	movwf	___fldiv@b+2
 16243  0FB6  0837               	movf	??___fldiv+1,w
 16244  0FB7  00B3               	movwf	___fldiv@b+1
 16245  0FB8  0836               	movf	??___fldiv,w
 16246  0FB9  00B2               	movwf	___fldiv@b
 16247  0FBA  3001               	movlw	1
 16248  0FBB  07C0               	addwf	___fldiv@new_exp,f
 16249  0FBC  3000               	movlw	0
 16250  0FBD  3DC1               	addwfc	___fldiv@new_exp+1,f
 16251  0FBE                     l4450:	
 16252  0FBE  0841               	movf	___fldiv@new_exp+1,w
 16253  0FBF  3A80               	xorlw	128
 16254  0FC0  00B6               	movwf	??___fldiv
 16255  0FC1  3080               	movlw	128
 16256  0FC2  0236               	subwf	??___fldiv,w
 16257  0FC3  1D03               	skipz
 16258  0FC4  2FC7               	goto	u3425
 16259  0FC5  30FF               	movlw	255
 16260  0FC6  0240               	subwf	___fldiv@new_exp,w
 16261  0FC7                     u3425:	
 16262  0FC7  1C03               	skipc
 16263  0FC8  2FD6               	goto	l1869
 16264  0FC9  30FF               	movlw	255
 16265  0FCA  0140               	movlb	0	; select bank0
 16266  0FCB  00C0               	movwf	___fldiv@new_exp
 16267  0FCC  3000               	movlw	0
 16268  0FCD  00C1               	movwf	___fldiv@new_exp+1
 16269  0FCE  3000               	movlw	0
 16270  0FCF  00B5               	movwf	___fldiv@b+3
 16271  0FD0  3000               	movlw	0
 16272  0FD1  00B4               	movwf	___fldiv@b+2
 16273  0FD2  3000               	movlw	0
 16274  0FD3  00B3               	movwf	___fldiv@b+1
 16275  0FD4  3000               	movlw	0
 16276  0FD5  00B2               	movwf	___fldiv@b
 16277  0FD6                     l1869:	
 16278  0FD6  0140               	movlb	0	; select bank0
 16279  0FD7  0841               	movf	___fldiv@new_exp+1,w
 16280  0FD8  3A80               	xorlw	128
 16281  0FD9  00B6               	movwf	??___fldiv
 16282  0FDA  3080               	movlw	128
 16283  0FDB  0236               	subwf	??___fldiv,w
 16284  0FDC  1D03               	skipz
 16285  0FDD  2FE0               	goto	u3435
 16286  0FDE  3001               	movlw	1
 16287  0FDF  0240               	subwf	___fldiv@new_exp,w
 16288  0FE0                     u3435:	
 16289  0FE0  1803               	skipnc
 16290  0FE1  2FEE               	goto	l1870
 16291  0FE2  0140               	movlb	0	; select bank0
 16292  0FE3  01C0               	clrf	___fldiv@new_exp
 16293  0FE4  01C1               	clrf	___fldiv@new_exp+1
 16294  0FE5  3000               	movlw	0
 16295  0FE6  00B5               	movwf	___fldiv@b+3
 16296  0FE7  3000               	movlw	0
 16297  0FE8  00B4               	movwf	___fldiv@b+2
 16298  0FE9  3000               	movlw	0
 16299  0FEA  00B3               	movwf	___fldiv@b+1
 16300  0FEB  3000               	movlw	0
 16301  0FEC  00B2               	movwf	___fldiv@b
 16302  0FED  01BF               	clrf	___fldiv@sign
 16303  0FEE                     l1870:	
 16304  0FEE  0140               	movlb	0	; select bank0
 16305  0FEF  0840               	movf	___fldiv@new_exp,w
 16306  0FF0  00B6               	movwf	??___fldiv
 16307  0FF1  0836               	movf	??___fldiv,w
 16308  0FF2  00C6               	movwf	___fldiv@bexp
 16309  0FF3  1C46               	btfss	___fldiv@bexp,0
 16310  0FF4  2FF7               	goto	l4464
 16311  0FF5  17B4               	bsf	___fldiv@b+2,7
 16312  0FF6  2FFB               	goto	l1872
 16313  0FF7                     l4464:	
 16314  0FF7  307F               	movlw	127
 16315  0FF8  00B6               	movwf	??___fldiv
 16316  0FF9  0836               	movf	??___fldiv,w
 16317  0FFA  05B4               	andwf	___fldiv@b+2,f
 16318  0FFB                     l1872:	
 16319  0FFB  3646               	lsrf	___fldiv@bexp,w
 16320  0FFC  00B6               	movwf	??___fldiv
 16321  0FFD  0836               	movf	??___fldiv,w
 16322  0FFE  00B5               	movwf	___fldiv@b+3
 16323  0FFF  2EE1               	goto	L11
 16324  1000                     __end_of___fldiv:	
 16325                           
 16326                           	psect	text29
 16327  1124                     __ptext29:	
 16328 ;; *************** function _PWM4_LoadDutyValue *****************
 16329 ;; Defined at:
 16330 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 16331 ;; Parameters:    Size  Location     Type
 16332 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 16333 ;; Auto vars:     Size  Location     Type
 16334 ;;		None
 16335 ;; Return value:  Size  Location     Type
 16336 ;;                  1    wreg      void 
 16337 ;; Registers used:
 16338 ;;		wreg, status,2
 16339 ;; Tracked objects:
 16340 ;;		On entry : 0/0
 16341 ;;		On exit  : 0/0
 16342 ;;		Unchanged: 0/0
 16343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16348 ;;Total ram usage:        2 bytes
 16349 ;; Hardware stack levels used:    1
 16350 ;; Hardware stack levels required when called:    4
 16351 ;; This function calls:
 16352 ;;		Nothing
 16353 ;; This function is called by:
 16354 ;;		_LED_setColor
 16355 ;;		_LED_task_BEAT
 16356 ;; This function uses a non-reentrant model
 16357 ;;
 16358                           
 16359                           
 16360                           ;psect for function _PWM4_LoadDutyValue
 16361  1124                     _PWM4_LoadDutyValue:	
 16362                           
 16363                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 120){
 16364                           
 16365                           ;incstack = 0
 16366                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 16367  1124  3000               	movlw	0
 16368  1125  0140               	movlb	0	; select bank0
 16369  1126  026E               	subwf	PWM4_LoadDutyValue@dutyValue+1,w
 16370  1127  3079               	movlw	121
 16371  1128  1903               	skipnz
 16372  1129  026D               	subwf	PWM4_LoadDutyValue@dutyValue,w
 16373  112A  1803               	skipnc
 16374  112B  0008               	return
 16375                           
 16376                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 16377  112C  30FF               	movlw	255
 16378  112D  05ED               	andwf	PWM4_LoadDutyValue@dutyValue,f
 16379  112E  3003               	movlw	3
 16380  112F  05EE               	andwf	PWM4_LoadDutyValue@dutyValue+1,f
 16381                           
 16382                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 16383  1130  0146               	movlb	6	; select bank6
 16384  1131  1E1A               	btfss	26,4	;volatile
 16385  1132  2939               	goto	l6002
 16386                           
 16387                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 16388  1133  3006               	movlw	6
 16389  1134  0140               	movlb	0	; select bank0
 16390  1135                     u5345:	
 16391  1135  35ED               	lslf	PWM4_LoadDutyValue@dutyValue,f
 16392  1136  0DEE               	rlf	PWM4_LoadDutyValue@dutyValue+1,f
 16393  1137  0B89               	decfsz	9,f
 16394  1138  2935               	goto	u5345
 16395  1139                     l6002:	
 16396                           
 16397                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 16398  1139  0140               	movlb	0	; select bank0
 16399  113A  086E               	movf	PWM4_LoadDutyValue@dutyValue+1,w
 16400  113B  0146               	movlb	6	; select bank6
 16401  113C  0099               	movwf	25	;volatile
 16402                           
 16403                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 16404  113D  0140               	movlb	0	; select bank0
 16405  113E  086D               	movf	PWM4_LoadDutyValue@dutyValue,w
 16406  113F  0146               	movlb	6	; select bank6
 16407  1140  0098               	movwf	24	;volatile
 16408                           
 16409                           ;mcc_generated_files/pwm4.c: 93:         }
 16410  1141  0008               	return
 16411  1142                     __end_of_PWM4_LoadDutyValue:	
 16412                           
 16413                           	psect	text30
 16414  1106                     __ptext30:	
 16415 ;; *************** function _PWM3_LoadDutyValue *****************
 16416 ;; Defined at:
 16417 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 16418 ;; Parameters:    Size  Location     Type
 16419 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 16420 ;; Auto vars:     Size  Location     Type
 16421 ;;		None
 16422 ;; Return value:  Size  Location     Type
 16423 ;;                  1    wreg      void 
 16424 ;; Registers used:
 16425 ;;		wreg, status,2
 16426 ;; Tracked objects:
 16427 ;;		On entry : 0/0
 16428 ;;		On exit  : 0/0
 16429 ;;		Unchanged: 0/0
 16430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16431 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16434 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16435 ;;Total ram usage:        2 bytes
 16436 ;; Hardware stack levels used:    1
 16437 ;; Hardware stack levels required when called:    4
 16438 ;; This function calls:
 16439 ;;		Nothing
 16440 ;; This function is called by:
 16441 ;;		_LED_setColor
 16442 ;;		_LED_task_BEAT
 16443 ;; This function uses a non-reentrant model
 16444 ;;
 16445                           
 16446                           
 16447                           ;psect for function _PWM3_LoadDutyValue
 16448  1106                     _PWM3_LoadDutyValue:	
 16449                           
 16450                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 120){
 16451                           
 16452                           ;incstack = 0
 16453                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 16454  1106  3000               	movlw	0
 16455  1107  0140               	movlb	0	; select bank0
 16456  1108  026E               	subwf	PWM3_LoadDutyValue@dutyValue+1,w
 16457  1109  3079               	movlw	121
 16458  110A  1903               	skipnz
 16459  110B  026D               	subwf	PWM3_LoadDutyValue@dutyValue,w
 16460  110C  1803               	skipnc
 16461  110D  0008               	return
 16462                           
 16463                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 16464  110E  30FF               	movlw	255
 16465  110F  05ED               	andwf	PWM3_LoadDutyValue@dutyValue,f
 16466  1110  3003               	movlw	3
 16467  1111  05EE               	andwf	PWM3_LoadDutyValue@dutyValue+1,f
 16468                           
 16469                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 16470  1112  0146               	movlb	6	; select bank6
 16471  1113  1E16               	btfss	22,4	;volatile
 16472  1114  291B               	goto	l5986
 16473                           
 16474                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 16475  1115  3006               	movlw	6
 16476  1116  0140               	movlb	0	; select bank0
 16477  1117                     u5315:	
 16478  1117  35ED               	lslf	PWM3_LoadDutyValue@dutyValue,f
 16479  1118  0DEE               	rlf	PWM3_LoadDutyValue@dutyValue+1,f
 16480  1119  0B89               	decfsz	9,f
 16481  111A  2917               	goto	u5315
 16482  111B                     l5986:	
 16483                           
 16484                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 16485  111B  0140               	movlb	0	; select bank0
 16486  111C  086E               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 16487  111D  0146               	movlb	6	; select bank6
 16488  111E  0095               	movwf	21	;volatile
 16489                           
 16490                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 16491  111F  0140               	movlb	0	; select bank0
 16492  1120  086D               	movf	PWM3_LoadDutyValue@dutyValue,w
 16493  1121  0146               	movlb	6	; select bank6
 16494  1122  0094               	movwf	20	;volatile
 16495                           
 16496                           ;mcc_generated_files/pwm3.c: 93:         }
 16497  1123  0008               	return
 16498  1124                     __end_of_PWM3_LoadDutyValue:	
 16499                           
 16500                           	psect	text31
 16501  10E8                     __ptext31:	
 16502 ;; *************** function _PWM2_LoadDutyValue *****************
 16503 ;; Defined at:
 16504 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 16505 ;; Parameters:    Size  Location     Type
 16506 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 16507 ;; Auto vars:     Size  Location     Type
 16508 ;;		None
 16509 ;; Return value:  Size  Location     Type
 16510 ;;                  1    wreg      void 
 16511 ;; Registers used:
 16512 ;;		wreg, status,2
 16513 ;; Tracked objects:
 16514 ;;		On entry : 0/0
 16515 ;;		On exit  : 0/0
 16516 ;;		Unchanged: 0/0
 16517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16518 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16521 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16522 ;;Total ram usage:        2 bytes
 16523 ;; Hardware stack levels used:    1
 16524 ;; Hardware stack levels required when called:    4
 16525 ;; This function calls:
 16526 ;;		Nothing
 16527 ;; This function is called by:
 16528 ;;		_LED_setColor
 16529 ;;		_LED_task_BEAT
 16530 ;; This function uses a non-reentrant model
 16531 ;;
 16532                           
 16533                           
 16534                           ;psect for function _PWM2_LoadDutyValue
 16535  10E8                     _PWM2_LoadDutyValue:	
 16536                           
 16537                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 120){
 16538                           
 16539                           ;incstack = 0
 16540                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 16541  10E8  3000               	movlw	0
 16542  10E9  0140               	movlb	0	; select bank0
 16543  10EA  026E               	subwf	PWM2_LoadDutyValue@dutyValue+1,w
 16544  10EB  3079               	movlw	121
 16545  10EC  1903               	skipnz
 16546  10ED  026D               	subwf	PWM2_LoadDutyValue@dutyValue,w
 16547  10EE  1803               	skipnc
 16548  10EF  0008               	return
 16549                           
 16550                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 16551  10F0  30FF               	movlw	255
 16552  10F1  05ED               	andwf	PWM2_LoadDutyValue@dutyValue,f
 16553  10F2  3003               	movlw	3
 16554  10F3  05EE               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 16555                           
 16556                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 16557  10F4  0146               	movlb	6	; select bank6
 16558  10F5  1E12               	btfss	18,4	;volatile
 16559  10F6  28FD               	goto	l6034
 16560                           
 16561                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 16562  10F7  3006               	movlw	6
 16563  10F8  0140               	movlb	0	; select bank0
 16564  10F9                     u5405:	
 16565  10F9  35ED               	lslf	PWM2_LoadDutyValue@dutyValue,f
 16566  10FA  0DEE               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 16567  10FB  0B89               	decfsz	9,f
 16568  10FC  28F9               	goto	u5405
 16569  10FD                     l6034:	
 16570                           
 16571                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 16572  10FD  0140               	movlb	0	; select bank0
 16573  10FE  086E               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 16574  10FF  0146               	movlb	6	; select bank6
 16575  1100  0091               	movwf	17	;volatile
 16576                           
 16577                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 16578  1101  0140               	movlb	0	; select bank0
 16579  1102  086D               	movf	PWM2_LoadDutyValue@dutyValue,w
 16580  1103  0146               	movlb	6	; select bank6
 16581  1104  0090               	movwf	16	;volatile
 16582                           
 16583                           ;mcc_generated_files/pwm2.c: 93:         }
 16584  1105  0008               	return
 16585  1106                     __end_of_PWM2_LoadDutyValue:	
 16586                           
 16587                           	psect	text32
 16588  10CA                     __ptext32:	
 16589 ;; *************** function _PWM1_LoadDutyValue *****************
 16590 ;; Defined at:
 16591 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  1    wreg      void 
 16598 ;; Registers used:
 16599 ;;		wreg, status,2
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16608 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16609 ;;Total ram usage:        2 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; Hardware stack levels required when called:    4
 16612 ;; This function calls:
 16613 ;;		Nothing
 16614 ;; This function is called by:
 16615 ;;		_LED_setColor
 16616 ;;		_LED_task_BEAT
 16617 ;; This function uses a non-reentrant model
 16618 ;;
 16619                           
 16620                           
 16621                           ;psect for function _PWM1_LoadDutyValue
 16622  10CA                     _PWM1_LoadDutyValue:	
 16623                           
 16624                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 120){
 16625                           
 16626                           ;incstack = 0
 16627                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 16628  10CA  3000               	movlw	0
 16629  10CB  0140               	movlb	0	; select bank0
 16630  10CC  026E               	subwf	PWM1_LoadDutyValue@dutyValue+1,w
 16631  10CD  3079               	movlw	121
 16632  10CE  1903               	skipnz
 16633  10CF  026D               	subwf	PWM1_LoadDutyValue@dutyValue,w
 16634  10D0  1803               	skipnc
 16635  10D1  0008               	return
 16636                           
 16637                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 16638  10D2  30FF               	movlw	255
 16639  10D3  05ED               	andwf	PWM1_LoadDutyValue@dutyValue,f
 16640  10D4  3003               	movlw	3
 16641  10D5  05EE               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 16642                           
 16643                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 16644  10D6  0146               	movlb	6	; select bank6
 16645  10D7  1E0E               	btfss	14,4	;volatile
 16646  10D8  28DF               	goto	l6018
 16647                           
 16648                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 16649  10D9  3006               	movlw	6
 16650  10DA  0140               	movlb	0	; select bank0
 16651  10DB                     u5375:	
 16652  10DB  35ED               	lslf	PWM1_LoadDutyValue@dutyValue,f
 16653  10DC  0DEE               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 16654  10DD  0B89               	decfsz	9,f
 16655  10DE  28DB               	goto	u5375
 16656  10DF                     l6018:	
 16657                           
 16658                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 16659  10DF  0140               	movlb	0	; select bank0
 16660  10E0  086E               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 16661  10E1  0146               	movlb	6	; select bank6
 16662  10E2  008D               	movwf	13	;volatile
 16663                           
 16664                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 16665  10E3  0140               	movlb	0	; select bank0
 16666  10E4  086D               	movf	PWM1_LoadDutyValue@dutyValue,w
 16667  10E5  0146               	movlb	6	; select bank6
 16668  10E6  008C               	movwf	12	;volatile
 16669                           
 16670                           ;mcc_generated_files/pwm1.c: 93:         }
 16671  10E7  0008               	return
 16672  10E8                     __end_of_PWM1_LoadDutyValue:	
 16673                           
 16674                           	psect	text33
 16675  07FF                     __ptext33:	
 16676 ;; *************** function _LED_task_ANIMATION *****************
 16677 ;; Defined at:
 16678 ;;		line 120 in file "led.c"
 16679 ;; Parameters:    Size  Location     Type
 16680 ;;		None
 16681 ;; Auto vars:     Size  Location     Type
 16682 ;;		None
 16683 ;; Return value:  Size  Location     Type
 16684 ;;                  1    wreg      void 
 16685 ;; Registers used:
 16686 ;;		None
 16687 ;; Tracked objects:
 16688 ;;		On entry : 0/0
 16689 ;;		On exit  : 0/0
 16690 ;;		Unchanged: 0/0
 16691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16696 ;;Total ram usage:        0 bytes
 16697 ;; Hardware stack levels used:    1
 16698 ;; Hardware stack levels required when called:    4
 16699 ;; This function calls:
 16700 ;;		Nothing
 16701 ;; This function is called by:
 16702 ;;		_LED_task
 16703 ;; This function uses a non-reentrant model
 16704 ;;
 16705                           
 16706                           
 16707                           ;psect for function _LED_task_ANIMATION
 16708  07FF                     _LED_task_ANIMATION:	
 16709                           
 16710                           ;incstack = 0
 16711                           ; Regs used in _LED_task_ANIMATION: []
 16712  07FF  0008               	return
 16713  0800                     __end_of_LED_task_ANIMATION:	
 16714                           
 16715                           	psect	text34
 16716  1F9C                     __ptext34:	
 16717 ;; *************** function _DMX_init *****************
 16718 ;; Defined at:
 16719 ;;		line 21 in file "dmx.c"
 16720 ;; Parameters:    Size  Location     Type
 16721 ;;		None
 16722 ;; Auto vars:     Size  Location     Type
 16723 ;;		None
 16724 ;; Return value:  Size  Location     Type
 16725 ;;                  1    wreg      void 
 16726 ;; Registers used:
 16727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16728 ;; Tracked objects:
 16729 ;;		On entry : 0/0
 16730 ;;		On exit  : 0/0
 16731 ;;		Unchanged: 0/0
 16732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16737 ;;Total ram usage:        0 bytes
 16738 ;; Hardware stack levels used:    1
 16739 ;; Hardware stack levels required when called:    9
 16740 ;; This function calls:
 16741 ;;		_EUSART1_SetRxInterruptHandler
 16742 ;;		_TM1650_fastPrintNum
 16743 ;; This function is called by:
 16744 ;;		_main
 16745 ;; This function uses a non-reentrant model
 16746 ;;
 16747                           
 16748                           
 16749                           ;psect for function _DMX_init
 16750  1F9C                     _DMX_init:	
 16751                           
 16752                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 16753                           
 16754                           ;incstack = 0
 16755                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16756  1F9C  3032               	movlw	low _DMX_interrupt
 16757  1F9D  0140               	movlb	0	; select bank0
 16758  1F9E  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 16759  1F9F  3013               	movlw	high _DMX_interrupt
 16760  1FA0  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 16761  1FA1  319E  26AC  319F   	fcall	_EUSART1_SetRxInterruptHandler
 16762                           
 16763                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 16764  1FA4  0141               	movlb	1	; select bank1
 16765  1FA5  086B               	movf	(_address+1)^(0+128),w
 16766  1FA6  0140               	movlb	0	; select bank0
 16767  1FA7  00B5               	movwf	TM1650_fastPrintNum@num+1
 16768  1FA8  0141               	movlb	1	; select bank1
 16769  1FA9  086A               	movf	_address^(0+128),w
 16770  1FAA  0140               	movlb	0	; select bank0
 16771  1FAB  00B4               	movwf	TM1650_fastPrintNum@num
 16772  1FAC  3188  207E         	fcall	_TM1650_fastPrintNum
 16773  1FAE  0008               	return
 16774  1FAF                     __end_of_DMX_init:	
 16775                           
 16776                           	psect	text35
 16777  1EAC                     __ptext35:	
 16778 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 16779 ;; Defined at:
 16780 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 16781 ;; Parameters:    Size  Location     Type
 16782 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 16783 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 16784 ;; Auto vars:     Size  Location     Type
 16785 ;;		None
 16786 ;; Return value:  Size  Location     Type
 16787 ;;                  1    wreg      void 
 16788 ;; Registers used:
 16789 ;;		wreg
 16790 ;; Tracked objects:
 16791 ;;		On entry : 0/0
 16792 ;;		On exit  : 0/0
 16793 ;;		Unchanged: 0/0
 16794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16795 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16798 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16799 ;;Total ram usage:        2 bytes
 16800 ;; Hardware stack levels used:    1
 16801 ;; Hardware stack levels required when called:    4
 16802 ;; This function calls:
 16803 ;;		Nothing
 16804 ;; This function is called by:
 16805 ;;		_EUSART1_Initialize
 16806 ;;		_DMX_init
 16807 ;; This function uses a non-reentrant model
 16808 ;;
 16809                           
 16810                           
 16811                           ;psect for function _EUSART1_SetRxInterruptHandler
 16812  1EAC                     _EUSART1_SetRxInterruptHandler:	
 16813                           
 16814                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 16815                           
 16816                           ;incstack = 0
 16817                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 16818  1EAC  0140               	movlb	0	; select bank0
 16819  1EAD  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 16820  1EAE  0142               	movlb	2	; select bank2
 16821  1EAF  00CF               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 16822  1EB0  0140               	movlb	0	; select bank0
 16823  1EB1  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 16824  1EB2  0142               	movlb	2	; select bank2
 16825  1EB3  00CE               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 16826  1EB4  0008               	return
 16827  1EB5                     __end_of_EUSART1_SetRxInterruptHandler:	
 16828                           
 16829                           	psect	text36
 16830  0AF5                     __ptext36:	
 16831 ;; *************** function _CONTROLLER_task *****************
 16832 ;; Defined at:
 16833 ;;		line 21 in file "controller.c"
 16834 ;; Parameters:    Size  Location     Type
 16835 ;;		None
 16836 ;; Auto vars:     Size  Location     Type
 16837 ;;  isActive        1   79[BANK0 ] _Bool 
 16838 ;; Return value:  Size  Location     Type
 16839 ;;                  1    wreg      void 
 16840 ;; Registers used:
 16841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16842 ;; Tracked objects:
 16843 ;;		On entry : 0/0
 16844 ;;		On exit  : 0/0
 16845 ;;		Unchanged: 0/0
 16846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16849 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16850 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16851 ;;Total ram usage:        3 bytes
 16852 ;; Hardware stack levels used:    1
 16853 ;; Hardware stack levels required when called:   18
 16854 ;; This function calls:
 16855 ;;		_BUTTONS_isClicked
 16856 ;;		_CLOCK_getTime
 16857 ;;		_CONTROL_BEAT
 16858 ;;		_CONTROL_DMX
 16859 ;;		_TM1650_enable
 16860 ;;		_TM1650_fastPrintNum
 16861 ;;		_menuSelection
 16862 ;;		_printf
 16863 ;; This function is called by:
 16864 ;;		_main
 16865 ;; This function uses a non-reentrant model
 16866 ;;
 16867                           
 16868                           
 16869                           ;psect for function _CONTROLLER_task
 16870  0AF5                     _CONTROLLER_task:	
 16871                           
 16872                           ;controller.c: 23:     _Bool isActive = 1;
 16873                           
 16874                           ;incstack = 0
 16875 ;; hardware stack exceeded
 16876                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16877  0AF5  0140               	movlb	0	; select bank0
 16878  0AF6  01EF               	clrf	CONTROLLER_task@isActive
 16879  0AF7  0AEF               	incf	CONTROLLER_task@isActive,f
 16880                           
 16881                           ;controller.c: 24:     upState = BUTTONS_isClicked(up);
 16882  0AF8  0141               	movlb	1	; select bank1
 16883  0AF9  0845               	movf	_up^(0+128),w
 16884  0AFA  319F  27AF  318A   	fcall	_BUTTONS_isClicked
 16885  0AFD  0141               	movlb	1	; select bank1
 16886  0AFE  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16887  0AFF  085B               	movf	??_CONTROLLER_task^(0+128),w
 16888  0B00  00C0               	movwf	_upState^(0+128)
 16889                           
 16890                           ;controller.c: 25:     downState = BUTTONS_isClicked(down);
 16891  0B01  0844               	movf	_down^(0+128),w
 16892  0B02  319F  27AF  318A   	fcall	_BUTTONS_isClicked
 16893  0B05  0141               	movlb	1	; select bank1
 16894  0B06  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16895  0B07  085B               	movf	??_CONTROLLER_task^(0+128),w
 16896  0B08  00BF               	movwf	_downState^(0+128)
 16897                           
 16898                           ;controller.c: 26:     menuState = BUTTONS_isClicked(menu);
 16899  0B09  0846               	movf	_menu^(0+128),w
 16900  0B0A  319F  27AF  318A   	fcall	_BUTTONS_isClicked
 16901  0B0D  0141               	movlb	1	; select bank1
 16902  0B0E  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16903  0B0F  085B               	movf	??_CONTROLLER_task^(0+128),w
 16904  0B10  00BE               	movwf	_menuState^(0+128)
 16905                           
 16906                           ;controller.c: 27:     enterState = BUTTONS_isClicked(enter);
 16907  0B11  0843               	movf	_enter^(0+128),w
 16908  0B12  319F  27AF  318A   	fcall	_BUTTONS_isClicked
 16909  0B15  0141               	movlb	1	; select bank1
 16910  0B16  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16911  0B17  085B               	movf	??_CONTROLLER_task^(0+128),w
 16912  0B18  00BD               	movwf	_enterState^(0+128)
 16913                           
 16914                           ;controller.c: 29:     if (startup == 1 && CLOCK_getTime() - startTime < 5000) {
 16915  0B19  036E               	decf	_startup^(0+128),w
 16916  0B1A  1D03               	btfss	3,2
 16917  0B1B  2B40               	goto	l6622
 16918  0B1C  319E  269A  318A   	fcall	_CLOCK_getTime
 16919  0B1F  0141               	movlb	1	; select bank1
 16920  0B20  0837               	movf	_startTime^(0+128),w
 16921  0B21  0140               	movlb	0	; select bank0
 16922  0B22  0220               	subwf	?_CLOCK_getTime,w
 16923  0B23  0141               	movlb	1	; select bank1
 16924  0B24  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16925  0B25  0838               	movf	(_startTime+1)^(0+128),w
 16926  0B26  0140               	movlb	0	; select bank0
 16927  0B27  3B21               	subwfb	?_CLOCK_getTime+1,w
 16928  0B28  0141               	movlb	1	; select bank1
 16929  0B29  00DC               	movwf	(??_CONTROLLER_task+1)^(0+128)
 16930  0B2A  3013               	movlw	19
 16931  0B2B  025C               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 16932  0B2C  3088               	movlw	136
 16933  0B2D  1903               	skipnz
 16934  0B2E  025B               	subwf	??_CONTROLLER_task^(0+128),w
 16935  0B2F  1803               	skipnc
 16936  0B30  2B40               	goto	l6622
 16937                           
 16938                           ;controller.c: 30:         menuSelection();
 16939  0B31  3195  2562  318A   	fcall	_menuSelection
 16940                           
 16941                           ;controller.c: 31:         if (upState || downState || menuState) {
 16942  0B34  0141               	movlb	1	; select bank1
 16943  0B35  0840               	movf	_upState^(0+128),w
 16944  0B36  1D03               	btfss	3,2
 16945  0B37  2B3D               	goto	l1005
 16946  0B38  083F               	movf	_downState^(0+128),w
 16947  0B39  1903               	btfsc	3,2
 16948  0B3A  083E               	movf	_menuState^(0+128),w
 16949  0B3B  1903               	btfsc	3,2
 16950  0B3C  0008               	return
 16951  0B3D                     l1005:	
 16952                           
 16953                           ;controller.c: 32:             menuPressed = 1;
 16954  0B3D  01C2               	clrf	_menuPressed^(0+128)
 16955  0B3E  0AC2               	incf	_menuPressed^(0+128),f
 16956  0B3F  0008               	return
 16957  0B40                     l6622:	
 16958                           
 16959                           ;controller.c: 38:         if (menuPressed == 0 && startup == 1)
 16960  0B40  0842               	movf	_menuPressed^(0+128),w
 16961  0B41  1D03               	btfss	3,2
 16962  0B42  2B4A               	goto	l6628
 16963  0B43  036E               	decf	_startup^(0+128),w
 16964  0B44  1D03               	btfss	3,2
 16965  0B45  2B4A               	goto	l6628
 16966                           
 16967                           ;controller.c: 39:             currentSelection = MODE_DMX;
 16968  0B46  3002               	movlw	2
 16969  0B47  00DB               	movwf	??_CONTROLLER_task^(0+128)
 16970  0B48  085B               	movf	??_CONTROLLER_task^(0+128),w
 16971  0B49  00EC               	movwf	_currentSelection^(0+128)
 16972  0B4A                     l6628:	
 16973                           
 16974                           ;controller.c: 40:         startup = 0;
 16975  0B4A  01EE               	clrf	_startup^(0+128)
 16976                           
 16977                           ;controller.c: 43:     if ((menuState || menuPressed) && !enterPressed) {
 16978  0B4B  083E               	movf	_menuState^(0+128),w
 16979  0B4C  1903               	btfsc	3,2
 16980  0B4D  0842               	movf	_menuPressed^(0+128),w
 16981  0B4E  1903               	btfsc	3,2
 16982  0B4F  2B59               	goto	l6640
 16983  0B50  0841               	movf	_enterPressed^(0+128),w
 16984  0B51  1D03               	btfss	3,2
 16985  0B52  2B59               	goto	l6640
 16986                           
 16987                           ;controller.c: 44:         menuPressed = 1;
 16988  0B53  01C2               	clrf	_menuPressed^(0+128)
 16989  0B54  0AC2               	incf	_menuPressed^(0+128),f
 16990                           
 16991                           ;controller.c: 45:         menuSelection();
 16992  0B55  3195  2562  318A   	fcall	_menuSelection
 16993                           
 16994                           ;controller.c: 46:     } else if (currentSelection == MODE_DMX) {
 16995  0B58  2B76               	goto	l6654
 16996  0B59                     l6640:	
 16997  0B59  3002               	movlw	2
 16998  0B5A  066C               	xorwf	_currentSelection^(0+128),w
 16999  0B5B  1D03               	btfss	3,2
 17000  0B5C  2B61               	goto	l6644
 17001                           
 17002                           ;controller.c: 47:         isActive = CONTROL_DMX();
 17003  0B5D  3196  26B5  318A   	fcall	_CONTROL_DMX
 17004  0B60  2B6E               	goto	L12
 17005  0B61                     l6644:	
 17006                           ;controller.c: 48:     } else if (currentSelection == MODE_ANIMATION) {
 17007                           
 17008  0B61  086C               	movf	_currentSelection^(0+128),w
 17009  0B62  1D03               	btfss	3,2
 17010  0B63  2B68               	goto	l6648
 17011                           
 17012                           ;controller.c: 49:         isActive = 1;
 17013  0B64  0140               	movlb	0	; select bank0
 17014  0B65  01EF               	clrf	CONTROLLER_task@isActive
 17015  0B66  0AEF               	incf	CONTROLLER_task@isActive,f
 17016                           
 17017                           ;controller.c: 50:     } else if (currentSelection == MODE_BEAT) {
 17018  0B67  2B76               	goto	l6654
 17019  0B68                     l6648:	
 17020  0B68  036C               	decf	_currentSelection^(0+128),w
 17021  0B69  1D03               	btfss	3,2
 17022  0B6A  2B74               	goto	l6652
 17023                           
 17024                           ;controller.c: 51:         isActive = CONTROL_BEAT();
 17025  0B6B  3191  21A3  318A   	fcall	_CONTROL_BEAT
 17026  0B6E                     L12:	
 17027  0B6E  0141               	movlb	1	; select bank1
 17028  0B6F  00DB               	movwf	??_CONTROLLER_task^(0+128)
 17029  0B70  085B               	movf	??_CONTROLLER_task^(0+128),w
 17030  0B71  0140               	movlb	0	; select bank0
 17031  0B72  00EF               	movwf	CONTROLLER_task@isActive
 17032                           
 17033                           ;controller.c: 52:     } else {
 17034  0B73  2B76               	goto	l6654
 17035  0B74                     l6652:	
 17036                           
 17037                           ;controller.c: 53:         isActive = 0;
 17038  0B74  0140               	movlb	0	; select bank0
 17039  0B75  01EF               	clrf	CONTROLLER_task@isActive
 17040  0B76                     l6654:	
 17041                           
 17042                           ;controller.c: 56:     if (isActive) {
 17043  0B76  0140               	movlb	0	; select bank0
 17044  0B77  086F               	movf	CONTROLLER_task@isActive,w
 17045  0B78  1903               	btfsc	3,2
 17046  0B79  2B85               	goto	l6658
 17047                           
 17048                           ;controller.c: 57:         lastActiveTime = CLOCK_getTime();
 17049  0B7A  319E  269A  318A   	fcall	_CLOCK_getTime
 17050  0B7D  0140               	movlb	0	; select bank0
 17051  0B7E  0821               	movf	?_CLOCK_getTime+1,w
 17052  0B7F  0141               	movlb	1	; select bank1
 17053  0B80  00B0               	movwf	(_lastActiveTime+1)^(0+128)
 17054  0B81  0140               	movlb	0	; select bank0
 17055  0B82  0820               	movf	?_CLOCK_getTime,w
 17056  0B83  0141               	movlb	1	; select bank1
 17057  0B84  00AF               	movwf	_lastActiveTime^(0+128)
 17058  0B85                     l6658:	
 17059                           
 17060                           ;controller.c: 60:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 17061  0B85  319E  269A  318A   	fcall	_CLOCK_getTime
 17062  0B88  0141               	movlb	1	; select bank1
 17063  0B89  082F               	movf	_lastActiveTime^(0+128),w
 17064  0B8A  0140               	movlb	0	; select bank0
 17065  0B8B  0220               	subwf	?_CLOCK_getTime,w
 17066  0B8C  0141               	movlb	1	; select bank1
 17067  0B8D  00DB               	movwf	??_CONTROLLER_task^(0+128)
 17068  0B8E  0830               	movf	(_lastActiveTime+1)^(0+128),w
 17069  0B8F  0140               	movlb	0	; select bank0
 17070  0B90  3B21               	subwfb	?_CLOCK_getTime+1,w
 17071  0B91  0141               	movlb	1	; select bank1
 17072  0B92  00DC               	movwf	(??_CONTROLLER_task+1)^(0+128)
 17073  0B93  3013               	movlw	19
 17074  0B94  025C               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 17075  0B95  3088               	movlw	136
 17076  0B96  1903               	skipnz
 17077  0B97  025B               	subwf	??_CONTROLLER_task^(0+128),w
 17078  0B98  1C03               	skipc
 17079  0B99  2BAC               	goto	l6664
 17080                           
 17081                           ;controller.c: 61:         TM1650_enable(0);
 17082  0B9A  3000               	movlw	0
 17083  0B9B  319F  27EB  318A   	fcall	_TM1650_enable
 17084                           
 17085                           ;controller.c: 62:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 17086  0B9E  319E  269A  318A   	fcall	_CLOCK_getTime
 17087  0BA1  0140               	movlb	0	; select bank0
 17088  0BA2  0820               	movf	?_CLOCK_getTime,w
 17089  0BA3  3E77               	addlw	119
 17090  0BA4  0141               	movlb	1	; select bank1
 17091  0BA5  00AF               	movwf	_lastActiveTime^(0+128)
 17092  0BA6  30EC               	movlw	236
 17093  0BA7  0140               	movlb	0	; select bank0
 17094  0BA8  3D21               	addwfc	?_CLOCK_getTime+1,w
 17095  0BA9  0141               	movlb	1	; select bank1
 17096  0BAA  00B0               	movwf	(_lastActiveTime+1)^(0+128)
 17097                           
 17098                           ;controller.c: 63:     } else {
 17099  0BAB  2BB0               	goto	l6666
 17100  0BAC                     l6664:	
 17101                           
 17102                           ;controller.c: 64:         TM1650_enable(1);
 17103  0BAC  3001               	movlw	1
 17104  0BAD  319F  27EB  318A   	fcall	_TM1650_enable
 17105  0BB0                     l6666:	
 17106                           
 17107                           ;controller.c: 67:     if (currentSelection == MODE_DMX && !menuPressed) {
 17108  0BB0  3002               	movlw	2
 17109  0BB1  0141               	movlb	1	; select bank1
 17110  0BB2  066C               	xorwf	_currentSelection^(0+128),w
 17111  0BB3  1D03               	btfss	3,2
 17112  0BB4  2BCF               	goto	l6674
 17113  0BB5  0842               	movf	_menuPressed^(0+128),w
 17114  0BB6  1D03               	btfss	3,2
 17115  0BB7  2BCF               	goto	l6674
 17116                           
 17117                           ;controller.c: 68:         TM1650_fastPrintNum(address);
 17118  0BB8  086B               	movf	(_address+1)^(0+128),w
 17119  0BB9  0140               	movlb	0	; select bank0
 17120  0BBA  00B5               	movwf	TM1650_fastPrintNum@num+1
 17121  0BBB  0141               	movlb	1	; select bank1
 17122  0BBC  086A               	movf	_address^(0+128),w
 17123  0BBD  0140               	movlb	0	; select bank0
 17124  0BBE  00B4               	movwf	TM1650_fastPrintNum@num
 17125  0BBF  3188  207E  318A   	fcall	_TM1650_fastPrintNum
 17126  0BC2  2BCC               	goto	l6672
 17127  0BC3                     l6676:	
 17128  0BC3  0842               	movf	_menuPressed^(0+128),w
 17129  0BC4  1D03               	btfss	3,2
 17130  0BC5  2BD2               	goto	l6682
 17131                           
 17132                           ;controller.c: 71:         printf("SEL1\r");
 17133  0BC6  305D               	movlw	low (STR_1| (0+32768))
 17134  0BC7  00D1               	movwf	printf@fmt^(0+128)
 17135  0BC8  30A0               	movlw	high (STR_1| (0+32768))
 17136  0BC9  00D2               	movwf	(printf@fmt^(0+128)+1)
 17137  0BCA                     L13:	
 17138  0BCA  3190  2004         	fcall	_printf
 17139  0BCC                     l6672:	
 17140                           
 17141                           ;controller.c: 69:         enterPressed = 0;
 17142  0BCC  0141               	movlb	1	; select bank1
 17143  0BCD  01C1               	clrf	_enterPressed^(0+128)
 17144                           
 17145                           ;controller.c: 70:     } else if (currentSelection == MODE_ANIMATION && !menuPressed) {
 17146  0BCE  0008               	return
 17147  0BCF                     l6674:	
 17148  0BCF  086C               	movf	_currentSelection^(0+128),w
 17149  0BD0  1903               	btfsc	3,2
 17150  0BD1  2BC3               	goto	l6676
 17151  0BD2                     l6682:	
 17152  0BD2  036C               	decf	_currentSelection^(0+128),w
 17153  0BD3  1D03               	btfss	3,2
 17154  0BD4  0008               	return
 17155  0BD5  0842               	movf	_menuPressed^(0+128),w
 17156  0BD6  1D03               	btfss	3,2
 17157  0BD7  0008               	return
 17158                           
 17159                           ;controller.c: 74:         printf("B-%u  \r", beatBrightness);
 17160  0BD8  3035               	movlw	low (STR_2| (0+32768))
 17161  0BD9  00D1               	movwf	printf@fmt^(0+128)
 17162  0BDA  30A0               	movlw	high (STR_2| (0+32768))
 17163  0BDB  00D2               	movwf	(printf@fmt^(0+128)+1)
 17164  0BDC  086F               	movf	_beatBrightness^(0+128),w
 17165  0BDD  00DB               	movwf	??_CONTROLLER_task^(0+128)
 17166  0BDE  01DC               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17167  0BDF  085B               	movf	??_CONTROLLER_task^(0+128),w
 17168  0BE0  00D3               	movwf	(?_printf^(0+128)+2)
 17169  0BE1  085C               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17170  0BE2  00D4               	movwf	((?_printf+1)^(0+128)+2)
 17171  0BE3  2BCA               	goto	L13
 17172  0BE4                     __end_of_CONTROLLER_task:	
 17173                           
 17174                           	psect	text37
 17175  1562                     __ptext37:	
 17176 ;; *************** function _menuSelection *****************
 17177 ;; Defined at:
 17178 ;;		line 80 in file "controller.c"
 17179 ;; Parameters:    Size  Location     Type
 17180 ;;		None
 17181 ;; Auto vars:     Size  Location     Type
 17182 ;;		None
 17183 ;; Return value:  Size  Location     Type
 17184 ;;                  1    wreg      void 
 17185 ;; Registers used:
 17186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17187 ;; Tracked objects:
 17188 ;;		On entry : 0/0
 17189 ;;		On exit  : 0/0
 17190 ;;		Unchanged: 0/0
 17191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17194 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17195 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17196 ;;Total ram usage:        2 bytes
 17197 ;; Hardware stack levels used:    1
 17198 ;; Hardware stack levels required when called:   17
 17199 ;; This function calls:
 17200 ;;		_printf
 17201 ;; This function is called by:
 17202 ;;		_CONTROLLER_task
 17203 ;; This function uses a non-reentrant model
 17204 ;;
 17205                           
 17206                           
 17207                           ;psect for function _menuSelection
 17208  1562                     _menuSelection:	
 17209                           
 17210                           ;controller.c: 82:     if(upState){
 17211                           
 17212                           ;incstack = 0
 17213 ;; hardware stack exceeded
 17214                           ; Regs used in _menuSelection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17215  1562  0141               	movlb	1	; select bank1
 17216  1563  0840               	movf	_upState^(0+128),w
 17217  1564  1903               	btfsc	3,2
 17218  1565  2D78               	goto	l6290
 17219                           
 17220                           ;controller.c: 83:         if(menuSelected < 2){
 17221  1566  3002               	movlw	2
 17222  1567  026D               	subwf	_menuSelected^(0+128),w
 17223  1568  1803               	skipnc
 17224  1569  2D71               	goto	l6288
 17225                           
 17226                           ;controller.c: 84:             menuSelected++;
 17227  156A  3001               	movlw	1
 17228  156B  0140               	movlb	0	; select bank0
 17229  156C  00ED               	movwf	??_menuSelection
 17230  156D  086D               	movf	??_menuSelection,w
 17231  156E  0141               	movlb	1	; select bank1
 17232  156F  07ED               	addwf	_menuSelected^(0+128),f
 17233                           
 17234                           ;controller.c: 85:         } else {
 17235  1570  2D82               	goto	l6298
 17236  1571                     l6288:	
 17237                           
 17238                           ;controller.c: 86:             menuSelected = 2;
 17239  1571  3002               	movlw	2
 17240  1572  0140               	movlb	0	; select bank0
 17241  1573  00ED               	movwf	??_menuSelection
 17242  1574  086D               	movf	??_menuSelection,w
 17243  1575  0141               	movlb	1	; select bank1
 17244  1576  00ED               	movwf	_menuSelected^(0+128)
 17245  1577  2D82               	goto	l6298
 17246  1578                     l6290:	
 17247  1578  083F               	movf	_downState^(0+128),w
 17248  1579  1903               	btfsc	3,2
 17249  157A  2D82               	goto	l6298
 17250                           
 17251                           ;controller.c: 89:         if(menuSelected > 0){
 17252  157B  086D               	movf	_menuSelected^(0+128),w
 17253  157C  1903               	btfsc	3,2
 17254  157D  2D81               	goto	l6296
 17255                           
 17256                           ;controller.c: 90:             menuSelected--;
 17257  157E  3001               	movlw	1
 17258  157F  02ED               	subwf	_menuSelected^(0+128),f
 17259                           
 17260                           ;controller.c: 91:         } else {
 17261  1580  2D82               	goto	l6298
 17262  1581                     l6296:	
 17263                           
 17264                           ;controller.c: 92:             menuSelected = 0;
 17265  1581  01ED               	clrf	_menuSelected^(0+128)
 17266  1582                     l6298:	
 17267                           
 17268                           ;controller.c: 96:     if (enterState) {
 17269  1582  083D               	movf	_enterState^(0+128),w
 17270  1583  1903               	btfsc	3,2
 17271  1584  2DA7               	goto	l6316
 17272                           
 17273                           ;controller.c: 97:         currentSelection = menuSelected;
 17274  1585  086D               	movf	_menuSelected^(0+128),w
 17275  1586  0140               	movlb	0	; select bank0
 17276  1587  00ED               	movwf	??_menuSelection
 17277  1588  086D               	movf	??_menuSelection,w
 17278  1589  0141               	movlb	1	; select bank1
 17279  158A  00EC               	movwf	_currentSelection^(0+128)
 17280                           
 17281                           ;controller.c: 98:         menuPressed = 0;
 17282  158B  01C2               	clrf	_menuPressed^(0+128)
 17283                           
 17284                           ;controller.c: 99:         enterPressed = 1;
 17285  158C  01C1               	clrf	_enterPressed^(0+128)
 17286  158D  0AC1               	incf	_enterPressed^(0+128),f
 17287  158E  0008               	return
 17288  158F                     l6308:	
 17289                           
 17290                           ;controller.c: 105:             printf("ANI \r");
 17291  158F  3057               	movlw	low (STR_3| (0+32768))
 17292  1590  0141               	movlb	1	; select bank1
 17293  1591  00D1               	movwf	printf@fmt^(0+128)
 17294  1592  30A0               	movlw	high (STR_3| (0+32768))
 17295  1593  00D2               	movwf	(printf@fmt^(0+128)+1)
 17296  1594  3190  2004         	fcall	_printf
 17297                           
 17298                           ;controller.c: 106:             break;
 17299  1596  0008               	return
 17300  1597                     l6310:	
 17301                           
 17302                           ;controller.c: 109:             printf("BEAT\r");
 17303  1597  3063               	movlw	low (STR_4| (0+32768))
 17304  1598  0141               	movlb	1	; select bank1
 17305  1599  00D1               	movwf	printf@fmt^(0+128)
 17306  159A  30A0               	movlw	high (STR_4| (0+32768))
 17307  159B  00D2               	movwf	(printf@fmt^(0+128)+1)
 17308  159C  3190  2004         	fcall	_printf
 17309                           
 17310                           ;controller.c: 110:             break;
 17311  159E  0008               	return
 17312  159F                     l6312:	
 17313                           
 17314                           ;controller.c: 113:             printf("PC  \r");
 17315  159F  3051               	movlw	low (STR_5| (0+32768))
 17316  15A0  0141               	movlb	1	; select bank1
 17317  15A1  00D1               	movwf	printf@fmt^(0+128)
 17318  15A2  30A0               	movlw	high (STR_5| (0+32768))
 17319  15A3  00D2               	movwf	(printf@fmt^(0+128)+1)
 17320  15A4  3190  2004         	fcall	_printf
 17321                           
 17322                           ;controller.c: 114:             break;
 17323  15A6  0008               	return
 17324  15A7                     l6316:	
 17325  15A7  086D               	movf	_menuSelected^(0+128),w
 17326  15A8  0140               	movlb	0	; select bank0
 17327  15A9  00ED               	movwf	??_menuSelection
 17328  15AA  01EE               	clrf	??_menuSelection+1
 17329                           
 17330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17331                           ; Switch size 1, requested type "simple"
 17332                           ; Number of cases is 1, Range of values is 0 to 0
 17333                           ; switch strategies available:
 17334                           ; Name         Instructions Cycles
 17335                           ; simple_byte            4     3 (average)
 17336                           ; direct_byte            8     6 (fixed)
 17337                           ; jumptable            260     6 (fixed)
 17338                           ;	Chosen strategy is simple_byte
 17339  15AB  086E               	movf	??_menuSelection+1,w
 17340  15AC  3A00               	xorlw	0	; case 0
 17341  15AD  1903               	skipnz
 17342  15AE  2DB0               	goto	l6922
 17343  15AF  2DBB               	goto	l1037
 17344  15B0                     l6922:	
 17345                           
 17346                           ; Switch size 1, requested type "simple"
 17347                           ; Number of cases is 3, Range of values is 0 to 2
 17348                           ; switch strategies available:
 17349                           ; Name         Instructions Cycles
 17350                           ; simple_byte           10     6 (average)
 17351                           ; direct_byte           12     6 (fixed)
 17352                           ; jumptable            260     6 (fixed)
 17353                           ;	Chosen strategy is simple_byte
 17354  15B0  086D               	movf	??_menuSelection,w
 17355  15B1  3A00               	xorlw	0	; case 0
 17356  15B2  1903               	skipnz
 17357  15B3  2D8F               	goto	l6308
 17358  15B4  3A01               	xorlw	1	; case 1
 17359  15B5  1903               	skipnz
 17360  15B6  2D97               	goto	l6310
 17361  15B7  3A03               	xorlw	3	; case 2
 17362  15B8  1903               	skipnz
 17363  15B9  2D9F               	goto	l6312
 17364  15BA  2DBB               	goto	l1037
 17365  15BB                     l1037:	
 17366  15BB  0008               	return
 17367  15BC                     __end_of_menuSelection:	
 17368                           
 17369                           	psect	text38
 17370  1004                     __ptext38:	
 17371 ;; *************** function _printf *****************
 17372 ;; Defined at:
 17373 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 17374 ;; Parameters:    Size  Location     Type
 17375 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 17376 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 17377 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 17378 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 17379 ;;		 -> STR_3(6), STR_2(8), STR_1(6), 
 17380 ;; Auto vars:     Size  Location     Type
 17381 ;;  ret             2    0        int 
 17382 ;;  ap              1   76[BANK0 ] PTR void [1]
 17383 ;;		 -> ?_printf(2), 
 17384 ;; Return value:  Size  Location     Type
 17385 ;;                  2    0[BANK1 ] int 
 17386 ;; Registers used:
 17387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17388 ;; Tracked objects:
 17389 ;;		On entry : 0/0
 17390 ;;		On exit  : 0/0
 17391 ;;		Unchanged: 0/0
 17392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17393 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17394 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17395 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17396 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17397 ;;Total ram usage:       14 bytes
 17398 ;; Hardware stack levels used:    1
 17399 ;; Hardware stack levels required when called:   16
 17400 ;; This function calls:
 17401 ;;		_vfprintf
 17402 ;; This function is called by:
 17403 ;;		_CONTROLLER_task
 17404 ;;		_menuSelection
 17405 ;;		_TM1650_init
 17406 ;;		_TM1650_scrollPrint
 17407 ;; This function uses a non-reentrant model
 17408 ;;
 17409                           
 17410                           
 17411                           ;psect for function _printf
 17412  1004                     _printf:	
 17413                           
 17414                           ;incstack = 0
 17415 ;; hardware stack exceeded
 17416                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17417  1004  30D3               	movlw	(low ((?_printf| 0+2)))& (0+255)
 17418  1005  0140               	movlb	0	; select bank0
 17419  1006  00E9               	movwf	??_printf
 17420  1007  0869               	movf	??_printf,w
 17421  1008  00EC               	movwf	printf@ap
 17422  1009  0141               	movlb	1	; select bank1
 17423  100A  0852               	movf	(printf@fmt+1)^(0+128),w
 17424  100B  0140               	movlb	0	; select bank0
 17425  100C  00E2               	movwf	vfprintf@fmt+1
 17426  100D  0141               	movlb	1	; select bank1
 17427  100E  0851               	movf	printf@fmt^(0+128),w
 17428  100F  0140               	movlb	0	; select bank0
 17429  1010  00E1               	movwf	vfprintf@fmt
 17430  1011  306C               	movlw	(low (printf@ap| 0))& (0+255)
 17431  1012  00E9               	movwf	??_printf
 17432  1013  0869               	movf	??_printf,w
 17433  1014  00E3               	movwf	vfprintf@ap
 17434  1015  3000               	movlw	0
 17435  1016  3192  22D3         	fcall	_vfprintf
 17436  1018  0008               	return
 17437  1019                     __end_of_printf:	
 17438                           
 17439                           	psect	text39
 17440  12D3                     __ptext39:	
 17441 ;; *************** function _vfprintf *****************
 17442 ;; Defined at:
 17443 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17444 ;; Parameters:    Size  Location     Type
 17445 ;;  fp              1    wreg     PTR struct _IO_FILE
 17446 ;;		 -> NULL(0), 
 17447 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
 17448 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 17449 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 17450 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 17451 ;;		 -> STR_3(6), STR_2(8), STR_1(6), 
 17452 ;;  ap              1   67[BANK0 ] PTR PTR void 
 17453 ;;		 -> printf@ap(1), 
 17454 ;; Auto vars:     Size  Location     Type
 17455 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
 17456 ;;		 -> NULL(0), 
 17457 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 17458 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 17459 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 17460 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 17461 ;;		 -> STR_3(6), STR_2(8), STR_1(6), 
 17462 ;; Return value:  Size  Location     Type
 17463 ;;                  2   65[BANK0 ] int 
 17464 ;; Registers used:
 17465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17466 ;; Tracked objects:
 17467 ;;		On entry : 0/0
 17468 ;;		On exit  : 0/0
 17469 ;;		Unchanged: 0/0
 17470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17471 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17472 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17473 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17474 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17475 ;;Total ram usage:        8 bytes
 17476 ;; Hardware stack levels used:    1
 17477 ;; Hardware stack levels required when called:   15
 17478 ;; This function calls:
 17479 ;;		_vfpfcnvrt
 17480 ;; This function is called by:
 17481 ;;		_printf
 17482 ;; This function uses a non-reentrant model
 17483 ;;
 17484                           
 17485                           
 17486                           ;psect for function _vfprintf
 17487  12D3                     _vfprintf:	
 17488                           
 17489                           ;incstack = 0
 17490 ;; hardware stack exceeded
 17491                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17492                           ;vfprintf@fp stored from wreg
 17493  12D3  0140               	movlb	0	; select bank0
 17494  12D4  00E6               	movwf	vfprintf@fp
 17495                           
 17496                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 17497  12D5  0862               	movf	vfprintf@fmt+1,w
 17498  12D6  00E8               	movwf	vfprintf@cfmt+1
 17499  12D7  0861               	movf	vfprintf@fmt,w
 17500  12D8  00E7               	movwf	vfprintf@cfmt
 17501                           
 17502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 17503  12D9  0142               	movlb	2	; select bank2
 17504  12DA  01B0               	clrf	_nout^(0+256)
 17505  12DB  01B1               	clrf	(_nout+1)^(0+256)
 17506  12DC                     l6056:	
 17507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 17508                           
 17509                           
 17510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 17511  12DC  0140               	movlb	0	; select bank0
 17512  12DD  0867               	movf	vfprintf@cfmt,w
 17513  12DE  0084               	movwf	4
 17514  12DF  0868               	movf	vfprintf@cfmt+1,w
 17515  12E0  0085               	movwf	5
 17516  12E1  0012               	moviw fsr0++
 17517  12E2  1903               	btfsc	3,2
 17518  12E3  2AF9               	goto	l6058
 17519                           
 17520                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 17521  12E4  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 17522  12E5  00E4               	movwf	??_vfprintf
 17523  12E6  0864               	movf	??_vfprintf,w
 17524  12E7  00D8               	movwf	vfpfcnvrt@fmt
 17525  12E8  0863               	movf	vfprintf@ap,w
 17526  12E9  00E5               	movwf	??_vfprintf+1
 17527  12EA  0865               	movf	??_vfprintf+1,w
 17528  12EB  00D9               	movwf	vfpfcnvrt@ap
 17529  12EC  0866               	movf	vfprintf@fp,w
 17530  12ED  3197  2757  3192   	fcall	_vfpfcnvrt
 17531  12F0  0140               	movlb	0	; select bank0
 17532  12F1  0858               	movf	?_vfpfcnvrt,w
 17533  12F2  0142               	movlb	2	; select bank2
 17534  12F3  07B0               	addwf	_nout^(0+256),f
 17535  12F4  0140               	movlb	0	; select bank0
 17536  12F5  0859               	movf	?_vfpfcnvrt+1,w
 17537  12F6  0142               	movlb	2	; select bank2
 17538  12F7  3DB1               	addwfc	(_nout+1)^(0+256),f
 17539  12F8  2ADC               	goto	l6056
 17540  12F9                     l6058:	
 17541                           
 17542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 17543  12F9  0142               	movlb	2	; select bank2
 17544  12FA  0831               	movf	(_nout+1)^(0+256),w
 17545  12FB  0140               	movlb	0	; select bank0
 17546  12FC  00E2               	movwf	?_vfprintf+1
 17547  12FD  0142               	movlb	2	; select bank2
 17548  12FE  0830               	movf	_nout^(0+256),w
 17549  12FF  0140               	movlb	0	; select bank0
 17550  1300  00E1               	movwf	?_vfprintf
 17551  1301  0008               	return
 17552  1302                     __end_of_vfprintf:	
 17553                           
 17554                           	psect	text40
 17555  1757                     __ptext40:	
 17556 ;; *************** function _vfpfcnvrt *****************
 17557 ;; Defined at:
 17558 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17559 ;; Parameters:    Size  Location     Type
 17560 ;;  fp              1    wreg     PTR struct _IO_FILE
 17561 ;;		 -> NULL(0), 
 17562 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
 17563 ;;		 -> vfprintf@cfmt(2), 
 17564 ;;  ap              1   57[BANK0 ] PTR PTR void 
 17565 ;;		 -> printf@ap(1), 
 17566 ;; Auto vars:     Size  Location     Type
 17567 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
 17568 ;;		 -> NULL(0), 
 17569 ;;  llu             8    0        unsigned long long 
 17570 ;;  ll              8    0        long long 
 17571 ;;  f               4    0        long long 
 17572 ;;  ct              3    0        unsigned char [3]
 17573 ;;  vp              2    0        PTR void 
 17574 ;;  i               2    0        int 
 17575 ;;  done            2    0        int 
 17576 ;;  cp              2    0        PTR unsigned char 
 17577 ;;  c               1   63[BANK0 ] unsigned char 
 17578 ;; Return value:  Size  Location     Type
 17579 ;;                  2   56[BANK0 ] int 
 17580 ;; Registers used:
 17581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17582 ;; Tracked objects:
 17583 ;;		On entry : 0/0
 17584 ;;		On exit  : 0/0
 17585 ;;		Unchanged: 0/0
 17586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17588 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17589 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17590 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17591 ;;Total ram usage:        9 bytes
 17592 ;; Hardware stack levels used:    1
 17593 ;; Hardware stack levels required when called:   14
 17594 ;; This function calls:
 17595 ;;		_ctoa
 17596 ;;		_fputc
 17597 ;; This function is called by:
 17598 ;;		_vfprintf
 17599 ;; This function uses a non-reentrant model
 17600 ;;
 17601                           
 17602                           
 17603                           ;psect for function _vfpfcnvrt
 17604  1757                     _vfpfcnvrt:	
 17605                           
 17606                           ;incstack = 0
 17607 ;; hardware stack exceeded
 17608                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17609                           ;vfpfcnvrt@fp stored from wreg
 17610  1757  0140               	movlb	0	; select bank0
 17611  1758  00E0               	movwf	vfpfcnvrt@fp
 17612                           
 17613                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 17614  1759  0858               	movf	vfpfcnvrt@fmt,w
 17615  175A  0086               	movwf	6
 17616  175B  0187               	clrf	7
 17617  175C  3F40               	moviw [0]fsr1
 17618  175D  00DA               	movwf	??_vfpfcnvrt
 17619  175E  3F41               	moviw [1]fsr1
 17620  175F  00DB               	movwf	??_vfpfcnvrt+1
 17621  1760  085A               	movf	??_vfpfcnvrt,w
 17622  1761  0084               	movwf	4
 17623  1762  085B               	movf	??_vfpfcnvrt+1,w
 17624  1763  0085               	movwf	5
 17625  1764  0012               	moviw fsr0++
 17626  1765  3A25               	xorlw	37
 17627  1766  1D03               	btfss	3,2
 17628  1767  2FDD               	goto	l5970
 17629                           
 17630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 17631  1768  0858               	movf	vfpfcnvrt@fmt,w
 17632  1769  0086               	movwf	6
 17633  176A  0187               	clrf	7
 17634  176B  3001               	movlw	1
 17635  176C  0781               	addwf	1,f
 17636  176D  3141               	addfsr 1,1
 17637  176E  1803               	skipnc
 17638  176F  0A81               	incf	1,f
 17639                           
 17640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 17641  1770  0141               	movlb	1	; select bank1
 17642  1771  01A5               	clrf	_width^(0+128)
 17643  1772  01A6               	clrf	(_width+1)^(0+128)
 17644  1773  01A7               	clrf	_flags^(0+128)
 17645  1774  01A8               	clrf	(_flags+1)^(0+128)
 17646                           
 17647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 17648  1775  30FF               	movlw	255
 17649  1776  0142               	movlb	2	; select bank2
 17650  1777  00B2               	movwf	_prec^(0+256)
 17651  1778  30FF               	movlw	255
 17652  1779  00B3               	movwf	(_prec^(0+256)+1)
 17653                           
 17654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 17655  177A  0140               	movlb	0	; select bank0
 17656  177B  0858               	movf	vfpfcnvrt@fmt,w
 17657  177C  0086               	movwf	6
 17658  177D  0187               	clrf	7
 17659  177E  3F40               	moviw [0]fsr1
 17660  177F  00DA               	movwf	??_vfpfcnvrt
 17661  1780  3F41               	moviw [1]fsr1
 17662  1781  00DB               	movwf	??_vfpfcnvrt+1
 17663  1782  085A               	movf	??_vfpfcnvrt,w
 17664  1783  0084               	movwf	4
 17665  1784  085B               	movf	??_vfpfcnvrt+1,w
 17666  1785  0085               	movwf	5
 17667  1786  0012               	moviw fsr0++
 17668  1787  3A63               	xorlw	99
 17669  1788  1D03               	btfss	3,2
 17670  1789  2FAB               	goto	l5954
 17671                           
 17672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 17673  178A  0858               	movf	vfpfcnvrt@fmt,w
 17674  178B  0086               	movwf	6
 17675  178C  0187               	clrf	7
 17676  178D  3001               	movlw	1
 17677  178E  0781               	addwf	1,f
 17678  178F  3141               	addfsr 1,1
 17679  1790  1803               	skipnc
 17680  1791  0A81               	incf	1,f
 17681                           
 17682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17683  1792  0859               	movf	vfpfcnvrt@ap,w
 17684  1793  0086               	movwf	6
 17685  1794  0187               	clrf	7
 17686  1795  0801               	movf	1,w
 17687  1796  0084               	movwf	4
 17688  1797  0185               	clrf	5
 17689  1798  3002               	movlw	2
 17690  1799  0781               	addwf	1,f
 17691  179A  0800               	movf	0,w
 17692  179B  00DA               	movwf	??_vfpfcnvrt
 17693  179C  085A               	movf	??_vfpfcnvrt,w
 17694  179D  00DF               	movwf	vfpfcnvrt@c
 17695                           
 17696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 17697  179E  085F               	movf	vfpfcnvrt@c,w
 17698  179F  00DA               	movwf	??_vfpfcnvrt
 17699  17A0  085A               	movf	??_vfpfcnvrt,w
 17700  17A1  00D2               	movwf	ctoa@c
 17701  17A2  0860               	movf	vfpfcnvrt@fp,w
 17702  17A3  3193  2302         	fcall	_ctoa
 17703  17A5  0140               	movlb	0	; select bank0
 17704  17A6  0853               	movf	?_ctoa+1,w
 17705  17A7  00D9               	movwf	?_vfpfcnvrt+1
 17706  17A8  0852               	movf	?_ctoa,w
 17707  17A9  00D8               	movwf	?_vfpfcnvrt
 17708  17AA  0008               	return
 17709  17AB                     l5954:	
 17710                           
 17711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 17712  17AB  0858               	movf	vfpfcnvrt@fmt,w
 17713  17AC  0086               	movwf	6
 17714  17AD  0187               	clrf	7
 17715  17AE  3F40               	moviw [0]fsr1
 17716  17AF  00DA               	movwf	??_vfpfcnvrt
 17717  17B0  3F41               	moviw [1]fsr1
 17718  17B1  00DB               	movwf	??_vfpfcnvrt+1
 17719  17B2  085A               	movf	??_vfpfcnvrt,w
 17720  17B3  0084               	movwf	4
 17721  17B4  085B               	movf	??_vfpfcnvrt+1,w
 17722  17B5  0085               	movwf	5
 17723  17B6  0012               	moviw fsr0++
 17724  17B7  3A25               	xorlw	37
 17725  17B8  1D03               	btfss	3,2
 17726  17B9  2FD2               	goto	l5964
 17727                           
 17728                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 17729  17BA  0858               	movf	vfpfcnvrt@fmt,w
 17730  17BB  0086               	movwf	6
 17731  17BC  0187               	clrf	7
 17732  17BD  3001               	movlw	1
 17733  17BE  0781               	addwf	1,f
 17734  17BF  3141               	addfsr 1,1
 17735  17C0  1803               	skipnc
 17736  17C1  0A81               	incf	1,f
 17737                           
 17738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 17739  17C2  3025               	movlw	37
 17740  17C3  00B9               	movwf	fputc@c
 17741  17C4  3000               	movlw	0
 17742  17C5  00BA               	movwf	fputc@c+1
 17743  17C6  0860               	movf	vfpfcnvrt@fp,w
 17744  17C7  00DA               	movwf	??_vfpfcnvrt
 17745  17C8  085A               	movf	??_vfpfcnvrt,w
 17746  17C9  00BB               	movwf	fputc@fp
 17747  17CA  3193  23FF         	fcall	_fputc
 17748  17CC                     l5960:	
 17749                           
 17750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 17751  17CC  3001               	movlw	1
 17752  17CD  0140               	movlb	0	; select bank0
 17753  17CE  00D8               	movwf	?_vfpfcnvrt
 17754  17CF  3000               	movlw	0
 17755  17D0  00D9               	movwf	?_vfpfcnvrt+1
 17756  17D1  0008               	return
 17757  17D2                     l5964:	
 17758                           
 17759                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 17760  17D2  0858               	movf	vfpfcnvrt@fmt,w
 17761  17D3  0086               	movwf	6
 17762  17D4  0187               	clrf	7
 17763  17D5  3001               	movlw	1
 17764  17D6  0781               	addwf	1,f
 17765  17D7  3141               	addfsr 1,1
 17766  17D8  1803               	skipnc
 17767  17D9  0A81               	incf	1,f
 17768                           
 17769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 17770  17DA  01D8               	clrf	?_vfpfcnvrt
 17771  17DB  01D9               	clrf	?_vfpfcnvrt+1
 17772  17DC  0008               	return
 17773  17DD                     l5970:	
 17774                           
 17775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 17776  17DD  0858               	movf	vfpfcnvrt@fmt,w
 17777  17DE  0086               	movwf	6
 17778  17DF  0187               	clrf	7
 17779  17E0  3F40               	moviw [0]fsr1
 17780  17E1  00DA               	movwf	??_vfpfcnvrt
 17781  17E2  3F41               	moviw [1]fsr1
 17782  17E3  00DB               	movwf	??_vfpfcnvrt+1
 17783  17E4  085A               	movf	??_vfpfcnvrt,w
 17784  17E5  0084               	movwf	4
 17785  17E6  085B               	movf	??_vfpfcnvrt+1,w
 17786  17E7  0085               	movwf	5
 17787  17E8  0800               	movf	0,w	;code access
 17788  17E9  00DC               	movwf	??_vfpfcnvrt+2
 17789  17EA  01DD               	clrf	??_vfpfcnvrt+3
 17790  17EB  085C               	movf	??_vfpfcnvrt+2,w
 17791  17EC  00B9               	movwf	fputc@c
 17792  17ED  085D               	movf	??_vfpfcnvrt+3,w
 17793  17EE  00BA               	movwf	fputc@c+1
 17794  17EF  0860               	movf	vfpfcnvrt@fp,w
 17795  17F0  00DE               	movwf	??_vfpfcnvrt+4
 17796  17F1  085E               	movf	??_vfpfcnvrt+4,w
 17797  17F2  00BB               	movwf	fputc@fp
 17798  17F3  3193  23FF  3197   	fcall	_fputc
 17799                           
 17800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 17801  17F6  0140               	movlb	0	; select bank0
 17802  17F7  0858               	movf	vfpfcnvrt@fmt,w
 17803  17F8  0086               	movwf	6
 17804  17F9  0187               	clrf	7
 17805  17FA  3001               	movlw	1
 17806  17FB  0781               	addwf	1,f
 17807  17FC  3141               	addfsr 1,1
 17808  17FD  1803               	skipnc
 17809  17FE  0A81               	incf	1,f
 17810  17FF  2FCC               	goto	l5960
 17811  1800                     __end_of_vfpfcnvrt:	
 17812                           
 17813                           	psect	text41
 17814  1302                     __ptext41:	
 17815 ;; *************** function _ctoa *****************
 17816 ;; Defined at:
 17817 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17818 ;; Parameters:    Size  Location     Type
 17819 ;;  fp              1    wreg     PTR struct _IO_FILE
 17820 ;;		 -> NULL(0), 
 17821 ;;  c               1   50[BANK0 ] unsigned char 
 17822 ;; Auto vars:     Size  Location     Type
 17823 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 17824 ;;		 -> NULL(0), 
 17825 ;;  w               2   53[BANK0 ] int 
 17826 ;;  l               2    0        int 
 17827 ;; Return value:  Size  Location     Type
 17828 ;;                  2   50[BANK0 ] int 
 17829 ;; Registers used:
 17830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17831 ;; Tracked objects:
 17832 ;;		On entry : 0/0
 17833 ;;		On exit  : 0/0
 17834 ;;		Unchanged: 0/0
 17835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17837 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17839 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17840 ;;Total ram usage:        6 bytes
 17841 ;; Hardware stack levels used:    1
 17842 ;; Hardware stack levels required when called:   13
 17843 ;; This function calls:
 17844 ;;		_pad
 17845 ;; This function is called by:
 17846 ;;		_vfpfcnvrt
 17847 ;; This function uses a non-reentrant model
 17848 ;;
 17849                           
 17850                           
 17851                           ;psect for function _ctoa
 17852  1302                     _ctoa:	
 17853                           
 17854                           ;incstack = 0
 17855 ;; hardware stack exceeded
 17856                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17857                           ;ctoa@fp stored from wreg
 17858  1302  0140               	movlb	0	; select bank0
 17859  1303  00D7               	movwf	ctoa@fp
 17860                           
 17861                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17862  1304  0141               	movlb	1	; select bank1
 17863  1305  0825               	movf	_width^(0+128),w
 17864  1306  0426               	iorwf	(_width+1)^(0+128),w
 17865  1307  1D03               	btfss	3,2
 17866  1308  2B11               	goto	l5926
 17867  1309  0826               	movf	(_width+1)^(0+128),w
 17868  130A  0140               	movlb	0	; select bank0
 17869  130B  00D6               	movwf	ctoa@w+1
 17870  130C  0141               	movlb	1	; select bank1
 17871  130D  0825               	movf	_width^(0+128),w
 17872  130E  0140               	movlb	0	; select bank0
 17873  130F  00D5               	movwf	ctoa@w
 17874  1310  2B1A               	goto	l5928
 17875  1311                     l5926:	
 17876  1311  0825               	movf	_width^(0+128),w
 17877  1312  3EFF               	addlw	255
 17878  1313  0140               	movlb	0	; select bank0
 17879  1314  00D5               	movwf	ctoa@w
 17880  1315  30FF               	movlw	255
 17881  1316  0141               	movlb	1	; select bank1
 17882  1317  3D26               	addwfc	(_width+1)^(0+128),w
 17883  1318  0140               	movlb	0	; select bank0
 17884  1319  00D6               	movwf	ctoa@w+1
 17885  131A                     l5928:	
 17886                           
 17887                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17888  131A  0852               	movf	ctoa@c,w
 17889  131B  00D4               	movwf	??_ctoa
 17890  131C  0854               	movf	??_ctoa,w
 17891  131D  0143               	movlb	3	; select bank3
 17892  131E  00A0               	movwf	_dbuf^(0+384)
 17893                           
 17894                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17895  131F  01A1               	clrf	(_dbuf^(0+384)+1)
 17896                           
 17897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17898  1320  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 17899  1321  0140               	movlb	0	; select bank0
 17900  1322  00D4               	movwf	??_ctoa
 17901  1323  0854               	movf	??_ctoa,w
 17902  1324  00C9               	movwf	pad@buf
 17903  1325  0856               	movf	ctoa@w+1,w
 17904  1326  00CB               	movwf	pad@p+1
 17905  1327  0855               	movf	ctoa@w,w
 17906  1328  00CA               	movwf	pad@p
 17907  1329  0857               	movf	ctoa@fp,w
 17908  132A  3195  250F         	fcall	_pad
 17909  132C  0140               	movlb	0	; select bank0
 17910  132D  084A               	movf	?_pad+1,w
 17911  132E  00D3               	movwf	?_ctoa+1
 17912  132F  0849               	movf	?_pad,w
 17913  1330  00D2               	movwf	?_ctoa
 17914  1331  0008               	return
 17915  1332                     __end_of_ctoa:	
 17916                           
 17917                           	psect	text42
 17918  150F                     __ptext42:	
 17919 ;; *************** function _pad *****************
 17920 ;; Defined at:
 17921 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17922 ;; Parameters:    Size  Location     Type
 17923 ;;  fp              1    wreg     PTR struct _IO_FILE
 17924 ;;		 -> NULL(0), 
 17925 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 17926 ;;		 -> dbuf(32), 
 17927 ;;  p               2   42[BANK0 ] int 
 17928 ;; Auto vars:     Size  Location     Type
 17929 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
 17930 ;;		 -> NULL(0), 
 17931 ;;  w               2   47[BANK0 ] int 
 17932 ;;  i               2   45[BANK0 ] int 
 17933 ;; Return value:  Size  Location     Type
 17934 ;;                  2   41[BANK0 ] int 
 17935 ;; Registers used:
 17936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17937 ;; Tracked objects:
 17938 ;;		On entry : 0/0
 17939 ;;		On exit  : 0/0
 17940 ;;		Unchanged: 0/0
 17941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17942 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17943 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17945 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17946 ;;Total ram usage:        9 bytes
 17947 ;; Hardware stack levels used:    1
 17948 ;; Hardware stack levels required when called:   12
 17949 ;; This function calls:
 17950 ;;		_fputc
 17951 ;;		_fputs
 17952 ;;		_strlen
 17953 ;; This function is called by:
 17954 ;;		_ctoa
 17955 ;; This function uses a non-reentrant model
 17956 ;;
 17957                           
 17958                           
 17959                           ;psect for function _pad
 17960  150F                     _pad:	
 17961                           
 17962                           ;incstack = 0
 17963 ;; hardware stack exceeded
 17964                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17965                           ;pad@fp stored from wreg
 17966  150F  0140               	movlb	0	; select bank0
 17967  1510  00D1               	movwf	pad@fp
 17968                           
 17969                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17970  1511  0141               	movlb	1	; select bank1
 17971  1512  1C27               	btfss	_flags^(0+128),0
 17972  1513  2D1D               	goto	l5904
 17973                           
 17974                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17975  1514  0140               	movlb	0	; select bank0
 17976  1515  0851               	movf	pad@fp,w
 17977  1516  00CC               	movwf	??_pad
 17978  1517  084C               	movf	??_pad,w
 17979  1518  00C1               	movwf	fputs@fp
 17980  1519  0849               	movf	pad@buf,w
 17981  151A  3192  2230  3195   	fcall	_fputs
 17982  151D                     l5904:	
 17983                           
 17984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17985  151D  0140               	movlb	0	; select bank0
 17986  151E  1BCB               	btfsc	pad@p+1,7
 17987  151F  2D25               	goto	l5908
 17988  1520  084B               	movf	pad@p+1,w
 17989  1521  00D0               	movwf	pad@w+1
 17990  1522  084A               	movf	pad@p,w
 17991  1523  00CF               	movwf	pad@w
 17992  1524  2D27               	goto	l1463
 17993  1525                     l5908:	
 17994  1525  01CF               	clrf	pad@w
 17995  1526  01D0               	clrf	pad@w+1
 17996  1527                     l1463:	
 17997                           
 17998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17999  1527  01CD               	clrf	pad@i
 18000  1528  01CE               	clrf	pad@i+1
 18001  1529                     l5914:	
 18002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18003                           
 18004                           
 18005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18006  1529  084E               	movf	pad@i+1,w
 18007  152A  3A80               	xorlw	128
 18008  152B  00CC               	movwf	??_pad
 18009  152C  0850               	movf	pad@w+1,w
 18010  152D  3A80               	xorlw	128
 18011  152E  024C               	subwf	??_pad,w
 18012  152F  1D03               	skipz
 18013  1530  2D33               	goto	u5235
 18014  1531  084F               	movf	pad@w,w
 18015  1532  024D               	subwf	pad@i,w
 18016  1533                     u5235:	
 18017  1533  1803               	btfsc	3,0
 18018  1534  2D47               	goto	l1466
 18019                           
 18020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18021  1535  3020               	movlw	32
 18022  1536  0140               	movlb	0	; select bank0
 18023  1537  00B9               	movwf	fputc@c
 18024  1538  3000               	movlw	0
 18025  1539  00BA               	movwf	fputc@c+1
 18026  153A  0851               	movf	pad@fp,w
 18027  153B  00CC               	movwf	??_pad
 18028  153C  084C               	movf	??_pad,w
 18029  153D  00BB               	movwf	fputc@fp
 18030  153E  3193  23FF  3195   	fcall	_fputc
 18031                           
 18032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18033  1541  3001               	movlw	1
 18034  1542  0140               	movlb	0	; select bank0
 18035  1543  07CD               	addwf	pad@i,f
 18036  1544  3000               	movlw	0
 18037  1545  3DCE               	addwfc	pad@i+1,f
 18038  1546  2D29               	goto	l5914
 18039  1547                     l1466:	
 18040                           
 18041                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18042  1547  0141               	movlb	1	; select bank1
 18043  1548  1827               	btfsc	_flags^(0+128),0
 18044  1549  2D53               	goto	l5918
 18045                           
 18046                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18047  154A  0140               	movlb	0	; select bank0
 18048  154B  0851               	movf	pad@fp,w
 18049  154C  00CC               	movwf	??_pad
 18050  154D  084C               	movf	??_pad,w
 18051  154E  00C1               	movwf	fputs@fp
 18052  154F  0849               	movf	pad@buf,w
 18053  1550  3192  2230  3195   	fcall	_fputs
 18054  1553                     l5918:	
 18055                           
 18056                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18057  1553  0140               	movlb	0	; select bank0
 18058  1554  0849               	movf	pad@buf,w
 18059  1555  00A0               	movwf	strlen@s
 18060  1556  3001               	movlw	1
 18061  1557  00A1               	movwf	strlen@s+1
 18062  1558  3188  2000         	fcall	_strlen
 18063  155A  0140               	movlb	0	; select bank0
 18064  155B  084F               	movf	pad@w,w
 18065  155C  0720               	addwf	?_strlen,w
 18066  155D  00C9               	movwf	?_pad
 18067  155E  0850               	movf	pad@w+1,w
 18068  155F  3D21               	addwfc	?_strlen+1,w
 18069  1560  00CA               	movwf	?_pad+1
 18070  1561  0008               	return
 18071  1562                     __end_of_pad:	
 18072                           
 18073                           	psect	text43
 18074  0800                     __ptext43:	
 18075 ;; *************** function _strlen *****************
 18076 ;; Defined at:
 18077 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 18078 ;; Parameters:    Size  Location     Type
 18079 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 18080 ;;		 -> dbuf(32), STR_8(9), 
 18081 ;; Auto vars:     Size  Location     Type
 18082 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 18083 ;;		 -> dbuf(32), STR_8(9), 
 18084 ;; Return value:  Size  Location     Type
 18085 ;;                  2    0[BANK0 ] unsigned int 
 18086 ;; Registers used:
 18087 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18088 ;; Tracked objects:
 18089 ;;		On entry : 0/0
 18090 ;;		On exit  : 0/0
 18091 ;;		Unchanged: 0/0
 18092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18093 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18094 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18095 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18096 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18097 ;;Total ram usage:        5 bytes
 18098 ;; Hardware stack levels used:    1
 18099 ;; Hardware stack levels required when called:    4
 18100 ;; This function calls:
 18101 ;;		Nothing
 18102 ;; This function is called by:
 18103 ;;		_pad
 18104 ;;		_TM1650_scrollPrint
 18105 ;; This function uses a non-reentrant model
 18106 ;;
 18107                           
 18108                           
 18109                           ;psect for function _strlen
 18110  0800                     _strlen:	
 18111                           
 18112                           ;incstack = 0
 18113                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 18114  0800  0140               	movlb	0	; select bank0
 18115  0801  0821               	movf	strlen@s+1,w
 18116  0802  00A4               	movwf	strlen@a+1
 18117  0803  0820               	movf	strlen@s,w
 18118  0804  00A3               	movwf	strlen@a
 18119  0805                     l4056:	
 18120  0805  0820               	movf	strlen@s,w
 18121  0806  0084               	movwf	4
 18122  0807  0821               	movf	strlen@s+1,w
 18123  0808  0085               	movwf	5
 18124  0809  0012               	moviw fsr0++
 18125  080A  1903               	btfsc	3,2
 18126  080B  2811               	goto	l4058
 18127  080C  3001               	movlw	1
 18128  080D  07A0               	addwf	strlen@s,f
 18129  080E  3000               	movlw	0
 18130  080F  3DA1               	addwfc	strlen@s+1,f
 18131  0810  2805               	goto	l4056
 18132  0811                     l4058:	
 18133  0811  0823               	movf	strlen@a,w
 18134  0812  0220               	subwf	strlen@s,w
 18135  0813  00A0               	movwf	?_strlen
 18136  0814  0824               	movf	strlen@a+1,w
 18137  0815  3B21               	subwfb	strlen@s+1,w
 18138  0816  00A1               	movwf	?_strlen+1
 18139  0817  0008               	return
 18140  0818                     __end_of_strlen:	
 18141                           
 18142                           	psect	text44
 18143  1230                     __ptext44:	
 18144 ;; *************** function _fputs *****************
 18145 ;; Defined at:
 18146 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 18147 ;; Parameters:    Size  Location     Type
 18148 ;;  s               1    wreg     PTR const unsigned char 
 18149 ;;		 -> dbuf(32), 
 18150 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
 18151 ;;		 -> NULL(0), 
 18152 ;; Auto vars:     Size  Location     Type
 18153 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 18154 ;;		 -> dbuf(32), 
 18155 ;;  i               2   38[BANK0 ] int 
 18156 ;;  c               1   37[BANK0 ] unsigned char 
 18157 ;; Return value:  Size  Location     Type
 18158 ;;                  2   33[BANK0 ] int 
 18159 ;; Registers used:
 18160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18161 ;; Tracked objects:
 18162 ;;		On entry : 0/0
 18163 ;;		On exit  : 0/0
 18164 ;;		Unchanged: 0/0
 18165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18166 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18167 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18168 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18169 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18170 ;;Total ram usage:        8 bytes
 18171 ;; Hardware stack levels used:    1
 18172 ;; Hardware stack levels required when called:   11
 18173 ;; This function calls:
 18174 ;;		_fputc
 18175 ;; This function is called by:
 18176 ;;		_pad
 18177 ;; This function uses a non-reentrant model
 18178 ;;
 18179                           
 18180                           
 18181                           ;psect for function _fputs
 18182  1230                     _fputs:	
 18183                           
 18184                           ;incstack = 0
 18185 ;; hardware stack exceeded
 18186                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18187                           ;fputs@s stored from wreg
 18188  1230  0140               	movlb	0	; select bank0
 18189  1231  00C8               	movwf	fputs@s
 18190  1232  01C6               	clrf	fputs@i
 18191  1233  01C7               	clrf	fputs@i+1
 18192  1234                     l5898:	
 18193  1234  0846               	movf	fputs@i,w
 18194  1235  0748               	addwf	fputs@s,w
 18195  1236  00C2               	movwf	??_fputs
 18196  1237  0842               	movf	??_fputs,w
 18197  1238  0086               	movwf	6
 18198  1239  3001               	movlw	1	; select bank2/3
 18199  123A  0087               	movwf	7
 18200  123B  0801               	movf	1,w
 18201  123C  00C3               	movwf	??_fputs+1
 18202  123D  0843               	movf	??_fputs+1,w
 18203  123E  00C5               	movwf	fputs@c
 18204  123F  0845               	movf	fputs@c,w
 18205  1240  1903               	btfsc	3,2
 18206  1241  0008               	return
 18207  1242  0845               	movf	fputs@c,w
 18208  1243  00C2               	movwf	??_fputs
 18209  1244  01C3               	clrf	??_fputs+1
 18210  1245  0842               	movf	??_fputs,w
 18211  1246  00B9               	movwf	fputc@c
 18212  1247  0843               	movf	??_fputs+1,w
 18213  1248  00BA               	movwf	fputc@c+1
 18214  1249  0841               	movf	fputs@fp,w
 18215  124A  00C4               	movwf	??_fputs+2
 18216  124B  0844               	movf	??_fputs+2,w
 18217  124C  00BB               	movwf	fputc@fp
 18218  124D  3193  23FF  3192   	fcall	_fputc
 18219  1250  3001               	movlw	1
 18220  1251  0140               	movlb	0	; select bank0
 18221  1252  07C6               	addwf	fputs@i,f
 18222  1253  3000               	movlw	0
 18223  1254  3DC7               	addwfc	fputs@i+1,f
 18224  1255  2A34               	goto	l5898
 18225  1256                     __end_of_fputs:	
 18226                           
 18227                           	psect	text45
 18228  13FF                     __ptext45:	
 18229 ;; *************** function _fputc *****************
 18230 ;; Defined at:
 18231 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 18232 ;; Parameters:    Size  Location     Type
 18233 ;;  c               2   25[BANK0 ] int 
 18234 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 18235 ;;		 -> NULL(0), 
 18236 ;; Auto vars:     Size  Location     Type
 18237 ;;		None
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  2   25[BANK0 ] int 
 18240 ;; Registers used:
 18241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18247 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18249 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18250 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18251 ;;Total ram usage:        8 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; Hardware stack levels required when called:   10
 18254 ;; This function calls:
 18255 ;;		_putch
 18256 ;; This function is called by:
 18257 ;;		_pad
 18258 ;;		_vfpfcnvrt
 18259 ;;		_fputs
 18260 ;; This function uses a non-reentrant model
 18261 ;;
 18262                           
 18263                           
 18264                           ;psect for function _fputc
 18265  13FF                     _fputc:	
 18266                           
 18267                           ;incstack = 0
 18268                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18269  13FF  0140               	movlb	0	; select bank0
 18270  1400  083B               	movf	fputc@fp,w
 18271  1401  1D03               	btfss	3,2
 18272  1402  083B               	movf	fputc@fp,w
 18273  1403  1D03               	btfss	3,2
 18274  1404  2C09               	goto	l5884
 18275  1405  0839               	movf	fputc@c,w
 18276  1406  3191  21E8         	fcall	_putch
 18277  1408  0008               	return
 18278  1409                     l5884:	
 18279  1409  083B               	movf	fputc@fp,w
 18280  140A  3E03               	addlw	3
 18281  140B  0086               	movwf	6
 18282  140C  0187               	clrf	7
 18283  140D  0016               	moviw fsr1++
 18284  140E  0401               	iorwf	1,w
 18285  140F  1903               	btfsc	3,2
 18286  1410  2C2C               	goto	l5888
 18287  1411  083B               	movf	fputc@fp,w
 18288  1412  3E03               	addlw	3
 18289  1413  0086               	movwf	6
 18290  1414  0187               	clrf	7
 18291  1415  3F40               	moviw [0]fsr1
 18292  1416  00BC               	movwf	??_fputc
 18293  1417  3F41               	moviw [1]fsr1
 18294  1418  00BD               	movwf	??_fputc+1
 18295  1419  0A3B               	incf	fputc@fp,w
 18296  141A  0086               	movwf	6
 18297  141B  0187               	clrf	7
 18298  141C  3F40               	moviw [0]fsr1
 18299  141D  00BE               	movwf	??_fputc+2
 18300  141E  3F41               	moviw [1]fsr1
 18301  141F  00BF               	movwf	??_fputc+3
 18302  1420  083F               	movf	??_fputc+3,w
 18303  1421  3A80               	xorlw	128
 18304  1422  00C0               	movwf	??_fputc+4
 18305  1423  083D               	movf	??_fputc+1,w
 18306  1424  3A80               	xorlw	128
 18307  1425  0240               	subwf	??_fputc+4,w
 18308  1426  1D03               	skipz
 18309  1427  2C2A               	goto	u5195
 18310  1428  083C               	movf	??_fputc,w
 18311  1429  023E               	subwf	??_fputc+2,w
 18312  142A                     u5195:	
 18313  142A  1803               	skipnc
 18314  142B  0008               	return
 18315  142C                     l5888:	
 18316  142C  0140               	movlb	0	; select bank0
 18317  142D  0A3B               	incf	fputc@fp,w
 18318  142E  0086               	movwf	6
 18319  142F  0187               	clrf	7
 18320  1430  3001               	movlw	1
 18321  1431  0781               	addwf	1,f
 18322  1432  3141               	addfsr 1,1
 18323  1433  1803               	skipnc
 18324  1434  0A81               	incf	1,f
 18325  1435  0008               	return
 18326  1436                     __end_of_fputc:	
 18327                           
 18328                           	psect	text46
 18329  11E8                     __ptext46:	
 18330 ;; *************** function _putch *****************
 18331 ;; Defined at:
 18332 ;;		line 120 in file "tm1650.c"
 18333 ;; Parameters:    Size  Location     Type
 18334 ;;  n               1    wreg     unsigned char 
 18335 ;; Auto vars:     Size  Location     Type
 18336 ;;  n               1   24[BANK0 ] unsigned char 
 18337 ;; Return value:  Size  Location     Type
 18338 ;;                  1    wreg      void 
 18339 ;; Registers used:
 18340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18341 ;; Tracked objects:
 18342 ;;		On entry : 0/0
 18343 ;;		On exit  : 0/0
 18344 ;;		Unchanged: 0/0
 18345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18350 ;;Total ram usage:        2 bytes
 18351 ;; Hardware stack levels used:    1
 18352 ;; Hardware stack levels required when called:    9
 18353 ;; This function calls:
 18354 ;;		_TM1650_setDigit
 18355 ;; This function is called by:
 18356 ;;		_fputc
 18357 ;; This function uses a non-reentrant model
 18358 ;;
 18359                           
 18360                           
 18361                           ;psect for function _putch
 18362  11E8                     _putch:	
 18363                           
 18364                           ;incstack = 0
 18365                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18366                           ;putch@n stored from wreg
 18367  11E8  0140               	movlb	0	; select bank0
 18368  11E9  00B8               	movwf	putch@n
 18369                           
 18370                           ;tm1650.c: 122:     if(position > 3 || n == '\r' || n == '\0')
 18371  11EA  3004               	movlw	4
 18372  11EB  0141               	movlb	1	; select bank1
 18373  11EC  023B               	subwf	_position^(0+128),w
 18374  11ED  1803               	skipnc
 18375  11EE  29F6               	goto	l5870
 18376  11EF  300D               	movlw	13
 18377  11F0  0140               	movlb	0	; select bank0
 18378  11F1  0638               	xorwf	putch@n,w
 18379  11F2  1D03               	btfss	3,2
 18380  11F3  0838               	movf	putch@n,w
 18381  11F4  1D03               	btfss	3,2
 18382  11F5  29F8               	goto	l5872
 18383  11F6                     l5870:	
 18384                           
 18385                           ;tm1650.c: 123:         position = 0;
 18386  11F6  0141               	movlb	1	; select bank1
 18387  11F7  01BB               	clrf	_position^(0+128)
 18388  11F8                     l5872:	
 18389                           
 18390                           ;tm1650.c: 125:     if(n != '\r'){
 18391  11F8  300D               	movlw	13
 18392  11F9  0140               	movlb	0	; select bank0
 18393  11FA  0638               	xorwf	putch@n,w
 18394  11FB  1903               	btfsc	3,2
 18395  11FC  0008               	return
 18396                           
 18397                           ;tm1650.c: 126:         TM1650_setDigit(position, n);
 18398  11FD  0838               	movf	putch@n,w
 18399  11FE  00B7               	movwf	??_putch
 18400  11FF  0837               	movf	??_putch,w
 18401  1200  00B4               	movwf	TM1650_setDigit@data
 18402  1201  0141               	movlb	1	; select bank1
 18403  1202  083B               	movf	_position^(0+128),w
 18404  1203  319F  278A         	fcall	_TM1650_setDigit
 18405                           
 18406                           ;tm1650.c: 127:         position++;
 18407  1205  3001               	movlw	1
 18408  1206  0140               	movlb	0	; select bank0
 18409  1207  00B7               	movwf	??_putch
 18410  1208  0837               	movf	??_putch,w
 18411  1209  0141               	movlb	1	; select bank1
 18412  120A  07BB               	addwf	_position^(0+128),f
 18413  120B  0008               	return
 18414  120C                     __end_of_putch:	
 18415                           
 18416                           	psect	text47
 18417  1F8A                     __ptext47:	
 18418 ;; *************** function _TM1650_setDigit *****************
 18419 ;; Defined at:
 18420 ;;		line 95 in file "tm1650.c"
 18421 ;; Parameters:    Size  Location     Type
 18422 ;;  digit           1    wreg     unsigned char 
 18423 ;;  data            1   20[BANK0 ] unsigned char 
 18424 ;; Auto vars:     Size  Location     Type
 18425 ;;  digit           1   22[BANK0 ] unsigned char 
 18426 ;; Return value:  Size  Location     Type
 18427 ;;                  1    wreg      void 
 18428 ;; Registers used:
 18429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18430 ;; Tracked objects:
 18431 ;;		On entry : 0/0
 18432 ;;		On exit  : 0/0
 18433 ;;		Unchanged: 0/0
 18434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18435 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18438 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18439 ;;Total ram usage:        3 bytes
 18440 ;; Hardware stack levels used:    1
 18441 ;; Hardware stack levels required when called:    8
 18442 ;; This function calls:
 18443 ;;		_writeData
 18444 ;; This function is called by:
 18445 ;;		_putch
 18446 ;; This function uses a non-reentrant model
 18447 ;;
 18448                           
 18449                           
 18450                           ;psect for function _TM1650_setDigit
 18451  1F8A                     _TM1650_setDigit:	
 18452                           
 18453                           ;incstack = 0
 18454                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18455                           ;TM1650_setDigit@digit stored from wreg
 18456  1F8A  0140               	movlb	0	; select bank0
 18457  1F8B  00B6               	movwf	TM1650_setDigit@digit
 18458                           
 18459                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 18460  1F8C  0834               	movf	TM1650_setDigit@data,w
 18461  1F8D  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 18462  1F8E  0084               	movwf	4
 18463  1F8F  3097               	movlw	high ((_charTable+65504)| (0+32768))
 18464  1F90  1803               	skipnc
 18465  1F91  3E01               	addlw	1
 18466  1F92  0085               	movwf	5
 18467  1F93  0800               	movf	0,w	;code access
 18468  1F94  00B5               	movwf	??_TM1650_setDigit
 18469  1F95  0835               	movf	??_TM1650_setDigit,w
 18470  1F96  00AE               	movwf	writeData@data
 18471  1F97  0836               	movf	TM1650_setDigit@digit,w
 18472  1F98  3E34               	addlw	52
 18473  1F99  3190  20AD         	fcall	_writeData
 18474  1F9B  0008               	return
 18475  1F9C                     __end_of_TM1650_setDigit:	
 18476                           
 18477                           	psect	text48
 18478  1FEB                     __ptext48:	
 18479 ;; *************** function _TM1650_enable *****************
 18480 ;; Defined at:
 18481 ;;		line 41 in file "tm1650.c"
 18482 ;; Parameters:    Size  Location     Type
 18483 ;;  enable          1    wreg     _Bool 
 18484 ;; Auto vars:     Size  Location     Type
 18485 ;;  enable          1   20[BANK0 ] _Bool 
 18486 ;; Return value:  Size  Location     Type
 18487 ;;                  1    wreg      void 
 18488 ;; Registers used:
 18489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18490 ;; Tracked objects:
 18491 ;;		On entry : 0/0
 18492 ;;		On exit  : 0/0
 18493 ;;		Unchanged: 0/0
 18494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18499 ;;Total ram usage:        1 bytes
 18500 ;; Hardware stack levels used:    1
 18501 ;; Hardware stack levels required when called:    8
 18502 ;; This function calls:
 18503 ;;		_writeData
 18504 ;; This function is called by:
 18505 ;;		_CONTROLLER_task
 18506 ;;		_TM1650_init
 18507 ;; This function uses a non-reentrant model
 18508 ;;
 18509                           
 18510                           
 18511                           ;psect for function _TM1650_enable
 18512  1FEB                     _TM1650_enable:	
 18513                           
 18514                           ;incstack = 0
 18515                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18516                           ;TM1650_enable@enable stored from wreg
 18517  1FEB  0140               	movlb	0	; select bank0
 18518  1FEC  00B4               	movwf	TM1650_enable@enable
 18519                           
 18520                           ;tm1650.c: 42:     if(enable){
 18521  1FED  0834               	movf	TM1650_enable@enable,w
 18522  1FEE  1903               	btfsc	3,2
 18523  1FEF  2FF9               	goto	l6438
 18524                           
 18525                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 18526  1FF0  01AE               	clrf	writeData@data
 18527  1FF1  0AAE               	incf	writeData@data,f
 18528  1FF2  3024               	movlw	36
 18529  1FF3  3190  20AD         	fcall	_writeData
 18530                           
 18531                           ;tm1650.c: 44:         tm1650_status = 1;
 18532  1FF5  0141               	movlb	1	; select bank1
 18533  1FF6  01BC               	clrf	_tm1650_status^(0+128)
 18534  1FF7  0ABC               	incf	_tm1650_status^(0+128),f
 18535                           
 18536                           ;tm1650.c: 45:     } else {
 18537  1FF8  0008               	return
 18538  1FF9                     l6438:	
 18539                           
 18540                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 18541  1FF9  01AE               	clrf	writeData@data
 18542  1FFA  3024               	movlw	36
 18543  1FFB  3190  20AD         	fcall	_writeData
 18544                           
 18545                           ;tm1650.c: 47:         tm1650_status = 0;
 18546  1FFD  0141               	movlb	1	; select bank1
 18547  1FFE  01BC               	clrf	_tm1650_status^(0+128)
 18548  1FFF  0008               	return
 18549  2000                     __end_of_TM1650_enable:	
 18550                           
 18551                           	psect	text49
 18552  16B5                     __ptext49:	
 18553 ;; *************** function _CONTROL_DMX *****************
 18554 ;; Defined at:
 18555 ;;		line 122 in file "controller.c"
 18556 ;; Parameters:    Size  Location     Type
 18557 ;;		None
 18558 ;; Auto vars:     Size  Location     Type
 18559 ;;		None
 18560 ;; Return value:  Size  Location     Type
 18561 ;;                  1    wreg      _Bool 
 18562 ;; Registers used:
 18563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18564 ;; Tracked objects:
 18565 ;;		On entry : 0/0
 18566 ;;		On exit  : 0/0
 18567 ;;		Unchanged: 0/0
 18568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18571 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18572 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18573 ;;Total ram usage:        2 bytes
 18574 ;; Hardware stack levels used:    1
 18575 ;; Hardware stack levels required when called:   10
 18576 ;; This function calls:
 18577 ;;		_BUTTONS_isHeld
 18578 ;;		_CLOCK_getTime
 18579 ;;		_address_dec
 18580 ;;		_address_inc
 18581 ;; This function is called by:
 18582 ;;		_CONTROLLER_task
 18583 ;; This function uses a non-reentrant model
 18584 ;;
 18585                           
 18586                           
 18587                           ;psect for function _CONTROL_DMX
 18588  16B5                     _CONTROL_DMX:	
 18589                           
 18590                           ;controller.c: 124:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 18591                           
 18592                           ;incstack = 0
 18593                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18594  16B5  0141               	movlb	1	; select bank1
 18595  16B6  0845               	movf	_up^(0+128),w
 18596  16B7  319F  2759  3196   	fcall	_BUTTONS_isHeld
 18597  16BA  3A00               	xorlw	0
 18598  16BB  1903               	skipnz
 18599  16BC  2F13               	goto	l6338
 18600  16BD  319E  269A  3196   	fcall	_CLOCK_getTime
 18601  16C0  0141               	movlb	1	; select bank1
 18602  16C1  0831               	movf	_lastIncTime^(0+128),w
 18603  16C2  0140               	movlb	0	; select bank0
 18604  16C3  0220               	subwf	?_CLOCK_getTime,w
 18605  16C4  00B7               	movwf	??_CONTROL_DMX
 18606  16C5  0141               	movlb	1	; select bank1
 18607  16C6  0832               	movf	(_lastIncTime+1)^(0+128),w
 18608  16C7  0140               	movlb	0	; select bank0
 18609  16C8  3B21               	subwfb	?_CLOCK_getTime+1,w
 18610  16C9  00B8               	movwf	??_CONTROL_DMX+1
 18611  16CA  0838               	movf	??_CONTROL_DMX+1,w
 18612  16CB  0141               	movlb	1	; select bank1
 18613  16CC  0269               	subwf	(_incInterval+1)^(0+128),w
 18614  16CD  1D03               	skipz
 18615  16CE  2ED3               	goto	u5535
 18616  16CF  0140               	movlb	0	; select bank0
 18617  16D0  0837               	movf	??_CONTROL_DMX,w
 18618  16D1  0141               	movlb	1	; select bank1
 18619  16D2  0268               	subwf	_incInterval^(0+128),w
 18620  16D3                     u5535:	
 18621  16D3  1803               	skipnc
 18622  16D4  2F13               	goto	l6338
 18623                           
 18624                           ;controller.c: 125:         address_inc();
 18625  16D5  3190  2078  3196   	fcall	_address_inc
 18626  16D8  2EF4               	goto	L14
 18627  16D9                     l6340:	
 18628                           ;controller.c: 127:         if(incInterval > 20){
 18629                           
 18630                           ;controller.c: 126:         lastIncTime = CLOCK_getTime();
 18631                           
 18632  16D9  319E  269A  3196   	fcall	_CLOCK_getTime
 18633  16DC  0141               	movlb	1	; select bank1
 18634  16DD  0831               	movf	_lastIncTime^(0+128),w
 18635  16DE  0140               	movlb	0	; select bank0
 18636  16DF  0220               	subwf	?_CLOCK_getTime,w
 18637  16E0  00B7               	movwf	??_CONTROL_DMX
 18638  16E1  0141               	movlb	1	; select bank1
 18639  16E2  0832               	movf	(_lastIncTime+1)^(0+128),w
 18640  16E3  0140               	movlb	0	; select bank0
 18641  16E4  3B21               	subwfb	?_CLOCK_getTime+1,w
 18642  16E5  00B8               	movwf	??_CONTROL_DMX+1
 18643  16E6  0838               	movf	??_CONTROL_DMX+1,w
 18644  16E7  0141               	movlb	1	; select bank1
 18645  16E8  0269               	subwf	(_incInterval+1)^(0+128),w
 18646  16E9  1D03               	skipz
 18647  16EA  2EEF               	goto	u5565
 18648  16EB  0140               	movlb	0	; select bank0
 18649  16EC  0837               	movf	??_CONTROL_DMX,w
 18650  16ED  0141               	movlb	1	; select bank1
 18651  16EE  0268               	subwf	_incInterval^(0+128),w
 18652  16EF                     u5565:	
 18653  16EF  1803               	skipnc
 18654  16F0  2F1B               	goto	l6354
 18655                           
 18656                           ;controller.c: 132:         address_dec();
 18657  16F1  3190  2060  3196   	fcall	_address_dec
 18658  16F4                     L14:	
 18659                           
 18660                           ;controller.c: 133:         lastIncTime = CLOCK_getTime();
 18661  16F4  319E  269A  3196   	fcall	_CLOCK_getTime
 18662  16F7  0140               	movlb	0	; select bank0
 18663  16F8  0821               	movf	?_CLOCK_getTime+1,w
 18664  16F9  0141               	movlb	1	; select bank1
 18665  16FA  00B2               	movwf	(_lastIncTime+1)^(0+128)
 18666  16FB  0140               	movlb	0	; select bank0
 18667  16FC  0820               	movf	?_CLOCK_getTime,w
 18668  16FD  0141               	movlb	1	; select bank1
 18669  16FE  00B1               	movwf	_lastIncTime^(0+128)
 18670                           
 18671                           ;controller.c: 134:         if(incInterval > 20){
 18672  16FF  0869               	movf	(_incInterval+1)^(0+128),w
 18673  1700  3A80               	xorlw	128
 18674  1701  0140               	movlb	0	; select bank0
 18675  1702  00B7               	movwf	??_CONTROL_DMX
 18676  1703  3080               	movlw	128
 18677  1704  0237               	subwf	??_CONTROL_DMX,w
 18678  1705  1D03               	skipz
 18679  1706  2F0A               	goto	u5575
 18680  1707  3015               	movlw	21
 18681  1708  0141               	movlb	1	; select bank1
 18682  1709  0268               	subwf	_incInterval^(0+128),w
 18683  170A                     u5575:	
 18684  170A  1C03               	skipc
 18685  170B  2F11               	goto	l1049
 18686                           
 18687                           ;controller.c: 128:             incInterval-=1;
 18688  170C  30FF               	movlw	255
 18689  170D  0141               	movlb	1	; select bank1
 18690  170E  07E8               	addwf	_incInterval^(0+128),f
 18691  170F  30FF               	movlw	255
 18692  1710  3DE9               	addwfc	(_incInterval+1)^(0+128),f
 18693  1711                     l1049:	
 18694                           ;controller.c: 129:         }
 18695                           
 18696                           
 18697                           ;controller.c: 130:         return 1;
 18698  1711  3001               	movlw	1
 18699  1712  0008               	return
 18700  1713                     l6338:	
 18701  1713  0141               	movlb	1	; select bank1
 18702  1714  0844               	movf	_down^(0+128),w
 18703  1715  319F  2759  3196   	fcall	_BUTTONS_isHeld
 18704  1718  3A00               	xorlw	0
 18705  1719  1D03               	btfss	3,2
 18706  171A  2ED9               	goto	l6340
 18707  171B                     l6354:	
 18708  171B  0141               	movlb	1	; select bank1
 18709  171C  0843               	movf	_enter^(0+128),w
 18710  171D  319F  2759  3196   	fcall	_BUTTONS_isHeld
 18711  1720  3A00               	xorlw	0
 18712  1721  1903               	skipnz
 18713  1722  2F2A               	goto	l6362
 18714                           
 18715                           ;controller.c: 139:         address = 1;
 18716  1723  3001               	movlw	1
 18717  1724  0141               	movlb	1	; select bank1
 18718  1725  00EA               	movwf	_address^(0+128)
 18719  1726  3000               	movlw	0
 18720  1727  00EB               	movwf	(_address^(0+128)+1)
 18721                           
 18722                           ;controller.c: 140:         return 1;
 18723  1728  3001               	movlw	1
 18724  1729  0008               	return
 18725  172A                     l6362:	
 18726  172A  0141               	movlb	1	; select bank1
 18727  172B  0840               	movf	_upState^(0+128),w
 18728  172C  1903               	btfsc	3,2
 18729  172D  2F32               	goto	l6372
 18730                           
 18731                           ;controller.c: 142:         address_inc();
 18732  172E  3190  2078  3196   	fcall	_address_inc
 18733  1731  2F11               	goto	l1049
 18734  1732                     l6372:	
 18735  1732  083F               	movf	_downState^(0+128),w
 18736  1733  1903               	btfsc	3,2
 18737  1734  2F39               	goto	l6382
 18738                           
 18739                           ;controller.c: 146:         address_dec();
 18740  1735  3190  2060  3196   	fcall	_address_dec
 18741  1738  2F11               	goto	l1049
 18742  1739                     l6382:	
 18743  1739  083D               	movf	_enterState^(0+128),w
 18744  173A  1D03               	btfss	3,2
 18745  173B  2F11               	goto	l1049
 18746  173C  0840               	movf	_upState^(0+128),w
 18747  173D  1D03               	btfss	3,2
 18748  173E  083F               	movf	_downState^(0+128),w
 18749  173F  1D03               	btfss	3,2
 18750  1740  2F55               	goto	l6400
 18751  1741  0844               	movf	_down^(0+128),w
 18752  1742  319F  2759  3196   	fcall	_BUTTONS_isHeld
 18753  1745  3A00               	xorlw	0
 18754  1746  1D03               	skipz
 18755  1747  2F55               	goto	l6400
 18756  1748  0141               	movlb	1	; select bank1
 18757  1749  0845               	movf	_up^(0+128),w
 18758  174A  319F  2759  3196   	fcall	_BUTTONS_isHeld
 18759  174D  3A00               	xorlw	0
 18760  174E  1D03               	skipz
 18761  174F  2F55               	goto	l6400
 18762                           
 18763                           ;controller.c: 151:         incInterval = 100;
 18764  1750  3064               	movlw	100
 18765  1751  0141               	movlb	1	; select bank1
 18766  1752  00E8               	movwf	_incInterval^(0+128)
 18767  1753  3000               	movlw	0
 18768  1754  00E9               	movwf	(_incInterval^(0+128)+1)
 18769  1755                     l6400:	
 18770                           ;controller.c: 152:     } else {
 18771                           
 18772                           
 18773                           ;controller.c: 153:         return 0;
 18774  1755  3000               	movlw	0
 18775  1756  0008               	return
 18776  1757                     __end_of_CONTROL_DMX:	
 18777                           
 18778                           	psect	text50
 18779  1078                     __ptext50:	
 18780 ;; *************** function _address_inc *****************
 18781 ;; Defined at:
 18782 ;;		line 29 in file "dmx.c"
 18783 ;; Parameters:    Size  Location     Type
 18784 ;;		None
 18785 ;; Auto vars:     Size  Location     Type
 18786 ;;		None
 18787 ;; Return value:  Size  Location     Type
 18788 ;;                  1    wreg      void 
 18789 ;; Registers used:
 18790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18791 ;; Tracked objects:
 18792 ;;		On entry : 0/0
 18793 ;;		On exit  : 0/0
 18794 ;;		Unchanged: 0/0
 18795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18800 ;;Total ram usage:        0 bytes
 18801 ;; Hardware stack levels used:    1
 18802 ;; Hardware stack levels required when called:    9
 18803 ;; This function calls:
 18804 ;;		_TM1650_fastPrintNum
 18805 ;; This function is called by:
 18806 ;;		_CONTROL_DMX
 18807 ;; This function uses a non-reentrant model
 18808 ;;
 18809                           
 18810                           
 18811                           ;psect for function _address_inc
 18812  1078                     _address_inc:	
 18813                           
 18814                           ;dmx.c: 31:     if(address == 512)
 18815                           
 18816                           ;incstack = 0
 18817                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18818  1078  3002               	movlw	2
 18819  1079  0141               	movlb	1	; select bank1
 18820  107A  066B               	xorwf	(_address+1)^(0+128),w
 18821  107B  046A               	iorwf	_address^(0+128),w
 18822  107C  1D03               	btfss	3,2
 18823  107D  2883               	goto	l6098
 18824                           
 18825                           ;dmx.c: 32:         address = 1;
 18826  107E  3001               	movlw	1
 18827  107F  00EA               	movwf	_address^(0+128)
 18828  1080  3000               	movlw	0
 18829  1081  00EB               	movwf	(_address^(0+128)+1)
 18830  1082  2887               	goto	l6100
 18831  1083                     l6098:	
 18832                           
 18833                           ;dmx.c: 34:         address++;
 18834  1083  3001               	movlw	1
 18835  1084  07EA               	addwf	_address^(0+128),f
 18836  1085  3000               	movlw	0
 18837  1086  3DEB               	addwfc	(_address+1)^(0+128),f
 18838  1087                     l6100:	
 18839                           
 18840                           ;dmx.c: 37:     TM1650_fastPrintNum(address);
 18841  1087  086B               	movf	(_address+1)^(0+128),w
 18842  1088  0140               	movlb	0	; select bank0
 18843  1089  00B5               	movwf	TM1650_fastPrintNum@num+1
 18844  108A  0141               	movlb	1	; select bank1
 18845  108B  086A               	movf	_address^(0+128),w
 18846  108C  0140               	movlb	0	; select bank0
 18847  108D  00B4               	movwf	TM1650_fastPrintNum@num
 18848  108E  3188  207E         	fcall	_TM1650_fastPrintNum
 18849  1090  0008               	return
 18850  1091                     __end_of_address_inc:	
 18851                           
 18852                           	psect	text51
 18853  1060                     __ptext51:	
 18854 ;; *************** function _address_dec *****************
 18855 ;; Defined at:
 18856 ;;		line 43 in file "dmx.c"
 18857 ;; Parameters:    Size  Location     Type
 18858 ;;		None
 18859 ;; Auto vars:     Size  Location     Type
 18860 ;;		None
 18861 ;; Return value:  Size  Location     Type
 18862 ;;                  1    wreg      void 
 18863 ;; Registers used:
 18864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18865 ;; Tracked objects:
 18866 ;;		On entry : 0/0
 18867 ;;		On exit  : 0/0
 18868 ;;		Unchanged: 0/0
 18869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18874 ;;Total ram usage:        0 bytes
 18875 ;; Hardware stack levels used:    1
 18876 ;; Hardware stack levels required when called:    9
 18877 ;; This function calls:
 18878 ;;		_TM1650_fastPrintNum
 18879 ;; This function is called by:
 18880 ;;		_CONTROL_DMX
 18881 ;; This function uses a non-reentrant model
 18882 ;;
 18883                           
 18884                           
 18885                           ;psect for function _address_dec
 18886  1060                     _address_dec:	
 18887                           
 18888                           ;dmx.c: 45:     if(address == 1)
 18889                           
 18890                           ;incstack = 0
 18891                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18892  1060  0141               	movlb	1	; select bank1
 18893  1061  036A               	decf	_address^(0+128),w
 18894  1062  046B               	iorwf	(_address+1)^(0+128),w
 18895  1063  1D03               	btfss	3,2
 18896  1064  286A               	goto	l6106
 18897                           
 18898                           ;dmx.c: 46:         address = 512;
 18899  1065  3000               	movlw	0
 18900  1066  00EA               	movwf	_address^(0+128)
 18901  1067  3002               	movlw	2
 18902  1068  00EB               	movwf	(_address^(0+128)+1)
 18903  1069  286E               	goto	l6108
 18904  106A                     l6106:	
 18905                           
 18906                           ;dmx.c: 48:         address--;
 18907  106A  3001               	movlw	1
 18908  106B  02EA               	subwf	_address^(0+128),f
 18909  106C  3000               	movlw	0
 18910  106D  3BEB               	subwfb	(_address+1)^(0+128),f
 18911  106E                     l6108:	
 18912                           
 18913                           ;dmx.c: 51:     TM1650_fastPrintNum(address);
 18914  106E  086B               	movf	(_address+1)^(0+128),w
 18915  106F  0140               	movlb	0	; select bank0
 18916  1070  00B5               	movwf	TM1650_fastPrintNum@num+1
 18917  1071  0141               	movlb	1	; select bank1
 18918  1072  086A               	movf	_address^(0+128),w
 18919  1073  0140               	movlb	0	; select bank0
 18920  1074  00B4               	movwf	TM1650_fastPrintNum@num
 18921  1075  3188  207E         	fcall	_TM1650_fastPrintNum
 18922  1077  0008               	return
 18923  1078                     __end_of_address_dec:	
 18924                           
 18925                           	psect	text52
 18926  087E                     __ptext52:	
 18927 ;; *************** function _TM1650_fastPrintNum *****************
 18928 ;; Defined at:
 18929 ;;		line 101 in file "tm1650.c"
 18930 ;; Parameters:    Size  Location     Type
 18931 ;;  num             2   20[BANK0 ] unsigned short 
 18932 ;; Auto vars:     Size  Location     Type
 18933 ;;		None
 18934 ;; Return value:  Size  Location     Type
 18935 ;;                  1    wreg      void 
 18936 ;; Registers used:
 18937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18938 ;; Tracked objects:
 18939 ;;		On entry : 0/0
 18940 ;;		On exit  : 0/0
 18941 ;;		Unchanged: 0/0
 18942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18946 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18947 ;;Total ram usage:        3 bytes
 18948 ;; Hardware stack levels used:    1
 18949 ;; Hardware stack levels required when called:    8
 18950 ;; This function calls:
 18951 ;;		___lwdiv
 18952 ;;		___lwmod
 18953 ;;		_writeData
 18954 ;; This function is called by:
 18955 ;;		_CONTROLLER_task
 18956 ;;		_DMX_init
 18957 ;;		_address_inc
 18958 ;;		_address_dec
 18959 ;; This function uses a non-reentrant model
 18960 ;;
 18961                           
 18962                           
 18963                           ;psect for function _TM1650_fastPrintNum
 18964  087E                     _TM1650_fastPrintNum:	
 18965                           
 18966                           ;tm1650.c: 103:     if(num > 9999){
 18967                           
 18968                           ;incstack = 0
 18969                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18970  087E  3027               	movlw	39
 18971  087F  0140               	movlb	0	; select bank0
 18972  0880  0235               	subwf	TM1650_fastPrintNum@num+1,w
 18973  0881  3010               	movlw	16
 18974  0882  1903               	skipnz
 18975  0883  0234               	subwf	TM1650_fastPrintNum@num,w
 18976  0884  1C03               	skipc
 18977  0885  28A9               	goto	l6048
 18978                           
 18979                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 18980  0886  3079               	movlw	121
 18981  0887  00B6               	movwf	??_TM1650_fastPrintNum
 18982  0888  0836               	movf	??_TM1650_fastPrintNum,w
 18983  0889  00AE               	movwf	writeData@data
 18984  088A  3034               	movlw	52
 18985  088B  3190  20AD  3188   	fcall	_writeData
 18986                           
 18987                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 18988  088E  3079               	movlw	121
 18989  088F  0140               	movlb	0	; select bank0
 18990  0890  00B6               	movwf	??_TM1650_fastPrintNum
 18991  0891  0836               	movf	??_TM1650_fastPrintNum,w
 18992  0892  00AE               	movwf	writeData@data
 18993  0893  3035               	movlw	53
 18994  0894  3190  20AD  3188   	fcall	_writeData
 18995                           
 18996                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 18997  0897  3079               	movlw	121
 18998  0898  0140               	movlb	0	; select bank0
 18999  0899  00B6               	movwf	??_TM1650_fastPrintNum
 19000  089A  0836               	movf	??_TM1650_fastPrintNum,w
 19001  089B  00AE               	movwf	writeData@data
 19002  089C  3036               	movlw	54
 19003  089D  3190  20AD  3188   	fcall	_writeData
 19004                           
 19005                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 19006  08A0  3079               	movlw	121
 19007  08A1  0140               	movlb	0	; select bank0
 19008  08A2  00B6               	movwf	??_TM1650_fastPrintNum
 19009  08A3  0836               	movf	??_TM1650_fastPrintNum,w
 19010  08A4  00AE               	movwf	writeData@data
 19011  08A5  3037               	movlw	55
 19012  08A6  3190  20AD         	fcall	_writeData
 19013  08A8  0008               	return
 19014  08A9                     l6048:	
 19015                           
 19016                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 19017  08A9  300A               	movlw	10
 19018  08AA  00A8               	movwf	___lwmod@divisor
 19019  08AB  3000               	movlw	0
 19020  08AC  00A9               	movwf	___lwmod@divisor+1
 19021  08AD  0835               	movf	TM1650_fastPrintNum@num+1,w
 19022  08AE  00AB               	movwf	___lwmod@dividend+1
 19023  08AF  0834               	movf	TM1650_fastPrintNum@num,w
 19024  08B0  00AA               	movwf	___lwmod@dividend
 19025  08B1  3192  22A6  3188   	fcall	___lwmod
 19026  08B4  0140               	movlb	0	; select bank0
 19027  08B5  0829               	movf	?___lwmod+1,w
 19028  08B6  0085               	movwf	5
 19029  08B7  0828               	movf	?___lwmod,w
 19030  08B8  0084               	movwf	4
 19031  08B9  3010               	movlw	low ((_charTable+16)| (0+32768))
 19032  08BA  0784               	addwf	4,f
 19033  08BB  3098               	movlw	high ((_charTable+16)| (0+32768))
 19034  08BC  3D85               	addwfc	5,f
 19035  08BD  0800               	movf	0,w	;code access
 19036  08BE  00B6               	movwf	??_TM1650_fastPrintNum
 19037  08BF  0836               	movf	??_TM1650_fastPrintNum,w
 19038  08C0  00AE               	movwf	writeData@data
 19039  08C1  3037               	movlw	55
 19040  08C2  3190  20AD  3188   	fcall	_writeData
 19041                           
 19042                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 19043  08C5  300A               	movlw	10
 19044  08C6  0140               	movlb	0	; select bank0
 19045  08C7  00A8               	movwf	___lwmod@divisor
 19046  08C8  3000               	movlw	0
 19047  08C9  00A9               	movwf	___lwmod@divisor+1
 19048  08CA  300A               	movlw	10
 19049  08CB  00A0               	movwf	___lwdiv@divisor
 19050  08CC  3000               	movlw	0
 19051  08CD  00A1               	movwf	___lwdiv@divisor+1
 19052  08CE  0835               	movf	TM1650_fastPrintNum@num+1,w
 19053  08CF  00A3               	movwf	___lwdiv@dividend+1
 19054  08D0  0834               	movf	TM1650_fastPrintNum@num,w
 19055  08D1  00A2               	movwf	___lwdiv@dividend
 19056  08D2  3193  23CA  3188   	fcall	___lwdiv
 19057  08D5  0140               	movlb	0	; select bank0
 19058  08D6  0821               	movf	?___lwdiv+1,w
 19059  08D7  00AB               	movwf	___lwmod@dividend+1
 19060  08D8  0820               	movf	?___lwdiv,w
 19061  08D9  00AA               	movwf	___lwmod@dividend
 19062  08DA  3192  22A6  3188   	fcall	___lwmod
 19063  08DD  0140               	movlb	0	; select bank0
 19064  08DE  0829               	movf	?___lwmod+1,w
 19065  08DF  0085               	movwf	5
 19066  08E0  0828               	movf	?___lwmod,w
 19067  08E1  0084               	movwf	4
 19068  08E2  3010               	movlw	low ((_charTable+16)| (0+32768))
 19069  08E3  0784               	addwf	4,f
 19070  08E4  3098               	movlw	high ((_charTable+16)| (0+32768))
 19071  08E5  3D85               	addwfc	5,f
 19072  08E6  0800               	movf	0,w	;code access
 19073  08E7  00B6               	movwf	??_TM1650_fastPrintNum
 19074  08E8  0836               	movf	??_TM1650_fastPrintNum,w
 19075  08E9  00AE               	movwf	writeData@data
 19076  08EA  3036               	movlw	54
 19077  08EB  3190  20AD  3188   	fcall	_writeData
 19078                           
 19079                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 19080  08EE  300A               	movlw	10
 19081  08EF  0140               	movlb	0	; select bank0
 19082  08F0  00A8               	movwf	___lwmod@divisor
 19083  08F1  3000               	movlw	0
 19084  08F2  00A9               	movwf	___lwmod@divisor+1
 19085  08F3  3064               	movlw	100
 19086  08F4  00A0               	movwf	___lwdiv@divisor
 19087  08F5  3000               	movlw	0
 19088  08F6  00A1               	movwf	___lwdiv@divisor+1
 19089  08F7  0835               	movf	TM1650_fastPrintNum@num+1,w
 19090  08F8  00A3               	movwf	___lwdiv@dividend+1
 19091  08F9  0834               	movf	TM1650_fastPrintNum@num,w
 19092  08FA  00A2               	movwf	___lwdiv@dividend
 19093  08FB  3193  23CA  3188   	fcall	___lwdiv
 19094  08FE  0140               	movlb	0	; select bank0
 19095  08FF  0821               	movf	?___lwdiv+1,w
 19096  0900  00AB               	movwf	___lwmod@dividend+1
 19097  0901  0820               	movf	?___lwdiv,w
 19098  0902  00AA               	movwf	___lwmod@dividend
 19099  0903  3192  22A6  3188   	fcall	___lwmod
 19100  0906  0140               	movlb	0	; select bank0
 19101  0907  0829               	movf	?___lwmod+1,w
 19102  0908  0085               	movwf	5
 19103  0909  0828               	movf	?___lwmod,w
 19104  090A  0084               	movwf	4
 19105  090B  3010               	movlw	low ((_charTable+16)| (0+32768))
 19106  090C  0784               	addwf	4,f
 19107  090D  3098               	movlw	high ((_charTable+16)| (0+32768))
 19108  090E  3D85               	addwfc	5,f
 19109  090F  0800               	movf	0,w	;code access
 19110  0910  00B6               	movwf	??_TM1650_fastPrintNum
 19111  0911  0836               	movf	??_TM1650_fastPrintNum,w
 19112  0912  00AE               	movwf	writeData@data
 19113  0913  3035               	movlw	53
 19114  0914  3190  20AD  3188   	fcall	_writeData
 19115                           
 19116                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 19117  0917  300A               	movlw	10
 19118  0918  0140               	movlb	0	; select bank0
 19119  0919  00A8               	movwf	___lwmod@divisor
 19120  091A  3000               	movlw	0
 19121  091B  00A9               	movwf	___lwmod@divisor+1
 19122  091C  30E8               	movlw	232
 19123  091D  00A0               	movwf	___lwdiv@divisor
 19124  091E  3003               	movlw	3
 19125  091F  00A1               	movwf	___lwdiv@divisor+1
 19126  0920  0835               	movf	TM1650_fastPrintNum@num+1,w
 19127  0921  00A3               	movwf	___lwdiv@dividend+1
 19128  0922  0834               	movf	TM1650_fastPrintNum@num,w
 19129  0923  00A2               	movwf	___lwdiv@dividend
 19130  0924  3193  23CA  3188   	fcall	___lwdiv
 19131  0927  0140               	movlb	0	; select bank0
 19132  0928  0821               	movf	?___lwdiv+1,w
 19133  0929  00AB               	movwf	___lwmod@dividend+1
 19134  092A  0820               	movf	?___lwdiv,w
 19135  092B  00AA               	movwf	___lwmod@dividend
 19136  092C  3192  22A6  3188   	fcall	___lwmod
 19137  092F  0140               	movlb	0	; select bank0
 19138  0930  0829               	movf	?___lwmod+1,w
 19139  0931  0085               	movwf	5
 19140  0932  0828               	movf	?___lwmod,w
 19141  0933  0084               	movwf	4
 19142  0934  3010               	movlw	low ((_charTable+16)| (0+32768))
 19143  0935  0784               	addwf	4,f
 19144  0936  3098               	movlw	high ((_charTable+16)| (0+32768))
 19145  0937  3D85               	addwfc	5,f
 19146  0938  0800               	movf	0,w	;code access
 19147  0939  00B6               	movwf	??_TM1650_fastPrintNum
 19148  093A  0836               	movf	??_TM1650_fastPrintNum,w
 19149  093B  00AE               	movwf	writeData@data
 19150  093C  3034               	movlw	52
 19151  093D  3190  20AD         	fcall	_writeData
 19152  093F  0008               	return
 19153  0940                     __end_of_TM1650_fastPrintNum:	
 19154                           
 19155                           	psect	text53
 19156  10AD                     __ptext53:	
 19157 ;; *************** function _writeData *****************
 19158 ;; Defined at:
 19159 ;;		line 31 in file "tm1650.c"
 19160 ;; Parameters:    Size  Location     Type
 19161 ;;  address         1    wreg     unsigned char 
 19162 ;;  data            1   14[BANK0 ] unsigned char 
 19163 ;; Auto vars:     Size  Location     Type
 19164 ;;  address         1   18[BANK0 ] unsigned char 
 19165 ;;  status          1   19[BANK0 ] enum E11370
 19166 ;; Return value:  Size  Location     Type
 19167 ;;                  1    wreg      void 
 19168 ;; Registers used:
 19169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19170 ;; Tracked objects:
 19171 ;;		On entry : 0/0
 19172 ;;		On exit  : 0/0
 19173 ;;		Unchanged: 0/0
 19174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19175 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19176 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19177 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19178 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19179 ;;Total ram usage:        6 bytes
 19180 ;; Hardware stack levels used:    1
 19181 ;; Hardware stack levels required when called:    7
 19182 ;; This function calls:
 19183 ;;		_I2C1_MasterWrite
 19184 ;; This function is called by:
 19185 ;;		_TM1650_enable
 19186 ;;		_TM1650_setDigit
 19187 ;;		_TM1650_fastPrintNum
 19188 ;;		_TM1650_brightness
 19189 ;; This function uses a non-reentrant model
 19190 ;;
 19191                           
 19192                           
 19193                           ;psect for function _writeData
 19194  10AD                     _writeData:	
 19195                           
 19196                           ;incstack = 0
 19197                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19198                           ;writeData@address stored from wreg
 19199  10AD  0140               	movlb	0	; select bank0
 19200  10AE  00B2               	movwf	writeData@address
 19201                           
 19202                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 19203  10AF  3002               	movlw	2
 19204  10B0  00AF               	movwf	??_writeData
 19205  10B1  082F               	movf	??_writeData,w
 19206  10B2  00B3               	movwf	writeData@status
 19207                           
 19208                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 19209  10B3  01A7               	clrf	I2C1_MasterWrite@length
 19210  10B4  0AA7               	incf	I2C1_MasterWrite@length,f
 19211  10B5  0832               	movf	writeData@address,w
 19212  10B6  00AF               	movwf	??_writeData
 19213  10B7  01B0               	clrf	??_writeData+1
 19214  10B8  082F               	movf	??_writeData,w
 19215  10B9  00A8               	movwf	I2C1_MasterWrite@address
 19216  10BA  0830               	movf	??_writeData+1,w
 19217  10BB  00A9               	movwf	I2C1_MasterWrite@address+1
 19218  10BC  3033               	movlw	(low (writeData@status| 0))& (0+255)
 19219  10BD  00B1               	movwf	??_writeData+2
 19220  10BE  0831               	movf	??_writeData+2,w
 19221  10BF  00AA               	movwf	I2C1_MasterWrite@pflag
 19222  10C0  302E               	movlw	(low (writeData@data| 0))& (0+255)
 19223  10C1  3192  227C  3190   	fcall	_I2C1_MasterWrite
 19224  10C4                     l5860:	
 19225                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 19226                           
 19227  10C4  3002               	movlw	2
 19228  10C5  0140               	movlb	0	; select bank0
 19229  10C6  0633               	xorwf	writeData@status,w
 19230  10C7  1D03               	btfss	3,2
 19231  10C8  0008               	return
 19232  10C9  28C4               	goto	l5860
 19233  10CA                     __end_of_writeData:	
 19234                           
 19235                           	psect	text54
 19236  127C                     __ptext54:	
 19237 ;; *************** function _I2C1_MasterWrite *****************
 19238 ;; Defined at:
 19239 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 19240 ;; Parameters:    Size  Location     Type
 19241 ;;  pdata           1    wreg     PTR unsigned char 
 19242 ;;		 -> writeData@data(1), 
 19243 ;;  length          1    7[BANK0 ] unsigned char 
 19244 ;;  address         2    8[BANK0 ] unsigned short 
 19245 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 19246 ;;		 -> writeData@status(1), 
 19247 ;; Auto vars:     Size  Location     Type
 19248 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 19249 ;;		 -> writeData@data(1), 
 19250 ;; Return value:  Size  Location     Type
 19251 ;;                  1    wreg      void 
 19252 ;; Registers used:
 19253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19254 ;; Tracked objects:
 19255 ;;		On entry : 0/0
 19256 ;;		On exit  : 0/0
 19257 ;;		Unchanged: 0/0
 19258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19259 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19260 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19262 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19263 ;;Total ram usage:        7 bytes
 19264 ;; Hardware stack levels used:    1
 19265 ;; Hardware stack levels required when called:    6
 19266 ;; This function calls:
 19267 ;;		_I2C1_MasterTRBInsert
 19268 ;;		_I2C1_MasterWriteTRBBuild
 19269 ;; This function is called by:
 19270 ;;		_writeData
 19271 ;; This function uses a non-reentrant model
 19272 ;;
 19273                           
 19274                           
 19275                           ;psect for function _I2C1_MasterWrite
 19276  127C                     _I2C1_MasterWrite:	
 19277                           
 19278                           ;incstack = 0
 19279                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19280                           ;I2C1_MasterWrite@pdata stored from wreg
 19281  127C  0140               	movlb	0	; select bank0
 19282  127D  00AD               	movwf	I2C1_MasterWrite@pdata
 19283                           
 19284                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 19285  127E  0141               	movlb	1	; select bank1
 19286  127F  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 19287  1280  2A9F               	goto	l5854
 19288                           
 19289                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 19290  1281  0140               	movlb	0	; select bank0
 19291  1282  082D               	movf	I2C1_MasterWrite@pdata,w
 19292  1283  00AB               	movwf	??_I2C1_MasterWrite
 19293  1284  082B               	movf	??_I2C1_MasterWrite,w
 19294  1285  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 19295  1286  0827               	movf	I2C1_MasterWrite@length,w
 19296  1287  00AC               	movwf	??_I2C1_MasterWrite+1
 19297  1288  082C               	movf	??_I2C1_MasterWrite+1,w
 19298  1289  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 19299  128A  0829               	movf	I2C1_MasterWrite@address+1,w
 19300  128B  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 19301  128C  0828               	movf	I2C1_MasterWrite@address,w
 19302  128D  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 19303  128E  3040               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 19304  128F  3191  21C5  3192   	fcall	_I2C1_MasterWriteTRBBuild
 19305                           
 19306                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 19307  1292  3040               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 19308  1293  0140               	movlb	0	; select bank0
 19309  1294  00AB               	movwf	??_I2C1_MasterWrite
 19310  1295  082B               	movf	??_I2C1_MasterWrite,w
 19311  1296  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 19312  1297  082A               	movf	I2C1_MasterWrite@pflag,w
 19313  1298  00AC               	movwf	??_I2C1_MasterWrite+1
 19314  1299  082C               	movf	??_I2C1_MasterWrite+1,w
 19315  129A  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 19316  129B  3001               	movlw	1
 19317  129C  3194  24BD         	fcall	_I2C1_MasterTRBInsert
 19318                           
 19319                           ;mcc_generated_files/i2c1.c: 613:     }
 19320  129E  0008               	return
 19321  129F                     l5854:	
 19322                           
 19323                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 19324  129F  0140               	movlb	0	; select bank0
 19325  12A0  082A               	movf	I2C1_MasterWrite@pflag,w
 19326  12A1  0086               	movwf	6
 19327  12A2  0187               	clrf	7
 19328  12A3  0181               	clrf	1
 19329  12A4  0A81               	incf	1,f
 19330  12A5  0008               	return
 19331  12A6                     __end_of_I2C1_MasterWrite:	
 19332                           
 19333                           	psect	text55
 19334  11C5                     __ptext55:	
 19335 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 19336 ;; Defined at:
 19337 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 19338 ;; Parameters:    Size  Location     Type
 19339 ;;  ptrb            1    wreg     PTR struct .
 19340 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 19341 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 19342 ;;		 -> writeData@data(1), 
 19343 ;;  length          1    1[BANK0 ] unsigned char 
 19344 ;;  address         2    2[BANK0 ] unsigned short 
 19345 ;; Auto vars:     Size  Location     Type
 19346 ;;  ptrb            1    6[BANK0 ] PTR struct .
 19347 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 19348 ;; Return value:  Size  Location     Type
 19349 ;;                  1    wreg      void 
 19350 ;; Registers used:
 19351 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19352 ;; Tracked objects:
 19353 ;;		On entry : 0/0
 19354 ;;		On exit  : 0/0
 19355 ;;		Unchanged: 0/0
 19356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19358 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19359 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19360 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19361 ;;Total ram usage:        7 bytes
 19362 ;; Hardware stack levels used:    1
 19363 ;; Hardware stack levels required when called:    4
 19364 ;; This function calls:
 19365 ;;		Nothing
 19366 ;; This function is called by:
 19367 ;;		_I2C1_MasterWrite
 19368 ;; This function uses a non-reentrant model
 19369 ;;
 19370                           
 19371                           
 19372                           ;psect for function _I2C1_MasterWriteTRBBuild
 19373  11C5                     _I2C1_MasterWriteTRBBuild:	
 19374                           
 19375                           ;incstack = 0
 19376                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 19377                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 19378  11C5  0140               	movlb	0	; select bank0
 19379  11C6  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 19380                           
 19381                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 19382  11C7  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 19383  11C8  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 19384  11C9  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 19385  11CA  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19386  11CB  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 19387  11CC  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 19388  11CD  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19389  11CE  0086               	movwf	6
 19390  11CF  3001               	movlw	1	; select bank2/3
 19391  11D0  0087               	movwf	7
 19392  11D1  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19393  11D2  3FC0               	movwi [0]fsr1
 19394  11D3  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 19395  11D4  3FC1               	movwi [1]fsr1
 19396                           
 19397                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 19398  11D5  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 19399  11D6  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19400  11D7  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19401  11D8  3E02               	addlw	2
 19402  11D9  0086               	movwf	6
 19403  11DA  3001               	movlw	1	; select bank2/3
 19404  11DB  0087               	movwf	7
 19405  11DC  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19406  11DD  0081               	movwf	1
 19407                           
 19408                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 19409  11DE  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 19410  11DF  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19411  11E0  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19412  11E1  3E03               	addlw	3
 19413  11E2  0086               	movwf	6
 19414  11E3  3001               	movlw	1	; select bank2/3
 19415  11E4  0087               	movwf	7
 19416  11E5  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19417  11E6  0081               	movwf	1
 19418  11E7  0008               	return
 19419  11E8                     __end_of_I2C1_MasterWriteTRBBuild:	
 19420                           
 19421                           	psect	text56
 19422  14BD                     __ptext56:	
 19423 ;; *************** function _I2C1_MasterTRBInsert *****************
 19424 ;; Defined at:
 19425 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 19426 ;; Parameters:    Size  Location     Type
 19427 ;;  count           1    wreg     unsigned char 
 19428 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 19429 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 19430 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 19431 ;;		 -> writeData@status(1), 
 19432 ;; Auto vars:     Size  Location     Type
 19433 ;;  count           1    3[BANK0 ] unsigned char 
 19434 ;; Return value:  Size  Location     Type
 19435 ;;                  1    wreg      void 
 19436 ;; Registers used:
 19437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19438 ;; Tracked objects:
 19439 ;;		On entry : 0/0
 19440 ;;		On exit  : 0/0
 19441 ;;		Unchanged: 0/0
 19442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19446 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19447 ;;Total ram usage:        4 bytes
 19448 ;; Hardware stack levels used:    1
 19449 ;; Hardware stack levels required when called:    5
 19450 ;; This function calls:
 19451 ;;		_I2C1_WaitForLastPacketToComplete
 19452 ;; This function is called by:
 19453 ;;		_I2C1_MasterWrite
 19454 ;;		_I2C1_MasterRead
 19455 ;; This function uses a non-reentrant model
 19456 ;;
 19457                           
 19458                           
 19459                           ;psect for function _I2C1_MasterTRBInsert
 19460  14BD                     _I2C1_MasterTRBInsert:	
 19461                           
 19462                           ;incstack = 0
 19463                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19464                           ;I2C1_MasterTRBInsert@count stored from wreg
 19465  14BD  0140               	movlb	0	; select bank0
 19466  14BE  00A3               	movwf	I2C1_MasterTRBInsert@count
 19467                           
 19468                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 19469  14BF  0141               	movlb	1	; select bank1
 19470  14C0  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 19471  14C1  2CFC               	goto	l5842
 19472                           
 19473                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 19474  14C2  3002               	movlw	2
 19475  14C3  0140               	movlb	0	; select bank0
 19476  14C4  00A2               	movwf	??_I2C1_MasterTRBInsert
 19477  14C5  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19478  14C6  0086               	movwf	6
 19479  14C7  0187               	clrf	7
 19480  14C8  0822               	movf	??_I2C1_MasterTRBInsert,w
 19481  14C9  0081               	movwf	1
 19482                           
 19483                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 19484  14CA  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 19485  14CB  00A2               	movwf	??_I2C1_MasterTRBInsert
 19486  14CC  0141               	movlb	1	; select bank1
 19487  14CD  0A20               	incf	_i2c1_object^(0+128),w
 19488  14CE  0086               	movwf	6
 19489  14CF  0187               	clrf	7
 19490  14D0  0140               	movlb	0	; select bank0
 19491  14D1  0822               	movf	??_I2C1_MasterTRBInsert,w
 19492  14D2  0081               	movwf	1
 19493                           
 19494                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 19495  14D3  0823               	movf	I2C1_MasterTRBInsert@count,w
 19496  14D4  00A2               	movwf	??_I2C1_MasterTRBInsert
 19497  14D5  0141               	movlb	1	; select bank1
 19498  14D6  0820               	movf	_i2c1_object^(0+128),w
 19499  14D7  0086               	movwf	6
 19500  14D8  0187               	clrf	7
 19501  14D9  0140               	movlb	0	; select bank0
 19502  14DA  0822               	movf	??_I2C1_MasterTRBInsert,w
 19503  14DB  0081               	movwf	1
 19504                           
 19505                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 19506  14DC  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19507  14DD  00A2               	movwf	??_I2C1_MasterTRBInsert
 19508  14DE  0141               	movlb	1	; select bank1
 19509  14DF  0820               	movf	_i2c1_object^(0+128),w
 19510  14E0  3E02               	addlw	2
 19511  14E1  0086               	movwf	6
 19512  14E2  0187               	clrf	7
 19513  14E3  0140               	movlb	0	; select bank0
 19514  14E4  0822               	movf	??_I2C1_MasterTRBInsert,w
 19515  14E5  0081               	movwf	1
 19516                           
 19517                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 19518  14E6  3003               	movlw	3
 19519  14E7  00A2               	movwf	??_I2C1_MasterTRBInsert
 19520  14E8  0822               	movf	??_I2C1_MasterTRBInsert,w
 19521  14E9  0141               	movlb	1	; select bank1
 19522  14EA  07A0               	addwf	_i2c1_object^(0+128),f
 19523                           
 19524                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 19525  14EB  0820               	movf	_i2c1_object^(0+128),w
 19526  14EC  3AD1               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 19527  14ED  1D03               	skipz
 19528  14EE  2CF5               	goto	l5838
 19529                           
 19530                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 19531  14EF  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 19532  14F0  0140               	movlb	0	; select bank0
 19533  14F1  00A2               	movwf	??_I2C1_MasterTRBInsert
 19534  14F2  0822               	movf	??_I2C1_MasterTRBInsert,w
 19535  14F3  0141               	movlb	1	; select bank1
 19536  14F4  00A0               	movwf	_i2c1_object^(0+128)
 19537  14F5                     l5838:	
 19538                           
 19539                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 19540  14F5  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 19541                           
 19542                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 19543  14F6  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 19544  14F7  0620               	xorwf	_i2c1_object^(0+128),w
 19545  14F8  1D03               	skipz
 19546  14F9  2D02               	goto	l5844
 19547                           
 19548                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 19549  14FA  1422               	bsf	(_i2c1_object^(0+128)+2),0
 19550  14FB  2D02               	goto	l5844
 19551  14FC                     l5842:	
 19552                           
 19553                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 19554  14FC  0140               	movlb	0	; select bank0
 19555  14FD  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19556  14FE  0086               	movwf	6
 19557  14FF  0187               	clrf	7
 19558  1500  0181               	clrf	1
 19559  1501  0A81               	incf	1,f
 19560  1502                     l5844:	
 19561                           
 19562                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 19563  1502  0140               	movlb	0	; select bank0
 19564  1503  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19565  1504  0086               	movwf	6
 19566  1505  0187               	clrf	7
 19567  1506  3002               	movlw	2
 19568  1507  0601               	xorwf	1,w
 19569  1508  1D03               	btfss	3,2
 19570  1509  0008               	return
 19571                           
 19572                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 19573  150A  319E  266C         	fcall	_I2C1_WaitForLastPacketToComplete
 19574                           
 19575                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 19576  150C  014E               	movlb	14	; select bank14
 19577  150D  140F               	bsf	15,0	;volatile
 19578  150E  0008               	return
 19579  150F                     __end_of_I2C1_MasterTRBInsert:	
 19580                           
 19581                           	psect	text57
 19582  1E6C                     __ptext57:	
 19583 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 19584 ;; Defined at:
 19585 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 19586 ;; Parameters:    Size  Location     Type
 19587 ;;		None
 19588 ;; Auto vars:     Size  Location     Type
 19589 ;;		None
 19590 ;; Return value:  Size  Location     Type
 19591 ;;                  1    wreg      void 
 19592 ;; Registers used:
 19593 ;;		wreg, status,2, status,0
 19594 ;; Tracked objects:
 19595 ;;		On entry : 0/0
 19596 ;;		On exit  : 0/0
 19597 ;;		Unchanged: 0/0
 19598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19603 ;;Total ram usage:        0 bytes
 19604 ;; Hardware stack levels used:    1
 19605 ;; Hardware stack levels required when called:    4
 19606 ;; This function calls:
 19607 ;;		Nothing
 19608 ;; This function is called by:
 19609 ;;		_I2C1_MasterTRBInsert
 19610 ;; This function uses a non-reentrant model
 19611 ;;
 19612                           
 19613                           
 19614                           ;psect for function _I2C1_WaitForLastPacketToComplete
 19615  1E6C                     _I2C1_WaitForLastPacketToComplete:	
 19616  1E6C                     l5826:	
 19617                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 19618                           
 19619                           ;incstack = 0
 19620                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 19621                           
 19622                           
 19623                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 19624  1E6C  0141               	movlb	1	; select bank1
 19625  1E6D  084B               	movf	_i2c1_state^(0+128),w
 19626  1E6E  1903               	btfsc	3,2
 19627  1E6F  0008               	return
 19628  1E70  2E6C               	goto	l5826
 19629  1E71                     __end_of_I2C1_WaitForLastPacketToComplete:	
 19630                           
 19631                           	psect	text58
 19632  12A6                     __ptext58:	
 19633 ;; *************** function ___lwmod *****************
 19634 ;; Defined at:
 19635 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 19636 ;; Parameters:    Size  Location     Type
 19637 ;;  divisor         2    8[BANK0 ] unsigned int 
 19638 ;;  dividend        2   10[BANK0 ] unsigned int 
 19639 ;; Auto vars:     Size  Location     Type
 19640 ;;  counter         1   13[BANK0 ] unsigned char 
 19641 ;; Return value:  Size  Location     Type
 19642 ;;                  2    8[BANK0 ] unsigned int 
 19643 ;; Registers used:
 19644 ;;		wreg, status,2, status,0
 19645 ;; Tracked objects:
 19646 ;;		On entry : 0/0
 19647 ;;		On exit  : 0/0
 19648 ;;		Unchanged: 0/0
 19649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19650 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19652 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19653 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19654 ;;Total ram usage:        6 bytes
 19655 ;; Hardware stack levels used:    1
 19656 ;; Hardware stack levels required when called:    4
 19657 ;; This function calls:
 19658 ;;		Nothing
 19659 ;; This function is called by:
 19660 ;;		_TM1650_fastPrintNum
 19661 ;; This function uses a non-reentrant model
 19662 ;;
 19663                           
 19664                           
 19665                           ;psect for function ___lwmod
 19666  12A6                     ___lwmod:	
 19667                           
 19668                           ;incstack = 0
 19669                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 19670  12A6  0140               	movlb	0	; select bank0
 19671  12A7  0828               	movf	___lwmod@divisor,w
 19672  12A8  0429               	iorwf	___lwmod@divisor+1,w
 19673  12A9  1903               	btfsc	3,2
 19674  12AA  2ACE               	goto	l4192
 19675  12AB  01AD               	clrf	___lwmod@counter
 19676  12AC  0AAD               	incf	___lwmod@counter,f
 19677  12AD                     l4182:	
 19678  12AD  1BA9               	btfsc	___lwmod@divisor+1,7
 19679  12AE  2AB9               	goto	l4184
 19680  12AF  3001               	movlw	1
 19681  12B0                     u2845:	
 19682  12B0  35A8               	lslf	___lwmod@divisor,f
 19683  12B1  0DA9               	rlf	___lwmod@divisor+1,f
 19684  12B2  0B89               	decfsz	9,f
 19685  12B3  2AB0               	goto	u2845
 19686  12B4  3001               	movlw	1
 19687  12B5  00AC               	movwf	??___lwmod
 19688  12B6  082C               	movf	??___lwmod,w
 19689  12B7  07AD               	addwf	___lwmod@counter,f
 19690  12B8  2AAD               	goto	l4182
 19691  12B9                     l4184:	
 19692  12B9  0829               	movf	___lwmod@divisor+1,w
 19693  12BA  022B               	subwf	___lwmod@dividend+1,w
 19694  12BB  1D03               	skipz
 19695  12BC  2ABF               	goto	u2865
 19696  12BD  0828               	movf	___lwmod@divisor,w
 19697  12BE  022A               	subwf	___lwmod@dividend,w
 19698  12BF                     u2865:	
 19699  12BF  1C03               	skipc
 19700  12C0  2AC5               	goto	l4188
 19701  12C1  0828               	movf	___lwmod@divisor,w
 19702  12C2  02AA               	subwf	___lwmod@dividend,f
 19703  12C3  0829               	movf	___lwmod@divisor+1,w
 19704  12C4  3BAB               	subwfb	___lwmod@dividend+1,f
 19705  12C5                     l4188:	
 19706  12C5  3001               	movlw	1
 19707  12C6                     u2875:	
 19708  12C6  36A9               	lsrf	___lwmod@divisor+1,f
 19709  12C7  0CA8               	rrf	___lwmod@divisor,f
 19710  12C8  0B89               	decfsz	9,f
 19711  12C9  2AC6               	goto	u2875
 19712  12CA  3001               	movlw	1
 19713  12CB  02AD               	subwf	___lwmod@counter,f
 19714  12CC  1D03               	btfss	3,2
 19715  12CD  2AB9               	goto	l4184
 19716  12CE                     l4192:	
 19717  12CE  082B               	movf	___lwmod@dividend+1,w
 19718  12CF  00A9               	movwf	?___lwmod+1
 19719  12D0  082A               	movf	___lwmod@dividend,w
 19720  12D1  00A8               	movwf	?___lwmod
 19721  12D2  0008               	return
 19722  12D3                     __end_of___lwmod:	
 19723                           
 19724                           	psect	text59
 19725  1F59                     __ptext59:	
 19726 ;; *************** function _BUTTONS_isHeld *****************
 19727 ;; Defined at:
 19728 ;;		line 106 in file "buttons.c"
 19729 ;; Parameters:    Size  Location     Type
 19730 ;;  button          1    wreg     PTR struct .
 19731 ;;		 -> buttons(32), NULL(0), 
 19732 ;; Auto vars:     Size  Location     Type
 19733 ;;  button          1    0[BANK0 ] PTR struct .
 19734 ;;		 -> buttons(32), NULL(0), 
 19735 ;; Return value:  Size  Location     Type
 19736 ;;                  1    wreg      _Bool 
 19737 ;; Registers used:
 19738 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19739 ;; Tracked objects:
 19740 ;;		On entry : 0/0
 19741 ;;		On exit  : 0/0
 19742 ;;		Unchanged: 0/0
 19743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19745 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19747 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19748 ;;Total ram usage:        1 bytes
 19749 ;; Hardware stack levels used:    1
 19750 ;; Hardware stack levels required when called:    4
 19751 ;; This function calls:
 19752 ;;		Nothing
 19753 ;; This function is called by:
 19754 ;;		_CONTROL_DMX
 19755 ;; This function uses a non-reentrant model
 19756 ;;
 19757                           
 19758                           
 19759                           ;psect for function _BUTTONS_isHeld
 19760  1F59                     _BUTTONS_isHeld:	
 19761                           
 19762                           ;incstack = 0
 19763                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 19764                           ;BUTTONS_isHeld@button stored from wreg
 19765  1F59  0140               	movlb	0	; select bank0
 19766  1F5A  00A0               	movwf	BUTTONS_isHeld@button
 19767                           
 19768                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 19769  1F5B  0820               	movf	BUTTONS_isHeld@button,w
 19770  1F5C  3E07               	addlw	7
 19771  1F5D  0086               	movwf	6
 19772  1F5E  3001               	movlw	1	; select bank2/3
 19773  1F5F  0087               	movwf	7
 19774  1F60  3003               	movlw	3
 19775  1F61  0601               	xorwf	1,w
 19776  1F62  1D03               	btfss	3,2
 19777  1F63  2F66               	goto	l6084
 19778                           
 19779                           ;buttons.c: 108:         return 1;
 19780  1F64  3001               	movlw	1
 19781  1F65  0008               	return
 19782  1F66                     l6084:	
 19783                           
 19784                           ;buttons.c: 111:     return 0;
 19785  1F66  3000               	movlw	0
 19786  1F67  0008               	return
 19787  1F68                     __end_of_BUTTONS_isHeld:	
 19788                           
 19789                           	psect	text60
 19790  11A3                     __ptext60:	
 19791 ;; *************** function _CONTROL_BEAT *****************
 19792 ;; Defined at:
 19793 ;;		line 160 in file "controller.c"
 19794 ;; Parameters:    Size  Location     Type
 19795 ;;		None
 19796 ;; Auto vars:     Size  Location     Type
 19797 ;;		None
 19798 ;; Return value:  Size  Location     Type
 19799 ;;                  1    wreg      _Bool 
 19800 ;; Registers used:
 19801 ;;		wreg, status,2, status,0
 19802 ;; Tracked objects:
 19803 ;;		On entry : 0/0
 19804 ;;		On exit  : 0/0
 19805 ;;		Unchanged: 0/0
 19806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19809 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19810 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19811 ;;Total ram usage:        1 bytes
 19812 ;; Hardware stack levels used:    1
 19813 ;; Hardware stack levels required when called:    4
 19814 ;; This function calls:
 19815 ;;		Nothing
 19816 ;; This function is called by:
 19817 ;;		_CONTROLLER_task
 19818 ;; This function uses a non-reentrant model
 19819 ;;
 19820                           
 19821                           
 19822                           ;psect for function _CONTROL_BEAT
 19823  11A3                     _CONTROL_BEAT:	
 19824                           
 19825                           ;controller.c: 161:     if (upState) {
 19826                           
 19827                           ;incstack = 0
 19828                           ; Regs used in _CONTROL_BEAT: [wreg+status,2+status,0]
 19829  11A3  0141               	movlb	1	; select bank1
 19830  11A4  0840               	movf	_upState^(0+128),w
 19831  11A5  1903               	btfsc	3,2
 19832  11A6  29BD               	goto	l6420
 19833                           
 19834                           ;controller.c: 162:         if(beatBrightness < 9){
 19835  11A7  3009               	movlw	9
 19836  11A8  026F               	subwf	_beatBrightness^(0+128),w
 19837  11A9  1803               	skipnc
 19838  11AA  29B2               	goto	l6414
 19839                           
 19840                           ;controller.c: 163:             beatBrightness++;
 19841  11AB  3001               	movlw	1
 19842  11AC  0140               	movlb	0	; select bank0
 19843  11AD  00A0               	movwf	??_CONTROL_BEAT
 19844  11AE  0820               	movf	??_CONTROL_BEAT,w
 19845  11AF  0141               	movlb	1	; select bank1
 19846  11B0  07EF               	addwf	_beatBrightness^(0+128),f
 19847                           
 19848                           ;controller.c: 164:         } else {
 19849  11B1  29BB               	goto	l1071
 19850  11B2                     l6414:	
 19851                           
 19852                           ;controller.c: 165:             beatBrightness = 9;
 19853  11B2  3009               	movlw	9
 19854  11B3  0140               	movlb	0	; select bank0
 19855  11B4  00A0               	movwf	??_CONTROL_BEAT
 19856  11B5  0820               	movf	??_CONTROL_BEAT,w
 19857  11B6  0141               	movlb	1	; select bank1
 19858  11B7  00EF               	movwf	_beatBrightness^(0+128)
 19859  11B8  29BB               	goto	l1071
 19860  11B9                     l6424:	
 19861                           
 19862                           ;controller.c: 170:             beatBrightness--;
 19863  11B9  3001               	movlw	1
 19864  11BA  02EF               	subwf	_beatBrightness^(0+128),f
 19865  11BB                     l1071:	
 19866                           ;controller.c: 166:         }
 19867                           
 19868                           ;controller.c: 171:         } else {
 19869                           
 19870                           
 19871                           ;controller.c: 167:         return 1;
 19872  11BB  3001               	movlw	1
 19873  11BC  0008               	return
 19874  11BD                     l6420:	
 19875  11BD  083F               	movf	_downState^(0+128),w
 19876  11BE  1903               	btfsc	3,2
 19877  11BF  0008               	return
 19878                           
 19879                           ;controller.c: 169:         if(beatBrightness > 0){
 19880  11C0  086F               	movf	_beatBrightness^(0+128),w
 19881  11C1  1D03               	btfss	3,2
 19882  11C2  29B9               	goto	l6424
 19883                           
 19884                           ;controller.c: 172:             beatBrightness = 0;
 19885  11C3  01EF               	clrf	_beatBrightness^(0+128)
 19886  11C4  29BB               	goto	l1071
 19887  11C5                     __end_of_CONTROL_BEAT:	
 19888                           
 19889                           	psect	text61
 19890  1FAF                     __ptext61:	
 19891 ;; *************** function _BUTTONS_isClicked *****************
 19892 ;; Defined at:
 19893 ;;		line 97 in file "buttons.c"
 19894 ;; Parameters:    Size  Location     Type
 19895 ;;  button          1    wreg     PTR struct .
 19896 ;;		 -> buttons(32), NULL(0), 
 19897 ;; Auto vars:     Size  Location     Type
 19898 ;;  button          1    0[BANK0 ] PTR struct .
 19899 ;;		 -> buttons(32), NULL(0), 
 19900 ;; Return value:  Size  Location     Type
 19901 ;;                  1    wreg      _Bool 
 19902 ;; Registers used:
 19903 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19904 ;; Tracked objects:
 19905 ;;		On entry : 0/0
 19906 ;;		On exit  : 0/0
 19907 ;;		Unchanged: 0/0
 19908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19912 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19913 ;;Total ram usage:        1 bytes
 19914 ;; Hardware stack levels used:    1
 19915 ;; Hardware stack levels required when called:    4
 19916 ;; This function calls:
 19917 ;;		Nothing
 19918 ;; This function is called by:
 19919 ;;		_CONTROLLER_task
 19920 ;; This function uses a non-reentrant model
 19921 ;;
 19922                           
 19923                           
 19924                           ;psect for function _BUTTONS_isClicked
 19925  1FAF                     _BUTTONS_isClicked:	
 19926                           
 19927                           ;incstack = 0
 19928                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 19929                           ;BUTTONS_isClicked@button stored from wreg
 19930  1FAF  0140               	movlb	0	; select bank0
 19931  1FB0  00A0               	movwf	BUTTONS_isClicked@button
 19932                           
 19933                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 19934  1FB1  0820               	movf	BUTTONS_isClicked@button,w
 19935  1FB2  3E07               	addlw	7
 19936  1FB3  0086               	movwf	6
 19937  1FB4  3001               	movlw	1	; select bank2/3
 19938  1FB5  0087               	movwf	7
 19939  1FB6  0301               	decf	1,w
 19940  1FB7  1D03               	btfss	3,2
 19941  1FB8  2FC1               	goto	l6278
 19942                           
 19943                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 19944  1FB9  0820               	movf	BUTTONS_isClicked@button,w
 19945  1FBA  3E07               	addlw	7
 19946  1FBB  0086               	movwf	6
 19947  1FBC  3001               	movlw	1	; select bank2/3
 19948  1FBD  0087               	movwf	7
 19949  1FBE  0181               	clrf	1
 19950                           
 19951                           ;buttons.c: 100:         return 1;
 19952  1FBF  3001               	movlw	1
 19953  1FC0  0008               	return
 19954  1FC1                     l6278:	
 19955                           
 19956                           ;buttons.c: 103:     return 0;
 19957  1FC1  3000               	movlw	0
 19958  1FC2  0008               	return
 19959  1FC3                     __end_of_BUTTONS_isClicked:	
 19960                           
 19961                           	psect	text62
 19962  1E77                     __ptext62:	
 19963 ;; *************** function _CLOCK_init *****************
 19964 ;; Defined at:
 19965 ;;		line 8 in file "clock.c"
 19966 ;; Parameters:    Size  Location     Type
 19967 ;;		None
 19968 ;; Auto vars:     Size  Location     Type
 19969 ;;		None
 19970 ;; Return value:  Size  Location     Type
 19971 ;;                  1    wreg      void 
 19972 ;; Registers used:
 19973 ;;		wreg, status,2, status,0, pclath, cstack
 19974 ;; Tracked objects:
 19975 ;;		On entry : 0/0
 19976 ;;		On exit  : 0/0
 19977 ;;		Unchanged: 0/0
 19978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19983 ;;Total ram usage:        0 bytes
 19984 ;; Hardware stack levels used:    1
 19985 ;; Hardware stack levels required when called:    5
 19986 ;; This function calls:
 19987 ;;		_TMR0_SetInterruptHandler
 19988 ;; This function is called by:
 19989 ;;		_main
 19990 ;; This function uses a non-reentrant model
 19991 ;;
 19992                           
 19993                           
 19994                           ;psect for function _CLOCK_init
 19995  1E77                     _CLOCK_init:	
 19996                           
 19997                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 19998                           
 19999                           ;incstack = 0
 20000                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 20001  1E77  3071               	movlw	low _CLOCK_timerCallback
 20002  1E78  0140               	movlb	0	; select bank0
 20003  1E79  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 20004  1E7A  301E               	movlw	high _CLOCK_timerCallback
 20005  1E7B  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 20006  1E7C  319E  26A3         	fcall	_TMR0_SetInterruptHandler
 20007  1E7E  0008               	return
 20008  1E7F                     __end_of_CLOCK_init:	
 20009                           
 20010                           	psect	text63
 20011  1EA3                     __ptext63:	
 20012 ;; *************** function _TMR0_SetInterruptHandler *****************
 20013 ;; Defined at:
 20014 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 20015 ;; Parameters:    Size  Location     Type
 20016 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 20017 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 20018 ;; Auto vars:     Size  Location     Type
 20019 ;;		None
 20020 ;; Return value:  Size  Location     Type
 20021 ;;                  1    wreg      void 
 20022 ;; Registers used:
 20023 ;;		wreg
 20024 ;; Tracked objects:
 20025 ;;		On entry : 0/0
 20026 ;;		On exit  : 0/0
 20027 ;;		Unchanged: 0/0
 20028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20032 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20033 ;;Total ram usage:        2 bytes
 20034 ;; Hardware stack levels used:    1
 20035 ;; Hardware stack levels required when called:    4
 20036 ;; This function calls:
 20037 ;;		Nothing
 20038 ;; This function is called by:
 20039 ;;		_TMR0_Initialize
 20040 ;;		_CLOCK_init
 20041 ;; This function uses a non-reentrant model
 20042 ;;
 20043                           
 20044                           
 20045                           ;psect for function _TMR0_SetInterruptHandler
 20046  1EA3                     _TMR0_SetInterruptHandler:	
 20047                           
 20048                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 20049                           
 20050                           ;incstack = 0
 20051                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 20052  1EA3  0140               	movlb	0	; select bank0
 20053  1EA4  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 20054  1EA5  0142               	movlb	2	; select bank2
 20055  1EA6  00C7               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 20056  1EA7  0140               	movlb	0	; select bank0
 20057  1EA8  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 20058  1EA9  0142               	movlb	2	; select bank2
 20059  1EAA  00C6               	movwf	_TMR0_InterruptHandler^(0+256)
 20060  1EAB  0008               	return
 20061  1EAC                     __end_of_TMR0_SetInterruptHandler:	
 20062                           
 20063                           	psect	text64
 20064  0A10                     __ptext64:	
 20065 ;; *************** function _BUTTONS_task *****************
 20066 ;; Defined at:
 20067 ;;		line 56 in file "buttons.c"
 20068 ;; Parameters:    Size  Location     Type
 20069 ;;		None
 20070 ;; Auto vars:     Size  Location     Type
 20071 ;;  btn             1    8[BANK0 ] PTR struct .
 20072 ;;		 -> buttons(32), 
 20073 ;;  i               1    5[BANK0 ] unsigned char 
 20074 ;;  time            2    6[BANK0 ] unsigned short 
 20075 ;; Return value:  Size  Location     Type
 20076 ;;                  1    wreg      void 
 20077 ;; Registers used:
 20078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20079 ;; Tracked objects:
 20080 ;;		On entry : 0/0
 20081 ;;		On exit  : 0/0
 20082 ;;		Unchanged: 0/0
 20083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20085 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20086 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20087 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20088 ;;Total ram usage:        7 bytes
 20089 ;; Hardware stack levels used:    1
 20090 ;; Hardware stack levels required when called:    5
 20091 ;; This function calls:
 20092 ;;		_CLOCK_getTime
 20093 ;; This function is called by:
 20094 ;;		_main
 20095 ;; This function uses a non-reentrant model
 20096 ;;
 20097                           
 20098                           
 20099                           ;psect for function _BUTTONS_task
 20100  0A10                     _BUTTONS_task:	
 20101                           
 20102                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 20103                           
 20104                           ;incstack = 0
 20105                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20106  0A10  319E  269A  318A   	fcall	_CLOCK_getTime
 20107  0A13  0140               	movlb	0	; select bank0
 20108  0A14  0821               	movf	?_CLOCK_getTime+1,w
 20109  0A15  00A7               	movwf	BUTTONS_task@time+1
 20110  0A16  0820               	movf	?_CLOCK_getTime,w
 20111  0A17  00A6               	movwf	BUTTONS_task@time
 20112                           
 20113                           ;buttons.c: 61:     if (time - lastTime < 10)
 20114  0A18  0141               	movlb	1	; select bank1
 20115  0A19  0835               	movf	_lastTime^(0+128),w
 20116  0A1A  0140               	movlb	0	; select bank0
 20117  0A1B  0226               	subwf	BUTTONS_task@time,w
 20118  0A1C  00A2               	movwf	??_BUTTONS_task
 20119  0A1D  0141               	movlb	1	; select bank1
 20120  0A1E  0836               	movf	(_lastTime+1)^(0+128),w
 20121  0A1F  0140               	movlb	0	; select bank0
 20122  0A20  3B27               	subwfb	BUTTONS_task@time+1,w
 20123  0A21  00A3               	movwf	??_BUTTONS_task+1
 20124  0A22  3000               	movlw	0
 20125  0A23  0223               	subwf	??_BUTTONS_task+1,w
 20126  0A24  300A               	movlw	10
 20127  0A25  1903               	skipnz
 20128  0A26  0222               	subwf	??_BUTTONS_task,w
 20129  0A27  1C03               	btfss	3,0
 20130  0A28  0008               	return
 20131                           
 20132                           ;buttons.c: 64:     lastTime = time;
 20133  0A29  0827               	movf	BUTTONS_task@time+1,w
 20134  0A2A  0141               	movlb	1	; select bank1
 20135  0A2B  00B6               	movwf	(_lastTime+1)^(0+128)
 20136  0A2C  0140               	movlb	0	; select bank0
 20137  0A2D  0826               	movf	BUTTONS_task@time,w
 20138  0A2E  0141               	movlb	1	; select bank1
 20139  0A2F  00B5               	movwf	_lastTime^(0+128)
 20140                           
 20141                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 20142  0A30  0140               	movlb	0	; select bank0
 20143  0A31  01A5               	clrf	BUTTONS_task@i
 20144  0A32                     l6568:	
 20145                           
 20146                           ;buttons.c: 68:         button_t* btn = buttons + i;
 20147  0A32  0825               	movf	BUTTONS_task@i,w
 20148  0A33  00A2               	movwf	??_BUTTONS_task
 20149  0A34  3002               	movlw	2
 20150  0A35                     u5805:	
 20151  0A35  35A2               	lslf	??_BUTTONS_task,f
 20152  0A36  3EFF               	addlw	-1
 20153  0A37  1D03               	skipz
 20154  0A38  2A35               	goto	u5805
 20155  0A39  3522               	lslf	??_BUTTONS_task,w
 20156  0A3A  3EC0               	addlw	(low (_buttons| (0+256)))& (0+255)
 20157  0A3B  00A3               	movwf	??_BUTTONS_task+1
 20158  0A3C  0823               	movf	??_BUTTONS_task+1,w
 20159  0A3D  00A8               	movwf	BUTTONS_task@btn
 20160                           
 20161                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 20162  0A3E  0828               	movf	BUTTONS_task@btn,w
 20163  0A3F  0086               	movwf	6
 20164  0A40  3001               	movlw	1	; select bank2/3
 20165  0A41  0087               	movwf	7
 20166  0A42  3F40               	moviw [0]fsr1
 20167  0A43  00A2               	movwf	??_BUTTONS_task
 20168  0A44  3F41               	moviw [1]fsr1
 20169  0A45  00A3               	movwf	??_BUTTONS_task+1
 20170  0A46  0822               	movf	??_BUTTONS_task,w
 20171  0A47  0086               	movwf	6
 20172  0A48  0823               	movf	??_BUTTONS_task+1,w
 20173  0A49  0087               	movwf	7
 20174  0A4A  3001               	movlw	1
 20175  0A4B  00A4               	movwf	??_BUTTONS_task+2
 20176  0A4C  0828               	movf	BUTTONS_task@btn,w
 20177  0A4D  3E02               	addlw	2
 20178  0A4E  0084               	movwf	4
 20179  0A4F  3001               	movlw	1	; select bank2/3
 20180  0A50  0085               	movwf	5
 20181  0A51  0A00               	incf	0,w
 20182  0A52  2A54               	goto	u5814
 20183  0A53                     u5815:	
 20184  0A53  35A4               	lslf	??_BUTTONS_task+2,f
 20185  0A54                     u5814:	
 20186  0A54  0B89               	decfsz	9,f
 20187  0A55  2A53               	goto	u5815
 20188  0A56  0824               	movf	??_BUTTONS_task+2,w
 20189  0A57  0501               	andwf	1,w
 20190  0A58  1D03               	btfss	3,2
 20191  0A59  2A73               	goto	l6576
 20192                           
 20193                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 20194  0A5A  0828               	movf	BUTTONS_task@btn,w
 20195  0A5B  3E03               	addlw	3
 20196  0A5C  0086               	movwf	6
 20197  0A5D  3001               	movlw	1	; select bank2/3
 20198  0A5E  0087               	movwf	7
 20199  0A5F  0181               	clrf	1
 20200  0A60  0A81               	incf	1,f
 20201                           
 20202                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 20203  0A61  0828               	movf	BUTTONS_task@btn,w
 20204  0A62  3E07               	addlw	7
 20205  0A63  0086               	movwf	6
 20206  0A64  3001               	movlw	1	; select bank2/3
 20207  0A65  0087               	movwf	7
 20208  0A66  0801               	movf	1,w
 20209  0A67  1D03               	btfss	3,2
 20210  0A68  2A79               	goto	l909
 20211                           
 20212                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 20213  0A69  0828               	movf	BUTTONS_task@btn,w
 20214  0A6A  3E05               	addlw	5
 20215  0A6B  0086               	movwf	6
 20216  0A6C  3001               	movlw	1	; select bank2/3
 20217  0A6D  0087               	movwf	7
 20218  0A6E  0826               	movf	BUTTONS_task@time,w
 20219  0A6F  3FC0               	movwi [0]fsr1
 20220  0A70  0827               	movf	BUTTONS_task@time+1,w
 20221  0A71  3FC1               	movwi [1]fsr1
 20222  0A72  2A79               	goto	l909
 20223  0A73                     l6576:	
 20224                           
 20225                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 20226  0A73  0828               	movf	BUTTONS_task@btn,w
 20227  0A74  3E03               	addlw	3
 20228  0A75  0086               	movwf	6
 20229  0A76  3001               	movlw	1	; select bank2/3
 20230  0A77  0087               	movwf	7
 20231  0A78  0181               	clrf	1
 20232  0A79                     l909:	
 20233                           ;buttons.c: 78:         }
 20234                           
 20235                           
 20236                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 20237  0A79  0828               	movf	BUTTONS_task@btn,w
 20238  0A7A  3E03               	addlw	3
 20239  0A7B  0086               	movwf	6
 20240  0A7C  3001               	movlw	1	; select bank2/3
 20241  0A7D  0087               	movwf	7
 20242  0A7E  0801               	movf	1,w
 20243  0A7F  1D03               	btfss	3,2
 20244  0A80  2A91               	goto	l6582
 20245  0A81  0828               	movf	BUTTONS_task@btn,w
 20246  0A82  3E04               	addlw	4
 20247  0A83  0086               	movwf	6
 20248  0A84  3001               	movlw	1	; select bank2/3
 20249  0A85  0087               	movwf	7
 20250  0A86  0301               	decf	1,w
 20251  0A87  1D03               	btfss	3,2
 20252  0A88  2A91               	goto	l6582
 20253                           
 20254                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 20255  0A89  0828               	movf	BUTTONS_task@btn,w
 20256  0A8A  3E07               	addlw	7
 20257  0A8B  0086               	movwf	6
 20258  0A8C  3001               	movlw	1	; select bank2/3
 20259  0A8D  0087               	movwf	7
 20260  0A8E  0181               	clrf	1
 20261  0A8F  0A81               	incf	1,f
 20262                           
 20263                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 20264  0A90  2ADE               	goto	l911
 20265  0A91                     l6582:	
 20266  0A91  0828               	movf	BUTTONS_task@btn,w
 20267  0A92  3E03               	addlw	3
 20268  0A93  0086               	movwf	6
 20269  0A94  3001               	movlw	1	; select bank2/3
 20270  0A95  0087               	movwf	7
 20271  0A96  0301               	decf	1,w
 20272  0A97  1D03               	btfss	3,2
 20273  0A98  2ABF               	goto	l6592
 20274  0A99  0828               	movf	BUTTONS_task@btn,w
 20275  0A9A  3E04               	addlw	4
 20276  0A9B  0086               	movwf	6
 20277  0A9C  3001               	movlw	1	; select bank2/3
 20278  0A9D  0087               	movwf	7
 20279  0A9E  0301               	decf	1,w
 20280  0A9F  1D03               	btfss	3,2
 20281  0AA0  2ABF               	goto	l6592
 20282                           
 20283                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 20284  0AA1  0828               	movf	BUTTONS_task@btn,w
 20285  0AA2  3E05               	addlw	5
 20286  0AA3  0086               	movwf	6
 20287  0AA4  3001               	movlw	1	; select bank2/3
 20288  0AA5  0087               	movwf	7
 20289  0AA6  3F40               	moviw [0]fsr1
 20290  0AA7  0226               	subwf	BUTTONS_task@time,w
 20291  0AA8  00A2               	movwf	??_BUTTONS_task
 20292  0AA9  3F41               	moviw [1]fsr1
 20293  0AAA  3B27               	subwfb	BUTTONS_task@time+1,w
 20294  0AAB  00A3               	movwf	??_BUTTONS_task+1
 20295  0AAC  3000               	movlw	0
 20296  0AAD  0223               	subwf	??_BUTTONS_task+1,w
 20297  0AAE  30C9               	movlw	201
 20298  0AAF  1903               	skipnz
 20299  0AB0  0222               	subwf	??_BUTTONS_task,w
 20300  0AB1  1C03               	skipc
 20301  0AB2  2AB5               	goto	l6590
 20302                           
 20303                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 20304  0AB3  3003               	movlw	3
 20305  0AB4  2AB6               	goto	L15
 20306  0AB5                     l6590:	
 20307                           ;buttons.c: 86:             } else {
 20308                           
 20309                           
 20310                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 20311  0AB5  3002               	movlw	2
 20312  0AB6                     L15:	
 20313  0AB6  00A2               	movwf	??_BUTTONS_task
 20314  0AB7  0828               	movf	BUTTONS_task@btn,w
 20315  0AB8  3E07               	addlw	7
 20316  0AB9  0086               	movwf	6
 20317  0ABA  3001               	movlw	1	; select bank2/3
 20318  0ABB  0087               	movwf	7
 20319  0ABC  0822               	movf	??_BUTTONS_task,w
 20320  0ABD  0081               	movwf	1
 20321  0ABE  2ADE               	goto	l911
 20322  0ABF                     l6592:	
 20323  0ABF  0828               	movf	BUTTONS_task@btn,w
 20324  0AC0  3E03               	addlw	3
 20325  0AC1  0086               	movwf	6
 20326  0AC2  3001               	movlw	1	; select bank2/3
 20327  0AC3  0087               	movwf	7
 20328  0AC4  0801               	movf	1,w
 20329  0AC5  1D03               	btfss	3,2
 20330  0AC6  2ADE               	goto	l911
 20331  0AC7  0828               	movf	BUTTONS_task@btn,w
 20332  0AC8  3E04               	addlw	4
 20333  0AC9  0086               	movwf	6
 20334  0ACA  3001               	movlw	1	; select bank2/3
 20335  0ACB  0087               	movwf	7
 20336  0ACC  0301               	decf	1,w
 20337  0ACD  1D03               	btfss	3,2
 20338  0ACE  2ADE               	goto	l911
 20339  0ACF  0828               	movf	BUTTONS_task@btn,w
 20340  0AD0  3E07               	addlw	7
 20341  0AD1  0086               	movwf	6
 20342  0AD2  3001               	movlw	1	; select bank2/3
 20343  0AD3  0087               	movwf	7
 20344  0AD4  3003               	movlw	3
 20345  0AD5  0601               	xorwf	1,w
 20346  0AD6  1D03               	btfss	3,2
 20347  0AD7  2ADE               	goto	l911
 20348                           
 20349                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 20350  0AD8  0828               	movf	BUTTONS_task@btn,w
 20351  0AD9  3E07               	addlw	7
 20352  0ADA  0086               	movwf	6
 20353  0ADB  3001               	movlw	1	; select bank2/3
 20354  0ADC  0087               	movwf	7
 20355  0ADD  0181               	clrf	1
 20356  0ADE                     l911:	
 20357                           
 20358                           ;buttons.c: 93:         btn->lastState = btn->state;
 20359  0ADE  0828               	movf	BUTTONS_task@btn,w
 20360  0ADF  3E03               	addlw	3
 20361  0AE0  0086               	movwf	6
 20362  0AE1  3001               	movlw	1	; select bank2/3
 20363  0AE2  0087               	movwf	7
 20364  0AE3  0801               	movf	1,w
 20365  0AE4  00A2               	movwf	??_BUTTONS_task
 20366  0AE5  0828               	movf	BUTTONS_task@btn,w
 20367  0AE6  3E04               	addlw	4
 20368  0AE7  0086               	movwf	6
 20369  0AE8  3001               	movlw	1	; select bank2/3
 20370  0AE9  0087               	movwf	7
 20371  0AEA  0822               	movf	??_BUTTONS_task,w
 20372  0AEB  0081               	movwf	1
 20373                           
 20374                           ;buttons.c: 94:     }
 20375  0AEC  3001               	movlw	1
 20376  0AED  00A2               	movwf	??_BUTTONS_task
 20377  0AEE  0822               	movf	??_BUTTONS_task,w
 20378  0AEF  07A5               	addwf	BUTTONS_task@i,f
 20379  0AF0  3004               	movlw	4
 20380  0AF1  0225               	subwf	BUTTONS_task@i,w
 20381  0AF2  1803               	btfsc	3,0
 20382  0AF3  0008               	return
 20383  0AF4  2A32               	goto	l6568
 20384  0AF5                     __end_of_BUTTONS_task:	
 20385                           
 20386                           	psect	text65
 20387  146F                     __ptext65:	
 20388 ;; *************** function _BUTTONS_init *****************
 20389 ;; Defined at:
 20390 ;;		line 23 in file "buttons.c"
 20391 ;; Parameters:    Size  Location     Type
 20392 ;;		None
 20393 ;; Auto vars:     Size  Location     Type
 20394 ;;		None
 20395 ;; Return value:  Size  Location     Type
 20396 ;;                  1    wreg      void 
 20397 ;; Registers used:
 20398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20399 ;; Tracked objects:
 20400 ;;		On entry : 0/0
 20401 ;;		On exit  : 0/0
 20402 ;;		Unchanged: 0/0
 20403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20408 ;;Total ram usage:        1 bytes
 20409 ;; Hardware stack levels used:    1
 20410 ;; Hardware stack levels required when called:    5
 20411 ;; This function calls:
 20412 ;;		_GPIO_init
 20413 ;;		_init
 20414 ;; This function is called by:
 20415 ;;		_main
 20416 ;; This function uses a non-reentrant model
 20417 ;;
 20418                           
 20419                           
 20420                           ;psect for function _BUTTONS_init
 20421  146F                     _BUTTONS_init:	
 20422                           
 20423                           ;buttons.c: 24:     menu = &buttons[0];
 20424                           
 20425                           ;incstack = 0
 20426                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20427  146F  30C0               	movlw	(low (_buttons| (0+256)))& (0+255)
 20428  1470  0140               	movlb	0	; select bank0
 20429  1471  00A5               	movwf	??_BUTTONS_init
 20430  1472  0825               	movf	??_BUTTONS_init,w
 20431  1473  0141               	movlb	1	; select bank1
 20432  1474  00C6               	movwf	_menu^(0+128)
 20433                           
 20434                           ;buttons.c: 25:     up = &buttons[1];
 20435  1475  30C8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 20436  1476  0140               	movlb	0	; select bank0
 20437  1477  00A5               	movwf	??_BUTTONS_init
 20438  1478  0825               	movf	??_BUTTONS_init,w
 20439  1479  0141               	movlb	1	; select bank1
 20440  147A  00C5               	movwf	_up^(0+128)
 20441                           
 20442                           ;buttons.c: 26:     down = &buttons[2];
 20443  147B  30D0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 20444  147C  0140               	movlb	0	; select bank0
 20445  147D  00A5               	movwf	??_BUTTONS_init
 20446  147E  0825               	movf	??_BUTTONS_init,w
 20447  147F  0141               	movlb	1	; select bank1
 20448  1480  00C4               	movwf	_down^(0+128)
 20449                           
 20450                           ;buttons.c: 27:     enter = &buttons[3];
 20451  1481  30D8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 20452  1482  0140               	movlb	0	; select bank0
 20453  1483  00A5               	movwf	??_BUTTONS_init
 20454  1484  0825               	movf	??_BUTTONS_init,w
 20455  1485  0141               	movlb	1	; select bank1
 20456  1486  00C3               	movwf	_enter^(0+128)
 20457                           
 20458                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 20459  1487  300E               	movlw	14
 20460  1488  0140               	movlb	0	; select bank0
 20461  1489  00A0               	movwf	init@port
 20462  148A  3000               	movlw	0
 20463  148B  00A1               	movwf	init@port+1
 20464  148C  3002               	movlw	2
 20465  148D  00A5               	movwf	??_BUTTONS_init
 20466  148E  0825               	movf	??_BUTTONS_init,w
 20467  148F  00A2               	movwf	init@pin
 20468  1490  0141               	movlb	1	; select bank1
 20469  1491  0846               	movf	_menu^(0+128),w
 20470  1492  3191  2142  3194   	fcall	_init
 20471                           
 20472                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 20473  1495  300C               	movlw	12
 20474  1496  0140               	movlb	0	; select bank0
 20475  1497  00A0               	movwf	init@port
 20476  1498  3000               	movlw	0
 20477  1499  00A1               	movwf	init@port+1
 20478  149A  3002               	movlw	2
 20479  149B  00A5               	movwf	??_BUTTONS_init
 20480  149C  0825               	movf	??_BUTTONS_init,w
 20481  149D  00A2               	movwf	init@pin
 20482  149E  0141               	movlb	1	; select bank1
 20483  149F  0843               	movf	_enter^(0+128),w
 20484  14A0  3191  2142  3194   	fcall	_init
 20485                           
 20486                           ;buttons.c: 31:     init(down, &PORTC, 0);
 20487  14A3  300E               	movlw	14
 20488  14A4  0140               	movlb	0	; select bank0
 20489  14A5  00A0               	movwf	init@port
 20490  14A6  3000               	movlw	0
 20491  14A7  00A1               	movwf	init@port+1
 20492  14A8  01A2               	clrf	init@pin
 20493  14A9  0141               	movlb	1	; select bank1
 20494  14AA  0844               	movf	_down^(0+128),w
 20495  14AB  3191  2142  3194   	fcall	_init
 20496                           
 20497                           ;buttons.c: 32:     init(up, &PORTC, 1);
 20498  14AE  300E               	movlw	14
 20499  14AF  0140               	movlb	0	; select bank0
 20500  14B0  00A0               	movwf	init@port
 20501  14B1  3000               	movlw	0
 20502  14B2  00A1               	movwf	init@port+1
 20503  14B3  01A2               	clrf	init@pin
 20504  14B4  0AA2               	incf	init@pin,f
 20505  14B5  0141               	movlb	1	; select bank1
 20506  14B6  0845               	movf	_up^(0+128),w
 20507  14B7  3191  2142  3194   	fcall	_init
 20508                           
 20509                           ;buttons.c: 34:     GPIO_init();
 20510  14BA  319F  2779         	fcall	_GPIO_init
 20511  14BC  0008               	return
 20512  14BD                     __end_of_BUTTONS_init:	
 20513                           
 20514                           	psect	text66
 20515  1142                     __ptext66:	
 20516 ;; *************** function _init *****************
 20517 ;; Defined at:
 20518 ;;		line 16 in file "buttons.c"
 20519 ;; Parameters:    Size  Location     Type
 20520 ;;  btn             1    wreg     PTR struct .
 20521 ;;		 -> buttons(32), NULL(0), 
 20522 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 20523 ;;		 -> PORTA(1), PORTC(1), 
 20524 ;;  pin             1    2[BANK0 ] unsigned char 
 20525 ;; Auto vars:     Size  Location     Type
 20526 ;;  btn             1    4[BANK0 ] PTR struct .
 20527 ;;		 -> buttons(32), NULL(0), 
 20528 ;; Return value:  Size  Location     Type
 20529 ;;                  1    wreg      void 
 20530 ;; Registers used:
 20531 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20532 ;; Tracked objects:
 20533 ;;		On entry : 0/0
 20534 ;;		On exit  : 0/0
 20535 ;;		Unchanged: 0/0
 20536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20537 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20539 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20540 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20541 ;;Total ram usage:        5 bytes
 20542 ;; Hardware stack levels used:    1
 20543 ;; Hardware stack levels required when called:    4
 20544 ;; This function calls:
 20545 ;;		Nothing
 20546 ;; This function is called by:
 20547 ;;		_BUTTONS_init
 20548 ;; This function uses a non-reentrant model
 20549 ;;
 20550                           
 20551                           
 20552                           ;psect for function _init
 20553  1142                     _init:	
 20554                           
 20555                           ;incstack = 0
 20556                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 20557                           ;init@btn stored from wreg
 20558  1142  0140               	movlb	0	; select bank0
 20559  1143  00A4               	movwf	init@btn
 20560                           
 20561                           ;buttons.c: 17:     btn->port = port;
 20562  1144  0824               	movf	init@btn,w
 20563  1145  0086               	movwf	6
 20564  1146  3001               	movlw	1	; select bank2/3
 20565  1147  0087               	movwf	7
 20566  1148  0820               	movf	init@port,w
 20567  1149  3FC0               	movwi [0]fsr1
 20568  114A  0821               	movf	init@port+1,w
 20569  114B  3FC1               	movwi [1]fsr1
 20570                           
 20571                           ;buttons.c: 18:     btn->pin = pin;
 20572  114C  0822               	movf	init@pin,w
 20573  114D  00A3               	movwf	??_init
 20574  114E  0824               	movf	init@btn,w
 20575  114F  3E02               	addlw	2
 20576  1150  0086               	movwf	6
 20577  1151  3001               	movlw	1	; select bank2/3
 20578  1152  0087               	movwf	7
 20579  1153  0823               	movf	??_init,w
 20580  1154  0081               	movwf	1
 20581                           
 20582                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 20583  1155  0824               	movf	init@btn,w
 20584  1156  3E03               	addlw	3
 20585  1157  0086               	movwf	6
 20586  1158  3001               	movlw	1	; select bank2/3
 20587  1159  0087               	movwf	7
 20588  115A  0181               	clrf	1
 20589                           
 20590                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 20591  115B  0824               	movf	init@btn,w
 20592  115C  3E07               	addlw	7
 20593  115D  0086               	movwf	6
 20594  115E  3001               	movlw	1	; select bank2/3
 20595  115F  0087               	movwf	7
 20596  1160  0181               	clrf	1
 20597  1161  0008               	return
 20598  1162                     __end_of_init:	
 20599                           
 20600                           	psect	text67
 20601  1F79                     __ptext67:	
 20602 ;; *************** function _GPIO_init *****************
 20603 ;; Defined at:
 20604 ;;		line 38 in file "buttons.c"
 20605 ;; Parameters:    Size  Location     Type
 20606 ;;		None
 20607 ;; Auto vars:     Size  Location     Type
 20608 ;;		None
 20609 ;; Return value:  Size  Location     Type
 20610 ;;                  1    wreg      void 
 20611 ;; Registers used:
 20612 ;;		None
 20613 ;; Tracked objects:
 20614 ;;		On entry : 0/0
 20615 ;;		On exit  : 0/0
 20616 ;;		Unchanged: 0/0
 20617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20622 ;;Total ram usage:        0 bytes
 20623 ;; Hardware stack levels used:    1
 20624 ;; Hardware stack levels required when called:    4
 20625 ;; This function calls:
 20626 ;;		Nothing
 20627 ;; This function is called by:
 20628 ;;		_BUTTONS_init
 20629 ;; This function uses a non-reentrant model
 20630 ;;
 20631                           
 20632                           
 20633                           ;psect for function _GPIO_init
 20634  1F79                     _GPIO_init:	
 20635                           
 20636                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 20637                           
 20638                           ;incstack = 0
 20639                           ; Regs used in _GPIO_init: []
 20640  1F79  0140               	movlb	0	; select bank0
 20641  1F7A  1512               	bsf	18,2	;volatile
 20642                           
 20643                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 20644  1F7B  017E               	movlb	62	; select bank62
 20645  1F7C  1138               	bcf	56,2	;volatile
 20646                           
 20647                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 20648  1F7D  1539               	bsf	57,2	;volatile
 20649                           
 20650                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 20651  1F7E  0140               	movlb	0	; select bank0
 20652  1F7F  1414               	bsf	20,0	;volatile
 20653                           
 20654                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 20655  1F80  1494               	bsf	20,1	;volatile
 20656                           
 20657                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 20658  1F81  1514               	bsf	20,2	;volatile
 20659                           
 20660                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 20661  1F82  017E               	movlb	62	; select bank62
 20662  1F83  104E               	bcf	78,0	;volatile
 20663                           
 20664                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 20665  1F84  10CE               	bcf	78,1	;volatile
 20666                           
 20667                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 20668  1F85  114E               	bcf	78,2	;volatile
 20669                           
 20670                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 20671  1F86  144F               	bsf	79,0	;volatile
 20672                           
 20673                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 20674  1F87  14CF               	bsf	79,1	;volatile
 20675                           
 20676                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 20677  1F88  154F               	bsf	79,2	;volatile
 20678  1F89  0008               	return
 20679  1F8A                     __end_of_GPIO_init:	
 20680                           
 20681                           	psect	text68
 20682  0940                     __ptext68:	
 20683 ;; *************** function _BEAT_task *****************
 20684 ;; Defined at:
 20685 ;;		line 65 in file "beat.c"
 20686 ;; Parameters:    Size  Location     Type
 20687 ;;		None
 20688 ;; Auto vars:     Size  Location     Type
 20689 ;;  offset          2   10[BANK0 ] unsigned short 
 20690 ;; Return value:  Size  Location     Type
 20691 ;;                  1    wreg      void 
 20692 ;; Registers used:
 20693 ;;		wreg, status,2, status,0, pclath, cstack
 20694 ;; Tracked objects:
 20695 ;;		On entry : 0/0
 20696 ;;		On exit  : 0/0
 20697 ;;		Unchanged: 0/0
 20698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20700 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20701 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20702 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20703 ;;Total ram usage:        4 bytes
 20704 ;; Hardware stack levels used:    1
 20705 ;; Hardware stack levels required when called:    5
 20706 ;; This function calls:
 20707 ;;		_ADCC_SetUpperThreshold
 20708 ;;		_CLOCK_getTime
 20709 ;;		___lwdiv
 20710 ;; This function is called by:
 20711 ;;		_main
 20712 ;; This function uses a non-reentrant model
 20713 ;;
 20714                           
 20715                           
 20716                           ;psect for function _BEAT_task
 20717  0940                     _BEAT_task:	
 20718                           
 20719                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 20720                           
 20721                           ;incstack = 0
 20722                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 20723  0940  319E  269A  3189   	fcall	_CLOCK_getTime
 20724  0943  0141               	movlb	1	; select bank1
 20725  0944  082B               	movf	_lastRun^(0+128),w
 20726  0945  0140               	movlb	0	; select bank0
 20727  0946  0220               	subwf	?_CLOCK_getTime,w
 20728  0947  00A8               	movwf	??_BEAT_task
 20729  0948  0141               	movlb	1	; select bank1
 20730  0949  082C               	movf	(_lastRun+1)^(0+128),w
 20731  094A  0140               	movlb	0	; select bank0
 20732  094B  3B21               	subwfb	?_CLOCK_getTime+1,w
 20733  094C  00A9               	movwf	??_BEAT_task+1
 20734  094D  0142               	movlb	2	; select bank2
 20735  094E  0853               	movf	(_delay+1)^(0+256),w
 20736  094F  0140               	movlb	0	; select bank0
 20737  0950  0229               	subwf	??_BEAT_task+1,w
 20738  0951  1D03               	skipz
 20739  0952  2957               	goto	u6145
 20740  0953  0142               	movlb	2	; select bank2
 20741  0954  0852               	movf	_delay^(0+256),w
 20742  0955  0140               	movlb	0	; select bank0
 20743  0956  0228               	subwf	??_BEAT_task,w
 20744  0957                     u6145:	
 20745  0957  1C03               	btfss	3,0
 20746  0958  0008               	return
 20747                           
 20748                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 20749  0959  319E  269A  3189   	fcall	_CLOCK_getTime
 20750  095C  0140               	movlb	0	; select bank0
 20751  095D  0821               	movf	?_CLOCK_getTime+1,w
 20752  095E  0141               	movlb	1	; select bank1
 20753  095F  00AC               	movwf	(_lastRun+1)^(0+128)
 20754  0960  0140               	movlb	0	; select bank0
 20755  0961  0820               	movf	?_CLOCK_getTime,w
 20756  0962  0141               	movlb	1	; select bank1
 20757  0963  00AB               	movwf	_lastRun^(0+128)
 20758                           
 20759                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 20760  0964  0370               	decf	_thresholdExceeded,w
 20761  0965  1D03               	btfss	3,2
 20762  0966  296D               	goto	l6700
 20763                           
 20764                           ;beat.c: 77:         thresholdCount++;
 20765  0967  3001               	movlw	1
 20766  0968  0142               	movlb	2	; select bank2
 20767  0969  07B8               	addwf	_thresholdCount^(0+256),f
 20768  096A  3000               	movlw	0
 20769  096B  3DB9               	addwfc	(_thresholdCount+1)^(0+256),f
 20770                           
 20771                           ;beat.c: 78:     } else {
 20772  096C  2974               	goto	l6704
 20773  096D                     l6700:	
 20774                           
 20775                           ;beat.c: 80:         thresholdCount = 0;
 20776  096D  0142               	movlb	2	; select bank2
 20777  096E  01B8               	clrf	_thresholdCount^(0+256)
 20778  096F  01B9               	clrf	(_thresholdCount+1)^(0+256)
 20779                           
 20780                           ;beat.c: 81:         delay = 20;
 20781  0970  3014               	movlw	20
 20782  0971  00D2               	movwf	_delay^(0+256)
 20783  0972  3000               	movlw	0
 20784  0973  00D3               	movwf	(_delay^(0+256)+1)
 20785  0974                     l6704:	
 20786                           
 20787                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 20788  0974  0370               	decf	_thresholdExceeded,w
 20789  0975  1D03               	btfss	3,2
 20790  0976  29BB               	goto	l6722
 20791  0977  0141               	movlb	1	; select bank1
 20792  0978  0839               	movf	_lastDetected^(0+128),w
 20793  0979  1D03               	btfss	3,2
 20794  097A  29BB               	goto	l6722
 20795                           
 20796                           ;beat.c: 89:         detected = 1;
 20797  097B  01BA               	clrf	_detected^(0+128)
 20798  097C  0ABA               	incf	_detected^(0+128),f
 20799                           
 20800                           ;beat.c: 92:         delay = 100;
 20801  097D  3064               	movlw	100
 20802  097E  0142               	movlb	2	; select bank2
 20803  097F  00D2               	movwf	_delay^(0+256)
 20804  0980  3000               	movlw	0
 20805  0981  00D3               	movwf	(_delay^(0+256)+1)
 20806                           
 20807                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 20808  0982  319E  269A  3189   	fcall	_CLOCK_getTime
 20809  0985  0141               	movlb	1	; select bank1
 20810  0986  082D               	movf	_lastBeat^(0+128),w
 20811  0987  0140               	movlb	0	; select bank0
 20812  0988  0220               	subwf	?_CLOCK_getTime,w
 20813  0989  00AA               	movwf	BEAT_task@offset
 20814  098A  0141               	movlb	1	; select bank1
 20815  098B  082E               	movf	(_lastBeat+1)^(0+128),w
 20816  098C  0140               	movlb	0	; select bank0
 20817  098D  3B21               	subwfb	?_CLOCK_getTime+1,w
 20818  098E  00AB               	movwf	BEAT_task@offset+1
 20819                           
 20820                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 20821  098F  319E  269A  3189   	fcall	_CLOCK_getTime
 20822  0992  0140               	movlb	0	; select bank0
 20823  0993  0821               	movf	?_CLOCK_getTime+1,w
 20824  0994  0141               	movlb	1	; select bank1
 20825  0995  00AE               	movwf	(_lastBeat+1)^(0+128)
 20826  0996  0140               	movlb	0	; select bank0
 20827  0997  0820               	movf	?_CLOCK_getTime,w
 20828  0998  0141               	movlb	1	; select bank1
 20829  0999  00AD               	movwf	_lastBeat^(0+128)
 20830                           
 20831                           ;beat.c: 99:         if (offset < 150)
 20832  099A  3000               	movlw	0
 20833  099B  0140               	movlb	0	; select bank0
 20834  099C  022B               	subwf	BEAT_task@offset+1,w
 20835  099D  3096               	movlw	150
 20836  099E  1903               	skipnz
 20837  099F  022A               	subwf	BEAT_task@offset,w
 20838  09A0  1803               	skipnc
 20839  09A1  29A8               	goto	l6720
 20840                           
 20841                           ;beat.c: 100:             bpm = 400;
 20842  09A2  3090               	movlw	144
 20843  09A3  0142               	movlb	2	; select bank2
 20844  09A4  00BA               	movwf	_bpm^(0+256)
 20845  09A5  3001               	movlw	1
 20846  09A6  00BB               	movwf	(_bpm^(0+256)+1)
 20847  09A7  29BB               	goto	l6722
 20848  09A8                     l6720:	
 20849                           
 20850                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 20851  09A8  082B               	movf	BEAT_task@offset+1,w
 20852  09A9  00A1               	movwf	___lwdiv@divisor+1
 20853  09AA  082A               	movf	BEAT_task@offset,w
 20854  09AB  00A0               	movwf	___lwdiv@divisor
 20855  09AC  3060               	movlw	96
 20856  09AD  00A2               	movwf	___lwdiv@dividend
 20857  09AE  30EA               	movlw	234
 20858  09AF  00A3               	movwf	___lwdiv@dividend+1
 20859  09B0  3193  23CA  3189   	fcall	___lwdiv
 20860  09B3  0140               	movlb	0	; select bank0
 20861  09B4  0821               	movf	?___lwdiv+1,w
 20862  09B5  0142               	movlb	2	; select bank2
 20863  09B6  00BB               	movwf	(_bpm+1)^(0+256)
 20864  09B7  0140               	movlb	0	; select bank0
 20865  09B8  0820               	movf	?___lwdiv,w
 20866  09B9  0142               	movlb	2	; select bank2
 20867  09BA  00BA               	movwf	_bpm^(0+256)
 20868  09BB                     l6722:	
 20869                           
 20870                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 20871  09BB  0870               	movf	_thresholdExceeded,w
 20872  09BC  0140               	movlb	0	; select bank0
 20873  09BD  00A8               	movwf	??_BEAT_task
 20874  09BE  0828               	movf	??_BEAT_task,w
 20875  09BF  0141               	movlb	1	; select bank1
 20876  09C0  00B9               	movwf	_lastDetected^(0+128)
 20877                           
 20878                           ;beat.c: 109:     thresholdExceeded = 0;
 20879  09C1  01F0               	clrf	_thresholdExceeded
 20880                           
 20881                           ;beat.c: 111:     if (thresholdCount > 3) {
 20882  09C2  0142               	movlb	2	; select bank2
 20883  09C3  0839               	movf	(_thresholdCount+1)^(0+256),w
 20884  09C4  3A80               	xorlw	128
 20885  09C5  0140               	movlb	0	; select bank0
 20886  09C6  00A8               	movwf	??_BEAT_task
 20887  09C7  3080               	movlw	128
 20888  09C8  0228               	subwf	??_BEAT_task,w
 20889  09C9  1D03               	skipz
 20890  09CA  29CE               	goto	u6195
 20891  09CB  3004               	movlw	4
 20892  09CC  0142               	movlb	2	; select bank2
 20893  09CD  0238               	subwf	_thresholdCount^(0+256),w
 20894  09CE                     u6195:	
 20895  09CE  1C03               	skipc
 20896  09CF  29ED               	goto	l6736
 20897                           
 20898                           ;beat.c: 112:         threshold += 1;
 20899  09D0  3001               	movlw	1
 20900  09D1  0141               	movlb	1	; select bank1
 20901  09D2  07E6               	addwf	_threshold^(0+128),f
 20902  09D3  3000               	movlw	0
 20903  09D4  3DE7               	addwfc	(_threshold+1)^(0+128),f
 20904                           
 20905                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 20906  09D5  0867               	movf	(_threshold+1)^(0+128),w
 20907  09D6  0140               	movlb	0	; select bank0
 20908  09D7  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 20909  09D8  0141               	movlb	1	; select bank1
 20910  09D9  0866               	movf	_threshold^(0+128),w
 20911  09DA  0140               	movlb	0	; select bank0
 20912  09DB  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 20913  09DC  319E  2688  3189   	fcall	_ADCC_SetUpperThreshold
 20914                           
 20915                           ;beat.c: 114:         thresholdCount = 0;
 20916  09DF  0142               	movlb	2	; select bank2
 20917  09E0  01B8               	clrf	_thresholdCount^(0+256)
 20918  09E1  01B9               	clrf	(_thresholdCount+1)^(0+256)
 20919                           
 20920                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 20921  09E2  319E  269A         	fcall	_CLOCK_getTime
 20922  09E4  0140               	movlb	0	; select bank0
 20923  09E5  0821               	movf	?_CLOCK_getTime+1,w
 20924  09E6  0141               	movlb	1	; select bank1
 20925  09E7  00AE               	movwf	(_lastBeat+1)^(0+128)
 20926  09E8  0140               	movlb	0	; select bank0
 20927  09E9  0820               	movf	?_CLOCK_getTime,w
 20928  09EA  0141               	movlb	1	; select bank1
 20929  09EB  00AD               	movwf	_lastBeat^(0+128)
 20930                           
 20931                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 20932  09EC  0008               	return
 20933  09ED                     l6736:	
 20934  09ED  319E  269A  3189   	fcall	_CLOCK_getTime
 20935  09F0  0141               	movlb	1	; select bank1
 20936  09F1  082D               	movf	_lastBeat^(0+128),w
 20937  09F2  0140               	movlb	0	; select bank0
 20938  09F3  0220               	subwf	?_CLOCK_getTime,w
 20939  09F4  00A8               	movwf	??_BEAT_task
 20940  09F5  0141               	movlb	1	; select bank1
 20941  09F6  082E               	movf	(_lastBeat+1)^(0+128),w
 20942  09F7  0140               	movlb	0	; select bank0
 20943  09F8  3B21               	subwfb	?_CLOCK_getTime+1,w
 20944  09F9  00A9               	movwf	??_BEAT_task+1
 20945  09FA  3003               	movlw	3
 20946  09FB  0229               	subwf	??_BEAT_task+1,w
 20947  09FC  30E9               	movlw	233
 20948  09FD  1903               	skipnz
 20949  09FE  0228               	subwf	??_BEAT_task,w
 20950  09FF  1C03               	skipc
 20951  0A00  0008               	return
 20952                           
 20953                           ;beat.c: 119:         threshold -= 1;
 20954  0A01  3001               	movlw	1
 20955  0A02  0141               	movlb	1	; select bank1
 20956  0A03  02E6               	subwf	_threshold^(0+128),f
 20957  0A04  3000               	movlw	0
 20958  0A05  3BE7               	subwfb	(_threshold+1)^(0+128),f
 20959                           
 20960                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 20961  0A06  0867               	movf	(_threshold+1)^(0+128),w
 20962  0A07  0140               	movlb	0	; select bank0
 20963  0A08  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 20964  0A09  0141               	movlb	1	; select bank1
 20965  0A0A  0866               	movf	_threshold^(0+128),w
 20966  0A0B  0140               	movlb	0	; select bank0
 20967  0A0C  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 20968  0A0D  319E  2688         	fcall	_ADCC_SetUpperThreshold
 20969  0A0F  0008               	return
 20970  0A10                     __end_of_BEAT_task:	
 20971                           
 20972                           	psect	text69
 20973  13CA                     __ptext69:	
 20974 ;; *************** function ___lwdiv *****************
 20975 ;; Defined at:
 20976 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 20977 ;; Parameters:    Size  Location     Type
 20978 ;;  divisor         2    0[BANK0 ] unsigned int 
 20979 ;;  dividend        2    2[BANK0 ] unsigned int 
 20980 ;; Auto vars:     Size  Location     Type
 20981 ;;  quotient        2    5[BANK0 ] unsigned int 
 20982 ;;  counter         1    7[BANK0 ] unsigned char 
 20983 ;; Return value:  Size  Location     Type
 20984 ;;                  2    0[BANK0 ] unsigned int 
 20985 ;; Registers used:
 20986 ;;		wreg, status,2, status,0
 20987 ;; Tracked objects:
 20988 ;;		On entry : 0/0
 20989 ;;		On exit  : 0/0
 20990 ;;		Unchanged: 0/0
 20991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20992 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20993 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20994 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20995 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20996 ;;Total ram usage:        8 bytes
 20997 ;; Hardware stack levels used:    1
 20998 ;; Hardware stack levels required when called:    4
 20999 ;; This function calls:
 21000 ;;		Nothing
 21001 ;; This function is called by:
 21002 ;;		_TM1650_fastPrintNum
 21003 ;;		_BEAT_task
 21004 ;; This function uses a non-reentrant model
 21005 ;;
 21006                           
 21007                           
 21008                           ;psect for function ___lwdiv
 21009  13CA                     ___lwdiv:	
 21010                           
 21011                           ;incstack = 0
 21012                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 21013  13CA  0140               	movlb	0	; select bank0
 21014  13CB  01A5               	clrf	___lwdiv@quotient
 21015  13CC  01A6               	clrf	___lwdiv@quotient+1
 21016  13CD  0820               	movf	___lwdiv@divisor,w
 21017  13CE  0421               	iorwf	___lwdiv@divisor+1,w
 21018  13CF  1903               	btfsc	3,2
 21019  13D0  2BFA               	goto	l4170
 21020  13D1  01A7               	clrf	___lwdiv@counter
 21021  13D2  0AA7               	incf	___lwdiv@counter,f
 21022  13D3                     l4158:	
 21023  13D3  1BA1               	btfsc	___lwdiv@divisor+1,7
 21024  13D4  2BDF               	goto	l4160
 21025  13D5  3001               	movlw	1
 21026  13D6                     u2775:	
 21027  13D6  35A0               	lslf	___lwdiv@divisor,f
 21028  13D7  0DA1               	rlf	___lwdiv@divisor+1,f
 21029  13D8  0B89               	decfsz	9,f
 21030  13D9  2BD6               	goto	u2775
 21031  13DA  3001               	movlw	1
 21032  13DB  00A4               	movwf	??___lwdiv
 21033  13DC  0824               	movf	??___lwdiv,w
 21034  13DD  07A7               	addwf	___lwdiv@counter,f
 21035  13DE  2BD3               	goto	l4158
 21036  13DF                     l4160:	
 21037  13DF  3001               	movlw	1
 21038  13E0                     u2795:	
 21039  13E0  35A5               	lslf	___lwdiv@quotient,f
 21040  13E1  0DA6               	rlf	___lwdiv@quotient+1,f
 21041  13E2  0B89               	decfsz	9,f
 21042  13E3  2BE0               	goto	u2795
 21043  13E4  0821               	movf	___lwdiv@divisor+1,w
 21044  13E5  0223               	subwf	___lwdiv@dividend+1,w
 21045  13E6  1D03               	skipz
 21046  13E7  2BEA               	goto	u2805
 21047  13E8  0820               	movf	___lwdiv@divisor,w
 21048  13E9  0222               	subwf	___lwdiv@dividend,w
 21049  13EA                     u2805:	
 21050  13EA  1C03               	skipc
 21051  13EB  2BF1               	goto	l4166
 21052  13EC  0820               	movf	___lwdiv@divisor,w
 21053  13ED  02A2               	subwf	___lwdiv@dividend,f
 21054  13EE  0821               	movf	___lwdiv@divisor+1,w
 21055  13EF  3BA3               	subwfb	___lwdiv@dividend+1,f
 21056  13F0  1425               	bsf	___lwdiv@quotient,0
 21057  13F1                     l4166:	
 21058  13F1  3001               	movlw	1
 21059  13F2                     u2815:	
 21060  13F2  36A1               	lsrf	___lwdiv@divisor+1,f
 21061  13F3  0CA0               	rrf	___lwdiv@divisor,f
 21062  13F4  0B89               	decfsz	9,f
 21063  13F5  2BF2               	goto	u2815
 21064  13F6  3001               	movlw	1
 21065  13F7  02A7               	subwf	___lwdiv@counter,f
 21066  13F8  1D03               	btfss	3,2
 21067  13F9  2BDF               	goto	l4160
 21068  13FA                     l4170:	
 21069  13FA  0826               	movf	___lwdiv@quotient+1,w
 21070  13FB  00A1               	movwf	?___lwdiv+1
 21071  13FC  0825               	movf	___lwdiv@quotient,w
 21072  13FD  00A0               	movwf	?___lwdiv
 21073  13FE  0008               	return
 21074  13FF                     __end_of___lwdiv:	
 21075                           
 21076                           	psect	text70
 21077  1E9A                     __ptext70:	
 21078 ;; *************** function _CLOCK_getTime *****************
 21079 ;; Defined at:
 21080 ;;		line 16 in file "clock.c"
 21081 ;; Parameters:    Size  Location     Type
 21082 ;;		None
 21083 ;; Auto vars:     Size  Location     Type
 21084 ;;		None
 21085 ;; Return value:  Size  Location     Type
 21086 ;;                  2    0[BANK0 ] unsigned short 
 21087 ;; Registers used:
 21088 ;;		wreg
 21089 ;; Tracked objects:
 21090 ;;		On entry : 0/0
 21091 ;;		On exit  : 0/0
 21092 ;;		Unchanged: 0/0
 21093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21094 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21097 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21098 ;;Total ram usage:        2 bytes
 21099 ;; Hardware stack levels used:    1
 21100 ;; Hardware stack levels required when called:    4
 21101 ;; This function calls:
 21102 ;;		Nothing
 21103 ;; This function is called by:
 21104 ;;		_main
 21105 ;;		_BUTTONS_task
 21106 ;;		_CONTROLLER_task
 21107 ;;		_CONTROL_DMX
 21108 ;;		_BEAT_task
 21109 ;;		_LED_task_BEAT
 21110 ;; This function uses a non-reentrant model
 21111 ;;
 21112                           
 21113                           
 21114                           ;psect for function _CLOCK_getTime
 21115  1E9A                     _CLOCK_getTime:	
 21116                           
 21117                           ;clock.c: 17:     return currentTime;
 21118                           
 21119                           ;incstack = 0
 21120                           ; Regs used in _CLOCK_getTime: [wreg]
 21121  1E9A  0141               	movlb	1	; select bank1
 21122  1E9B  0834               	movf	(_currentTime+1)^(0+128),w
 21123  1E9C  0140               	movlb	0	; select bank0
 21124  1E9D  00A1               	movwf	?_CLOCK_getTime+1
 21125  1E9E  0141               	movlb	1	; select bank1
 21126  1E9F  0833               	movf	_currentTime^(0+128),w
 21127  1EA0  0140               	movlb	0	; select bank0
 21128  1EA1  00A0               	movwf	?_CLOCK_getTime
 21129  1EA2  0008               	return
 21130  1EA3                     __end_of_CLOCK_getTime:	
 21131                           
 21132                           	psect	text71
 21133  1019                     __ptext71:	
 21134 ;; *************** function _BEAT_init *****************
 21135 ;; Defined at:
 21136 ;;		line 39 in file "beat.c"
 21137 ;; Parameters:    Size  Location     Type
 21138 ;;		None
 21139 ;; Auto vars:     Size  Location     Type
 21140 ;;		None
 21141 ;; Return value:  Size  Location     Type
 21142 ;;                  1    wreg      void 
 21143 ;; Registers used:
 21144 ;;		wreg, status,2, status,0, pclath, cstack
 21145 ;; Tracked objects:
 21146 ;;		On entry : 0/0
 21147 ;;		On exit  : 0/0
 21148 ;;		Unchanged: 0/0
 21149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21154 ;;Total ram usage:        0 bytes
 21155 ;; Hardware stack levels used:    1
 21156 ;; Hardware stack levels required when called:    5
 21157 ;; This function calls:
 21158 ;;		_ADCC_SetADTIInterruptHandler
 21159 ;;		_ADCC_SetUpperThreshold
 21160 ;;		_ADCC_StartConversion
 21161 ;; This function is called by:
 21162 ;;		_main
 21163 ;; This function uses a non-reentrant model
 21164 ;;
 21165                           
 21166                           
 21167                           ;psect for function _BEAT_init
 21168  1019                     _BEAT_init:	
 21169                           
 21170                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 21171                           
 21172                           ;incstack = 0
 21173                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 21174  1019  0141               	movlb	1	; select bank1
 21175  101A  0867               	movf	(_threshold+1)^(0+128),w
 21176  101B  0140               	movlb	0	; select bank0
 21177  101C  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 21178  101D  0141               	movlb	1	; select bank1
 21179  101E  0866               	movf	_threshold^(0+128),w
 21180  101F  0140               	movlb	0	; select bank0
 21181  1020  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 21182  1021  319E  2688  3190   	fcall	_ADCC_SetUpperThreshold
 21183                           
 21184                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 21185  1024  3059               	movlw	low _adcThresholdHandler
 21186  1025  0140               	movlb	0	; select bank0
 21187  1026  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 21188  1027  301E               	movlw	high _adcThresholdHandler
 21189  1028  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 21190  1029  319E  267F  3190   	fcall	_ADCC_SetADTIInterruptHandler
 21191                           
 21192                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 21193  102C  300F               	movlw	15
 21194  102D  319E  2691         	fcall	_ADCC_StartConversion
 21195  102F  0008               	return
 21196  1030                     __end_of_BEAT_init:	
 21197                           
 21198                           	psect	text72
 21199  1E91                     __ptext72:	
 21200 ;; *************** function _ADCC_StartConversion *****************
 21201 ;; Defined at:
 21202 ;;		line 121 in file "mcc_generated_files/adcc.c"
 21203 ;; Parameters:    Size  Location     Type
 21204 ;;  channel         1    wreg     enum E10867
 21205 ;; Auto vars:     Size  Location     Type
 21206 ;;  channel         1    0[BANK0 ] enum E10867
 21207 ;; Return value:  Size  Location     Type
 21208 ;;                  1    wreg      void 
 21209 ;; Registers used:
 21210 ;;		wreg
 21211 ;; Tracked objects:
 21212 ;;		On entry : 0/0
 21213 ;;		On exit  : 0/0
 21214 ;;		Unchanged: 0/0
 21215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21219 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21220 ;;Total ram usage:        1 bytes
 21221 ;; Hardware stack levels used:    1
 21222 ;; Hardware stack levels required when called:    4
 21223 ;; This function calls:
 21224 ;;		Nothing
 21225 ;; This function is called by:
 21226 ;;		_BEAT_init
 21227 ;; This function uses a non-reentrant model
 21228 ;;
 21229                           
 21230                           
 21231                           ;psect for function _ADCC_StartConversion
 21232  1E91                     _ADCC_StartConversion:	
 21233                           
 21234                           ;incstack = 0
 21235                           ; Regs used in _ADCC_StartConversion: [wreg]
 21236                           ;ADCC_StartConversion@channel stored from wreg
 21237  1E91  0140               	movlb	0	; select bank0
 21238  1E92  00A0               	movwf	ADCC_StartConversion@channel
 21239                           
 21240                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 21241  1E93  0820               	movf	ADCC_StartConversion@channel,w
 21242  1E94  0141               	movlb	1	; select bank1
 21243  1E95  009F               	movwf	31	;volatile
 21244                           
 21245                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 21246  1E96  0142               	movlb	2	; select bank2
 21247  1E97  1791               	bsf	17,7	;volatile
 21248                           
 21249                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 21250  1E98  1411               	bsf	17,0	;volatile
 21251  1E99  0008               	return
 21252  1E9A                     __end_of_ADCC_StartConversion:	
 21253                           
 21254                           	psect	text73
 21255  1E88                     __ptext73:	
 21256 ;; *************** function _ADCC_SetUpperThreshold *****************
 21257 ;; Defined at:
 21258 ;;		line 251 in file "mcc_generated_files/adcc.c"
 21259 ;; Parameters:    Size  Location     Type
 21260 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 21261 ;; Auto vars:     Size  Location     Type
 21262 ;;		None
 21263 ;; Return value:  Size  Location     Type
 21264 ;;                  1    wreg      void 
 21265 ;; Registers used:
 21266 ;;		wreg, status,2
 21267 ;; Tracked objects:
 21268 ;;		On entry : 0/0
 21269 ;;		On exit  : 0/0
 21270 ;;		Unchanged: 0/0
 21271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21275 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21276 ;;Total ram usage:        2 bytes
 21277 ;; Hardware stack levels used:    1
 21278 ;; Hardware stack levels required when called:    4
 21279 ;; This function calls:
 21280 ;;		Nothing
 21281 ;; This function is called by:
 21282 ;;		_BEAT_init
 21283 ;;		_BEAT_task
 21284 ;; This function uses a non-reentrant model
 21285 ;;
 21286                           
 21287                           
 21288                           ;psect for function _ADCC_SetUpperThreshold
 21289  1E88                     _ADCC_SetUpperThreshold:	
 21290                           
 21291                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 21292                           
 21293                           ;incstack = 0
 21294                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 21295  1E88  0140               	movlb	0	; select bank0
 21296  1E89  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 21297  1E8A  0141               	movlb	1	; select bank1
 21298  1E8B  008F               	movwf	15	;volatile
 21299                           
 21300                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 21301  1E8C  0140               	movlb	0	; select bank0
 21302  1E8D  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 21303  1E8E  0141               	movlb	1	; select bank1
 21304  1E8F  008E               	movwf	14	;volatile
 21305  1E90  0008               	return
 21306  1E91                     __end_of_ADCC_SetUpperThreshold:	
 21307                           
 21308                           	psect	text74
 21309  1E7F                     __ptext74:	
 21310 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 21311 ;; Defined at:
 21312 ;;		line 317 in file "mcc_generated_files/adcc.c"
 21313 ;; Parameters:    Size  Location     Type
 21314 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 21315 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 21316 ;; Auto vars:     Size  Location     Type
 21317 ;;		None
 21318 ;; Return value:  Size  Location     Type
 21319 ;;                  1    wreg      void 
 21320 ;; Registers used:
 21321 ;;		wreg
 21322 ;; Tracked objects:
 21323 ;;		On entry : 0/0
 21324 ;;		On exit  : 0/0
 21325 ;;		Unchanged: 0/0
 21326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21327 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21330 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21331 ;;Total ram usage:        2 bytes
 21332 ;; Hardware stack levels used:    1
 21333 ;; Hardware stack levels required when called:    4
 21334 ;; This function calls:
 21335 ;;		Nothing
 21336 ;; This function is called by:
 21337 ;;		_ADCC_Initialize
 21338 ;;		_BEAT_init
 21339 ;; This function uses a non-reentrant model
 21340 ;;
 21341                           
 21342                           
 21343                           ;psect for function _ADCC_SetADTIInterruptHandler
 21344  1E7F                     _ADCC_SetADTIInterruptHandler:	
 21345                           
 21346                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 21347                           
 21348                           ;incstack = 0
 21349                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 21350  1E7F  0140               	movlb	0	; select bank0
 21351  1E80  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 21352  1E81  0142               	movlb	2	; select bank2
 21353  1E82  00C5               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 21354  1E83  0140               	movlb	0	; select bank0
 21355  1E84  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 21356  1E85  0142               	movlb	2	; select bank2
 21357  1E86  00C4               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 21358  1E87  0008               	return
 21359  1E88                     __end_of_ADCC_SetADTIInterruptHandler:	
 21360                           
 21361                           	psect	intentry
 21362  0004                     __pintentry:	
 21363 ;; *************** function _INTERRUPT_InterruptManager *****************
 21364 ;; Defined at:
 21365 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21366 ;; Parameters:    Size  Location     Type
 21367 ;;		None
 21368 ;; Auto vars:     Size  Location     Type
 21369 ;;		None
 21370 ;; Return value:  Size  Location     Type
 21371 ;;                  1    wreg      void 
 21372 ;; Registers used:
 21373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21374 ;; Tracked objects:
 21375 ;;		On entry : 0/0
 21376 ;;		On exit  : 0/0
 21377 ;;		Unchanged: 0/0
 21378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21383 ;;Total ram usage:        0 bytes
 21384 ;; Hardware stack levels used:    1
 21385 ;; Hardware stack levels required when called:    3
 21386 ;; This function calls:
 21387 ;;		Absolute function
 21388 ;;		_ADCC_ThresholdISR
 21389 ;;		_DMX_interrupt
 21390 ;;		_EUSART1_Receive_ISR
 21391 ;;		_I2C1_BusCollisionISR
 21392 ;;		_I2C1_ISR
 21393 ;;		_TMR0_ISR
 21394 ;; This function is called by:
 21395 ;;		Interrupt level 1
 21396 ;; This function uses a non-reentrant model
 21397 ;;
 21398                           
 21399  0004                     _INTERRUPT_InterruptManager:	
 21400                           
 21401                           ;incstack = 0
 21402 ;; hardware stack exceeded
 21403  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21404                           
 21405                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21406  0005  3180               	pagesel	$
 21407                           
 21408                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 21409  0006  014E               	movlb	14	; select bank14
 21410  0007  1A96               	btfsc	22,5	;volatile
 21411  0008  1E8C               	btfss	12,5	;volatile
 21412  0009  280E               	goto	i1l429
 21413                           
 21414                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 21415  000A  319F  273E  3180   	fcall	_TMR0_ISR
 21416                           
 21417                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 21418  000D  282E               	goto	i1l441
 21419  000E                     i1l429:	
 21420                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 21421                           
 21422  000E  1F0B               	btfss	11,6	;volatile
 21423  000F  282E               	goto	i1l441
 21424                           
 21425                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 21426  0010  1899               	btfsc	25,1	;volatile
 21427  0011  1C8F               	btfss	15,1	;volatile
 21428  0012  2817               	goto	i1l432
 21429                           
 21430                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 21431  0013  319E  265F  3180   	fcall	_I2C1_BusCollisionISR
 21432                           
 21433                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 21434  0016  282E               	goto	i1l441
 21435  0017                     i1l432:	
 21436                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 21437                           
 21438  0017  1819               	btfsc	25,0	;volatile
 21439  0018  1C0F               	btfss	15,0	;volatile
 21440  0019  281E               	goto	i1l434
 21441                           
 21442                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 21443  001A  318B  23E4  3180   	fcall	_I2C1_ISR
 21444                           
 21445                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 21446  001D  282E               	goto	i1l441
 21447  001E                     i1l434:	
 21448                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 21449                           
 21450  001E  1897               	btfsc	23,1	;volatile
 21451  001F  1C8D               	btfss	13,1	;volatile
 21452  0020  2825               	goto	i1l436
 21453                           
 21454                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 21455  0021  319F  2731  3180   	fcall	_ADCC_ThresholdISR
 21456                           
 21457                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 21458  0024  282E               	goto	i1l441
 21459  0025                     i1l436:	
 21460                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 21461                           
 21462  0025  1A99               	btfsc	25,5	;volatile
 21463  0026  1E8F               	btfss	15,5	;volatile
 21464  0027  282E               	goto	i1l441
 21465                           
 21466                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 21467  0028  0142               	movlb	2	; select bank2
 21468  0029  084F               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 21469  002A  008A               	movwf	10
 21470  002B  084E               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 21471  002C  000A               	callw
 21472  002D  3180               	pagesel	$
 21473  002E                     i1l441:	
 21474                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 21475                           
 21476  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21477  002F  0009               	retfie
 21478  0030                     __end_of_INTERRUPT_InterruptManager:	
 21479                           
 21480                           	psect	text76
 21481  1F3E                     __ptext76:	
 21482 ;; *************** function _TMR0_ISR *****************
 21483 ;; Defined at:
 21484 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 21485 ;; Parameters:    Size  Location     Type
 21486 ;;		None
 21487 ;; Auto vars:     Size  Location     Type
 21488 ;;		None
 21489 ;; Return value:  Size  Location     Type
 21490 ;;                  1    wreg      void 
 21491 ;; Registers used:
 21492 ;;		wreg, status,2, status,0, pclath, cstack
 21493 ;; Tracked objects:
 21494 ;;		On entry : 0/0
 21495 ;;		On exit  : 0/0
 21496 ;;		Unchanged: 0/0
 21497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21502 ;;Total ram usage:        0 bytes
 21503 ;; Hardware stack levels used:    1
 21504 ;; Hardware stack levels required when called:    1
 21505 ;; This function calls:
 21506 ;;		Absolute function
 21507 ;;		_CLOCK_timerCallback
 21508 ;;		_TMR0_DefaultInterruptHandler
 21509 ;; This function is called by:
 21510 ;;		_INTERRUPT_InterruptManager
 21511 ;; This function uses a non-reentrant model
 21512 ;;
 21513                           
 21514                           
 21515                           ;psect for function _TMR0_ISR
 21516  1F3E                     _TMR0_ISR:	
 21517                           
 21518                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 21519                           
 21520                           ;incstack = 0
 21521 ;; hardware stack exceeded
 21522                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 21523  1F3E  014E               	movlb	14	; select bank14
 21524  1F3F  128C               	bcf	12,5	;volatile
 21525                           
 21526                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 21527  1F40  0142               	movlb	2	; select bank2
 21528  1F41  0846               	movf	_TMR0_InterruptHandler^(0+256),w
 21529  1F42  0447               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 21530  1F43  1903               	btfsc	3,2
 21531  1F44  0008               	return
 21532                           
 21533                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 21534  1F45  0847               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 21535  1F46  008A               	movwf	10
 21536  1F47  0846               	movf	_TMR0_InterruptHandler^(0+256),w
 21537  1F48  000A               	callw
 21538  1F49  319F               	pagesel	$
 21539  1F4A  0008               	return
 21540  1F4B                     __end_of_TMR0_ISR:	
 21541                           
 21542                           	psect	text77
 21543  1E71                     __ptext77:	
 21544 ;; *************** function _CLOCK_timerCallback *****************
 21545 ;; Defined at:
 21546 ;;		line 20 in file "clock.c"
 21547 ;; Parameters:    Size  Location     Type
 21548 ;;		None
 21549 ;; Auto vars:     Size  Location     Type
 21550 ;;		None
 21551 ;; Return value:  Size  Location     Type
 21552 ;;                  1    wreg      void 
 21553 ;; Registers used:
 21554 ;;		wreg
 21555 ;; Tracked objects:
 21556 ;;		On entry : 0/0
 21557 ;;		On exit  : 0/0
 21558 ;;		Unchanged: 0/0
 21559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21564 ;;Total ram usage:        0 bytes
 21565 ;; Hardware stack levels used:    1
 21566 ;; This function calls:
 21567 ;;		Nothing
 21568 ;; This function is called by:
 21569 ;;		_CLOCK_init
 21570 ;;		_TMR0_ISR
 21571 ;; This function uses a non-reentrant model
 21572 ;;
 21573                           
 21574                           
 21575                           ;psect for function _CLOCK_timerCallback
 21576  1E71                     _CLOCK_timerCallback:	
 21577                           
 21578                           ;clock.c: 21:     currentTime++;
 21579                           
 21580                           ;incstack = 0
 21581 ;; hardware stack exceeded
 21582                           ; Regs used in _CLOCK_timerCallback: [wreg]
 21583  1E71  3001               	movlw	1
 21584  1E72  0141               	movlb	1	; select bank1
 21585  1E73  07B3               	addwf	_currentTime^(0+128),f
 21586  1E74  3000               	movlw	0
 21587  1E75  3DB4               	addwfc	(_currentTime+1)^(0+128),f
 21588  1E76  0008               	return
 21589  1E77                     __end_of_CLOCK_timerCallback:	
 21590                           
 21591                           	psect	text78
 21592  0003                     __ptext78:	
 21593 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 21594 ;; Defined at:
 21595 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 21596 ;; Parameters:    Size  Location     Type
 21597 ;;		None
 21598 ;; Auto vars:     Size  Location     Type
 21599 ;;		None
 21600 ;; Return value:  Size  Location     Type
 21601 ;;                  1    wreg      void 
 21602 ;; Registers used:
 21603 ;;		None
 21604 ;; Tracked objects:
 21605 ;;		On entry : 0/0
 21606 ;;		On exit  : 0/0
 21607 ;;		Unchanged: 0/0
 21608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21613 ;;Total ram usage:        0 bytes
 21614 ;; Hardware stack levels used:    1
 21615 ;; This function calls:
 21616 ;;		Nothing
 21617 ;; This function is called by:
 21618 ;;		_TMR0_Initialize
 21619 ;;		_TMR0_ISR
 21620 ;; This function uses a non-reentrant model
 21621 ;;
 21622                           
 21623                           
 21624                           ;psect for function _TMR0_DefaultInterruptHandler
 21625  0003                     _TMR0_DefaultInterruptHandler:	
 21626                           
 21627                           ;incstack = 0
 21628 ;; hardware stack exceeded
 21629                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 21630  0003  0008               	return
 21631  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 21632                           
 21633                           	psect	text79
 21634  0BE4                     __ptext79:	
 21635 ;; *************** function _I2C1_ISR *****************
 21636 ;; Defined at:
 21637 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 21638 ;; Parameters:    Size  Location     Type
 21639 ;;		None
 21640 ;; Auto vars:     Size  Location     Type
 21641 ;;		None
 21642 ;; Return value:  Size  Location     Type
 21643 ;;                  1    wreg      void 
 21644 ;; Registers used:
 21645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21646 ;; Tracked objects:
 21647 ;;		On entry : 0/0
 21648 ;;		On exit  : 0/0
 21649 ;;		Unchanged: 0/0
 21650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21653 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21654 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21655 ;;Total ram usage:        4 bytes
 21656 ;; Hardware stack levels used:    1
 21657 ;; Hardware stack levels required when called:    1
 21658 ;; This function calls:
 21659 ;;		_I2C1_FunctionComplete
 21660 ;;		_I2C1_Stop
 21661 ;; This function is called by:
 21662 ;;		_INTERRUPT_InterruptManager
 21663 ;; This function uses a non-reentrant model
 21664 ;;
 21665                           
 21666                           
 21667                           ;psect for function _I2C1_ISR
 21668  0BE4                     _I2C1_ISR:	
 21669                           
 21670                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 21671                           
 21672                           ;incstack = 0
 21673 ;; hardware stack exceeded
 21674                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21675  0BE4  014E               	movlb	14	; select bank14
 21676  0BE5  100F               	bcf	15,0	;volatile
 21677                           
 21678                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 21679  0BE6  0143               	movlb	3	; select bank3
 21680  0BE7  1F90               	btfss	16,7	;volatile
 21681  0BE8  2D05               	goto	i1l5344
 21682                           
 21683                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 21684  0BE9  1390               	bcf	16,7	;volatile
 21685                           
 21686                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 21687  0BEA  0141               	movlb	1	; select bank1
 21688  0BEB  01CB               	clrf	_i2c1_state^(0+128)
 21689                           
 21690                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 21691  0BEC  0871               	movf	_p_i2c1_current,w
 21692  0BED  3E02               	addlw	2
 21693  0BEE  0086               	movwf	6
 21694  0BEF  0187               	clrf	7
 21695  0BF0  0801               	movf	1,w
 21696  0BF1  0086               	movwf	6
 21697  0BF2  0187               	clrf	7
 21698  0BF3  0181               	clrf	1
 21699  0BF4  0A81               	incf	1,f
 21700                           
 21701                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 21702  0BF5  01F1               	clrf	_p_i2c1_current
 21703  0BF6  0008               	return
 21704  0BF7                     i1l549:	
 21705                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 21706                           
 21707                           
 21708                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 21709  0BF7  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 21710  0BF8  0008               	return
 21711                           
 21712                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 21713  0BF9  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21714  0BFA  00F9               	movwf	??_I2C1_ISR
 21715  0BFB  0879               	movf	??_I2C1_ISR,w
 21716  0BFC  00F1               	movwf	_p_i2c1_current
 21717                           
 21718                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 21719  0BFD  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21720  0BFE  0086               	movwf	6
 21721  0BFF  0187               	clrf	7
 21722  0C00  0801               	movf	1,w
 21723  0C01  00F9               	movwf	??_I2C1_ISR
 21724  0C02  0879               	movf	??_I2C1_ISR,w
 21725  0C03  00CA               	movwf	_i2c1_trb_count^(0+128)
 21726                           
 21727                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 21728  0C04  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21729  0C05  0086               	movwf	6
 21730  0C06  0187               	clrf	7
 21731  0C07  3F41               	moviw [1]fsr1
 21732  0C08  00F2               	movwf	_p_i2c1_trb_current
 21733                           
 21734                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 21735  0C09  3003               	movlw	3
 21736  0C0A  00F9               	movwf	??_I2C1_ISR
 21737  0C0B  0879               	movf	??_I2C1_ISR,w
 21738  0C0C  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 21739                           
 21740                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 21741  0C0D  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21742  0C0E  3AD1               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 21743  0C0F  1D03               	skipz
 21744  0C10  2C15               	goto	i1l5232
 21745                           
 21746                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 21747  0C11  30CE               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 21748  0C12  00F9               	movwf	??_I2C1_ISR
 21749  0C13  0879               	movf	??_I2C1_ISR,w
 21750  0C14  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 21751  0C15                     i1l5232:	
 21752                           
 21753                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 21754  0C15  1022               	bcf	(_i2c1_object^(0+128)+2),0
 21755                           
 21756                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 21757  0C16  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21758  0C17  0620               	xorwf	_i2c1_object^(0+128),w
 21759  0C18  1903               	btfsc	3,2
 21760                           
 21761                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 21762  0C19  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 21763                           
 21764                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 21765                           
 21766                           ;mcc_generated_files/i2c1.c: 290:                 }
 21767  0C1A  0143               	movlb	3	; select bank3
 21768  0C1B  1411               	bsf	17,0	;volatile
 21769  0C1C                     i1l5236:	
 21770                           
 21771                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 21772  0C1C  3002               	movlw	2
 21773  0C1D  00F9               	movwf	??_I2C1_ISR
 21774  0C1E  0879               	movf	??_I2C1_ISR,w
 21775  0C1F  0141               	movlb	1	; select bank1
 21776  0C20  00CB               	movwf	_i2c1_state^(0+128)
 21777  0C21  0008               	return
 21778  0C22                     i1l554:	
 21779                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 21780                           
 21781  0C22  2CAE               	goto	i1l575
 21782  0C23                     i1l555:	
 21783                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 21784                           
 21785                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 21786                           
 21787                           
 21788                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 21789  0C23  0143               	movlb	3	; select bank3
 21790  0C24  1F11               	btfss	17,6	;volatile
 21791  0C25  2C2F               	goto	i1l5244
 21792                           
 21793                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 21794  0C26  3001               	movlw	1
 21795  0C27  00F9               	movwf	??_I2C1_ISR
 21796  0C28  0879               	movf	??_I2C1_ISR,w
 21797  0C29  0141               	movlb	1	; select bank1
 21798  0C2A  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 21799                           
 21800                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 21801  0C2B  3004               	movlw	4
 21802  0C2C  3190  2048         	fcall	_I2C1_Stop
 21803                           
 21804                           ;mcc_generated_files/i2c1.c: 319:             }
 21805  0C2E  0008               	return
 21806  0C2F                     i1l5244:	
 21807                           
 21808                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 21809  0C2F  0876               	movf	I2C1_ISR@i2c_address+1,w
 21810  0C30  00FA               	movwf	??_I2C1_ISR+1
 21811  0C31  0875               	movf	I2C1_ISR@i2c_address,w
 21812  0C32  00F9               	movwf	??_I2C1_ISR
 21813  0C33  36FA               	lsrf	??_I2C1_ISR+1,f
 21814  0C34  0CF9               	rrf	??_I2C1_ISR,f
 21815  0C35  0879               	movf	??_I2C1_ISR,w
 21816  0C36  008C               	movwf	12	;volatile
 21817                           
 21818                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 21819  0C37  1C75               	btfss	I2C1_ISR@i2c_address,0
 21820  0C38  2C3F               	goto	i1l5250
 21821                           
 21822                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 21823  0C39  300B               	movlw	11
 21824  0C3A  00F9               	movwf	??_I2C1_ISR
 21825  0C3B  0879               	movf	??_I2C1_ISR,w
 21826  0C3C  0141               	movlb	1	; select bank1
 21827  0C3D  00CB               	movwf	_i2c1_state^(0+128)
 21828                           
 21829                           ;mcc_generated_files/i2c1.c: 331:                 }
 21830  0C3E  0008               	return
 21831  0C3F                     i1l5250:	
 21832                           
 21833                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 21834  0C3F  3003               	movlw	3
 21835  0C40  00F9               	movwf	??_I2C1_ISR
 21836  0C41  0879               	movf	??_I2C1_ISR,w
 21837  0C42  0141               	movlb	1	; select bank1
 21838  0C43  00CB               	movwf	_i2c1_state^(0+128)
 21839  0C44  0008               	return
 21840  0C45                     i1l560:	
 21841                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 21842                           
 21843                           
 21844                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 21845  0C45  0143               	movlb	3	; select bank3
 21846  0C46  1F11               	btfss	17,6	;volatile
 21847  0C47  2C51               	goto	i1l561
 21848                           
 21849                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 21850  0C48  3001               	movlw	1
 21851  0C49  00F9               	movwf	??_I2C1_ISR
 21852  0C4A  0879               	movf	??_I2C1_ISR,w
 21853  0C4B  0141               	movlb	1	; select bank1
 21854  0C4C  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 21855                           
 21856                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 21857  0C4D  3004               	movlw	4
 21858  0C4E  3190  2048         	fcall	_I2C1_Stop
 21859                           
 21860                           ;mcc_generated_files/i2c1.c: 347:             }
 21861  0C50  0008               	return
 21862  0C51                     i1l561:	
 21863                           ;mcc_generated_files/i2c1.c: 348:             else
 21864                           
 21865                           
 21866                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 21867  0C51  1491               	bsf	17,1	;volatile
 21868                           
 21869                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 21870  0C52  0876               	movf	I2C1_ISR@i2c_address+1,w
 21871  0C53  00FA               	movwf	??_I2C1_ISR+1
 21872  0C54  0875               	movf	I2C1_ISR@i2c_address,w
 21873  0C55  00F9               	movwf	??_I2C1_ISR
 21874  0C56  087A               	movf	??_I2C1_ISR+1,w
 21875  0C57  00F9               	movwf	??_I2C1_ISR
 21876  0C58  01FA               	clrf	??_I2C1_ISR+1
 21877  0C59  3006               	movlw	6
 21878  0C5A  0579               	andwf	??_I2C1_ISR,w
 21879  0C5B  00FB               	movwf	??_I2C1_ISR+2
 21880  0C5C  3000               	movlw	0
 21881  0C5D  057A               	andwf	??_I2C1_ISR+1,w
 21882  0C5E  00FC               	movwf	??_I2C1_ISR+3
 21883  0C5F  30F0               	movlw	240
 21884  0C60  047B               	iorwf	??_I2C1_ISR+2,w
 21885  0C61  00F5               	movwf	I2C1_ISR@i2c_address
 21886  0C62  3000               	movlw	0
 21887  0C63  047C               	iorwf	??_I2C1_ISR+3,w
 21888  0C64  00F6               	movwf	I2C1_ISR@i2c_address+1
 21889                           
 21890                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 21891  0C65  1475               	bsf	I2C1_ISR@i2c_address,0
 21892                           
 21893                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 21894  0C66  0141               	movlb	1	; select bank1
 21895  0C67  01C7               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 21896  0C68  0AC7               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 21897  0C69  2C1C               	goto	i1l5236
 21898  0C6A                     i1l5264:	
 21899                           
 21900                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 21901  0C6A  0347               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 21902  0C6B  1903               	btfsc	3,2
 21903  0C6C  2C83               	goto	i1l5284
 21904                           
 21905                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 21906  0C6D  0872               	movf	_p_i2c1_trb_current,w
 21907  0C6E  0086               	movwf	6
 21908  0C6F  3001               	movlw	1	; select bank2/3
 21909  0C70  0087               	movwf	7
 21910  0C71  3F40               	moviw [0]fsr1
 21911  0C72  00F5               	movwf	I2C1_ISR@i2c_address
 21912  0C73  3F41               	moviw [1]fsr1
 21913  0C74  00F6               	movwf	I2C1_ISR@i2c_address+1
 21914                           
 21915                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 21916  0C75  0872               	movf	_p_i2c1_trb_current,w
 21917  0C76  0086               	movwf	6
 21918  0C77  3001               	movlw	1	; select bank2/3
 21919  0C78  0087               	movwf	7
 21920  0C79  3001               	movlw	1	; select bank2/3
 21921  0C7A  3F43               	moviw [3]fsr1
 21922  0C7B  00C9               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 21923                           
 21924                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 21925  0C7C  0872               	movf	_p_i2c1_trb_current,w
 21926  0C7D  0086               	movwf	6
 21927  0C7E  3001               	movlw	1	; select bank2/3
 21928  0C7F  0087               	movwf	7
 21929  0C80  3001               	movlw	1	; select bank2/3
 21930  0C81  3F42               	moviw [2]fsr1
 21931  0C82  00C8               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 21932  0C83                     i1l5284:	
 21933                           
 21934                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 21935  0C83  0875               	movf	I2C1_ISR@i2c_address,w
 21936  0C84  0143               	movlb	3	; select bank3
 21937  0C85  008C               	movwf	12	;volatile
 21938                           
 21939                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 21940  0C86  1C75               	btfss	I2C1_ISR@i2c_address,0
 21941  0C87  2C3F               	goto	i1l5250
 21942                           
 21943                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 21944  0C88  3005               	movlw	5
 21945  0C89  00F9               	movwf	??_I2C1_ISR
 21946  0C8A  0879               	movf	??_I2C1_ISR,w
 21947  0C8B  0141               	movlb	1	; select bank1
 21948  0C8C  00CB               	movwf	_i2c1_state^(0+128)
 21949                           
 21950                           ;mcc_generated_files/i2c1.c: 419:                 }
 21951  0C8D  0008               	return
 21952  0C8E                     i1l571:	
 21953                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 21954                           
 21955                           
 21956                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 21957  0C8E  0143               	movlb	3	; select bank3
 21958  0C8F  1F11               	btfss	17,6	;volatile
 21959  0C90  2C9C               	goto	i1l5298
 21960                           
 21961                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 21962  0C91  3001               	movlw	1
 21963  0C92  00F9               	movwf	??_I2C1_ISR
 21964  0C93  0879               	movf	??_I2C1_ISR,w
 21965  0C94  0141               	movlb	1	; select bank1
 21966  0C95  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 21967                           
 21968                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 21969  0C96  0143               	movlb	3	; select bank3
 21970  0C97  1311               	bcf	17,6	;volatile
 21971                           
 21972                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 21973  0C98  3005               	movlw	5
 21974  0C99  3190  2048         	fcall	_I2C1_Stop
 21975                           
 21976                           ;mcc_generated_files/i2c1.c: 442:             }
 21977  0C9B  0008               	return
 21978  0C9C                     i1l5298:	
 21979                           
 21980                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 21981  0C9C  3001               	movlw	1
 21982  0C9D  0141               	movlb	1	; select bank1
 21983  0C9E  02C8               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 21984  0C9F  0A48               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 21985  0CA0  1D03               	btfss	3,2
 21986  0CA1  2CB1               	goto	i1l5306
 21987                           
 21988                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 21989  0CA2  3004               	movlw	4
 21990  0CA3  00F9               	movwf	??_I2C1_ISR
 21991  0CA4  0879               	movf	??_I2C1_ISR,w
 21992  0CA5  07F2               	addwf	_p_i2c1_trb_current,f
 21993                           
 21994                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 21995  0CA6  3001               	movlw	1
 21996  0CA7  02CA               	subwf	_i2c1_trb_count^(0+128),f
 21997  0CA8  1D03               	btfss	3,2
 21998  0CA9  2CAE               	goto	i1l575
 21999                           
 22000                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 22001  0CAA  3000               	movlw	0
 22002  0CAB  3190  2048         	fcall	_I2C1_Stop
 22003                           
 22004                           ;mcc_generated_files/i2c1.c: 457:                     }
 22005  0CAD  0008               	return
 22006  0CAE                     i1l575:	
 22007                           ;mcc_generated_files/i2c1.c: 458:                     else
 22008                           
 22009                           
 22010                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 22011  0CAE  0143               	movlb	3	; select bank3
 22012  0CAF  1491               	bsf	17,1	;volatile
 22013  0CB0  2C1C               	goto	i1l5236
 22014  0CB1                     i1l5306:	
 22015                           
 22016                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 22017  0CB1  0849               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 22018  0CB2  0086               	movwf	6
 22019  0CB3  0187               	clrf	7
 22020  0CB4  0801               	movf	1,w
 22021  0CB5  0143               	movlb	3	; select bank3
 22022  0CB6  008C               	movwf	12	;volatile
 22023  0CB7  3001               	movlw	1
 22024  0CB8  00F9               	movwf	??_I2C1_ISR
 22025  0CB9  0879               	movf	??_I2C1_ISR,w
 22026  0CBA  0141               	movlb	1	; select bank1
 22027  0CBB  07C9               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 22028  0CBC  0008               	return
 22029  0CBD                     i1l578:	
 22030                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 22031                           
 22032                           
 22033                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 22034  0CBD  0143               	movlb	3	; select bank3
 22035  0CBE  1F11               	btfss	17,6	;volatile
 22036  0CBF  2CCB               	goto	i1l579
 22037                           
 22038                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 22039  0CC0  3001               	movlw	1
 22040  0CC1  00F9               	movwf	??_I2C1_ISR
 22041  0CC2  0879               	movf	??_I2C1_ISR,w
 22042  0CC3  0141               	movlb	1	; select bank1
 22043  0CC4  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22044                           
 22045                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 22046  0CC5  3004               	movlw	4
 22047  0CC6  3190  2048         	fcall	_I2C1_Stop
 22048                           
 22049                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 22050  0CC8  0143               	movlb	3	; select bank3
 22051  0CC9  1311               	bcf	17,6	;volatile
 22052                           
 22053                           ;mcc_generated_files/i2c1.c: 495:             }
 22054  0CCA  0008               	return
 22055  0CCB                     i1l579:	
 22056                           ;mcc_generated_files/i2c1.c: 496:             else
 22057                           
 22058                           
 22059                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 22060  0CCB  1591               	bsf	17,3	;volatile
 22061                           
 22062                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 22063  0CCC  3008               	movlw	8
 22064  0CCD  00F9               	movwf	??_I2C1_ISR
 22065  0CCE  0879               	movf	??_I2C1_ISR,w
 22066  0CCF  0141               	movlb	1	; select bank1
 22067  0CD0  00CB               	movwf	_i2c1_state^(0+128)
 22068  0CD1  0008               	return
 22069  0CD2                     i1l5318:	
 22070                           
 22071                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 22072  0CD2  3008               	movlw	8
 22073  0CD3  00F9               	movwf	??_I2C1_ISR
 22074  0CD4  0879               	movf	??_I2C1_ISR,w
 22075  0CD5  00CB               	movwf	_i2c1_state^(0+128)
 22076                           
 22077                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 22078  0CD6  0143               	movlb	3	; select bank3
 22079  0CD7  1591               	bsf	17,3	;volatile
 22080                           
 22081                           ;mcc_generated_files/i2c1.c: 513:             break;
 22082  0CD8  0008               	return
 22083  0CD9                     i1l5322:	
 22084                           
 22085                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 22086  0CD9  0143               	movlb	3	; select bank3
 22087  0CDA  080C               	movf	12,w	;volatile
 22088  0CDB  00F9               	movwf	??_I2C1_ISR
 22089  0CDC  0141               	movlb	1	; select bank1
 22090  0CDD  0849               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 22091  0CDE  0086               	movwf	6
 22092  0CDF  0187               	clrf	7
 22093  0CE0  0879               	movf	??_I2C1_ISR,w
 22094  0CE1  0081               	movwf	1
 22095  0CE2  3001               	movlw	1
 22096  0CE3  00F9               	movwf	??_I2C1_ISR
 22097  0CE4  0879               	movf	??_I2C1_ISR,w
 22098  0CE5  07C9               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 22099                           
 22100                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 22101  0CE6  3001               	movlw	1
 22102  0CE7  02C8               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 22103  0CE8  1903               	btfsc	3,2
 22104  0CE9  2CF2               	goto	i1l583
 22105                           
 22106                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 22107  0CEA  0143               	movlb	3	; select bank3
 22108  0CEB  1291               	bcf	17,5	;volatile
 22109                           
 22110                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 22111  0CEC  3006               	movlw	6
 22112  0CED  00F9               	movwf	??_I2C1_ISR
 22113  0CEE  0879               	movf	??_I2C1_ISR,w
 22114  0CEF  0141               	movlb	1	; select bank1
 22115  0CF0  00CB               	movwf	_i2c1_state^(0+128)
 22116                           
 22117                           ;mcc_generated_files/i2c1.c: 532:             }
 22118  0CF1  2CF6               	goto	i1l5334
 22119  0CF2                     i1l583:	
 22120                           ;mcc_generated_files/i2c1.c: 533:             else
 22121                           
 22122                           
 22123                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 22124  0CF2  0143               	movlb	3	; select bank3
 22125  0CF3  1691               	bsf	17,5	;volatile
 22126                           
 22127                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 22128  0CF4  319F  2768         	fcall	_I2C1_FunctionComplete
 22129  0CF6                     i1l5334:	
 22130                           
 22131                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 22132  0CF6  0143               	movlb	3	; select bank3
 22133  0CF7  1611               	bsf	17,4	;volatile
 22134                           
 22135                           ;mcc_generated_files/i2c1.c: 545:             break;
 22136  0CF8  0008               	return
 22137  0CF9                     i1l5336:	
 22138                           
 22139                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 22140  0CF9  3000               	movlw	0
 22141  0CFA  3190  2048         	fcall	_I2C1_Stop
 22142                           
 22143                           ;mcc_generated_files/i2c1.c: 552:             break;
 22144  0CFC  0008               	return
 22145  0CFD                     i1l5338:	
 22146                           
 22147                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 22148  0CFD  3001               	movlw	1
 22149  0CFE  00F9               	movwf	??_I2C1_ISR
 22150  0CFF  0879               	movf	??_I2C1_ISR,w
 22151  0D00  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22152                           
 22153                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 22154  0D01  3006               	movlw	6
 22155  0D02  3190  2048         	fcall	_I2C1_Stop
 22156                           
 22157                           ;mcc_generated_files/i2c1.c: 560:             break;
 22158  0D04  0008               	return
 22159  0D05                     i1l5344:	
 22160  0D05  0141               	movlb	1	; select bank1
 22161  0D06  084B               	movf	_i2c1_state^(0+128),w
 22162  0D07  00F9               	movwf	??_I2C1_ISR
 22163  0D08  01FA               	clrf	??_I2C1_ISR+1
 22164                           
 22165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22166                           ; Switch size 1, requested type "simple"
 22167                           ; Number of cases is 1, Range of values is 0 to 0
 22168                           ; switch strategies available:
 22169                           ; Name         Instructions Cycles
 22170                           ; simple_byte            4     3 (average)
 22171                           ; direct_byte            8     6 (fixed)
 22172                           ; jumptable            260     6 (fixed)
 22173                           ;	Chosen strategy is simple_byte
 22174  0D09  087A               	movf	??_I2C1_ISR+1,w
 22175  0D0A  3A00               	xorlw	0	; case 0
 22176  0D0B  1903               	skipnz
 22177  0D0C  2D0E               	goto	i1l6924
 22178  0D0D  2CFD               	goto	i1l5338
 22179  0D0E                     i1l6924:	
 22180                           
 22181                           ; Switch size 1, requested type "simple"
 22182                           ; Number of cases is 11, Range of values is 0 to 11
 22183                           ; switch strategies available:
 22184                           ; Name         Instructions Cycles
 22185                           ; direct_byte           30     6 (fixed)
 22186                           ; simple_byte           34    18 (average)
 22187                           ; jumptable            260     6 (fixed)
 22188                           ;	Chosen strategy is simple_byte
 22189  0D0E  0879               	movf	??_I2C1_ISR,w
 22190  0D0F  3A00               	xorlw	0	; case 0
 22191  0D10  1903               	skipnz
 22192  0D11  2BF7               	goto	i1l549
 22193  0D12  3A01               	xorlw	1	; case 1
 22194  0D13  1903               	skipnz
 22195  0D14  2C22               	goto	i1l554
 22196  0D15  3A03               	xorlw	3	; case 2
 22197  0D16  1903               	skipnz
 22198  0D17  2C6A               	goto	i1l5264
 22199  0D18  3A01               	xorlw	1	; case 3
 22200  0D19  1903               	skipnz
 22201  0D1A  2C8E               	goto	i1l571
 22202  0D1B  3A07               	xorlw	7	; case 4
 22203  0D1C  1903               	skipnz
 22204  0D1D  2CF9               	goto	i1l5336
 22205  0D1E  3A01               	xorlw	1	; case 5
 22206  0D1F  1903               	skipnz
 22207  0D20  2CBD               	goto	i1l578
 22208  0D21  3A03               	xorlw	3	; case 6
 22209  0D22  1903               	skipnz
 22210  0D23  2CD2               	goto	i1l5318
 22211  0D24  3A01               	xorlw	1	; case 7
 22212  0D25  1903               	skipnz
 22213  0D26  2CF9               	goto	i1l5336
 22214  0D27  3A0F               	xorlw	15	; case 8
 22215  0D28  1903               	skipnz
 22216  0D29  2CD9               	goto	i1l5322
 22217  0D2A  3A02               	xorlw	2	; case 10
 22218  0D2B  1903               	skipnz
 22219  0D2C  2C23               	goto	i1l555
 22220  0D2D  3A01               	xorlw	1	; case 11
 22221  0D2E  1903               	skipnz
 22222  0D2F  2C45               	goto	i1l560
 22223  0D30  2CFD               	goto	i1l5338
 22224  0D31  0008               	return
 22225  0D32                     __end_of_I2C1_ISR:	
 22226                           
 22227                           	psect	text80
 22228  1048                     __ptext80:	
 22229 ;; *************** function _I2C1_Stop *****************
 22230 ;; Defined at:
 22231 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 22232 ;; Parameters:    Size  Location     Type
 22233 ;;  completion_c    1    wreg     enum E10866
 22234 ;; Auto vars:     Size  Location     Type
 22235 ;;  completion_c    1    1[COMMON] enum E10866
 22236 ;; Return value:  Size  Location     Type
 22237 ;;                  1    wreg      void 
 22238 ;; Registers used:
 22239 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22240 ;; Tracked objects:
 22241 ;;		On entry : 0/0
 22242 ;;		On exit  : 0/0
 22243 ;;		Unchanged: 0/0
 22244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22249 ;;Total ram usage:        2 bytes
 22250 ;; Hardware stack levels used:    1
 22251 ;; This function calls:
 22252 ;;		Nothing
 22253 ;; This function is called by:
 22254 ;;		_I2C1_ISR
 22255 ;; This function uses a non-reentrant model
 22256 ;;
 22257                           
 22258                           
 22259                           ;psect for function _I2C1_Stop
 22260  1048                     _I2C1_Stop:	
 22261                           
 22262                           ;incstack = 0
 22263 ;; hardware stack exceeded
 22264                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 22265                           ;I2C1_Stop@completion_code stored from wreg
 22266  1048  00F8               	movwf	I2C1_Stop@completion_code
 22267                           
 22268                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 22269  1049  0143               	movlb	3	; select bank3
 22270  104A  1511               	bsf	17,2	;volatile
 22271                           
 22272                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 22273  104B  0871               	movf	_p_i2c1_current,w
 22274  104C  3E02               	addlw	2
 22275  104D  0086               	movwf	6
 22276  104E  0187               	clrf	7
 22277  104F  0801               	movf	1,w
 22278  1050  1903               	btfsc	3,2
 22279  1051  285D               	goto	i1l4892
 22280                           
 22281                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 22282  1052  0878               	movf	I2C1_Stop@completion_code,w
 22283  1053  00F7               	movwf	??_I2C1_Stop
 22284  1054  0871               	movf	_p_i2c1_current,w
 22285  1055  3E02               	addlw	2
 22286  1056  0086               	movwf	6
 22287  1057  0187               	clrf	7
 22288  1058  0801               	movf	1,w
 22289  1059  0086               	movwf	6
 22290  105A  0187               	clrf	7
 22291  105B  0877               	movf	??_I2C1_Stop,w
 22292  105C  0081               	movwf	1
 22293  105D                     i1l4892:	
 22294                           
 22295                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 22296  105D  0141               	movlb	1	; select bank1
 22297  105E  01CB               	clrf	_i2c1_state^(0+128)
 22298  105F  0008               	return
 22299  1060                     __end_of_I2C1_Stop:	
 22300                           
 22301                           	psect	text81
 22302  1F68                     __ptext81:	
 22303 ;; *************** function _I2C1_FunctionComplete *****************
 22304 ;; Defined at:
 22305 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 22306 ;; Parameters:    Size  Location     Type
 22307 ;;		None
 22308 ;; Auto vars:     Size  Location     Type
 22309 ;;		None
 22310 ;; Return value:  Size  Location     Type
 22311 ;;                  1    wreg      void 
 22312 ;; Registers used:
 22313 ;;		wreg, status,2, status,0
 22314 ;; Tracked objects:
 22315 ;;		On entry : 0/0
 22316 ;;		On exit  : 0/0
 22317 ;;		Unchanged: 0/0
 22318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22323 ;;Total ram usage:        1 bytes
 22324 ;; Hardware stack levels used:    1
 22325 ;; This function calls:
 22326 ;;		Nothing
 22327 ;; This function is called by:
 22328 ;;		_I2C1_ISR
 22329 ;; This function uses a non-reentrant model
 22330 ;;
 22331                           
 22332                           
 22333                           ;psect for function _I2C1_FunctionComplete
 22334  1F68                     _I2C1_FunctionComplete:	
 22335                           
 22336                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 22337                           
 22338                           ;incstack = 0
 22339 ;; hardware stack exceeded
 22340                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 22341  1F68  3004               	movlw	4
 22342  1F69  00F7               	movwf	??_I2C1_FunctionComplete
 22343  1F6A  0877               	movf	??_I2C1_FunctionComplete,w
 22344  1F6B  07F2               	addwf	_p_i2c1_trb_current,f
 22345                           
 22346                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 22347  1F6C  3001               	movlw	1
 22348  1F6D  0141               	movlb	1	; select bank1
 22349  1F6E  02CA               	subwf	_i2c1_trb_count^(0+128),f
 22350  1F6F  1D03               	btfss	3,2
 22351  1F70  2F76               	goto	i1l590
 22352                           
 22353                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 22354  1F71  3004               	movlw	4
 22355  1F72  00F7               	movwf	??_I2C1_FunctionComplete
 22356  1F73  0877               	movf	??_I2C1_FunctionComplete,w
 22357  1F74  00CB               	movwf	_i2c1_state^(0+128)
 22358                           
 22359                           ;mcc_generated_files/i2c1.c: 575:     }
 22360  1F75  0008               	return
 22361  1F76                     i1l590:	
 22362                           ;mcc_generated_files/i2c1.c: 576:     else
 22363                           
 22364                           
 22365                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 22366  1F76  01CB               	clrf	_i2c1_state^(0+128)
 22367  1F77  0ACB               	incf	_i2c1_state^(0+128),f
 22368  1F78  0008               	return
 22369  1F79                     __end_of_I2C1_FunctionComplete:	
 22370                           
 22371                           	psect	text82
 22372  1E5F                     __ptext82:	
 22373 ;; *************** function _I2C1_BusCollisionISR *****************
 22374 ;; Defined at:
 22375 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 22376 ;; Parameters:    Size  Location     Type
 22377 ;;		None
 22378 ;; Auto vars:     Size  Location     Type
 22379 ;;		None
 22380 ;; Return value:  Size  Location     Type
 22381 ;;                  1    wreg      void 
 22382 ;; Registers used:
 22383 ;;		None
 22384 ;; Tracked objects:
 22385 ;;		On entry : 0/0
 22386 ;;		On exit  : 0/0
 22387 ;;		Unchanged: 0/0
 22388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22393 ;;Total ram usage:        0 bytes
 22394 ;; Hardware stack levels used:    1
 22395 ;; This function calls:
 22396 ;;		Nothing
 22397 ;; This function is called by:
 22398 ;;		_INTERRUPT_InterruptManager
 22399 ;; This function uses a non-reentrant model
 22400 ;;
 22401                           
 22402                           
 22403                           ;psect for function _I2C1_BusCollisionISR
 22404  1E5F                     _I2C1_BusCollisionISR:	
 22405                           
 22406                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 22407                           
 22408                           ;incstack = 0
 22409 ;; hardware stack exceeded
 22410                           ; Regs used in _I2C1_BusCollisionISR: []
 22411  1E5F  014E               	movlb	14	; select bank14
 22412  1E60  108F               	bcf	15,1	;volatile
 22413  1E61  0008               	return
 22414  1E62                     __end_of_I2C1_BusCollisionISR:	
 22415                           
 22416                           	psect	text83
 22417  1332                     __ptext83:	
 22418 ;; *************** function _DMX_interrupt *****************
 22419 ;; Defined at:
 22420 ;;		line 54 in file "dmx.c"
 22421 ;; Parameters:    Size  Location     Type
 22422 ;;		None
 22423 ;; Auto vars:     Size  Location     Type
 22424 ;;  dummy           1    6[COMMON] volatile unsigned char 
 22425 ;; Return value:  Size  Location     Type
 22426 ;;                  1    wreg      void 
 22427 ;; Registers used:
 22428 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22429 ;; Tracked objects:
 22430 ;;		On entry : 0/0
 22431 ;;		On exit  : 0/0
 22432 ;;		Unchanged: 0/0
 22433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22436 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22437 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22438 ;;Total ram usage:        7 bytes
 22439 ;; Hardware stack levels used:    1
 22440 ;; This function calls:
 22441 ;;		Nothing
 22442 ;; This function is called by:
 22443 ;;		_DMX_init
 22444 ;;		_INTERRUPT_InterruptManager
 22445 ;; This function uses a non-reentrant model
 22446 ;;
 22447                           
 22448                           
 22449                           ;psect for function _DMX_interrupt
 22450  1332                     _DMX_interrupt:	
 22451                           
 22452                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 22453                           
 22454                           ;incstack = 0
 22455 ;; hardware stack exceeded
 22456                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 22457  1332  0142               	movlb	2	; select bank2
 22458  1333  1C9D               	btfss	29,1	;volatile
 22459  1334  2B37               	goto	i1l5594
 22460                           
 22461                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 22462  1335  121D               	bcf	29,4	;volatile
 22463                           
 22464                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 22465  1336  161D               	bsf	29,4	;volatile
 22466  1337                     i1l5594:	
 22467                           
 22468                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 22469  1337  0850               	movf	_initial^(0+256),w
 22470  1338  0451               	iorwf	(_initial+1)^(0+256),w
 22471  1339  1903               	btfsc	3,2
 22472  133A  191D               	btfsc	29,2	;volatile
 22473  133B  2B58               	goto	i1l5602
 22474                           
 22475                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 22476  133C  0819               	movf	25,w	;volatile
 22477  133D  00F7               	movwf	??_DMX_interrupt
 22478  133E  01F8               	clrf	??_DMX_interrupt+1
 22479  133F  0837               	movf	(_arrayIndex+1)^(0+256),w
 22480  1340  00FA               	movwf	??_DMX_interrupt+3
 22481  1341  0836               	movf	_arrayIndex^(0+256),w
 22482  1342  00F9               	movwf	??_DMX_interrupt+2
 22483  1343  35F9               	lslf	??_DMX_interrupt+2,f
 22484  1344  0DFA               	rlf	??_DMX_interrupt+3,f
 22485  1345  30EE               	movlw	238
 22486  1346  00FB               	movwf	??_DMX_interrupt+4
 22487  1347  3023               	movlw	35
 22488  1348  00FC               	movwf	??_DMX_interrupt+5
 22489  1349  0879               	movf	??_DMX_interrupt+2,w
 22490  134A  077B               	addwf	??_DMX_interrupt+4,w
 22491  134B  0086               	movwf	6
 22492  134C  087A               	movf	??_DMX_interrupt+3,w
 22493  134D  3D7C               	addwfc	??_DMX_interrupt+5,w
 22494  134E  0087               	movwf	7
 22495  134F  0877               	movf	??_DMX_interrupt,w
 22496  1350  3FC0               	movwi [0]fsr1
 22497  1351  0878               	movf	??_DMX_interrupt+1,w
 22498  1352  3FC1               	movwi [1]fsr1
 22499                           
 22500                           ;dmx.c: 63:         arrayIndex += 1;
 22501  1353  3001               	movlw	1
 22502  1354  07B6               	addwf	_arrayIndex^(0+256),f
 22503  1355  3000               	movlw	0
 22504  1356  3DB7               	addwfc	(_arrayIndex+1)^(0+256),f
 22505                           
 22506                           ;dmx.c: 64:     } else {
 22507  1357  2B60               	goto	i1l5606
 22508  1358                     i1l5602:	
 22509                           
 22510                           ;dmx.c: 65:         arrayIndex = 0;
 22511  1358  01B6               	clrf	_arrayIndex^(0+256)
 22512  1359  01B7               	clrf	(_arrayIndex+1)^(0+256)
 22513                           
 22514                           ;dmx.c: 66:         initial = 0;
 22515  135A  01D0               	clrf	_initial^(0+256)
 22516  135B  01D1               	clrf	(_initial+1)^(0+256)
 22517                           
 22518                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 22519  135C  0819               	movf	25,w	;volatile
 22520  135D  00F7               	movwf	??_DMX_interrupt
 22521  135E  0877               	movf	??_DMX_interrupt,w
 22522  135F  00FD               	movwf	DMX_interrupt@dummy	;volatile
 22523  1360                     i1l5606:	
 22524                           
 22525                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 22526  1360  014E               	movlb	14	; select bank14
 22527  1361  128F               	bcf	15,5	;volatile
 22528  1362  0008               	return
 22529  1363                     __end_of_DMX_interrupt:	
 22530                           
 22531                           	psect	text84
 22532  1396                     __ptext84:	
 22533 ;; *************** function _EUSART1_Receive_ISR *****************
 22534 ;; Defined at:
 22535 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 22536 ;; Parameters:    Size  Location     Type
 22537 ;;		None
 22538 ;; Auto vars:     Size  Location     Type
 22539 ;;		None
 22540 ;; Return value:  Size  Location     Type
 22541 ;;                  1    wreg      void 
 22542 ;; Registers used:
 22543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22544 ;; Tracked objects:
 22545 ;;		On entry : 0/0
 22546 ;;		On exit  : 0/0
 22547 ;;		Unchanged: 0/0
 22548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22553 ;;Total ram usage:        0 bytes
 22554 ;; Hardware stack levels used:    1
 22555 ;; Hardware stack levels required when called:    2
 22556 ;; This function calls:
 22557 ;;		Absolute function
 22558 ;;		_EUSART1_DefaultErrorHandler
 22559 ;;		_EUSART1_DefaultFramingErrorHandler
 22560 ;;		_EUSART1_DefaultOverrunErrorHandler
 22561 ;;		_EUSART1_RxDataHandler
 22562 ;; This function is called by:
 22563 ;;		_EUSART1_Initialize
 22564 ;;		_INTERRUPT_InterruptManager
 22565 ;; This function uses a non-reentrant model
 22566 ;;
 22567                           
 22568                           
 22569                           ;psect for function _EUSART1_Receive_ISR
 22570  1396                     _EUSART1_Receive_ISR:	
 22571                           
 22572                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 22573                           
 22574                           ;incstack = 0
 22575 ;; hardware stack exceeded
 22576                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22577  1396  0874               	movf	_eusart1RxHead,w	;volatile
 22578  1397  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22579  1398  0086               	movwf	6
 22580  1399  3001               	movlw	1	; select bank2/3
 22581  139A  0087               	movwf	7
 22582  139B  0181               	clrf	1
 22583                           
 22584                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 22585  139C  0142               	movlb	2	; select bank2
 22586  139D  1D1D               	btfss	29,2	;volatile
 22587  139E  2BAA               	goto	i1l5188
 22588                           
 22589                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 22590  139F  0874               	movf	_eusart1RxHead,w	;volatile
 22591  13A0  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22592  13A1  0086               	movwf	6
 22593  13A2  3001               	movlw	1	; select bank2/3
 22594  13A3  0087               	movwf	7
 22595  13A4  1481               	bsf	1,1
 22596                           
 22597                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 22598  13A5  084D               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 22599  13A6  008A               	movwf	10
 22600  13A7  084C               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 22601  13A8  000A               	callw
 22602  13A9  3193               	pagesel	$
 22603  13AA                     i1l5188:	
 22604                           
 22605                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 22606  13AA  0142               	movlb	2	; select bank2
 22607  13AB  1C9D               	btfss	29,1	;volatile
 22608  13AC  2BB8               	goto	i1l5194
 22609                           
 22610                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 22611  13AD  0874               	movf	_eusart1RxHead,w	;volatile
 22612  13AE  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22613  13AF  0086               	movwf	6
 22614  13B0  3001               	movlw	1	; select bank2/3
 22615  13B1  0087               	movwf	7
 22616  13B2  1501               	bsf	1,2
 22617                           
 22618                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 22619  13B3  084B               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 22620  13B4  008A               	movwf	10
 22621  13B5  084A               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 22622  13B6  000A               	callw
 22623  13B7  3193               	pagesel	$
 22624  13B8                     i1l5194:	
 22625                           
 22626                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 22627  13B8  0874               	movf	_eusart1RxHead,w	;volatile
 22628  13B9  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 22629  13BA  0086               	movwf	6
 22630  13BB  3001               	movlw	1	; select bank2/3
 22631  13BC  0087               	movwf	7
 22632  13BD  0801               	movf	1,w
 22633  13BE  1903               	btfsc	3,2
 22634  13BF  2BC7               	goto	i1l5198
 22635                           
 22636                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 22637  13C0  0142               	movlb	2	; select bank2
 22638  13C1  0849               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 22639  13C2  008A               	movwf	10
 22640  13C3  0848               	movf	_EUSART1_ErrorHandler^(0+256),w
 22641  13C4  000A               	callw
 22642  13C5  3193               	pagesel	$
 22643                           
 22644                           ;mcc_generated_files/eusart1.c: 188:     } else {
 22645  13C6  0008               	return
 22646  13C7                     i1l5198:	
 22647                           
 22648                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 22649  13C7  3190  2030         	fcall	_EUSART1_RxDataHandler
 22650  13C9  0008               	return
 22651  13CA                     __end_of_EUSART1_Receive_ISR:	
 22652                           
 22653                           	psect	text85
 22654  1E68                     __ptext85:	
 22655 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 22656 ;; Defined at:
 22657 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 22658 ;; Parameters:    Size  Location     Type
 22659 ;;		None
 22660 ;; Auto vars:     Size  Location     Type
 22661 ;;		None
 22662 ;; Return value:  Size  Location     Type
 22663 ;;                  1    wreg      void 
 22664 ;; Registers used:
 22665 ;;		None
 22666 ;; Tracked objects:
 22667 ;;		On entry : 0/0
 22668 ;;		On exit  : 0/0
 22669 ;;		Unchanged: 0/0
 22670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22675 ;;Total ram usage:        0 bytes
 22676 ;; Hardware stack levels used:    1
 22677 ;; This function calls:
 22678 ;;		Nothing
 22679 ;; This function is called by:
 22680 ;;		_EUSART1_Initialize
 22681 ;;		_EUSART1_Receive_ISR
 22682 ;; This function uses a non-reentrant model
 22683 ;;
 22684                           
 22685                           
 22686                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 22687  1E68                     _EUSART1_DefaultOverrunErrorHandler:	
 22688                           
 22689                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 22690                           
 22691                           ;incstack = 0
 22692 ;; hardware stack exceeded
 22693                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 22694  1E68  0142               	movlb	2	; select bank2
 22695  1E69  121D               	bcf	29,4	;volatile
 22696                           
 22697                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 22698  1E6A  161D               	bsf	29,4	;volatile
 22699  1E6B  0008               	return
 22700  1E6C                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 22701                           
 22702                           	psect	text86
 22703  0002                     __ptext86:	
 22704 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 22705 ;; Defined at:
 22706 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 22707 ;; Parameters:    Size  Location     Type
 22708 ;;		None
 22709 ;; Auto vars:     Size  Location     Type
 22710 ;;		None
 22711 ;; Return value:  Size  Location     Type
 22712 ;;                  1    wreg      void 
 22713 ;; Registers used:
 22714 ;;		None
 22715 ;; Tracked objects:
 22716 ;;		On entry : 0/0
 22717 ;;		On exit  : 0/0
 22718 ;;		Unchanged: 0/0
 22719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22724 ;;Total ram usage:        0 bytes
 22725 ;; Hardware stack levels used:    1
 22726 ;; This function calls:
 22727 ;;		Nothing
 22728 ;; This function is called by:
 22729 ;;		_EUSART1_Initialize
 22730 ;;		_EUSART1_Receive_ISR
 22731 ;; This function uses a non-reentrant model
 22732 ;;
 22733                           
 22734                           
 22735                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 22736  0002                     _EUSART1_DefaultFramingErrorHandler:	
 22737                           
 22738                           ;incstack = 0
 22739 ;; hardware stack exceeded
 22740                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 22741  0002  0008               	return
 22742  0003                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 22743                           
 22744                           	psect	text87
 22745  1E5C                     __ptext87:	
 22746 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 22747 ;; Defined at:
 22748 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 22749 ;; Parameters:    Size  Location     Type
 22750 ;;		None
 22751 ;; Auto vars:     Size  Location     Type
 22752 ;;		None
 22753 ;; Return value:  Size  Location     Type
 22754 ;;                  1    wreg      void 
 22755 ;; Registers used:
 22756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22757 ;; Tracked objects:
 22758 ;;		On entry : 0/0
 22759 ;;		On exit  : 0/0
 22760 ;;		Unchanged: 0/0
 22761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22766 ;;Total ram usage:        0 bytes
 22767 ;; Hardware stack levels used:    1
 22768 ;; Hardware stack levels required when called:    1
 22769 ;; This function calls:
 22770 ;;		_EUSART1_RxDataHandler
 22771 ;; This function is called by:
 22772 ;;		_EUSART1_Initialize
 22773 ;;		_EUSART1_Receive_ISR
 22774 ;; This function uses a non-reentrant model
 22775 ;;
 22776                           
 22777                           
 22778                           ;psect for function _EUSART1_DefaultErrorHandler
 22779  1E5C                     _EUSART1_DefaultErrorHandler:	
 22780                           
 22781                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 22782                           
 22783                           ;incstack = 0
 22784 ;; hardware stack exceeded
 22785                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 22786  1E5C  3190  2030         	fcall	_EUSART1_RxDataHandler
 22787  1E5E  0008               	return
 22788  1E5F                     __end_of_EUSART1_DefaultErrorHandler:	
 22789                           
 22790                           	psect	text88
 22791  1030                     __ptext88:	
 22792 ;; *************** function _EUSART1_RxDataHandler *****************
 22793 ;; Defined at:
 22794 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 22795 ;; Parameters:    Size  Location     Type
 22796 ;;		None
 22797 ;; Auto vars:     Size  Location     Type
 22798 ;;		None
 22799 ;; Return value:  Size  Location     Type
 22800 ;;                  1    wreg      void 
 22801 ;; Registers used:
 22802 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22803 ;; Tracked objects:
 22804 ;;		On entry : 0/0
 22805 ;;		On exit  : 0/0
 22806 ;;		Unchanged: 0/0
 22807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22812 ;;Total ram usage:        1 bytes
 22813 ;; Hardware stack levels used:    1
 22814 ;; This function calls:
 22815 ;;		Nothing
 22816 ;; This function is called by:
 22817 ;;		_EUSART1_Receive_ISR
 22818 ;;		_EUSART1_DefaultErrorHandler
 22819 ;; This function uses a non-reentrant model
 22820 ;;
 22821                           
 22822                           
 22823                           ;psect for function _EUSART1_RxDataHandler
 22824  1030                     _EUSART1_RxDataHandler:	
 22825                           
 22826                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 22827                           
 22828                           ;incstack = 0
 22829 ;; hardware stack exceeded
 22830                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 22831  1030  0142               	movlb	2	; select bank2
 22832  1031  0819               	movf	25,w	;volatile
 22833  1032  00F7               	movwf	??_EUSART1_RxDataHandler
 22834  1033  0874               	movf	_eusart1RxHead,w
 22835  1034  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 22836  1035  0086               	movwf	6
 22837  1036  3001               	movlw	1	; select bank2/3
 22838  1037  0087               	movwf	7
 22839  1038  0877               	movf	??_EUSART1_RxDataHandler,w
 22840  1039  0081               	movwf	1
 22841  103A  3001               	movlw	1
 22842  103B  00F7               	movwf	??_EUSART1_RxDataHandler
 22843  103C  0877               	movf	??_EUSART1_RxDataHandler,w
 22844  103D  07F4               	addwf	_eusart1RxHead,f	;volatile
 22845                           
 22846                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 22847  103E  3008               	movlw	8
 22848  103F  0274               	subwf	_eusart1RxHead,w	;volatile
 22849  1040  1803               	btfsc	3,0
 22850                           
 22851                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 22852  1041  01F4               	clrf	_eusart1RxHead	;volatile
 22853                           
 22854                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 22855  1042  3001               	movlw	1
 22856  1043  00F7               	movwf	??_EUSART1_RxDataHandler
 22857  1044  0877               	movf	??_EUSART1_RxDataHandler,w
 22858  1045  0141               	movlb	1	; select bank1
 22859  1046  07CD               	addwf	_eusart1RxCount^(0+128),f	;volatile
 22860  1047  0008               	return
 22861  1048                     __end_of_EUSART1_RxDataHandler:	
 22862                           
 22863                           	psect	text89
 22864  1F31                     __ptext89:	
 22865 ;; *************** function _ADCC_ThresholdISR *****************
 22866 ;; Defined at:
 22867 ;;		line 308 in file "mcc_generated_files/adcc.c"
 22868 ;; Parameters:    Size  Location     Type
 22869 ;;		None
 22870 ;; Auto vars:     Size  Location     Type
 22871 ;;		None
 22872 ;; Return value:  Size  Location     Type
 22873 ;;                  1    wreg      void 
 22874 ;; Registers used:
 22875 ;;		wreg, status,2, status,0, pclath, cstack
 22876 ;; Tracked objects:
 22877 ;;		On entry : 0/0
 22878 ;;		On exit  : 0/0
 22879 ;;		Unchanged: 0/0
 22880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22885 ;;Total ram usage:        0 bytes
 22886 ;; Hardware stack levels used:    1
 22887 ;; Hardware stack levels required when called:    1
 22888 ;; This function calls:
 22889 ;;		Absolute function
 22890 ;;		_ADCC_DefaultInterruptHandler
 22891 ;;		_adcThresholdHandler
 22892 ;; This function is called by:
 22893 ;;		_INTERRUPT_InterruptManager
 22894 ;; This function uses a non-reentrant model
 22895 ;;
 22896                           
 22897                           
 22898                           ;psect for function _ADCC_ThresholdISR
 22899  1F31                     _ADCC_ThresholdISR:	
 22900                           
 22901                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 22902                           
 22903                           ;incstack = 0
 22904 ;; hardware stack exceeded
 22905                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 22906  1F31  014E               	movlb	14	; select bank14
 22907  1F32  108D               	bcf	13,1	;volatile
 22908                           
 22909                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 22910  1F33  0142               	movlb	2	; select bank2
 22911  1F34  0844               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 22912  1F35  0445               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 22913  1F36  1903               	btfsc	3,2
 22914  1F37  0008               	return
 22915                           
 22916                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 22917  1F38  0845               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 22918  1F39  008A               	movwf	10
 22919  1F3A  0844               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 22920  1F3B  000A               	callw
 22921  1F3C  319F               	pagesel	$
 22922  1F3D  0008               	return
 22923  1F3E                     __end_of_ADCC_ThresholdISR:	
 22924                           
 22925                           	psect	text90
 22926  1E58                     __ptext90:	
 22927 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 22928 ;; Defined at:
 22929 ;;		line 320 in file "mcc_generated_files/adcc.c"
 22930 ;; Parameters:    Size  Location     Type
 22931 ;;		None
 22932 ;; Auto vars:     Size  Location     Type
 22933 ;;		None
 22934 ;; Return value:  Size  Location     Type
 22935 ;;                  1    wreg      void 
 22936 ;; Registers used:
 22937 ;;		None
 22938 ;; Tracked objects:
 22939 ;;		On entry : 0/0
 22940 ;;		On exit  : 0/0
 22941 ;;		Unchanged: 0/0
 22942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22947 ;;Total ram usage:        0 bytes
 22948 ;; Hardware stack levels used:    1
 22949 ;; This function calls:
 22950 ;;		Nothing
 22951 ;; This function is called by:
 22952 ;;		_ADCC_Initialize
 22953 ;;		_ADCC_ThresholdISR
 22954 ;; This function uses a non-reentrant model
 22955 ;;
 22956                           
 22957                           
 22958                           ;psect for function _ADCC_DefaultInterruptHandler
 22959  1E58                     _ADCC_DefaultInterruptHandler:	
 22960                           
 22961                           ;incstack = 0
 22962 ;; hardware stack exceeded
 22963                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 22964  1E58  0008               	return
 22965  1E59                     __end_of_ADCC_DefaultInterruptHandler:	
 22966                           
 22967                           	psect	text91
 22968  1E59                     __ptext91:	
 22969 ;; *************** function _adcThresholdHandler *****************
 22970 ;; Defined at:
 22971 ;;		line 35 in file "beat.c"
 22972 ;; Parameters:    Size  Location     Type
 22973 ;;		None
 22974 ;; Auto vars:     Size  Location     Type
 22975 ;;		None
 22976 ;; Return value:  Size  Location     Type
 22977 ;;                  1    wreg      void 
 22978 ;; Registers used:
 22979 ;;		None
 22980 ;; Tracked objects:
 22981 ;;		On entry : 0/0
 22982 ;;		On exit  : 0/0
 22983 ;;		Unchanged: 0/0
 22984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22989 ;;Total ram usage:        0 bytes
 22990 ;; Hardware stack levels used:    1
 22991 ;; This function calls:
 22992 ;;		Nothing
 22993 ;; This function is called by:
 22994 ;;		_BEAT_init
 22995 ;;		_ADCC_ThresholdISR
 22996 ;; This function uses a non-reentrant model
 22997 ;;
 22998                           
 22999                           
 23000                           ;psect for function _adcThresholdHandler
 23001  1E59                     _adcThresholdHandler:	
 23002                           
 23003                           ;beat.c: 36:     thresholdExceeded = 1;
 23004                           
 23005                           ;incstack = 0
 23006 ;; hardware stack exceeded
 23007                           ; Regs used in _adcThresholdHandler: []
 23008  1E59  01F0               	clrf	_thresholdExceeded
 23009  1E5A  0AF0               	incf	_thresholdExceeded,f
 23010  1E5B  0008               	return
 23011  1E5C                     __end_of_adcThresholdHandler:	
 23012  007E                     btemp	set	126	;btemp
 23013  007E                     int$flags	set	126
 23014  007E                     wtemp0	set	126


Data Sizes:
    Strings     110
    Constant    96
    Data        14
    BSS         156
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     21      80
    BANK2            80      0      52
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_8(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_8(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2972_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1990$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1140$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S1163$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S1163$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_printf
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_setColor->_PWM1_LoadDutyValue
    _LED_setColor->_PWM2_LoadDutyValue
    _LED_setColor->_PWM3_LoadDutyValue
    _LED_setColor->_PWM4_LoadDutyValue
    _LED_task_BEAT->_PWM1_LoadDutyValue
    _LED_task_BEAT->_PWM2_LoadDutyValue
    _LED_task_BEAT->_PWM3_LoadDutyValue
    _LED_task_BEAT->_PWM4_LoadDutyValue
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _DMX_init->_TM1650_fastPrintNum
    _CONTROLLER_task->_menuSelection
    _menuSelection->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->_I2C1_MasterWrite
    _writeData->___lwmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _TM1650_init->_printf
    _LED_task->_LED_task_DMX
    _LED_task_DMX->_LED_setColor
    _CONTROLLER_task->_printf
    _menuSelection->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  104464
                                             19 BANK1      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   18907
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0   26213
                                             17 BANK1      2     2      0
                 _LED_task_ANIMATION
                      _LED_task_BEAT
                       _LED_task_DMX
                            _getMode
 ---------------------------------------------------------------------------------
 (2) _getMode                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_DMX                                         9     9      0   13289
                                              8 BANK1      9     9      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         8     4      4   13144
                                              0 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT                                        6     6      0   12924
                                              0 BANK1      6     6      0
                      _CLOCK_getTime
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     647
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     554
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    6065
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1771
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2     971
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2     971
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     971
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     971
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    4933
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   49742
                                             79 BANK0      1     1      0
                                             10 BANK1      2     2      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                       _CONTROL_BEAT
                        _CONTROL_DMX
                      _TM1650_enable
                _TM1650_fastPrintNum
                      _menuSelection
                             _printf
 ---------------------------------------------------------------------------------
 (2) _menuSelection                                        2     2      0   16206
                                             77 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   16206
                                             73 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   14775
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   14340
                                             56 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2    9778
                                             50 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    9534
                                             41 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    4282
                                             33 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    3890
                                             25 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    2946
                                             23 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    2822
                                             20 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2701
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0    9655
                                             23 BANK0      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    4722
                                             20 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    2670
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1400
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     211
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     849
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1167
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _CONTROL_BEAT
     _CONTROL_DMX
       _BUTTONS_isHeld
       _CLOCK_getTime
       _address_dec
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
       _address_inc
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _menuSelection
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_task
     _LED_task_ANIMATION
     _LED_task_BEAT
       _CLOCK_getTime
       _PWM1_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM2_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM3_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM4_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _LED_task_DMX
       _DMX_getAddress
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _getMode
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     122       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     15      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      34      10       65.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     122      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 27 23:39:16 2019

                                  ___fldiv@aexp 0047                                    ___fldiv@bexp 0046  
                      ??_ADCC_SetUpperThreshold 0022                                    ___fldiv@sign 003F  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0077  
                                            _up 00C5                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00D0                             __Umul8_16@word_mpld 0026  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 1E59  
                                           l911 0ADE                                             l909 0A79  
                                           _PR2 028D                                             _bpm 013A  
                                           _pad 150F                         __size_of_PMD_Initialize 000A  
                               _TMR2_Initialize 1F4B                                 _PWM4_Initialize 1F0E  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  ___flmul@aexp 005A                                    ___flmul@bexp 005B  
                                  ___flmul@sign 0055                                    ___flmul@temp 0060  
                                  ___flmul@prod 005C                                   __CFG_BBEN$OFF 0000  
                              __end_of_I2C1_ISR 0D32                                    ___fltol@exp1 006C  
                                          l1005 0B3D                                            l1037 15BB  
                                          l1071 11BB                                            l1049 1711  
                                          l1269 11A2                                            l1463 1527  
                                          l4200 116D                                            l1466 1547  
                                          l1900 07BD                                            l4300 082B  
                                          l4160 13DF                                            l4056 0805  
                                          l4170 13FA                                            l4058 0811  
                                          l6002 1139                                            l4410 0F5A  
                                          l6100 1087                                            l4404 0F41  
                                          l4412 0F23                                            l1692 0862  
                                          l4316 0850                                            l1940 1691  
                                          l1932 1673                                            l4166 13F1  
                                          l4158 13D3                                            l4182 12AD  
                                          l1870 0FEE                                            l4430 0F7C  
                                          l4414 0F5F                                            l4350 0EAB  
                                          l4502 05DB                                            l4326 086F  
                                          l4318 085E                                            l1926 163D  
                          _ADCC_StartConversion 1E91                                            l4184 12B9  
                                          l4192 12CE                                            l1872 0FFB  
                                          l4440 0F95                                            l1848 0ECF  
                                          l4344 0EA0                                            l4504 05DD  
                                          l6106 106A                                            l6018 10DF  
                                          l6034 10FD                                            l4450 0FBE  
                                          l4514 05F3                                            l4506 05E5  
                                          l1939 1687                                            l4188 12C5  
                                          l6108 106E                                            l4436 0F93  
                                          l4428 0F65                                            l4364 0EC4  
                                          l4348 0EA3                                            l1869 0FD6  
                                          l6310 1597                                            l4622 164C  
                                          ?_pad 0049                                            l6048 08A9  
                                          l6400 1755                                            l6056 12DC  
                                          l6312 159F                                            l4464 0FF7  
                                          l4384 0EFA                                            l4368 0EC7  
                                          l4296 0822                                            l4616 1635  
                                          l6058 12F9                                            l4378 0EEE  
                                          l1978 1173                                            l4650 16AC  
                                          l4626 1650                                            l6420 11BD  
                                          l6084 1F66                                            l6340 16D9  
                                          l6308 158F                                            l6316 15A7  
                                          l4484 05B8                                            l4636 1685  
                                          l4628 1660                                            l6414 11B2  
                                          l4574 0753                                            l4566 0725  
                                          l4486 05BA                                            l4638 1678  
                                          l6424 11B9                                            l4592 0793  
                                          l4568 073C                                            l4488 05C2  
                                          l6098 1083                                            l6362 172A  
                                          l6354 171B                                            l6338 1713  
                                          l6290 1578                                            l4578 0755  
                                          l6700 096D                                            l6372 1732  
                                          l4588 077E                                            l6278 1FC1  
                                          l6382 1739                                            l6438 1FF9  
                                          l6622 0B40                                            l4598 07AA  
                                          l6720 09A8                                            l6704 0974  
                                          l5904 151D                                            l6296 1581  
                                          l6288 1571                                            l6640 0B59  
                                          l6472 0163                                            l6464 0428  
                                          l6722 09BB                                            l5826 1E6C  
                                          l5842 14FC                                            l5914 1529  
                                          l6298 1582                                            l6490 02C4  
                                          l6466 015E                                            l5844 1502  
                                          l5860 10C4                                            l5908 1525  
                                          l6652 0B74                                            l6644 0B61  
                                          l6628 0B4A                                            l6484 01C1  
                                          l6590 0AB5                                            l6582 0A91  
                                          l5838 14F5                                            l5854 129F  
                                          l5870 11F6                                            l5918 1553  
                                          l5926 1311                                            l6654 0B76  
                                          l6478 01BC                                            l6736 09ED  
                                          l6592 0ABF                                            l6576 0A73  
                                          l6568 0A32                                            l5872 11F8  
                                          l5928 131A                                            l5960 17CC  
                                          l6672 0BCC                                            l6664 0BAC  
                                          l6648 0B68                                            l6496 031D  
                                          l6920 1197                                            l6744 1183  
                                          l6752 118C                                            l5954 17AB  
                                          l5970 17DD                                            l6922 15B0  
                                          l6682 0BD2                                            l6674 0BCF  
                                          l6666 0BB0                                            l6658 0B85  
                                          l6746 1186                                            l5884 1409  
                                          l5964 17D2                                            l6676 0BC3  
                                          l6748 1189                                            l5888 142C  
                                          l6784 1462                                            l5898 1234  
                                          l5986 111B                                  ?_TM1650_enable 0077  
                                          STR_1 205D                                            STR_2 2035  
                                          STR_3 2057                                            STR_4 2063  
                                          STR_5 2051                                            STR_6 2069  
                                          STR_7 204F                                            STR_8 201C  
                                          STR_9 2044                         __end_of_PWM1_Initialize 1EF8  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u3105 0851  
                                          u3135 0866                                            _T2PR 028D  
                                          u3075 0834                                            u3325 0F68  
                                          u3415 0FAC                                            u3255 0F2B  
                                          u3425 0FC7                                            u3345 0F71  
                                          u3265 0F32                                            u3435 0FE0  
                                          u2805 13EA                                            u3285 0F3B  
                                          u3605 0731                                            u2815 13F2  
                                          u3295 0F4F                                            u3535 0669  
                                          u2905 1174                                            u3545 0698  
                                          u5235 1533                                            u5315 1117  
                                          u3555 06EE                                            _PMD0 0796  
                                          u2845 12B0                                            u5405 10F9  
                                          u3565 0705                                            _PMD1 0797  
                                          _PMD2 0798                                            u2775 13D6  
                                          u3575 0714                                            _PMD3 0799  
                                          _PMD4 079A                                            u6145 0957  
                                          u2865 12BF                                            u5345 1135  
                                          u3585 0728                                            u3825 1699  
                                          u3745 1659                                            _PMD5 079B  
                                          _PMD6 079C                                            u2795 13E0  
                                          u2875 12C6                                            u5195 142A  
                                          u3675 076C                                            _PMD7 079D  
                                          u3685 0787                                            u3765 166D  
                                          u5535 16D3                                            u5375 10DB  
                                          u3695 079D                                            u6247 143F  
                                          u3785 167F                                            u6195 09CE  
                                          u5805 0A35                                            u5565 16EF  
                                          u5814 0A54                                            u5815 0A53  
                                          u5575 170A                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                              _LED_task_ANIMATION 07FF  
                                 __CFG_FCMEN$ON 0000                                   ?_BUTTONS_init 0077  
                                 ?_BUTTONS_task 0077                                            _dbuf 01A0  
                          ?_adcThresholdHandler 0077                                            _ctoa 1302  
                                          _main 1436                                            _down 00C4  
                                          _init 1142                                            _menu 00C6  
                                          _prec 0132                                            _nout 0130  
                                          pad@i 004D                                            pad@p 004A  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 004F                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                                          start 0030                                 ___fldiv@new_exp 0040  
                       __end_of_TM1650_setDigit 1F9C                             ?_LED_task_ANIMATION 0077  
                            __size_of_GPIO_init 0011                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                          __size_of_address_dec 0018                            __size_of_address_inc 0019  
                I2C1_MasterWriteTRBBuild@length 0021                                  _BUTTONS_isHeld 1F59  
                                         ??_pad 004C                         __end_of_PWM2_Initialize 1F03  
                       __end_of_TMR0_Initialize 1FD7                                      _i2c1_state 00CB  
                ??_TMR0_DefaultInterruptHandler 0077                  __size_of_OSCILLATOR_Initialize 0009  
                     I2C1_MasterTRBInsert@count 0023                   __end_of_OSCILLATOR_Initialize 1ED9  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 0120  
                                 ___fltol@sign1 006B                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_ctoa 0052  
                              __end_of_LED_task 11A3                                           ?_main 0077  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                               __end_of___fldiv 1000                                           _ADREF 0116  
                             __end_of_I2C1_Stop 1060                                           STR_10 202D  
                                         STR_11 2013                                           STR_12 2000  
                                         STR_13 200A                                           STR_14 2025  
                                         STR_15 203D                                           STR_16 204B  
                                 __CFG_WDTE$OFF 0000                                __end_of_DMX_init 1FAF  
                                         _ADRPT 009A                                 __end_of___flmul 07CA  
                               __end_of___fltol 087E                                           _T2CON 028E  
                                         _T2HLT 028F                                 __end_of___lwdiv 13FF  
                    _ADCC_ADTI_InterruptHandler 0144                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l432 0017  
                                         i1l441 002E                                 __end_of___lwmod 12D3  
                                         i1l434 001E                                           i1l436 0025  
                                         i1l429 000E                                           i1l560 0C45  
                                         i1l561 0C51                                           i1l554 0C22  
                                         i1l571 0C8E                                           i1l555 0C23  
                                         i1l549 0BF7                                           i1l590 1F76  
                                         i1l583 0CF2                                           i1l575 0CAE  
                                         i1l578 0CBD                                           i1l579 0CCB  
                                         _OSCEN 0891                                    vfpfcnvrt@fmt 0058  
                            _PWM4_LoadDutyValue 1124                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1E62  
                          ??_LED_task_ANIMATION 0020                       ?_TMR0_SetInterruptHandler 0020  
                               __end_of_getMode 1E68                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 1F4B                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                                         _delay 0152                                           _flags 00A7  
                                         _enter 00C3                           ?_ADCC_StartConversion 0077  
                                         _fputc 13FF                                           _fputs 1230  
                           ?_PWM4_LoadDutyValue 006D                                           pad@fp 0051  
                                         _width 00A5                                           ctoa@c 0052  
                                         _putch 11E8                                           ctoa@w 0055  
                       __end_of_PWM3_Initialize 1F0E                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0077                               __end_of_BEAT_init 1030  
                             __end_of_BEAT_task 0A10                                           status 0003  
                                         wtemp0 007E                          __size_of_LED_task_BEAT 051A  
    __end_of_EUSART1_DefaultFramingErrorHandler 0003     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0077             ?_EUSART1_DefaultFramingErrorHandler 0077  
            _EUSART1_DefaultFramingErrorHandler 0002                 I2C1_MasterWriteTRBBuild@address 0022  
                        __end_of_BUTTONS_isHeld 1F68                                 __initialization 0032  
                          TM1650_setDigit@digit 0036                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                                    __end_of_ctoa 1332  
                    __end_of_EUSART1_Initialize 1396                                    __end_of_main 146F  
                                  __end_of_init 1162                                 _CONTROLLER_task 0AF5  
                          ??_PWM4_LoadDutyValue 006F                                   ?_LED_setColor 00D1  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
                                 ?_LED_task_DMX 0077                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 1EA3                         __end_of_PWM4_Initialize 1F19  
                       __end_of_TMR2_Initialize 1F59                     ?_INTERRUPT_InterruptManager 0077  
                                   _i2c1_object 00A0                                          ??_ctoa 0054  
                                        ??_main 00E4                                          ??_init 0023  
                          __end_of_CONTROL_BEAT 11C5                               __end_of_GPIO_init 1F8A  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                          __size_of_CONTROL_DMX 00A2                                          ?_fputc 0039  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0041                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR3H 0315  
                                        _CCPR1L 030C                                          _CCPR4H 0319  
                                        _CCPR2L 0310                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          ?_putch 0077  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                ?_PWM1_Initialize 0077  
                                        _RC5PPS 1F25                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l5232 0C15                                          i1l5322 0CD9  
                                        i1l5306 0CB1                                          i1l5250 0C3F  
                                        i1l5244 0C2F                                          i1l5236 0C1C  
                                        i1l5334 0CF6                                          i1l5318 0CD2  
                                        i1l5336 0CF9                                          i1l5264 0C6A  
                                        i1l5344 0D05                                  __CFG_WDTCCS$SC 0000  
                                        i1l5194 13B8                                          i1l5602 1358  
                                        i1l5338 0CFD                                          i1l5188 13AA  
                                        i1l5284 0C83                                          i1l5198 13C7  
                                        i1l5606 1360                                          i1l5298 0C9C  
                                        i1l5594 1337                                          i1l4892 105D  
                                        i1l6924 0D0E                                          _OSCFRQ 0893  
                        __size_of_DMX_interrupt 0031                                          _TX1REG 011A  
                                        _TX1STA 011E                                __end_of___xxtofl 16B5  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0034                                 ?_BUTTONS_isHeld 0077  
                            ??_I2C1_MasterWrite 002B                                    _CCPTMRS0bits 021E  
                                  vfprintf@cfmt 0067                                  _p_i2c1_current 0071  
                                ??_LED_setColor 00D5                     __size_of_PWM3_LoadDutyValue 001E  
                                ??_LED_task_DMX 00D9                     __end_of_TM1650_fastPrintNum 0940  
                             _ADCC_ThresholdISR 1F31                                       ??___fldiv 0036  
                        __size_of_menuSelection 005A                                  __CFG_STVREN$ON 0000  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 0024                                       ??___lwmod 002C  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                              ?_TMR0_Initialize 0077                                ?_PWM2_Initialize 0077  
                            ?_ADCC_ThresholdISR 0077                                       ?_I2C1_ISR 0077  
                                     ??_getMode 0020                                          _printf 1004  
                                        pad@buf 0049                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                          ctoa@fp 0057  
                                _lastActiveTime 00AF                                   _LED_task_BEAT 0084  
                                        _strlen 0800                            __size_of_TM1650_init 0014  
                               _ADCC_Initialize 1256                                          fputc@c 0039  
                                _PMD_Initialize 1ED9                                          fputs@c 0045  
                                  ??_CLOCK_init 0022                                          fputs@i 0046  
                                        fputs@s 0048                              __size_of__Umul8_16 0020  
                           ??_ADCC_ThresholdISR 0077                          ??_ADCC_StartConversion 0020  
                                        putch@n 0038                                __end_of_vfprintf 1302  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 1E88  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                   _tm1650_status 00BC  
                               _eusart1RxBuffer 0128                                ?_PWM3_Initialize 0077  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 120C                                    ___xxtofl@val 0020  
                       __end_of__initialization 0080                         __end_of_CONTROLLER_task 0BE4  
                            ?_SYSTEM_Initialize 0077                      __end_of_PWM2_LoadDutyValue 1106  
                                     ?_LED_task 0077                                      ___fltol@f1 0062  
                                     ?_DMX_init 0077                                  _i2c1_trb_count 00CA  
                   PWM1_LoadDutyValue@dutyValue 006D                  __size_of_EUSART1_RxDataHandler 0018  
                     __end_of_ADCC_ThresholdISR 1F3E                         __size_of_DMX_getAddress 0003  
                 __end_of_EUSART1_RxDataHandler 1048                           _I2C1_FunctionComplete 1F68  
                          _I2C1_BusCollisionISR 1E5F                                  __pcstackCOMMON 0077  
                            __end_of_CLOCK_init 1E7F                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 1EE3                                    __pidataBANK2 1000  
                           ??_SYSTEM_Initialize 0022                                       ?_TMR0_ISR 0077  
                                 __end_of_fputc 1436                                   __end_of_fputs 1256  
                                 __end_of_putch 120C                              _PWM1_LoadDutyValue 10CA  
                                    ??_I2C1_ISR 0079                                ?_TMR2_Initialize 0077  
                              ?_PWM4_Initialize 0077                                  ?_LED_task_BEAT 0077  
                                 _DMX_interrupt 1332                            __end_of_BUTTONS_init 14BD  
                        __end_of_PMD_Initialize 1EE3                            __end_of_BUTTONS_task 0AF5  
                   PWM4_LoadDutyValue@dutyValue 006D                             ?_PWM1_LoadDutyValue 006D  
                   __end_of_EUSART1_Receive_ISR 13CA                               _thresholdExceeded 0070  
                   ADCC_StartConversion@channel 0020                               LED_setColor@input 00D1  
                                 _menuSelection 1562                                         ??_fputc 003C  
                     __end_of_SYSTEM_Initialize 1230                                         ??_fputs 0042  
                                       ??_putch 0037                                   _eusart1RxHead 0074  
                                 _eusart1RxTail 0073                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
               ??_EUSART1_SetRxInterruptHandler 0022                                      ??_LED_task 00E2  
                                    ??_DMX_init 0037                            ??_PWM1_LoadDutyValue 006F  
                             __end_of__Umul8_16 1182                           ?_I2C1_BusCollisionISR 0077  
               __end_of_EUSART1_SetErrorHandler 1EBE                                      __pmaintext 1436  
              __end_of_TMR0_SetInterruptHandler 1EAC                                      ??_TMR0_ISR 0077  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 127C                                      __pintentry 0004  
                               _I2C1_Initialize 1091                                         _CCP1CON 030E  
                                       _CCP2CON 0312                                         _CCP3CON 0316  
                         __size_of_CONTROL_BEAT 0022                                         _CCP4CON 031A  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                ?_DMX_interrupt 0077                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 1E88           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 1E7F                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                                       ?_printf 00D1                                 ?_PMD_Initialize 0077  
                                       ?_strlen 0020          __end_of_EUSART1_SetFramingErrorHandler 1EC7  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 1EBE  
                             LED_task_BEAT@temp 00D5                                       ?___xxtofl 0020  
                  ?_EUSART1_DefaultErrorHandler 0077                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00A9  
                                     _I2C1_Stop 1048                                      _arrayIndex 0136  
                                ?_menuSelection 0077                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 0E86  
                             __end_of_charTable 1860                             _CLOCK_timerCallback 1E71  
                          __end_of_LED_task_DMX 161F                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0037  
                                 ??_address_inc 0037                                ?_CONTROLLER_task 0077  
                                    _enterState 00BD                                 BUTTONS_task@btn 0028  
                                  _CONTROL_BEAT 11A3                          ?_I2C1_FunctionComplete 0077  
                                     _BEAT_init 1019                   __size_of_I2C1_MasterTRBInsert 0052  
                                     _BEAT_task 0940                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 0072                                         ___fldiv 0E86  
                          ?_CLOCK_timerCallback 0077                                         ___flmul 059E  
                                       ___fltol 0818                                 ??_LED_task_BEAT 00D1  
                                       ___lwdiv 13CA                                         ___lwmod 12A6  
                                     ?_vfprintf 0061                                         _address 00EA  
                                       _getMode 1E65                                         __ptext1 1FD7  
                                       __ptext2 120C                                         __ptext3 1F4B  
                                       __ptext4 1FC3                                         __ptext5 1F0E  
                                       __ptext6 1F03                                         __ptext7 1EF8  
                                       __ptext8 1EED                                         __ptext9 1ED9  
                               __size_of_printf 0015                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strlen 0018  
                                       _lastRun 00AB                           _OSCILLATOR_Initialize 1ED0  
                                     _T2CONbits 028E                                    __size_of_pad 0053  
                                       _initial 0150                                         _buttons 01C0  
                                    ??___xxtofl 0024                              _EUSART1_Initialize 1363  
                      ??_PIN_MANAGER_Initialize 0020                                       _T2HLTbits 028F  
                               __CFG_WRTSAF$OFF 0000                     __size_of_LED_task_ANIMATION 0001  
                                    ?_I2C1_Stop 0077                     __end_of_adcThresholdHandler 1E5C  
                                       _upState 00C0                   ??_EUSART1_DefaultErrorHandler 0078  
                                       _startup 00EE                      __size_of_SYSTEM_Initialize 0024  
                          I2C1_ISR@pi2c_buf_ptr 00C9                                         clrloop0 1F1A  
                              _currentSelection 00EC                            end_of_initialization 0080  
                                     _T2RSTbits 0291                                       _GPIO_init 1F79  
                           ?_EUSART1_Initialize 0077                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                                       fputc@fp 003B                                         init_ram 1F25  
                   _EUSART1_OverrunErrorHandler 014A                                         fputs@fp 0041  
                                       initloop 1F26                          ??_I2C1_BusCollisionISR 0077  
                       __end_of_I2C1_Initialize 10AD                                  _DMX_getAddress 1E62  
         __end_of_EUSART1_SetRxInterruptHandler 1EB5          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 1EAC                                      ?_BEAT_init 0077  
                                    ?_BEAT_task 0077                               __end_of_vfpfcnvrt 1800  
                         __size_of_BUTTONS_init 004E                           __size_of_BUTTONS_task 00E5  
                         ??_CLOCK_timerCallback 0077                                 ??_DMX_interrupt 0077  
                           __end_of_address_dec 1078                     __size_of_PWM4_LoadDutyValue 001E  
                           __end_of_address_inc 1091                                ?_ADCC_Initialize 0077  
                                    ??_vfprintf 0064                            ??_EUSART1_Initialize 0022  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0023  
                                       strlen@s 0020                        _TMR0_SetInterruptHandler 1EA3  
                     __size_of_I2C1_MasterWrite 002A                               __size_of_I2C1_ISR 014E  
                             __end_of_writeData 10CA                                 ??_menuSelection 006D  
                       ?_ADCC_SetUpperThreshold 0020                                   ??_CONTROL_DMX 0037  
                                 ___xxtofl@sign 0028                                       _TRISAbits 0012  
                                     _TRISCbits 0014                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 2000  
             I2C1_ISR@i2c_10bit_address_restart 00C7                                      ?_GPIO_init 0077  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 0056  
                                  _BUTTONS_init 146F                                    _BUTTONS_task 0A10  
                        __end_of_DMX_getAddress 1E65                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
                    __end_of_PWM3_LoadDutyValue 1124            __size_of_EUSART1_DefaultErrorHandler 0003  
                      __size_of_PWM1_Initialize 000B                               __size_of_LED_task 0021  
                             __size_of_DMX_init 0013                  ??_ADCC_DefaultInterruptHandler 0077  
                                 ??_TM1650_init 006D                                     vfpfcnvrt@ap 0059  
                                   vfpfcnvrt@fp 0060                         I2C1_MasterWrite@trBlock 0140  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0078  
                            _PWM2_LoadDutyValue 10E8                        __size_of_TM1650_setDigit 0012  
                        ?_OSCILLATOR_Initialize 0077                  __end_of_ADCC_SetUpperThreshold 1E91  
                  __size_of_TM1650_fastPrintNum 00C2                                  __end_of_printf 1019  
                         __size_of_LED_setColor 0154                                  __end_of_strlen 0818  
                                  _lastDetected 00B9                           __size_of_LED_task_DMX 0063  
                           start_initialization 0032                                    _enterPressed 00C1  
                                   ??_I2C1_Stop 0077                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                             ?_PWM2_LoadDutyValue 006D  
               __size_of_PIN_MANAGER_Initialize 0035                             TM1650_setDigit@data 0034  
                                   __end_of_pad 1562   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
                                _beatBrightness 00EF                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 1FAF                             __end_of_CONTROL_DMX 1757  
                               ?_DMX_getAddress 0077                              ?_BUTTONS_isClicked 0077  
                                   _address_dec 1060                                     _address_inc 1078  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0077  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                          ??_PWM2_LoadDutyValue 006F                        __size_of_PWM3_Initialize 000B  
                                   vfprintf@fmt 0061                     PWM2_LoadDutyValue@dutyValue 006D  
                           ??_BUTTONS_isClicked 0020                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 1030                                    _LED_setColor 0D32  
                ?_EUSART1_SetRxInterruptHandler 0020                                       __Umul8_16 1162  
                                   __pdataBANK1 00E6                                     __pdataBANK2 0150  
                                  _LED_task_DMX 15BC                                   _CLOCK_getTime 1E9A  
                                      ??_printf 0069                                        ??_strlen 0022  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 00CD  
                                     ___fldiv@a 002E                                       ___fldiv@b 0032  
                                   __pbssBIGRAM 23EE                             __end_of_TM1650_init 1FEB  
                                     ___flmul@a 004C                                       ___flmul@b 0048  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 014E  
                                     ___latbits 0003                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00D1                        __size_of_PWM4_Initialize 000B  
                      __size_of_TMR2_Initialize 000E                                   _i2c1_tr_queue 00CE  
                             __size_of___xxtofl 0096                       __end_of_BUTTONS_isClicked 1FC3  
                                   ??_GPIO_init 0020                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0077  
                  __size_of_EUSART1_Receive_ISR 0034                                    _menuSelected 00ED  
                                  _currentState 00A9                                       _charTable 1800  
                         _TMR0_InterruptHandler 0146                                       __pnvBANK2 0144  
                   __size_of_PWM1_LoadDutyValue 001E                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 07CA                                        ?___fldiv 002E  
                                      ?___flmul 0048                                        ?___fltol 0062  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0028                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 0BE4                               ??_PWM1_Initialize 0020  
                  ??_INTERRUPT_InterruptManager 007E                                 writeData@status 0033  
                                      ?_getMode 0077                               __size_of_vfprintf 002F  
                              _I2C1_MasterWrite 127C                                        _BAUD1CON 011F  
                  __end_of_I2C1_MasterTRBInsert 150F      __end_of_EUSART1_DefaultOverrunErrorHandler 1E6C  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0077  
           ?_EUSART1_DefaultOverrunErrorHandler 0077              _EUSART1_DefaultOverrunErrorHandler 1E68  
                          _EUSART1_ErrorHandler 0148                                       _downState 00BF  
                                   _CONTROL_DMX 16B5                         _EUSART1_SetErrorHandler 1EB5  
                             ??_TM1650_setDigit 0035                                ___lwdiv@quotient 0025  
                                __size_of_fputc 0037                                        _T2CLKCON 0290  
                                     _menuState 00BE                                  __size_of_fputs 0026  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 1E71  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0077                _I2C1_WaitForLastPacketToComplete 1E6C  
                        I2C1_MasterRead@trBlock 013C                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 1F19  
                                      _PIE0bits 0716                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 1182  
                                      _DMX_init 1F9C             __size_of_INTERRUPT_InterruptManager 002C  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 00E8                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0077  
                       CONTROLLER_task@isActive 006F                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 1F3E                                        _SSP1STAT 018F  
                      __size_of_CONTROLLER_task 00EF                                     _TM1650_init 1FD7  
                                     _threshold 00E6                                       _vfpfcnvrt 1757  
                         __end_of_LED_task_BEAT 059E                               ??_PWM3_Initialize 0020  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                                     _startTime 00B7                      __end_of_LED_task_ANIMATION 0800  
                            DMX_interrupt@dummy 007D                                        _WPUAbits 1F39  
                                      _WPUCbits 1F4F                                       _writeData 10AD  
                    __size_of_BUTTONS_isClicked 0014                                      vfpfcnvrt@c 005F  
                                   _lastIncTime 00B1                               ??_TMR2_Initialize 0020  
                             ??_PWM4_Initialize 0020                    __size_of_adcThresholdHandler 0003  
                   __end_of_CLOCK_timerCallback 1E77                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 087E                                      _ADSTATbits 0115  
                    __end_of_PWM4_LoadDutyValue 1142                   __size_of_I2C1_BusCollisionISR 0003  
                                    vfprintf@ap 0063                                      vfprintf@fp 0066  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 00C8  
                       ??_OSCILLATOR_Initialize 0020                                     ??__Umul8_16 0022  
                              __size_of___fldiv 017A                                __size_of___flmul 022C  
                              __size_of___fltol 0066                           __end_of_DMX_interrupt 1363  
                   __size_of_EUSART1_Initialize 0033                                      ?_vfpfcnvrt 0058  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
              __end_of_I2C1_MasterWriteTRBBuild 11E8                              _PWM3_LoadDutyValue 1106  
                                    _ANSELAbits 1F38                                      _ANSELCbits 1F4E  
                              __size_of_getMode 0003                            ?_TM1650_fastPrintNum 0034  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                           TM1650_enable@enable 0034             __end_of_EUSART1_DefaultErrorHandler 1E5F  
                   _EUSART1_DefaultErrorHandler 1E5C                                     _currentTime 00B3  
                                    _CLOCK_init 1E77                                        ___xxtofl 161F  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                                   _menuPressed 00C2                                 ___lwdiv@divisor 0020  
                         __end_of_menuSelection 15BC                             I2C1_ISR@i2c_address 0075  
                               ___lwdiv@counter 0027                                        _detected 00BA  
                                    ?_writeData 002E                                        __ptext10 07CA  
                                      __ptext11 1ED0                                        __ptext20 15BC  
                                      __ptext12 1091                                        __ptext21 0D32  
                                      __ptext13 1363                                        __ptext30 1106  
                                      __ptext22 1E62                                        __ptext14 1EC7  
                                      __ptext31 10E8                                        __ptext23 0084  
                                      __ptext15 1EBE                                        __ptext40 1757  
                                      __ptext32 10CA                                        __ptext24 161F  
                                      __ptext16 1EB5                                        __ptext41 1302  
                                      __ptext33 07FF                                        __ptext25 0818  
                                      __ptext17 1256                                        __ptext50 1078  
                                      __ptext42 150F                                        __ptext34 1F9C  
                                      __ptext26 059E                                        __ptext18 1182  
                                      __ptext51 1060                                        __ptext43 0800  
                                      __ptext35 1EAC                                        __ptext27 1162  
                                      __ptext19 1E65                                        __ptext60 11A3  
                                      __ptext52 087E                                        __ptext44 1230  
                                      __ptext36 0AF5                                        __ptext28 0E86  
                                      __ptext61 1FAF                                        __ptext53 10AD  
                                      __ptext45 13FF                                        __ptext37 1562  
                                      __ptext29 1124                                        __ptext70 1E9A  
                                      __ptext62 1E77                                        __ptext54 127C  
                                      __ptext46 11E8                                        __ptext38 1004  
                                      __ptext71 1019                                        __ptext63 1EA3  
                                      __ptext55 11C5                                        __ptext47 1F8A  
                                      __ptext39 12D3                                        __ptext80 1048  
                                      __ptext72 1E91                                        __ptext64 0A10  
                                      __ptext56 14BD                                        __ptext48 1FEB  
                                      __ptext81 1F68                                        __ptext73 1E88  
                                      __ptext65 146F                                        __ptext57 1E6C  
                                      __ptext49 16B5                                        __ptext90 1E58  
                                      __ptext82 1E5F                                        __ptext74 1E7F  
                                      __ptext66 1142                                        __ptext58 12A6  
                           ?_PWM3_LoadDutyValue 006D                                        __ptext91 1E59  
                                      __ptext83 1332                                        __ptext67 1F79  
                                      __ptext59 1F59                                        __ptext84 1396  
                                      __ptext76 1F3E                                        __ptext68 0940  
                                      __ptext85 1E68                                        __ptext77 1E71  
                                      __ptext69 13CA                                        __ptext86 0002  
                                      __ptext78 0003                                        __ptext87 1E5C  
                                      __ptext79 0BE4                                        __ptext88 1030  
                                      __ptext89 1F31                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _dmxArray 23EE  
                              ??_DMX_getAddress 0020                            BUTTONS_isHeld@button 0020  
                                      _lastBeat 00AD                                        _lastTime 00B5  
                               LED_task_DMX@dmx 00DE                                   __size_of_ctoa 0030  
                                 __size_of_main 0039                                   __size_of_init 0020  
                                  ?_address_dec 0077            __end_of_TMR0_DefaultInterruptHandler 0004  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 0003  
                                  ?_address_inc 0077                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 14BD                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                            ??_PWM3_LoadDutyValue 006F  
                  __end_of_ADCC_StartConversion 1E9A                                        int$flags 007E  
                                      _position 00BB                         __size_of_BUTTONS_isHeld 000F  
                                      _vfprintf 12D3              __end_of_INTERRUPT_InterruptManager 0030  
                    _INTERRUPT_InterruptManager 0004                                       printf@fmt 00D1  
                        __size_of_TM1650_enable 0015                     _EUSART1_FramingErrorHandler 014C  
                           _EUSART1_Receive_ISR 1396                           ??_TM1650_fastPrintNum 0036  
                                    _INTCONbits 000B                               ??_CONTROLLER_task 00DB  
                                      init@port 0020                                  __pstringtext10 2044  
                                __pstringtext11 204B                                  __pstringtext12 2051  
                                __pstringtext13 2057                                  __pstringtext14 205D  
                                __pstringtext15 2063                                  __pstringtext16 2069  
                                __pstringtext17 0000            __end_of_ADCC_DefaultInterruptHandler 1E59  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 1E58  
                                      intlevel1 0000                                  _thresholdCount 0138  
                          ?_EUSART1_Receive_ISR 0077                                   writeData@data 002E  
                              ___lwmod@dividend 002A                         ?_PIN_MANAGER_Initialize 0077  
                      __end_of_I2C1_MasterWrite 12A6                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 1ED0  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 1EC7  
                 __end_of_I2C1_FunctionComplete 1F79                                   ?_CONTROL_BEAT 0077  
                         ?_I2C1_MasterTRBInsert 0020                                 _PWM1_Initialize 1EED  
                 ?_TMR0_DefaultInterruptHandler 0077                     __size_of_PWM2_LoadDutyValue 001E  
                        TM1650_fastPrintNum@num 0034                               _lastLedActiveTime 0134  
                                      printf@ap 006C  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                   PWM3_LoadDutyValue@dutyValue 006D                                 _TM1650_setDigit 1F8A  
                                   ??_vfpfcnvrt 005A                        __size_of_I2C1_Initialize 001C  
                            _eusart1RxLastError 00CC                                   __pstringtext1 1800  
                                 __pstringtext2 2000                                   __pstringtext3 200A  
                                 __pstringtext4 2013                                   __pstringtext5 201C  
                                 __pstringtext6 2025                                   __pstringtext7 202D  
                                 __pstringtext8 2035                                   __pstringtext9 203D  
                        __Umul8_16@multiplicand 0020                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0028  
                                   ?_CLOCK_init 0077                                 _TMR0_Initialize 1FC3  
                               _PWM2_Initialize 1EF8                                 ___lwmod@counter 002D  
                                  ?_CONTROL_DMX 0077                        _I2C1_MasterWriteTRBBuild 11C5  
                                   ??_writeData 002F                                      _TX1STAbits 011E  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0078  
                __end_of_PIN_MANAGER_Initialize 07FF                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 1FEB                              __size_of_I2C1_Stop 0018  
                 ?_ADCC_DefaultInterruptHandler 0077                      __end_of_PWM1_LoadDutyValue 10E8  
                          __Umul8_16@multiplier 0028                                  ??_CONTROL_BEAT 0020  
                       ??_EUSART1_RxDataHandler 0077                                 _PWM3_Initialize 1F03  
                             __Umul8_16@product 0024  
