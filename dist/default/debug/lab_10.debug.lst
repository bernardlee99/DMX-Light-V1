

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 29 14:56:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	stringtext12,global,class=STRCODE,delta=2
    20                           	psect	stringtext13,global,class=STRCODE,delta=2
    21                           	psect	stringtext14,global,class=STRCODE,delta=2
    22                           	psect	stringtext15,global,class=STRCODE,delta=2
    23                           	psect	stringtext16,global,class=STRCODE,delta=2
    24                           	psect	stringtext17,global,class=STRCODE,delta=2
    25                           	psect	stringtext18,global,class=STRCODE,delta=2
    26                           	psect	stringtext19,global,class=STRCODE,delta=2
    27                           	psect	stringtext20,global,class=STRCODE,delta=2
    28                           	psect	stringtext21,global,class=STRCODE,delta=2
    29                           	psect	stringtext22,global,class=STRCODE,delta=2
    30                           	psect	cinit,global,class=CODE,merge=1,delta=2
    31                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    32                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    36                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    38                           	psect	clrtext,global,class=CODE,delta=2
    39                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    40                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    41                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    42                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    43                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    44                           	psect	text1,local,class=CODE,merge=1,delta=2
    45                           	psect	text2,local,class=CODE,merge=1,delta=2
    46                           	psect	text3,local,class=CODE,merge=1,delta=2
    47                           	psect	text4,local,class=CODE,merge=1,delta=2
    48                           	psect	text5,local,class=CODE,merge=1,delta=2
    49                           	psect	text6,local,class=CODE,merge=1,delta=2
    50                           	psect	text7,local,class=CODE,merge=1,delta=2
    51                           	psect	text8,local,class=CODE,merge=1,delta=2
    52                           	psect	text9,local,class=CODE,merge=1,delta=2
    53                           	psect	text10,local,class=CODE,merge=1,delta=2
    54                           	psect	text11,local,class=CODE,merge=1,delta=2
    55                           	psect	text12,local,class=CODE,merge=1,delta=2
    56                           	psect	text13,local,class=CODE,merge=1,delta=2
    57                           	psect	text14,local,class=CODE,merge=1,delta=2
    58                           	psect	text15,local,class=CODE,merge=1,delta=2
    59                           	psect	text16,local,class=CODE,merge=1,delta=2
    60                           	psect	text17,local,class=CODE,merge=1,delta=2
    61                           	psect	text18,local,class=CODE,merge=1,delta=2
    62                           	psect	text19,local,class=CODE,merge=1,delta=2
    63                           	psect	text20,local,class=CODE,merge=1,delta=2
    64                           	psect	text21,local,class=CODE,merge=1,delta=2
    65                           	psect	text22,local,class=CODE,merge=1,delta=2
    66                           	psect	text23,local,class=CODE,merge=1,delta=2
    67                           	psect	text24,local,class=CODE,merge=1,delta=2
    68                           	psect	text25,local,class=CODE,merge=1,delta=2
    69                           	psect	text26,local,class=CODE,merge=1,delta=2
    70                           	psect	text27,local,class=CODE,merge=1,delta=2
    71                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text33,local,class=CODE,merge=1,delta=2
    77                           	psect	text34,local,class=CODE,merge=1,delta=2
    78                           	psect	text35,local,class=CODE,merge=1,delta=2
    79                           	psect	text36,local,class=CODE,merge=1,delta=2
    80                           	psect	text37,local,class=CODE,merge=1,delta=2
    81                           	psect	text38,local,class=CODE,merge=1,delta=2
    82                           	psect	text39,local,class=CODE,merge=1,delta=2
    83                           	psect	text40,local,class=CODE,merge=1,delta=2
    84                           	psect	text41,local,class=CODE,merge=1,delta=2
    85                           	psect	text42,local,class=CODE,merge=1,delta=2
    86                           	psect	text43,local,class=CODE,merge=1,delta=2
    87                           	psect	text44,local,class=CODE,merge=1,delta=2
    88                           	psect	text45,local,class=CODE,merge=1,delta=2
    89                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text47,local,class=CODE,merge=1,delta=2
    91                           	psect	text48,local,class=CODE,merge=1,delta=2
    92                           	psect	text49,local,class=CODE,merge=1,delta=2
    93                           	psect	text50,local,class=CODE,merge=1,delta=2
    94                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text54,local,class=CODE,merge=1,delta=2
    98                           	psect	text55,local,class=CODE,merge=1,delta=2
    99                           	psect	text56,local,class=CODE,merge=1,delta=2
   100                           	psect	text57,local,class=CODE,merge=1,delta=2
   101                           	psect	text58,local,class=CODE,merge=1,delta=2
   102                           	psect	text59,local,class=CODE,merge=1,delta=2
   103                           	psect	text60,local,class=CODE,merge=1,delta=2
   104                           	psect	text61,local,class=CODE,merge=1,delta=2
   105                           	psect	text62,local,class=CODE,merge=1,delta=2
   106                           	psect	text63,local,class=CODE,merge=1,delta=2
   107                           	psect	text64,local,class=CODE,merge=1,delta=2
   108                           	psect	text65,local,class=CODE,merge=1,delta=2
   109                           	psect	text66,local,class=CODE,merge=1,delta=2
   110                           	psect	text67,local,class=CODE,merge=1,delta=2
   111                           	psect	text68,local,class=CODE,merge=1,delta=2
   112                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text70,local,class=CODE,merge=1,delta=2,group=1
   114                           	psect	text71,local,class=CODE,merge=1,delta=2
   115                           	psect	text72,local,class=CODE,merge=1,delta=2
   116                           	psect	text73,local,class=CODE,merge=1,delta=2
   117                           	psect	text74,local,class=CODE,merge=1,delta=2
   118                           	psect	text75,local,class=CODE,merge=1,delta=2
   119                           	psect	text76,local,class=CODE,merge=1,delta=2
   120                           	psect	text77,local,class=CODE,merge=1,delta=2
   121                           	psect	text78,local,class=CODE,merge=1,delta=2
   122                           	psect	text79,local,class=CODE,merge=1,delta=2
   123                           	psect	text80,local,class=CODE,merge=1,delta=2
   124                           	psect	text81,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text82,local,class=CODE,merge=1,delta=2
   126                           	psect	text83,local,class=CODE,merge=1,delta=2
   127                           	psect	text84,local,class=CODE,merge=1,delta=2
   128                           	psect	text85,local,class=CODE,merge=1,delta=2
   129                           	psect	text86,local,class=CODE,merge=1,delta=2
   130                           	psect	intentry,global,class=CODE,delta=2
   131                           	psect	text88,local,class=CODE,merge=1,delta=2
   132                           	psect	text89,local,class=CODE,merge=1,delta=2
   133                           	psect	text90,local,class=CODE,merge=1,delta=2
   134                           	psect	text91,local,class=CODE,merge=1,delta=2
   135                           	psect	text92,local,class=CODE,merge=1,delta=2
   136                           	psect	text93,local,class=CODE,merge=1,delta=2
   137                           	psect	text94,local,class=CODE,merge=1,delta=2
   138                           	psect	text95,local,class=CODE,merge=1,delta=2
   139                           	psect	text96,local,class=CODE,merge=1,delta=2
   140                           	psect	text97,local,class=CODE,merge=1,delta=2
   141                           	psect	text98,local,class=CODE,merge=1,delta=2
   142                           	psect	text99,local,class=CODE,merge=1,delta=2
   143                           	psect	text100,local,class=CODE,merge=1,delta=2
   144                           	psect	text101,local,class=CODE,merge=1,delta=2
   145                           	psect	text102,local,class=CODE,merge=1,delta=2
   146                           	psect	text103,local,class=CODE,merge=1,delta=2
   147                           	dabs	1,0xCA0,32
   148                           	dabs	1,0xC20,80
   149                           	dabs	1,0xBA0,80
   150                           	dabs	1,0xB20,80
   151                           	dabs	1,0xAA0,80
   152                           	dabs	1,0xA20,80
   153                           	dabs	1,0x9A0,80
   154                           	dabs	1,0x920,80
   155                           	dabs	1,0x8A0,80
   156                           	dabs	1,0x820,80
   157                           	dabs	1,0x7A0,80
   158                           	dabs	1,0x720,80
   159                           	dabs	1,0x6A0,80
   160                           	dabs	1,0x64E,34
   161                           	dabs	1,0x23EE,0,_dmxArray
   162                           	dabs	1,0x7E,2
   163  0000                     
   164                           ; Version 2.05
   165                           ; Generated 20/12/2018 GMT
   166                           ; 
   167                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   168                           ; All rights reserved.
   169                           ; 
   170                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   171                           ; 
   172                           ; Redistribution and use in source and binary forms, with or without modification, are
   173                           ; permitted provided that the following conditions are met:
   174                           ; 
   175                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   176                           ;        conditions and the following disclaimer.
   177                           ; 
   178                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   179                           ;        of conditions and the following disclaimer in the documentation and/or other
   180                           ;        materials provided with the distribution.
   181                           ; 
   182                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   183                           ;        software without specific prior written permission.
   184                           ; 
   185                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   186                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   187                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   188                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   189                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   190                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   191                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   192                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   193                           ; 
   194                           ; 
   195                           ; Code-generator required, PIC16F18446 Definitions
   196                           ; 
   197                           ; SFR Addresses
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  0008                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  008C                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  008E                     	;# 
   224  008F                     	;# 
   225  0090                     	;# 
   226  0090                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0094                     	;# 
   233  0095                     	;# 
   234  0096                     	;# 
   235  0096                     	;# 
   236  0097                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009A                     	;# 
   240  009B                     	;# 
   241  009B                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  010F                     	;# 
   253  0110                     	;# 
   254  0111                     	;# 
   255  0112                     	;# 
   256  0113                     	;# 
   257  0114                     	;# 
   258  0115                     	;# 
   259  0116                     	;# 
   260  0117                     	;# 
   261  0118                     	;# 
   262  0119                     	;# 
   263  0119                     	;# 
   264  0119                     	;# 
   265  011A                     	;# 
   266  011A                     	;# 
   267  011A                     	;# 
   268  011B                     	;# 
   269  011B                     	;# 
   270  011B                     	;# 
   271  011B                     	;# 
   272  011B                     	;# 
   273  011C                     	;# 
   274  011C                     	;# 
   275  011C                     	;# 
   276  011D                     	;# 
   277  011D                     	;# 
   278  011D                     	;# 
   279  011E                     	;# 
   280  011E                     	;# 
   281  011E                     	;# 
   282  011F                     	;# 
   283  011F                     	;# 
   284  011F                     	;# 
   285  011F                     	;# 
   286  011F                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  018E                     	;# 
   290  018F                     	;# 
   291  0190                     	;# 
   292  0191                     	;# 
   293  0192                     	;# 
   294  0196                     	;# 
   295  0197                     	;# 
   296  0198                     	;# 
   297  0199                     	;# 
   298  019A                     	;# 
   299  019B                     	;# 
   300  019C                     	;# 
   301  020C                     	;# 
   302  020D                     	;# 
   303  020E                     	;# 
   304  020E                     	;# 
   305  020F                     	;# 
   306  020F                     	;# 
   307  0210                     	;# 
   308  0210                     	;# 
   309  0211                     	;# 
   310  0211                     	;# 
   311  0212                     	;# 
   312  0213                     	;# 
   313  0214                     	;# 
   314  0214                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0216                     	;# 
   318  0216                     	;# 
   319  0217                     	;# 
   320  0217                     	;# 
   321  0218                     	;# 
   322  0219                     	;# 
   323  021A                     	;# 
   324  021A                     	;# 
   325  021B                     	;# 
   326  021B                     	;# 
   327  021C                     	;# 
   328  021C                     	;# 
   329  021D                     	;# 
   330  021D                     	;# 
   331  021E                     	;# 
   332  021F                     	;# 
   333  028C                     	;# 
   334  028C                     	;# 
   335  028D                     	;# 
   336  028D                     	;# 
   337  028E                     	;# 
   338  028F                     	;# 
   339  0290                     	;# 
   340  0291                     	;# 
   341  0292                     	;# 
   342  0292                     	;# 
   343  0293                     	;# 
   344  0293                     	;# 
   345  0294                     	;# 
   346  0295                     	;# 
   347  0296                     	;# 
   348  0297                     	;# 
   349  0298                     	;# 
   350  0298                     	;# 
   351  0299                     	;# 
   352  0299                     	;# 
   353  029A                     	;# 
   354  029B                     	;# 
   355  029C                     	;# 
   356  029D                     	;# 
   357  029F                     	;# 
   358  030C                     	;# 
   359  030C                     	;# 
   360  030D                     	;# 
   361  030E                     	;# 
   362  030F                     	;# 
   363  0310                     	;# 
   364  0310                     	;# 
   365  0311                     	;# 
   366  0312                     	;# 
   367  0313                     	;# 
   368  0314                     	;# 
   369  0314                     	;# 
   370  0315                     	;# 
   371  0316                     	;# 
   372  0317                     	;# 
   373  0318                     	;# 
   374  0318                     	;# 
   375  0319                     	;# 
   376  031A                     	;# 
   377  031B                     	;# 
   378  038C                     	;# 
   379  038C                     	;# 
   380  038D                     	;# 
   381  038E                     	;# 
   382  0390                     	;# 
   383  0390                     	;# 
   384  0391                     	;# 
   385  0392                     	;# 
   386  048C                     	;# 
   387  048C                     	;# 
   388  048D                     	;# 
   389  048E                     	;# 
   390  048F                     	;# 
   391  048F                     	;# 
   392  0490                     	;# 
   393  0491                     	;# 
   394  0492                     	;# 
   395  0492                     	;# 
   396  0493                     	;# 
   397  0494                     	;# 
   398  0495                     	;# 
   399  0495                     	;# 
   400  0496                     	;# 
   401  0497                     	;# 
   402  0498                     	;# 
   403  0499                     	;# 
   404  049A                     	;# 
   405  049B                     	;# 
   406  049C                     	;# 
   407  049D                     	;# 
   408  058C                     	;# 
   409  058C                     	;# 
   410  058D                     	;# 
   411  058E                     	;# 
   412  058F                     	;# 
   413  058F                     	;# 
   414  0590                     	;# 
   415  0591                     	;# 
   416  0592                     	;# 
   417  0593                     	;# 
   418  059C                     	;# 
   419  059C                     	;# 
   420  059D                     	;# 
   421  059D                     	;# 
   422  059E                     	;# 
   423  059F                     	;# 
   424  060C                     	;# 
   425  060C                     	;# 
   426  060D                     	;# 
   427  060D                     	;# 
   428  060E                     	;# 
   429  060F                     	;# 
   430  0610                     	;# 
   431  0611                     	;# 
   432  0612                     	;# 
   433  0613                     	;# 
   434  0614                     	;# 
   435  0616                     	;# 
   436  0616                     	;# 
   437  0617                     	;# 
   438  0617                     	;# 
   439  0618                     	;# 
   440  0619                     	;# 
   441  061A                     	;# 
   442  061B                     	;# 
   443  061C                     	;# 
   444  061D                     	;# 
   445  061E                     	;# 
   446  070C                     	;# 
   447  070D                     	;# 
   448  070E                     	;# 
   449  070F                     	;# 
   450  0710                     	;# 
   451  0711                     	;# 
   452  0712                     	;# 
   453  0713                     	;# 
   454  0714                     	;# 
   455  0716                     	;# 
   456  0717                     	;# 
   457  0718                     	;# 
   458  0719                     	;# 
   459  071A                     	;# 
   460  071B                     	;# 
   461  071C                     	;# 
   462  071D                     	;# 
   463  071E                     	;# 
   464  0796                     	;# 
   465  0797                     	;# 
   466  0798                     	;# 
   467  0799                     	;# 
   468  079A                     	;# 
   469  079B                     	;# 
   470  079C                     	;# 
   471  079D                     	;# 
   472  080C                     	;# 
   473  080D                     	;# 
   474  080E                     	;# 
   475  080F                     	;# 
   476  0810                     	;# 
   477  0811                     	;# 
   478  0812                     	;# 
   479  0813                     	;# 
   480  0814                     	;# 
   481  081A                     	;# 
   482  081A                     	;# 
   483  081B                     	;# 
   484  081C                     	;# 
   485  081C                     	;# 
   486  081D                     	;# 
   487  081E                     	;# 
   488  081F                     	;# 
   489  088C                     	;# 
   490  088D                     	;# 
   491  088E                     	;# 
   492  088F                     	;# 
   493  0890                     	;# 
   494  0891                     	;# 
   495  0892                     	;# 
   496  0893                     	;# 
   497  0895                     	;# 
   498  0896                     	;# 
   499  0897                     	;# 
   500  0898                     	;# 
   501  0899                     	;# 
   502  089A                     	;# 
   503  089B                     	;# 
   504  090C                     	;# 
   505  090E                     	;# 
   506  090F                     	;# 
   507  091F                     	;# 
   508  098F                     	;# 
   509  098F                     	;# 
   510  0990                     	;# 
   511  0991                     	;# 
   512  0992                     	;# 
   513  0993                     	;# 
   514  0994                     	;# 
   515  0995                     	;# 
   516  0996                     	;# 
   517  0997                     	;# 
   518  1E0F                     	;# 
   519  1E10                     	;# 
   520  1E11                     	;# 
   521  1E12                     	;# 
   522  1E13                     	;# 
   523  1E14                     	;# 
   524  1E15                     	;# 
   525  1E16                     	;# 
   526  1E17                     	;# 
   527  1E18                     	;# 
   528  1E19                     	;# 
   529  1E1A                     	;# 
   530  1E1B                     	;# 
   531  1E1C                     	;# 
   532  1E1D                     	;# 
   533  1E1E                     	;# 
   534  1E1F                     	;# 
   535  1E20                     	;# 
   536  1E21                     	;# 
   537  1E22                     	;# 
   538  1E23                     	;# 
   539  1E24                     	;# 
   540  1E25                     	;# 
   541  1E26                     	;# 
   542  1E27                     	;# 
   543  1E28                     	;# 
   544  1E29                     	;# 
   545  1E2A                     	;# 
   546  1E2B                     	;# 
   547  1E2C                     	;# 
   548  1E2D                     	;# 
   549  1E2E                     	;# 
   550  1E2F                     	;# 
   551  1E30                     	;# 
   552  1E31                     	;# 
   553  1E32                     	;# 
   554  1E33                     	;# 
   555  1E34                     	;# 
   556  1E35                     	;# 
   557  1E36                     	;# 
   558  1E37                     	;# 
   559  1E8F                     	;# 
   560  1E90                     	;# 
   561  1E91                     	;# 
   562  1E92                     	;# 
   563  1E93                     	;# 
   564  1E94                     	;# 
   565  1E95                     	;# 
   566  1E96                     	;# 
   567  1E97                     	;# 
   568  1E9C                     	;# 
   569  1E9D                     	;# 
   570  1E9E                     	;# 
   571  1EA1                     	;# 
   572  1EA2                     	;# 
   573  1EA3                     	;# 
   574  1EA4                     	;# 
   575  1EA9                     	;# 
   576  1EAA                     	;# 
   577  1EB1                     	;# 
   578  1EB2                     	;# 
   579  1EB8                     	;# 
   580  1EB9                     	;# 
   581  1EBA                     	;# 
   582  1EBB                     	;# 
   583  1EBC                     	;# 
   584  1EBD                     	;# 
   585  1EBE                     	;# 
   586  1EC3                     	;# 
   587  1EC5                     	;# 
   588  1EC6                     	;# 
   589  1EC7                     	;# 
   590  1EC8                     	;# 
   591  1EC9                     	;# 
   592  1ECA                     	;# 
   593  1ECB                     	;# 
   594  1ECB                     	;# 
   595  1ECB                     	;# 
   596  1ECC                     	;# 
   597  1ECC                     	;# 
   598  1ECC                     	;# 
   599  1F10                     	;# 
   600  1F11                     	;# 
   601  1F12                     	;# 
   602  1F14                     	;# 
   603  1F15                     	;# 
   604  1F1C                     	;# 
   605  1F1D                     	;# 
   606  1F1E                     	;# 
   607  1F1F                     	;# 
   608  1F20                     	;# 
   609  1F21                     	;# 
   610  1F22                     	;# 
   611  1F23                     	;# 
   612  1F24                     	;# 
   613  1F25                     	;# 
   614  1F26                     	;# 
   615  1F27                     	;# 
   616  1F38                     	;# 
   617  1F39                     	;# 
   618  1F3A                     	;# 
   619  1F3B                     	;# 
   620  1F3C                     	;# 
   621  1F3D                     	;# 
   622  1F3E                     	;# 
   623  1F3F                     	;# 
   624  1F43                     	;# 
   625  1F44                     	;# 
   626  1F45                     	;# 
   627  1F46                     	;# 
   628  1F47                     	;# 
   629  1F48                     	;# 
   630  1F49                     	;# 
   631  1F4A                     	;# 
   632  1F4E                     	;# 
   633  1F4F                     	;# 
   634  1F50                     	;# 
   635  1F51                     	;# 
   636  1F52                     	;# 
   637  1F53                     	;# 
   638  1F54                     	;# 
   639  1F55                     	;# 
   640  1FE4                     	;# 
   641  1FE5                     	;# 
   642  1FE6                     	;# 
   643  1FE7                     	;# 
   644  1FE8                     	;# 
   645  1FE8                     	;# 
   646  1FE9                     	;# 
   647  1FEA                     	;# 
   648  1FEB                     	;# 
   649  1FED                     	;# 
   650  1FEE                     	;# 
   651  1FEF                     	;# 
   652  0000                     	;# 
   653  0001                     	;# 
   654  0002                     	;# 
   655  0003                     	;# 
   656  0004                     	;# 
   657  0005                     	;# 
   658  0006                     	;# 
   659  0007                     	;# 
   660  0008                     	;# 
   661  0009                     	;# 
   662  000A                     	;# 
   663  000B                     	;# 
   664  000C                     	;# 
   665  000D                     	;# 
   666  000E                     	;# 
   667  0012                     	;# 
   668  0013                     	;# 
   669  0014                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  008C                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  008E                     	;# 
   678  008F                     	;# 
   679  0090                     	;# 
   680  0090                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0092                     	;# 
   684  0093                     	;# 
   685  0094                     	;# 
   686  0094                     	;# 
   687  0095                     	;# 
   688  0096                     	;# 
   689  0096                     	;# 
   690  0097                     	;# 
   691  0098                     	;# 
   692  0099                     	;# 
   693  009A                     	;# 
   694  009B                     	;# 
   695  009B                     	;# 
   696  009C                     	;# 
   697  009D                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  009F                     	;# 
   701  010C                     	;# 
   702  010C                     	;# 
   703  010D                     	;# 
   704  010E                     	;# 
   705  010F                     	;# 
   706  010F                     	;# 
   707  0110                     	;# 
   708  0111                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0115                     	;# 
   713  0116                     	;# 
   714  0117                     	;# 
   715  0118                     	;# 
   716  0119                     	;# 
   717  0119                     	;# 
   718  0119                     	;# 
   719  011A                     	;# 
   720  011A                     	;# 
   721  011A                     	;# 
   722  011B                     	;# 
   723  011B                     	;# 
   724  011B                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011C                     	;# 
   728  011C                     	;# 
   729  011C                     	;# 
   730  011D                     	;# 
   731  011D                     	;# 
   732  011D                     	;# 
   733  011E                     	;# 
   734  011E                     	;# 
   735  011E                     	;# 
   736  011F                     	;# 
   737  011F                     	;# 
   738  011F                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  018C                     	;# 
   742  018D                     	;# 
   743  018E                     	;# 
   744  018F                     	;# 
   745  0190                     	;# 
   746  0191                     	;# 
   747  0192                     	;# 
   748  0196                     	;# 
   749  0197                     	;# 
   750  0198                     	;# 
   751  0199                     	;# 
   752  019A                     	;# 
   753  019B                     	;# 
   754  019C                     	;# 
   755  020C                     	;# 
   756  020D                     	;# 
   757  020E                     	;# 
   758  020E                     	;# 
   759  020F                     	;# 
   760  020F                     	;# 
   761  0210                     	;# 
   762  0210                     	;# 
   763  0211                     	;# 
   764  0211                     	;# 
   765  0212                     	;# 
   766  0213                     	;# 
   767  0214                     	;# 
   768  0214                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0216                     	;# 
   772  0216                     	;# 
   773  0217                     	;# 
   774  0217                     	;# 
   775  0218                     	;# 
   776  0219                     	;# 
   777  021A                     	;# 
   778  021A                     	;# 
   779  021B                     	;# 
   780  021B                     	;# 
   781  021C                     	;# 
   782  021C                     	;# 
   783  021D                     	;# 
   784  021D                     	;# 
   785  021E                     	;# 
   786  021F                     	;# 
   787  028C                     	;# 
   788  028C                     	;# 
   789  028D                     	;# 
   790  028D                     	;# 
   791  028E                     	;# 
   792  028F                     	;# 
   793  0290                     	;# 
   794  0291                     	;# 
   795  0292                     	;# 
   796  0292                     	;# 
   797  0293                     	;# 
   798  0293                     	;# 
   799  0294                     	;# 
   800  0295                     	;# 
   801  0296                     	;# 
   802  0297                     	;# 
   803  0298                     	;# 
   804  0298                     	;# 
   805  0299                     	;# 
   806  0299                     	;# 
   807  029A                     	;# 
   808  029B                     	;# 
   809  029C                     	;# 
   810  029D                     	;# 
   811  029F                     	;# 
   812  030C                     	;# 
   813  030C                     	;# 
   814  030D                     	;# 
   815  030E                     	;# 
   816  030F                     	;# 
   817  0310                     	;# 
   818  0310                     	;# 
   819  0311                     	;# 
   820  0312                     	;# 
   821  0313                     	;# 
   822  0314                     	;# 
   823  0314                     	;# 
   824  0315                     	;# 
   825  0316                     	;# 
   826  0317                     	;# 
   827  0318                     	;# 
   828  0318                     	;# 
   829  0319                     	;# 
   830  031A                     	;# 
   831  031B                     	;# 
   832  038C                     	;# 
   833  038C                     	;# 
   834  038D                     	;# 
   835  038E                     	;# 
   836  0390                     	;# 
   837  0390                     	;# 
   838  0391                     	;# 
   839  0392                     	;# 
   840  048C                     	;# 
   841  048C                     	;# 
   842  048D                     	;# 
   843  048E                     	;# 
   844  048F                     	;# 
   845  048F                     	;# 
   846  0490                     	;# 
   847  0491                     	;# 
   848  0492                     	;# 
   849  0492                     	;# 
   850  0493                     	;# 
   851  0494                     	;# 
   852  0495                     	;# 
   853  0495                     	;# 
   854  0496                     	;# 
   855  0497                     	;# 
   856  0498                     	;# 
   857  0499                     	;# 
   858  049A                     	;# 
   859  049B                     	;# 
   860  049C                     	;# 
   861  049D                     	;# 
   862  058C                     	;# 
   863  058C                     	;# 
   864  058D                     	;# 
   865  058E                     	;# 
   866  058F                     	;# 
   867  058F                     	;# 
   868  0590                     	;# 
   869  0591                     	;# 
   870  0592                     	;# 
   871  0593                     	;# 
   872  059C                     	;# 
   873  059C                     	;# 
   874  059D                     	;# 
   875  059D                     	;# 
   876  059E                     	;# 
   877  059F                     	;# 
   878  060C                     	;# 
   879  060C                     	;# 
   880  060D                     	;# 
   881  060D                     	;# 
   882  060E                     	;# 
   883  060F                     	;# 
   884  0610                     	;# 
   885  0611                     	;# 
   886  0612                     	;# 
   887  0613                     	;# 
   888  0614                     	;# 
   889  0616                     	;# 
   890  0616                     	;# 
   891  0617                     	;# 
   892  0617                     	;# 
   893  0618                     	;# 
   894  0619                     	;# 
   895  061A                     	;# 
   896  061B                     	;# 
   897  061C                     	;# 
   898  061D                     	;# 
   899  061E                     	;# 
   900  070C                     	;# 
   901  070D                     	;# 
   902  070E                     	;# 
   903  070F                     	;# 
   904  0710                     	;# 
   905  0711                     	;# 
   906  0712                     	;# 
   907  0713                     	;# 
   908  0714                     	;# 
   909  0716                     	;# 
   910  0717                     	;# 
   911  0718                     	;# 
   912  0719                     	;# 
   913  071A                     	;# 
   914  071B                     	;# 
   915  071C                     	;# 
   916  071D                     	;# 
   917  071E                     	;# 
   918  0796                     	;# 
   919  0797                     	;# 
   920  0798                     	;# 
   921  0799                     	;# 
   922  079A                     	;# 
   923  079B                     	;# 
   924  079C                     	;# 
   925  079D                     	;# 
   926  080C                     	;# 
   927  080D                     	;# 
   928  080E                     	;# 
   929  080F                     	;# 
   930  0810                     	;# 
   931  0811                     	;# 
   932  0812                     	;# 
   933  0813                     	;# 
   934  0814                     	;# 
   935  081A                     	;# 
   936  081A                     	;# 
   937  081B                     	;# 
   938  081C                     	;# 
   939  081C                     	;# 
   940  081D                     	;# 
   941  081E                     	;# 
   942  081F                     	;# 
   943  088C                     	;# 
   944  088D                     	;# 
   945  088E                     	;# 
   946  088F                     	;# 
   947  0890                     	;# 
   948  0891                     	;# 
   949  0892                     	;# 
   950  0893                     	;# 
   951  0895                     	;# 
   952  0896                     	;# 
   953  0897                     	;# 
   954  0898                     	;# 
   955  0899                     	;# 
   956  089A                     	;# 
   957  089B                     	;# 
   958  090C                     	;# 
   959  090E                     	;# 
   960  090F                     	;# 
   961  091F                     	;# 
   962  098F                     	;# 
   963  098F                     	;# 
   964  0990                     	;# 
   965  0991                     	;# 
   966  0992                     	;# 
   967  0993                     	;# 
   968  0994                     	;# 
   969  0995                     	;# 
   970  0996                     	;# 
   971  0997                     	;# 
   972  1E0F                     	;# 
   973  1E10                     	;# 
   974  1E11                     	;# 
   975  1E12                     	;# 
   976  1E13                     	;# 
   977  1E14                     	;# 
   978  1E15                     	;# 
   979  1E16                     	;# 
   980  1E17                     	;# 
   981  1E18                     	;# 
   982  1E19                     	;# 
   983  1E1A                     	;# 
   984  1E1B                     	;# 
   985  1E1C                     	;# 
   986  1E1D                     	;# 
   987  1E1E                     	;# 
   988  1E1F                     	;# 
   989  1E20                     	;# 
   990  1E21                     	;# 
   991  1E22                     	;# 
   992  1E23                     	;# 
   993  1E24                     	;# 
   994  1E25                     	;# 
   995  1E26                     	;# 
   996  1E27                     	;# 
   997  1E28                     	;# 
   998  1E29                     	;# 
   999  1E2A                     	;# 
  1000  1E2B                     	;# 
  1001  1E2C                     	;# 
  1002  1E2D                     	;# 
  1003  1E2E                     	;# 
  1004  1E2F                     	;# 
  1005  1E30                     	;# 
  1006  1E31                     	;# 
  1007  1E32                     	;# 
  1008  1E33                     	;# 
  1009  1E34                     	;# 
  1010  1E35                     	;# 
  1011  1E36                     	;# 
  1012  1E37                     	;# 
  1013  1E8F                     	;# 
  1014  1E90                     	;# 
  1015  1E91                     	;# 
  1016  1E92                     	;# 
  1017  1E93                     	;# 
  1018  1E94                     	;# 
  1019  1E95                     	;# 
  1020  1E96                     	;# 
  1021  1E97                     	;# 
  1022  1E9C                     	;# 
  1023  1E9D                     	;# 
  1024  1E9E                     	;# 
  1025  1EA1                     	;# 
  1026  1EA2                     	;# 
  1027  1EA3                     	;# 
  1028  1EA4                     	;# 
  1029  1EA9                     	;# 
  1030  1EAA                     	;# 
  1031  1EB1                     	;# 
  1032  1EB2                     	;# 
  1033  1EB8                     	;# 
  1034  1EB9                     	;# 
  1035  1EBA                     	;# 
  1036  1EBB                     	;# 
  1037  1EBC                     	;# 
  1038  1EBD                     	;# 
  1039  1EBE                     	;# 
  1040  1EC3                     	;# 
  1041  1EC5                     	;# 
  1042  1EC6                     	;# 
  1043  1EC7                     	;# 
  1044  1EC8                     	;# 
  1045  1EC9                     	;# 
  1046  1ECA                     	;# 
  1047  1ECB                     	;# 
  1048  1ECB                     	;# 
  1049  1ECB                     	;# 
  1050  1ECC                     	;# 
  1051  1ECC                     	;# 
  1052  1ECC                     	;# 
  1053  1F10                     	;# 
  1054  1F11                     	;# 
  1055  1F12                     	;# 
  1056  1F14                     	;# 
  1057  1F15                     	;# 
  1058  1F1C                     	;# 
  1059  1F1D                     	;# 
  1060  1F1E                     	;# 
  1061  1F1F                     	;# 
  1062  1F20                     	;# 
  1063  1F21                     	;# 
  1064  1F22                     	;# 
  1065  1F23                     	;# 
  1066  1F24                     	;# 
  1067  1F25                     	;# 
  1068  1F26                     	;# 
  1069  1F27                     	;# 
  1070  1F38                     	;# 
  1071  1F39                     	;# 
  1072  1F3A                     	;# 
  1073  1F3B                     	;# 
  1074  1F3C                     	;# 
  1075  1F3D                     	;# 
  1076  1F3E                     	;# 
  1077  1F3F                     	;# 
  1078  1F43                     	;# 
  1079  1F44                     	;# 
  1080  1F45                     	;# 
  1081  1F46                     	;# 
  1082  1F47                     	;# 
  1083  1F48                     	;# 
  1084  1F49                     	;# 
  1085  1F4A                     	;# 
  1086  1F4E                     	;# 
  1087  1F4F                     	;# 
  1088  1F50                     	;# 
  1089  1F51                     	;# 
  1090  1F52                     	;# 
  1091  1F53                     	;# 
  1092  1F54                     	;# 
  1093  1F55                     	;# 
  1094  1FE4                     	;# 
  1095  1FE5                     	;# 
  1096  1FE6                     	;# 
  1097  1FE7                     	;# 
  1098  1FE8                     	;# 
  1099  1FE8                     	;# 
  1100  1FE9                     	;# 
  1101  1FEA                     	;# 
  1102  1FEB                     	;# 
  1103  1FED                     	;# 
  1104  1FEE                     	;# 
  1105  1FEF                     	;# 
  1106  0000                     	;# 
  1107  0001                     	;# 
  1108  0002                     	;# 
  1109  0003                     	;# 
  1110  0004                     	;# 
  1111  0005                     	;# 
  1112  0006                     	;# 
  1113  0007                     	;# 
  1114  0008                     	;# 
  1115  0009                     	;# 
  1116  000A                     	;# 
  1117  000B                     	;# 
  1118  000C                     	;# 
  1119  000D                     	;# 
  1120  000E                     	;# 
  1121  0012                     	;# 
  1122  0013                     	;# 
  1123  0014                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  008C                     	;# 
  1128  008C                     	;# 
  1129  008D                     	;# 
  1130  008E                     	;# 
  1131  008E                     	;# 
  1132  008F                     	;# 
  1133  0090                     	;# 
  1134  0090                     	;# 
  1135  0091                     	;# 
  1136  0092                     	;# 
  1137  0092                     	;# 
  1138  0093                     	;# 
  1139  0094                     	;# 
  1140  0094                     	;# 
  1141  0095                     	;# 
  1142  0096                     	;# 
  1143  0096                     	;# 
  1144  0097                     	;# 
  1145  0098                     	;# 
  1146  0099                     	;# 
  1147  009A                     	;# 
  1148  009B                     	;# 
  1149  009B                     	;# 
  1150  009C                     	;# 
  1151  009D                     	;# 
  1152  009D                     	;# 
  1153  009E                     	;# 
  1154  009F                     	;# 
  1155  010C                     	;# 
  1156  010C                     	;# 
  1157  010D                     	;# 
  1158  010E                     	;# 
  1159  010F                     	;# 
  1160  010F                     	;# 
  1161  0110                     	;# 
  1162  0111                     	;# 
  1163  0112                     	;# 
  1164  0113                     	;# 
  1165  0114                     	;# 
  1166  0115                     	;# 
  1167  0116                     	;# 
  1168  0117                     	;# 
  1169  0118                     	;# 
  1170  0119                     	;# 
  1171  0119                     	;# 
  1172  0119                     	;# 
  1173  011A                     	;# 
  1174  011A                     	;# 
  1175  011A                     	;# 
  1176  011B                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011C                     	;# 
  1182  011C                     	;# 
  1183  011C                     	;# 
  1184  011D                     	;# 
  1185  011D                     	;# 
  1186  011D                     	;# 
  1187  011E                     	;# 
  1188  011E                     	;# 
  1189  011E                     	;# 
  1190  011F                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  018C                     	;# 
  1196  018D                     	;# 
  1197  018E                     	;# 
  1198  018F                     	;# 
  1199  0190                     	;# 
  1200  0191                     	;# 
  1201  0192                     	;# 
  1202  0196                     	;# 
  1203  0197                     	;# 
  1204  0198                     	;# 
  1205  0199                     	;# 
  1206  019A                     	;# 
  1207  019B                     	;# 
  1208  019C                     	;# 
  1209  020C                     	;# 
  1210  020D                     	;# 
  1211  020E                     	;# 
  1212  020E                     	;# 
  1213  020F                     	;# 
  1214  020F                     	;# 
  1215  0210                     	;# 
  1216  0210                     	;# 
  1217  0211                     	;# 
  1218  0211                     	;# 
  1219  0212                     	;# 
  1220  0213                     	;# 
  1221  0214                     	;# 
  1222  0214                     	;# 
  1223  0215                     	;# 
  1224  0215                     	;# 
  1225  0216                     	;# 
  1226  0216                     	;# 
  1227  0217                     	;# 
  1228  0217                     	;# 
  1229  0218                     	;# 
  1230  0219                     	;# 
  1231  021A                     	;# 
  1232  021A                     	;# 
  1233  021B                     	;# 
  1234  021B                     	;# 
  1235  021C                     	;# 
  1236  021C                     	;# 
  1237  021D                     	;# 
  1238  021D                     	;# 
  1239  021E                     	;# 
  1240  021F                     	;# 
  1241  028C                     	;# 
  1242  028C                     	;# 
  1243  028D                     	;# 
  1244  028D                     	;# 
  1245  028E                     	;# 
  1246  028F                     	;# 
  1247  0290                     	;# 
  1248  0291                     	;# 
  1249  0292                     	;# 
  1250  0292                     	;# 
  1251  0293                     	;# 
  1252  0293                     	;# 
  1253  0294                     	;# 
  1254  0295                     	;# 
  1255  0296                     	;# 
  1256  0297                     	;# 
  1257  0298                     	;# 
  1258  0298                     	;# 
  1259  0299                     	;# 
  1260  0299                     	;# 
  1261  029A                     	;# 
  1262  029B                     	;# 
  1263  029C                     	;# 
  1264  029D                     	;# 
  1265  029F                     	;# 
  1266  030C                     	;# 
  1267  030C                     	;# 
  1268  030D                     	;# 
  1269  030E                     	;# 
  1270  030F                     	;# 
  1271  0310                     	;# 
  1272  0310                     	;# 
  1273  0311                     	;# 
  1274  0312                     	;# 
  1275  0313                     	;# 
  1276  0314                     	;# 
  1277  0314                     	;# 
  1278  0315                     	;# 
  1279  0316                     	;# 
  1280  0317                     	;# 
  1281  0318                     	;# 
  1282  0318                     	;# 
  1283  0319                     	;# 
  1284  031A                     	;# 
  1285  031B                     	;# 
  1286  038C                     	;# 
  1287  038C                     	;# 
  1288  038D                     	;# 
  1289  038E                     	;# 
  1290  0390                     	;# 
  1291  0390                     	;# 
  1292  0391                     	;# 
  1293  0392                     	;# 
  1294  048C                     	;# 
  1295  048C                     	;# 
  1296  048D                     	;# 
  1297  048E                     	;# 
  1298  048F                     	;# 
  1299  048F                     	;# 
  1300  0490                     	;# 
  1301  0491                     	;# 
  1302  0492                     	;# 
  1303  0492                     	;# 
  1304  0493                     	;# 
  1305  0494                     	;# 
  1306  0495                     	;# 
  1307  0495                     	;# 
  1308  0496                     	;# 
  1309  0497                     	;# 
  1310  0498                     	;# 
  1311  0499                     	;# 
  1312  049A                     	;# 
  1313  049B                     	;# 
  1314  049C                     	;# 
  1315  049D                     	;# 
  1316  058C                     	;# 
  1317  058C                     	;# 
  1318  058D                     	;# 
  1319  058E                     	;# 
  1320  058F                     	;# 
  1321  058F                     	;# 
  1322  0590                     	;# 
  1323  0591                     	;# 
  1324  0592                     	;# 
  1325  0593                     	;# 
  1326  059C                     	;# 
  1327  059C                     	;# 
  1328  059D                     	;# 
  1329  059D                     	;# 
  1330  059E                     	;# 
  1331  059F                     	;# 
  1332  060C                     	;# 
  1333  060C                     	;# 
  1334  060D                     	;# 
  1335  060D                     	;# 
  1336  060E                     	;# 
  1337  060F                     	;# 
  1338  0610                     	;# 
  1339  0611                     	;# 
  1340  0612                     	;# 
  1341  0613                     	;# 
  1342  0614                     	;# 
  1343  0616                     	;# 
  1344  0616                     	;# 
  1345  0617                     	;# 
  1346  0617                     	;# 
  1347  0618                     	;# 
  1348  0619                     	;# 
  1349  061A                     	;# 
  1350  061B                     	;# 
  1351  061C                     	;# 
  1352  061D                     	;# 
  1353  061E                     	;# 
  1354  070C                     	;# 
  1355  070D                     	;# 
  1356  070E                     	;# 
  1357  070F                     	;# 
  1358  0710                     	;# 
  1359  0711                     	;# 
  1360  0712                     	;# 
  1361  0713                     	;# 
  1362  0714                     	;# 
  1363  0716                     	;# 
  1364  0717                     	;# 
  1365  0718                     	;# 
  1366  0719                     	;# 
  1367  071A                     	;# 
  1368  071B                     	;# 
  1369  071C                     	;# 
  1370  071D                     	;# 
  1371  071E                     	;# 
  1372  0796                     	;# 
  1373  0797                     	;# 
  1374  0798                     	;# 
  1375  0799                     	;# 
  1376  079A                     	;# 
  1377  079B                     	;# 
  1378  079C                     	;# 
  1379  079D                     	;# 
  1380  080C                     	;# 
  1381  080D                     	;# 
  1382  080E                     	;# 
  1383  080F                     	;# 
  1384  0810                     	;# 
  1385  0811                     	;# 
  1386  0812                     	;# 
  1387  0813                     	;# 
  1388  0814                     	;# 
  1389  081A                     	;# 
  1390  081A                     	;# 
  1391  081B                     	;# 
  1392  081C                     	;# 
  1393  081C                     	;# 
  1394  081D                     	;# 
  1395  081E                     	;# 
  1396  081F                     	;# 
  1397  088C                     	;# 
  1398  088D                     	;# 
  1399  088E                     	;# 
  1400  088F                     	;# 
  1401  0890                     	;# 
  1402  0891                     	;# 
  1403  0892                     	;# 
  1404  0893                     	;# 
  1405  0895                     	;# 
  1406  0896                     	;# 
  1407  0897                     	;# 
  1408  0898                     	;# 
  1409  0899                     	;# 
  1410  089A                     	;# 
  1411  089B                     	;# 
  1412  090C                     	;# 
  1413  090E                     	;# 
  1414  090F                     	;# 
  1415  091F                     	;# 
  1416  098F                     	;# 
  1417  098F                     	;# 
  1418  0990                     	;# 
  1419  0991                     	;# 
  1420  0992                     	;# 
  1421  0993                     	;# 
  1422  0994                     	;# 
  1423  0995                     	;# 
  1424  0996                     	;# 
  1425  0997                     	;# 
  1426  1E0F                     	;# 
  1427  1E10                     	;# 
  1428  1E11                     	;# 
  1429  1E12                     	;# 
  1430  1E13                     	;# 
  1431  1E14                     	;# 
  1432  1E15                     	;# 
  1433  1E16                     	;# 
  1434  1E17                     	;# 
  1435  1E18                     	;# 
  1436  1E19                     	;# 
  1437  1E1A                     	;# 
  1438  1E1B                     	;# 
  1439  1E1C                     	;# 
  1440  1E1D                     	;# 
  1441  1E1E                     	;# 
  1442  1E1F                     	;# 
  1443  1E20                     	;# 
  1444  1E21                     	;# 
  1445  1E22                     	;# 
  1446  1E23                     	;# 
  1447  1E24                     	;# 
  1448  1E25                     	;# 
  1449  1E26                     	;# 
  1450  1E27                     	;# 
  1451  1E28                     	;# 
  1452  1E29                     	;# 
  1453  1E2A                     	;# 
  1454  1E2B                     	;# 
  1455  1E2C                     	;# 
  1456  1E2D                     	;# 
  1457  1E2E                     	;# 
  1458  1E2F                     	;# 
  1459  1E30                     	;# 
  1460  1E31                     	;# 
  1461  1E32                     	;# 
  1462  1E33                     	;# 
  1463  1E34                     	;# 
  1464  1E35                     	;# 
  1465  1E36                     	;# 
  1466  1E37                     	;# 
  1467  1E8F                     	;# 
  1468  1E90                     	;# 
  1469  1E91                     	;# 
  1470  1E92                     	;# 
  1471  1E93                     	;# 
  1472  1E94                     	;# 
  1473  1E95                     	;# 
  1474  1E96                     	;# 
  1475  1E97                     	;# 
  1476  1E9C                     	;# 
  1477  1E9D                     	;# 
  1478  1E9E                     	;# 
  1479  1EA1                     	;# 
  1480  1EA2                     	;# 
  1481  1EA3                     	;# 
  1482  1EA4                     	;# 
  1483  1EA9                     	;# 
  1484  1EAA                     	;# 
  1485  1EB1                     	;# 
  1486  1EB2                     	;# 
  1487  1EB8                     	;# 
  1488  1EB9                     	;# 
  1489  1EBA                     	;# 
  1490  1EBB                     	;# 
  1491  1EBC                     	;# 
  1492  1EBD                     	;# 
  1493  1EBE                     	;# 
  1494  1EC3                     	;# 
  1495  1EC5                     	;# 
  1496  1EC6                     	;# 
  1497  1EC7                     	;# 
  1498  1EC8                     	;# 
  1499  1EC9                     	;# 
  1500  1ECA                     	;# 
  1501  1ECB                     	;# 
  1502  1ECB                     	;# 
  1503  1ECB                     	;# 
  1504  1ECC                     	;# 
  1505  1ECC                     	;# 
  1506  1ECC                     	;# 
  1507  1F10                     	;# 
  1508  1F11                     	;# 
  1509  1F12                     	;# 
  1510  1F14                     	;# 
  1511  1F15                     	;# 
  1512  1F1C                     	;# 
  1513  1F1D                     	;# 
  1514  1F1E                     	;# 
  1515  1F1F                     	;# 
  1516  1F20                     	;# 
  1517  1F21                     	;# 
  1518  1F22                     	;# 
  1519  1F23                     	;# 
  1520  1F24                     	;# 
  1521  1F25                     	;# 
  1522  1F26                     	;# 
  1523  1F27                     	;# 
  1524  1F38                     	;# 
  1525  1F39                     	;# 
  1526  1F3A                     	;# 
  1527  1F3B                     	;# 
  1528  1F3C                     	;# 
  1529  1F3D                     	;# 
  1530  1F3E                     	;# 
  1531  1F3F                     	;# 
  1532  1F43                     	;# 
  1533  1F44                     	;# 
  1534  1F45                     	;# 
  1535  1F46                     	;# 
  1536  1F47                     	;# 
  1537  1F48                     	;# 
  1538  1F49                     	;# 
  1539  1F4A                     	;# 
  1540  1F4E                     	;# 
  1541  1F4F                     	;# 
  1542  1F50                     	;# 
  1543  1F51                     	;# 
  1544  1F52                     	;# 
  1545  1F53                     	;# 
  1546  1F54                     	;# 
  1547  1F55                     	;# 
  1548  1FE4                     	;# 
  1549  1FE5                     	;# 
  1550  1FE6                     	;# 
  1551  1FE7                     	;# 
  1552  1FE8                     	;# 
  1553  1FE8                     	;# 
  1554  1FE9                     	;# 
  1555  1FEA                     	;# 
  1556  1FEB                     	;# 
  1557  1FED                     	;# 
  1558  1FEE                     	;# 
  1559  1FEF                     	;# 
  1560  0000                     	;# 
  1561  0001                     	;# 
  1562  0002                     	;# 
  1563  0003                     	;# 
  1564  0004                     	;# 
  1565  0005                     	;# 
  1566  0006                     	;# 
  1567  0007                     	;# 
  1568  0008                     	;# 
  1569  0009                     	;# 
  1570  000A                     	;# 
  1571  000B                     	;# 
  1572  000C                     	;# 
  1573  000D                     	;# 
  1574  000E                     	;# 
  1575  0012                     	;# 
  1576  0013                     	;# 
  1577  0014                     	;# 
  1578  0018                     	;# 
  1579  0019                     	;# 
  1580  001A                     	;# 
  1581  008C                     	;# 
  1582  008C                     	;# 
  1583  008D                     	;# 
  1584  008E                     	;# 
  1585  008E                     	;# 
  1586  008F                     	;# 
  1587  0090                     	;# 
  1588  0090                     	;# 
  1589  0091                     	;# 
  1590  0092                     	;# 
  1591  0092                     	;# 
  1592  0093                     	;# 
  1593  0094                     	;# 
  1594  0094                     	;# 
  1595  0095                     	;# 
  1596  0096                     	;# 
  1597  0096                     	;# 
  1598  0097                     	;# 
  1599  0098                     	;# 
  1600  0099                     	;# 
  1601  009A                     	;# 
  1602  009B                     	;# 
  1603  009B                     	;# 
  1604  009C                     	;# 
  1605  009D                     	;# 
  1606  009D                     	;# 
  1607  009E                     	;# 
  1608  009F                     	;# 
  1609  010C                     	;# 
  1610  010C                     	;# 
  1611  010D                     	;# 
  1612  010E                     	;# 
  1613  010F                     	;# 
  1614  010F                     	;# 
  1615  0110                     	;# 
  1616  0111                     	;# 
  1617  0112                     	;# 
  1618  0113                     	;# 
  1619  0114                     	;# 
  1620  0115                     	;# 
  1621  0116                     	;# 
  1622  0117                     	;# 
  1623  0118                     	;# 
  1624  0119                     	;# 
  1625  0119                     	;# 
  1626  0119                     	;# 
  1627  011A                     	;# 
  1628  011A                     	;# 
  1629  011A                     	;# 
  1630  011B                     	;# 
  1631  011B                     	;# 
  1632  011B                     	;# 
  1633  011B                     	;# 
  1634  011B                     	;# 
  1635  011C                     	;# 
  1636  011C                     	;# 
  1637  011C                     	;# 
  1638  011D                     	;# 
  1639  011D                     	;# 
  1640  011D                     	;# 
  1641  011E                     	;# 
  1642  011E                     	;# 
  1643  011E                     	;# 
  1644  011F                     	;# 
  1645  011F                     	;# 
  1646  011F                     	;# 
  1647  011F                     	;# 
  1648  011F                     	;# 
  1649  018C                     	;# 
  1650  018D                     	;# 
  1651  018E                     	;# 
  1652  018F                     	;# 
  1653  0190                     	;# 
  1654  0191                     	;# 
  1655  0192                     	;# 
  1656  0196                     	;# 
  1657  0197                     	;# 
  1658  0198                     	;# 
  1659  0199                     	;# 
  1660  019A                     	;# 
  1661  019B                     	;# 
  1662  019C                     	;# 
  1663  020C                     	;# 
  1664  020D                     	;# 
  1665  020E                     	;# 
  1666  020E                     	;# 
  1667  020F                     	;# 
  1668  020F                     	;# 
  1669  0210                     	;# 
  1670  0210                     	;# 
  1671  0211                     	;# 
  1672  0211                     	;# 
  1673  0212                     	;# 
  1674  0213                     	;# 
  1675  0214                     	;# 
  1676  0214                     	;# 
  1677  0215                     	;# 
  1678  0215                     	;# 
  1679  0216                     	;# 
  1680  0216                     	;# 
  1681  0217                     	;# 
  1682  0217                     	;# 
  1683  0218                     	;# 
  1684  0219                     	;# 
  1685  021A                     	;# 
  1686  021A                     	;# 
  1687  021B                     	;# 
  1688  021B                     	;# 
  1689  021C                     	;# 
  1690  021C                     	;# 
  1691  021D                     	;# 
  1692  021D                     	;# 
  1693  021E                     	;# 
  1694  021F                     	;# 
  1695  028C                     	;# 
  1696  028C                     	;# 
  1697  028D                     	;# 
  1698  028D                     	;# 
  1699  028E                     	;# 
  1700  028F                     	;# 
  1701  0290                     	;# 
  1702  0291                     	;# 
  1703  0292                     	;# 
  1704  0292                     	;# 
  1705  0293                     	;# 
  1706  0293                     	;# 
  1707  0294                     	;# 
  1708  0295                     	;# 
  1709  0296                     	;# 
  1710  0297                     	;# 
  1711  0298                     	;# 
  1712  0298                     	;# 
  1713  0299                     	;# 
  1714  0299                     	;# 
  1715  029A                     	;# 
  1716  029B                     	;# 
  1717  029C                     	;# 
  1718  029D                     	;# 
  1719  029F                     	;# 
  1720  030C                     	;# 
  1721  030C                     	;# 
  1722  030D                     	;# 
  1723  030E                     	;# 
  1724  030F                     	;# 
  1725  0310                     	;# 
  1726  0310                     	;# 
  1727  0311                     	;# 
  1728  0312                     	;# 
  1729  0313                     	;# 
  1730  0314                     	;# 
  1731  0314                     	;# 
  1732  0315                     	;# 
  1733  0316                     	;# 
  1734  0317                     	;# 
  1735  0318                     	;# 
  1736  0318                     	;# 
  1737  0319                     	;# 
  1738  031A                     	;# 
  1739  031B                     	;# 
  1740  038C                     	;# 
  1741  038C                     	;# 
  1742  038D                     	;# 
  1743  038E                     	;# 
  1744  0390                     	;# 
  1745  0390                     	;# 
  1746  0391                     	;# 
  1747  0392                     	;# 
  1748  048C                     	;# 
  1749  048C                     	;# 
  1750  048D                     	;# 
  1751  048E                     	;# 
  1752  048F                     	;# 
  1753  048F                     	;# 
  1754  0490                     	;# 
  1755  0491                     	;# 
  1756  0492                     	;# 
  1757  0492                     	;# 
  1758  0493                     	;# 
  1759  0494                     	;# 
  1760  0495                     	;# 
  1761  0495                     	;# 
  1762  0496                     	;# 
  1763  0497                     	;# 
  1764  0498                     	;# 
  1765  0499                     	;# 
  1766  049A                     	;# 
  1767  049B                     	;# 
  1768  049C                     	;# 
  1769  049D                     	;# 
  1770  058C                     	;# 
  1771  058C                     	;# 
  1772  058D                     	;# 
  1773  058E                     	;# 
  1774  058F                     	;# 
  1775  058F                     	;# 
  1776  0590                     	;# 
  1777  0591                     	;# 
  1778  0592                     	;# 
  1779  0593                     	;# 
  1780  059C                     	;# 
  1781  059C                     	;# 
  1782  059D                     	;# 
  1783  059D                     	;# 
  1784  059E                     	;# 
  1785  059F                     	;# 
  1786  060C                     	;# 
  1787  060C                     	;# 
  1788  060D                     	;# 
  1789  060D                     	;# 
  1790  060E                     	;# 
  1791  060F                     	;# 
  1792  0610                     	;# 
  1793  0611                     	;# 
  1794  0612                     	;# 
  1795  0613                     	;# 
  1796  0614                     	;# 
  1797  0616                     	;# 
  1798  0616                     	;# 
  1799  0617                     	;# 
  1800  0617                     	;# 
  1801  0618                     	;# 
  1802  0619                     	;# 
  1803  061A                     	;# 
  1804  061B                     	;# 
  1805  061C                     	;# 
  1806  061D                     	;# 
  1807  061E                     	;# 
  1808  070C                     	;# 
  1809  070D                     	;# 
  1810  070E                     	;# 
  1811  070F                     	;# 
  1812  0710                     	;# 
  1813  0711                     	;# 
  1814  0712                     	;# 
  1815  0713                     	;# 
  1816  0714                     	;# 
  1817  0716                     	;# 
  1818  0717                     	;# 
  1819  0718                     	;# 
  1820  0719                     	;# 
  1821  071A                     	;# 
  1822  071B                     	;# 
  1823  071C                     	;# 
  1824  071D                     	;# 
  1825  071E                     	;# 
  1826  0796                     	;# 
  1827  0797                     	;# 
  1828  0798                     	;# 
  1829  0799                     	;# 
  1830  079A                     	;# 
  1831  079B                     	;# 
  1832  079C                     	;# 
  1833  079D                     	;# 
  1834  080C                     	;# 
  1835  080D                     	;# 
  1836  080E                     	;# 
  1837  080F                     	;# 
  1838  0810                     	;# 
  1839  0811                     	;# 
  1840  0812                     	;# 
  1841  0813                     	;# 
  1842  0814                     	;# 
  1843  081A                     	;# 
  1844  081A                     	;# 
  1845  081B                     	;# 
  1846  081C                     	;# 
  1847  081C                     	;# 
  1848  081D                     	;# 
  1849  081E                     	;# 
  1850  081F                     	;# 
  1851  088C                     	;# 
  1852  088D                     	;# 
  1853  088E                     	;# 
  1854  088F                     	;# 
  1855  0890                     	;# 
  1856  0891                     	;# 
  1857  0892                     	;# 
  1858  0893                     	;# 
  1859  0895                     	;# 
  1860  0896                     	;# 
  1861  0897                     	;# 
  1862  0898                     	;# 
  1863  0899                     	;# 
  1864  089A                     	;# 
  1865  089B                     	;# 
  1866  090C                     	;# 
  1867  090E                     	;# 
  1868  090F                     	;# 
  1869  091F                     	;# 
  1870  098F                     	;# 
  1871  098F                     	;# 
  1872  0990                     	;# 
  1873  0991                     	;# 
  1874  0992                     	;# 
  1875  0993                     	;# 
  1876  0994                     	;# 
  1877  0995                     	;# 
  1878  0996                     	;# 
  1879  0997                     	;# 
  1880  1E0F                     	;# 
  1881  1E10                     	;# 
  1882  1E11                     	;# 
  1883  1E12                     	;# 
  1884  1E13                     	;# 
  1885  1E14                     	;# 
  1886  1E15                     	;# 
  1887  1E16                     	;# 
  1888  1E17                     	;# 
  1889  1E18                     	;# 
  1890  1E19                     	;# 
  1891  1E1A                     	;# 
  1892  1E1B                     	;# 
  1893  1E1C                     	;# 
  1894  1E1D                     	;# 
  1895  1E1E                     	;# 
  1896  1E1F                     	;# 
  1897  1E20                     	;# 
  1898  1E21                     	;# 
  1899  1E22                     	;# 
  1900  1E23                     	;# 
  1901  1E24                     	;# 
  1902  1E25                     	;# 
  1903  1E26                     	;# 
  1904  1E27                     	;# 
  1905  1E28                     	;# 
  1906  1E29                     	;# 
  1907  1E2A                     	;# 
  1908  1E2B                     	;# 
  1909  1E2C                     	;# 
  1910  1E2D                     	;# 
  1911  1E2E                     	;# 
  1912  1E2F                     	;# 
  1913  1E30                     	;# 
  1914  1E31                     	;# 
  1915  1E32                     	;# 
  1916  1E33                     	;# 
  1917  1E34                     	;# 
  1918  1E35                     	;# 
  1919  1E36                     	;# 
  1920  1E37                     	;# 
  1921  1E8F                     	;# 
  1922  1E90                     	;# 
  1923  1E91                     	;# 
  1924  1E92                     	;# 
  1925  1E93                     	;# 
  1926  1E94                     	;# 
  1927  1E95                     	;# 
  1928  1E96                     	;# 
  1929  1E97                     	;# 
  1930  1E9C                     	;# 
  1931  1E9D                     	;# 
  1932  1E9E                     	;# 
  1933  1EA1                     	;# 
  1934  1EA2                     	;# 
  1935  1EA3                     	;# 
  1936  1EA4                     	;# 
  1937  1EA9                     	;# 
  1938  1EAA                     	;# 
  1939  1EB1                     	;# 
  1940  1EB2                     	;# 
  1941  1EB8                     	;# 
  1942  1EB9                     	;# 
  1943  1EBA                     	;# 
  1944  1EBB                     	;# 
  1945  1EBC                     	;# 
  1946  1EBD                     	;# 
  1947  1EBE                     	;# 
  1948  1EC3                     	;# 
  1949  1EC5                     	;# 
  1950  1EC6                     	;# 
  1951  1EC7                     	;# 
  1952  1EC8                     	;# 
  1953  1EC9                     	;# 
  1954  1ECA                     	;# 
  1955  1ECB                     	;# 
  1956  1ECB                     	;# 
  1957  1ECB                     	;# 
  1958  1ECC                     	;# 
  1959  1ECC                     	;# 
  1960  1ECC                     	;# 
  1961  1F10                     	;# 
  1962  1F11                     	;# 
  1963  1F12                     	;# 
  1964  1F14                     	;# 
  1965  1F15                     	;# 
  1966  1F1C                     	;# 
  1967  1F1D                     	;# 
  1968  1F1E                     	;# 
  1969  1F1F                     	;# 
  1970  1F20                     	;# 
  1971  1F21                     	;# 
  1972  1F22                     	;# 
  1973  1F23                     	;# 
  1974  1F24                     	;# 
  1975  1F25                     	;# 
  1976  1F26                     	;# 
  1977  1F27                     	;# 
  1978  1F38                     	;# 
  1979  1F39                     	;# 
  1980  1F3A                     	;# 
  1981  1F3B                     	;# 
  1982  1F3C                     	;# 
  1983  1F3D                     	;# 
  1984  1F3E                     	;# 
  1985  1F3F                     	;# 
  1986  1F43                     	;# 
  1987  1F44                     	;# 
  1988  1F45                     	;# 
  1989  1F46                     	;# 
  1990  1F47                     	;# 
  1991  1F48                     	;# 
  1992  1F49                     	;# 
  1993  1F4A                     	;# 
  1994  1F4E                     	;# 
  1995  1F4F                     	;# 
  1996  1F50                     	;# 
  1997  1F51                     	;# 
  1998  1F52                     	;# 
  1999  1F53                     	;# 
  2000  1F54                     	;# 
  2001  1F55                     	;# 
  2002  1FE4                     	;# 
  2003  1FE5                     	;# 
  2004  1FE6                     	;# 
  2005  1FE7                     	;# 
  2006  1FE8                     	;# 
  2007  1FE8                     	;# 
  2008  1FE9                     	;# 
  2009  1FEA                     	;# 
  2010  1FEB                     	;# 
  2011  1FED                     	;# 
  2012  1FEE                     	;# 
  2013  1FEF                     	;# 
  2014  0000                     	;# 
  2015  0001                     	;# 
  2016  0002                     	;# 
  2017  0003                     	;# 
  2018  0004                     	;# 
  2019  0005                     	;# 
  2020  0006                     	;# 
  2021  0007                     	;# 
  2022  0008                     	;# 
  2023  0009                     	;# 
  2024  000A                     	;# 
  2025  000B                     	;# 
  2026  000C                     	;# 
  2027  000D                     	;# 
  2028  000E                     	;# 
  2029  0012                     	;# 
  2030  0013                     	;# 
  2031  0014                     	;# 
  2032  0018                     	;# 
  2033  0019                     	;# 
  2034  001A                     	;# 
  2035  008C                     	;# 
  2036  008C                     	;# 
  2037  008D                     	;# 
  2038  008E                     	;# 
  2039  008E                     	;# 
  2040  008F                     	;# 
  2041  0090                     	;# 
  2042  0090                     	;# 
  2043  0091                     	;# 
  2044  0092                     	;# 
  2045  0092                     	;# 
  2046  0093                     	;# 
  2047  0094                     	;# 
  2048  0094                     	;# 
  2049  0095                     	;# 
  2050  0096                     	;# 
  2051  0096                     	;# 
  2052  0097                     	;# 
  2053  0098                     	;# 
  2054  0099                     	;# 
  2055  009A                     	;# 
  2056  009B                     	;# 
  2057  009B                     	;# 
  2058  009C                     	;# 
  2059  009D                     	;# 
  2060  009D                     	;# 
  2061  009E                     	;# 
  2062  009F                     	;# 
  2063  010C                     	;# 
  2064  010C                     	;# 
  2065  010D                     	;# 
  2066  010E                     	;# 
  2067  010F                     	;# 
  2068  010F                     	;# 
  2069  0110                     	;# 
  2070  0111                     	;# 
  2071  0112                     	;# 
  2072  0113                     	;# 
  2073  0114                     	;# 
  2074  0115                     	;# 
  2075  0116                     	;# 
  2076  0117                     	;# 
  2077  0118                     	;# 
  2078  0119                     	;# 
  2079  0119                     	;# 
  2080  0119                     	;# 
  2081  011A                     	;# 
  2082  011A                     	;# 
  2083  011A                     	;# 
  2084  011B                     	;# 
  2085  011B                     	;# 
  2086  011B                     	;# 
  2087  011B                     	;# 
  2088  011B                     	;# 
  2089  011C                     	;# 
  2090  011C                     	;# 
  2091  011C                     	;# 
  2092  011D                     	;# 
  2093  011D                     	;# 
  2094  011D                     	;# 
  2095  011E                     	;# 
  2096  011E                     	;# 
  2097  011E                     	;# 
  2098  011F                     	;# 
  2099  011F                     	;# 
  2100  011F                     	;# 
  2101  011F                     	;# 
  2102  011F                     	;# 
  2103  018C                     	;# 
  2104  018D                     	;# 
  2105  018E                     	;# 
  2106  018F                     	;# 
  2107  0190                     	;# 
  2108  0191                     	;# 
  2109  0192                     	;# 
  2110  0196                     	;# 
  2111  0197                     	;# 
  2112  0198                     	;# 
  2113  0199                     	;# 
  2114  019A                     	;# 
  2115  019B                     	;# 
  2116  019C                     	;# 
  2117  020C                     	;# 
  2118  020D                     	;# 
  2119  020E                     	;# 
  2120  020E                     	;# 
  2121  020F                     	;# 
  2122  020F                     	;# 
  2123  0210                     	;# 
  2124  0210                     	;# 
  2125  0211                     	;# 
  2126  0211                     	;# 
  2127  0212                     	;# 
  2128  0213                     	;# 
  2129  0214                     	;# 
  2130  0214                     	;# 
  2131  0215                     	;# 
  2132  0215                     	;# 
  2133  0216                     	;# 
  2134  0216                     	;# 
  2135  0217                     	;# 
  2136  0217                     	;# 
  2137  0218                     	;# 
  2138  0219                     	;# 
  2139  021A                     	;# 
  2140  021A                     	;# 
  2141  021B                     	;# 
  2142  021B                     	;# 
  2143  021C                     	;# 
  2144  021C                     	;# 
  2145  021D                     	;# 
  2146  021D                     	;# 
  2147  021E                     	;# 
  2148  021F                     	;# 
  2149  028C                     	;# 
  2150  028C                     	;# 
  2151  028D                     	;# 
  2152  028D                     	;# 
  2153  028E                     	;# 
  2154  028F                     	;# 
  2155  0290                     	;# 
  2156  0291                     	;# 
  2157  0292                     	;# 
  2158  0292                     	;# 
  2159  0293                     	;# 
  2160  0293                     	;# 
  2161  0294                     	;# 
  2162  0295                     	;# 
  2163  0296                     	;# 
  2164  0297                     	;# 
  2165  0298                     	;# 
  2166  0298                     	;# 
  2167  0299                     	;# 
  2168  0299                     	;# 
  2169  029A                     	;# 
  2170  029B                     	;# 
  2171  029C                     	;# 
  2172  029D                     	;# 
  2173  029F                     	;# 
  2174  030C                     	;# 
  2175  030C                     	;# 
  2176  030D                     	;# 
  2177  030E                     	;# 
  2178  030F                     	;# 
  2179  0310                     	;# 
  2180  0310                     	;# 
  2181  0311                     	;# 
  2182  0312                     	;# 
  2183  0313                     	;# 
  2184  0314                     	;# 
  2185  0314                     	;# 
  2186  0315                     	;# 
  2187  0316                     	;# 
  2188  0317                     	;# 
  2189  0318                     	;# 
  2190  0318                     	;# 
  2191  0319                     	;# 
  2192  031A                     	;# 
  2193  031B                     	;# 
  2194  038C                     	;# 
  2195  038C                     	;# 
  2196  038D                     	;# 
  2197  038E                     	;# 
  2198  0390                     	;# 
  2199  0390                     	;# 
  2200  0391                     	;# 
  2201  0392                     	;# 
  2202  048C                     	;# 
  2203  048C                     	;# 
  2204  048D                     	;# 
  2205  048E                     	;# 
  2206  048F                     	;# 
  2207  048F                     	;# 
  2208  0490                     	;# 
  2209  0491                     	;# 
  2210  0492                     	;# 
  2211  0492                     	;# 
  2212  0493                     	;# 
  2213  0494                     	;# 
  2214  0495                     	;# 
  2215  0495                     	;# 
  2216  0496                     	;# 
  2217  0497                     	;# 
  2218  0498                     	;# 
  2219  0499                     	;# 
  2220  049A                     	;# 
  2221  049B                     	;# 
  2222  049C                     	;# 
  2223  049D                     	;# 
  2224  058C                     	;# 
  2225  058C                     	;# 
  2226  058D                     	;# 
  2227  058E                     	;# 
  2228  058F                     	;# 
  2229  058F                     	;# 
  2230  0590                     	;# 
  2231  0591                     	;# 
  2232  0592                     	;# 
  2233  0593                     	;# 
  2234  059C                     	;# 
  2235  059C                     	;# 
  2236  059D                     	;# 
  2237  059D                     	;# 
  2238  059E                     	;# 
  2239  059F                     	;# 
  2240  060C                     	;# 
  2241  060C                     	;# 
  2242  060D                     	;# 
  2243  060D                     	;# 
  2244  060E                     	;# 
  2245  060F                     	;# 
  2246  0610                     	;# 
  2247  0611                     	;# 
  2248  0612                     	;# 
  2249  0613                     	;# 
  2250  0614                     	;# 
  2251  0616                     	;# 
  2252  0616                     	;# 
  2253  0617                     	;# 
  2254  0617                     	;# 
  2255  0618                     	;# 
  2256  0619                     	;# 
  2257  061A                     	;# 
  2258  061B                     	;# 
  2259  061C                     	;# 
  2260  061D                     	;# 
  2261  061E                     	;# 
  2262  070C                     	;# 
  2263  070D                     	;# 
  2264  070E                     	;# 
  2265  070F                     	;# 
  2266  0710                     	;# 
  2267  0711                     	;# 
  2268  0712                     	;# 
  2269  0713                     	;# 
  2270  0714                     	;# 
  2271  0716                     	;# 
  2272  0717                     	;# 
  2273  0718                     	;# 
  2274  0719                     	;# 
  2275  071A                     	;# 
  2276  071B                     	;# 
  2277  071C                     	;# 
  2278  071D                     	;# 
  2279  071E                     	;# 
  2280  0796                     	;# 
  2281  0797                     	;# 
  2282  0798                     	;# 
  2283  0799                     	;# 
  2284  079A                     	;# 
  2285  079B                     	;# 
  2286  079C                     	;# 
  2287  079D                     	;# 
  2288  080C                     	;# 
  2289  080D                     	;# 
  2290  080E                     	;# 
  2291  080F                     	;# 
  2292  0810                     	;# 
  2293  0811                     	;# 
  2294  0812                     	;# 
  2295  0813                     	;# 
  2296  0814                     	;# 
  2297  081A                     	;# 
  2298  081A                     	;# 
  2299  081B                     	;# 
  2300  081C                     	;# 
  2301  081C                     	;# 
  2302  081D                     	;# 
  2303  081E                     	;# 
  2304  081F                     	;# 
  2305  088C                     	;# 
  2306  088D                     	;# 
  2307  088E                     	;# 
  2308  088F                     	;# 
  2309  0890                     	;# 
  2310  0891                     	;# 
  2311  0892                     	;# 
  2312  0893                     	;# 
  2313  0895                     	;# 
  2314  0896                     	;# 
  2315  0897                     	;# 
  2316  0898                     	;# 
  2317  0899                     	;# 
  2318  089A                     	;# 
  2319  089B                     	;# 
  2320  090C                     	;# 
  2321  090E                     	;# 
  2322  090F                     	;# 
  2323  091F                     	;# 
  2324  098F                     	;# 
  2325  098F                     	;# 
  2326  0990                     	;# 
  2327  0991                     	;# 
  2328  0992                     	;# 
  2329  0993                     	;# 
  2330  0994                     	;# 
  2331  0995                     	;# 
  2332  0996                     	;# 
  2333  0997                     	;# 
  2334  1E0F                     	;# 
  2335  1E10                     	;# 
  2336  1E11                     	;# 
  2337  1E12                     	;# 
  2338  1E13                     	;# 
  2339  1E14                     	;# 
  2340  1E15                     	;# 
  2341  1E16                     	;# 
  2342  1E17                     	;# 
  2343  1E18                     	;# 
  2344  1E19                     	;# 
  2345  1E1A                     	;# 
  2346  1E1B                     	;# 
  2347  1E1C                     	;# 
  2348  1E1D                     	;# 
  2349  1E1E                     	;# 
  2350  1E1F                     	;# 
  2351  1E20                     	;# 
  2352  1E21                     	;# 
  2353  1E22                     	;# 
  2354  1E23                     	;# 
  2355  1E24                     	;# 
  2356  1E25                     	;# 
  2357  1E26                     	;# 
  2358  1E27                     	;# 
  2359  1E28                     	;# 
  2360  1E29                     	;# 
  2361  1E2A                     	;# 
  2362  1E2B                     	;# 
  2363  1E2C                     	;# 
  2364  1E2D                     	;# 
  2365  1E2E                     	;# 
  2366  1E2F                     	;# 
  2367  1E30                     	;# 
  2368  1E31                     	;# 
  2369  1E32                     	;# 
  2370  1E33                     	;# 
  2371  1E34                     	;# 
  2372  1E35                     	;# 
  2373  1E36                     	;# 
  2374  1E37                     	;# 
  2375  1E8F                     	;# 
  2376  1E90                     	;# 
  2377  1E91                     	;# 
  2378  1E92                     	;# 
  2379  1E93                     	;# 
  2380  1E94                     	;# 
  2381  1E95                     	;# 
  2382  1E96                     	;# 
  2383  1E97                     	;# 
  2384  1E9C                     	;# 
  2385  1E9D                     	;# 
  2386  1E9E                     	;# 
  2387  1EA1                     	;# 
  2388  1EA2                     	;# 
  2389  1EA3                     	;# 
  2390  1EA4                     	;# 
  2391  1EA9                     	;# 
  2392  1EAA                     	;# 
  2393  1EB1                     	;# 
  2394  1EB2                     	;# 
  2395  1EB8                     	;# 
  2396  1EB9                     	;# 
  2397  1EBA                     	;# 
  2398  1EBB                     	;# 
  2399  1EBC                     	;# 
  2400  1EBD                     	;# 
  2401  1EBE                     	;# 
  2402  1EC3                     	;# 
  2403  1EC5                     	;# 
  2404  1EC6                     	;# 
  2405  1EC7                     	;# 
  2406  1EC8                     	;# 
  2407  1EC9                     	;# 
  2408  1ECA                     	;# 
  2409  1ECB                     	;# 
  2410  1ECB                     	;# 
  2411  1ECB                     	;# 
  2412  1ECC                     	;# 
  2413  1ECC                     	;# 
  2414  1ECC                     	;# 
  2415  1F10                     	;# 
  2416  1F11                     	;# 
  2417  1F12                     	;# 
  2418  1F14                     	;# 
  2419  1F15                     	;# 
  2420  1F1C                     	;# 
  2421  1F1D                     	;# 
  2422  1F1E                     	;# 
  2423  1F1F                     	;# 
  2424  1F20                     	;# 
  2425  1F21                     	;# 
  2426  1F22                     	;# 
  2427  1F23                     	;# 
  2428  1F24                     	;# 
  2429  1F25                     	;# 
  2430  1F26                     	;# 
  2431  1F27                     	;# 
  2432  1F38                     	;# 
  2433  1F39                     	;# 
  2434  1F3A                     	;# 
  2435  1F3B                     	;# 
  2436  1F3C                     	;# 
  2437  1F3D                     	;# 
  2438  1F3E                     	;# 
  2439  1F3F                     	;# 
  2440  1F43                     	;# 
  2441  1F44                     	;# 
  2442  1F45                     	;# 
  2443  1F46                     	;# 
  2444  1F47                     	;# 
  2445  1F48                     	;# 
  2446  1F49                     	;# 
  2447  1F4A                     	;# 
  2448  1F4E                     	;# 
  2449  1F4F                     	;# 
  2450  1F50                     	;# 
  2451  1F51                     	;# 
  2452  1F52                     	;# 
  2453  1F53                     	;# 
  2454  1F54                     	;# 
  2455  1F55                     	;# 
  2456  1FE4                     	;# 
  2457  1FE5                     	;# 
  2458  1FE6                     	;# 
  2459  1FE7                     	;# 
  2460  1FE8                     	;# 
  2461  1FE8                     	;# 
  2462  1FE9                     	;# 
  2463  1FEA                     	;# 
  2464  1FEB                     	;# 
  2465  1FED                     	;# 
  2466  1FEE                     	;# 
  2467  1FEF                     	;# 
  2468  0000                     	;# 
  2469  0001                     	;# 
  2470  0002                     	;# 
  2471  0003                     	;# 
  2472  0004                     	;# 
  2473  0005                     	;# 
  2474  0006                     	;# 
  2475  0007                     	;# 
  2476  0008                     	;# 
  2477  0009                     	;# 
  2478  000A                     	;# 
  2479  000B                     	;# 
  2480  000C                     	;# 
  2481  000D                     	;# 
  2482  000E                     	;# 
  2483  0012                     	;# 
  2484  0013                     	;# 
  2485  0014                     	;# 
  2486  0018                     	;# 
  2487  0019                     	;# 
  2488  001A                     	;# 
  2489  008C                     	;# 
  2490  008C                     	;# 
  2491  008D                     	;# 
  2492  008E                     	;# 
  2493  008E                     	;# 
  2494  008F                     	;# 
  2495  0090                     	;# 
  2496  0090                     	;# 
  2497  0091                     	;# 
  2498  0092                     	;# 
  2499  0092                     	;# 
  2500  0093                     	;# 
  2501  0094                     	;# 
  2502  0094                     	;# 
  2503  0095                     	;# 
  2504  0096                     	;# 
  2505  0096                     	;# 
  2506  0097                     	;# 
  2507  0098                     	;# 
  2508  0099                     	;# 
  2509  009A                     	;# 
  2510  009B                     	;# 
  2511  009B                     	;# 
  2512  009C                     	;# 
  2513  009D                     	;# 
  2514  009D                     	;# 
  2515  009E                     	;# 
  2516  009F                     	;# 
  2517  010C                     	;# 
  2518  010C                     	;# 
  2519  010D                     	;# 
  2520  010E                     	;# 
  2521  010F                     	;# 
  2522  010F                     	;# 
  2523  0110                     	;# 
  2524  0111                     	;# 
  2525  0112                     	;# 
  2526  0113                     	;# 
  2527  0114                     	;# 
  2528  0115                     	;# 
  2529  0116                     	;# 
  2530  0117                     	;# 
  2531  0118                     	;# 
  2532  0119                     	;# 
  2533  0119                     	;# 
  2534  0119                     	;# 
  2535  011A                     	;# 
  2536  011A                     	;# 
  2537  011A                     	;# 
  2538  011B                     	;# 
  2539  011B                     	;# 
  2540  011B                     	;# 
  2541  011B                     	;# 
  2542  011B                     	;# 
  2543  011C                     	;# 
  2544  011C                     	;# 
  2545  011C                     	;# 
  2546  011D                     	;# 
  2547  011D                     	;# 
  2548  011D                     	;# 
  2549  011E                     	;# 
  2550  011E                     	;# 
  2551  011E                     	;# 
  2552  011F                     	;# 
  2553  011F                     	;# 
  2554  011F                     	;# 
  2555  011F                     	;# 
  2556  011F                     	;# 
  2557  018C                     	;# 
  2558  018D                     	;# 
  2559  018E                     	;# 
  2560  018F                     	;# 
  2561  0190                     	;# 
  2562  0191                     	;# 
  2563  0192                     	;# 
  2564  0196                     	;# 
  2565  0197                     	;# 
  2566  0198                     	;# 
  2567  0199                     	;# 
  2568  019A                     	;# 
  2569  019B                     	;# 
  2570  019C                     	;# 
  2571  020C                     	;# 
  2572  020D                     	;# 
  2573  020E                     	;# 
  2574  020E                     	;# 
  2575  020F                     	;# 
  2576  020F                     	;# 
  2577  0210                     	;# 
  2578  0210                     	;# 
  2579  0211                     	;# 
  2580  0211                     	;# 
  2581  0212                     	;# 
  2582  0213                     	;# 
  2583  0214                     	;# 
  2584  0214                     	;# 
  2585  0215                     	;# 
  2586  0215                     	;# 
  2587  0216                     	;# 
  2588  0216                     	;# 
  2589  0217                     	;# 
  2590  0217                     	;# 
  2591  0218                     	;# 
  2592  0219                     	;# 
  2593  021A                     	;# 
  2594  021A                     	;# 
  2595  021B                     	;# 
  2596  021B                     	;# 
  2597  021C                     	;# 
  2598  021C                     	;# 
  2599  021D                     	;# 
  2600  021D                     	;# 
  2601  021E                     	;# 
  2602  021F                     	;# 
  2603  028C                     	;# 
  2604  028C                     	;# 
  2605  028D                     	;# 
  2606  028D                     	;# 
  2607  028E                     	;# 
  2608  028F                     	;# 
  2609  0290                     	;# 
  2610  0291                     	;# 
  2611  0292                     	;# 
  2612  0292                     	;# 
  2613  0293                     	;# 
  2614  0293                     	;# 
  2615  0294                     	;# 
  2616  0295                     	;# 
  2617  0296                     	;# 
  2618  0297                     	;# 
  2619  0298                     	;# 
  2620  0298                     	;# 
  2621  0299                     	;# 
  2622  0299                     	;# 
  2623  029A                     	;# 
  2624  029B                     	;# 
  2625  029C                     	;# 
  2626  029D                     	;# 
  2627  029F                     	;# 
  2628  030C                     	;# 
  2629  030C                     	;# 
  2630  030D                     	;# 
  2631  030E                     	;# 
  2632  030F                     	;# 
  2633  0310                     	;# 
  2634  0310                     	;# 
  2635  0311                     	;# 
  2636  0312                     	;# 
  2637  0313                     	;# 
  2638  0314                     	;# 
  2639  0314                     	;# 
  2640  0315                     	;# 
  2641  0316                     	;# 
  2642  0317                     	;# 
  2643  0318                     	;# 
  2644  0318                     	;# 
  2645  0319                     	;# 
  2646  031A                     	;# 
  2647  031B                     	;# 
  2648  038C                     	;# 
  2649  038C                     	;# 
  2650  038D                     	;# 
  2651  038E                     	;# 
  2652  0390                     	;# 
  2653  0390                     	;# 
  2654  0391                     	;# 
  2655  0392                     	;# 
  2656  048C                     	;# 
  2657  048C                     	;# 
  2658  048D                     	;# 
  2659  048E                     	;# 
  2660  048F                     	;# 
  2661  048F                     	;# 
  2662  0490                     	;# 
  2663  0491                     	;# 
  2664  0492                     	;# 
  2665  0492                     	;# 
  2666  0493                     	;# 
  2667  0494                     	;# 
  2668  0495                     	;# 
  2669  0495                     	;# 
  2670  0496                     	;# 
  2671  0497                     	;# 
  2672  0498                     	;# 
  2673  0499                     	;# 
  2674  049A                     	;# 
  2675  049B                     	;# 
  2676  049C                     	;# 
  2677  049D                     	;# 
  2678  058C                     	;# 
  2679  058C                     	;# 
  2680  058D                     	;# 
  2681  058E                     	;# 
  2682  058F                     	;# 
  2683  058F                     	;# 
  2684  0590                     	;# 
  2685  0591                     	;# 
  2686  0592                     	;# 
  2687  0593                     	;# 
  2688  059C                     	;# 
  2689  059C                     	;# 
  2690  059D                     	;# 
  2691  059D                     	;# 
  2692  059E                     	;# 
  2693  059F                     	;# 
  2694  060C                     	;# 
  2695  060C                     	;# 
  2696  060D                     	;# 
  2697  060D                     	;# 
  2698  060E                     	;# 
  2699  060F                     	;# 
  2700  0610                     	;# 
  2701  0611                     	;# 
  2702  0612                     	;# 
  2703  0613                     	;# 
  2704  0614                     	;# 
  2705  0616                     	;# 
  2706  0616                     	;# 
  2707  0617                     	;# 
  2708  0617                     	;# 
  2709  0618                     	;# 
  2710  0619                     	;# 
  2711  061A                     	;# 
  2712  061B                     	;# 
  2713  061C                     	;# 
  2714  061D                     	;# 
  2715  061E                     	;# 
  2716  070C                     	;# 
  2717  070D                     	;# 
  2718  070E                     	;# 
  2719  070F                     	;# 
  2720  0710                     	;# 
  2721  0711                     	;# 
  2722  0712                     	;# 
  2723  0713                     	;# 
  2724  0714                     	;# 
  2725  0716                     	;# 
  2726  0717                     	;# 
  2727  0718                     	;# 
  2728  0719                     	;# 
  2729  071A                     	;# 
  2730  071B                     	;# 
  2731  071C                     	;# 
  2732  071D                     	;# 
  2733  071E                     	;# 
  2734  0796                     	;# 
  2735  0797                     	;# 
  2736  0798                     	;# 
  2737  0799                     	;# 
  2738  079A                     	;# 
  2739  079B                     	;# 
  2740  079C                     	;# 
  2741  079D                     	;# 
  2742  080C                     	;# 
  2743  080D                     	;# 
  2744  080E                     	;# 
  2745  080F                     	;# 
  2746  0810                     	;# 
  2747  0811                     	;# 
  2748  0812                     	;# 
  2749  0813                     	;# 
  2750  0814                     	;# 
  2751  081A                     	;# 
  2752  081A                     	;# 
  2753  081B                     	;# 
  2754  081C                     	;# 
  2755  081C                     	;# 
  2756  081D                     	;# 
  2757  081E                     	;# 
  2758  081F                     	;# 
  2759  088C                     	;# 
  2760  088D                     	;# 
  2761  088E                     	;# 
  2762  088F                     	;# 
  2763  0890                     	;# 
  2764  0891                     	;# 
  2765  0892                     	;# 
  2766  0893                     	;# 
  2767  0895                     	;# 
  2768  0896                     	;# 
  2769  0897                     	;# 
  2770  0898                     	;# 
  2771  0899                     	;# 
  2772  089A                     	;# 
  2773  089B                     	;# 
  2774  090C                     	;# 
  2775  090E                     	;# 
  2776  090F                     	;# 
  2777  091F                     	;# 
  2778  098F                     	;# 
  2779  098F                     	;# 
  2780  0990                     	;# 
  2781  0991                     	;# 
  2782  0992                     	;# 
  2783  0993                     	;# 
  2784  0994                     	;# 
  2785  0995                     	;# 
  2786  0996                     	;# 
  2787  0997                     	;# 
  2788  1E0F                     	;# 
  2789  1E10                     	;# 
  2790  1E11                     	;# 
  2791  1E12                     	;# 
  2792  1E13                     	;# 
  2793  1E14                     	;# 
  2794  1E15                     	;# 
  2795  1E16                     	;# 
  2796  1E17                     	;# 
  2797  1E18                     	;# 
  2798  1E19                     	;# 
  2799  1E1A                     	;# 
  2800  1E1B                     	;# 
  2801  1E1C                     	;# 
  2802  1E1D                     	;# 
  2803  1E1E                     	;# 
  2804  1E1F                     	;# 
  2805  1E20                     	;# 
  2806  1E21                     	;# 
  2807  1E22                     	;# 
  2808  1E23                     	;# 
  2809  1E24                     	;# 
  2810  1E25                     	;# 
  2811  1E26                     	;# 
  2812  1E27                     	;# 
  2813  1E28                     	;# 
  2814  1E29                     	;# 
  2815  1E2A                     	;# 
  2816  1E2B                     	;# 
  2817  1E2C                     	;# 
  2818  1E2D                     	;# 
  2819  1E2E                     	;# 
  2820  1E2F                     	;# 
  2821  1E30                     	;# 
  2822  1E31                     	;# 
  2823  1E32                     	;# 
  2824  1E33                     	;# 
  2825  1E34                     	;# 
  2826  1E35                     	;# 
  2827  1E36                     	;# 
  2828  1E37                     	;# 
  2829  1E8F                     	;# 
  2830  1E90                     	;# 
  2831  1E91                     	;# 
  2832  1E92                     	;# 
  2833  1E93                     	;# 
  2834  1E94                     	;# 
  2835  1E95                     	;# 
  2836  1E96                     	;# 
  2837  1E97                     	;# 
  2838  1E9C                     	;# 
  2839  1E9D                     	;# 
  2840  1E9E                     	;# 
  2841  1EA1                     	;# 
  2842  1EA2                     	;# 
  2843  1EA3                     	;# 
  2844  1EA4                     	;# 
  2845  1EA9                     	;# 
  2846  1EAA                     	;# 
  2847  1EB1                     	;# 
  2848  1EB2                     	;# 
  2849  1EB8                     	;# 
  2850  1EB9                     	;# 
  2851  1EBA                     	;# 
  2852  1EBB                     	;# 
  2853  1EBC                     	;# 
  2854  1EBD                     	;# 
  2855  1EBE                     	;# 
  2856  1EC3                     	;# 
  2857  1EC5                     	;# 
  2858  1EC6                     	;# 
  2859  1EC7                     	;# 
  2860  1EC8                     	;# 
  2861  1EC9                     	;# 
  2862  1ECA                     	;# 
  2863  1ECB                     	;# 
  2864  1ECB                     	;# 
  2865  1ECB                     	;# 
  2866  1ECC                     	;# 
  2867  1ECC                     	;# 
  2868  1ECC                     	;# 
  2869  1F10                     	;# 
  2870  1F11                     	;# 
  2871  1F12                     	;# 
  2872  1F14                     	;# 
  2873  1F15                     	;# 
  2874  1F1C                     	;# 
  2875  1F1D                     	;# 
  2876  1F1E                     	;# 
  2877  1F1F                     	;# 
  2878  1F20                     	;# 
  2879  1F21                     	;# 
  2880  1F22                     	;# 
  2881  1F23                     	;# 
  2882  1F24                     	;# 
  2883  1F25                     	;# 
  2884  1F26                     	;# 
  2885  1F27                     	;# 
  2886  1F38                     	;# 
  2887  1F39                     	;# 
  2888  1F3A                     	;# 
  2889  1F3B                     	;# 
  2890  1F3C                     	;# 
  2891  1F3D                     	;# 
  2892  1F3E                     	;# 
  2893  1F3F                     	;# 
  2894  1F43                     	;# 
  2895  1F44                     	;# 
  2896  1F45                     	;# 
  2897  1F46                     	;# 
  2898  1F47                     	;# 
  2899  1F48                     	;# 
  2900  1F49                     	;# 
  2901  1F4A                     	;# 
  2902  1F4E                     	;# 
  2903  1F4F                     	;# 
  2904  1F50                     	;# 
  2905  1F51                     	;# 
  2906  1F52                     	;# 
  2907  1F53                     	;# 
  2908  1F54                     	;# 
  2909  1F55                     	;# 
  2910  1FE4                     	;# 
  2911  1FE5                     	;# 
  2912  1FE6                     	;# 
  2913  1FE7                     	;# 
  2914  1FE8                     	;# 
  2915  1FE8                     	;# 
  2916  1FE9                     	;# 
  2917  1FEA                     	;# 
  2918  1FEB                     	;# 
  2919  1FED                     	;# 
  2920  1FEE                     	;# 
  2921  1FEF                     	;# 
  2922  0000                     	;# 
  2923  0001                     	;# 
  2924  0002                     	;# 
  2925  0003                     	;# 
  2926  0004                     	;# 
  2927  0005                     	;# 
  2928  0006                     	;# 
  2929  0007                     	;# 
  2930  0008                     	;# 
  2931  0009                     	;# 
  2932  000A                     	;# 
  2933  000B                     	;# 
  2934  000C                     	;# 
  2935  000D                     	;# 
  2936  000E                     	;# 
  2937  0012                     	;# 
  2938  0013                     	;# 
  2939  0014                     	;# 
  2940  0018                     	;# 
  2941  0019                     	;# 
  2942  001A                     	;# 
  2943  008C                     	;# 
  2944  008C                     	;# 
  2945  008D                     	;# 
  2946  008E                     	;# 
  2947  008E                     	;# 
  2948  008F                     	;# 
  2949  0090                     	;# 
  2950  0090                     	;# 
  2951  0091                     	;# 
  2952  0092                     	;# 
  2953  0092                     	;# 
  2954  0093                     	;# 
  2955  0094                     	;# 
  2956  0094                     	;# 
  2957  0095                     	;# 
  2958  0096                     	;# 
  2959  0096                     	;# 
  2960  0097                     	;# 
  2961  0098                     	;# 
  2962  0099                     	;# 
  2963  009A                     	;# 
  2964  009B                     	;# 
  2965  009B                     	;# 
  2966  009C                     	;# 
  2967  009D                     	;# 
  2968  009D                     	;# 
  2969  009E                     	;# 
  2970  009F                     	;# 
  2971  010C                     	;# 
  2972  010C                     	;# 
  2973  010D                     	;# 
  2974  010E                     	;# 
  2975  010F                     	;# 
  2976  010F                     	;# 
  2977  0110                     	;# 
  2978  0111                     	;# 
  2979  0112                     	;# 
  2980  0113                     	;# 
  2981  0114                     	;# 
  2982  0115                     	;# 
  2983  0116                     	;# 
  2984  0117                     	;# 
  2985  0118                     	;# 
  2986  0119                     	;# 
  2987  0119                     	;# 
  2988  0119                     	;# 
  2989  011A                     	;# 
  2990  011A                     	;# 
  2991  011A                     	;# 
  2992  011B                     	;# 
  2993  011B                     	;# 
  2994  011B                     	;# 
  2995  011B                     	;# 
  2996  011B                     	;# 
  2997  011C                     	;# 
  2998  011C                     	;# 
  2999  011C                     	;# 
  3000  011D                     	;# 
  3001  011D                     	;# 
  3002  011D                     	;# 
  3003  011E                     	;# 
  3004  011E                     	;# 
  3005  011E                     	;# 
  3006  011F                     	;# 
  3007  011F                     	;# 
  3008  011F                     	;# 
  3009  011F                     	;# 
  3010  011F                     	;# 
  3011  018C                     	;# 
  3012  018D                     	;# 
  3013  018E                     	;# 
  3014  018F                     	;# 
  3015  0190                     	;# 
  3016  0191                     	;# 
  3017  0192                     	;# 
  3018  0196                     	;# 
  3019  0197                     	;# 
  3020  0198                     	;# 
  3021  0199                     	;# 
  3022  019A                     	;# 
  3023  019B                     	;# 
  3024  019C                     	;# 
  3025  020C                     	;# 
  3026  020D                     	;# 
  3027  020E                     	;# 
  3028  020E                     	;# 
  3029  020F                     	;# 
  3030  020F                     	;# 
  3031  0210                     	;# 
  3032  0210                     	;# 
  3033  0211                     	;# 
  3034  0211                     	;# 
  3035  0212                     	;# 
  3036  0213                     	;# 
  3037  0214                     	;# 
  3038  0214                     	;# 
  3039  0215                     	;# 
  3040  0215                     	;# 
  3041  0216                     	;# 
  3042  0216                     	;# 
  3043  0217                     	;# 
  3044  0217                     	;# 
  3045  0218                     	;# 
  3046  0219                     	;# 
  3047  021A                     	;# 
  3048  021A                     	;# 
  3049  021B                     	;# 
  3050  021B                     	;# 
  3051  021C                     	;# 
  3052  021C                     	;# 
  3053  021D                     	;# 
  3054  021D                     	;# 
  3055  021E                     	;# 
  3056  021F                     	;# 
  3057  028C                     	;# 
  3058  028C                     	;# 
  3059  028D                     	;# 
  3060  028D                     	;# 
  3061  028E                     	;# 
  3062  028F                     	;# 
  3063  0290                     	;# 
  3064  0291                     	;# 
  3065  0292                     	;# 
  3066  0292                     	;# 
  3067  0293                     	;# 
  3068  0293                     	;# 
  3069  0294                     	;# 
  3070  0295                     	;# 
  3071  0296                     	;# 
  3072  0297                     	;# 
  3073  0298                     	;# 
  3074  0298                     	;# 
  3075  0299                     	;# 
  3076  0299                     	;# 
  3077  029A                     	;# 
  3078  029B                     	;# 
  3079  029C                     	;# 
  3080  029D                     	;# 
  3081  029F                     	;# 
  3082  030C                     	;# 
  3083  030C                     	;# 
  3084  030D                     	;# 
  3085  030E                     	;# 
  3086  030F                     	;# 
  3087  0310                     	;# 
  3088  0310                     	;# 
  3089  0311                     	;# 
  3090  0312                     	;# 
  3091  0313                     	;# 
  3092  0314                     	;# 
  3093  0314                     	;# 
  3094  0315                     	;# 
  3095  0316                     	;# 
  3096  0317                     	;# 
  3097  0318                     	;# 
  3098  0318                     	;# 
  3099  0319                     	;# 
  3100  031A                     	;# 
  3101  031B                     	;# 
  3102  038C                     	;# 
  3103  038C                     	;# 
  3104  038D                     	;# 
  3105  038E                     	;# 
  3106  0390                     	;# 
  3107  0390                     	;# 
  3108  0391                     	;# 
  3109  0392                     	;# 
  3110  048C                     	;# 
  3111  048C                     	;# 
  3112  048D                     	;# 
  3113  048E                     	;# 
  3114  048F                     	;# 
  3115  048F                     	;# 
  3116  0490                     	;# 
  3117  0491                     	;# 
  3118  0492                     	;# 
  3119  0492                     	;# 
  3120  0493                     	;# 
  3121  0494                     	;# 
  3122  0495                     	;# 
  3123  0495                     	;# 
  3124  0496                     	;# 
  3125  0497                     	;# 
  3126  0498                     	;# 
  3127  0499                     	;# 
  3128  049A                     	;# 
  3129  049B                     	;# 
  3130  049C                     	;# 
  3131  049D                     	;# 
  3132  058C                     	;# 
  3133  058C                     	;# 
  3134  058D                     	;# 
  3135  058E                     	;# 
  3136  058F                     	;# 
  3137  058F                     	;# 
  3138  0590                     	;# 
  3139  0591                     	;# 
  3140  0592                     	;# 
  3141  0593                     	;# 
  3142  059C                     	;# 
  3143  059C                     	;# 
  3144  059D                     	;# 
  3145  059D                     	;# 
  3146  059E                     	;# 
  3147  059F                     	;# 
  3148  060C                     	;# 
  3149  060C                     	;# 
  3150  060D                     	;# 
  3151  060D                     	;# 
  3152  060E                     	;# 
  3153  060F                     	;# 
  3154  0610                     	;# 
  3155  0611                     	;# 
  3156  0612                     	;# 
  3157  0613                     	;# 
  3158  0614                     	;# 
  3159  0616                     	;# 
  3160  0616                     	;# 
  3161  0617                     	;# 
  3162  0617                     	;# 
  3163  0618                     	;# 
  3164  0619                     	;# 
  3165  061A                     	;# 
  3166  061B                     	;# 
  3167  061C                     	;# 
  3168  061D                     	;# 
  3169  061E                     	;# 
  3170  070C                     	;# 
  3171  070D                     	;# 
  3172  070E                     	;# 
  3173  070F                     	;# 
  3174  0710                     	;# 
  3175  0711                     	;# 
  3176  0712                     	;# 
  3177  0713                     	;# 
  3178  0714                     	;# 
  3179  0716                     	;# 
  3180  0717                     	;# 
  3181  0718                     	;# 
  3182  0719                     	;# 
  3183  071A                     	;# 
  3184  071B                     	;# 
  3185  071C                     	;# 
  3186  071D                     	;# 
  3187  071E                     	;# 
  3188  0796                     	;# 
  3189  0797                     	;# 
  3190  0798                     	;# 
  3191  0799                     	;# 
  3192  079A                     	;# 
  3193  079B                     	;# 
  3194  079C                     	;# 
  3195  079D                     	;# 
  3196  080C                     	;# 
  3197  080D                     	;# 
  3198  080E                     	;# 
  3199  080F                     	;# 
  3200  0810                     	;# 
  3201  0811                     	;# 
  3202  0812                     	;# 
  3203  0813                     	;# 
  3204  0814                     	;# 
  3205  081A                     	;# 
  3206  081A                     	;# 
  3207  081B                     	;# 
  3208  081C                     	;# 
  3209  081C                     	;# 
  3210  081D                     	;# 
  3211  081E                     	;# 
  3212  081F                     	;# 
  3213  088C                     	;# 
  3214  088D                     	;# 
  3215  088E                     	;# 
  3216  088F                     	;# 
  3217  0890                     	;# 
  3218  0891                     	;# 
  3219  0892                     	;# 
  3220  0893                     	;# 
  3221  0895                     	;# 
  3222  0896                     	;# 
  3223  0897                     	;# 
  3224  0898                     	;# 
  3225  0899                     	;# 
  3226  089A                     	;# 
  3227  089B                     	;# 
  3228  090C                     	;# 
  3229  090E                     	;# 
  3230  090F                     	;# 
  3231  091F                     	;# 
  3232  098F                     	;# 
  3233  098F                     	;# 
  3234  0990                     	;# 
  3235  0991                     	;# 
  3236  0992                     	;# 
  3237  0993                     	;# 
  3238  0994                     	;# 
  3239  0995                     	;# 
  3240  0996                     	;# 
  3241  0997                     	;# 
  3242  1E0F                     	;# 
  3243  1E10                     	;# 
  3244  1E11                     	;# 
  3245  1E12                     	;# 
  3246  1E13                     	;# 
  3247  1E14                     	;# 
  3248  1E15                     	;# 
  3249  1E16                     	;# 
  3250  1E17                     	;# 
  3251  1E18                     	;# 
  3252  1E19                     	;# 
  3253  1E1A                     	;# 
  3254  1E1B                     	;# 
  3255  1E1C                     	;# 
  3256  1E1D                     	;# 
  3257  1E1E                     	;# 
  3258  1E1F                     	;# 
  3259  1E20                     	;# 
  3260  1E21                     	;# 
  3261  1E22                     	;# 
  3262  1E23                     	;# 
  3263  1E24                     	;# 
  3264  1E25                     	;# 
  3265  1E26                     	;# 
  3266  1E27                     	;# 
  3267  1E28                     	;# 
  3268  1E29                     	;# 
  3269  1E2A                     	;# 
  3270  1E2B                     	;# 
  3271  1E2C                     	;# 
  3272  1E2D                     	;# 
  3273  1E2E                     	;# 
  3274  1E2F                     	;# 
  3275  1E30                     	;# 
  3276  1E31                     	;# 
  3277  1E32                     	;# 
  3278  1E33                     	;# 
  3279  1E34                     	;# 
  3280  1E35                     	;# 
  3281  1E36                     	;# 
  3282  1E37                     	;# 
  3283  1E8F                     	;# 
  3284  1E90                     	;# 
  3285  1E91                     	;# 
  3286  1E92                     	;# 
  3287  1E93                     	;# 
  3288  1E94                     	;# 
  3289  1E95                     	;# 
  3290  1E96                     	;# 
  3291  1E97                     	;# 
  3292  1E9C                     	;# 
  3293  1E9D                     	;# 
  3294  1E9E                     	;# 
  3295  1EA1                     	;# 
  3296  1EA2                     	;# 
  3297  1EA3                     	;# 
  3298  1EA4                     	;# 
  3299  1EA9                     	;# 
  3300  1EAA                     	;# 
  3301  1EB1                     	;# 
  3302  1EB2                     	;# 
  3303  1EB8                     	;# 
  3304  1EB9                     	;# 
  3305  1EBA                     	;# 
  3306  1EBB                     	;# 
  3307  1EBC                     	;# 
  3308  1EBD                     	;# 
  3309  1EBE                     	;# 
  3310  1EC3                     	;# 
  3311  1EC5                     	;# 
  3312  1EC6                     	;# 
  3313  1EC7                     	;# 
  3314  1EC8                     	;# 
  3315  1EC9                     	;# 
  3316  1ECA                     	;# 
  3317  1ECB                     	;# 
  3318  1ECB                     	;# 
  3319  1ECB                     	;# 
  3320  1ECC                     	;# 
  3321  1ECC                     	;# 
  3322  1ECC                     	;# 
  3323  1F10                     	;# 
  3324  1F11                     	;# 
  3325  1F12                     	;# 
  3326  1F14                     	;# 
  3327  1F15                     	;# 
  3328  1F1C                     	;# 
  3329  1F1D                     	;# 
  3330  1F1E                     	;# 
  3331  1F1F                     	;# 
  3332  1F20                     	;# 
  3333  1F21                     	;# 
  3334  1F22                     	;# 
  3335  1F23                     	;# 
  3336  1F24                     	;# 
  3337  1F25                     	;# 
  3338  1F26                     	;# 
  3339  1F27                     	;# 
  3340  1F38                     	;# 
  3341  1F39                     	;# 
  3342  1F3A                     	;# 
  3343  1F3B                     	;# 
  3344  1F3C                     	;# 
  3345  1F3D                     	;# 
  3346  1F3E                     	;# 
  3347  1F3F                     	;# 
  3348  1F43                     	;# 
  3349  1F44                     	;# 
  3350  1F45                     	;# 
  3351  1F46                     	;# 
  3352  1F47                     	;# 
  3353  1F48                     	;# 
  3354  1F49                     	;# 
  3355  1F4A                     	;# 
  3356  1F4E                     	;# 
  3357  1F4F                     	;# 
  3358  1F50                     	;# 
  3359  1F51                     	;# 
  3360  1F52                     	;# 
  3361  1F53                     	;# 
  3362  1F54                     	;# 
  3363  1F55                     	;# 
  3364  1FE4                     	;# 
  3365  1FE5                     	;# 
  3366  1FE6                     	;# 
  3367  1FE7                     	;# 
  3368  1FE8                     	;# 
  3369  1FE8                     	;# 
  3370  1FE9                     	;# 
  3371  1FEA                     	;# 
  3372  1FEB                     	;# 
  3373  1FED                     	;# 
  3374  1FEE                     	;# 
  3375  1FEF                     	;# 
  3376  0000                     	;# 
  3377  0001                     	;# 
  3378  0002                     	;# 
  3379  0003                     	;# 
  3380  0004                     	;# 
  3381  0005                     	;# 
  3382  0006                     	;# 
  3383  0007                     	;# 
  3384  0008                     	;# 
  3385  0009                     	;# 
  3386  000A                     	;# 
  3387  000B                     	;# 
  3388  000C                     	;# 
  3389  000D                     	;# 
  3390  000E                     	;# 
  3391  0012                     	;# 
  3392  0013                     	;# 
  3393  0014                     	;# 
  3394  0018                     	;# 
  3395  0019                     	;# 
  3396  001A                     	;# 
  3397  008C                     	;# 
  3398  008C                     	;# 
  3399  008D                     	;# 
  3400  008E                     	;# 
  3401  008E                     	;# 
  3402  008F                     	;# 
  3403  0090                     	;# 
  3404  0090                     	;# 
  3405  0091                     	;# 
  3406  0092                     	;# 
  3407  0092                     	;# 
  3408  0093                     	;# 
  3409  0094                     	;# 
  3410  0094                     	;# 
  3411  0095                     	;# 
  3412  0096                     	;# 
  3413  0096                     	;# 
  3414  0097                     	;# 
  3415  0098                     	;# 
  3416  0099                     	;# 
  3417  009A                     	;# 
  3418  009B                     	;# 
  3419  009B                     	;# 
  3420  009C                     	;# 
  3421  009D                     	;# 
  3422  009D                     	;# 
  3423  009E                     	;# 
  3424  009F                     	;# 
  3425  010C                     	;# 
  3426  010C                     	;# 
  3427  010D                     	;# 
  3428  010E                     	;# 
  3429  010F                     	;# 
  3430  010F                     	;# 
  3431  0110                     	;# 
  3432  0111                     	;# 
  3433  0112                     	;# 
  3434  0113                     	;# 
  3435  0114                     	;# 
  3436  0115                     	;# 
  3437  0116                     	;# 
  3438  0117                     	;# 
  3439  0118                     	;# 
  3440  0119                     	;# 
  3441  0119                     	;# 
  3442  0119                     	;# 
  3443  011A                     	;# 
  3444  011A                     	;# 
  3445  011A                     	;# 
  3446  011B                     	;# 
  3447  011B                     	;# 
  3448  011B                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011C                     	;# 
  3452  011C                     	;# 
  3453  011C                     	;# 
  3454  011D                     	;# 
  3455  011D                     	;# 
  3456  011D                     	;# 
  3457  011E                     	;# 
  3458  011E                     	;# 
  3459  011E                     	;# 
  3460  011F                     	;# 
  3461  011F                     	;# 
  3462  011F                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  018C                     	;# 
  3466  018D                     	;# 
  3467  018E                     	;# 
  3468  018F                     	;# 
  3469  0190                     	;# 
  3470  0191                     	;# 
  3471  0192                     	;# 
  3472  0196                     	;# 
  3473  0197                     	;# 
  3474  0198                     	;# 
  3475  0199                     	;# 
  3476  019A                     	;# 
  3477  019B                     	;# 
  3478  019C                     	;# 
  3479  020C                     	;# 
  3480  020D                     	;# 
  3481  020E                     	;# 
  3482  020E                     	;# 
  3483  020F                     	;# 
  3484  020F                     	;# 
  3485  0210                     	;# 
  3486  0210                     	;# 
  3487  0211                     	;# 
  3488  0211                     	;# 
  3489  0212                     	;# 
  3490  0213                     	;# 
  3491  0214                     	;# 
  3492  0214                     	;# 
  3493  0215                     	;# 
  3494  0215                     	;# 
  3495  0216                     	;# 
  3496  0216                     	;# 
  3497  0217                     	;# 
  3498  0217                     	;# 
  3499  0218                     	;# 
  3500  0219                     	;# 
  3501  021A                     	;# 
  3502  021A                     	;# 
  3503  021B                     	;# 
  3504  021B                     	;# 
  3505  021C                     	;# 
  3506  021C                     	;# 
  3507  021D                     	;# 
  3508  021D                     	;# 
  3509  021E                     	;# 
  3510  021F                     	;# 
  3511  028C                     	;# 
  3512  028C                     	;# 
  3513  028D                     	;# 
  3514  028D                     	;# 
  3515  028E                     	;# 
  3516  028F                     	;# 
  3517  0290                     	;# 
  3518  0291                     	;# 
  3519  0292                     	;# 
  3520  0292                     	;# 
  3521  0293                     	;# 
  3522  0293                     	;# 
  3523  0294                     	;# 
  3524  0295                     	;# 
  3525  0296                     	;# 
  3526  0297                     	;# 
  3527  0298                     	;# 
  3528  0298                     	;# 
  3529  0299                     	;# 
  3530  0299                     	;# 
  3531  029A                     	;# 
  3532  029B                     	;# 
  3533  029C                     	;# 
  3534  029D                     	;# 
  3535  029F                     	;# 
  3536  030C                     	;# 
  3537  030C                     	;# 
  3538  030D                     	;# 
  3539  030E                     	;# 
  3540  030F                     	;# 
  3541  0310                     	;# 
  3542  0310                     	;# 
  3543  0311                     	;# 
  3544  0312                     	;# 
  3545  0313                     	;# 
  3546  0314                     	;# 
  3547  0314                     	;# 
  3548  0315                     	;# 
  3549  0316                     	;# 
  3550  0317                     	;# 
  3551  0318                     	;# 
  3552  0318                     	;# 
  3553  0319                     	;# 
  3554  031A                     	;# 
  3555  031B                     	;# 
  3556  038C                     	;# 
  3557  038C                     	;# 
  3558  038D                     	;# 
  3559  038E                     	;# 
  3560  0390                     	;# 
  3561  0390                     	;# 
  3562  0391                     	;# 
  3563  0392                     	;# 
  3564  048C                     	;# 
  3565  048C                     	;# 
  3566  048D                     	;# 
  3567  048E                     	;# 
  3568  048F                     	;# 
  3569  048F                     	;# 
  3570  0490                     	;# 
  3571  0491                     	;# 
  3572  0492                     	;# 
  3573  0492                     	;# 
  3574  0493                     	;# 
  3575  0494                     	;# 
  3576  0495                     	;# 
  3577  0495                     	;# 
  3578  0496                     	;# 
  3579  0497                     	;# 
  3580  0498                     	;# 
  3581  0499                     	;# 
  3582  049A                     	;# 
  3583  049B                     	;# 
  3584  049C                     	;# 
  3585  049D                     	;# 
  3586  058C                     	;# 
  3587  058C                     	;# 
  3588  058D                     	;# 
  3589  058E                     	;# 
  3590  058F                     	;# 
  3591  058F                     	;# 
  3592  0590                     	;# 
  3593  0591                     	;# 
  3594  0592                     	;# 
  3595  0593                     	;# 
  3596  059C                     	;# 
  3597  059C                     	;# 
  3598  059D                     	;# 
  3599  059D                     	;# 
  3600  059E                     	;# 
  3601  059F                     	;# 
  3602  060C                     	;# 
  3603  060C                     	;# 
  3604  060D                     	;# 
  3605  060D                     	;# 
  3606  060E                     	;# 
  3607  060F                     	;# 
  3608  0610                     	;# 
  3609  0611                     	;# 
  3610  0612                     	;# 
  3611  0613                     	;# 
  3612  0614                     	;# 
  3613  0616                     	;# 
  3614  0616                     	;# 
  3615  0617                     	;# 
  3616  0617                     	;# 
  3617  0618                     	;# 
  3618  0619                     	;# 
  3619  061A                     	;# 
  3620  061B                     	;# 
  3621  061C                     	;# 
  3622  061D                     	;# 
  3623  061E                     	;# 
  3624  070C                     	;# 
  3625  070D                     	;# 
  3626  070E                     	;# 
  3627  070F                     	;# 
  3628  0710                     	;# 
  3629  0711                     	;# 
  3630  0712                     	;# 
  3631  0713                     	;# 
  3632  0714                     	;# 
  3633  0716                     	;# 
  3634  0717                     	;# 
  3635  0718                     	;# 
  3636  0719                     	;# 
  3637  071A                     	;# 
  3638  071B                     	;# 
  3639  071C                     	;# 
  3640  071D                     	;# 
  3641  071E                     	;# 
  3642  0796                     	;# 
  3643  0797                     	;# 
  3644  0798                     	;# 
  3645  0799                     	;# 
  3646  079A                     	;# 
  3647  079B                     	;# 
  3648  079C                     	;# 
  3649  079D                     	;# 
  3650  080C                     	;# 
  3651  080D                     	;# 
  3652  080E                     	;# 
  3653  080F                     	;# 
  3654  0810                     	;# 
  3655  0811                     	;# 
  3656  0812                     	;# 
  3657  0813                     	;# 
  3658  0814                     	;# 
  3659  081A                     	;# 
  3660  081A                     	;# 
  3661  081B                     	;# 
  3662  081C                     	;# 
  3663  081C                     	;# 
  3664  081D                     	;# 
  3665  081E                     	;# 
  3666  081F                     	;# 
  3667  088C                     	;# 
  3668  088D                     	;# 
  3669  088E                     	;# 
  3670  088F                     	;# 
  3671  0890                     	;# 
  3672  0891                     	;# 
  3673  0892                     	;# 
  3674  0893                     	;# 
  3675  0895                     	;# 
  3676  0896                     	;# 
  3677  0897                     	;# 
  3678  0898                     	;# 
  3679  0899                     	;# 
  3680  089A                     	;# 
  3681  089B                     	;# 
  3682  090C                     	;# 
  3683  090E                     	;# 
  3684  090F                     	;# 
  3685  091F                     	;# 
  3686  098F                     	;# 
  3687  098F                     	;# 
  3688  0990                     	;# 
  3689  0991                     	;# 
  3690  0992                     	;# 
  3691  0993                     	;# 
  3692  0994                     	;# 
  3693  0995                     	;# 
  3694  0996                     	;# 
  3695  0997                     	;# 
  3696  1E0F                     	;# 
  3697  1E10                     	;# 
  3698  1E11                     	;# 
  3699  1E12                     	;# 
  3700  1E13                     	;# 
  3701  1E14                     	;# 
  3702  1E15                     	;# 
  3703  1E16                     	;# 
  3704  1E17                     	;# 
  3705  1E18                     	;# 
  3706  1E19                     	;# 
  3707  1E1A                     	;# 
  3708  1E1B                     	;# 
  3709  1E1C                     	;# 
  3710  1E1D                     	;# 
  3711  1E1E                     	;# 
  3712  1E1F                     	;# 
  3713  1E20                     	;# 
  3714  1E21                     	;# 
  3715  1E22                     	;# 
  3716  1E23                     	;# 
  3717  1E24                     	;# 
  3718  1E25                     	;# 
  3719  1E26                     	;# 
  3720  1E27                     	;# 
  3721  1E28                     	;# 
  3722  1E29                     	;# 
  3723  1E2A                     	;# 
  3724  1E2B                     	;# 
  3725  1E2C                     	;# 
  3726  1E2D                     	;# 
  3727  1E2E                     	;# 
  3728  1E2F                     	;# 
  3729  1E30                     	;# 
  3730  1E31                     	;# 
  3731  1E32                     	;# 
  3732  1E33                     	;# 
  3733  1E34                     	;# 
  3734  1E35                     	;# 
  3735  1E36                     	;# 
  3736  1E37                     	;# 
  3737  1E8F                     	;# 
  3738  1E90                     	;# 
  3739  1E91                     	;# 
  3740  1E92                     	;# 
  3741  1E93                     	;# 
  3742  1E94                     	;# 
  3743  1E95                     	;# 
  3744  1E96                     	;# 
  3745  1E97                     	;# 
  3746  1E9C                     	;# 
  3747  1E9D                     	;# 
  3748  1E9E                     	;# 
  3749  1EA1                     	;# 
  3750  1EA2                     	;# 
  3751  1EA3                     	;# 
  3752  1EA4                     	;# 
  3753  1EA9                     	;# 
  3754  1EAA                     	;# 
  3755  1EB1                     	;# 
  3756  1EB2                     	;# 
  3757  1EB8                     	;# 
  3758  1EB9                     	;# 
  3759  1EBA                     	;# 
  3760  1EBB                     	;# 
  3761  1EBC                     	;# 
  3762  1EBD                     	;# 
  3763  1EBE                     	;# 
  3764  1EC3                     	;# 
  3765  1EC5                     	;# 
  3766  1EC6                     	;# 
  3767  1EC7                     	;# 
  3768  1EC8                     	;# 
  3769  1EC9                     	;# 
  3770  1ECA                     	;# 
  3771  1ECB                     	;# 
  3772  1ECB                     	;# 
  3773  1ECB                     	;# 
  3774  1ECC                     	;# 
  3775  1ECC                     	;# 
  3776  1ECC                     	;# 
  3777  1F10                     	;# 
  3778  1F11                     	;# 
  3779  1F12                     	;# 
  3780  1F14                     	;# 
  3781  1F15                     	;# 
  3782  1F1C                     	;# 
  3783  1F1D                     	;# 
  3784  1F1E                     	;# 
  3785  1F1F                     	;# 
  3786  1F20                     	;# 
  3787  1F21                     	;# 
  3788  1F22                     	;# 
  3789  1F23                     	;# 
  3790  1F24                     	;# 
  3791  1F25                     	;# 
  3792  1F26                     	;# 
  3793  1F27                     	;# 
  3794  1F38                     	;# 
  3795  1F39                     	;# 
  3796  1F3A                     	;# 
  3797  1F3B                     	;# 
  3798  1F3C                     	;# 
  3799  1F3D                     	;# 
  3800  1F3E                     	;# 
  3801  1F3F                     	;# 
  3802  1F43                     	;# 
  3803  1F44                     	;# 
  3804  1F45                     	;# 
  3805  1F46                     	;# 
  3806  1F47                     	;# 
  3807  1F48                     	;# 
  3808  1F49                     	;# 
  3809  1F4A                     	;# 
  3810  1F4E                     	;# 
  3811  1F4F                     	;# 
  3812  1F50                     	;# 
  3813  1F51                     	;# 
  3814  1F52                     	;# 
  3815  1F53                     	;# 
  3816  1F54                     	;# 
  3817  1F55                     	;# 
  3818  1FE4                     	;# 
  3819  1FE5                     	;# 
  3820  1FE6                     	;# 
  3821  1FE7                     	;# 
  3822  1FE8                     	;# 
  3823  1FE8                     	;# 
  3824  1FE9                     	;# 
  3825  1FEA                     	;# 
  3826  1FEB                     	;# 
  3827  1FED                     	;# 
  3828  1FEE                     	;# 
  3829  1FEF                     	;# 
  3830  0000                     	;# 
  3831  0001                     	;# 
  3832  0002                     	;# 
  3833  0003                     	;# 
  3834  0004                     	;# 
  3835  0005                     	;# 
  3836  0006                     	;# 
  3837  0007                     	;# 
  3838  0008                     	;# 
  3839  0009                     	;# 
  3840  000A                     	;# 
  3841  000B                     	;# 
  3842  000C                     	;# 
  3843  000D                     	;# 
  3844  000E                     	;# 
  3845  0012                     	;# 
  3846  0013                     	;# 
  3847  0014                     	;# 
  3848  0018                     	;# 
  3849  0019                     	;# 
  3850  001A                     	;# 
  3851  008C                     	;# 
  3852  008C                     	;# 
  3853  008D                     	;# 
  3854  008E                     	;# 
  3855  008E                     	;# 
  3856  008F                     	;# 
  3857  0090                     	;# 
  3858  0090                     	;# 
  3859  0091                     	;# 
  3860  0092                     	;# 
  3861  0092                     	;# 
  3862  0093                     	;# 
  3863  0094                     	;# 
  3864  0094                     	;# 
  3865  0095                     	;# 
  3866  0096                     	;# 
  3867  0096                     	;# 
  3868  0097                     	;# 
  3869  0098                     	;# 
  3870  0099                     	;# 
  3871  009A                     	;# 
  3872  009B                     	;# 
  3873  009B                     	;# 
  3874  009C                     	;# 
  3875  009D                     	;# 
  3876  009D                     	;# 
  3877  009E                     	;# 
  3878  009F                     	;# 
  3879  010C                     	;# 
  3880  010C                     	;# 
  3881  010D                     	;# 
  3882  010E                     	;# 
  3883  010F                     	;# 
  3884  010F                     	;# 
  3885  0110                     	;# 
  3886  0111                     	;# 
  3887  0112                     	;# 
  3888  0113                     	;# 
  3889  0114                     	;# 
  3890  0115                     	;# 
  3891  0116                     	;# 
  3892  0117                     	;# 
  3893  0118                     	;# 
  3894  0119                     	;# 
  3895  0119                     	;# 
  3896  0119                     	;# 
  3897  011A                     	;# 
  3898  011A                     	;# 
  3899  011A                     	;# 
  3900  011B                     	;# 
  3901  011B                     	;# 
  3902  011B                     	;# 
  3903  011B                     	;# 
  3904  011B                     	;# 
  3905  011C                     	;# 
  3906  011C                     	;# 
  3907  011C                     	;# 
  3908  011D                     	;# 
  3909  011D                     	;# 
  3910  011D                     	;# 
  3911  011E                     	;# 
  3912  011E                     	;# 
  3913  011E                     	;# 
  3914  011F                     	;# 
  3915  011F                     	;# 
  3916  011F                     	;# 
  3917  011F                     	;# 
  3918  011F                     	;# 
  3919  018C                     	;# 
  3920  018D                     	;# 
  3921  018E                     	;# 
  3922  018F                     	;# 
  3923  0190                     	;# 
  3924  0191                     	;# 
  3925  0192                     	;# 
  3926  0196                     	;# 
  3927  0197                     	;# 
  3928  0198                     	;# 
  3929  0199                     	;# 
  3930  019A                     	;# 
  3931  019B                     	;# 
  3932  019C                     	;# 
  3933  020C                     	;# 
  3934  020D                     	;# 
  3935  020E                     	;# 
  3936  020E                     	;# 
  3937  020F                     	;# 
  3938  020F                     	;# 
  3939  0210                     	;# 
  3940  0210                     	;# 
  3941  0211                     	;# 
  3942  0211                     	;# 
  3943  0212                     	;# 
  3944  0213                     	;# 
  3945  0214                     	;# 
  3946  0214                     	;# 
  3947  0215                     	;# 
  3948  0215                     	;# 
  3949  0216                     	;# 
  3950  0216                     	;# 
  3951  0217                     	;# 
  3952  0217                     	;# 
  3953  0218                     	;# 
  3954  0219                     	;# 
  3955  021A                     	;# 
  3956  021A                     	;# 
  3957  021B                     	;# 
  3958  021B                     	;# 
  3959  021C                     	;# 
  3960  021C                     	;# 
  3961  021D                     	;# 
  3962  021D                     	;# 
  3963  021E                     	;# 
  3964  021F                     	;# 
  3965  028C                     	;# 
  3966  028C                     	;# 
  3967  028D                     	;# 
  3968  028D                     	;# 
  3969  028E                     	;# 
  3970  028F                     	;# 
  3971  0290                     	;# 
  3972  0291                     	;# 
  3973  0292                     	;# 
  3974  0292                     	;# 
  3975  0293                     	;# 
  3976  0293                     	;# 
  3977  0294                     	;# 
  3978  0295                     	;# 
  3979  0296                     	;# 
  3980  0297                     	;# 
  3981  0298                     	;# 
  3982  0298                     	;# 
  3983  0299                     	;# 
  3984  0299                     	;# 
  3985  029A                     	;# 
  3986  029B                     	;# 
  3987  029C                     	;# 
  3988  029D                     	;# 
  3989  029F                     	;# 
  3990  030C                     	;# 
  3991  030C                     	;# 
  3992  030D                     	;# 
  3993  030E                     	;# 
  3994  030F                     	;# 
  3995  0310                     	;# 
  3996  0310                     	;# 
  3997  0311                     	;# 
  3998  0312                     	;# 
  3999  0313                     	;# 
  4000  0314                     	;# 
  4001  0314                     	;# 
  4002  0315                     	;# 
  4003  0316                     	;# 
  4004  0317                     	;# 
  4005  0318                     	;# 
  4006  0318                     	;# 
  4007  0319                     	;# 
  4008  031A                     	;# 
  4009  031B                     	;# 
  4010  038C                     	;# 
  4011  038C                     	;# 
  4012  038D                     	;# 
  4013  038E                     	;# 
  4014  0390                     	;# 
  4015  0390                     	;# 
  4016  0391                     	;# 
  4017  0392                     	;# 
  4018  048C                     	;# 
  4019  048C                     	;# 
  4020  048D                     	;# 
  4021  048E                     	;# 
  4022  048F                     	;# 
  4023  048F                     	;# 
  4024  0490                     	;# 
  4025  0491                     	;# 
  4026  0492                     	;# 
  4027  0492                     	;# 
  4028  0493                     	;# 
  4029  0494                     	;# 
  4030  0495                     	;# 
  4031  0495                     	;# 
  4032  0496                     	;# 
  4033  0497                     	;# 
  4034  0498                     	;# 
  4035  0499                     	;# 
  4036  049A                     	;# 
  4037  049B                     	;# 
  4038  049C                     	;# 
  4039  049D                     	;# 
  4040  058C                     	;# 
  4041  058C                     	;# 
  4042  058D                     	;# 
  4043  058E                     	;# 
  4044  058F                     	;# 
  4045  058F                     	;# 
  4046  0590                     	;# 
  4047  0591                     	;# 
  4048  0592                     	;# 
  4049  0593                     	;# 
  4050  059C                     	;# 
  4051  059C                     	;# 
  4052  059D                     	;# 
  4053  059D                     	;# 
  4054  059E                     	;# 
  4055  059F                     	;# 
  4056  060C                     	;# 
  4057  060C                     	;# 
  4058  060D                     	;# 
  4059  060D                     	;# 
  4060  060E                     	;# 
  4061  060F                     	;# 
  4062  0610                     	;# 
  4063  0611                     	;# 
  4064  0612                     	;# 
  4065  0613                     	;# 
  4066  0614                     	;# 
  4067  0616                     	;# 
  4068  0616                     	;# 
  4069  0617                     	;# 
  4070  0617                     	;# 
  4071  0618                     	;# 
  4072  0619                     	;# 
  4073  061A                     	;# 
  4074  061B                     	;# 
  4075  061C                     	;# 
  4076  061D                     	;# 
  4077  061E                     	;# 
  4078  070C                     	;# 
  4079  070D                     	;# 
  4080  070E                     	;# 
  4081  070F                     	;# 
  4082  0710                     	;# 
  4083  0711                     	;# 
  4084  0712                     	;# 
  4085  0713                     	;# 
  4086  0714                     	;# 
  4087  0716                     	;# 
  4088  0717                     	;# 
  4089  0718                     	;# 
  4090  0719                     	;# 
  4091  071A                     	;# 
  4092  071B                     	;# 
  4093  071C                     	;# 
  4094  071D                     	;# 
  4095  071E                     	;# 
  4096  0796                     	;# 
  4097  0797                     	;# 
  4098  0798                     	;# 
  4099  0799                     	;# 
  4100  079A                     	;# 
  4101  079B                     	;# 
  4102  079C                     	;# 
  4103  079D                     	;# 
  4104  080C                     	;# 
  4105  080D                     	;# 
  4106  080E                     	;# 
  4107  080F                     	;# 
  4108  0810                     	;# 
  4109  0811                     	;# 
  4110  0812                     	;# 
  4111  0813                     	;# 
  4112  0814                     	;# 
  4113  081A                     	;# 
  4114  081A                     	;# 
  4115  081B                     	;# 
  4116  081C                     	;# 
  4117  081C                     	;# 
  4118  081D                     	;# 
  4119  081E                     	;# 
  4120  081F                     	;# 
  4121  088C                     	;# 
  4122  088D                     	;# 
  4123  088E                     	;# 
  4124  088F                     	;# 
  4125  0890                     	;# 
  4126  0891                     	;# 
  4127  0892                     	;# 
  4128  0893                     	;# 
  4129  0895                     	;# 
  4130  0896                     	;# 
  4131  0897                     	;# 
  4132  0898                     	;# 
  4133  0899                     	;# 
  4134  089A                     	;# 
  4135  089B                     	;# 
  4136  090C                     	;# 
  4137  090E                     	;# 
  4138  090F                     	;# 
  4139  091F                     	;# 
  4140  098F                     	;# 
  4141  098F                     	;# 
  4142  0990                     	;# 
  4143  0991                     	;# 
  4144  0992                     	;# 
  4145  0993                     	;# 
  4146  0994                     	;# 
  4147  0995                     	;# 
  4148  0996                     	;# 
  4149  0997                     	;# 
  4150  1E0F                     	;# 
  4151  1E10                     	;# 
  4152  1E11                     	;# 
  4153  1E12                     	;# 
  4154  1E13                     	;# 
  4155  1E14                     	;# 
  4156  1E15                     	;# 
  4157  1E16                     	;# 
  4158  1E17                     	;# 
  4159  1E18                     	;# 
  4160  1E19                     	;# 
  4161  1E1A                     	;# 
  4162  1E1B                     	;# 
  4163  1E1C                     	;# 
  4164  1E1D                     	;# 
  4165  1E1E                     	;# 
  4166  1E1F                     	;# 
  4167  1E20                     	;# 
  4168  1E21                     	;# 
  4169  1E22                     	;# 
  4170  1E23                     	;# 
  4171  1E24                     	;# 
  4172  1E25                     	;# 
  4173  1E26                     	;# 
  4174  1E27                     	;# 
  4175  1E28                     	;# 
  4176  1E29                     	;# 
  4177  1E2A                     	;# 
  4178  1E2B                     	;# 
  4179  1E2C                     	;# 
  4180  1E2D                     	;# 
  4181  1E2E                     	;# 
  4182  1E2F                     	;# 
  4183  1E30                     	;# 
  4184  1E31                     	;# 
  4185  1E32                     	;# 
  4186  1E33                     	;# 
  4187  1E34                     	;# 
  4188  1E35                     	;# 
  4189  1E36                     	;# 
  4190  1E37                     	;# 
  4191  1E8F                     	;# 
  4192  1E90                     	;# 
  4193  1E91                     	;# 
  4194  1E92                     	;# 
  4195  1E93                     	;# 
  4196  1E94                     	;# 
  4197  1E95                     	;# 
  4198  1E96                     	;# 
  4199  1E97                     	;# 
  4200  1E9C                     	;# 
  4201  1E9D                     	;# 
  4202  1E9E                     	;# 
  4203  1EA1                     	;# 
  4204  1EA2                     	;# 
  4205  1EA3                     	;# 
  4206  1EA4                     	;# 
  4207  1EA9                     	;# 
  4208  1EAA                     	;# 
  4209  1EB1                     	;# 
  4210  1EB2                     	;# 
  4211  1EB8                     	;# 
  4212  1EB9                     	;# 
  4213  1EBA                     	;# 
  4214  1EBB                     	;# 
  4215  1EBC                     	;# 
  4216  1EBD                     	;# 
  4217  1EBE                     	;# 
  4218  1EC3                     	;# 
  4219  1EC5                     	;# 
  4220  1EC6                     	;# 
  4221  1EC7                     	;# 
  4222  1EC8                     	;# 
  4223  1EC9                     	;# 
  4224  1ECA                     	;# 
  4225  1ECB                     	;# 
  4226  1ECB                     	;# 
  4227  1ECB                     	;# 
  4228  1ECC                     	;# 
  4229  1ECC                     	;# 
  4230  1ECC                     	;# 
  4231  1F10                     	;# 
  4232  1F11                     	;# 
  4233  1F12                     	;# 
  4234  1F14                     	;# 
  4235  1F15                     	;# 
  4236  1F1C                     	;# 
  4237  1F1D                     	;# 
  4238  1F1E                     	;# 
  4239  1F1F                     	;# 
  4240  1F20                     	;# 
  4241  1F21                     	;# 
  4242  1F22                     	;# 
  4243  1F23                     	;# 
  4244  1F24                     	;# 
  4245  1F25                     	;# 
  4246  1F26                     	;# 
  4247  1F27                     	;# 
  4248  1F38                     	;# 
  4249  1F39                     	;# 
  4250  1F3A                     	;# 
  4251  1F3B                     	;# 
  4252  1F3C                     	;# 
  4253  1F3D                     	;# 
  4254  1F3E                     	;# 
  4255  1F3F                     	;# 
  4256  1F43                     	;# 
  4257  1F44                     	;# 
  4258  1F45                     	;# 
  4259  1F46                     	;# 
  4260  1F47                     	;# 
  4261  1F48                     	;# 
  4262  1F49                     	;# 
  4263  1F4A                     	;# 
  4264  1F4E                     	;# 
  4265  1F4F                     	;# 
  4266  1F50                     	;# 
  4267  1F51                     	;# 
  4268  1F52                     	;# 
  4269  1F53                     	;# 
  4270  1F54                     	;# 
  4271  1F55                     	;# 
  4272  1FE4                     	;# 
  4273  1FE5                     	;# 
  4274  1FE6                     	;# 
  4275  1FE7                     	;# 
  4276  1FE8                     	;# 
  4277  1FE8                     	;# 
  4278  1FE9                     	;# 
  4279  1FEA                     	;# 
  4280  1FEB                     	;# 
  4281  1FED                     	;# 
  4282  1FEE                     	;# 
  4283  1FEF                     	;# 
  4284  0000                     	;# 
  4285  0001                     	;# 
  4286  0002                     	;# 
  4287  0003                     	;# 
  4288  0004                     	;# 
  4289  0005                     	;# 
  4290  0006                     	;# 
  4291  0007                     	;# 
  4292  0008                     	;# 
  4293  0009                     	;# 
  4294  000A                     	;# 
  4295  000B                     	;# 
  4296  000C                     	;# 
  4297  000D                     	;# 
  4298  000E                     	;# 
  4299  0012                     	;# 
  4300  0013                     	;# 
  4301  0014                     	;# 
  4302  0018                     	;# 
  4303  0019                     	;# 
  4304  001A                     	;# 
  4305  008C                     	;# 
  4306  008C                     	;# 
  4307  008D                     	;# 
  4308  008E                     	;# 
  4309  008E                     	;# 
  4310  008F                     	;# 
  4311  0090                     	;# 
  4312  0090                     	;# 
  4313  0091                     	;# 
  4314  0092                     	;# 
  4315  0092                     	;# 
  4316  0093                     	;# 
  4317  0094                     	;# 
  4318  0094                     	;# 
  4319  0095                     	;# 
  4320  0096                     	;# 
  4321  0096                     	;# 
  4322  0097                     	;# 
  4323  0098                     	;# 
  4324  0099                     	;# 
  4325  009A                     	;# 
  4326  009B                     	;# 
  4327  009B                     	;# 
  4328  009C                     	;# 
  4329  009D                     	;# 
  4330  009D                     	;# 
  4331  009E                     	;# 
  4332  009F                     	;# 
  4333  010C                     	;# 
  4334  010C                     	;# 
  4335  010D                     	;# 
  4336  010E                     	;# 
  4337  010F                     	;# 
  4338  010F                     	;# 
  4339  0110                     	;# 
  4340  0111                     	;# 
  4341  0112                     	;# 
  4342  0113                     	;# 
  4343  0114                     	;# 
  4344  0115                     	;# 
  4345  0116                     	;# 
  4346  0117                     	;# 
  4347  0118                     	;# 
  4348  0119                     	;# 
  4349  0119                     	;# 
  4350  0119                     	;# 
  4351  011A                     	;# 
  4352  011A                     	;# 
  4353  011A                     	;# 
  4354  011B                     	;# 
  4355  011B                     	;# 
  4356  011B                     	;# 
  4357  011B                     	;# 
  4358  011B                     	;# 
  4359  011C                     	;# 
  4360  011C                     	;# 
  4361  011C                     	;# 
  4362  011D                     	;# 
  4363  011D                     	;# 
  4364  011D                     	;# 
  4365  011E                     	;# 
  4366  011E                     	;# 
  4367  011E                     	;# 
  4368  011F                     	;# 
  4369  011F                     	;# 
  4370  011F                     	;# 
  4371  011F                     	;# 
  4372  011F                     	;# 
  4373  018C                     	;# 
  4374  018D                     	;# 
  4375  018E                     	;# 
  4376  018F                     	;# 
  4377  0190                     	;# 
  4378  0191                     	;# 
  4379  0192                     	;# 
  4380  0196                     	;# 
  4381  0197                     	;# 
  4382  0198                     	;# 
  4383  0199                     	;# 
  4384  019A                     	;# 
  4385  019B                     	;# 
  4386  019C                     	;# 
  4387  020C                     	;# 
  4388  020D                     	;# 
  4389  020E                     	;# 
  4390  020E                     	;# 
  4391  020F                     	;# 
  4392  020F                     	;# 
  4393  0210                     	;# 
  4394  0210                     	;# 
  4395  0211                     	;# 
  4396  0211                     	;# 
  4397  0212                     	;# 
  4398  0213                     	;# 
  4399  0214                     	;# 
  4400  0214                     	;# 
  4401  0215                     	;# 
  4402  0215                     	;# 
  4403  0216                     	;# 
  4404  0216                     	;# 
  4405  0217                     	;# 
  4406  0217                     	;# 
  4407  0218                     	;# 
  4408  0219                     	;# 
  4409  021A                     	;# 
  4410  021A                     	;# 
  4411  021B                     	;# 
  4412  021B                     	;# 
  4413  021C                     	;# 
  4414  021C                     	;# 
  4415  021D                     	;# 
  4416  021D                     	;# 
  4417  021E                     	;# 
  4418  021F                     	;# 
  4419  028C                     	;# 
  4420  028C                     	;# 
  4421  028D                     	;# 
  4422  028D                     	;# 
  4423  028E                     	;# 
  4424  028F                     	;# 
  4425  0290                     	;# 
  4426  0291                     	;# 
  4427  0292                     	;# 
  4428  0292                     	;# 
  4429  0293                     	;# 
  4430  0293                     	;# 
  4431  0294                     	;# 
  4432  0295                     	;# 
  4433  0296                     	;# 
  4434  0297                     	;# 
  4435  0298                     	;# 
  4436  0298                     	;# 
  4437  0299                     	;# 
  4438  0299                     	;# 
  4439  029A                     	;# 
  4440  029B                     	;# 
  4441  029C                     	;# 
  4442  029D                     	;# 
  4443  029F                     	;# 
  4444  030C                     	;# 
  4445  030C                     	;# 
  4446  030D                     	;# 
  4447  030E                     	;# 
  4448  030F                     	;# 
  4449  0310                     	;# 
  4450  0310                     	;# 
  4451  0311                     	;# 
  4452  0312                     	;# 
  4453  0313                     	;# 
  4454  0314                     	;# 
  4455  0314                     	;# 
  4456  0315                     	;# 
  4457  0316                     	;# 
  4458  0317                     	;# 
  4459  0318                     	;# 
  4460  0318                     	;# 
  4461  0319                     	;# 
  4462  031A                     	;# 
  4463  031B                     	;# 
  4464  038C                     	;# 
  4465  038C                     	;# 
  4466  038D                     	;# 
  4467  038E                     	;# 
  4468  0390                     	;# 
  4469  0390                     	;# 
  4470  0391                     	;# 
  4471  0392                     	;# 
  4472  048C                     	;# 
  4473  048C                     	;# 
  4474  048D                     	;# 
  4475  048E                     	;# 
  4476  048F                     	;# 
  4477  048F                     	;# 
  4478  0490                     	;# 
  4479  0491                     	;# 
  4480  0492                     	;# 
  4481  0492                     	;# 
  4482  0493                     	;# 
  4483  0494                     	;# 
  4484  0495                     	;# 
  4485  0495                     	;# 
  4486  0496                     	;# 
  4487  0497                     	;# 
  4488  0498                     	;# 
  4489  0499                     	;# 
  4490  049A                     	;# 
  4491  049B                     	;# 
  4492  049C                     	;# 
  4493  049D                     	;# 
  4494  058C                     	;# 
  4495  058C                     	;# 
  4496  058D                     	;# 
  4497  058E                     	;# 
  4498  058F                     	;# 
  4499  058F                     	;# 
  4500  0590                     	;# 
  4501  0591                     	;# 
  4502  0592                     	;# 
  4503  0593                     	;# 
  4504  059C                     	;# 
  4505  059C                     	;# 
  4506  059D                     	;# 
  4507  059D                     	;# 
  4508  059E                     	;# 
  4509  059F                     	;# 
  4510  060C                     	;# 
  4511  060C                     	;# 
  4512  060D                     	;# 
  4513  060D                     	;# 
  4514  060E                     	;# 
  4515  060F                     	;# 
  4516  0610                     	;# 
  4517  0611                     	;# 
  4518  0612                     	;# 
  4519  0613                     	;# 
  4520  0614                     	;# 
  4521  0616                     	;# 
  4522  0616                     	;# 
  4523  0617                     	;# 
  4524  0617                     	;# 
  4525  0618                     	;# 
  4526  0619                     	;# 
  4527  061A                     	;# 
  4528  061B                     	;# 
  4529  061C                     	;# 
  4530  061D                     	;# 
  4531  061E                     	;# 
  4532  070C                     	;# 
  4533  070D                     	;# 
  4534  070E                     	;# 
  4535  070F                     	;# 
  4536  0710                     	;# 
  4537  0711                     	;# 
  4538  0712                     	;# 
  4539  0713                     	;# 
  4540  0714                     	;# 
  4541  0716                     	;# 
  4542  0717                     	;# 
  4543  0718                     	;# 
  4544  0719                     	;# 
  4545  071A                     	;# 
  4546  071B                     	;# 
  4547  071C                     	;# 
  4548  071D                     	;# 
  4549  071E                     	;# 
  4550  0796                     	;# 
  4551  0797                     	;# 
  4552  0798                     	;# 
  4553  0799                     	;# 
  4554  079A                     	;# 
  4555  079B                     	;# 
  4556  079C                     	;# 
  4557  079D                     	;# 
  4558  080C                     	;# 
  4559  080D                     	;# 
  4560  080E                     	;# 
  4561  080F                     	;# 
  4562  0810                     	;# 
  4563  0811                     	;# 
  4564  0812                     	;# 
  4565  0813                     	;# 
  4566  0814                     	;# 
  4567  081A                     	;# 
  4568  081A                     	;# 
  4569  081B                     	;# 
  4570  081C                     	;# 
  4571  081C                     	;# 
  4572  081D                     	;# 
  4573  081E                     	;# 
  4574  081F                     	;# 
  4575  088C                     	;# 
  4576  088D                     	;# 
  4577  088E                     	;# 
  4578  088F                     	;# 
  4579  0890                     	;# 
  4580  0891                     	;# 
  4581  0892                     	;# 
  4582  0893                     	;# 
  4583  0895                     	;# 
  4584  0896                     	;# 
  4585  0897                     	;# 
  4586  0898                     	;# 
  4587  0899                     	;# 
  4588  089A                     	;# 
  4589  089B                     	;# 
  4590  090C                     	;# 
  4591  090E                     	;# 
  4592  090F                     	;# 
  4593  091F                     	;# 
  4594  098F                     	;# 
  4595  098F                     	;# 
  4596  0990                     	;# 
  4597  0991                     	;# 
  4598  0992                     	;# 
  4599  0993                     	;# 
  4600  0994                     	;# 
  4601  0995                     	;# 
  4602  0996                     	;# 
  4603  0997                     	;# 
  4604  1E0F                     	;# 
  4605  1E10                     	;# 
  4606  1E11                     	;# 
  4607  1E12                     	;# 
  4608  1E13                     	;# 
  4609  1E14                     	;# 
  4610  1E15                     	;# 
  4611  1E16                     	;# 
  4612  1E17                     	;# 
  4613  1E18                     	;# 
  4614  1E19                     	;# 
  4615  1E1A                     	;# 
  4616  1E1B                     	;# 
  4617  1E1C                     	;# 
  4618  1E1D                     	;# 
  4619  1E1E                     	;# 
  4620  1E1F                     	;# 
  4621  1E20                     	;# 
  4622  1E21                     	;# 
  4623  1E22                     	;# 
  4624  1E23                     	;# 
  4625  1E24                     	;# 
  4626  1E25                     	;# 
  4627  1E26                     	;# 
  4628  1E27                     	;# 
  4629  1E28                     	;# 
  4630  1E29                     	;# 
  4631  1E2A                     	;# 
  4632  1E2B                     	;# 
  4633  1E2C                     	;# 
  4634  1E2D                     	;# 
  4635  1E2E                     	;# 
  4636  1E2F                     	;# 
  4637  1E30                     	;# 
  4638  1E31                     	;# 
  4639  1E32                     	;# 
  4640  1E33                     	;# 
  4641  1E34                     	;# 
  4642  1E35                     	;# 
  4643  1E36                     	;# 
  4644  1E37                     	;# 
  4645  1E8F                     	;# 
  4646  1E90                     	;# 
  4647  1E91                     	;# 
  4648  1E92                     	;# 
  4649  1E93                     	;# 
  4650  1E94                     	;# 
  4651  1E95                     	;# 
  4652  1E96                     	;# 
  4653  1E97                     	;# 
  4654  1E9C                     	;# 
  4655  1E9D                     	;# 
  4656  1E9E                     	;# 
  4657  1EA1                     	;# 
  4658  1EA2                     	;# 
  4659  1EA3                     	;# 
  4660  1EA4                     	;# 
  4661  1EA9                     	;# 
  4662  1EAA                     	;# 
  4663  1EB1                     	;# 
  4664  1EB2                     	;# 
  4665  1EB8                     	;# 
  4666  1EB9                     	;# 
  4667  1EBA                     	;# 
  4668  1EBB                     	;# 
  4669  1EBC                     	;# 
  4670  1EBD                     	;# 
  4671  1EBE                     	;# 
  4672  1EC3                     	;# 
  4673  1EC5                     	;# 
  4674  1EC6                     	;# 
  4675  1EC7                     	;# 
  4676  1EC8                     	;# 
  4677  1EC9                     	;# 
  4678  1ECA                     	;# 
  4679  1ECB                     	;# 
  4680  1ECB                     	;# 
  4681  1ECB                     	;# 
  4682  1ECC                     	;# 
  4683  1ECC                     	;# 
  4684  1ECC                     	;# 
  4685  1F10                     	;# 
  4686  1F11                     	;# 
  4687  1F12                     	;# 
  4688  1F14                     	;# 
  4689  1F15                     	;# 
  4690  1F1C                     	;# 
  4691  1F1D                     	;# 
  4692  1F1E                     	;# 
  4693  1F1F                     	;# 
  4694  1F20                     	;# 
  4695  1F21                     	;# 
  4696  1F22                     	;# 
  4697  1F23                     	;# 
  4698  1F24                     	;# 
  4699  1F25                     	;# 
  4700  1F26                     	;# 
  4701  1F27                     	;# 
  4702  1F38                     	;# 
  4703  1F39                     	;# 
  4704  1F3A                     	;# 
  4705  1F3B                     	;# 
  4706  1F3C                     	;# 
  4707  1F3D                     	;# 
  4708  1F3E                     	;# 
  4709  1F3F                     	;# 
  4710  1F43                     	;# 
  4711  1F44                     	;# 
  4712  1F45                     	;# 
  4713  1F46                     	;# 
  4714  1F47                     	;# 
  4715  1F48                     	;# 
  4716  1F49                     	;# 
  4717  1F4A                     	;# 
  4718  1F4E                     	;# 
  4719  1F4F                     	;# 
  4720  1F50                     	;# 
  4721  1F51                     	;# 
  4722  1F52                     	;# 
  4723  1F53                     	;# 
  4724  1F54                     	;# 
  4725  1F55                     	;# 
  4726  1FE4                     	;# 
  4727  1FE5                     	;# 
  4728  1FE6                     	;# 
  4729  1FE7                     	;# 
  4730  1FE8                     	;# 
  4731  1FE8                     	;# 
  4732  1FE9                     	;# 
  4733  1FEA                     	;# 
  4734  1FEB                     	;# 
  4735  1FED                     	;# 
  4736  1FEE                     	;# 
  4737  1FEF                     	;# 
  4738  0000                     	;# 
  4739  0001                     	;# 
  4740  0002                     	;# 
  4741  0003                     	;# 
  4742  0004                     	;# 
  4743  0005                     	;# 
  4744  0006                     	;# 
  4745  0007                     	;# 
  4746  0008                     	;# 
  4747  0009                     	;# 
  4748  000A                     	;# 
  4749  000B                     	;# 
  4750  000C                     	;# 
  4751  000D                     	;# 
  4752  000E                     	;# 
  4753  0012                     	;# 
  4754  0013                     	;# 
  4755  0014                     	;# 
  4756  0018                     	;# 
  4757  0019                     	;# 
  4758  001A                     	;# 
  4759  008C                     	;# 
  4760  008C                     	;# 
  4761  008D                     	;# 
  4762  008E                     	;# 
  4763  008E                     	;# 
  4764  008F                     	;# 
  4765  0090                     	;# 
  4766  0090                     	;# 
  4767  0091                     	;# 
  4768  0092                     	;# 
  4769  0092                     	;# 
  4770  0093                     	;# 
  4771  0094                     	;# 
  4772  0094                     	;# 
  4773  0095                     	;# 
  4774  0096                     	;# 
  4775  0096                     	;# 
  4776  0097                     	;# 
  4777  0098                     	;# 
  4778  0099                     	;# 
  4779  009A                     	;# 
  4780  009B                     	;# 
  4781  009B                     	;# 
  4782  009C                     	;# 
  4783  009D                     	;# 
  4784  009D                     	;# 
  4785  009E                     	;# 
  4786  009F                     	;# 
  4787  010C                     	;# 
  4788  010C                     	;# 
  4789  010D                     	;# 
  4790  010E                     	;# 
  4791  010F                     	;# 
  4792  010F                     	;# 
  4793  0110                     	;# 
  4794  0111                     	;# 
  4795  0112                     	;# 
  4796  0113                     	;# 
  4797  0114                     	;# 
  4798  0115                     	;# 
  4799  0116                     	;# 
  4800  0117                     	;# 
  4801  0118                     	;# 
  4802  0119                     	;# 
  4803  0119                     	;# 
  4804  0119                     	;# 
  4805  011A                     	;# 
  4806  011A                     	;# 
  4807  011A                     	;# 
  4808  011B                     	;# 
  4809  011B                     	;# 
  4810  011B                     	;# 
  4811  011B                     	;# 
  4812  011B                     	;# 
  4813  011C                     	;# 
  4814  011C                     	;# 
  4815  011C                     	;# 
  4816  011D                     	;# 
  4817  011D                     	;# 
  4818  011D                     	;# 
  4819  011E                     	;# 
  4820  011E                     	;# 
  4821  011E                     	;# 
  4822  011F                     	;# 
  4823  011F                     	;# 
  4824  011F                     	;# 
  4825  011F                     	;# 
  4826  011F                     	;# 
  4827  018C                     	;# 
  4828  018D                     	;# 
  4829  018E                     	;# 
  4830  018F                     	;# 
  4831  0190                     	;# 
  4832  0191                     	;# 
  4833  0192                     	;# 
  4834  0196                     	;# 
  4835  0197                     	;# 
  4836  0198                     	;# 
  4837  0199                     	;# 
  4838  019A                     	;# 
  4839  019B                     	;# 
  4840  019C                     	;# 
  4841  020C                     	;# 
  4842  020D                     	;# 
  4843  020E                     	;# 
  4844  020E                     	;# 
  4845  020F                     	;# 
  4846  020F                     	;# 
  4847  0210                     	;# 
  4848  0210                     	;# 
  4849  0211                     	;# 
  4850  0211                     	;# 
  4851  0212                     	;# 
  4852  0213                     	;# 
  4853  0214                     	;# 
  4854  0214                     	;# 
  4855  0215                     	;# 
  4856  0215                     	;# 
  4857  0216                     	;# 
  4858  0216                     	;# 
  4859  0217                     	;# 
  4860  0217                     	;# 
  4861  0218                     	;# 
  4862  0219                     	;# 
  4863  021A                     	;# 
  4864  021A                     	;# 
  4865  021B                     	;# 
  4866  021B                     	;# 
  4867  021C                     	;# 
  4868  021C                     	;# 
  4869  021D                     	;# 
  4870  021D                     	;# 
  4871  021E                     	;# 
  4872  021F                     	;# 
  4873  028C                     	;# 
  4874  028C                     	;# 
  4875  028D                     	;# 
  4876  028D                     	;# 
  4877  028E                     	;# 
  4878  028F                     	;# 
  4879  0290                     	;# 
  4880  0291                     	;# 
  4881  0292                     	;# 
  4882  0292                     	;# 
  4883  0293                     	;# 
  4884  0293                     	;# 
  4885  0294                     	;# 
  4886  0295                     	;# 
  4887  0296                     	;# 
  4888  0297                     	;# 
  4889  0298                     	;# 
  4890  0298                     	;# 
  4891  0299                     	;# 
  4892  0299                     	;# 
  4893  029A                     	;# 
  4894  029B                     	;# 
  4895  029C                     	;# 
  4896  029D                     	;# 
  4897  029F                     	;# 
  4898  030C                     	;# 
  4899  030C                     	;# 
  4900  030D                     	;# 
  4901  030E                     	;# 
  4902  030F                     	;# 
  4903  0310                     	;# 
  4904  0310                     	;# 
  4905  0311                     	;# 
  4906  0312                     	;# 
  4907  0313                     	;# 
  4908  0314                     	;# 
  4909  0314                     	;# 
  4910  0315                     	;# 
  4911  0316                     	;# 
  4912  0317                     	;# 
  4913  0318                     	;# 
  4914  0318                     	;# 
  4915  0319                     	;# 
  4916  031A                     	;# 
  4917  031B                     	;# 
  4918  038C                     	;# 
  4919  038C                     	;# 
  4920  038D                     	;# 
  4921  038E                     	;# 
  4922  0390                     	;# 
  4923  0390                     	;# 
  4924  0391                     	;# 
  4925  0392                     	;# 
  4926  048C                     	;# 
  4927  048C                     	;# 
  4928  048D                     	;# 
  4929  048E                     	;# 
  4930  048F                     	;# 
  4931  048F                     	;# 
  4932  0490                     	;# 
  4933  0491                     	;# 
  4934  0492                     	;# 
  4935  0492                     	;# 
  4936  0493                     	;# 
  4937  0494                     	;# 
  4938  0495                     	;# 
  4939  0495                     	;# 
  4940  0496                     	;# 
  4941  0497                     	;# 
  4942  0498                     	;# 
  4943  0499                     	;# 
  4944  049A                     	;# 
  4945  049B                     	;# 
  4946  049C                     	;# 
  4947  049D                     	;# 
  4948  058C                     	;# 
  4949  058C                     	;# 
  4950  058D                     	;# 
  4951  058E                     	;# 
  4952  058F                     	;# 
  4953  058F                     	;# 
  4954  0590                     	;# 
  4955  0591                     	;# 
  4956  0592                     	;# 
  4957  0593                     	;# 
  4958  059C                     	;# 
  4959  059C                     	;# 
  4960  059D                     	;# 
  4961  059D                     	;# 
  4962  059E                     	;# 
  4963  059F                     	;# 
  4964  060C                     	;# 
  4965  060C                     	;# 
  4966  060D                     	;# 
  4967  060D                     	;# 
  4968  060E                     	;# 
  4969  060F                     	;# 
  4970  0610                     	;# 
  4971  0611                     	;# 
  4972  0612                     	;# 
  4973  0613                     	;# 
  4974  0614                     	;# 
  4975  0616                     	;# 
  4976  0616                     	;# 
  4977  0617                     	;# 
  4978  0617                     	;# 
  4979  0618                     	;# 
  4980  0619                     	;# 
  4981  061A                     	;# 
  4982  061B                     	;# 
  4983  061C                     	;# 
  4984  061D                     	;# 
  4985  061E                     	;# 
  4986  070C                     	;# 
  4987  070D                     	;# 
  4988  070E                     	;# 
  4989  070F                     	;# 
  4990  0710                     	;# 
  4991  0711                     	;# 
  4992  0712                     	;# 
  4993  0713                     	;# 
  4994  0714                     	;# 
  4995  0716                     	;# 
  4996  0717                     	;# 
  4997  0718                     	;# 
  4998  0719                     	;# 
  4999  071A                     	;# 
  5000  071B                     	;# 
  5001  071C                     	;# 
  5002  071D                     	;# 
  5003  071E                     	;# 
  5004  0796                     	;# 
  5005  0797                     	;# 
  5006  0798                     	;# 
  5007  0799                     	;# 
  5008  079A                     	;# 
  5009  079B                     	;# 
  5010  079C                     	;# 
  5011  079D                     	;# 
  5012  080C                     	;# 
  5013  080D                     	;# 
  5014  080E                     	;# 
  5015  080F                     	;# 
  5016  0810                     	;# 
  5017  0811                     	;# 
  5018  0812                     	;# 
  5019  0813                     	;# 
  5020  0814                     	;# 
  5021  081A                     	;# 
  5022  081A                     	;# 
  5023  081B                     	;# 
  5024  081C                     	;# 
  5025  081C                     	;# 
  5026  081D                     	;# 
  5027  081E                     	;# 
  5028  081F                     	;# 
  5029  088C                     	;# 
  5030  088D                     	;# 
  5031  088E                     	;# 
  5032  088F                     	;# 
  5033  0890                     	;# 
  5034  0891                     	;# 
  5035  0892                     	;# 
  5036  0893                     	;# 
  5037  0895                     	;# 
  5038  0896                     	;# 
  5039  0897                     	;# 
  5040  0898                     	;# 
  5041  0899                     	;# 
  5042  089A                     	;# 
  5043  089B                     	;# 
  5044  090C                     	;# 
  5045  090E                     	;# 
  5046  090F                     	;# 
  5047  091F                     	;# 
  5048  098F                     	;# 
  5049  098F                     	;# 
  5050  0990                     	;# 
  5051  0991                     	;# 
  5052  0992                     	;# 
  5053  0993                     	;# 
  5054  0994                     	;# 
  5055  0995                     	;# 
  5056  0996                     	;# 
  5057  0997                     	;# 
  5058  1E0F                     	;# 
  5059  1E10                     	;# 
  5060  1E11                     	;# 
  5061  1E12                     	;# 
  5062  1E13                     	;# 
  5063  1E14                     	;# 
  5064  1E15                     	;# 
  5065  1E16                     	;# 
  5066  1E17                     	;# 
  5067  1E18                     	;# 
  5068  1E19                     	;# 
  5069  1E1A                     	;# 
  5070  1E1B                     	;# 
  5071  1E1C                     	;# 
  5072  1E1D                     	;# 
  5073  1E1E                     	;# 
  5074  1E1F                     	;# 
  5075  1E20                     	;# 
  5076  1E21                     	;# 
  5077  1E22                     	;# 
  5078  1E23                     	;# 
  5079  1E24                     	;# 
  5080  1E25                     	;# 
  5081  1E26                     	;# 
  5082  1E27                     	;# 
  5083  1E28                     	;# 
  5084  1E29                     	;# 
  5085  1E2A                     	;# 
  5086  1E2B                     	;# 
  5087  1E2C                     	;# 
  5088  1E2D                     	;# 
  5089  1E2E                     	;# 
  5090  1E2F                     	;# 
  5091  1E30                     	;# 
  5092  1E31                     	;# 
  5093  1E32                     	;# 
  5094  1E33                     	;# 
  5095  1E34                     	;# 
  5096  1E35                     	;# 
  5097  1E36                     	;# 
  5098  1E37                     	;# 
  5099  1E8F                     	;# 
  5100  1E90                     	;# 
  5101  1E91                     	;# 
  5102  1E92                     	;# 
  5103  1E93                     	;# 
  5104  1E94                     	;# 
  5105  1E95                     	;# 
  5106  1E96                     	;# 
  5107  1E97                     	;# 
  5108  1E9C                     	;# 
  5109  1E9D                     	;# 
  5110  1E9E                     	;# 
  5111  1EA1                     	;# 
  5112  1EA2                     	;# 
  5113  1EA3                     	;# 
  5114  1EA4                     	;# 
  5115  1EA9                     	;# 
  5116  1EAA                     	;# 
  5117  1EB1                     	;# 
  5118  1EB2                     	;# 
  5119  1EB8                     	;# 
  5120  1EB9                     	;# 
  5121  1EBA                     	;# 
  5122  1EBB                     	;# 
  5123  1EBC                     	;# 
  5124  1EBD                     	;# 
  5125  1EBE                     	;# 
  5126  1EC3                     	;# 
  5127  1EC5                     	;# 
  5128  1EC6                     	;# 
  5129  1EC7                     	;# 
  5130  1EC8                     	;# 
  5131  1EC9                     	;# 
  5132  1ECA                     	;# 
  5133  1ECB                     	;# 
  5134  1ECB                     	;# 
  5135  1ECB                     	;# 
  5136  1ECC                     	;# 
  5137  1ECC                     	;# 
  5138  1ECC                     	;# 
  5139  1F10                     	;# 
  5140  1F11                     	;# 
  5141  1F12                     	;# 
  5142  1F14                     	;# 
  5143  1F15                     	;# 
  5144  1F1C                     	;# 
  5145  1F1D                     	;# 
  5146  1F1E                     	;# 
  5147  1F1F                     	;# 
  5148  1F20                     	;# 
  5149  1F21                     	;# 
  5150  1F22                     	;# 
  5151  1F23                     	;# 
  5152  1F24                     	;# 
  5153  1F25                     	;# 
  5154  1F26                     	;# 
  5155  1F27                     	;# 
  5156  1F38                     	;# 
  5157  1F39                     	;# 
  5158  1F3A                     	;# 
  5159  1F3B                     	;# 
  5160  1F3C                     	;# 
  5161  1F3D                     	;# 
  5162  1F3E                     	;# 
  5163  1F3F                     	;# 
  5164  1F43                     	;# 
  5165  1F44                     	;# 
  5166  1F45                     	;# 
  5167  1F46                     	;# 
  5168  1F47                     	;# 
  5169  1F48                     	;# 
  5170  1F49                     	;# 
  5171  1F4A                     	;# 
  5172  1F4E                     	;# 
  5173  1F4F                     	;# 
  5174  1F50                     	;# 
  5175  1F51                     	;# 
  5176  1F52                     	;# 
  5177  1F53                     	;# 
  5178  1F54                     	;# 
  5179  1F55                     	;# 
  5180  1FE4                     	;# 
  5181  1FE5                     	;# 
  5182  1FE6                     	;# 
  5183  1FE7                     	;# 
  5184  1FE8                     	;# 
  5185  1FE8                     	;# 
  5186  1FE9                     	;# 
  5187  1FEA                     	;# 
  5188  1FEB                     	;# 
  5189  1FED                     	;# 
  5190  1FEE                     	;# 
  5191  1FEF                     	;# 
  5192  0000                     	;# 
  5193  0001                     	;# 
  5194  0002                     	;# 
  5195  0003                     	;# 
  5196  0004                     	;# 
  5197  0005                     	;# 
  5198  0006                     	;# 
  5199  0007                     	;# 
  5200  0008                     	;# 
  5201  0009                     	;# 
  5202  000A                     	;# 
  5203  000B                     	;# 
  5204  000C                     	;# 
  5205  000D                     	;# 
  5206  000E                     	;# 
  5207  0012                     	;# 
  5208  0013                     	;# 
  5209  0014                     	;# 
  5210  0018                     	;# 
  5211  0019                     	;# 
  5212  001A                     	;# 
  5213  008C                     	;# 
  5214  008C                     	;# 
  5215  008D                     	;# 
  5216  008E                     	;# 
  5217  008E                     	;# 
  5218  008F                     	;# 
  5219  0090                     	;# 
  5220  0090                     	;# 
  5221  0091                     	;# 
  5222  0092                     	;# 
  5223  0092                     	;# 
  5224  0093                     	;# 
  5225  0094                     	;# 
  5226  0094                     	;# 
  5227  0095                     	;# 
  5228  0096                     	;# 
  5229  0096                     	;# 
  5230  0097                     	;# 
  5231  0098                     	;# 
  5232  0099                     	;# 
  5233  009A                     	;# 
  5234  009B                     	;# 
  5235  009B                     	;# 
  5236  009C                     	;# 
  5237  009D                     	;# 
  5238  009D                     	;# 
  5239  009E                     	;# 
  5240  009F                     	;# 
  5241  010C                     	;# 
  5242  010C                     	;# 
  5243  010D                     	;# 
  5244  010E                     	;# 
  5245  010F                     	;# 
  5246  010F                     	;# 
  5247  0110                     	;# 
  5248  0111                     	;# 
  5249  0112                     	;# 
  5250  0113                     	;# 
  5251  0114                     	;# 
  5252  0115                     	;# 
  5253  0116                     	;# 
  5254  0117                     	;# 
  5255  0118                     	;# 
  5256  0119                     	;# 
  5257  0119                     	;# 
  5258  0119                     	;# 
  5259  011A                     	;# 
  5260  011A                     	;# 
  5261  011A                     	;# 
  5262  011B                     	;# 
  5263  011B                     	;# 
  5264  011B                     	;# 
  5265  011B                     	;# 
  5266  011B                     	;# 
  5267  011C                     	;# 
  5268  011C                     	;# 
  5269  011C                     	;# 
  5270  011D                     	;# 
  5271  011D                     	;# 
  5272  011D                     	;# 
  5273  011E                     	;# 
  5274  011E                     	;# 
  5275  011E                     	;# 
  5276  011F                     	;# 
  5277  011F                     	;# 
  5278  011F                     	;# 
  5279  011F                     	;# 
  5280  011F                     	;# 
  5281  018C                     	;# 
  5282  018D                     	;# 
  5283  018E                     	;# 
  5284  018F                     	;# 
  5285  0190                     	;# 
  5286  0191                     	;# 
  5287  0192                     	;# 
  5288  0196                     	;# 
  5289  0197                     	;# 
  5290  0198                     	;# 
  5291  0199                     	;# 
  5292  019A                     	;# 
  5293  019B                     	;# 
  5294  019C                     	;# 
  5295  020C                     	;# 
  5296  020D                     	;# 
  5297  020E                     	;# 
  5298  020E                     	;# 
  5299  020F                     	;# 
  5300  020F                     	;# 
  5301  0210                     	;# 
  5302  0210                     	;# 
  5303  0211                     	;# 
  5304  0211                     	;# 
  5305  0212                     	;# 
  5306  0213                     	;# 
  5307  0214                     	;# 
  5308  0214                     	;# 
  5309  0215                     	;# 
  5310  0215                     	;# 
  5311  0216                     	;# 
  5312  0216                     	;# 
  5313  0217                     	;# 
  5314  0217                     	;# 
  5315  0218                     	;# 
  5316  0219                     	;# 
  5317  021A                     	;# 
  5318  021A                     	;# 
  5319  021B                     	;# 
  5320  021B                     	;# 
  5321  021C                     	;# 
  5322  021C                     	;# 
  5323  021D                     	;# 
  5324  021D                     	;# 
  5325  021E                     	;# 
  5326  021F                     	;# 
  5327  028C                     	;# 
  5328  028C                     	;# 
  5329  028D                     	;# 
  5330  028D                     	;# 
  5331  028E                     	;# 
  5332  028F                     	;# 
  5333  0290                     	;# 
  5334  0291                     	;# 
  5335  0292                     	;# 
  5336  0292                     	;# 
  5337  0293                     	;# 
  5338  0293                     	;# 
  5339  0294                     	;# 
  5340  0295                     	;# 
  5341  0296                     	;# 
  5342  0297                     	;# 
  5343  0298                     	;# 
  5344  0298                     	;# 
  5345  0299                     	;# 
  5346  0299                     	;# 
  5347  029A                     	;# 
  5348  029B                     	;# 
  5349  029C                     	;# 
  5350  029D                     	;# 
  5351  029F                     	;# 
  5352  030C                     	;# 
  5353  030C                     	;# 
  5354  030D                     	;# 
  5355  030E                     	;# 
  5356  030F                     	;# 
  5357  0310                     	;# 
  5358  0310                     	;# 
  5359  0311                     	;# 
  5360  0312                     	;# 
  5361  0313                     	;# 
  5362  0314                     	;# 
  5363  0314                     	;# 
  5364  0315                     	;# 
  5365  0316                     	;# 
  5366  0317                     	;# 
  5367  0318                     	;# 
  5368  0318                     	;# 
  5369  0319                     	;# 
  5370  031A                     	;# 
  5371  031B                     	;# 
  5372  038C                     	;# 
  5373  038C                     	;# 
  5374  038D                     	;# 
  5375  038E                     	;# 
  5376  0390                     	;# 
  5377  0390                     	;# 
  5378  0391                     	;# 
  5379  0392                     	;# 
  5380  048C                     	;# 
  5381  048C                     	;# 
  5382  048D                     	;# 
  5383  048E                     	;# 
  5384  048F                     	;# 
  5385  048F                     	;# 
  5386  0490                     	;# 
  5387  0491                     	;# 
  5388  0492                     	;# 
  5389  0492                     	;# 
  5390  0493                     	;# 
  5391  0494                     	;# 
  5392  0495                     	;# 
  5393  0495                     	;# 
  5394  0496                     	;# 
  5395  0497                     	;# 
  5396  0498                     	;# 
  5397  0499                     	;# 
  5398  049A                     	;# 
  5399  049B                     	;# 
  5400  049C                     	;# 
  5401  049D                     	;# 
  5402  058C                     	;# 
  5403  058C                     	;# 
  5404  058D                     	;# 
  5405  058E                     	;# 
  5406  058F                     	;# 
  5407  058F                     	;# 
  5408  0590                     	;# 
  5409  0591                     	;# 
  5410  0592                     	;# 
  5411  0593                     	;# 
  5412  059C                     	;# 
  5413  059C                     	;# 
  5414  059D                     	;# 
  5415  059D                     	;# 
  5416  059E                     	;# 
  5417  059F                     	;# 
  5418  060C                     	;# 
  5419  060C                     	;# 
  5420  060D                     	;# 
  5421  060D                     	;# 
  5422  060E                     	;# 
  5423  060F                     	;# 
  5424  0610                     	;# 
  5425  0611                     	;# 
  5426  0612                     	;# 
  5427  0613                     	;# 
  5428  0614                     	;# 
  5429  0616                     	;# 
  5430  0616                     	;# 
  5431  0617                     	;# 
  5432  0617                     	;# 
  5433  0618                     	;# 
  5434  0619                     	;# 
  5435  061A                     	;# 
  5436  061B                     	;# 
  5437  061C                     	;# 
  5438  061D                     	;# 
  5439  061E                     	;# 
  5440  070C                     	;# 
  5441  070D                     	;# 
  5442  070E                     	;# 
  5443  070F                     	;# 
  5444  0710                     	;# 
  5445  0711                     	;# 
  5446  0712                     	;# 
  5447  0713                     	;# 
  5448  0714                     	;# 
  5449  0716                     	;# 
  5450  0717                     	;# 
  5451  0718                     	;# 
  5452  0719                     	;# 
  5453  071A                     	;# 
  5454  071B                     	;# 
  5455  071C                     	;# 
  5456  071D                     	;# 
  5457  071E                     	;# 
  5458  0796                     	;# 
  5459  0797                     	;# 
  5460  0798                     	;# 
  5461  0799                     	;# 
  5462  079A                     	;# 
  5463  079B                     	;# 
  5464  079C                     	;# 
  5465  079D                     	;# 
  5466  080C                     	;# 
  5467  080D                     	;# 
  5468  080E                     	;# 
  5469  080F                     	;# 
  5470  0810                     	;# 
  5471  0811                     	;# 
  5472  0812                     	;# 
  5473  0813                     	;# 
  5474  0814                     	;# 
  5475  081A                     	;# 
  5476  081A                     	;# 
  5477  081B                     	;# 
  5478  081C                     	;# 
  5479  081C                     	;# 
  5480  081D                     	;# 
  5481  081E                     	;# 
  5482  081F                     	;# 
  5483  088C                     	;# 
  5484  088D                     	;# 
  5485  088E                     	;# 
  5486  088F                     	;# 
  5487  0890                     	;# 
  5488  0891                     	;# 
  5489  0892                     	;# 
  5490  0893                     	;# 
  5491  0895                     	;# 
  5492  0896                     	;# 
  5493  0897                     	;# 
  5494  0898                     	;# 
  5495  0899                     	;# 
  5496  089A                     	;# 
  5497  089B                     	;# 
  5498  090C                     	;# 
  5499  090E                     	;# 
  5500  090F                     	;# 
  5501  091F                     	;# 
  5502  098F                     	;# 
  5503  098F                     	;# 
  5504  0990                     	;# 
  5505  0991                     	;# 
  5506  0992                     	;# 
  5507  0993                     	;# 
  5508  0994                     	;# 
  5509  0995                     	;# 
  5510  0996                     	;# 
  5511  0997                     	;# 
  5512  1E0F                     	;# 
  5513  1E10                     	;# 
  5514  1E11                     	;# 
  5515  1E12                     	;# 
  5516  1E13                     	;# 
  5517  1E14                     	;# 
  5518  1E15                     	;# 
  5519  1E16                     	;# 
  5520  1E17                     	;# 
  5521  1E18                     	;# 
  5522  1E19                     	;# 
  5523  1E1A                     	;# 
  5524  1E1B                     	;# 
  5525  1E1C                     	;# 
  5526  1E1D                     	;# 
  5527  1E1E                     	;# 
  5528  1E1F                     	;# 
  5529  1E20                     	;# 
  5530  1E21                     	;# 
  5531  1E22                     	;# 
  5532  1E23                     	;# 
  5533  1E24                     	;# 
  5534  1E25                     	;# 
  5535  1E26                     	;# 
  5536  1E27                     	;# 
  5537  1E28                     	;# 
  5538  1E29                     	;# 
  5539  1E2A                     	;# 
  5540  1E2B                     	;# 
  5541  1E2C                     	;# 
  5542  1E2D                     	;# 
  5543  1E2E                     	;# 
  5544  1E2F                     	;# 
  5545  1E30                     	;# 
  5546  1E31                     	;# 
  5547  1E32                     	;# 
  5548  1E33                     	;# 
  5549  1E34                     	;# 
  5550  1E35                     	;# 
  5551  1E36                     	;# 
  5552  1E37                     	;# 
  5553  1E8F                     	;# 
  5554  1E90                     	;# 
  5555  1E91                     	;# 
  5556  1E92                     	;# 
  5557  1E93                     	;# 
  5558  1E94                     	;# 
  5559  1E95                     	;# 
  5560  1E96                     	;# 
  5561  1E97                     	;# 
  5562  1E9C                     	;# 
  5563  1E9D                     	;# 
  5564  1E9E                     	;# 
  5565  1EA1                     	;# 
  5566  1EA2                     	;# 
  5567  1EA3                     	;# 
  5568  1EA4                     	;# 
  5569  1EA9                     	;# 
  5570  1EAA                     	;# 
  5571  1EB1                     	;# 
  5572  1EB2                     	;# 
  5573  1EB8                     	;# 
  5574  1EB9                     	;# 
  5575  1EBA                     	;# 
  5576  1EBB                     	;# 
  5577  1EBC                     	;# 
  5578  1EBD                     	;# 
  5579  1EBE                     	;# 
  5580  1EC3                     	;# 
  5581  1EC5                     	;# 
  5582  1EC6                     	;# 
  5583  1EC7                     	;# 
  5584  1EC8                     	;# 
  5585  1EC9                     	;# 
  5586  1ECA                     	;# 
  5587  1ECB                     	;# 
  5588  1ECB                     	;# 
  5589  1ECB                     	;# 
  5590  1ECC                     	;# 
  5591  1ECC                     	;# 
  5592  1ECC                     	;# 
  5593  1F10                     	;# 
  5594  1F11                     	;# 
  5595  1F12                     	;# 
  5596  1F14                     	;# 
  5597  1F15                     	;# 
  5598  1F1C                     	;# 
  5599  1F1D                     	;# 
  5600  1F1E                     	;# 
  5601  1F1F                     	;# 
  5602  1F20                     	;# 
  5603  1F21                     	;# 
  5604  1F22                     	;# 
  5605  1F23                     	;# 
  5606  1F24                     	;# 
  5607  1F25                     	;# 
  5608  1F26                     	;# 
  5609  1F27                     	;# 
  5610  1F38                     	;# 
  5611  1F39                     	;# 
  5612  1F3A                     	;# 
  5613  1F3B                     	;# 
  5614  1F3C                     	;# 
  5615  1F3D                     	;# 
  5616  1F3E                     	;# 
  5617  1F3F                     	;# 
  5618  1F43                     	;# 
  5619  1F44                     	;# 
  5620  1F45                     	;# 
  5621  1F46                     	;# 
  5622  1F47                     	;# 
  5623  1F48                     	;# 
  5624  1F49                     	;# 
  5625  1F4A                     	;# 
  5626  1F4E                     	;# 
  5627  1F4F                     	;# 
  5628  1F50                     	;# 
  5629  1F51                     	;# 
  5630  1F52                     	;# 
  5631  1F53                     	;# 
  5632  1F54                     	;# 
  5633  1F55                     	;# 
  5634  1FE4                     	;# 
  5635  1FE5                     	;# 
  5636  1FE6                     	;# 
  5637  1FE7                     	;# 
  5638  1FE8                     	;# 
  5639  1FE8                     	;# 
  5640  1FE9                     	;# 
  5641  1FEA                     	;# 
  5642  1FEB                     	;# 
  5643  1FED                     	;# 
  5644  1FEE                     	;# 
  5645  1FEF                     	;# 
  5646  0000                     	;# 
  5647  0001                     	;# 
  5648  0002                     	;# 
  5649  0003                     	;# 
  5650  0004                     	;# 
  5651  0005                     	;# 
  5652  0006                     	;# 
  5653  0007                     	;# 
  5654  0008                     	;# 
  5655  0009                     	;# 
  5656  000A                     	;# 
  5657  000B                     	;# 
  5658  000C                     	;# 
  5659  000D                     	;# 
  5660  000E                     	;# 
  5661  0012                     	;# 
  5662  0013                     	;# 
  5663  0014                     	;# 
  5664  0018                     	;# 
  5665  0019                     	;# 
  5666  001A                     	;# 
  5667  008C                     	;# 
  5668  008C                     	;# 
  5669  008D                     	;# 
  5670  008E                     	;# 
  5671  008E                     	;# 
  5672  008F                     	;# 
  5673  0090                     	;# 
  5674  0090                     	;# 
  5675  0091                     	;# 
  5676  0092                     	;# 
  5677  0092                     	;# 
  5678  0093                     	;# 
  5679  0094                     	;# 
  5680  0094                     	;# 
  5681  0095                     	;# 
  5682  0096                     	;# 
  5683  0096                     	;# 
  5684  0097                     	;# 
  5685  0098                     	;# 
  5686  0099                     	;# 
  5687  009A                     	;# 
  5688  009B                     	;# 
  5689  009B                     	;# 
  5690  009C                     	;# 
  5691  009D                     	;# 
  5692  009D                     	;# 
  5693  009E                     	;# 
  5694  009F                     	;# 
  5695  010C                     	;# 
  5696  010C                     	;# 
  5697  010D                     	;# 
  5698  010E                     	;# 
  5699  010F                     	;# 
  5700  010F                     	;# 
  5701  0110                     	;# 
  5702  0111                     	;# 
  5703  0112                     	;# 
  5704  0113                     	;# 
  5705  0114                     	;# 
  5706  0115                     	;# 
  5707  0116                     	;# 
  5708  0117                     	;# 
  5709  0118                     	;# 
  5710  0119                     	;# 
  5711  0119                     	;# 
  5712  0119                     	;# 
  5713  011A                     	;# 
  5714  011A                     	;# 
  5715  011A                     	;# 
  5716  011B                     	;# 
  5717  011B                     	;# 
  5718  011B                     	;# 
  5719  011B                     	;# 
  5720  011B                     	;# 
  5721  011C                     	;# 
  5722  011C                     	;# 
  5723  011C                     	;# 
  5724  011D                     	;# 
  5725  011D                     	;# 
  5726  011D                     	;# 
  5727  011E                     	;# 
  5728  011E                     	;# 
  5729  011E                     	;# 
  5730  011F                     	;# 
  5731  011F                     	;# 
  5732  011F                     	;# 
  5733  011F                     	;# 
  5734  011F                     	;# 
  5735  018C                     	;# 
  5736  018D                     	;# 
  5737  018E                     	;# 
  5738  018F                     	;# 
  5739  0190                     	;# 
  5740  0191                     	;# 
  5741  0192                     	;# 
  5742  0196                     	;# 
  5743  0197                     	;# 
  5744  0198                     	;# 
  5745  0199                     	;# 
  5746  019A                     	;# 
  5747  019B                     	;# 
  5748  019C                     	;# 
  5749  020C                     	;# 
  5750  020D                     	;# 
  5751  020E                     	;# 
  5752  020E                     	;# 
  5753  020F                     	;# 
  5754  020F                     	;# 
  5755  0210                     	;# 
  5756  0210                     	;# 
  5757  0211                     	;# 
  5758  0211                     	;# 
  5759  0212                     	;# 
  5760  0213                     	;# 
  5761  0214                     	;# 
  5762  0214                     	;# 
  5763  0215                     	;# 
  5764  0215                     	;# 
  5765  0216                     	;# 
  5766  0216                     	;# 
  5767  0217                     	;# 
  5768  0217                     	;# 
  5769  0218                     	;# 
  5770  0219                     	;# 
  5771  021A                     	;# 
  5772  021A                     	;# 
  5773  021B                     	;# 
  5774  021B                     	;# 
  5775  021C                     	;# 
  5776  021C                     	;# 
  5777  021D                     	;# 
  5778  021D                     	;# 
  5779  021E                     	;# 
  5780  021F                     	;# 
  5781  028C                     	;# 
  5782  028C                     	;# 
  5783  028D                     	;# 
  5784  028D                     	;# 
  5785  028E                     	;# 
  5786  028F                     	;# 
  5787  0290                     	;# 
  5788  0291                     	;# 
  5789  0292                     	;# 
  5790  0292                     	;# 
  5791  0293                     	;# 
  5792  0293                     	;# 
  5793  0294                     	;# 
  5794  0295                     	;# 
  5795  0296                     	;# 
  5796  0297                     	;# 
  5797  0298                     	;# 
  5798  0298                     	;# 
  5799  0299                     	;# 
  5800  0299                     	;# 
  5801  029A                     	;# 
  5802  029B                     	;# 
  5803  029C                     	;# 
  5804  029D                     	;# 
  5805  029F                     	;# 
  5806  030C                     	;# 
  5807  030C                     	;# 
  5808  030D                     	;# 
  5809  030E                     	;# 
  5810  030F                     	;# 
  5811  0310                     	;# 
  5812  0310                     	;# 
  5813  0311                     	;# 
  5814  0312                     	;# 
  5815  0313                     	;# 
  5816  0314                     	;# 
  5817  0314                     	;# 
  5818  0315                     	;# 
  5819  0316                     	;# 
  5820  0317                     	;# 
  5821  0318                     	;# 
  5822  0318                     	;# 
  5823  0319                     	;# 
  5824  031A                     	;# 
  5825  031B                     	;# 
  5826  038C                     	;# 
  5827  038C                     	;# 
  5828  038D                     	;# 
  5829  038E                     	;# 
  5830  0390                     	;# 
  5831  0390                     	;# 
  5832  0391                     	;# 
  5833  0392                     	;# 
  5834  048C                     	;# 
  5835  048C                     	;# 
  5836  048D                     	;# 
  5837  048E                     	;# 
  5838  048F                     	;# 
  5839  048F                     	;# 
  5840  0490                     	;# 
  5841  0491                     	;# 
  5842  0492                     	;# 
  5843  0492                     	;# 
  5844  0493                     	;# 
  5845  0494                     	;# 
  5846  0495                     	;# 
  5847  0495                     	;# 
  5848  0496                     	;# 
  5849  0497                     	;# 
  5850  0498                     	;# 
  5851  0499                     	;# 
  5852  049A                     	;# 
  5853  049B                     	;# 
  5854  049C                     	;# 
  5855  049D                     	;# 
  5856  058C                     	;# 
  5857  058C                     	;# 
  5858  058D                     	;# 
  5859  058E                     	;# 
  5860  058F                     	;# 
  5861  058F                     	;# 
  5862  0590                     	;# 
  5863  0591                     	;# 
  5864  0592                     	;# 
  5865  0593                     	;# 
  5866  059C                     	;# 
  5867  059C                     	;# 
  5868  059D                     	;# 
  5869  059D                     	;# 
  5870  059E                     	;# 
  5871  059F                     	;# 
  5872  060C                     	;# 
  5873  060C                     	;# 
  5874  060D                     	;# 
  5875  060D                     	;# 
  5876  060E                     	;# 
  5877  060F                     	;# 
  5878  0610                     	;# 
  5879  0611                     	;# 
  5880  0612                     	;# 
  5881  0613                     	;# 
  5882  0614                     	;# 
  5883  0616                     	;# 
  5884  0616                     	;# 
  5885  0617                     	;# 
  5886  0617                     	;# 
  5887  0618                     	;# 
  5888  0619                     	;# 
  5889  061A                     	;# 
  5890  061B                     	;# 
  5891  061C                     	;# 
  5892  061D                     	;# 
  5893  061E                     	;# 
  5894  070C                     	;# 
  5895  070D                     	;# 
  5896  070E                     	;# 
  5897  070F                     	;# 
  5898  0710                     	;# 
  5899  0711                     	;# 
  5900  0712                     	;# 
  5901  0713                     	;# 
  5902  0714                     	;# 
  5903  0716                     	;# 
  5904  0717                     	;# 
  5905  0718                     	;# 
  5906  0719                     	;# 
  5907  071A                     	;# 
  5908  071B                     	;# 
  5909  071C                     	;# 
  5910  071D                     	;# 
  5911  071E                     	;# 
  5912  0796                     	;# 
  5913  0797                     	;# 
  5914  0798                     	;# 
  5915  0799                     	;# 
  5916  079A                     	;# 
  5917  079B                     	;# 
  5918  079C                     	;# 
  5919  079D                     	;# 
  5920  080C                     	;# 
  5921  080D                     	;# 
  5922  080E                     	;# 
  5923  080F                     	;# 
  5924  0810                     	;# 
  5925  0811                     	;# 
  5926  0812                     	;# 
  5927  0813                     	;# 
  5928  0814                     	;# 
  5929  081A                     	;# 
  5930  081A                     	;# 
  5931  081B                     	;# 
  5932  081C                     	;# 
  5933  081C                     	;# 
  5934  081D                     	;# 
  5935  081E                     	;# 
  5936  081F                     	;# 
  5937  088C                     	;# 
  5938  088D                     	;# 
  5939  088E                     	;# 
  5940  088F                     	;# 
  5941  0890                     	;# 
  5942  0891                     	;# 
  5943  0892                     	;# 
  5944  0893                     	;# 
  5945  0895                     	;# 
  5946  0896                     	;# 
  5947  0897                     	;# 
  5948  0898                     	;# 
  5949  0899                     	;# 
  5950  089A                     	;# 
  5951  089B                     	;# 
  5952  090C                     	;# 
  5953  090E                     	;# 
  5954  090F                     	;# 
  5955  091F                     	;# 
  5956  098F                     	;# 
  5957  098F                     	;# 
  5958  0990                     	;# 
  5959  0991                     	;# 
  5960  0992                     	;# 
  5961  0993                     	;# 
  5962  0994                     	;# 
  5963  0995                     	;# 
  5964  0996                     	;# 
  5965  0997                     	;# 
  5966  1E0F                     	;# 
  5967  1E10                     	;# 
  5968  1E11                     	;# 
  5969  1E12                     	;# 
  5970  1E13                     	;# 
  5971  1E14                     	;# 
  5972  1E15                     	;# 
  5973  1E16                     	;# 
  5974  1E17                     	;# 
  5975  1E18                     	;# 
  5976  1E19                     	;# 
  5977  1E1A                     	;# 
  5978  1E1B                     	;# 
  5979  1E1C                     	;# 
  5980  1E1D                     	;# 
  5981  1E1E                     	;# 
  5982  1E1F                     	;# 
  5983  1E20                     	;# 
  5984  1E21                     	;# 
  5985  1E22                     	;# 
  5986  1E23                     	;# 
  5987  1E24                     	;# 
  5988  1E25                     	;# 
  5989  1E26                     	;# 
  5990  1E27                     	;# 
  5991  1E28                     	;# 
  5992  1E29                     	;# 
  5993  1E2A                     	;# 
  5994  1E2B                     	;# 
  5995  1E2C                     	;# 
  5996  1E2D                     	;# 
  5997  1E2E                     	;# 
  5998  1E2F                     	;# 
  5999  1E30                     	;# 
  6000  1E31                     	;# 
  6001  1E32                     	;# 
  6002  1E33                     	;# 
  6003  1E34                     	;# 
  6004  1E35                     	;# 
  6005  1E36                     	;# 
  6006  1E37                     	;# 
  6007  1E8F                     	;# 
  6008  1E90                     	;# 
  6009  1E91                     	;# 
  6010  1E92                     	;# 
  6011  1E93                     	;# 
  6012  1E94                     	;# 
  6013  1E95                     	;# 
  6014  1E96                     	;# 
  6015  1E97                     	;# 
  6016  1E9C                     	;# 
  6017  1E9D                     	;# 
  6018  1E9E                     	;# 
  6019  1EA1                     	;# 
  6020  1EA2                     	;# 
  6021  1EA3                     	;# 
  6022  1EA4                     	;# 
  6023  1EA9                     	;# 
  6024  1EAA                     	;# 
  6025  1EB1                     	;# 
  6026  1EB2                     	;# 
  6027  1EB8                     	;# 
  6028  1EB9                     	;# 
  6029  1EBA                     	;# 
  6030  1EBB                     	;# 
  6031  1EBC                     	;# 
  6032  1EBD                     	;# 
  6033  1EBE                     	;# 
  6034  1EC3                     	;# 
  6035  1EC5                     	;# 
  6036  1EC6                     	;# 
  6037  1EC7                     	;# 
  6038  1EC8                     	;# 
  6039  1EC9                     	;# 
  6040  1ECA                     	;# 
  6041  1ECB                     	;# 
  6042  1ECB                     	;# 
  6043  1ECB                     	;# 
  6044  1ECC                     	;# 
  6045  1ECC                     	;# 
  6046  1ECC                     	;# 
  6047  1F10                     	;# 
  6048  1F11                     	;# 
  6049  1F12                     	;# 
  6050  1F14                     	;# 
  6051  1F15                     	;# 
  6052  1F1C                     	;# 
  6053  1F1D                     	;# 
  6054  1F1E                     	;# 
  6055  1F1F                     	;# 
  6056  1F20                     	;# 
  6057  1F21                     	;# 
  6058  1F22                     	;# 
  6059  1F23                     	;# 
  6060  1F24                     	;# 
  6061  1F25                     	;# 
  6062  1F26                     	;# 
  6063  1F27                     	;# 
  6064  1F38                     	;# 
  6065  1F39                     	;# 
  6066  1F3A                     	;# 
  6067  1F3B                     	;# 
  6068  1F3C                     	;# 
  6069  1F3D                     	;# 
  6070  1F3E                     	;# 
  6071  1F3F                     	;# 
  6072  1F43                     	;# 
  6073  1F44                     	;# 
  6074  1F45                     	;# 
  6075  1F46                     	;# 
  6076  1F47                     	;# 
  6077  1F48                     	;# 
  6078  1F49                     	;# 
  6079  1F4A                     	;# 
  6080  1F4E                     	;# 
  6081  1F4F                     	;# 
  6082  1F50                     	;# 
  6083  1F51                     	;# 
  6084  1F52                     	;# 
  6085  1F53                     	;# 
  6086  1F54                     	;# 
  6087  1F55                     	;# 
  6088  1FE4                     	;# 
  6089  1FE5                     	;# 
  6090  1FE6                     	;# 
  6091  1FE7                     	;# 
  6092  1FE8                     	;# 
  6093  1FE8                     	;# 
  6094  1FE9                     	;# 
  6095  1FEA                     	;# 
  6096  1FEB                     	;# 
  6097  1FED                     	;# 
  6098  1FEE                     	;# 
  6099  1FEF                     	;# 
  6100  0000                     	;# 
  6101  0001                     	;# 
  6102  0002                     	;# 
  6103  0003                     	;# 
  6104  0004                     	;# 
  6105  0005                     	;# 
  6106  0006                     	;# 
  6107  0007                     	;# 
  6108  0008                     	;# 
  6109  0009                     	;# 
  6110  000A                     	;# 
  6111  000B                     	;# 
  6112  000C                     	;# 
  6113  000D                     	;# 
  6114  000E                     	;# 
  6115  0012                     	;# 
  6116  0013                     	;# 
  6117  0014                     	;# 
  6118  0018                     	;# 
  6119  0019                     	;# 
  6120  001A                     	;# 
  6121  008C                     	;# 
  6122  008C                     	;# 
  6123  008D                     	;# 
  6124  008E                     	;# 
  6125  008E                     	;# 
  6126  008F                     	;# 
  6127  0090                     	;# 
  6128  0090                     	;# 
  6129  0091                     	;# 
  6130  0092                     	;# 
  6131  0092                     	;# 
  6132  0093                     	;# 
  6133  0094                     	;# 
  6134  0094                     	;# 
  6135  0095                     	;# 
  6136  0096                     	;# 
  6137  0096                     	;# 
  6138  0097                     	;# 
  6139  0098                     	;# 
  6140  0099                     	;# 
  6141  009A                     	;# 
  6142  009B                     	;# 
  6143  009B                     	;# 
  6144  009C                     	;# 
  6145  009D                     	;# 
  6146  009D                     	;# 
  6147  009E                     	;# 
  6148  009F                     	;# 
  6149  010C                     	;# 
  6150  010C                     	;# 
  6151  010D                     	;# 
  6152  010E                     	;# 
  6153  010F                     	;# 
  6154  010F                     	;# 
  6155  0110                     	;# 
  6156  0111                     	;# 
  6157  0112                     	;# 
  6158  0113                     	;# 
  6159  0114                     	;# 
  6160  0115                     	;# 
  6161  0116                     	;# 
  6162  0117                     	;# 
  6163  0118                     	;# 
  6164  0119                     	;# 
  6165  0119                     	;# 
  6166  0119                     	;# 
  6167  011A                     	;# 
  6168  011A                     	;# 
  6169  011A                     	;# 
  6170  011B                     	;# 
  6171  011B                     	;# 
  6172  011B                     	;# 
  6173  011B                     	;# 
  6174  011B                     	;# 
  6175  011C                     	;# 
  6176  011C                     	;# 
  6177  011C                     	;# 
  6178  011D                     	;# 
  6179  011D                     	;# 
  6180  011D                     	;# 
  6181  011E                     	;# 
  6182  011E                     	;# 
  6183  011E                     	;# 
  6184  011F                     	;# 
  6185  011F                     	;# 
  6186  011F                     	;# 
  6187  011F                     	;# 
  6188  011F                     	;# 
  6189  018C                     	;# 
  6190  018D                     	;# 
  6191  018E                     	;# 
  6192  018F                     	;# 
  6193  0190                     	;# 
  6194  0191                     	;# 
  6195  0192                     	;# 
  6196  0196                     	;# 
  6197  0197                     	;# 
  6198  0198                     	;# 
  6199  0199                     	;# 
  6200  019A                     	;# 
  6201  019B                     	;# 
  6202  019C                     	;# 
  6203  020C                     	;# 
  6204  020D                     	;# 
  6205  020E                     	;# 
  6206  020E                     	;# 
  6207  020F                     	;# 
  6208  020F                     	;# 
  6209  0210                     	;# 
  6210  0210                     	;# 
  6211  0211                     	;# 
  6212  0211                     	;# 
  6213  0212                     	;# 
  6214  0213                     	;# 
  6215  0214                     	;# 
  6216  0214                     	;# 
  6217  0215                     	;# 
  6218  0215                     	;# 
  6219  0216                     	;# 
  6220  0216                     	;# 
  6221  0217                     	;# 
  6222  0217                     	;# 
  6223  0218                     	;# 
  6224  0219                     	;# 
  6225  021A                     	;# 
  6226  021A                     	;# 
  6227  021B                     	;# 
  6228  021B                     	;# 
  6229  021C                     	;# 
  6230  021C                     	;# 
  6231  021D                     	;# 
  6232  021D                     	;# 
  6233  021E                     	;# 
  6234  021F                     	;# 
  6235  028C                     	;# 
  6236  028C                     	;# 
  6237  028D                     	;# 
  6238  028D                     	;# 
  6239  028E                     	;# 
  6240  028F                     	;# 
  6241  0290                     	;# 
  6242  0291                     	;# 
  6243  0292                     	;# 
  6244  0292                     	;# 
  6245  0293                     	;# 
  6246  0293                     	;# 
  6247  0294                     	;# 
  6248  0295                     	;# 
  6249  0296                     	;# 
  6250  0297                     	;# 
  6251  0298                     	;# 
  6252  0298                     	;# 
  6253  0299                     	;# 
  6254  0299                     	;# 
  6255  029A                     	;# 
  6256  029B                     	;# 
  6257  029C                     	;# 
  6258  029D                     	;# 
  6259  029F                     	;# 
  6260  030C                     	;# 
  6261  030C                     	;# 
  6262  030D                     	;# 
  6263  030E                     	;# 
  6264  030F                     	;# 
  6265  0310                     	;# 
  6266  0310                     	;# 
  6267  0311                     	;# 
  6268  0312                     	;# 
  6269  0313                     	;# 
  6270  0314                     	;# 
  6271  0314                     	;# 
  6272  0315                     	;# 
  6273  0316                     	;# 
  6274  0317                     	;# 
  6275  0318                     	;# 
  6276  0318                     	;# 
  6277  0319                     	;# 
  6278  031A                     	;# 
  6279  031B                     	;# 
  6280  038C                     	;# 
  6281  038C                     	;# 
  6282  038D                     	;# 
  6283  038E                     	;# 
  6284  0390                     	;# 
  6285  0390                     	;# 
  6286  0391                     	;# 
  6287  0392                     	;# 
  6288  048C                     	;# 
  6289  048C                     	;# 
  6290  048D                     	;# 
  6291  048E                     	;# 
  6292  048F                     	;# 
  6293  048F                     	;# 
  6294  0490                     	;# 
  6295  0491                     	;# 
  6296  0492                     	;# 
  6297  0492                     	;# 
  6298  0493                     	;# 
  6299  0494                     	;# 
  6300  0495                     	;# 
  6301  0495                     	;# 
  6302  0496                     	;# 
  6303  0497                     	;# 
  6304  0498                     	;# 
  6305  0499                     	;# 
  6306  049A                     	;# 
  6307  049B                     	;# 
  6308  049C                     	;# 
  6309  049D                     	;# 
  6310  058C                     	;# 
  6311  058C                     	;# 
  6312  058D                     	;# 
  6313  058E                     	;# 
  6314  058F                     	;# 
  6315  058F                     	;# 
  6316  0590                     	;# 
  6317  0591                     	;# 
  6318  0592                     	;# 
  6319  0593                     	;# 
  6320  059C                     	;# 
  6321  059C                     	;# 
  6322  059D                     	;# 
  6323  059D                     	;# 
  6324  059E                     	;# 
  6325  059F                     	;# 
  6326  060C                     	;# 
  6327  060C                     	;# 
  6328  060D                     	;# 
  6329  060D                     	;# 
  6330  060E                     	;# 
  6331  060F                     	;# 
  6332  0610                     	;# 
  6333  0611                     	;# 
  6334  0612                     	;# 
  6335  0613                     	;# 
  6336  0614                     	;# 
  6337  0616                     	;# 
  6338  0616                     	;# 
  6339  0617                     	;# 
  6340  0617                     	;# 
  6341  0618                     	;# 
  6342  0619                     	;# 
  6343  061A                     	;# 
  6344  061B                     	;# 
  6345  061C                     	;# 
  6346  061D                     	;# 
  6347  061E                     	;# 
  6348  070C                     	;# 
  6349  070D                     	;# 
  6350  070E                     	;# 
  6351  070F                     	;# 
  6352  0710                     	;# 
  6353  0711                     	;# 
  6354  0712                     	;# 
  6355  0713                     	;# 
  6356  0714                     	;# 
  6357  0716                     	;# 
  6358  0717                     	;# 
  6359  0718                     	;# 
  6360  0719                     	;# 
  6361  071A                     	;# 
  6362  071B                     	;# 
  6363  071C                     	;# 
  6364  071D                     	;# 
  6365  071E                     	;# 
  6366  0796                     	;# 
  6367  0797                     	;# 
  6368  0798                     	;# 
  6369  0799                     	;# 
  6370  079A                     	;# 
  6371  079B                     	;# 
  6372  079C                     	;# 
  6373  079D                     	;# 
  6374  080C                     	;# 
  6375  080D                     	;# 
  6376  080E                     	;# 
  6377  080F                     	;# 
  6378  0810                     	;# 
  6379  0811                     	;# 
  6380  0812                     	;# 
  6381  0813                     	;# 
  6382  0814                     	;# 
  6383  081A                     	;# 
  6384  081A                     	;# 
  6385  081B                     	;# 
  6386  081C                     	;# 
  6387  081C                     	;# 
  6388  081D                     	;# 
  6389  081E                     	;# 
  6390  081F                     	;# 
  6391  088C                     	;# 
  6392  088D                     	;# 
  6393  088E                     	;# 
  6394  088F                     	;# 
  6395  0890                     	;# 
  6396  0891                     	;# 
  6397  0892                     	;# 
  6398  0893                     	;# 
  6399  0895                     	;# 
  6400  0896                     	;# 
  6401  0897                     	;# 
  6402  0898                     	;# 
  6403  0899                     	;# 
  6404  089A                     	;# 
  6405  089B                     	;# 
  6406  090C                     	;# 
  6407  090E                     	;# 
  6408  090F                     	;# 
  6409  091F                     	;# 
  6410  098F                     	;# 
  6411  098F                     	;# 
  6412  0990                     	;# 
  6413  0991                     	;# 
  6414  0992                     	;# 
  6415  0993                     	;# 
  6416  0994                     	;# 
  6417  0995                     	;# 
  6418  0996                     	;# 
  6419  0997                     	;# 
  6420  1E0F                     	;# 
  6421  1E10                     	;# 
  6422  1E11                     	;# 
  6423  1E12                     	;# 
  6424  1E13                     	;# 
  6425  1E14                     	;# 
  6426  1E15                     	;# 
  6427  1E16                     	;# 
  6428  1E17                     	;# 
  6429  1E18                     	;# 
  6430  1E19                     	;# 
  6431  1E1A                     	;# 
  6432  1E1B                     	;# 
  6433  1E1C                     	;# 
  6434  1E1D                     	;# 
  6435  1E1E                     	;# 
  6436  1E1F                     	;# 
  6437  1E20                     	;# 
  6438  1E21                     	;# 
  6439  1E22                     	;# 
  6440  1E23                     	;# 
  6441  1E24                     	;# 
  6442  1E25                     	;# 
  6443  1E26                     	;# 
  6444  1E27                     	;# 
  6445  1E28                     	;# 
  6446  1E29                     	;# 
  6447  1E2A                     	;# 
  6448  1E2B                     	;# 
  6449  1E2C                     	;# 
  6450  1E2D                     	;# 
  6451  1E2E                     	;# 
  6452  1E2F                     	;# 
  6453  1E30                     	;# 
  6454  1E31                     	;# 
  6455  1E32                     	;# 
  6456  1E33                     	;# 
  6457  1E34                     	;# 
  6458  1E35                     	;# 
  6459  1E36                     	;# 
  6460  1E37                     	;# 
  6461  1E8F                     	;# 
  6462  1E90                     	;# 
  6463  1E91                     	;# 
  6464  1E92                     	;# 
  6465  1E93                     	;# 
  6466  1E94                     	;# 
  6467  1E95                     	;# 
  6468  1E96                     	;# 
  6469  1E97                     	;# 
  6470  1E9C                     	;# 
  6471  1E9D                     	;# 
  6472  1E9E                     	;# 
  6473  1EA1                     	;# 
  6474  1EA2                     	;# 
  6475  1EA3                     	;# 
  6476  1EA4                     	;# 
  6477  1EA9                     	;# 
  6478  1EAA                     	;# 
  6479  1EB1                     	;# 
  6480  1EB2                     	;# 
  6481  1EB8                     	;# 
  6482  1EB9                     	;# 
  6483  1EBA                     	;# 
  6484  1EBB                     	;# 
  6485  1EBC                     	;# 
  6486  1EBD                     	;# 
  6487  1EBE                     	;# 
  6488  1EC3                     	;# 
  6489  1EC5                     	;# 
  6490  1EC6                     	;# 
  6491  1EC7                     	;# 
  6492  1EC8                     	;# 
  6493  1EC9                     	;# 
  6494  1ECA                     	;# 
  6495  1ECB                     	;# 
  6496  1ECB                     	;# 
  6497  1ECB                     	;# 
  6498  1ECC                     	;# 
  6499  1ECC                     	;# 
  6500  1ECC                     	;# 
  6501  1F10                     	;# 
  6502  1F11                     	;# 
  6503  1F12                     	;# 
  6504  1F14                     	;# 
  6505  1F15                     	;# 
  6506  1F1C                     	;# 
  6507  1F1D                     	;# 
  6508  1F1E                     	;# 
  6509  1F1F                     	;# 
  6510  1F20                     	;# 
  6511  1F21                     	;# 
  6512  1F22                     	;# 
  6513  1F23                     	;# 
  6514  1F24                     	;# 
  6515  1F25                     	;# 
  6516  1F26                     	;# 
  6517  1F27                     	;# 
  6518  1F38                     	;# 
  6519  1F39                     	;# 
  6520  1F3A                     	;# 
  6521  1F3B                     	;# 
  6522  1F3C                     	;# 
  6523  1F3D                     	;# 
  6524  1F3E                     	;# 
  6525  1F3F                     	;# 
  6526  1F43                     	;# 
  6527  1F44                     	;# 
  6528  1F45                     	;# 
  6529  1F46                     	;# 
  6530  1F47                     	;# 
  6531  1F48                     	;# 
  6532  1F49                     	;# 
  6533  1F4A                     	;# 
  6534  1F4E                     	;# 
  6535  1F4F                     	;# 
  6536  1F50                     	;# 
  6537  1F51                     	;# 
  6538  1F52                     	;# 
  6539  1F53                     	;# 
  6540  1F54                     	;# 
  6541  1F55                     	;# 
  6542  1FE4                     	;# 
  6543  1FE5                     	;# 
  6544  1FE6                     	;# 
  6545  1FE7                     	;# 
  6546  1FE8                     	;# 
  6547  1FE8                     	;# 
  6548  1FE9                     	;# 
  6549  1FEA                     	;# 
  6550  1FEB                     	;# 
  6551  1FED                     	;# 
  6552  1FEE                     	;# 
  6553  1FEF                     	;# 
  6554  0000                     	;# 
  6555  0001                     	;# 
  6556  0002                     	;# 
  6557  0003                     	;# 
  6558  0004                     	;# 
  6559  0005                     	;# 
  6560  0006                     	;# 
  6561  0007                     	;# 
  6562  0008                     	;# 
  6563  0009                     	;# 
  6564  000A                     	;# 
  6565  000B                     	;# 
  6566  000C                     	;# 
  6567  000D                     	;# 
  6568  000E                     	;# 
  6569  0012                     	;# 
  6570  0013                     	;# 
  6571  0014                     	;# 
  6572  0018                     	;# 
  6573  0019                     	;# 
  6574  001A                     	;# 
  6575  008C                     	;# 
  6576  008C                     	;# 
  6577  008D                     	;# 
  6578  008E                     	;# 
  6579  008E                     	;# 
  6580  008F                     	;# 
  6581  0090                     	;# 
  6582  0090                     	;# 
  6583  0091                     	;# 
  6584  0092                     	;# 
  6585  0092                     	;# 
  6586  0093                     	;# 
  6587  0094                     	;# 
  6588  0094                     	;# 
  6589  0095                     	;# 
  6590  0096                     	;# 
  6591  0096                     	;# 
  6592  0097                     	;# 
  6593  0098                     	;# 
  6594  0099                     	;# 
  6595  009A                     	;# 
  6596  009B                     	;# 
  6597  009B                     	;# 
  6598  009C                     	;# 
  6599  009D                     	;# 
  6600  009D                     	;# 
  6601  009E                     	;# 
  6602  009F                     	;# 
  6603  010C                     	;# 
  6604  010C                     	;# 
  6605  010D                     	;# 
  6606  010E                     	;# 
  6607  010F                     	;# 
  6608  010F                     	;# 
  6609  0110                     	;# 
  6610  0111                     	;# 
  6611  0112                     	;# 
  6612  0113                     	;# 
  6613  0114                     	;# 
  6614  0115                     	;# 
  6615  0116                     	;# 
  6616  0117                     	;# 
  6617  0118                     	;# 
  6618  0119                     	;# 
  6619  0119                     	;# 
  6620  0119                     	;# 
  6621  011A                     	;# 
  6622  011A                     	;# 
  6623  011A                     	;# 
  6624  011B                     	;# 
  6625  011B                     	;# 
  6626  011B                     	;# 
  6627  011B                     	;# 
  6628  011B                     	;# 
  6629  011C                     	;# 
  6630  011C                     	;# 
  6631  011C                     	;# 
  6632  011D                     	;# 
  6633  011D                     	;# 
  6634  011D                     	;# 
  6635  011E                     	;# 
  6636  011E                     	;# 
  6637  011E                     	;# 
  6638  011F                     	;# 
  6639  011F                     	;# 
  6640  011F                     	;# 
  6641  011F                     	;# 
  6642  011F                     	;# 
  6643  018C                     	;# 
  6644  018D                     	;# 
  6645  018E                     	;# 
  6646  018F                     	;# 
  6647  0190                     	;# 
  6648  0191                     	;# 
  6649  0192                     	;# 
  6650  0196                     	;# 
  6651  0197                     	;# 
  6652  0198                     	;# 
  6653  0199                     	;# 
  6654  019A                     	;# 
  6655  019B                     	;# 
  6656  019C                     	;# 
  6657  020C                     	;# 
  6658  020D                     	;# 
  6659  020E                     	;# 
  6660  020E                     	;# 
  6661  020F                     	;# 
  6662  020F                     	;# 
  6663  0210                     	;# 
  6664  0210                     	;# 
  6665  0211                     	;# 
  6666  0211                     	;# 
  6667  0212                     	;# 
  6668  0213                     	;# 
  6669  0214                     	;# 
  6670  0214                     	;# 
  6671  0215                     	;# 
  6672  0215                     	;# 
  6673  0216                     	;# 
  6674  0216                     	;# 
  6675  0217                     	;# 
  6676  0217                     	;# 
  6677  0218                     	;# 
  6678  0219                     	;# 
  6679  021A                     	;# 
  6680  021A                     	;# 
  6681  021B                     	;# 
  6682  021B                     	;# 
  6683  021C                     	;# 
  6684  021C                     	;# 
  6685  021D                     	;# 
  6686  021D                     	;# 
  6687  021E                     	;# 
  6688  021F                     	;# 
  6689  028C                     	;# 
  6690  028C                     	;# 
  6691  028D                     	;# 
  6692  028D                     	;# 
  6693  028E                     	;# 
  6694  028F                     	;# 
  6695  0290                     	;# 
  6696  0291                     	;# 
  6697  0292                     	;# 
  6698  0292                     	;# 
  6699  0293                     	;# 
  6700  0293                     	;# 
  6701  0294                     	;# 
  6702  0295                     	;# 
  6703  0296                     	;# 
  6704  0297                     	;# 
  6705  0298                     	;# 
  6706  0298                     	;# 
  6707  0299                     	;# 
  6708  0299                     	;# 
  6709  029A                     	;# 
  6710  029B                     	;# 
  6711  029C                     	;# 
  6712  029D                     	;# 
  6713  029F                     	;# 
  6714  030C                     	;# 
  6715  030C                     	;# 
  6716  030D                     	;# 
  6717  030E                     	;# 
  6718  030F                     	;# 
  6719  0310                     	;# 
  6720  0310                     	;# 
  6721  0311                     	;# 
  6722  0312                     	;# 
  6723  0313                     	;# 
  6724  0314                     	;# 
  6725  0314                     	;# 
  6726  0315                     	;# 
  6727  0316                     	;# 
  6728  0317                     	;# 
  6729  0318                     	;# 
  6730  0318                     	;# 
  6731  0319                     	;# 
  6732  031A                     	;# 
  6733  031B                     	;# 
  6734  038C                     	;# 
  6735  038C                     	;# 
  6736  038D                     	;# 
  6737  038E                     	;# 
  6738  0390                     	;# 
  6739  0390                     	;# 
  6740  0391                     	;# 
  6741  0392                     	;# 
  6742  048C                     	;# 
  6743  048C                     	;# 
  6744  048D                     	;# 
  6745  048E                     	;# 
  6746  048F                     	;# 
  6747  048F                     	;# 
  6748  0490                     	;# 
  6749  0491                     	;# 
  6750  0492                     	;# 
  6751  0492                     	;# 
  6752  0493                     	;# 
  6753  0494                     	;# 
  6754  0495                     	;# 
  6755  0495                     	;# 
  6756  0496                     	;# 
  6757  0497                     	;# 
  6758  0498                     	;# 
  6759  0499                     	;# 
  6760  049A                     	;# 
  6761  049B                     	;# 
  6762  049C                     	;# 
  6763  049D                     	;# 
  6764  058C                     	;# 
  6765  058C                     	;# 
  6766  058D                     	;# 
  6767  058E                     	;# 
  6768  058F                     	;# 
  6769  058F                     	;# 
  6770  0590                     	;# 
  6771  0591                     	;# 
  6772  0592                     	;# 
  6773  0593                     	;# 
  6774  059C                     	;# 
  6775  059C                     	;# 
  6776  059D                     	;# 
  6777  059D                     	;# 
  6778  059E                     	;# 
  6779  059F                     	;# 
  6780  060C                     	;# 
  6781  060C                     	;# 
  6782  060D                     	;# 
  6783  060D                     	;# 
  6784  060E                     	;# 
  6785  060F                     	;# 
  6786  0610                     	;# 
  6787  0611                     	;# 
  6788  0612                     	;# 
  6789  0613                     	;# 
  6790  0614                     	;# 
  6791  0616                     	;# 
  6792  0616                     	;# 
  6793  0617                     	;# 
  6794  0617                     	;# 
  6795  0618                     	;# 
  6796  0619                     	;# 
  6797  061A                     	;# 
  6798  061B                     	;# 
  6799  061C                     	;# 
  6800  061D                     	;# 
  6801  061E                     	;# 
  6802  070C                     	;# 
  6803  070D                     	;# 
  6804  070E                     	;# 
  6805  070F                     	;# 
  6806  0710                     	;# 
  6807  0711                     	;# 
  6808  0712                     	;# 
  6809  0713                     	;# 
  6810  0714                     	;# 
  6811  0716                     	;# 
  6812  0717                     	;# 
  6813  0718                     	;# 
  6814  0719                     	;# 
  6815  071A                     	;# 
  6816  071B                     	;# 
  6817  071C                     	;# 
  6818  071D                     	;# 
  6819  071E                     	;# 
  6820  0796                     	;# 
  6821  0797                     	;# 
  6822  0798                     	;# 
  6823  0799                     	;# 
  6824  079A                     	;# 
  6825  079B                     	;# 
  6826  079C                     	;# 
  6827  079D                     	;# 
  6828  080C                     	;# 
  6829  080D                     	;# 
  6830  080E                     	;# 
  6831  080F                     	;# 
  6832  0810                     	;# 
  6833  0811                     	;# 
  6834  0812                     	;# 
  6835  0813                     	;# 
  6836  0814                     	;# 
  6837  081A                     	;# 
  6838  081A                     	;# 
  6839  081B                     	;# 
  6840  081C                     	;# 
  6841  081C                     	;# 
  6842  081D                     	;# 
  6843  081E                     	;# 
  6844  081F                     	;# 
  6845  088C                     	;# 
  6846  088D                     	;# 
  6847  088E                     	;# 
  6848  088F                     	;# 
  6849  0890                     	;# 
  6850  0891                     	;# 
  6851  0892                     	;# 
  6852  0893                     	;# 
  6853  0895                     	;# 
  6854  0896                     	;# 
  6855  0897                     	;# 
  6856  0898                     	;# 
  6857  0899                     	;# 
  6858  089A                     	;# 
  6859  089B                     	;# 
  6860  090C                     	;# 
  6861  090E                     	;# 
  6862  090F                     	;# 
  6863  091F                     	;# 
  6864  098F                     	;# 
  6865  098F                     	;# 
  6866  0990                     	;# 
  6867  0991                     	;# 
  6868  0992                     	;# 
  6869  0993                     	;# 
  6870  0994                     	;# 
  6871  0995                     	;# 
  6872  0996                     	;# 
  6873  0997                     	;# 
  6874  1E0F                     	;# 
  6875  1E10                     	;# 
  6876  1E11                     	;# 
  6877  1E12                     	;# 
  6878  1E13                     	;# 
  6879  1E14                     	;# 
  6880  1E15                     	;# 
  6881  1E16                     	;# 
  6882  1E17                     	;# 
  6883  1E18                     	;# 
  6884  1E19                     	;# 
  6885  1E1A                     	;# 
  6886  1E1B                     	;# 
  6887  1E1C                     	;# 
  6888  1E1D                     	;# 
  6889  1E1E                     	;# 
  6890  1E1F                     	;# 
  6891  1E20                     	;# 
  6892  1E21                     	;# 
  6893  1E22                     	;# 
  6894  1E23                     	;# 
  6895  1E24                     	;# 
  6896  1E25                     	;# 
  6897  1E26                     	;# 
  6898  1E27                     	;# 
  6899  1E28                     	;# 
  6900  1E29                     	;# 
  6901  1E2A                     	;# 
  6902  1E2B                     	;# 
  6903  1E2C                     	;# 
  6904  1E2D                     	;# 
  6905  1E2E                     	;# 
  6906  1E2F                     	;# 
  6907  1E30                     	;# 
  6908  1E31                     	;# 
  6909  1E32                     	;# 
  6910  1E33                     	;# 
  6911  1E34                     	;# 
  6912  1E35                     	;# 
  6913  1E36                     	;# 
  6914  1E37                     	;# 
  6915  1E8F                     	;# 
  6916  1E90                     	;# 
  6917  1E91                     	;# 
  6918  1E92                     	;# 
  6919  1E93                     	;# 
  6920  1E94                     	;# 
  6921  1E95                     	;# 
  6922  1E96                     	;# 
  6923  1E97                     	;# 
  6924  1E9C                     	;# 
  6925  1E9D                     	;# 
  6926  1E9E                     	;# 
  6927  1EA1                     	;# 
  6928  1EA2                     	;# 
  6929  1EA3                     	;# 
  6930  1EA4                     	;# 
  6931  1EA9                     	;# 
  6932  1EAA                     	;# 
  6933  1EB1                     	;# 
  6934  1EB2                     	;# 
  6935  1EB8                     	;# 
  6936  1EB9                     	;# 
  6937  1EBA                     	;# 
  6938  1EBB                     	;# 
  6939  1EBC                     	;# 
  6940  1EBD                     	;# 
  6941  1EBE                     	;# 
  6942  1EC3                     	;# 
  6943  1EC5                     	;# 
  6944  1EC6                     	;# 
  6945  1EC7                     	;# 
  6946  1EC8                     	;# 
  6947  1EC9                     	;# 
  6948  1ECA                     	;# 
  6949  1ECB                     	;# 
  6950  1ECB                     	;# 
  6951  1ECB                     	;# 
  6952  1ECC                     	;# 
  6953  1ECC                     	;# 
  6954  1ECC                     	;# 
  6955  1F10                     	;# 
  6956  1F11                     	;# 
  6957  1F12                     	;# 
  6958  1F14                     	;# 
  6959  1F15                     	;# 
  6960  1F1C                     	;# 
  6961  1F1D                     	;# 
  6962  1F1E                     	;# 
  6963  1F1F                     	;# 
  6964  1F20                     	;# 
  6965  1F21                     	;# 
  6966  1F22                     	;# 
  6967  1F23                     	;# 
  6968  1F24                     	;# 
  6969  1F25                     	;# 
  6970  1F26                     	;# 
  6971  1F27                     	;# 
  6972  1F38                     	;# 
  6973  1F39                     	;# 
  6974  1F3A                     	;# 
  6975  1F3B                     	;# 
  6976  1F3C                     	;# 
  6977  1F3D                     	;# 
  6978  1F3E                     	;# 
  6979  1F3F                     	;# 
  6980  1F43                     	;# 
  6981  1F44                     	;# 
  6982  1F45                     	;# 
  6983  1F46                     	;# 
  6984  1F47                     	;# 
  6985  1F48                     	;# 
  6986  1F49                     	;# 
  6987  1F4A                     	;# 
  6988  1F4E                     	;# 
  6989  1F4F                     	;# 
  6990  1F50                     	;# 
  6991  1F51                     	;# 
  6992  1F52                     	;# 
  6993  1F53                     	;# 
  6994  1F54                     	;# 
  6995  1F55                     	;# 
  6996  1FE4                     	;# 
  6997  1FE5                     	;# 
  6998  1FE6                     	;# 
  6999  1FE7                     	;# 
  7000  1FE8                     	;# 
  7001  1FE8                     	;# 
  7002  1FE9                     	;# 
  7003  1FEA                     	;# 
  7004  1FEB                     	;# 
  7005  1FED                     	;# 
  7006  1FEE                     	;# 
  7007  1FEF                     	;# 
  7008  0000                     	;# 
  7009  0001                     	;# 
  7010  0002                     	;# 
  7011  0003                     	;# 
  7012  0004                     	;# 
  7013  0005                     	;# 
  7014  0006                     	;# 
  7015  0007                     	;# 
  7016  0008                     	;# 
  7017  0009                     	;# 
  7018  000A                     	;# 
  7019  000B                     	;# 
  7020  000C                     	;# 
  7021  000D                     	;# 
  7022  000E                     	;# 
  7023  0012                     	;# 
  7024  0013                     	;# 
  7025  0014                     	;# 
  7026  0018                     	;# 
  7027  0019                     	;# 
  7028  001A                     	;# 
  7029  008C                     	;# 
  7030  008C                     	;# 
  7031  008D                     	;# 
  7032  008E                     	;# 
  7033  008E                     	;# 
  7034  008F                     	;# 
  7035  0090                     	;# 
  7036  0090                     	;# 
  7037  0091                     	;# 
  7038  0092                     	;# 
  7039  0092                     	;# 
  7040  0093                     	;# 
  7041  0094                     	;# 
  7042  0094                     	;# 
  7043  0095                     	;# 
  7044  0096                     	;# 
  7045  0096                     	;# 
  7046  0097                     	;# 
  7047  0098                     	;# 
  7048  0099                     	;# 
  7049  009A                     	;# 
  7050  009B                     	;# 
  7051  009B                     	;# 
  7052  009C                     	;# 
  7053  009D                     	;# 
  7054  009D                     	;# 
  7055  009E                     	;# 
  7056  009F                     	;# 
  7057  010C                     	;# 
  7058  010C                     	;# 
  7059  010D                     	;# 
  7060  010E                     	;# 
  7061  010F                     	;# 
  7062  010F                     	;# 
  7063  0110                     	;# 
  7064  0111                     	;# 
  7065  0112                     	;# 
  7066  0113                     	;# 
  7067  0114                     	;# 
  7068  0115                     	;# 
  7069  0116                     	;# 
  7070  0117                     	;# 
  7071  0118                     	;# 
  7072  0119                     	;# 
  7073  0119                     	;# 
  7074  0119                     	;# 
  7075  011A                     	;# 
  7076  011A                     	;# 
  7077  011A                     	;# 
  7078  011B                     	;# 
  7079  011B                     	;# 
  7080  011B                     	;# 
  7081  011B                     	;# 
  7082  011B                     	;# 
  7083  011C                     	;# 
  7084  011C                     	;# 
  7085  011C                     	;# 
  7086  011D                     	;# 
  7087  011D                     	;# 
  7088  011D                     	;# 
  7089  011E                     	;# 
  7090  011E                     	;# 
  7091  011E                     	;# 
  7092  011F                     	;# 
  7093  011F                     	;# 
  7094  011F                     	;# 
  7095  011F                     	;# 
  7096  011F                     	;# 
  7097  018C                     	;# 
  7098  018D                     	;# 
  7099  018E                     	;# 
  7100  018F                     	;# 
  7101  0190                     	;# 
  7102  0191                     	;# 
  7103  0192                     	;# 
  7104  0196                     	;# 
  7105  0197                     	;# 
  7106  0198                     	;# 
  7107  0199                     	;# 
  7108  019A                     	;# 
  7109  019B                     	;# 
  7110  019C                     	;# 
  7111  020C                     	;# 
  7112  020D                     	;# 
  7113  020E                     	;# 
  7114  020E                     	;# 
  7115  020F                     	;# 
  7116  020F                     	;# 
  7117  0210                     	;# 
  7118  0210                     	;# 
  7119  0211                     	;# 
  7120  0211                     	;# 
  7121  0212                     	;# 
  7122  0213                     	;# 
  7123  0214                     	;# 
  7124  0214                     	;# 
  7125  0215                     	;# 
  7126  0215                     	;# 
  7127  0216                     	;# 
  7128  0216                     	;# 
  7129  0217                     	;# 
  7130  0217                     	;# 
  7131  0218                     	;# 
  7132  0219                     	;# 
  7133  021A                     	;# 
  7134  021A                     	;# 
  7135  021B                     	;# 
  7136  021B                     	;# 
  7137  021C                     	;# 
  7138  021C                     	;# 
  7139  021D                     	;# 
  7140  021D                     	;# 
  7141  021E                     	;# 
  7142  021F                     	;# 
  7143  028C                     	;# 
  7144  028C                     	;# 
  7145  028D                     	;# 
  7146  028D                     	;# 
  7147  028E                     	;# 
  7148  028F                     	;# 
  7149  0290                     	;# 
  7150  0291                     	;# 
  7151  0292                     	;# 
  7152  0292                     	;# 
  7153  0293                     	;# 
  7154  0293                     	;# 
  7155  0294                     	;# 
  7156  0295                     	;# 
  7157  0296                     	;# 
  7158  0297                     	;# 
  7159  0298                     	;# 
  7160  0298                     	;# 
  7161  0299                     	;# 
  7162  0299                     	;# 
  7163  029A                     	;# 
  7164  029B                     	;# 
  7165  029C                     	;# 
  7166  029D                     	;# 
  7167  029F                     	;# 
  7168  030C                     	;# 
  7169  030C                     	;# 
  7170  030D                     	;# 
  7171  030E                     	;# 
  7172  030F                     	;# 
  7173  0310                     	;# 
  7174  0310                     	;# 
  7175  0311                     	;# 
  7176  0312                     	;# 
  7177  0313                     	;# 
  7178  0314                     	;# 
  7179  0314                     	;# 
  7180  0315                     	;# 
  7181  0316                     	;# 
  7182  0317                     	;# 
  7183  0318                     	;# 
  7184  0318                     	;# 
  7185  0319                     	;# 
  7186  031A                     	;# 
  7187  031B                     	;# 
  7188  038C                     	;# 
  7189  038C                     	;# 
  7190  038D                     	;# 
  7191  038E                     	;# 
  7192  0390                     	;# 
  7193  0390                     	;# 
  7194  0391                     	;# 
  7195  0392                     	;# 
  7196  048C                     	;# 
  7197  048C                     	;# 
  7198  048D                     	;# 
  7199  048E                     	;# 
  7200  048F                     	;# 
  7201  048F                     	;# 
  7202  0490                     	;# 
  7203  0491                     	;# 
  7204  0492                     	;# 
  7205  0492                     	;# 
  7206  0493                     	;# 
  7207  0494                     	;# 
  7208  0495                     	;# 
  7209  0495                     	;# 
  7210  0496                     	;# 
  7211  0497                     	;# 
  7212  0498                     	;# 
  7213  0499                     	;# 
  7214  049A                     	;# 
  7215  049B                     	;# 
  7216  049C                     	;# 
  7217  049D                     	;# 
  7218  058C                     	;# 
  7219  058C                     	;# 
  7220  058D                     	;# 
  7221  058E                     	;# 
  7222  058F                     	;# 
  7223  058F                     	;# 
  7224  0590                     	;# 
  7225  0591                     	;# 
  7226  0592                     	;# 
  7227  0593                     	;# 
  7228  059C                     	;# 
  7229  059C                     	;# 
  7230  059D                     	;# 
  7231  059D                     	;# 
  7232  059E                     	;# 
  7233  059F                     	;# 
  7234  060C                     	;# 
  7235  060C                     	;# 
  7236  060D                     	;# 
  7237  060D                     	;# 
  7238  060E                     	;# 
  7239  060F                     	;# 
  7240  0610                     	;# 
  7241  0611                     	;# 
  7242  0612                     	;# 
  7243  0613                     	;# 
  7244  0614                     	;# 
  7245  0616                     	;# 
  7246  0616                     	;# 
  7247  0617                     	;# 
  7248  0617                     	;# 
  7249  0618                     	;# 
  7250  0619                     	;# 
  7251  061A                     	;# 
  7252  061B                     	;# 
  7253  061C                     	;# 
  7254  061D                     	;# 
  7255  061E                     	;# 
  7256  070C                     	;# 
  7257  070D                     	;# 
  7258  070E                     	;# 
  7259  070F                     	;# 
  7260  0710                     	;# 
  7261  0711                     	;# 
  7262  0712                     	;# 
  7263  0713                     	;# 
  7264  0714                     	;# 
  7265  0716                     	;# 
  7266  0717                     	;# 
  7267  0718                     	;# 
  7268  0719                     	;# 
  7269  071A                     	;# 
  7270  071B                     	;# 
  7271  071C                     	;# 
  7272  071D                     	;# 
  7273  071E                     	;# 
  7274  0796                     	;# 
  7275  0797                     	;# 
  7276  0798                     	;# 
  7277  0799                     	;# 
  7278  079A                     	;# 
  7279  079B                     	;# 
  7280  079C                     	;# 
  7281  079D                     	;# 
  7282  080C                     	;# 
  7283  080D                     	;# 
  7284  080E                     	;# 
  7285  080F                     	;# 
  7286  0810                     	;# 
  7287  0811                     	;# 
  7288  0812                     	;# 
  7289  0813                     	;# 
  7290  0814                     	;# 
  7291  081A                     	;# 
  7292  081A                     	;# 
  7293  081B                     	;# 
  7294  081C                     	;# 
  7295  081C                     	;# 
  7296  081D                     	;# 
  7297  081E                     	;# 
  7298  081F                     	;# 
  7299  088C                     	;# 
  7300  088D                     	;# 
  7301  088E                     	;# 
  7302  088F                     	;# 
  7303  0890                     	;# 
  7304  0891                     	;# 
  7305  0892                     	;# 
  7306  0893                     	;# 
  7307  0895                     	;# 
  7308  0896                     	;# 
  7309  0897                     	;# 
  7310  0898                     	;# 
  7311  0899                     	;# 
  7312  089A                     	;# 
  7313  089B                     	;# 
  7314  090C                     	;# 
  7315  090E                     	;# 
  7316  090F                     	;# 
  7317  091F                     	;# 
  7318  098F                     	;# 
  7319  098F                     	;# 
  7320  0990                     	;# 
  7321  0991                     	;# 
  7322  0992                     	;# 
  7323  0993                     	;# 
  7324  0994                     	;# 
  7325  0995                     	;# 
  7326  0996                     	;# 
  7327  0997                     	;# 
  7328  1E0F                     	;# 
  7329  1E10                     	;# 
  7330  1E11                     	;# 
  7331  1E12                     	;# 
  7332  1E13                     	;# 
  7333  1E14                     	;# 
  7334  1E15                     	;# 
  7335  1E16                     	;# 
  7336  1E17                     	;# 
  7337  1E18                     	;# 
  7338  1E19                     	;# 
  7339  1E1A                     	;# 
  7340  1E1B                     	;# 
  7341  1E1C                     	;# 
  7342  1E1D                     	;# 
  7343  1E1E                     	;# 
  7344  1E1F                     	;# 
  7345  1E20                     	;# 
  7346  1E21                     	;# 
  7347  1E22                     	;# 
  7348  1E23                     	;# 
  7349  1E24                     	;# 
  7350  1E25                     	;# 
  7351  1E26                     	;# 
  7352  1E27                     	;# 
  7353  1E28                     	;# 
  7354  1E29                     	;# 
  7355  1E2A                     	;# 
  7356  1E2B                     	;# 
  7357  1E2C                     	;# 
  7358  1E2D                     	;# 
  7359  1E2E                     	;# 
  7360  1E2F                     	;# 
  7361  1E30                     	;# 
  7362  1E31                     	;# 
  7363  1E32                     	;# 
  7364  1E33                     	;# 
  7365  1E34                     	;# 
  7366  1E35                     	;# 
  7367  1E36                     	;# 
  7368  1E37                     	;# 
  7369  1E8F                     	;# 
  7370  1E90                     	;# 
  7371  1E91                     	;# 
  7372  1E92                     	;# 
  7373  1E93                     	;# 
  7374  1E94                     	;# 
  7375  1E95                     	;# 
  7376  1E96                     	;# 
  7377  1E97                     	;# 
  7378  1E9C                     	;# 
  7379  1E9D                     	;# 
  7380  1E9E                     	;# 
  7381  1EA1                     	;# 
  7382  1EA2                     	;# 
  7383  1EA3                     	;# 
  7384  1EA4                     	;# 
  7385  1EA9                     	;# 
  7386  1EAA                     	;# 
  7387  1EB1                     	;# 
  7388  1EB2                     	;# 
  7389  1EB8                     	;# 
  7390  1EB9                     	;# 
  7391  1EBA                     	;# 
  7392  1EBB                     	;# 
  7393  1EBC                     	;# 
  7394  1EBD                     	;# 
  7395  1EBE                     	;# 
  7396  1EC3                     	;# 
  7397  1EC5                     	;# 
  7398  1EC6                     	;# 
  7399  1EC7                     	;# 
  7400  1EC8                     	;# 
  7401  1EC9                     	;# 
  7402  1ECA                     	;# 
  7403  1ECB                     	;# 
  7404  1ECB                     	;# 
  7405  1ECB                     	;# 
  7406  1ECC                     	;# 
  7407  1ECC                     	;# 
  7408  1ECC                     	;# 
  7409  1F10                     	;# 
  7410  1F11                     	;# 
  7411  1F12                     	;# 
  7412  1F14                     	;# 
  7413  1F15                     	;# 
  7414  1F1C                     	;# 
  7415  1F1D                     	;# 
  7416  1F1E                     	;# 
  7417  1F1F                     	;# 
  7418  1F20                     	;# 
  7419  1F21                     	;# 
  7420  1F22                     	;# 
  7421  1F23                     	;# 
  7422  1F24                     	;# 
  7423  1F25                     	;# 
  7424  1F26                     	;# 
  7425  1F27                     	;# 
  7426  1F38                     	;# 
  7427  1F39                     	;# 
  7428  1F3A                     	;# 
  7429  1F3B                     	;# 
  7430  1F3C                     	;# 
  7431  1F3D                     	;# 
  7432  1F3E                     	;# 
  7433  1F3F                     	;# 
  7434  1F43                     	;# 
  7435  1F44                     	;# 
  7436  1F45                     	;# 
  7437  1F46                     	;# 
  7438  1F47                     	;# 
  7439  1F48                     	;# 
  7440  1F49                     	;# 
  7441  1F4A                     	;# 
  7442  1F4E                     	;# 
  7443  1F4F                     	;# 
  7444  1F50                     	;# 
  7445  1F51                     	;# 
  7446  1F52                     	;# 
  7447  1F53                     	;# 
  7448  1F54                     	;# 
  7449  1F55                     	;# 
  7450  1FE4                     	;# 
  7451  1FE5                     	;# 
  7452  1FE6                     	;# 
  7453  1FE7                     	;# 
  7454  1FE8                     	;# 
  7455  1FE8                     	;# 
  7456  1FE9                     	;# 
  7457  1FEA                     	;# 
  7458  1FEB                     	;# 
  7459  1FED                     	;# 
  7460  1FEE                     	;# 
  7461  1FEF                     	;# 
  7462  0000                     	;# 
  7463  0001                     	;# 
  7464  0002                     	;# 
  7465  0003                     	;# 
  7466  0004                     	;# 
  7467  0005                     	;# 
  7468  0006                     	;# 
  7469  0007                     	;# 
  7470  0008                     	;# 
  7471  0009                     	;# 
  7472  000A                     	;# 
  7473  000B                     	;# 
  7474  000C                     	;# 
  7475  000D                     	;# 
  7476  000E                     	;# 
  7477  0012                     	;# 
  7478  0013                     	;# 
  7479  0014                     	;# 
  7480  0018                     	;# 
  7481  0019                     	;# 
  7482  001A                     	;# 
  7483  008C                     	;# 
  7484  008C                     	;# 
  7485  008D                     	;# 
  7486  008E                     	;# 
  7487  008E                     	;# 
  7488  008F                     	;# 
  7489  0090                     	;# 
  7490  0090                     	;# 
  7491  0091                     	;# 
  7492  0092                     	;# 
  7493  0092                     	;# 
  7494  0093                     	;# 
  7495  0094                     	;# 
  7496  0094                     	;# 
  7497  0095                     	;# 
  7498  0096                     	;# 
  7499  0096                     	;# 
  7500  0097                     	;# 
  7501  0098                     	;# 
  7502  0099                     	;# 
  7503  009A                     	;# 
  7504  009B                     	;# 
  7505  009B                     	;# 
  7506  009C                     	;# 
  7507  009D                     	;# 
  7508  009D                     	;# 
  7509  009E                     	;# 
  7510  009F                     	;# 
  7511  010C                     	;# 
  7512  010C                     	;# 
  7513  010D                     	;# 
  7514  010E                     	;# 
  7515  010F                     	;# 
  7516  010F                     	;# 
  7517  0110                     	;# 
  7518  0111                     	;# 
  7519  0112                     	;# 
  7520  0113                     	;# 
  7521  0114                     	;# 
  7522  0115                     	;# 
  7523  0116                     	;# 
  7524  0117                     	;# 
  7525  0118                     	;# 
  7526  0119                     	;# 
  7527  0119                     	;# 
  7528  0119                     	;# 
  7529  011A                     	;# 
  7530  011A                     	;# 
  7531  011A                     	;# 
  7532  011B                     	;# 
  7533  011B                     	;# 
  7534  011B                     	;# 
  7535  011B                     	;# 
  7536  011B                     	;# 
  7537  011C                     	;# 
  7538  011C                     	;# 
  7539  011C                     	;# 
  7540  011D                     	;# 
  7541  011D                     	;# 
  7542  011D                     	;# 
  7543  011E                     	;# 
  7544  011E                     	;# 
  7545  011E                     	;# 
  7546  011F                     	;# 
  7547  011F                     	;# 
  7548  011F                     	;# 
  7549  011F                     	;# 
  7550  011F                     	;# 
  7551  018C                     	;# 
  7552  018D                     	;# 
  7553  018E                     	;# 
  7554  018F                     	;# 
  7555  0190                     	;# 
  7556  0191                     	;# 
  7557  0192                     	;# 
  7558  0196                     	;# 
  7559  0197                     	;# 
  7560  0198                     	;# 
  7561  0199                     	;# 
  7562  019A                     	;# 
  7563  019B                     	;# 
  7564  019C                     	;# 
  7565  020C                     	;# 
  7566  020D                     	;# 
  7567  020E                     	;# 
  7568  020E                     	;# 
  7569  020F                     	;# 
  7570  020F                     	;# 
  7571  0210                     	;# 
  7572  0210                     	;# 
  7573  0211                     	;# 
  7574  0211                     	;# 
  7575  0212                     	;# 
  7576  0213                     	;# 
  7577  0214                     	;# 
  7578  0214                     	;# 
  7579  0215                     	;# 
  7580  0215                     	;# 
  7581  0216                     	;# 
  7582  0216                     	;# 
  7583  0217                     	;# 
  7584  0217                     	;# 
  7585  0218                     	;# 
  7586  0219                     	;# 
  7587  021A                     	;# 
  7588  021A                     	;# 
  7589  021B                     	;# 
  7590  021B                     	;# 
  7591  021C                     	;# 
  7592  021C                     	;# 
  7593  021D                     	;# 
  7594  021D                     	;# 
  7595  021E                     	;# 
  7596  021F                     	;# 
  7597  028C                     	;# 
  7598  028C                     	;# 
  7599  028D                     	;# 
  7600  028D                     	;# 
  7601  028E                     	;# 
  7602  028F                     	;# 
  7603  0290                     	;# 
  7604  0291                     	;# 
  7605  0292                     	;# 
  7606  0292                     	;# 
  7607  0293                     	;# 
  7608  0293                     	;# 
  7609  0294                     	;# 
  7610  0295                     	;# 
  7611  0296                     	;# 
  7612  0297                     	;# 
  7613  0298                     	;# 
  7614  0298                     	;# 
  7615  0299                     	;# 
  7616  0299                     	;# 
  7617  029A                     	;# 
  7618  029B                     	;# 
  7619  029C                     	;# 
  7620  029D                     	;# 
  7621  029F                     	;# 
  7622  030C                     	;# 
  7623  030C                     	;# 
  7624  030D                     	;# 
  7625  030E                     	;# 
  7626  030F                     	;# 
  7627  0310                     	;# 
  7628  0310                     	;# 
  7629  0311                     	;# 
  7630  0312                     	;# 
  7631  0313                     	;# 
  7632  0314                     	;# 
  7633  0314                     	;# 
  7634  0315                     	;# 
  7635  0316                     	;# 
  7636  0317                     	;# 
  7637  0318                     	;# 
  7638  0318                     	;# 
  7639  0319                     	;# 
  7640  031A                     	;# 
  7641  031B                     	;# 
  7642  038C                     	;# 
  7643  038C                     	;# 
  7644  038D                     	;# 
  7645  038E                     	;# 
  7646  0390                     	;# 
  7647  0390                     	;# 
  7648  0391                     	;# 
  7649  0392                     	;# 
  7650  048C                     	;# 
  7651  048C                     	;# 
  7652  048D                     	;# 
  7653  048E                     	;# 
  7654  048F                     	;# 
  7655  048F                     	;# 
  7656  0490                     	;# 
  7657  0491                     	;# 
  7658  0492                     	;# 
  7659  0492                     	;# 
  7660  0493                     	;# 
  7661  0494                     	;# 
  7662  0495                     	;# 
  7663  0495                     	;# 
  7664  0496                     	;# 
  7665  0497                     	;# 
  7666  0498                     	;# 
  7667  0499                     	;# 
  7668  049A                     	;# 
  7669  049B                     	;# 
  7670  049C                     	;# 
  7671  049D                     	;# 
  7672  058C                     	;# 
  7673  058C                     	;# 
  7674  058D                     	;# 
  7675  058E                     	;# 
  7676  058F                     	;# 
  7677  058F                     	;# 
  7678  0590                     	;# 
  7679  0591                     	;# 
  7680  0592                     	;# 
  7681  0593                     	;# 
  7682  059C                     	;# 
  7683  059C                     	;# 
  7684  059D                     	;# 
  7685  059D                     	;# 
  7686  059E                     	;# 
  7687  059F                     	;# 
  7688  060C                     	;# 
  7689  060C                     	;# 
  7690  060D                     	;# 
  7691  060D                     	;# 
  7692  060E                     	;# 
  7693  060F                     	;# 
  7694  0610                     	;# 
  7695  0611                     	;# 
  7696  0612                     	;# 
  7697  0613                     	;# 
  7698  0614                     	;# 
  7699  0616                     	;# 
  7700  0616                     	;# 
  7701  0617                     	;# 
  7702  0617                     	;# 
  7703  0618                     	;# 
  7704  0619                     	;# 
  7705  061A                     	;# 
  7706  061B                     	;# 
  7707  061C                     	;# 
  7708  061D                     	;# 
  7709  061E                     	;# 
  7710  070C                     	;# 
  7711  070D                     	;# 
  7712  070E                     	;# 
  7713  070F                     	;# 
  7714  0710                     	;# 
  7715  0711                     	;# 
  7716  0712                     	;# 
  7717  0713                     	;# 
  7718  0714                     	;# 
  7719  0716                     	;# 
  7720  0717                     	;# 
  7721  0718                     	;# 
  7722  0719                     	;# 
  7723  071A                     	;# 
  7724  071B                     	;# 
  7725  071C                     	;# 
  7726  071D                     	;# 
  7727  071E                     	;# 
  7728  0796                     	;# 
  7729  0797                     	;# 
  7730  0798                     	;# 
  7731  0799                     	;# 
  7732  079A                     	;# 
  7733  079B                     	;# 
  7734  079C                     	;# 
  7735  079D                     	;# 
  7736  080C                     	;# 
  7737  080D                     	;# 
  7738  080E                     	;# 
  7739  080F                     	;# 
  7740  0810                     	;# 
  7741  0811                     	;# 
  7742  0812                     	;# 
  7743  0813                     	;# 
  7744  0814                     	;# 
  7745  081A                     	;# 
  7746  081A                     	;# 
  7747  081B                     	;# 
  7748  081C                     	;# 
  7749  081C                     	;# 
  7750  081D                     	;# 
  7751  081E                     	;# 
  7752  081F                     	;# 
  7753  088C                     	;# 
  7754  088D                     	;# 
  7755  088E                     	;# 
  7756  088F                     	;# 
  7757  0890                     	;# 
  7758  0891                     	;# 
  7759  0892                     	;# 
  7760  0893                     	;# 
  7761  0895                     	;# 
  7762  0896                     	;# 
  7763  0897                     	;# 
  7764  0898                     	;# 
  7765  0899                     	;# 
  7766  089A                     	;# 
  7767  089B                     	;# 
  7768  090C                     	;# 
  7769  090E                     	;# 
  7770  090F                     	;# 
  7771  091F                     	;# 
  7772  098F                     	;# 
  7773  098F                     	;# 
  7774  0990                     	;# 
  7775  0991                     	;# 
  7776  0992                     	;# 
  7777  0993                     	;# 
  7778  0994                     	;# 
  7779  0995                     	;# 
  7780  0996                     	;# 
  7781  0997                     	;# 
  7782  1E0F                     	;# 
  7783  1E10                     	;# 
  7784  1E11                     	;# 
  7785  1E12                     	;# 
  7786  1E13                     	;# 
  7787  1E14                     	;# 
  7788  1E15                     	;# 
  7789  1E16                     	;# 
  7790  1E17                     	;# 
  7791  1E18                     	;# 
  7792  1E19                     	;# 
  7793  1E1A                     	;# 
  7794  1E1B                     	;# 
  7795  1E1C                     	;# 
  7796  1E1D                     	;# 
  7797  1E1E                     	;# 
  7798  1E1F                     	;# 
  7799  1E20                     	;# 
  7800  1E21                     	;# 
  7801  1E22                     	;# 
  7802  1E23                     	;# 
  7803  1E24                     	;# 
  7804  1E25                     	;# 
  7805  1E26                     	;# 
  7806  1E27                     	;# 
  7807  1E28                     	;# 
  7808  1E29                     	;# 
  7809  1E2A                     	;# 
  7810  1E2B                     	;# 
  7811  1E2C                     	;# 
  7812  1E2D                     	;# 
  7813  1E2E                     	;# 
  7814  1E2F                     	;# 
  7815  1E30                     	;# 
  7816  1E31                     	;# 
  7817  1E32                     	;# 
  7818  1E33                     	;# 
  7819  1E34                     	;# 
  7820  1E35                     	;# 
  7821  1E36                     	;# 
  7822  1E37                     	;# 
  7823  1E8F                     	;# 
  7824  1E90                     	;# 
  7825  1E91                     	;# 
  7826  1E92                     	;# 
  7827  1E93                     	;# 
  7828  1E94                     	;# 
  7829  1E95                     	;# 
  7830  1E96                     	;# 
  7831  1E97                     	;# 
  7832  1E9C                     	;# 
  7833  1E9D                     	;# 
  7834  1E9E                     	;# 
  7835  1EA1                     	;# 
  7836  1EA2                     	;# 
  7837  1EA3                     	;# 
  7838  1EA4                     	;# 
  7839  1EA9                     	;# 
  7840  1EAA                     	;# 
  7841  1EB1                     	;# 
  7842  1EB2                     	;# 
  7843  1EB8                     	;# 
  7844  1EB9                     	;# 
  7845  1EBA                     	;# 
  7846  1EBB                     	;# 
  7847  1EBC                     	;# 
  7848  1EBD                     	;# 
  7849  1EBE                     	;# 
  7850  1EC3                     	;# 
  7851  1EC5                     	;# 
  7852  1EC6                     	;# 
  7853  1EC7                     	;# 
  7854  1EC8                     	;# 
  7855  1EC9                     	;# 
  7856  1ECA                     	;# 
  7857  1ECB                     	;# 
  7858  1ECB                     	;# 
  7859  1ECB                     	;# 
  7860  1ECC                     	;# 
  7861  1ECC                     	;# 
  7862  1ECC                     	;# 
  7863  1F10                     	;# 
  7864  1F11                     	;# 
  7865  1F12                     	;# 
  7866  1F14                     	;# 
  7867  1F15                     	;# 
  7868  1F1C                     	;# 
  7869  1F1D                     	;# 
  7870  1F1E                     	;# 
  7871  1F1F                     	;# 
  7872  1F20                     	;# 
  7873  1F21                     	;# 
  7874  1F22                     	;# 
  7875  1F23                     	;# 
  7876  1F24                     	;# 
  7877  1F25                     	;# 
  7878  1F26                     	;# 
  7879  1F27                     	;# 
  7880  1F38                     	;# 
  7881  1F39                     	;# 
  7882  1F3A                     	;# 
  7883  1F3B                     	;# 
  7884  1F3C                     	;# 
  7885  1F3D                     	;# 
  7886  1F3E                     	;# 
  7887  1F3F                     	;# 
  7888  1F43                     	;# 
  7889  1F44                     	;# 
  7890  1F45                     	;# 
  7891  1F46                     	;# 
  7892  1F47                     	;# 
  7893  1F48                     	;# 
  7894  1F49                     	;# 
  7895  1F4A                     	;# 
  7896  1F4E                     	;# 
  7897  1F4F                     	;# 
  7898  1F50                     	;# 
  7899  1F51                     	;# 
  7900  1F52                     	;# 
  7901  1F53                     	;# 
  7902  1F54                     	;# 
  7903  1F55                     	;# 
  7904  1FE4                     	;# 
  7905  1FE5                     	;# 
  7906  1FE6                     	;# 
  7907  1FE7                     	;# 
  7908  1FE8                     	;# 
  7909  1FE8                     	;# 
  7910  1FE9                     	;# 
  7911  1FEA                     	;# 
  7912  1FEB                     	;# 
  7913  1FED                     	;# 
  7914  1FEE                     	;# 
  7915  1FEF                     	;# 
  7916  0000                     	;# 
  7917  0001                     	;# 
  7918  0002                     	;# 
  7919  0003                     	;# 
  7920  0004                     	;# 
  7921  0005                     	;# 
  7922  0006                     	;# 
  7923  0007                     	;# 
  7924  0008                     	;# 
  7925  0009                     	;# 
  7926  000A                     	;# 
  7927  000B                     	;# 
  7928  000C                     	;# 
  7929  000D                     	;# 
  7930  000E                     	;# 
  7931  0012                     	;# 
  7932  0013                     	;# 
  7933  0014                     	;# 
  7934  0018                     	;# 
  7935  0019                     	;# 
  7936  001A                     	;# 
  7937  008C                     	;# 
  7938  008C                     	;# 
  7939  008D                     	;# 
  7940  008E                     	;# 
  7941  008E                     	;# 
  7942  008F                     	;# 
  7943  0090                     	;# 
  7944  0090                     	;# 
  7945  0091                     	;# 
  7946  0092                     	;# 
  7947  0092                     	;# 
  7948  0093                     	;# 
  7949  0094                     	;# 
  7950  0094                     	;# 
  7951  0095                     	;# 
  7952  0096                     	;# 
  7953  0096                     	;# 
  7954  0097                     	;# 
  7955  0098                     	;# 
  7956  0099                     	;# 
  7957  009A                     	;# 
  7958  009B                     	;# 
  7959  009B                     	;# 
  7960  009C                     	;# 
  7961  009D                     	;# 
  7962  009D                     	;# 
  7963  009E                     	;# 
  7964  009F                     	;# 
  7965  010C                     	;# 
  7966  010C                     	;# 
  7967  010D                     	;# 
  7968  010E                     	;# 
  7969  010F                     	;# 
  7970  010F                     	;# 
  7971  0110                     	;# 
  7972  0111                     	;# 
  7973  0112                     	;# 
  7974  0113                     	;# 
  7975  0114                     	;# 
  7976  0115                     	;# 
  7977  0116                     	;# 
  7978  0117                     	;# 
  7979  0118                     	;# 
  7980  0119                     	;# 
  7981  0119                     	;# 
  7982  0119                     	;# 
  7983  011A                     	;# 
  7984  011A                     	;# 
  7985  011A                     	;# 
  7986  011B                     	;# 
  7987  011B                     	;# 
  7988  011B                     	;# 
  7989  011B                     	;# 
  7990  011B                     	;# 
  7991  011C                     	;# 
  7992  011C                     	;# 
  7993  011C                     	;# 
  7994  011D                     	;# 
  7995  011D                     	;# 
  7996  011D                     	;# 
  7997  011E                     	;# 
  7998  011E                     	;# 
  7999  011E                     	;# 
  8000  011F                     	;# 
  8001  011F                     	;# 
  8002  011F                     	;# 
  8003  011F                     	;# 
  8004  011F                     	;# 
  8005  018C                     	;# 
  8006  018D                     	;# 
  8007  018E                     	;# 
  8008  018F                     	;# 
  8009  0190                     	;# 
  8010  0191                     	;# 
  8011  0192                     	;# 
  8012  0196                     	;# 
  8013  0197                     	;# 
  8014  0198                     	;# 
  8015  0199                     	;# 
  8016  019A                     	;# 
  8017  019B                     	;# 
  8018  019C                     	;# 
  8019  020C                     	;# 
  8020  020D                     	;# 
  8021  020E                     	;# 
  8022  020E                     	;# 
  8023  020F                     	;# 
  8024  020F                     	;# 
  8025  0210                     	;# 
  8026  0210                     	;# 
  8027  0211                     	;# 
  8028  0211                     	;# 
  8029  0212                     	;# 
  8030  0213                     	;# 
  8031  0214                     	;# 
  8032  0214                     	;# 
  8033  0215                     	;# 
  8034  0215                     	;# 
  8035  0216                     	;# 
  8036  0216                     	;# 
  8037  0217                     	;# 
  8038  0217                     	;# 
  8039  0218                     	;# 
  8040  0219                     	;# 
  8041  021A                     	;# 
  8042  021A                     	;# 
  8043  021B                     	;# 
  8044  021B                     	;# 
  8045  021C                     	;# 
  8046  021C                     	;# 
  8047  021D                     	;# 
  8048  021D                     	;# 
  8049  021E                     	;# 
  8050  021F                     	;# 
  8051  028C                     	;# 
  8052  028C                     	;# 
  8053  028D                     	;# 
  8054  028D                     	;# 
  8055  028E                     	;# 
  8056  028F                     	;# 
  8057  0290                     	;# 
  8058  0291                     	;# 
  8059  0292                     	;# 
  8060  0292                     	;# 
  8061  0293                     	;# 
  8062  0293                     	;# 
  8063  0294                     	;# 
  8064  0295                     	;# 
  8065  0296                     	;# 
  8066  0297                     	;# 
  8067  0298                     	;# 
  8068  0298                     	;# 
  8069  0299                     	;# 
  8070  0299                     	;# 
  8071  029A                     	;# 
  8072  029B                     	;# 
  8073  029C                     	;# 
  8074  029D                     	;# 
  8075  029F                     	;# 
  8076  030C                     	;# 
  8077  030C                     	;# 
  8078  030D                     	;# 
  8079  030E                     	;# 
  8080  030F                     	;# 
  8081  0310                     	;# 
  8082  0310                     	;# 
  8083  0311                     	;# 
  8084  0312                     	;# 
  8085  0313                     	;# 
  8086  0314                     	;# 
  8087  0314                     	;# 
  8088  0315                     	;# 
  8089  0316                     	;# 
  8090  0317                     	;# 
  8091  0318                     	;# 
  8092  0318                     	;# 
  8093  0319                     	;# 
  8094  031A                     	;# 
  8095  031B                     	;# 
  8096  038C                     	;# 
  8097  038C                     	;# 
  8098  038D                     	;# 
  8099  038E                     	;# 
  8100  0390                     	;# 
  8101  0390                     	;# 
  8102  0391                     	;# 
  8103  0392                     	;# 
  8104  048C                     	;# 
  8105  048C                     	;# 
  8106  048D                     	;# 
  8107  048E                     	;# 
  8108  048F                     	;# 
  8109  048F                     	;# 
  8110  0490                     	;# 
  8111  0491                     	;# 
  8112  0492                     	;# 
  8113  0492                     	;# 
  8114  0493                     	;# 
  8115  0494                     	;# 
  8116  0495                     	;# 
  8117  0495                     	;# 
  8118  0496                     	;# 
  8119  0497                     	;# 
  8120  0498                     	;# 
  8121  0499                     	;# 
  8122  049A                     	;# 
  8123  049B                     	;# 
  8124  049C                     	;# 
  8125  049D                     	;# 
  8126  058C                     	;# 
  8127  058C                     	;# 
  8128  058D                     	;# 
  8129  058E                     	;# 
  8130  058F                     	;# 
  8131  058F                     	;# 
  8132  0590                     	;# 
  8133  0591                     	;# 
  8134  0592                     	;# 
  8135  0593                     	;# 
  8136  059C                     	;# 
  8137  059C                     	;# 
  8138  059D                     	;# 
  8139  059D                     	;# 
  8140  059E                     	;# 
  8141  059F                     	;# 
  8142  060C                     	;# 
  8143  060C                     	;# 
  8144  060D                     	;# 
  8145  060D                     	;# 
  8146  060E                     	;# 
  8147  060F                     	;# 
  8148  0610                     	;# 
  8149  0611                     	;# 
  8150  0612                     	;# 
  8151  0613                     	;# 
  8152  0614                     	;# 
  8153  0616                     	;# 
  8154  0616                     	;# 
  8155  0617                     	;# 
  8156  0617                     	;# 
  8157  0618                     	;# 
  8158  0619                     	;# 
  8159  061A                     	;# 
  8160  061B                     	;# 
  8161  061C                     	;# 
  8162  061D                     	;# 
  8163  061E                     	;# 
  8164  070C                     	;# 
  8165  070D                     	;# 
  8166  070E                     	;# 
  8167  070F                     	;# 
  8168  0710                     	;# 
  8169  0711                     	;# 
  8170  0712                     	;# 
  8171  0713                     	;# 
  8172  0714                     	;# 
  8173  0716                     	;# 
  8174  0717                     	;# 
  8175  0718                     	;# 
  8176  0719                     	;# 
  8177  071A                     	;# 
  8178  071B                     	;# 
  8179  071C                     	;# 
  8180  071D                     	;# 
  8181  071E                     	;# 
  8182  0796                     	;# 
  8183  0797                     	;# 
  8184  0798                     	;# 
  8185  0799                     	;# 
  8186  079A                     	;# 
  8187  079B                     	;# 
  8188  079C                     	;# 
  8189  079D                     	;# 
  8190  080C                     	;# 
  8191  080D                     	;# 
  8192  080E                     	;# 
  8193  080F                     	;# 
  8194  0810                     	;# 
  8195  0811                     	;# 
  8196  0812                     	;# 
  8197  0813                     	;# 
  8198  0814                     	;# 
  8199  081A                     	;# 
  8200  081A                     	;# 
  8201  081B                     	;# 
  8202  081C                     	;# 
  8203  081C                     	;# 
  8204  081D                     	;# 
  8205  081E                     	;# 
  8206  081F                     	;# 
  8207  088C                     	;# 
  8208  088D                     	;# 
  8209  088E                     	;# 
  8210  088F                     	;# 
  8211  0890                     	;# 
  8212  0891                     	;# 
  8213  0892                     	;# 
  8214  0893                     	;# 
  8215  0895                     	;# 
  8216  0896                     	;# 
  8217  0897                     	;# 
  8218  0898                     	;# 
  8219  0899                     	;# 
  8220  089A                     	;# 
  8221  089B                     	;# 
  8222  090C                     	;# 
  8223  090E                     	;# 
  8224  090F                     	;# 
  8225  091F                     	;# 
  8226  098F                     	;# 
  8227  098F                     	;# 
  8228  0990                     	;# 
  8229  0991                     	;# 
  8230  0992                     	;# 
  8231  0993                     	;# 
  8232  0994                     	;# 
  8233  0995                     	;# 
  8234  0996                     	;# 
  8235  0997                     	;# 
  8236  1E0F                     	;# 
  8237  1E10                     	;# 
  8238  1E11                     	;# 
  8239  1E12                     	;# 
  8240  1E13                     	;# 
  8241  1E14                     	;# 
  8242  1E15                     	;# 
  8243  1E16                     	;# 
  8244  1E17                     	;# 
  8245  1E18                     	;# 
  8246  1E19                     	;# 
  8247  1E1A                     	;# 
  8248  1E1B                     	;# 
  8249  1E1C                     	;# 
  8250  1E1D                     	;# 
  8251  1E1E                     	;# 
  8252  1E1F                     	;# 
  8253  1E20                     	;# 
  8254  1E21                     	;# 
  8255  1E22                     	;# 
  8256  1E23                     	;# 
  8257  1E24                     	;# 
  8258  1E25                     	;# 
  8259  1E26                     	;# 
  8260  1E27                     	;# 
  8261  1E28                     	;# 
  8262  1E29                     	;# 
  8263  1E2A                     	;# 
  8264  1E2B                     	;# 
  8265  1E2C                     	;# 
  8266  1E2D                     	;# 
  8267  1E2E                     	;# 
  8268  1E2F                     	;# 
  8269  1E30                     	;# 
  8270  1E31                     	;# 
  8271  1E32                     	;# 
  8272  1E33                     	;# 
  8273  1E34                     	;# 
  8274  1E35                     	;# 
  8275  1E36                     	;# 
  8276  1E37                     	;# 
  8277  1E8F                     	;# 
  8278  1E90                     	;# 
  8279  1E91                     	;# 
  8280  1E92                     	;# 
  8281  1E93                     	;# 
  8282  1E94                     	;# 
  8283  1E95                     	;# 
  8284  1E96                     	;# 
  8285  1E97                     	;# 
  8286  1E9C                     	;# 
  8287  1E9D                     	;# 
  8288  1E9E                     	;# 
  8289  1EA1                     	;# 
  8290  1EA2                     	;# 
  8291  1EA3                     	;# 
  8292  1EA4                     	;# 
  8293  1EA9                     	;# 
  8294  1EAA                     	;# 
  8295  1EB1                     	;# 
  8296  1EB2                     	;# 
  8297  1EB8                     	;# 
  8298  1EB9                     	;# 
  8299  1EBA                     	;# 
  8300  1EBB                     	;# 
  8301  1EBC                     	;# 
  8302  1EBD                     	;# 
  8303  1EBE                     	;# 
  8304  1EC3                     	;# 
  8305  1EC5                     	;# 
  8306  1EC6                     	;# 
  8307  1EC7                     	;# 
  8308  1EC8                     	;# 
  8309  1EC9                     	;# 
  8310  1ECA                     	;# 
  8311  1ECB                     	;# 
  8312  1ECB                     	;# 
  8313  1ECB                     	;# 
  8314  1ECC                     	;# 
  8315  1ECC                     	;# 
  8316  1ECC                     	;# 
  8317  1F10                     	;# 
  8318  1F11                     	;# 
  8319  1F12                     	;# 
  8320  1F14                     	;# 
  8321  1F15                     	;# 
  8322  1F1C                     	;# 
  8323  1F1D                     	;# 
  8324  1F1E                     	;# 
  8325  1F1F                     	;# 
  8326  1F20                     	;# 
  8327  1F21                     	;# 
  8328  1F22                     	;# 
  8329  1F23                     	;# 
  8330  1F24                     	;# 
  8331  1F25                     	;# 
  8332  1F26                     	;# 
  8333  1F27                     	;# 
  8334  1F38                     	;# 
  8335  1F39                     	;# 
  8336  1F3A                     	;# 
  8337  1F3B                     	;# 
  8338  1F3C                     	;# 
  8339  1F3D                     	;# 
  8340  1F3E                     	;# 
  8341  1F3F                     	;# 
  8342  1F43                     	;# 
  8343  1F44                     	;# 
  8344  1F45                     	;# 
  8345  1F46                     	;# 
  8346  1F47                     	;# 
  8347  1F48                     	;# 
  8348  1F49                     	;# 
  8349  1F4A                     	;# 
  8350  1F4E                     	;# 
  8351  1F4F                     	;# 
  8352  1F50                     	;# 
  8353  1F51                     	;# 
  8354  1F52                     	;# 
  8355  1F53                     	;# 
  8356  1F54                     	;# 
  8357  1F55                     	;# 
  8358  1FE4                     	;# 
  8359  1FE5                     	;# 
  8360  1FE6                     	;# 
  8361  1FE7                     	;# 
  8362  1FE8                     	;# 
  8363  1FE8                     	;# 
  8364  1FE9                     	;# 
  8365  1FEA                     	;# 
  8366  1FEB                     	;# 
  8367  1FED                     	;# 
  8368  1FEE                     	;# 
  8369  1FEF                     	;# 
  8370  0000                     	;# 
  8371  0001                     	;# 
  8372  0002                     	;# 
  8373  0003                     	;# 
  8374  0004                     	;# 
  8375  0005                     	;# 
  8376  0006                     	;# 
  8377  0007                     	;# 
  8378  0008                     	;# 
  8379  0009                     	;# 
  8380  000A                     	;# 
  8381  000B                     	;# 
  8382  000C                     	;# 
  8383  000D                     	;# 
  8384  000E                     	;# 
  8385  0012                     	;# 
  8386  0013                     	;# 
  8387  0014                     	;# 
  8388  0018                     	;# 
  8389  0019                     	;# 
  8390  001A                     	;# 
  8391  008C                     	;# 
  8392  008C                     	;# 
  8393  008D                     	;# 
  8394  008E                     	;# 
  8395  008E                     	;# 
  8396  008F                     	;# 
  8397  0090                     	;# 
  8398  0090                     	;# 
  8399  0091                     	;# 
  8400  0092                     	;# 
  8401  0092                     	;# 
  8402  0093                     	;# 
  8403  0094                     	;# 
  8404  0094                     	;# 
  8405  0095                     	;# 
  8406  0096                     	;# 
  8407  0096                     	;# 
  8408  0097                     	;# 
  8409  0098                     	;# 
  8410  0099                     	;# 
  8411  009A                     	;# 
  8412  009B                     	;# 
  8413  009B                     	;# 
  8414  009C                     	;# 
  8415  009D                     	;# 
  8416  009D                     	;# 
  8417  009E                     	;# 
  8418  009F                     	;# 
  8419  010C                     	;# 
  8420  010C                     	;# 
  8421  010D                     	;# 
  8422  010E                     	;# 
  8423  010F                     	;# 
  8424  010F                     	;# 
  8425  0110                     	;# 
  8426  0111                     	;# 
  8427  0112                     	;# 
  8428  0113                     	;# 
  8429  0114                     	;# 
  8430  0115                     	;# 
  8431  0116                     	;# 
  8432  0117                     	;# 
  8433  0118                     	;# 
  8434  0119                     	;# 
  8435  0119                     	;# 
  8436  0119                     	;# 
  8437  011A                     	;# 
  8438  011A                     	;# 
  8439  011A                     	;# 
  8440  011B                     	;# 
  8441  011B                     	;# 
  8442  011B                     	;# 
  8443  011B                     	;# 
  8444  011B                     	;# 
  8445  011C                     	;# 
  8446  011C                     	;# 
  8447  011C                     	;# 
  8448  011D                     	;# 
  8449  011D                     	;# 
  8450  011D                     	;# 
  8451  011E                     	;# 
  8452  011E                     	;# 
  8453  011E                     	;# 
  8454  011F                     	;# 
  8455  011F                     	;# 
  8456  011F                     	;# 
  8457  011F                     	;# 
  8458  011F                     	;# 
  8459  018C                     	;# 
  8460  018D                     	;# 
  8461  018E                     	;# 
  8462  018F                     	;# 
  8463  0190                     	;# 
  8464  0191                     	;# 
  8465  0192                     	;# 
  8466  0196                     	;# 
  8467  0197                     	;# 
  8468  0198                     	;# 
  8469  0199                     	;# 
  8470  019A                     	;# 
  8471  019B                     	;# 
  8472  019C                     	;# 
  8473  020C                     	;# 
  8474  020D                     	;# 
  8475  020E                     	;# 
  8476  020E                     	;# 
  8477  020F                     	;# 
  8478  020F                     	;# 
  8479  0210                     	;# 
  8480  0210                     	;# 
  8481  0211                     	;# 
  8482  0211                     	;# 
  8483  0212                     	;# 
  8484  0213                     	;# 
  8485  0214                     	;# 
  8486  0214                     	;# 
  8487  0215                     	;# 
  8488  0215                     	;# 
  8489  0216                     	;# 
  8490  0216                     	;# 
  8491  0217                     	;# 
  8492  0217                     	;# 
  8493  0218                     	;# 
  8494  0219                     	;# 
  8495  021A                     	;# 
  8496  021A                     	;# 
  8497  021B                     	;# 
  8498  021B                     	;# 
  8499  021C                     	;# 
  8500  021C                     	;# 
  8501  021D                     	;# 
  8502  021D                     	;# 
  8503  021E                     	;# 
  8504  021F                     	;# 
  8505  028C                     	;# 
  8506  028C                     	;# 
  8507  028D                     	;# 
  8508  028D                     	;# 
  8509  028E                     	;# 
  8510  028F                     	;# 
  8511  0290                     	;# 
  8512  0291                     	;# 
  8513  0292                     	;# 
  8514  0292                     	;# 
  8515  0293                     	;# 
  8516  0293                     	;# 
  8517  0294                     	;# 
  8518  0295                     	;# 
  8519  0296                     	;# 
  8520  0297                     	;# 
  8521  0298                     	;# 
  8522  0298                     	;# 
  8523  0299                     	;# 
  8524  0299                     	;# 
  8525  029A                     	;# 
  8526  029B                     	;# 
  8527  029C                     	;# 
  8528  029D                     	;# 
  8529  029F                     	;# 
  8530  030C                     	;# 
  8531  030C                     	;# 
  8532  030D                     	;# 
  8533  030E                     	;# 
  8534  030F                     	;# 
  8535  0310                     	;# 
  8536  0310                     	;# 
  8537  0311                     	;# 
  8538  0312                     	;# 
  8539  0313                     	;# 
  8540  0314                     	;# 
  8541  0314                     	;# 
  8542  0315                     	;# 
  8543  0316                     	;# 
  8544  0317                     	;# 
  8545  0318                     	;# 
  8546  0318                     	;# 
  8547  0319                     	;# 
  8548  031A                     	;# 
  8549  031B                     	;# 
  8550  038C                     	;# 
  8551  038C                     	;# 
  8552  038D                     	;# 
  8553  038E                     	;# 
  8554  0390                     	;# 
  8555  0390                     	;# 
  8556  0391                     	;# 
  8557  0392                     	;# 
  8558  048C                     	;# 
  8559  048C                     	;# 
  8560  048D                     	;# 
  8561  048E                     	;# 
  8562  048F                     	;# 
  8563  048F                     	;# 
  8564  0490                     	;# 
  8565  0491                     	;# 
  8566  0492                     	;# 
  8567  0492                     	;# 
  8568  0493                     	;# 
  8569  0494                     	;# 
  8570  0495                     	;# 
  8571  0495                     	;# 
  8572  0496                     	;# 
  8573  0497                     	;# 
  8574  0498                     	;# 
  8575  0499                     	;# 
  8576  049A                     	;# 
  8577  049B                     	;# 
  8578  049C                     	;# 
  8579  049D                     	;# 
  8580  058C                     	;# 
  8581  058C                     	;# 
  8582  058D                     	;# 
  8583  058E                     	;# 
  8584  058F                     	;# 
  8585  058F                     	;# 
  8586  0590                     	;# 
  8587  0591                     	;# 
  8588  0592                     	;# 
  8589  0593                     	;# 
  8590  059C                     	;# 
  8591  059C                     	;# 
  8592  059D                     	;# 
  8593  059D                     	;# 
  8594  059E                     	;# 
  8595  059F                     	;# 
  8596  060C                     	;# 
  8597  060C                     	;# 
  8598  060D                     	;# 
  8599  060D                     	;# 
  8600  060E                     	;# 
  8601  060F                     	;# 
  8602  0610                     	;# 
  8603  0611                     	;# 
  8604  0612                     	;# 
  8605  0613                     	;# 
  8606  0614                     	;# 
  8607  0616                     	;# 
  8608  0616                     	;# 
  8609  0617                     	;# 
  8610  0617                     	;# 
  8611  0618                     	;# 
  8612  0619                     	;# 
  8613  061A                     	;# 
  8614  061B                     	;# 
  8615  061C                     	;# 
  8616  061D                     	;# 
  8617  061E                     	;# 
  8618  070C                     	;# 
  8619  070D                     	;# 
  8620  070E                     	;# 
  8621  070F                     	;# 
  8622  0710                     	;# 
  8623  0711                     	;# 
  8624  0712                     	;# 
  8625  0713                     	;# 
  8626  0714                     	;# 
  8627  0716                     	;# 
  8628  0717                     	;# 
  8629  0718                     	;# 
  8630  0719                     	;# 
  8631  071A                     	;# 
  8632  071B                     	;# 
  8633  071C                     	;# 
  8634  071D                     	;# 
  8635  071E                     	;# 
  8636  0796                     	;# 
  8637  0797                     	;# 
  8638  0798                     	;# 
  8639  0799                     	;# 
  8640  079A                     	;# 
  8641  079B                     	;# 
  8642  079C                     	;# 
  8643  079D                     	;# 
  8644  080C                     	;# 
  8645  080D                     	;# 
  8646  080E                     	;# 
  8647  080F                     	;# 
  8648  0810                     	;# 
  8649  0811                     	;# 
  8650  0812                     	;# 
  8651  0813                     	;# 
  8652  0814                     	;# 
  8653  081A                     	;# 
  8654  081A                     	;# 
  8655  081B                     	;# 
  8656  081C                     	;# 
  8657  081C                     	;# 
  8658  081D                     	;# 
  8659  081E                     	;# 
  8660  081F                     	;# 
  8661  088C                     	;# 
  8662  088D                     	;# 
  8663  088E                     	;# 
  8664  088F                     	;# 
  8665  0890                     	;# 
  8666  0891                     	;# 
  8667  0892                     	;# 
  8668  0893                     	;# 
  8669  0895                     	;# 
  8670  0896                     	;# 
  8671  0897                     	;# 
  8672  0898                     	;# 
  8673  0899                     	;# 
  8674  089A                     	;# 
  8675  089B                     	;# 
  8676  090C                     	;# 
  8677  090E                     	;# 
  8678  090F                     	;# 
  8679  091F                     	;# 
  8680  098F                     	;# 
  8681  098F                     	;# 
  8682  0990                     	;# 
  8683  0991                     	;# 
  8684  0992                     	;# 
  8685  0993                     	;# 
  8686  0994                     	;# 
  8687  0995                     	;# 
  8688  0996                     	;# 
  8689  0997                     	;# 
  8690  1E0F                     	;# 
  8691  1E10                     	;# 
  8692  1E11                     	;# 
  8693  1E12                     	;# 
  8694  1E13                     	;# 
  8695  1E14                     	;# 
  8696  1E15                     	;# 
  8697  1E16                     	;# 
  8698  1E17                     	;# 
  8699  1E18                     	;# 
  8700  1E19                     	;# 
  8701  1E1A                     	;# 
  8702  1E1B                     	;# 
  8703  1E1C                     	;# 
  8704  1E1D                     	;# 
  8705  1E1E                     	;# 
  8706  1E1F                     	;# 
  8707  1E20                     	;# 
  8708  1E21                     	;# 
  8709  1E22                     	;# 
  8710  1E23                     	;# 
  8711  1E24                     	;# 
  8712  1E25                     	;# 
  8713  1E26                     	;# 
  8714  1E27                     	;# 
  8715  1E28                     	;# 
  8716  1E29                     	;# 
  8717  1E2A                     	;# 
  8718  1E2B                     	;# 
  8719  1E2C                     	;# 
  8720  1E2D                     	;# 
  8721  1E2E                     	;# 
  8722  1E2F                     	;# 
  8723  1E30                     	;# 
  8724  1E31                     	;# 
  8725  1E32                     	;# 
  8726  1E33                     	;# 
  8727  1E34                     	;# 
  8728  1E35                     	;# 
  8729  1E36                     	;# 
  8730  1E37                     	;# 
  8731  1E8F                     	;# 
  8732  1E90                     	;# 
  8733  1E91                     	;# 
  8734  1E92                     	;# 
  8735  1E93                     	;# 
  8736  1E94                     	;# 
  8737  1E95                     	;# 
  8738  1E96                     	;# 
  8739  1E97                     	;# 
  8740  1E9C                     	;# 
  8741  1E9D                     	;# 
  8742  1E9E                     	;# 
  8743  1EA1                     	;# 
  8744  1EA2                     	;# 
  8745  1EA3                     	;# 
  8746  1EA4                     	;# 
  8747  1EA9                     	;# 
  8748  1EAA                     	;# 
  8749  1EB1                     	;# 
  8750  1EB2                     	;# 
  8751  1EB8                     	;# 
  8752  1EB9                     	;# 
  8753  1EBA                     	;# 
  8754  1EBB                     	;# 
  8755  1EBC                     	;# 
  8756  1EBD                     	;# 
  8757  1EBE                     	;# 
  8758  1EC3                     	;# 
  8759  1EC5                     	;# 
  8760  1EC6                     	;# 
  8761  1EC7                     	;# 
  8762  1EC8                     	;# 
  8763  1EC9                     	;# 
  8764  1ECA                     	;# 
  8765  1ECB                     	;# 
  8766  1ECB                     	;# 
  8767  1ECB                     	;# 
  8768  1ECC                     	;# 
  8769  1ECC                     	;# 
  8770  1ECC                     	;# 
  8771  1F10                     	;# 
  8772  1F11                     	;# 
  8773  1F12                     	;# 
  8774  1F14                     	;# 
  8775  1F15                     	;# 
  8776  1F1C                     	;# 
  8777  1F1D                     	;# 
  8778  1F1E                     	;# 
  8779  1F1F                     	;# 
  8780  1F20                     	;# 
  8781  1F21                     	;# 
  8782  1F22                     	;# 
  8783  1F23                     	;# 
  8784  1F24                     	;# 
  8785  1F25                     	;# 
  8786  1F26                     	;# 
  8787  1F27                     	;# 
  8788  1F38                     	;# 
  8789  1F39                     	;# 
  8790  1F3A                     	;# 
  8791  1F3B                     	;# 
  8792  1F3C                     	;# 
  8793  1F3D                     	;# 
  8794  1F3E                     	;# 
  8795  1F3F                     	;# 
  8796  1F43                     	;# 
  8797  1F44                     	;# 
  8798  1F45                     	;# 
  8799  1F46                     	;# 
  8800  1F47                     	;# 
  8801  1F48                     	;# 
  8802  1F49                     	;# 
  8803  1F4A                     	;# 
  8804  1F4E                     	;# 
  8805  1F4F                     	;# 
  8806  1F50                     	;# 
  8807  1F51                     	;# 
  8808  1F52                     	;# 
  8809  1F53                     	;# 
  8810  1F54                     	;# 
  8811  1F55                     	;# 
  8812  1FE4                     	;# 
  8813  1FE5                     	;# 
  8814  1FE6                     	;# 
  8815  1FE7                     	;# 
  8816  1FE8                     	;# 
  8817  1FE8                     	;# 
  8818  1FE9                     	;# 
  8819  1FEA                     	;# 
  8820  1FEB                     	;# 
  8821  1FED                     	;# 
  8822  1FEE                     	;# 
  8823  1FEF                     	;# 
  8824  0000                     	;# 
  8825  0001                     	;# 
  8826  0002                     	;# 
  8827  0003                     	;# 
  8828  0004                     	;# 
  8829  0005                     	;# 
  8830  0006                     	;# 
  8831  0007                     	;# 
  8832  0008                     	;# 
  8833  0009                     	;# 
  8834  000A                     	;# 
  8835  000B                     	;# 
  8836  000C                     	;# 
  8837  000D                     	;# 
  8838  000E                     	;# 
  8839  0012                     	;# 
  8840  0013                     	;# 
  8841  0014                     	;# 
  8842  0018                     	;# 
  8843  0019                     	;# 
  8844  001A                     	;# 
  8845  008C                     	;# 
  8846  008C                     	;# 
  8847  008D                     	;# 
  8848  008E                     	;# 
  8849  008E                     	;# 
  8850  008F                     	;# 
  8851  0090                     	;# 
  8852  0090                     	;# 
  8853  0091                     	;# 
  8854  0092                     	;# 
  8855  0092                     	;# 
  8856  0093                     	;# 
  8857  0094                     	;# 
  8858  0094                     	;# 
  8859  0095                     	;# 
  8860  0096                     	;# 
  8861  0096                     	;# 
  8862  0097                     	;# 
  8863  0098                     	;# 
  8864  0099                     	;# 
  8865  009A                     	;# 
  8866  009B                     	;# 
  8867  009B                     	;# 
  8868  009C                     	;# 
  8869  009D                     	;# 
  8870  009D                     	;# 
  8871  009E                     	;# 
  8872  009F                     	;# 
  8873  010C                     	;# 
  8874  010C                     	;# 
  8875  010D                     	;# 
  8876  010E                     	;# 
  8877  010F                     	;# 
  8878  010F                     	;# 
  8879  0110                     	;# 
  8880  0111                     	;# 
  8881  0112                     	;# 
  8882  0113                     	;# 
  8883  0114                     	;# 
  8884  0115                     	;# 
  8885  0116                     	;# 
  8886  0117                     	;# 
  8887  0118                     	;# 
  8888  0119                     	;# 
  8889  0119                     	;# 
  8890  0119                     	;# 
  8891  011A                     	;# 
  8892  011A                     	;# 
  8893  011A                     	;# 
  8894  011B                     	;# 
  8895  011B                     	;# 
  8896  011B                     	;# 
  8897  011B                     	;# 
  8898  011B                     	;# 
  8899  011C                     	;# 
  8900  011C                     	;# 
  8901  011C                     	;# 
  8902  011D                     	;# 
  8903  011D                     	;# 
  8904  011D                     	;# 
  8905  011E                     	;# 
  8906  011E                     	;# 
  8907  011E                     	;# 
  8908  011F                     	;# 
  8909  011F                     	;# 
  8910  011F                     	;# 
  8911  011F                     	;# 
  8912  011F                     	;# 
  8913  018C                     	;# 
  8914  018D                     	;# 
  8915  018E                     	;# 
  8916  018F                     	;# 
  8917  0190                     	;# 
  8918  0191                     	;# 
  8919  0192                     	;# 
  8920  0196                     	;# 
  8921  0197                     	;# 
  8922  0198                     	;# 
  8923  0199                     	;# 
  8924  019A                     	;# 
  8925  019B                     	;# 
  8926  019C                     	;# 
  8927  020C                     	;# 
  8928  020D                     	;# 
  8929  020E                     	;# 
  8930  020E                     	;# 
  8931  020F                     	;# 
  8932  020F                     	;# 
  8933  0210                     	;# 
  8934  0210                     	;# 
  8935  0211                     	;# 
  8936  0211                     	;# 
  8937  0212                     	;# 
  8938  0213                     	;# 
  8939  0214                     	;# 
  8940  0214                     	;# 
  8941  0215                     	;# 
  8942  0215                     	;# 
  8943  0216                     	;# 
  8944  0216                     	;# 
  8945  0217                     	;# 
  8946  0217                     	;# 
  8947  0218                     	;# 
  8948  0219                     	;# 
  8949  021A                     	;# 
  8950  021A                     	;# 
  8951  021B                     	;# 
  8952  021B                     	;# 
  8953  021C                     	;# 
  8954  021C                     	;# 
  8955  021D                     	;# 
  8956  021D                     	;# 
  8957  021E                     	;# 
  8958  021F                     	;# 
  8959  028C                     	;# 
  8960  028C                     	;# 
  8961  028D                     	;# 
  8962  028D                     	;# 
  8963  028E                     	;# 
  8964  028F                     	;# 
  8965  0290                     	;# 
  8966  0291                     	;# 
  8967  0292                     	;# 
  8968  0292                     	;# 
  8969  0293                     	;# 
  8970  0293                     	;# 
  8971  0294                     	;# 
  8972  0295                     	;# 
  8973  0296                     	;# 
  8974  0297                     	;# 
  8975  0298                     	;# 
  8976  0298                     	;# 
  8977  0299                     	;# 
  8978  0299                     	;# 
  8979  029A                     	;# 
  8980  029B                     	;# 
  8981  029C                     	;# 
  8982  029D                     	;# 
  8983  029F                     	;# 
  8984  030C                     	;# 
  8985  030C                     	;# 
  8986  030D                     	;# 
  8987  030E                     	;# 
  8988  030F                     	;# 
  8989  0310                     	;# 
  8990  0310                     	;# 
  8991  0311                     	;# 
  8992  0312                     	;# 
  8993  0313                     	;# 
  8994  0314                     	;# 
  8995  0314                     	;# 
  8996  0315                     	;# 
  8997  0316                     	;# 
  8998  0317                     	;# 
  8999  0318                     	;# 
  9000  0318                     	;# 
  9001  0319                     	;# 
  9002  031A                     	;# 
  9003  031B                     	;# 
  9004  038C                     	;# 
  9005  038C                     	;# 
  9006  038D                     	;# 
  9007  038E                     	;# 
  9008  0390                     	;# 
  9009  0390                     	;# 
  9010  0391                     	;# 
  9011  0392                     	;# 
  9012  048C                     	;# 
  9013  048C                     	;# 
  9014  048D                     	;# 
  9015  048E                     	;# 
  9016  048F                     	;# 
  9017  048F                     	;# 
  9018  0490                     	;# 
  9019  0491                     	;# 
  9020  0492                     	;# 
  9021  0492                     	;# 
  9022  0493                     	;# 
  9023  0494                     	;# 
  9024  0495                     	;# 
  9025  0495                     	;# 
  9026  0496                     	;# 
  9027  0497                     	;# 
  9028  0498                     	;# 
  9029  0499                     	;# 
  9030  049A                     	;# 
  9031  049B                     	;# 
  9032  049C                     	;# 
  9033  049D                     	;# 
  9034  058C                     	;# 
  9035  058C                     	;# 
  9036  058D                     	;# 
  9037  058E                     	;# 
  9038  058F                     	;# 
  9039  058F                     	;# 
  9040  0590                     	;# 
  9041  0591                     	;# 
  9042  0592                     	;# 
  9043  0593                     	;# 
  9044  059C                     	;# 
  9045  059C                     	;# 
  9046  059D                     	;# 
  9047  059D                     	;# 
  9048  059E                     	;# 
  9049  059F                     	;# 
  9050  060C                     	;# 
  9051  060C                     	;# 
  9052  060D                     	;# 
  9053  060D                     	;# 
  9054  060E                     	;# 
  9055  060F                     	;# 
  9056  0610                     	;# 
  9057  0611                     	;# 
  9058  0612                     	;# 
  9059  0613                     	;# 
  9060  0614                     	;# 
  9061  0616                     	;# 
  9062  0616                     	;# 
  9063  0617                     	;# 
  9064  0617                     	;# 
  9065  0618                     	;# 
  9066  0619                     	;# 
  9067  061A                     	;# 
  9068  061B                     	;# 
  9069  061C                     	;# 
  9070  061D                     	;# 
  9071  061E                     	;# 
  9072  070C                     	;# 
  9073  070D                     	;# 
  9074  070E                     	;# 
  9075  070F                     	;# 
  9076  0710                     	;# 
  9077  0711                     	;# 
  9078  0712                     	;# 
  9079  0713                     	;# 
  9080  0714                     	;# 
  9081  0716                     	;# 
  9082  0717                     	;# 
  9083  0718                     	;# 
  9084  0719                     	;# 
  9085  071A                     	;# 
  9086  071B                     	;# 
  9087  071C                     	;# 
  9088  071D                     	;# 
  9089  071E                     	;# 
  9090  0796                     	;# 
  9091  0797                     	;# 
  9092  0798                     	;# 
  9093  0799                     	;# 
  9094  079A                     	;# 
  9095  079B                     	;# 
  9096  079C                     	;# 
  9097  079D                     	;# 
  9098  080C                     	;# 
  9099  080D                     	;# 
  9100  080E                     	;# 
  9101  080F                     	;# 
  9102  0810                     	;# 
  9103  0811                     	;# 
  9104  0812                     	;# 
  9105  0813                     	;# 
  9106  0814                     	;# 
  9107  081A                     	;# 
  9108  081A                     	;# 
  9109  081B                     	;# 
  9110  081C                     	;# 
  9111  081C                     	;# 
  9112  081D                     	;# 
  9113  081E                     	;# 
  9114  081F                     	;# 
  9115  088C                     	;# 
  9116  088D                     	;# 
  9117  088E                     	;# 
  9118  088F                     	;# 
  9119  0890                     	;# 
  9120  0891                     	;# 
  9121  0892                     	;# 
  9122  0893                     	;# 
  9123  0895                     	;# 
  9124  0896                     	;# 
  9125  0897                     	;# 
  9126  0898                     	;# 
  9127  0899                     	;# 
  9128  089A                     	;# 
  9129  089B                     	;# 
  9130  090C                     	;# 
  9131  090E                     	;# 
  9132  090F                     	;# 
  9133  091F                     	;# 
  9134  098F                     	;# 
  9135  098F                     	;# 
  9136  0990                     	;# 
  9137  0991                     	;# 
  9138  0992                     	;# 
  9139  0993                     	;# 
  9140  0994                     	;# 
  9141  0995                     	;# 
  9142  0996                     	;# 
  9143  0997                     	;# 
  9144  1E0F                     	;# 
  9145  1E10                     	;# 
  9146  1E11                     	;# 
  9147  1E12                     	;# 
  9148  1E13                     	;# 
  9149  1E14                     	;# 
  9150  1E15                     	;# 
  9151  1E16                     	;# 
  9152  1E17                     	;# 
  9153  1E18                     	;# 
  9154  1E19                     	;# 
  9155  1E1A                     	;# 
  9156  1E1B                     	;# 
  9157  1E1C                     	;# 
  9158  1E1D                     	;# 
  9159  1E1E                     	;# 
  9160  1E1F                     	;# 
  9161  1E20                     	;# 
  9162  1E21                     	;# 
  9163  1E22                     	;# 
  9164  1E23                     	;# 
  9165  1E24                     	;# 
  9166  1E25                     	;# 
  9167  1E26                     	;# 
  9168  1E27                     	;# 
  9169  1E28                     	;# 
  9170  1E29                     	;# 
  9171  1E2A                     	;# 
  9172  1E2B                     	;# 
  9173  1E2C                     	;# 
  9174  1E2D                     	;# 
  9175  1E2E                     	;# 
  9176  1E2F                     	;# 
  9177  1E30                     	;# 
  9178  1E31                     	;# 
  9179  1E32                     	;# 
  9180  1E33                     	;# 
  9181  1E34                     	;# 
  9182  1E35                     	;# 
  9183  1E36                     	;# 
  9184  1E37                     	;# 
  9185  1E8F                     	;# 
  9186  1E90                     	;# 
  9187  1E91                     	;# 
  9188  1E92                     	;# 
  9189  1E93                     	;# 
  9190  1E94                     	;# 
  9191  1E95                     	;# 
  9192  1E96                     	;# 
  9193  1E97                     	;# 
  9194  1E9C                     	;# 
  9195  1E9D                     	;# 
  9196  1E9E                     	;# 
  9197  1EA1                     	;# 
  9198  1EA2                     	;# 
  9199  1EA3                     	;# 
  9200  1EA4                     	;# 
  9201  1EA9                     	;# 
  9202  1EAA                     	;# 
  9203  1EB1                     	;# 
  9204  1EB2                     	;# 
  9205  1EB8                     	;# 
  9206  1EB9                     	;# 
  9207  1EBA                     	;# 
  9208  1EBB                     	;# 
  9209  1EBC                     	;# 
  9210  1EBD                     	;# 
  9211  1EBE                     	;# 
  9212  1EC3                     	;# 
  9213  1EC5                     	;# 
  9214  1EC6                     	;# 
  9215  1EC7                     	;# 
  9216  1EC8                     	;# 
  9217  1EC9                     	;# 
  9218  1ECA                     	;# 
  9219  1ECB                     	;# 
  9220  1ECB                     	;# 
  9221  1ECB                     	;# 
  9222  1ECC                     	;# 
  9223  1ECC                     	;# 
  9224  1ECC                     	;# 
  9225  1F10                     	;# 
  9226  1F11                     	;# 
  9227  1F12                     	;# 
  9228  1F14                     	;# 
  9229  1F15                     	;# 
  9230  1F1C                     	;# 
  9231  1F1D                     	;# 
  9232  1F1E                     	;# 
  9233  1F1F                     	;# 
  9234  1F20                     	;# 
  9235  1F21                     	;# 
  9236  1F22                     	;# 
  9237  1F23                     	;# 
  9238  1F24                     	;# 
  9239  1F25                     	;# 
  9240  1F26                     	;# 
  9241  1F27                     	;# 
  9242  1F38                     	;# 
  9243  1F39                     	;# 
  9244  1F3A                     	;# 
  9245  1F3B                     	;# 
  9246  1F3C                     	;# 
  9247  1F3D                     	;# 
  9248  1F3E                     	;# 
  9249  1F3F                     	;# 
  9250  1F43                     	;# 
  9251  1F44                     	;# 
  9252  1F45                     	;# 
  9253  1F46                     	;# 
  9254  1F47                     	;# 
  9255  1F48                     	;# 
  9256  1F49                     	;# 
  9257  1F4A                     	;# 
  9258  1F4E                     	;# 
  9259  1F4F                     	;# 
  9260  1F50                     	;# 
  9261  1F51                     	;# 
  9262  1F52                     	;# 
  9263  1F53                     	;# 
  9264  1F54                     	;# 
  9265  1F55                     	;# 
  9266  1FE4                     	;# 
  9267  1FE5                     	;# 
  9268  1FE6                     	;# 
  9269  1FE7                     	;# 
  9270  1FE8                     	;# 
  9271  1FE8                     	;# 
  9272  1FE9                     	;# 
  9273  1FEA                     	;# 
  9274  1FEB                     	;# 
  9275  1FED                     	;# 
  9276  1FEE                     	;# 
  9277  1FEF                     	;# 
  9278  0000                     	;# 
  9279  0001                     	;# 
  9280  0002                     	;# 
  9281  0003                     	;# 
  9282  0004                     	;# 
  9283  0005                     	;# 
  9284  0006                     	;# 
  9285  0007                     	;# 
  9286  0008                     	;# 
  9287  0009                     	;# 
  9288  000A                     	;# 
  9289  000B                     	;# 
  9290  000C                     	;# 
  9291  000D                     	;# 
  9292  000E                     	;# 
  9293  0012                     	;# 
  9294  0013                     	;# 
  9295  0014                     	;# 
  9296  0018                     	;# 
  9297  0019                     	;# 
  9298  001A                     	;# 
  9299  008C                     	;# 
  9300  008C                     	;# 
  9301  008D                     	;# 
  9302  008E                     	;# 
  9303  008E                     	;# 
  9304  008F                     	;# 
  9305  0090                     	;# 
  9306  0090                     	;# 
  9307  0091                     	;# 
  9308  0092                     	;# 
  9309  0092                     	;# 
  9310  0093                     	;# 
  9311  0094                     	;# 
  9312  0094                     	;# 
  9313  0095                     	;# 
  9314  0096                     	;# 
  9315  0096                     	;# 
  9316  0097                     	;# 
  9317  0098                     	;# 
  9318  0099                     	;# 
  9319  009A                     	;# 
  9320  009B                     	;# 
  9321  009B                     	;# 
  9322  009C                     	;# 
  9323  009D                     	;# 
  9324  009D                     	;# 
  9325  009E                     	;# 
  9326  009F                     	;# 
  9327  010C                     	;# 
  9328  010C                     	;# 
  9329  010D                     	;# 
  9330  010E                     	;# 
  9331  010F                     	;# 
  9332  010F                     	;# 
  9333  0110                     	;# 
  9334  0111                     	;# 
  9335  0112                     	;# 
  9336  0113                     	;# 
  9337  0114                     	;# 
  9338  0115                     	;# 
  9339  0116                     	;# 
  9340  0117                     	;# 
  9341  0118                     	;# 
  9342  0119                     	;# 
  9343  0119                     	;# 
  9344  0119                     	;# 
  9345  011A                     	;# 
  9346  011A                     	;# 
  9347  011A                     	;# 
  9348  011B                     	;# 
  9349  011B                     	;# 
  9350  011B                     	;# 
  9351  011B                     	;# 
  9352  011B                     	;# 
  9353  011C                     	;# 
  9354  011C                     	;# 
  9355  011C                     	;# 
  9356  011D                     	;# 
  9357  011D                     	;# 
  9358  011D                     	;# 
  9359  011E                     	;# 
  9360  011E                     	;# 
  9361  011E                     	;# 
  9362  011F                     	;# 
  9363  011F                     	;# 
  9364  011F                     	;# 
  9365  011F                     	;# 
  9366  011F                     	;# 
  9367  018C                     	;# 
  9368  018D                     	;# 
  9369  018E                     	;# 
  9370  018F                     	;# 
  9371  0190                     	;# 
  9372  0191                     	;# 
  9373  0192                     	;# 
  9374  0196                     	;# 
  9375  0197                     	;# 
  9376  0198                     	;# 
  9377  0199                     	;# 
  9378  019A                     	;# 
  9379  019B                     	;# 
  9380  019C                     	;# 
  9381  020C                     	;# 
  9382  020D                     	;# 
  9383  020E                     	;# 
  9384  020E                     	;# 
  9385  020F                     	;# 
  9386  020F                     	;# 
  9387  0210                     	;# 
  9388  0210                     	;# 
  9389  0211                     	;# 
  9390  0211                     	;# 
  9391  0212                     	;# 
  9392  0213                     	;# 
  9393  0214                     	;# 
  9394  0214                     	;# 
  9395  0215                     	;# 
  9396  0215                     	;# 
  9397  0216                     	;# 
  9398  0216                     	;# 
  9399  0217                     	;# 
  9400  0217                     	;# 
  9401  0218                     	;# 
  9402  0219                     	;# 
  9403  021A                     	;# 
  9404  021A                     	;# 
  9405  021B                     	;# 
  9406  021B                     	;# 
  9407  021C                     	;# 
  9408  021C                     	;# 
  9409  021D                     	;# 
  9410  021D                     	;# 
  9411  021E                     	;# 
  9412  021F                     	;# 
  9413  028C                     	;# 
  9414  028C                     	;# 
  9415  028D                     	;# 
  9416  028D                     	;# 
  9417  028E                     	;# 
  9418  028F                     	;# 
  9419  0290                     	;# 
  9420  0291                     	;# 
  9421  0292                     	;# 
  9422  0292                     	;# 
  9423  0293                     	;# 
  9424  0293                     	;# 
  9425  0294                     	;# 
  9426  0295                     	;# 
  9427  0296                     	;# 
  9428  0297                     	;# 
  9429  0298                     	;# 
  9430  0298                     	;# 
  9431  0299                     	;# 
  9432  0299                     	;# 
  9433  029A                     	;# 
  9434  029B                     	;# 
  9435  029C                     	;# 
  9436  029D                     	;# 
  9437  029F                     	;# 
  9438  030C                     	;# 
  9439  030C                     	;# 
  9440  030D                     	;# 
  9441  030E                     	;# 
  9442  030F                     	;# 
  9443  0310                     	;# 
  9444  0310                     	;# 
  9445  0311                     	;# 
  9446  0312                     	;# 
  9447  0313                     	;# 
  9448  0314                     	;# 
  9449  0314                     	;# 
  9450  0315                     	;# 
  9451  0316                     	;# 
  9452  0317                     	;# 
  9453  0318                     	;# 
  9454  0318                     	;# 
  9455  0319                     	;# 
  9456  031A                     	;# 
  9457  031B                     	;# 
  9458  038C                     	;# 
  9459  038C                     	;# 
  9460  038D                     	;# 
  9461  038E                     	;# 
  9462  0390                     	;# 
  9463  0390                     	;# 
  9464  0391                     	;# 
  9465  0392                     	;# 
  9466  048C                     	;# 
  9467  048C                     	;# 
  9468  048D                     	;# 
  9469  048E                     	;# 
  9470  048F                     	;# 
  9471  048F                     	;# 
  9472  0490                     	;# 
  9473  0491                     	;# 
  9474  0492                     	;# 
  9475  0492                     	;# 
  9476  0493                     	;# 
  9477  0494                     	;# 
  9478  0495                     	;# 
  9479  0495                     	;# 
  9480  0496                     	;# 
  9481  0497                     	;# 
  9482  0498                     	;# 
  9483  0499                     	;# 
  9484  049A                     	;# 
  9485  049B                     	;# 
  9486  049C                     	;# 
  9487  049D                     	;# 
  9488  058C                     	;# 
  9489  058C                     	;# 
  9490  058D                     	;# 
  9491  058E                     	;# 
  9492  058F                     	;# 
  9493  058F                     	;# 
  9494  0590                     	;# 
  9495  0591                     	;# 
  9496  0592                     	;# 
  9497  0593                     	;# 
  9498  059C                     	;# 
  9499  059C                     	;# 
  9500  059D                     	;# 
  9501  059D                     	;# 
  9502  059E                     	;# 
  9503  059F                     	;# 
  9504  060C                     	;# 
  9505  060C                     	;# 
  9506  060D                     	;# 
  9507  060D                     	;# 
  9508  060E                     	;# 
  9509  060F                     	;# 
  9510  0610                     	;# 
  9511  0611                     	;# 
  9512  0612                     	;# 
  9513  0613                     	;# 
  9514  0614                     	;# 
  9515  0616                     	;# 
  9516  0616                     	;# 
  9517  0617                     	;# 
  9518  0617                     	;# 
  9519  0618                     	;# 
  9520  0619                     	;# 
  9521  061A                     	;# 
  9522  061B                     	;# 
  9523  061C                     	;# 
  9524  061D                     	;# 
  9525  061E                     	;# 
  9526  070C                     	;# 
  9527  070D                     	;# 
  9528  070E                     	;# 
  9529  070F                     	;# 
  9530  0710                     	;# 
  9531  0711                     	;# 
  9532  0712                     	;# 
  9533  0713                     	;# 
  9534  0714                     	;# 
  9535  0716                     	;# 
  9536  0717                     	;# 
  9537  0718                     	;# 
  9538  0719                     	;# 
  9539  071A                     	;# 
  9540  071B                     	;# 
  9541  071C                     	;# 
  9542  071D                     	;# 
  9543  071E                     	;# 
  9544  0796                     	;# 
  9545  0797                     	;# 
  9546  0798                     	;# 
  9547  0799                     	;# 
  9548  079A                     	;# 
  9549  079B                     	;# 
  9550  079C                     	;# 
  9551  079D                     	;# 
  9552  080C                     	;# 
  9553  080D                     	;# 
  9554  080E                     	;# 
  9555  080F                     	;# 
  9556  0810                     	;# 
  9557  0811                     	;# 
  9558  0812                     	;# 
  9559  0813                     	;# 
  9560  0814                     	;# 
  9561  081A                     	;# 
  9562  081A                     	;# 
  9563  081B                     	;# 
  9564  081C                     	;# 
  9565  081C                     	;# 
  9566  081D                     	;# 
  9567  081E                     	;# 
  9568  081F                     	;# 
  9569  088C                     	;# 
  9570  088D                     	;# 
  9571  088E                     	;# 
  9572  088F                     	;# 
  9573  0890                     	;# 
  9574  0891                     	;# 
  9575  0892                     	;# 
  9576  0893                     	;# 
  9577  0895                     	;# 
  9578  0896                     	;# 
  9579  0897                     	;# 
  9580  0898                     	;# 
  9581  0899                     	;# 
  9582  089A                     	;# 
  9583  089B                     	;# 
  9584  090C                     	;# 
  9585  090E                     	;# 
  9586  090F                     	;# 
  9587  091F                     	;# 
  9588  098F                     	;# 
  9589  098F                     	;# 
  9590  0990                     	;# 
  9591  0991                     	;# 
  9592  0992                     	;# 
  9593  0993                     	;# 
  9594  0994                     	;# 
  9595  0995                     	;# 
  9596  0996                     	;# 
  9597  0997                     	;# 
  9598  1E0F                     	;# 
  9599  1E10                     	;# 
  9600  1E11                     	;# 
  9601  1E12                     	;# 
  9602  1E13                     	;# 
  9603  1E14                     	;# 
  9604  1E15                     	;# 
  9605  1E16                     	;# 
  9606  1E17                     	;# 
  9607  1E18                     	;# 
  9608  1E19                     	;# 
  9609  1E1A                     	;# 
  9610  1E1B                     	;# 
  9611  1E1C                     	;# 
  9612  1E1D                     	;# 
  9613  1E1E                     	;# 
  9614  1E1F                     	;# 
  9615  1E20                     	;# 
  9616  1E21                     	;# 
  9617  1E22                     	;# 
  9618  1E23                     	;# 
  9619  1E24                     	;# 
  9620  1E25                     	;# 
  9621  1E26                     	;# 
  9622  1E27                     	;# 
  9623  1E28                     	;# 
  9624  1E29                     	;# 
  9625  1E2A                     	;# 
  9626  1E2B                     	;# 
  9627  1E2C                     	;# 
  9628  1E2D                     	;# 
  9629  1E2E                     	;# 
  9630  1E2F                     	;# 
  9631  1E30                     	;# 
  9632  1E31                     	;# 
  9633  1E32                     	;# 
  9634  1E33                     	;# 
  9635  1E34                     	;# 
  9636  1E35                     	;# 
  9637  1E36                     	;# 
  9638  1E37                     	;# 
  9639  1E8F                     	;# 
  9640  1E90                     	;# 
  9641  1E91                     	;# 
  9642  1E92                     	;# 
  9643  1E93                     	;# 
  9644  1E94                     	;# 
  9645  1E95                     	;# 
  9646  1E96                     	;# 
  9647  1E97                     	;# 
  9648  1E9C                     	;# 
  9649  1E9D                     	;# 
  9650  1E9E                     	;# 
  9651  1EA1                     	;# 
  9652  1EA2                     	;# 
  9653  1EA3                     	;# 
  9654  1EA4                     	;# 
  9655  1EA9                     	;# 
  9656  1EAA                     	;# 
  9657  1EB1                     	;# 
  9658  1EB2                     	;# 
  9659  1EB8                     	;# 
  9660  1EB9                     	;# 
  9661  1EBA                     	;# 
  9662  1EBB                     	;# 
  9663  1EBC                     	;# 
  9664  1EBD                     	;# 
  9665  1EBE                     	;# 
  9666  1EC3                     	;# 
  9667  1EC5                     	;# 
  9668  1EC6                     	;# 
  9669  1EC7                     	;# 
  9670  1EC8                     	;# 
  9671  1EC9                     	;# 
  9672  1ECA                     	;# 
  9673  1ECB                     	;# 
  9674  1ECB                     	;# 
  9675  1ECB                     	;# 
  9676  1ECC                     	;# 
  9677  1ECC                     	;# 
  9678  1ECC                     	;# 
  9679  1F10                     	;# 
  9680  1F11                     	;# 
  9681  1F12                     	;# 
  9682  1F14                     	;# 
  9683  1F15                     	;# 
  9684  1F1C                     	;# 
  9685  1F1D                     	;# 
  9686  1F1E                     	;# 
  9687  1F1F                     	;# 
  9688  1F20                     	;# 
  9689  1F21                     	;# 
  9690  1F22                     	;# 
  9691  1F23                     	;# 
  9692  1F24                     	;# 
  9693  1F25                     	;# 
  9694  1F26                     	;# 
  9695  1F27                     	;# 
  9696  1F38                     	;# 
  9697  1F39                     	;# 
  9698  1F3A                     	;# 
  9699  1F3B                     	;# 
  9700  1F3C                     	;# 
  9701  1F3D                     	;# 
  9702  1F3E                     	;# 
  9703  1F3F                     	;# 
  9704  1F43                     	;# 
  9705  1F44                     	;# 
  9706  1F45                     	;# 
  9707  1F46                     	;# 
  9708  1F47                     	;# 
  9709  1F48                     	;# 
  9710  1F49                     	;# 
  9711  1F4A                     	;# 
  9712  1F4E                     	;# 
  9713  1F4F                     	;# 
  9714  1F50                     	;# 
  9715  1F51                     	;# 
  9716  1F52                     	;# 
  9717  1F53                     	;# 
  9718  1F54                     	;# 
  9719  1F55                     	;# 
  9720  1FE4                     	;# 
  9721  1FE5                     	;# 
  9722  1FE6                     	;# 
  9723  1FE7                     	;# 
  9724  1FE8                     	;# 
  9725  1FE8                     	;# 
  9726  1FE9                     	;# 
  9727  1FEA                     	;# 
  9728  1FEB                     	;# 
  9729  1FED                     	;# 
  9730  1FEE                     	;# 
  9731  1FEF                     	;_dmxArray
  9732                           
  9733                           	psect	idataCOMMON
  9734  0002                     __pidataCOMMON:	
  9735                           
  9736                           ;initializer for _incInterval
  9737  0002  3464               	retlw	100
  9738  0003  3400               	retlw	0
  9739                           
  9740                           	psect	idataBANK1
  9741  1E6B                     __pidataBANK1:	
  9742                           
  9743                           ;initializer for _address
  9744  1E6B  3401               	retlw	1
  9745  1E6C  3400               	retlw	0
  9746                           
  9747                           ;initializer for _startup
  9748  1E6D  3401               	retlw	1
  9749                           
  9750                           ;initializer for _beatBrightness
  9751  1E6E  3401               	retlw	1
  9752                           
  9753                           	psect	idataBANK2
  9754  07FA                     __pidataBANK2:	
  9755                           
  9756                           ;initializer for _initial
  9757  07FA  3401               	retlw	1
  9758  07FB  3400               	retlw	0
  9759                           
  9760                           ;initializer for _delay
  9761  07FC  340A               	retlw	10
  9762  07FD  3400               	retlw	0
  9763                           
  9764                           ;initializer for _threshold
  9765  07FE  3490               	retlw	144
  9766  07FF  3406               	retlw	6
  9767                           
  9768                           	psect	stringtext1
  9769  1800                     __pstringtext1:	
  9770  1800                     _charTable:	
  9771  1800  3400               	retlw	0
  9772  1801  3482               	retlw	130
  9773  1802  3421               	retlw	33
  9774  1803  3400               	retlw	0
  9775  1804  3400               	retlw	0
  9776  1805  3400               	retlw	0
  9777  1806  3400               	retlw	0
  9778  1807  3402               	retlw	2
  9779  1808  3439               	retlw	57
  9780  1809  340F               	retlw	15
  9781  180A  3400               	retlw	0
  9782  180B  3400               	retlw	0
  9783  180C  3400               	retlw	0
  9784  180D  3440               	retlw	64
  9785  180E  3480               	retlw	128
  9786  180F  3400               	retlw	0
  9787  1810  343F               	retlw	63
  9788  1811  3406               	retlw	6
  9789  1812  345B               	retlw	91
  9790  1813  344F               	retlw	79
  9791  1814  3466               	retlw	102
  9792  1815  346D               	retlw	109
  9793  1816  347D               	retlw	125
  9794  1817  3407               	retlw	7
  9795  1818  347F               	retlw	127
  9796  1819  346F               	retlw	111
  9797  181A  3400               	retlw	0
  9798  181B  3400               	retlw	0
  9799  181C  3400               	retlw	0
  9800  181D  3448               	retlw	72
  9801  181E  3400               	retlw	0
  9802  181F  3453               	retlw	83
  9803  1820  3400               	retlw	0
  9804  1821  3477               	retlw	119
  9805  1822  347C               	retlw	124
  9806  1823  3439               	retlw	57
  9807  1824  345E               	retlw	94
  9808  1825  3479               	retlw	121
  9809  1826  3471               	retlw	113
  9810  1827  346F               	retlw	111
  9811  1828  3476               	retlw	118
  9812  1829  3406               	retlw	6
  9813  182A  341E               	retlw	30
  9814  182B  3400               	retlw	0
  9815  182C  3438               	retlw	56
  9816  182D  3400               	retlw	0
  9817  182E  3454               	retlw	84
  9818  182F  343F               	retlw	63
  9819  1830  3473               	retlw	115
  9820  1831  3467               	retlw	103
  9821  1832  3450               	retlw	80
  9822  1833  346D               	retlw	109
  9823  1834  3478               	retlw	120
  9824  1835  343E               	retlw	62
  9825  1836  3400               	retlw	0
  9826  1837  3400               	retlw	0
  9827  1838  3400               	retlw	0
  9828  1839  346E               	retlw	110
  9829  183A  3400               	retlw	0
  9830  183B  3439               	retlw	57
  9831  183C  3400               	retlw	0
  9832  183D  340F               	retlw	15
  9833  183E  3400               	retlw	0
  9834  183F  3408               	retlw	8
  9835  1840  3463               	retlw	99
  9836  1841  345F               	retlw	95
  9837  1842  347C               	retlw	124
  9838  1843  3458               	retlw	88
  9839  1844  345E               	retlw	94
  9840  1845  347B               	retlw	123
  9841  1846  3471               	retlw	113
  9842  1847  346F               	retlw	111
  9843  1848  3474               	retlw	116
  9844  1849  3402               	retlw	2
  9845  184A  341E               	retlw	30
  9846  184B  3400               	retlw	0
  9847  184C  3406               	retlw	6
  9848  184D  3400               	retlw	0
  9849  184E  3454               	retlw	84
  9850  184F  345C               	retlw	92
  9851  1850  3473               	retlw	115
  9852  1851  3467               	retlw	103
  9853  1852  3450               	retlw	80
  9854  1853  346D               	retlw	109
  9855  1854  3478               	retlw	120
  9856  1855  341C               	retlw	28
  9857  1856  3400               	retlw	0
  9858  1857  3400               	retlw	0
  9859  1858  3400               	retlw	0
  9860  1859  346E               	retlw	110
  9861  185A  3400               	retlw	0
  9862  185B  3439               	retlw	57
  9863  185C  3430               	retlw	48
  9864  185D  340F               	retlw	15
  9865  185E  3400               	retlw	0
  9866  185F  3400               	retlw	0
  9867  1860                     __end_of_charTable:	
  9868                           
  9869                           	psect	nvBANK2
  9870  0158                     __pnvBANK2:	
  9871  0158                     _ADCC_ADTI_InterruptHandler:	
  9872  0158                     	ds	2
  9873  015A                     _TMR0_InterruptHandler:	
  9874  015A                     	ds	2
  9875  015C                     _EUSART1_ErrorHandler:	
  9876  015C                     	ds	2
  9877  015E                     _EUSART1_OverrunErrorHandler:	
  9878  015E                     	ds	2
  9879  0160                     _EUSART1_FramingErrorHandler:	
  9880  0160                     	ds	2
  9881  0162                     _EUSART1_RxDefaultInterruptHandler:	
  9882  0162                     	ds	2
  9883  0014                     _TRISCbits	set	20
  9884  0012                     _TRISAbits	set	18
  9885  000B                     _INTCONbits	set	11
  9886  0014                     _TRISC	set	20
  9887  0013                     _TRISB	set	19
  9888  0012                     _TRISA	set	18
  9889  001A                     _LATC	set	26
  9890  0019                     _LATB	set	25
  9891  0018                     _LATA	set	24
  9892  000C                     _PORTA	set	12
  9893  000E                     _PORTC	set	14
  9894  0090                     _ADERRL	set	144
  9895  0091                     _ADERRH	set	145
  9896  009B                     _ADPREVL	set	155
  9897  009C                     _ADPREVH	set	156
  9898  0094                     _ADFLTRL	set	148
  9899  0095                     _ADFLTRH	set	149
  9900  0096                     _ADACCL	set	150
  9901  0097                     _ADACCH	set	151
  9902  0099                     _ADCNT	set	153
  9903  009D                     _ADRESL	set	157
  9904  009E                     _ADRESH	set	158
  9905  009F                     _ADPCH	set	159
  9906  009A                     _ADRPT	set	154
  9907  0098                     _ADACCU	set	152
  9908  0093                     _ADSTPTH	set	147
  9909  0092                     _ADSTPTL	set	146
  9910  008F                     _ADUTHH	set	143
  9911  008E                     _ADUTHL	set	142
  9912  008D                     _ADLTHH	set	141
  9913  008C                     _ADLTHL	set	140
  9914  0112                     _ADCON1bits	set	274
  9915  0115                     _ADSTATbits	set	277
  9916  0113                     _ADCON2bits	set	275
  9917  0114                     _ADCON3bits	set	276
  9918  0111                     _ADCON0bits	set	273
  9919  0111                     _ADCON0	set	273
  9920  0118                     _ADCLK	set	280
  9921  0117                     _ADACT	set	279
  9922  0116                     _ADREF	set	278
  9923  0115                     _ADSTAT	set	277
  9924  0114                     _ADCON3	set	276
  9925  0113                     _ADCON2	set	275
  9926  0112                     _ADCON1	set	274
  9927  0110                     _ADPREH	set	272
  9928  010F                     _ADPREL	set	271
  9929  010E                     _ADCAP	set	270
  9930  010D                     _ADACQH	set	269
  9931  010C                     _ADACQL	set	268
  9932  0119                     _RC1REG	set	281
  9933  011D                     _RC1STAbits	set	285
  9934  011A                     _TX1REG	set	282
  9935  011E                     _TX1STAbits	set	286
  9936  011C                     _SP1BRGH	set	284
  9937  011B                     _SP1BRGL	set	283
  9938  011E                     _TX1STA	set	286
  9939  011D                     _RC1STA	set	285
  9940  011F                     _BAUD1CON	set	287
  9941  018C                     _SSP1BUF	set	396
  9942  0191                     _SSP1CON2bits	set	401
  9943  0190                     _SSP1CON1bits	set	400
  9944  018D                     _SSP1ADD	set	397
  9945  0192                     _SSP1CON3	set	402
  9946  0190                     _SSP1CON1	set	400
  9947  018F                     _SSP1STAT	set	399
  9948  021E                     _CCPTMRS0bits	set	542
  9949  028D                     _PR2	set	653
  9950  028C                     _TMR2	set	652
  9951  028E                     _T2CONbits	set	654
  9952  0291                     _T2RSTbits	set	657
  9953  028F                     _T2HLTbits	set	655
  9954  028E                     _T2CON	set	654
  9955  028C                     _T2TMR	set	652
  9956  028D                     _T2PR	set	653
  9957  0291                     _T2RST	set	657
  9958  028F                     _T2HLT	set	655
  9959  0290                     _T2CLKCON	set	656
  9960  0312                     _CCP2CONbits	set	786
  9961  0310                     _CCPR2L	set	784
  9962  0311                     _CCPR2H	set	785
  9963  0312                     _CCP2CON	set	786
  9964  030E                     _CCP1CONbits	set	782
  9965  030C                     _CCPR1L	set	780
  9966  030D                     _CCPR1H	set	781
  9967  030E                     _CCP1CON	set	782
  9968  031A                     _CCP4CONbits	set	794
  9969  0318                     _CCPR4L	set	792
  9970  0319                     _CCPR4H	set	793
  9971  031A                     _CCP4CON	set	794
  9972  0316                     _CCP3CONbits	set	790
  9973  0314                     _CCPR3L	set	788
  9974  0315                     _CCPR3H	set	789
  9975  0316                     _CCP3CON	set	790
  9976  059E                     _T0CON0bits	set	1438
  9977  059E                     _T0CON0	set	1438
  9978  059C                     _TMR0L	set	1436
  9979  059D                     _TMR0H	set	1437
  9980  059F                     _T0CON1	set	1439
  9981  070D                     _PIR1bits	set	1805
  9982  0717                     _PIE1bits	set	1815
  9983  070C                     _PIR0bits	set	1804
  9984  0716                     _PIE0bits	set	1814
  9985  070F                     _PIR3bits	set	1807
  9986  0719                     _PIE3bits	set	1817
  9987  0710                     _PIR4bits	set	1808
  9988  079D                     _PMD7	set	1949
  9989  079C                     _PMD6	set	1948
  9990  079B                     _PMD5	set	1947
  9991  079A                     _PMD4	set	1946
  9992  0799                     _PMD3	set	1945
  9993  0798                     _PMD2	set	1944
  9994  0797                     _PMD1	set	1943
  9995  0796                     _PMD0	set	1942
  9996  0892                     _OSCTUNE	set	2194
  9997  0893                     _OSCFRQ	set	2195
  9998  0891                     _OSCEN	set	2193
  9999  088F                     _OSCCON3	set	2191
 10000  088D                     _OSCCON1	set	2189
 10001  1ECB                     _RX1DTPPS	set	7883
 10002  1EC6                     _SSP1DATPPS	set	7878
 10003  1EC5                     _SSP1CLKPPS	set	7877
 10004  1F4F                     _WPUCbits	set	8015
 10005  1F4E                     _ANSELCbits	set	8014
 10006  1F39                     _WPUAbits	set	7993
 10007  1F38                     _ANSELAbits	set	7992
 10008  1F27                     _RC7PPS	set	7975
 10009  1F26                     _RC6PPS	set	7974
 10010  1F25                     _RC5PPS	set	7973
 10011  1F15                     _RA5PPS	set	7957
 10012  1F24                     _RC4PPS	set	7972
 10013  1F23                     _RC3PPS	set	7971
 10014  1F14                     _RA4PPS	set	7956
 10015  1F51                     _SLRCONC	set	8017
 10016  1F46                     _SLRCONB	set	8006
 10017  1F3B                     _SLRCONA	set	7995
 10018  1F50                     _ODCONC	set	8016
 10019  1F45                     _ODCONB	set	8005
 10020  1F3A                     _ODCONA	set	7994
 10021  1F4F                     _WPUC	set	8015
 10022  1F39                     _WPUA	set	7993
 10023  1F44                     _WPUB	set	8004
 10024  1F38                     _ANSELA	set	7992
 10025  1F43                     _ANSELB	set	8003
 10026  1F4E                     _ANSELC	set	8014
 10027                           
 10028                           	psect	stringtext2
 10029  2000                     __pstringtext2:	
 10030  2000                     STR_18:	
 10031  2000  3425               	retlw	37	;'%'
 10032  2001  3463               	retlw	99	;'c'
 10033  2002  3425               	retlw	37	;'%'
 10034  2003  3463               	retlw	99	;'c'
 10035  2004  3425               	retlw	37	;'%'
 10036  2005  3463               	retlw	99	;'c'
 10037  2006  3425               	retlw	37	;'%'
 10038  2007  3463               	retlw	99	;'c'
 10039  2008  340D               	retlw	13
 10040  2009  3400               	retlw	0
 10041                           
 10042                           	psect	stringtext3
 10043  200A                     __pstringtext3:	
 10044  200A                     STR_19:	
 10045  200A  3425               	retlw	37	;'%'
 10046  200B  3463               	retlw	99	;'c'
 10047  200C  3425               	retlw	37	;'%'
 10048  200D  3463               	retlw	99	;'c'
 10049  200E  3425               	retlw	37	;'%'
 10050  200F  3463               	retlw	99	;'c'
 10051  2010  3420               	retlw	32	;' '
 10052  2011  340D               	retlw	13
 10053  2012  3400               	retlw	0
 10054                           
 10055                           	psect	stringtext4
 10056  2013                     __pstringtext4:	
 10057  2013                     STR_17:	
 10058  2013  3420               	retlw	32	;' '
 10059  2014  3425               	retlw	37	;'%'
 10060  2015  3463               	retlw	99	;'c'
 10061  2016  3425               	retlw	37	;'%'
 10062  2017  3463               	retlw	99	;'c'
 10063  2018  3425               	retlw	37	;'%'
 10064  2019  3463               	retlw	99	;'c'
 10065  201A  340D               	retlw	13
 10066  201B  3400               	retlw	0
 10067                           
 10068                           	psect	stringtext5
 10069  201C                     __pstringtext5:	
 10070  201C                     STR_14:	
 10071  201C  3448               	retlw	72	;'H'
 10072  201D  3445               	retlw	69	;'E'
 10073  201E  3459               	retlw	89	;'Y'
 10074  201F  3459               	retlw	89	;'Y'
 10075  2020  3459               	retlw	89	;'Y'
 10076  2021  3459               	retlw	89	;'Y'
 10077  2022  3459               	retlw	89	;'Y'
 10078  2023  3459               	retlw	89	;'Y'
 10079  2024  3400               	retlw	0
 10080                           
 10081                           	psect	stringtext6
 10082  2025                     __pstringtext6:	
 10083  2025                     STR_20:	
 10084  2025  3425               	retlw	37	;'%'
 10085  2026  3463               	retlw	99	;'c'
 10086  2027  3425               	retlw	37	;'%'
 10087  2028  3463               	retlw	99	;'c'
 10088  2029  3420               	retlw	32	;' '
 10089  202A  3420               	retlw	32	;' '
 10090  202B  340D               	retlw	13
 10091  202C  3400               	retlw	0
 10092                           
 10093                           	psect	stringtext7
 10094  202D                     __pstringtext7:	
 10095  202D                     STR_16:	
 10096  202D  3420               	retlw	32	;' '
 10097  202E  3420               	retlw	32	;' '
 10098  202F  3425               	retlw	37	;'%'
 10099  2030  3463               	retlw	99	;'c'
 10100  2031  3425               	retlw	37	;'%'
 10101  2032  3463               	retlw	99	;'c'
 10102  2033  340D               	retlw	13
 10103  2034  3400               	retlw	0
 10104                           
 10105                           	psect	stringtext8
 10106  2035                     __pstringtext8:	
 10107  2035                     STR_6:	
 10108  2035  3441               	retlw	65	;'A'
 10109  2036  342D               	retlw	45	;'-'
 10110  2037  3425               	retlw	37	;'%'
 10111  2038  3464               	retlw	100	;'d'
 10112  2039  3420               	retlw	32	;' '
 10113  203A  3420               	retlw	32	;' '
 10114  203B  340D               	retlw	13
 10115  203C  3400               	retlw	0
 10116                           
 10117                           	psect	stringtext9
 10118  203D                     __pstringtext9:	
 10119  203D                     STR_5:	
 10120  203D  3443               	retlw	67	;'C'
 10121  203E  342D               	retlw	45	;'-'
 10122  203F  3425               	retlw	37	;'%'
 10123  2040  3464               	retlw	100	;'d'
 10124  2041  3420               	retlw	32	;' '
 10125  2042  3420               	retlw	32	;' '
 10126  2043  340D               	retlw	13
 10127  2044  3400               	retlw	0
 10128                           
 10129                           	psect	stringtext10
 10130  2045                     __pstringtext10:	
 10131  2045                     STR_4:	
 10132  2045  3446               	retlw	70	;'F'
 10133  2046  342D               	retlw	45	;'-'
 10134  2047  3425               	retlw	37	;'%'
 10135  2048  3464               	retlw	100	;'d'
 10136  2049  3420               	retlw	32	;' '
 10137  204A  3420               	retlw	32	;' '
 10138  204B  340D               	retlw	13
 10139  204C  3400               	retlw	0
 10140                           
 10141                           	psect	stringtext11
 10142  204D                     __pstringtext11:	
 10143  204D                     STR_3:	
 10144  204D  3442               	retlw	66	;'B'
 10145  204E  342D               	retlw	45	;'-'
 10146  204F  3425               	retlw	37	;'%'
 10147  2050  3475               	retlw	117	;'u'
 10148  2051  3420               	retlw	32	;' '
 10149  2052  3420               	retlw	32	;' '
 10150  2053  340D               	retlw	13
 10151  2054  3400               	retlw	0
 10152                           
 10153                           	psect	stringtext12
 10154  2055                     __pstringtext12:	
 10155  2055                     STR_21:	
 10156  2055  3425               	retlw	37	;'%'
 10157  2056  3463               	retlw	99	;'c'
 10158  2057  3420               	retlw	32	;' '
 10159  2058  3420               	retlw	32	;' '
 10160  2059  3420               	retlw	32	;' '
 10161  205A  340D               	retlw	13
 10162  205B  3400               	retlw	0
 10163                           
 10164                           	psect	stringtext13
 10165  205C                     __pstringtext13:	
 10166  205C                     STR_15:	
 10167  205C  3420               	retlw	32	;' '
 10168  205D  3420               	retlw	32	;' '
 10169  205E  3420               	retlw	32	;' '
 10170  205F  3425               	retlw	37	;'%'
 10171  2060  3463               	retlw	99	;'c'
 10172  2061  340D               	retlw	13
 10173  2062  3400               	retlw	0
 10174                           
 10175                           	psect	stringtext14
 10176  2063                     __pstringtext14:	
 10177  2063                     STR_22:	
 10178  2063  3420               	retlw	32	;' '
 10179  2064  3420               	retlw	32	;' '
 10180  2065  3420               	retlw	32	;' '
 10181  2066  3420               	retlw	32	;' '
 10182  2067  340D               	retlw	13
 10183  2068  3400               	retlw	0
 10184                           
 10185                           	psect	stringtext15
 10186  2069                     __pstringtext15:	
 10187  2069                     STR_10:	
 10188  2069  3450               	retlw	80	;'P'
 10189  206A  3443               	retlw	67	;'C'
 10190  206B  3420               	retlw	32	;' '
 10191  206C  3420               	retlw	32	;' '
 10192  206D  340D               	retlw	13
 10193  206E  3400               	retlw	0
 10194                           
 10195                           	psect	stringtext16
 10196  206F                     __pstringtext16:	
 10197  206F                     STR_11:	
 10198  206F  344C               	retlw	76	;'L'
 10199  2070  3445               	retlw	69	;'E'
 10200  2071  3444               	retlw	68	;'D'
 10201  2072  3420               	retlw	32	;' '
 10202  2073  340D               	retlw	13
 10203  2074  3400               	retlw	0
 10204                           
 10205                           	psect	stringtext17
 10206  2075                     __pstringtext17:	
 10207  2075                     STR_7:	
 10208  2075  3441               	retlw	65	;'A'
 10209  2076  344E               	retlw	78	;'N'
 10210  2077  3449               	retlw	73	;'I'
 10211  2078  3420               	retlw	32	;' '
 10212  2079  340D               	retlw	13
 10213  207A  3400               	retlw	0
 10214                           
 10215                           	psect	stringtext18
 10216  207B                     __pstringtext18:	
 10217  207B                     STR_1:	
 10218  207B  3453               	retlw	83	;'S'
 10219  207C  3445               	retlw	69	;'E'
 10220  207D  344C               	retlw	76	;'L'
 10221  207E  3431               	retlw	49	;'1'
 10222  207F  340D               	retlw	13
 10223  2080  3400               	retlw	0
 10224                           
 10225                           	psect	stringtext19
 10226  2081                     __pstringtext19:	
 10227  2081                     STR_8:	
 10228  2081  3442               	retlw	66	;'B'
 10229  2082  3445               	retlw	69	;'E'
 10230  2083  3441               	retlw	65	;'A'
 10231  2084  3454               	retlw	84	;'T'
 10232  2085  340D               	retlw	13
 10233  2086  3400               	retlw	0
 10234                           
 10235                           	psect	stringtext20
 10236  2087                     __pstringtext20:	
 10237  2087                     STR_12:	
 10238  2087  3420               	retlw	32	;' '
 10239  2088  3420               	retlw	32	;' '
 10240  2089  3420               	retlw	32	;' '
 10241  208A  3420               	retlw	32	;' '
 10242  208B  3400               	retlw	0
 10243                           
 10244                           	psect	stringtext21
 10245  208C                     __pstringtext21:	
 10246  208C                     STR_2:	
 10247  208C  3448               	retlw	72	;'H'
 10248  208D  344F               	retlw	79	;'O'
 10249  208E  344C               	retlw	76	;'L'
 10250  208F  3444               	retlw	68	;'D'
 10251  2090  3400               	retlw	0
 10252                           
 10253                           	psect	stringtext22
 10254  0000                     __pstringtext22:	
 10255  2067                     
 10256                           ; #config settings
 10257  0000                     
 10258                           	psect	cinit
 10259  0032                     start_initialization:	
 10260  0032                     __initialization:		;BIGRAM
 10261                           
 10262                           ; Initialize objects allocated to COMMON
 10263  0032  3180  2002  3180   	fcall	__pidataCOMMON	;fetch initializer
 10264  0035  00FC               	movwf	__pdataCOMMON& (0+127)
 10265  0036  3180  2003  3180   	fcall	__pidataCOMMON+1	;fetch initializer
 10266  0039  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
 10267                           
 10268                           ; Initialize objects allocated to BANK1
 10269  003A  0141               	movlb	1	; select bank1
 10270  003B  319E  266B  3180   	fcall	__pidataBANK1	;fetch initializer
 10271  003E  00EC               	movwf	__pdataBANK1& (0+127)
 10272  003F  319E  266C  3180   	fcall	__pidataBANK1+1	;fetch initializer
 10273  0042  00ED               	movwf	(__pdataBANK1+1)& (0+127)
 10274  0043  319E  266D  3180   	fcall	__pidataBANK1+2	;fetch initializer
 10275  0046  00EE               	movwf	(__pdataBANK1+2)& (0+127)
 10276  0047  319E  266E  3180   	fcall	__pidataBANK1+3	;fetch initializer
 10277  004A  00EF               	movwf	(__pdataBANK1+3)& (0+127)
 10278                           
 10279                           ; Initialize objects allocated to BANK2
 10280  004B  30FA               	movlw	low __pidataBANK2
 10281  004C  0084               	movwf	4
 10282  004D  3087               	movlw	(high __pidataBANK2)| (0+128)
 10283  004E  0085               	movwf	5
 10284  004F  0142               	movlb	2	; select bank2
 10285  0050  0012               	moviw fsr0++
 10286  0051  00E4               	movwf	__pdataBANK2& (0+127)
 10287  0052  0012               	moviw fsr0++
 10288  0053  00E5               	movwf	(__pdataBANK2+1)& (0+127)
 10289  0054  0012               	moviw fsr0++
 10290  0055  00E6               	movwf	(__pdataBANK2+2)& (0+127)
 10291  0056  0012               	moviw fsr0++
 10292  0057  00E7               	movwf	(__pdataBANK2+3)& (0+127)
 10293  0058  0012               	moviw fsr0++
 10294  0059  00E8               	movwf	(__pdataBANK2+4)& (0+127)
 10295  005A  0012               	moviw fsr0++
 10296  005B  00E9               	movwf	(__pdataBANK2+5)& (0+127)
 10297                           
 10298                           ; Clear objects allocated to BIGRAM
 10299  005C  30EE               	movlw	low (0+9198)
 10300  005D  0084               	movwf	4
 10301  005E  3023               	movlw	high (0+9198)
 10302  005F  0085               	movwf	5
 10303  0060  3002               	movlw	2
 10304  0061  00FE               	movwf	btemp
 10305  0062  3004               	movlw	4
 10306  0063  00FF               	movwf	btemp+1
 10307  0064  319F  2710  3180   	fcall	clear_ram0
 10308                           
 10309                           ; Clear objects allocated to COMMON
 10310  0067  01F7               	clrf	__pbssCOMMON& (0+127)
 10311  0068  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
 10312  0069  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
 10313  006A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
 10314  006B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
 10315                           
 10316                           ; Clear objects allocated to BANK1
 10317  006C  30A0               	movlw	low __pbssBANK1
 10318  006D  0084               	movwf	4
 10319  006E  3000               	movlw	high __pbssBANK1
 10320  006F  0085               	movwf	5
 10321  0070  3027               	movlw	39
 10322  0071  00FE               	movwf	btemp
 10323  0072  3000               	movlw	0
 10324  0073  00FF               	movwf	btemp+1
 10325  0074  319F  2710  3180   	fcall	clear_ram0
 10326                           
 10327                           ; Clear objects allocated to BANK2
 10328  0077  3020               	movlw	low __pbssBANK2
 10329  0078  0084               	movwf	4
 10330  0079  3001               	movlw	high __pbssBANK2
 10331  007A  0085               	movwf	5
 10332  007B  3038               	movlw	56
 10333  007C  00FE               	movwf	btemp
 10334  007D  3000               	movlw	0
 10335  007E  00FF               	movwf	btemp+1
 10336  007F  319F  2710  3180   	fcall	clear_ram0
 10337                           
 10338                           ; Clear objects allocated to BANK3
 10339  0082  30A0               	movlw	low __pbssBANK3
 10340  0083  0084               	movwf	4
 10341  0084  3001               	movlw	high __pbssBANK3
 10342  0085  0085               	movwf	5
 10343  0086  3040               	movlw	64
 10344  0087  00FE               	movwf	btemp
 10345  0088  3000               	movlw	0
 10346  0089  00FF               	movwf	btemp+1
 10347  008A  319F  2710         	fcall	clear_ram0
 10348  008C                     end_of_initialization:	
 10349                           ;End of C runtime variable initialization code
 10350                           
 10351  008C                     __end_of__initialization:	
 10352  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10353  008D  0140               	movlb	0
 10354  008E  3188  280B         	ljmp	_main	;jump to C main() function
 10355                           
 10356                           	psect	bssCOMMON
 10357  0077                     __pbssCOMMON:	
 10358  0077                     _p_i2c1_trb_current:	
 10359  0077                     	ds	1
 10360  0078                     _eusart1RxTail:	
 10361  0078                     	ds	1
 10362  0079                     _eusart1RxHead:	
 10363  0079                     	ds	1
 10364  007A                     I2C1_ISR@i2c_address:	
 10365  007A                     	ds	2
 10366                           
 10367                           	psect	dataCOMMON
 10368  007C                     __pdataCOMMON:	
 10369  007C                     _incInterval:	
 10370  007C                     	ds	2
 10371                           
 10372                           	psect	bssBANK1
 10373  00A0                     __pbssBANK1:	
 10374  00A0                     _i2c1_object:	
 10375  00A0                     	ds	5
 10376  00A5                     _manual:	
 10377  00A5                     	ds	4
 10378  00A9                     _currentState:	
 10379  00A9                     	ds	2
 10380  00AB                     _lastIncTime:	
 10381  00AB                     	ds	2
 10382  00AD                     _lastDetected:	
 10383  00AD                     	ds	1
 10384  00AE                     _thresholdExceeded:	
 10385  00AE                     	ds	1
 10386  00AF                     _detected:	
 10387  00AF                     	ds	1
 10388  00B0                     _position:	
 10389  00B0                     	ds	1
 10390  00B1                     _colorModeSelected:	
 10391  00B1                     	ds	1
 10392  00B2                     _beatHold:	
 10393  00B2                     	ds	1
 10394  00B3                     _enterState:	
 10395  00B3                     	ds	1
 10396  00B4                     _menuState:	
 10397  00B4                     	ds	1
 10398  00B5                     _downState:	
 10399  00B5                     	ds	1
 10400  00B6                     _upState:	
 10401  00B6                     	ds	1
 10402  00B7                     _enterPressed:	
 10403  00B7                     	ds	1
 10404  00B8                     _menuPressed:	
 10405  00B8                     	ds	1
 10406  00B9                     _currentSelection:	
 10407  00B9                     	ds	1
 10408  00BA                     _menuSelected:	
 10409  00BA                     	ds	1
 10410  00BB                     _enter:	
 10411  00BB                     	ds	1
 10412  00BC                     _down:	
 10413  00BC                     	ds	1
 10414  00BD                     _up:	
 10415  00BD                     	ds	1
 10416  00BE                     _menu:	
 10417  00BE                     	ds	1
 10418  00BF                     I2C1_ISR@i2c_10bit_address_restart:	
 10419  00BF                     	ds	1
 10420  00C0                     I2C1_ISR@i2c_bytes_left:	
 10421  00C0                     	ds	1
 10422  00C1                     I2C1_ISR@pi2c_buf_ptr:	
 10423  00C1                     	ds	1
 10424  00C2                     _p_i2c1_current:	
 10425  00C2                     	ds	1
 10426  00C3                     _i2c1_trb_count:	
 10427  00C3                     	ds	1
 10428  00C4                     _i2c1_state:	
 10429  00C4                     	ds	1
 10430  00C5                     _eusart1RxLastError:	
 10431  00C5                     	ds	1
 10432  00C6                     _eusart1RxCount:	
 10433  00C6                     	ds	1
 10434                           
 10435                           	psect	dataBANK1
 10436  00EC                     __pdataBANK1:	
 10437  00EC                     _address:	
 10438  00EC                     	ds	2
 10439  00EE                     _startup:	
 10440  00EE                     	ds	1
 10441  00EF                     _beatBrightness:	
 10442  00EF                     	ds	1
 10443                           
 10444                           	psect	bssBANK2
 10445  0120                     __pbssBANK2:	
 10446  0120                     _eusart1RxStatusBuffer:	
 10447  0120                     	ds	8
 10448  0128                     _eusart1RxBuffer:	
 10449  0128                     	ds	8
 10450  0130                     _nout:	
 10451  0130                     	ds	2
 10452  0132                     _width:	
 10453  0132                     	ds	2
 10454  0134                     _prec:	
 10455  0134                     	ds	2
 10456  0136                     _flags:	
 10457  0136                     	ds	2
 10458  0138                     _lastLedActiveTime:	
 10459  0138                     	ds	2
 10460  013A                     _arrayIndex:	
 10461  013A                     	ds	2
 10462  013C                     _thresholdCount:	
 10463  013C                     	ds	2
 10464  013E                     _lastRun:	
 10465  013E                     	ds	2
 10466  0140                     _bpm:	
 10467  0140                     	ds	2
 10468  0142                     _lastBeat:	
 10469  0142                     	ds	2
 10470  0144                     _lastActiveTime:	
 10471  0144                     	ds	2
 10472  0146                     _currentTime:	
 10473  0146                     	ds	2
 10474  0148                     _lastTime:	
 10475  0148                     	ds	2
 10476  014A                     _startTime:	
 10477  014A                     	ds	2
 10478  014C                     _tm1650_status:	
 10479  014C                     	ds	1
 10480  014D                     I2C1_MasterRead@trBlock:	
 10481  014D                     	ds	4
 10482  0151                     I2C1_MasterWrite@trBlock:	
 10483  0151                     	ds	4
 10484  0155                     _i2c1_tr_queue:	
 10485  0155                     	ds	3
 10486                           
 10487                           	psect	dataBANK2
 10488  0164                     __pdataBANK2:	
 10489  0164                     _initial:	
 10490  0164                     	ds	2
 10491  0166                     _delay:	
 10492  0166                     	ds	2
 10493  0168                     _threshold:	
 10494  0168                     	ds	2
 10495                           
 10496                           	psect	bssBANK3
 10497  01A0                     __pbssBANK3:	
 10498  01A0                     _dbuf:	
 10499  01A0                     	ds	32
 10500  01C0                     _buttons:	
 10501  01C0                     	ds	32
 10502                           
 10503                           	psect	clrtext
 10504  1F10                     clear_ram0:	
 10505                           ;	Called with FSR0 containing the base address, and
 10506                           ;	btemp/btemp+1 has the size to clear
 10507                           
 10508  1F10  0064               	clrwdt	;clear the watchdog before getting into this loop
 10509  1F11                     clrloop0:	
 10510  1F11  0180               	clrf	0	;clear RAM location pointed to by FSR
 10511  1F12  3101               	addfsr 0,1
 10512  1F13  3001               	movlw	1
 10513  1F14  02FE               	subwf	126,f
 10514  1F15  3000               	movlw	0
 10515  1F16  3BFF               	subwfb	127,f
 10516  1F17  087F               	movf	127,w
 10517  1F18  047E               	iorwf	126,w
 10518  1F19  1903               	btfsc	3,2
 10519  1F1A  3400               	retlw	0	;all done for this memory range, return
 10520  1F1B  2F11               	goto	clrloop0	;have we reached the end yet?
 10521                           
 10522                           	psect	cstackBANK2
 10523  016A                     __pcstackBANK2:	
 10524  016A                     LED_task_DMX@dmx:	
 10525                           
 10526                           ; 4 bytes @ 0x0
 10527  016A                     	ds	4
 10528  016E                     ??_main:	
 10529                           
 10530                           ; 1 bytes @ 0x4
 10531  016E                     	ds	2
 10532                           
 10533                           	psect	cstackBANK1
 10534  00C7                     __pcstackBANK1:	
 10535  00C7                     ?_PWM3_LoadDutyValue:	
 10536  00C7                     ?_PWM4_LoadDutyValue:	
 10537                           ; 1 bytes @ 0x0
 10538                           
 10539  00C7                     ?_PWM1_LoadDutyValue:	
 10540                           ; 1 bytes @ 0x0
 10541                           
 10542  00C7                     ?_PWM2_LoadDutyValue:	
 10543                           ; 1 bytes @ 0x0
 10544                           
 10545  00C7                     ?_printf:	
 10546                           ; 1 bytes @ 0x0
 10547                           
 10548  00C7                     ?_beatBrightnessCalculation:	
 10549                           ; 2 bytes @ 0x0
 10550                           
 10551  00C7                     PWM3_LoadDutyValue@dutyValue:	
 10552                           ; 4 bytes @ 0x0
 10553                           
 10554  00C7                     PWM4_LoadDutyValue@dutyValue:	
 10555                           ; 2 bytes @ 0x0
 10556                           
 10557  00C7                     PWM1_LoadDutyValue@dutyValue:	
 10558                           ; 2 bytes @ 0x0
 10559                           
 10560  00C7                     PWM2_LoadDutyValue@dutyValue:	
 10561                           ; 2 bytes @ 0x0
 10562                           
 10563  00C7                     printf@fmt:	
 10564                           ; 2 bytes @ 0x0
 10565                           
 10566                           
 10567                           ; 2 bytes @ 0x0
 10568  00C7                     	ds	4
 10569  00CB                     ??_beatBrightnessCalculation:	
 10570                           
 10571                           ; 1 bytes @ 0x4
 10572  00CB                     	ds	5
 10573  00D0                     ?_beatColorCreator:	
 10574  00D0                     beatColorCreator@inGreen:	
 10575                           ; 4 bytes @ 0x9
 10576                           
 10577                           
 10578                           ; 1 bytes @ 0x9
 10579  00D0                     	ds	1
 10580  00D1                     ??_CONTROLLER_task:	
 10581  00D1                     beatColorCreator@inBlue:	
 10582                           ; 1 bytes @ 0xA
 10583                           
 10584                           
 10585                           ; 1 bytes @ 0xA
 10586  00D1                     	ds	1
 10587  00D2                     beatColorCreator@inWhite:	
 10588                           
 10589                           ; 1 bytes @ 0xB
 10590  00D2                     	ds	2
 10591  00D4                     beatColorCreator@inRed:	
 10592                           
 10593                           ; 1 bytes @ 0xD
 10594  00D4                     	ds	1
 10595  00D5                     _beatColorCreator$3555:	
 10596                           
 10597                           ; 4 bytes @ 0xE
 10598  00D5                     	ds	4
 10599  00D9                     beatColorCreator@tempColor:	
 10600                           
 10601                           ; 4 bytes @ 0x12
 10602  00D9                     	ds	4
 10603  00DD                     ?_LED_setColor:	
 10604  00DD                     LED_setColor@input:	
 10605                           ; 1 bytes @ 0x16
 10606                           
 10607                           
 10608                           ; 4 bytes @ 0x16
 10609  00DD                     	ds	4
 10610  00E1                     ??_LED_setColor:	
 10611                           
 10612                           ; 1 bytes @ 0x1A
 10613  00E1                     	ds	4
 10614  00E5                     ??_LED_task_BEAT_STROBE:	
 10615  00E5                     ??_LED_task_DMX:	
 10616                           ; 1 bytes @ 0x1E
 10617                           
 10618                           
 10619                           ; 1 bytes @ 0x1E
 10620  00E5                     	ds	5
 10621  00EA                     ??_LED_task:	
 10622                           
 10623                           ; 1 bytes @ 0x23
 10624  00EA                     	ds	2
 10625                           
 10626                           	psect	cstackCOMMON
 10627  0070                     __pcstackCOMMON:	
 10628  0070                     ?_PMD_Initialize:	
 10629  0070                     ?_PIN_MANAGER_Initialize:	
 10630                           ; 1 bytes @ 0x0
 10631                           
 10632  0070                     ?_OSCILLATOR_Initialize:	
 10633                           ; 1 bytes @ 0x0
 10634                           
 10635  0070                     ?_I2C1_Initialize:	
 10636                           ; 1 bytes @ 0x0
 10637                           
 10638  0070                     ?_PWM1_Initialize:	
 10639                           ; 1 bytes @ 0x0
 10640                           
 10641  0070                     ?_PWM2_Initialize:	
 10642                           ; 1 bytes @ 0x0
 10643                           
 10644  0070                     ?_ADCC_Initialize:	
 10645                           ; 1 bytes @ 0x0
 10646                           
 10647  0070                     ?_PWM4_Initialize:	
 10648                           ; 1 bytes @ 0x0
 10649                           
 10650  0070                     ?_PWM3_Initialize:	
 10651                           ; 1 bytes @ 0x0
 10652                           
 10653  0070                     ?_TMR2_Initialize:	
 10654                           ; 1 bytes @ 0x0
 10655                           
 10656  0070                     ?_TMR0_Initialize:	
 10657                           ; 1 bytes @ 0x0
 10658                           
 10659  0070                     ?_EUSART1_Initialize:	
 10660                           ; 1 bytes @ 0x0
 10661                           
 10662  0070                     ?_EUSART1_Receive_ISR:	
 10663                           ; 1 bytes @ 0x0
 10664                           
 10665  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 10666                           ; 1 bytes @ 0x0
 10667                           
 10668  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 10669                           ; 1 bytes @ 0x0
 10670                           
 10671  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10672                           ; 1 bytes @ 0x0
 10673                           
 10674  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10675                           ; 1 bytes @ 0x0
 10676                           
 10677  0070                     ?_EUSART1_DefaultErrorHandler:	
 10678                           ; 1 bytes @ 0x0
 10679                           
 10680  0070                     ?_EUSART1_RxDataHandler:	
 10681                           ; 1 bytes @ 0x0
 10682                           
 10683  0070                     ??_EUSART1_RxDataHandler:	
 10684                           ; 1 bytes @ 0x0
 10685                           
 10686  0070                     ?_TMR0_ISR:	
 10687                           ; 1 bytes @ 0x0
 10688                           
 10689  0070                     ??_TMR0_ISR:	
 10690                           ; 1 bytes @ 0x0
 10691                           
 10692  0070                     ?_I2C1_BusCollisionISR:	
 10693                           ; 1 bytes @ 0x0
 10694                           
 10695  0070                     ??_I2C1_BusCollisionISR:	
 10696                           ; 1 bytes @ 0x0
 10697                           
 10698  0070                     ?_I2C1_ISR:	
 10699                           ; 1 bytes @ 0x0
 10700                           
 10701  0070                     ?_ADCC_ThresholdISR:	
 10702                           ; 1 bytes @ 0x0
 10703                           
 10704  0070                     ??_ADCC_ThresholdISR:	
 10705                           ; 1 bytes @ 0x0
 10706                           
 10707  0070                     ?_TMR0_DefaultInterruptHandler:	
 10708                           ; 1 bytes @ 0x0
 10709                           
 10710  0070                     ??_TMR0_DefaultInterruptHandler:	
 10711                           ; 1 bytes @ 0x0
 10712                           
 10713  0070                     ?_I2C1_Stop:	
 10714                           ; 1 bytes @ 0x0
 10715                           
 10716  0070                     ??_I2C1_Stop:	
 10717                           ; 1 bytes @ 0x0
 10718                           
 10719  0070                     ?_I2C1_FunctionComplete:	
 10720                           ; 1 bytes @ 0x0
 10721                           
 10722  0070                     ??_I2C1_FunctionComplete:	
 10723                           ; 1 bytes @ 0x0
 10724                           
 10725  0070                     ?_ADCC_DefaultInterruptHandler:	
 10726                           ; 1 bytes @ 0x0
 10727                           
 10728  0070                     ??_ADCC_DefaultInterruptHandler:	
 10729                           ; 1 bytes @ 0x0
 10730                           
 10731  0070                     ?_CLOCK_init:	
 10732                           ; 1 bytes @ 0x0
 10733                           
 10734  0070                     ?_BUTTONS_init:	
 10735                           ; 1 bytes @ 0x0
 10736                           
 10737  0070                     ?_BEAT_init:	
 10738                           ; 1 bytes @ 0x0
 10739                           
 10740  0070                     ?_TM1650_init:	
 10741                           ; 1 bytes @ 0x0
 10742                           
 10743  0070                     ?_DMX_init:	
 10744                           ; 1 bytes @ 0x0
 10745                           
 10746  0070                     ?_BUTTONS_task:	
 10747                           ; 1 bytes @ 0x0
 10748                           
 10749  0070                     ?_CONTROLLER_task:	
 10750                           ; 1 bytes @ 0x0
 10751                           
 10752  0070                     ?_BEAT_task:	
 10753                           ; 1 bytes @ 0x0
 10754                           
 10755  0070                     ?_LED_task:	
 10756                           ; 1 bytes @ 0x0
 10757                           
 10758  0070                     ?_GPIO_init:	
 10759                           ; 1 bytes @ 0x0
 10760                           
 10761  0070                     ?_CLOCK_timerCallback:	
 10762                           ; 1 bytes @ 0x0
 10763                           
 10764  0070                     ??_CLOCK_timerCallback:	
 10765                           ; 1 bytes @ 0x0
 10766                           
 10767  0070                     ?_menuSelection:	
 10768                           ; 1 bytes @ 0x0
 10769                           
 10770  0070                     ?_CONTROL_DMX:	
 10771                           ; 1 bytes @ 0x0
 10772                           
 10773  0070                     ?_CONTROL_BEAT:	
 10774                           ; 1 bytes @ 0x0
 10775                           
 10776  0070                     ?_CONTROL_MANUAL:	
 10777                           ; 1 bytes @ 0x0
 10778                           
 10779  0070                     ?_TM1650_enable:	
 10780                           ; 1 bytes @ 0x0
 10781                           
 10782  0070                     ?_getManualColor:	
 10783                           ; 1 bytes @ 0x0
 10784                           
 10785  0070                     ?_address_inc:	
 10786                           ; 1 bytes @ 0x0
 10787                           
 10788  0070                     ?_address_dec:	
 10789                           ; 1 bytes @ 0x0
 10790                           
 10791  0070                     ?_colorInc:	
 10792                           ; 1 bytes @ 0x0
 10793                           
 10794  0070                     ?_colorDec:	
 10795                           ; 1 bytes @ 0x0
 10796                           
 10797  0070                     ?_DMX_interrupt:	
 10798                           ; 1 bytes @ 0x0
 10799                           
 10800  0070                     ??_DMX_interrupt:	
 10801                           ; 1 bytes @ 0x0
 10802                           
 10803  0070                     ?_LED_task_BEAT_STROBE:	
 10804                           ; 1 bytes @ 0x0
 10805                           
 10806  0070                     ?_LED_task_BEAT_FADE:	
 10807                           ; 1 bytes @ 0x0
 10808                           
 10809  0070                     ?_LED_task_BEAT_CONTINUOUS:	
 10810                           ; 1 bytes @ 0x0
 10811                           
 10812  0070                     ?_LED_task_BEAT_MIXED:	
 10813                           ; 1 bytes @ 0x0
 10814                           
 10815  0070                     ?_LED_task_ANIMATION:	
 10816                           ; 1 bytes @ 0x0
 10817                           
 10818  0070                     ?_LED_task_MANUAL:	
 10819                           ; 1 bytes @ 0x0
 10820                           
 10821  0070                     ?_SYSTEM_Initialize:	
 10822                           ; 1 bytes @ 0x0
 10823                           
 10824  0070                     ?_INTERRUPT_InterruptManager:	
 10825                           ; 1 bytes @ 0x0
 10826                           
 10827  0070                     ?_I2C1_WaitForLastPacketToComplete:	
 10828                           ; 1 bytes @ 0x0
 10829                           
 10830  0070                     ?_ADCC_StartConversion:	
 10831                           ; 1 bytes @ 0x0
 10832                           
 10833  0070                     ?_main:	
 10834                           ; 1 bytes @ 0x0
 10835                           
 10836  0070                     ?_BUTTONS_isClicked:	
 10837                           ; 1 bytes @ 0x0
 10838                           
 10839  0070                     ?_BUTTONS_isHeld:	
 10840                           ; 1 bytes @ 0x0
 10841                           
 10842  0070                     ?_getMode:	
 10843                           ; 1 bytes @ 0x0
 10844                           
 10845  0070                     ?_getIsHold:	
 10846                           ; 1 bytes @ 0x0
 10847                           
 10848  0070                     ?_putch:	
 10849                           ; 1 bytes @ 0x0
 10850                           
 10851  0070                     ?_adcThresholdHandler:	
 10852                           ; 1 bytes @ 0x0
 10853                           
 10854  0070                     ??_adcThresholdHandler:	
 10855                           ; 1 bytes @ 0x0
 10856                           
 10857  0070                     ?_BEAT_detected:	
 10858                           ; 1 bytes @ 0x0
 10859                           
 10860  0070                     ?_DMX_getAddress:	
 10861                           ; 1 bytes @ 0x0
 10862                           
 10863  0070                     ?_LED_task_DMX:	
 10864                           ; 1 bytes @ 0x0
 10865                           
 10866                           
 10867                           ; 1 bytes @ 0x0
 10868  0070                     	ds	1
 10869  0071                     ??_EUSART1_Receive_ISR:	
 10870  0071                     ??_EUSART1_DefaultErrorHandler:	
 10871                           ; 1 bytes @ 0x1
 10872                           
 10873  0071                     I2C1_Stop@completion_code:	
 10874                           ; 1 bytes @ 0x1
 10875                           
 10876                           
 10877                           ; 1 bytes @ 0x1
 10878  0071                     	ds	1
 10879  0072                     ??_I2C1_ISR:	
 10880                           
 10881                           ; 1 bytes @ 0x2
 10882  0072                     	ds	4
 10883  0076                     DMX_interrupt@dummy:	
 10884                           
 10885                           ; 1 bytes @ 0x6
 10886  0076                     	ds	1
 10887  0077                     ??_INTERRUPT_InterruptManager:	
 10888                           
 10889                           	psect	cstackBANK0
 10890  0020                     __pcstackBANK0:	
 10891                           ; 1 bytes @ 0x7
 10892                           
 10893  0020                     ??_PMD_Initialize:	
 10894  0020                     ??_PIN_MANAGER_Initialize:	
 10895                           ; 1 bytes @ 0x0
 10896                           
 10897  0020                     ??_OSCILLATOR_Initialize:	
 10898                           ; 1 bytes @ 0x0
 10899                           
 10900  0020                     ??_I2C1_Initialize:	
 10901                           ; 1 bytes @ 0x0
 10902                           
 10903  0020                     ??_PWM1_Initialize:	
 10904                           ; 1 bytes @ 0x0
 10905                           
 10906  0020                     ??_PWM2_Initialize:	
 10907                           ; 1 bytes @ 0x0
 10908                           
 10909  0020                     ??_PWM4_Initialize:	
 10910                           ; 1 bytes @ 0x0
 10911                           
 10912  0020                     ??_PWM3_Initialize:	
 10913                           ; 1 bytes @ 0x0
 10914                           
 10915  0020                     ??_TMR2_Initialize:	
 10916                           ; 1 bytes @ 0x0
 10917                           
 10918  0020                     ?_EUSART1_SetRxInterruptHandler:	
 10919                           ; 1 bytes @ 0x0
 10920                           
 10921  0020                     ?_EUSART1_SetFramingErrorHandler:	
 10922                           ; 1 bytes @ 0x0
 10923                           
 10924  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 10925                           ; 1 bytes @ 0x0
 10926                           
 10927  0020                     ?_EUSART1_SetErrorHandler:	
 10928                           ; 1 bytes @ 0x0
 10929                           
 10930  0020                     ?_TMR0_SetInterruptHandler:	
 10931                           ; 1 bytes @ 0x0
 10932                           
 10933  0020                     ?_I2C1_MasterWriteTRBBuild:	
 10934                           ; 1 bytes @ 0x0
 10935                           
 10936  0020                     ?_I2C1_MasterTRBInsert:	
 10937                           ; 1 bytes @ 0x0
 10938                           
 10939  0020                     ?_ADCC_SetADTIInterruptHandler:	
 10940                           ; 1 bytes @ 0x0
 10941                           
 10942  0020                     ??_GPIO_init:	
 10943                           ; 1 bytes @ 0x0
 10944                           
 10945  0020                     ??_getManualColor:	
 10946                           ; 1 bytes @ 0x0
 10947                           
 10948  0020                     ??_colorInc:	
 10949                           ; 1 bytes @ 0x0
 10950                           
 10951  0020                     ??_colorDec:	
 10952                           ; 1 bytes @ 0x0
 10953                           
 10954  0020                     ??_LED_task_BEAT_FADE:	
 10955                           ; 1 bytes @ 0x0
 10956                           
 10957  0020                     ??_LED_task_BEAT_CONTINUOUS:	
 10958                           ; 1 bytes @ 0x0
 10959                           
 10960  0020                     ??_LED_task_BEAT_MIXED:	
 10961                           ; 1 bytes @ 0x0
 10962                           
 10963  0020                     ??_LED_task_ANIMATION:	
 10964                           ; 1 bytes @ 0x0
 10965                           
 10966  0020                     ??_LED_task_MANUAL:	
 10967                           ; 1 bytes @ 0x0
 10968                           
 10969  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 10970                           ; 1 bytes @ 0x0
 10971                           
 10972  0020                     ??_ADCC_StartConversion:	
 10973                           ; 1 bytes @ 0x0
 10974                           
 10975  0020                     ?_ADCC_SetUpperThreshold:	
 10976                           ; 1 bytes @ 0x0
 10977                           
 10978  0020                     ?_init:	
 10979                           ; 1 bytes @ 0x0
 10980                           
 10981  0020                     ??_BUTTONS_isClicked:	
 10982                           ; 1 bytes @ 0x0
 10983                           
 10984  0020                     ??_BUTTONS_isHeld:	
 10985                           ; 1 bytes @ 0x0
 10986                           
 10987  0020                     ??_getMode:	
 10988                           ; 1 bytes @ 0x0
 10989                           
 10990  0020                     ??_getIsHold:	
 10991                           ; 1 bytes @ 0x0
 10992                           
 10993  0020                     ??_BEAT_detected:	
 10994                           ; 1 bytes @ 0x0
 10995                           
 10996  0020                     ??_DMX_getAddress:	
 10997                           ; 1 bytes @ 0x0
 10998                           
 10999  0020                     ?_CLOCK_getTime:	
 11000                           ; 1 bytes @ 0x0
 11001                           
 11002  0020                     ?_strlen:	
 11003                           ; 2 bytes @ 0x0
 11004                           
 11005  0020                     ?__Umul8_16:	
 11006                           ; 2 bytes @ 0x0
 11007                           
 11008  0020                     ?___lwdiv:	
 11009                           ; 2 bytes @ 0x0
 11010                           
 11011  0020                     ?___xxtofl:	
 11012                           ; 2 bytes @ 0x0
 11013                           
 11014  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 11015                           ; 4 bytes @ 0x0
 11016                           
 11017  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 11018                           ; 1 bytes @ 0x0
 11019                           
 11020  0020                     ADCC_StartConversion@channel:	
 11021                           ; 1 bytes @ 0x0
 11022                           
 11023  0020                     BUTTONS_isClicked@button:	
 11024                           ; 1 bytes @ 0x0
 11025                           
 11026  0020                     BUTTONS_isHeld@button:	
 11027                           ; 1 bytes @ 0x0
 11028                           
 11029  0020                     __Umul8_16@multiplicand:	
 11030                           ; 1 bytes @ 0x0
 11031                           
 11032  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11033                           ; 1 bytes @ 0x0
 11034                           
 11035  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11036                           ; 2 bytes @ 0x0
 11037                           
 11038  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 11039                           ; 2 bytes @ 0x0
 11040                           
 11041  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11042                           ; 2 bytes @ 0x0
 11043                           
 11044  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11045                           ; 2 bytes @ 0x0
 11046                           
 11047  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 11048                           ; 2 bytes @ 0x0
 11049                           
 11050  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 11051                           ; 2 bytes @ 0x0
 11052                           
 11053  0020                     init@port:	
 11054                           ; 2 bytes @ 0x0
 11055                           
 11056  0020                     ___lwdiv@divisor:	
 11057                           ; 2 bytes @ 0x0
 11058                           
 11059  0020                     strlen@s:	
 11060                           ; 2 bytes @ 0x0
 11061                           
 11062  0020                     ___xxtofl@val:	
 11063                           ; 2 bytes @ 0x0
 11064                           
 11065                           
 11066                           ; 4 bytes @ 0x0
 11067  0020                     	ds	1
 11068  0021                     ??_CONTROL_BEAT:	
 11069  0021                     I2C1_MasterTRBInsert@pflag:	
 11070                           ; 1 bytes @ 0x1
 11071                           
 11072  0021                     I2C1_MasterWriteTRBBuild@length:	
 11073                           ; 1 bytes @ 0x1
 11074                           
 11075                           
 11076                           ; 1 bytes @ 0x1
 11077  0021                     	ds	1
 11078  0022                     ??_ADCC_Initialize:	
 11079  0022                     ??_TMR0_Initialize:	
 11080                           ; 1 bytes @ 0x2
 11081                           
 11082  0022                     ??_EUSART1_Initialize:	
 11083                           ; 1 bytes @ 0x2
 11084                           
 11085  0022                     ??_EUSART1_SetRxInterruptHandler:	
 11086                           ; 1 bytes @ 0x2
 11087                           
 11088  0022                     ??_EUSART1_SetFramingErrorHandler:	
 11089                           ; 1 bytes @ 0x2
 11090                           
 11091  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 11092                           ; 1 bytes @ 0x2
 11093                           
 11094  0022                     ??_EUSART1_SetErrorHandler:	
 11095                           ; 1 bytes @ 0x2
 11096                           
 11097  0022                     ??_TMR0_SetInterruptHandler:	
 11098                           ; 1 bytes @ 0x2
 11099                           
 11100  0022                     ??_I2C1_MasterTRBInsert:	
 11101                           ; 1 bytes @ 0x2
 11102                           
 11103  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11104                           ; 1 bytes @ 0x2
 11105                           
 11106  0022                     ??_CLOCK_init:	
 11107                           ; 1 bytes @ 0x2
 11108                           
 11109  0022                     ??_BEAT_init:	
 11110                           ; 1 bytes @ 0x2
 11111                           
 11112  0022                     ??_CLOCK_getTime:	
 11113                           ; 1 bytes @ 0x2
 11114                           
 11115  0022                     ??_BUTTONS_task:	
 11116                           ; 1 bytes @ 0x2
 11117                           
 11118  0022                     ??_strlen:	
 11119                           ; 1 bytes @ 0x2
 11120                           
 11121  0022                     ??__Umul8_16:	
 11122                           ; 1 bytes @ 0x2
 11123                           
 11124  0022                     ??_SYSTEM_Initialize:	
 11125                           ; 1 bytes @ 0x2
 11126                           
 11127  0022                     ??_ADCC_SetUpperThreshold:	
 11128                           ; 1 bytes @ 0x2
 11129                           
 11130  0022                     init@pin:	
 11131                           ; 1 bytes @ 0x2
 11132                           
 11133  0022                     CONTROL_BEAT@i:	
 11134                           ; 1 bytes @ 0x2
 11135                           
 11136  0022                     colorInc@input:	
 11137                           ; 1 bytes @ 0x2
 11138                           
 11139  0022                     colorDec@input:	
 11140                           ; 1 bytes @ 0x2
 11141                           
 11142  0022                     getManualColor@input:	
 11143                           ; 1 bytes @ 0x2
 11144                           
 11145  0022                     I2C1_MasterWriteTRBBuild@address:	
 11146                           ; 1 bytes @ 0x2
 11147                           
 11148  0022                     ___lwdiv@dividend:	
 11149                           ; 2 bytes @ 0x2
 11150                           
 11151                           
 11152                           ; 2 bytes @ 0x2
 11153  0022                     	ds	1
 11154  0023                     ??_CONTROL_MANUAL:	
 11155  0023                     ??_init:	
 11156                           ; 1 bytes @ 0x3
 11157                           
 11158  0023                     I2C1_MasterTRBInsert@count:	
 11159                           ; 1 bytes @ 0x3
 11160                           
 11161  0023                     strlen@a:	
 11162                           ; 1 bytes @ 0x3
 11163                           
 11164                           
 11165                           ; 2 bytes @ 0x3
 11166  0023                     	ds	1
 11167  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11168  0024                     ??___lwdiv:	
 11169                           ; 1 bytes @ 0x4
 11170                           
 11171  0024                     ??___xxtofl:	
 11172                           ; 1 bytes @ 0x4
 11173                           
 11174  0024                     init@btn:	
 11175                           ; 1 bytes @ 0x4
 11176                           
 11177  0024                     __Umul8_16@product:	
 11178                           ; 1 bytes @ 0x4
 11179                           
 11180                           
 11181                           ; 2 bytes @ 0x4
 11182  0024                     	ds	1
 11183  0025                     ??_BUTTONS_init:	
 11184  0025                     BUTTONS_task@i:	
 11185                           ; 1 bytes @ 0x5
 11186                           
 11187  0025                     CONTROL_MANUAL@input:	
 11188                           ; 1 bytes @ 0x5
 11189                           
 11190  0025                     ___lwdiv@quotient:	
 11191                           ; 1 bytes @ 0x5
 11192                           
 11193                           
 11194                           ; 2 bytes @ 0x5
 11195  0025                     	ds	1
 11196  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11197  0026                     BUTTONS_task@time:	
 11198                           ; 1 bytes @ 0x6
 11199                           
 11200  0026                     __Umul8_16@word_mpld:	
 11201                           ; 2 bytes @ 0x6
 11202                           
 11203                           
 11204                           ; 2 bytes @ 0x6
 11205  0026                     	ds	1
 11206  0027                     ?_I2C1_MasterWrite:	
 11207  0027                     I2C1_MasterWrite@length:	
 11208                           ; 1 bytes @ 0x7
 11209                           
 11210  0027                     ___lwdiv@counter:	
 11211                           ; 1 bytes @ 0x7
 11212                           
 11213                           
 11214                           ; 1 bytes @ 0x7
 11215  0027                     	ds	1
 11216  0028                     ??_BEAT_task:	
 11217  0028                     ?___lwmod:	
 11218                           ; 1 bytes @ 0x8
 11219                           
 11220  0028                     BUTTONS_task@btn:	
 11221                           ; 2 bytes @ 0x8
 11222                           
 11223  0028                     ___xxtofl@sign:	
 11224                           ; 1 bytes @ 0x8
 11225                           
 11226  0028                     __Umul8_16@multiplier:	
 11227                           ; 1 bytes @ 0x8
 11228                           
 11229  0028                     I2C1_MasterWrite@address:	
 11230                           ; 1 bytes @ 0x8
 11231                           
 11232  0028                     ___lwmod@divisor:	
 11233                           ; 2 bytes @ 0x8
 11234                           
 11235                           
 11236                           ; 2 bytes @ 0x8
 11237  0028                     	ds	1
 11238  0029                     ___xxtofl@exp:	
 11239                           
 11240                           ; 1 bytes @ 0x9
 11241  0029                     	ds	1
 11242  002A                     I2C1_MasterWrite@pflag:	
 11243  002A                     BEAT_task@offset:	
 11244                           ; 1 bytes @ 0xA
 11245                           
 11246  002A                     ___lwmod@dividend:	
 11247                           ; 2 bytes @ 0xA
 11248                           
 11249  002A                     ___xxtofl@arg:	
 11250                           ; 2 bytes @ 0xA
 11251                           
 11252                           
 11253                           ; 4 bytes @ 0xA
 11254  002A                     	ds	1
 11255  002B                     ??_I2C1_MasterWrite:	
 11256                           
 11257                           ; 1 bytes @ 0xB
 11258  002B                     	ds	1
 11259  002C                     ??___lwmod:	
 11260                           
 11261                           ; 1 bytes @ 0xC
 11262  002C                     	ds	1
 11263  002D                     I2C1_MasterWrite@pdata:	
 11264  002D                     ___lwmod@counter:	
 11265                           ; 1 bytes @ 0xD
 11266                           
 11267                           
 11268                           ; 1 bytes @ 0xD
 11269  002D                     	ds	1
 11270  002E                     ?_writeData:	
 11271  002E                     ?___fldiv:	
 11272                           ; 1 bytes @ 0xE
 11273                           
 11274  002E                     writeData@data:	
 11275                           ; 4 bytes @ 0xE
 11276                           
 11277  002E                     ___fldiv@a:	
 11278                           ; 1 bytes @ 0xE
 11279                           
 11280                           
 11281                           ; 4 bytes @ 0xE
 11282  002E                     	ds	1
 11283  002F                     ??_writeData:	
 11284                           
 11285                           ; 1 bytes @ 0xF
 11286  002F                     	ds	3
 11287  0032                     writeData@address:	
 11288  0032                     ___fldiv@b:	
 11289                           ; 1 bytes @ 0x12
 11290                           
 11291                           
 11292                           ; 4 bytes @ 0x12
 11293  0032                     	ds	1
 11294  0033                     writeData@status:	
 11295                           
 11296                           ; 1 bytes @ 0x13
 11297  0033                     	ds	1
 11298  0034                     ??_TM1650_enable:	
 11299  0034                     ?_TM1650_fastPrintNum:	
 11300                           ; 1 bytes @ 0x14
 11301                           
 11302  0034                     ?_TM1650_setDigit:	
 11303                           ; 1 bytes @ 0x14
 11304                           
 11305  0034                     TM1650_enable@enable:	
 11306                           ; 1 bytes @ 0x14
 11307                           
 11308  0034                     TM1650_setDigit@data:	
 11309                           ; 1 bytes @ 0x14
 11310                           
 11311  0034                     TM1650_fastPrintNum@num:	
 11312                           ; 1 bytes @ 0x14
 11313                           
 11314                           
 11315                           ; 2 bytes @ 0x14
 11316  0034                     	ds	1
 11317  0035                     ??_TM1650_setDigit:	
 11318                           
 11319                           ; 1 bytes @ 0x15
 11320  0035                     	ds	1
 11321  0036                     ??_TM1650_fastPrintNum:	
 11322  0036                     ??___fldiv:	
 11323                           ; 1 bytes @ 0x16
 11324                           
 11325  0036                     TM1650_setDigit@digit:	
 11326                           ; 1 bytes @ 0x16
 11327                           
 11328                           
 11329                           ; 1 bytes @ 0x16
 11330  0036                     	ds	1
 11331  0037                     ??_DMX_init:	
 11332  0037                     ??_CONTROL_DMX:	
 11333                           ; 1 bytes @ 0x17
 11334                           
 11335  0037                     ??_address_inc:	
 11336                           ; 1 bytes @ 0x17
 11337                           
 11338  0037                     ??_address_dec:	
 11339                           ; 1 bytes @ 0x17
 11340                           
 11341  0037                     ??_putch:	
 11342                           ; 1 bytes @ 0x17
 11343                           
 11344                           
 11345                           ; 1 bytes @ 0x17
 11346  0037                     	ds	1
 11347  0038                     putch@n:	
 11348                           
 11349                           ; 1 bytes @ 0x18
 11350  0038                     	ds	1
 11351  0039                     ?_fputc:	
 11352  0039                     fputc@c:	
 11353                           ; 2 bytes @ 0x19
 11354                           
 11355                           
 11356                           ; 2 bytes @ 0x19
 11357  0039                     	ds	2
 11358  003B                     fputc@fp:	
 11359  003B                     ___fldiv@rem:	
 11360                           ; 1 bytes @ 0x1B
 11361                           
 11362                           
 11363                           ; 4 bytes @ 0x1B
 11364  003B                     	ds	1
 11365  003C                     ??_fputc:	
 11366                           
 11367                           ; 1 bytes @ 0x1C
 11368  003C                     	ds	3
 11369  003F                     ___fldiv@sign:	
 11370                           
 11371                           ; 1 bytes @ 0x1F
 11372  003F                     	ds	1
 11373  0040                     ___fldiv@new_exp:	
 11374                           
 11375                           ; 2 bytes @ 0x20
 11376  0040                     	ds	1
 11377  0041                     ?_fputs:	
 11378  0041                     fputs@fp:	
 11379                           ; 2 bytes @ 0x21
 11380                           
 11381                           
 11382                           ; 1 bytes @ 0x21
 11383  0041                     	ds	1
 11384  0042                     ??_fputs:	
 11385  0042                     ___fldiv@grs:	
 11386                           ; 1 bytes @ 0x22
 11387                           
 11388                           
 11389                           ; 4 bytes @ 0x22
 11390  0042                     	ds	3
 11391  0045                     fputs@c:	
 11392                           
 11393                           ; 1 bytes @ 0x25
 11394  0045                     	ds	1
 11395  0046                     ___fldiv@bexp:	
 11396  0046                     fputs@i:	
 11397                           ; 1 bytes @ 0x26
 11398                           
 11399                           
 11400                           ; 2 bytes @ 0x26
 11401  0046                     	ds	1
 11402  0047                     ___fldiv@aexp:	
 11403                           
 11404                           ; 1 bytes @ 0x27
 11405  0047                     	ds	1
 11406  0048                     ?___flmul:	
 11407  0048                     fputs@s:	
 11408                           ; 4 bytes @ 0x28
 11409                           
 11410  0048                     ___flmul@b:	
 11411                           ; 1 bytes @ 0x28
 11412                           
 11413                           
 11414                           ; 4 bytes @ 0x28
 11415  0048                     	ds	1
 11416  0049                     ?_pad:	
 11417  0049                     pad@buf:	
 11418                           ; 2 bytes @ 0x29
 11419                           
 11420                           
 11421                           ; 1 bytes @ 0x29
 11422  0049                     	ds	1
 11423  004A                     pad@p:	
 11424                           
 11425                           ; 2 bytes @ 0x2A
 11426  004A                     	ds	2
 11427  004C                     ??_pad:	
 11428  004C                     ___flmul@a:	
 11429                           ; 1 bytes @ 0x2C
 11430                           
 11431                           
 11432                           ; 4 bytes @ 0x2C
 11433  004C                     	ds	1
 11434  004D                     pad@i:	
 11435                           
 11436                           ; 2 bytes @ 0x2D
 11437  004D                     	ds	2
 11438  004F                     pad@w:	
 11439                           
 11440                           ; 2 bytes @ 0x2F
 11441  004F                     	ds	1
 11442  0050                     ??___flmul:	
 11443                           
 11444                           ; 1 bytes @ 0x30
 11445  0050                     	ds	1
 11446  0051                     pad@fp:	
 11447                           
 11448                           ; 1 bytes @ 0x31
 11449  0051                     	ds	1
 11450  0052                     ?_ctoa:	
 11451  0052                     ctoa@c:	
 11452                           ; 2 bytes @ 0x32
 11453                           
 11454                           
 11455                           ; 1 bytes @ 0x32
 11456  0052                     	ds	2
 11457  0054                     ??_ctoa:	
 11458                           
 11459                           ; 1 bytes @ 0x34
 11460  0054                     	ds	1
 11461  0055                     ___flmul@sign:	
 11462  0055                     ctoa@w:	
 11463                           ; 1 bytes @ 0x35
 11464                           
 11465                           
 11466                           ; 2 bytes @ 0x35
 11467  0055                     	ds	1
 11468  0056                     ___flmul@aexp:	
 11469                           
 11470                           ; 1 bytes @ 0x36
 11471  0056                     	ds	1
 11472  0057                     ctoa@fp:	
 11473  0057                     ___flmul@grs:	
 11474                           ; 1 bytes @ 0x37
 11475                           
 11476                           
 11477                           ; 4 bytes @ 0x37
 11478  0057                     	ds	1
 11479  0058                     ?_vfpfcnvrt:	
 11480  0058                     vfpfcnvrt@fmt:	
 11481                           ; 2 bytes @ 0x38
 11482                           
 11483                           
 11484                           ; 1 bytes @ 0x38
 11485  0058                     	ds	1
 11486  0059                     vfpfcnvrt@ap:	
 11487                           
 11488                           ; 1 bytes @ 0x39
 11489  0059                     	ds	1
 11490  005A                     ??_vfpfcnvrt:	
 11491                           
 11492                           ; 1 bytes @ 0x3A
 11493  005A                     	ds	1
 11494  005B                     ___flmul@bexp:	
 11495                           
 11496                           ; 1 bytes @ 0x3B
 11497  005B                     	ds	1
 11498  005C                     ___flmul@prod:	
 11499                           
 11500                           ; 4 bytes @ 0x3C
 11501  005C                     	ds	3
 11502  005F                     vfpfcnvrt@c:	
 11503                           
 11504                           ; 1 bytes @ 0x3F
 11505  005F                     	ds	1
 11506  0060                     vfpfcnvrt@fp:	
 11507  0060                     ___flmul@temp:	
 11508                           ; 1 bytes @ 0x40
 11509                           
 11510                           
 11511                           ; 2 bytes @ 0x40
 11512  0060                     	ds	1
 11513  0061                     ?_vfprintf:	
 11514  0061                     vfprintf@fmt:	
 11515                           ; 2 bytes @ 0x41
 11516                           
 11517                           
 11518                           ; 2 bytes @ 0x41
 11519  0061                     	ds	1
 11520  0062                     ?___fltol:	
 11521  0062                     ___fltol@f1:	
 11522                           ; 4 bytes @ 0x42
 11523                           
 11524                           
 11525                           ; 4 bytes @ 0x42
 11526  0062                     	ds	1
 11527  0063                     vfprintf@ap:	
 11528                           
 11529                           ; 1 bytes @ 0x43
 11530  0063                     	ds	1
 11531  0064                     ??_vfprintf:	
 11532                           
 11533                           ; 1 bytes @ 0x44
 11534  0064                     	ds	2
 11535  0066                     ??___fltol:	
 11536  0066                     vfprintf@fp:	
 11537                           ; 1 bytes @ 0x46
 11538                           
 11539                           
 11540                           ; 1 bytes @ 0x46
 11541  0066                     	ds	1
 11542  0067                     vfprintf@cfmt:	
 11543                           
 11544                           ; 2 bytes @ 0x47
 11545  0067                     	ds	2
 11546  0069                     ??_printf:	
 11547                           
 11548                           ; 1 bytes @ 0x49
 11549  0069                     	ds	2
 11550  006B                     ___fltol@sign1:	
 11551                           
 11552                           ; 1 bytes @ 0x4B
 11553  006B                     	ds	1
 11554  006C                     ___fltol@exp1:	
 11555  006C                     printf@ap:	
 11556                           ; 1 bytes @ 0x4C
 11557                           
 11558                           
 11559                           ; 1 bytes @ 0x4C
 11560  006C                     	ds	1
 11561  006D                     ??_TM1650_init:	
 11562  006D                     ??_menuSelection:	
 11563                           ; 1 bytes @ 0x4D
 11564                           
 11565  006D                     ??_PWM3_LoadDutyValue:	
 11566                           ; 1 bytes @ 0x4D
 11567                           
 11568  006D                     ??_PWM4_LoadDutyValue:	
 11569                           ; 1 bytes @ 0x4D
 11570                           
 11571  006D                     ??_PWM1_LoadDutyValue:	
 11572                           ; 1 bytes @ 0x4D
 11573                           
 11574  006D                     ??_PWM2_LoadDutyValue:	
 11575                           ; 1 bytes @ 0x4D
 11576                           
 11577  006D                     beatBrightnessCalculation@temp:	
 11578                           ; 1 bytes @ 0x4D
 11579                           
 11580                           
 11581                           ; 1 bytes @ 0x4D
 11582  006D                     	ds	1
 11583  006E                     ??_beatColorCreator:	
 11584                           
 11585                           ; 1 bytes @ 0x4E
 11586  006E                     	ds	1
 11587  006F                     CONTROLLER_task@isActive:	
 11588                           
 11589                           ; 1 bytes @ 0x4F
 11590  006F                     	ds	1
 11591                           
 11592                           	psect	maintext
 11593  080B                     __pmaintext:	
 11594 ;;
 11595 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11596 ;;
 11597 ;; *************** function _main *****************
 11598 ;; Defined at:
 11599 ;;		line 58 in file "main.c"
 11600 ;; Parameters:    Size  Location     Type
 11601 ;;		None
 11602 ;; Auto vars:     Size  Location     Type
 11603 ;;		None
 11604 ;; Return value:  Size  Location     Type
 11605 ;;                  1    wreg      void 
 11606 ;; Registers used:
 11607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11608 ;; Tracked objects:
 11609 ;;		On entry : B3F/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11615 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11616 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11617 ;;Total ram usage:        2 bytes
 11618 ;; Hardware stack levels required when called:   19
 11619 ;; This function calls:
 11620 ;;		_BEAT_init
 11621 ;;		_BEAT_task
 11622 ;;		_BUTTONS_init
 11623 ;;		_BUTTONS_task
 11624 ;;		_CLOCK_getTime
 11625 ;;		_CLOCK_init
 11626 ;;		_CONTROLLER_task
 11627 ;;		_DMX_init
 11628 ;;		_LED_task
 11629 ;;		_SYSTEM_Initialize
 11630 ;;		_TM1650_init
 11631 ;; This function is called by:
 11632 ;;		Startup code after reset
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           
 11637                           ;psect for function _main
 11638  080B                     _main:	
 11639                           
 11640                           ;main.c: 61:     SYSTEM_Initialize();
 11641                           
 11642                           ;incstack = 0
 11643 ;; hardware stack exceeded
 11644                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11645  080B  3191  21CA  3188   	fcall	_SYSTEM_Initialize
 11646                           
 11647                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11648  080E  3015               	movlw	21
 11649  080F  0142               	movlb	2	; select bank2
 11650  0810  00EF               	movwf	(??_main^(0+256)+1)
 11651  0811  304B               	movlw	75
 11652  0812  00EE               	movwf	??_main^(0+256)
 11653  0813  30BE               	movlw	190
 11654  0814                     u8987:	
 11655  0814  0B89               	decfsz	9,f
 11656  0815  2814               	goto	u8987
 11657  0816  0BEE               	decfsz	??_main^(0+256),f
 11658  0817  2814               	goto	u8987
 11659  0818  0BEF               	decfsz	(??_main^(0+256)+1),f
 11660  0819  2814               	goto	u8987
 11661  081A  0000               	nop
 11662                           
 11663                           ;main.c: 63:     CLOCK_init();
 11664  081B  319E  267A  3188   	fcall	_CLOCK_init
 11665                           
 11666                           ;main.c: 64:     BUTTONS_init();
 11667  081E  3194  24CB  3188   	fcall	_BUTTONS_init
 11668                           
 11669                           ;main.c: 65:     BEAT_init();
 11670  0821  3190  2000  3188   	fcall	_BEAT_init
 11671                           
 11672                           ;main.c: 67:     (INTCONbits.GIE = 1);
 11673  0824  178B               	bsf	11,7	;volatile
 11674                           
 11675                           ;main.c: 68:     (INTCONbits.PEIE = 1);
 11676  0825  170B               	bsf	11,6	;volatile
 11677                           
 11678                           ;main.c: 70:     TM1650_init();
 11679  0826  319F  27C2  3188   	fcall	_TM1650_init
 11680                           
 11681                           ;main.c: 71:     DMX_init();
 11682  0829  319F  2787  3188   	fcall	_DMX_init
 11683                           
 11684                           ;main.c: 72:     startTime = CLOCK_getTime();
 11685  082C  319E  269D  3188   	fcall	_CLOCK_getTime
 11686  082F  0140               	movlb	0	; select bank0
 11687  0830  0821               	movf	?_CLOCK_getTime+1,w
 11688  0831  0142               	movlb	2	; select bank2
 11689  0832  00CB               	movwf	(_startTime+1)^(0+256)
 11690  0833  0140               	movlb	0	; select bank0
 11691  0834  0820               	movf	?_CLOCK_getTime,w
 11692  0835  0142               	movlb	2	; select bank2
 11693  0836  00CA               	movwf	_startTime^(0+256)
 11694  0837                     l8689:	
 11695                           
 11696                           ;main.c: 77:     {;main.c: 78:         BUTTONS_task();
 11697  0837  318D  25C9  3188   	fcall	_BUTTONS_task
 11698                           
 11699                           ;main.c: 79:         CONTROLLER_task();
 11700  083A  3182  22BC  3188   	fcall	_CONTROLLER_task
 11701                           
 11702                           ;main.c: 80:         BEAT_task();
 11703  083D  318C  24F7  3188   	fcall	_BEAT_task
 11704                           
 11705                           ;main.c: 81:         LED_task();
 11706  0840  318A  22CA  3188   	fcall	_LED_task
 11707  0843  2837               	goto	l8689
 11708  0844                     __end_of_main:	
 11709                           
 11710                           	psect	text1
 11711  1FC2                     __ptext1:	
 11712 ;; *************** function _TM1650_init *****************
 11713 ;; Defined at:
 11714 ;;		line 51 in file "tm1650.c"
 11715 ;; Parameters:    Size  Location     Type
 11716 ;;		None
 11717 ;; Auto vars:     Size  Location     Type
 11718 ;;		None
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  1    wreg      void 
 11721 ;; Registers used:
 11722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11723 ;; Tracked objects:
 11724 ;;		On entry : 0/0
 11725 ;;		On exit  : 0/0
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11732 ;;Total ram usage:        0 bytes
 11733 ;; Hardware stack levels used:    1
 11734 ;; Hardware stack levels required when called:   17
 11735 ;; This function calls:
 11736 ;;		_TM1650_enable
 11737 ;;		_printf
 11738 ;; This function is called by:
 11739 ;;		_main
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           
 11744                           ;psect for function _TM1650_init
 11745  1FC2                     _TM1650_init:	
 11746                           
 11747                           ;tm1650.c: 53:     TM1650_enable(1);
 11748                           
 11749                           ;incstack = 0
 11750 ;; hardware stack exceeded
 11751                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11752  1FC2  3001               	movlw	1
 11753  1FC3  319F  27D6  319F   	fcall	_TM1650_enable
 11754                           
 11755                           ;tm1650.c: 54:     printf("    ");
 11756  1FC6  3087               	movlw	low (STR_12| (0+32768))
 11757  1FC7  0141               	movlb	1	; select bank1
 11758  1FC8  00C7               	movwf	printf@fmt^(0+128)
 11759  1FC9  30A0               	movlw	high (STR_12| (0+32768))
 11760  1FCA  00C8               	movwf	(printf@fmt^(0+128)+1)
 11761  1FCB  319F  27EB  319F   	fcall	_printf
 11762                           
 11763                           ;tm1650.c: 55:     printf("\r");
 11764  1FCE  3067               	movlw	low ((STR_22+4)| (0+32768))
 11765  1FCF  0141               	movlb	1	; select bank1
 11766  1FD0  00C7               	movwf	printf@fmt^(0+128)
 11767  1FD1  30A0               	movlw	high ((STR_22+4)| (0+32768))
 11768  1FD2  00C8               	movwf	(printf@fmt^(0+128)+1)
 11769  1FD3  319F  27EB         	fcall	_printf
 11770  1FD5  0008               	return
 11771  1FD6                     __end_of_TM1650_init:	
 11772                           
 11773                           	psect	text2
 11774  11CA                     __ptext2:	
 11775 ;; *************** function _SYSTEM_Initialize *****************
 11776 ;; Defined at:
 11777 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;		None
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;		None
 11782 ;; Return value:  Size  Location     Type
 11783 ;;                  1    wreg      void 
 11784 ;; Registers used:
 11785 ;;		wreg, status,2, status,0, pclath, cstack
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11795 ;;Total ram usage:        0 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; Hardware stack levels required when called:    6
 11798 ;; This function calls:
 11799 ;;		_ADCC_Initialize
 11800 ;;		_EUSART1_Initialize
 11801 ;;		_I2C1_Initialize
 11802 ;;		_OSCILLATOR_Initialize
 11803 ;;		_PIN_MANAGER_Initialize
 11804 ;;		_PMD_Initialize
 11805 ;;		_PWM1_Initialize
 11806 ;;		_PWM2_Initialize
 11807 ;;		_PWM3_Initialize
 11808 ;;		_PWM4_Initialize
 11809 ;;		_TMR0_Initialize
 11810 ;;		_TMR2_Initialize
 11811 ;; This function is called by:
 11812 ;;		_main
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           
 11817                           ;psect for function _SYSTEM_Initialize
 11818  11CA                     _SYSTEM_Initialize:	
 11819                           
 11820                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11821                           
 11822                           ;incstack = 0
 11823                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11824  11CA  319E  26E5  3191   	fcall	_PMD_Initialize
 11825                           
 11826                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11827  11CD  3193  23E3  3191   	fcall	_PIN_MANAGER_Initialize
 11828                           
 11829                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11830  11D0  319E  26DC  3191   	fcall	_OSCILLATOR_Initialize
 11831                           
 11832                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 11833  11D3  3190  2092  3191   	fcall	_I2C1_Initialize
 11834                           
 11835                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 11836  11D6  319E  26EF  3191   	fcall	_PWM1_Initialize
 11837                           
 11838                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 11839  11D9  319E  26FA  3191   	fcall	_PWM2_Initialize
 11840                           
 11841                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 11842  11DC  3192  223A  3191   	fcall	_ADCC_Initialize
 11843                           
 11844                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 11845  11DF  3188  2000  3191   	fcall	_PWM4_Initialize
 11846                           
 11847                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 11848  11E2  319F  2705  3191   	fcall	_PWM3_Initialize
 11849                           
 11850                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 11851  11E5  319F  2736  3191   	fcall	_TMR2_Initialize
 11852                           
 11853                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 11854  11E8  319F  27AE  3191   	fcall	_TMR0_Initialize
 11855                           
 11856                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 11857  11EB  3193  2347         	fcall	_EUSART1_Initialize
 11858  11ED  0008               	return
 11859  11EE                     __end_of_SYSTEM_Initialize:	
 11860                           
 11861                           	psect	text3
 11862  1F36                     __ptext3:	
 11863 ;; *************** function _TMR2_Initialize *****************
 11864 ;; Defined at:
 11865 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;		None
 11868 ;; Auto vars:     Size  Location     Type
 11869 ;;		None
 11870 ;; Return value:  Size  Location     Type
 11871 ;;                  1    wreg      void 
 11872 ;; Registers used:
 11873 ;;		wreg, status,2
 11874 ;; Tracked objects:
 11875 ;;		On entry : 0/0
 11876 ;;		On exit  : 0/0
 11877 ;;		Unchanged: 0/0
 11878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11883 ;;Total ram usage:        0 bytes
 11884 ;; Hardware stack levels used:    1
 11885 ;; Hardware stack levels required when called:    4
 11886 ;; This function calls:
 11887 ;;		Nothing
 11888 ;; This function is called by:
 11889 ;;		_SYSTEM_Initialize
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           
 11894                           ;psect for function _TMR2_Initialize
 11895  1F36                     _TMR2_Initialize:	
 11896                           
 11897                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11898                           
 11899                           ;incstack = 0
 11900                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11901  1F36  3001               	movlw	1
 11902  1F37  0145               	movlb	5	; select bank5
 11903  1F38  0090               	movwf	16	;volatile
 11904                           
 11905                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11906  1F39  018F               	clrf	15	;volatile
 11907                           
 11908                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11909  1F3A  0191               	clrf	17	;volatile
 11910                           
 11911                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 11912  1F3B  30FF               	movlw	255
 11913  1F3C  008D               	movwf	13	;volatile
 11914                           
 11915                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11916  1F3D  018C               	clrf	12	;volatile
 11917                           
 11918                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11919  1F3E  014E               	movlb	14	; select bank14
 11920  1F3F  1090               	bcf	16,1	;volatile
 11921                           
 11922                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 11923  1F40  30F0               	movlw	240
 11924  1F41  0145               	movlb	5	; select bank5
 11925  1F42  008E               	movwf	14	;volatile
 11926  1F43  0008               	return
 11927  1F44                     __end_of_TMR2_Initialize:	
 11928                           
 11929                           	psect	text4
 11930  1FAE                     __ptext4:	
 11931 ;; *************** function _TMR0_Initialize *****************
 11932 ;; Defined at:
 11933 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 11934 ;; Parameters:    Size  Location     Type
 11935 ;;		None
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;		None
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  1    wreg      void 
 11940 ;; Registers used:
 11941 ;;		wreg, status,2, status,0, pclath, cstack
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11951 ;;Total ram usage:        0 bytes
 11952 ;; Hardware stack levels used:    1
 11953 ;; Hardware stack levels required when called:    5
 11954 ;; This function calls:
 11955 ;;		_TMR0_SetInterruptHandler
 11956 ;; This function is called by:
 11957 ;;		_SYSTEM_Initialize
 11958 ;; This function uses a non-reentrant model
 11959 ;;
 11960                           
 11961                           
 11962                           ;psect for function _TMR0_Initialize
 11963  1FAE                     _TMR0_Initialize:	
 11964                           
 11965                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 11966                           
 11967                           ;incstack = 0
 11968                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11969  1FAE  3045               	movlw	69
 11970  1FAF  014B               	movlb	11	; select bank11
 11971  1FB0  009F               	movwf	31	;volatile
 11972                           
 11973                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 11974  1FB1  30F9               	movlw	249
 11975  1FB2  009D               	movwf	29	;volatile
 11976                           
 11977                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 11978  1FB3  019C               	clrf	28	;volatile
 11979                           
 11980                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 11981  1FB4  014E               	movlb	14	; select bank14
 11982  1FB5  128C               	bcf	12,5	;volatile
 11983                           
 11984                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 11985  1FB6  1696               	bsf	22,5	;volatile
 11986                           
 11987                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 11988  1FB7  304E               	movlw	low _TMR0_DefaultInterruptHandler
 11989  1FB8  0140               	movlb	0	; select bank0
 11990  1FB9  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11991  1FBA  301E               	movlw	high _TMR0_DefaultInterruptHandler
 11992  1FBB  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11993  1FBC  319E  26A6         	fcall	_TMR0_SetInterruptHandler
 11994                           
 11995                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 11996  1FBE  3080               	movlw	128
 11997  1FBF  014B               	movlb	11	; select bank11
 11998  1FC0  009E               	movwf	30	;volatile
 11999  1FC1  0008               	return
 12000  1FC2                     __end_of_TMR0_Initialize:	
 12001                           
 12002                           	psect	text5
 12003  0800                     __ptext5:	
 12004 ;; *************** function _PWM4_Initialize *****************
 12005 ;; Defined at:
 12006 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12007 ;; Parameters:    Size  Location     Type
 12008 ;;		None
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;		None
 12011 ;; Return value:  Size  Location     Type
 12012 ;;                  1    wreg      void 
 12013 ;; Registers used:
 12014 ;;		wreg, status,2, status,0
 12015 ;; Tracked objects:
 12016 ;;		On entry : 0/0
 12017 ;;		On exit  : 0/0
 12018 ;;		Unchanged: 0/0
 12019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12024 ;;Total ram usage:        0 bytes
 12025 ;; Hardware stack levels used:    1
 12026 ;; Hardware stack levels required when called:    4
 12027 ;; This function calls:
 12028 ;;		Nothing
 12029 ;; This function is called by:
 12030 ;;		_SYSTEM_Initialize
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           
 12035                           ;psect for function _PWM4_Initialize
 12036  0800                     _PWM4_Initialize:	
 12037                           
 12038                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12039                           
 12040                           ;incstack = 0
 12041                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12042  0800  308C               	movlw	140
 12043  0801  0146               	movlb	6	; select bank6
 12044  0802  009A               	movwf	26	;volatile
 12045                           
 12046                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12047  0803  0199               	clrf	25	;volatile
 12048                           
 12049                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12050  0804  0198               	clrf	24	;volatile
 12051                           
 12052                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12053  0805  0144               	movlb	4	; select bank4
 12054  0806  081E               	movf	30,w	;volatile
 12055  0807  393F               	andlw	-193
 12056  0808  3840               	iorlw	64
 12057  0809  009E               	movwf	30	;volatile
 12058  080A  0008               	return
 12059  080B                     __end_of_PWM4_Initialize:	
 12060                           
 12061                           	psect	text6
 12062  1F05                     __ptext6:	
 12063 ;; *************** function _PWM3_Initialize *****************
 12064 ;; Defined at:
 12065 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;		None
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;		None
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      void 
 12072 ;; Registers used:
 12073 ;;		wreg, status,2, status,0
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12083 ;;Total ram usage:        0 bytes
 12084 ;; Hardware stack levels used:    1
 12085 ;; Hardware stack levels required when called:    4
 12086 ;; This function calls:
 12087 ;;		Nothing
 12088 ;; This function is called by:
 12089 ;;		_SYSTEM_Initialize
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093                           
 12094                           ;psect for function _PWM3_Initialize
 12095  1F05                     _PWM3_Initialize:	
 12096                           
 12097                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12098                           
 12099                           ;incstack = 0
 12100                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12101  1F05  308C               	movlw	140
 12102  1F06  0146               	movlb	6	; select bank6
 12103  1F07  0096               	movwf	22	;volatile
 12104                           
 12105                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12106  1F08  0195               	clrf	21	;volatile
 12107                           
 12108                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12109  1F09  0194               	clrf	20	;volatile
 12110                           
 12111                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12112  1F0A  0144               	movlb	4	; select bank4
 12113  1F0B  081E               	movf	30,w	;volatile
 12114  1F0C  39CF               	andlw	-49
 12115  1F0D  3810               	iorlw	16
 12116  1F0E  009E               	movwf	30	;volatile
 12117  1F0F  0008               	return
 12118  1F10                     __end_of_PWM3_Initialize:	
 12119                           
 12120                           	psect	text7
 12121  1EFA                     __ptext7:	
 12122 ;; *************** function _PWM2_Initialize *****************
 12123 ;; Defined at:
 12124 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12125 ;; Parameters:    Size  Location     Type
 12126 ;;		None
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;		None
 12129 ;; Return value:  Size  Location     Type
 12130 ;;                  1    wreg      void 
 12131 ;; Registers used:
 12132 ;;		wreg, status,2, status,0
 12133 ;; Tracked objects:
 12134 ;;		On entry : 0/0
 12135 ;;		On exit  : 0/0
 12136 ;;		Unchanged: 0/0
 12137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12142 ;;Total ram usage:        0 bytes
 12143 ;; Hardware stack levels used:    1
 12144 ;; Hardware stack levels required when called:    4
 12145 ;; This function calls:
 12146 ;;		Nothing
 12147 ;; This function is called by:
 12148 ;;		_SYSTEM_Initialize
 12149 ;; This function uses a non-reentrant model
 12150 ;;
 12151                           
 12152                           
 12153                           ;psect for function _PWM2_Initialize
 12154  1EFA                     _PWM2_Initialize:	
 12155                           
 12156                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12157                           
 12158                           ;incstack = 0
 12159                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12160  1EFA  308C               	movlw	140
 12161  1EFB  0146               	movlb	6	; select bank6
 12162  1EFC  0092               	movwf	18	;volatile
 12163                           
 12164                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12165  1EFD  0191               	clrf	17	;volatile
 12166                           
 12167                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12168  1EFE  0190               	clrf	16	;volatile
 12169                           
 12170                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12171  1EFF  0144               	movlb	4	; select bank4
 12172  1F00  081E               	movf	30,w	;volatile
 12173  1F01  39F3               	andlw	-13
 12174  1F02  3804               	iorlw	4
 12175  1F03  009E               	movwf	30	;volatile
 12176  1F04  0008               	return
 12177  1F05                     __end_of_PWM2_Initialize:	
 12178                           
 12179                           	psect	text8
 12180  1EEF                     __ptext8:	
 12181 ;; *************** function _PWM1_Initialize *****************
 12182 ;; Defined at:
 12183 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12184 ;; Parameters:    Size  Location     Type
 12185 ;;		None
 12186 ;; Auto vars:     Size  Location     Type
 12187 ;;		None
 12188 ;; Return value:  Size  Location     Type
 12189 ;;                  1    wreg      void 
 12190 ;; Registers used:
 12191 ;;		wreg, status,2, status,0
 12192 ;; Tracked objects:
 12193 ;;		On entry : 0/0
 12194 ;;		On exit  : 0/0
 12195 ;;		Unchanged: 0/0
 12196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12201 ;;Total ram usage:        0 bytes
 12202 ;; Hardware stack levels used:    1
 12203 ;; Hardware stack levels required when called:    4
 12204 ;; This function calls:
 12205 ;;		Nothing
 12206 ;; This function is called by:
 12207 ;;		_SYSTEM_Initialize
 12208 ;; This function uses a non-reentrant model
 12209 ;;
 12210                           
 12211                           
 12212                           ;psect for function _PWM1_Initialize
 12213  1EEF                     _PWM1_Initialize:	
 12214                           
 12215                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12216                           
 12217                           ;incstack = 0
 12218                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12219  1EEF  308C               	movlw	140
 12220  1EF0  0146               	movlb	6	; select bank6
 12221  1EF1  008E               	movwf	14	;volatile
 12222                           
 12223                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12224  1EF2  018D               	clrf	13	;volatile
 12225                           
 12226                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12227  1EF3  018C               	clrf	12	;volatile
 12228                           
 12229                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12230  1EF4  0144               	movlb	4	; select bank4
 12231  1EF5  081E               	movf	30,w	;volatile
 12232  1EF6  39FC               	andlw	-4
 12233  1EF7  3801               	iorlw	1
 12234  1EF8  009E               	movwf	30	;volatile
 12235  1EF9  0008               	return
 12236  1EFA                     __end_of_PWM1_Initialize:	
 12237                           
 12238                           	psect	text9
 12239  1EE5                     __ptext9:	
 12240 ;; *************** function _PMD_Initialize *****************
 12241 ;; Defined at:
 12242 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12243 ;; Parameters:    Size  Location     Type
 12244 ;;		None
 12245 ;; Auto vars:     Size  Location     Type
 12246 ;;		None
 12247 ;; Return value:  Size  Location     Type
 12248 ;;                  1    wreg      void 
 12249 ;; Registers used:
 12250 ;;		status,2
 12251 ;; Tracked objects:
 12252 ;;		On entry : 0/0
 12253 ;;		On exit  : 0/0
 12254 ;;		Unchanged: 0/0
 12255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12260 ;;Total ram usage:        0 bytes
 12261 ;; Hardware stack levels used:    1
 12262 ;; Hardware stack levels required when called:    4
 12263 ;; This function calls:
 12264 ;;		Nothing
 12265 ;; This function is called by:
 12266 ;;		_SYSTEM_Initialize
 12267 ;; This function uses a non-reentrant model
 12268 ;;
 12269                           
 12270                           
 12271                           ;psect for function _PMD_Initialize
 12272  1EE5                     _PMD_Initialize:	
 12273                           
 12274                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12275                           
 12276                           ;incstack = 0
 12277                           ; Regs used in _PMD_Initialize: [status,2]
 12278  1EE5  014F               	movlb	15	; select bank15
 12279  1EE6  0196               	clrf	22	;volatile
 12280                           
 12281                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12282  1EE7  0197               	clrf	23	;volatile
 12283                           
 12284                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12285  1EE8  0198               	clrf	24	;volatile
 12286                           
 12287                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12288  1EE9  0199               	clrf	25	;volatile
 12289                           
 12290                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12291  1EEA  019A               	clrf	26	;volatile
 12292                           
 12293                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12294  1EEB  019B               	clrf	27	;volatile
 12295                           
 12296                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12297  1EEC  019C               	clrf	28	;volatile
 12298                           
 12299                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12300  1EED  019D               	clrf	29	;volatile
 12301  1EEE  0008               	return
 12302  1EEF                     __end_of_PMD_Initialize:	
 12303                           
 12304                           	psect	text10
 12305  13E3                     __ptext10:	
 12306 ;; *************** function _PIN_MANAGER_Initialize *****************
 12307 ;; Defined at:
 12308 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12309 ;; Parameters:    Size  Location     Type
 12310 ;;		None
 12311 ;; Auto vars:     Size  Location     Type
 12312 ;;		None
 12313 ;; Return value:  Size  Location     Type
 12314 ;;                  1    wreg      void 
 12315 ;; Registers used:
 12316 ;;		wreg, status,2
 12317 ;; Tracked objects:
 12318 ;;		On entry : 0/0
 12319 ;;		On exit  : 0/0
 12320 ;;		Unchanged: 0/0
 12321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12326 ;;Total ram usage:        0 bytes
 12327 ;; Hardware stack levels used:    1
 12328 ;; Hardware stack levels required when called:    4
 12329 ;; This function calls:
 12330 ;;		Nothing
 12331 ;; This function is called by:
 12332 ;;		_SYSTEM_Initialize
 12333 ;; This function uses a non-reentrant model
 12334 ;;
 12335                           
 12336                           
 12337                           ;psect for function _PIN_MANAGER_Initialize
 12338  13E3                     _PIN_MANAGER_Initialize:	
 12339                           
 12340                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12341                           
 12342                           ;incstack = 0
 12343                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12344  13E3  0140               	movlb	0	; select bank0
 12345  13E4  0198               	clrf	24	;volatile
 12346                           
 12347                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12348  13E5  0199               	clrf	25	;volatile
 12349                           
 12350                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12351  13E6  019A               	clrf	26	;volatile
 12352                           
 12353                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12354  13E7  303F               	movlw	63
 12355  13E8  0092               	movwf	18	;volatile
 12356                           
 12357                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12358  13E9  30F0               	movlw	240
 12359  13EA  0093               	movwf	19	;volatile
 12360                           
 12361                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x06;
 12362  13EB  3006               	movlw	6
 12363  13EC  0094               	movwf	20	;volatile
 12364                           
 12365                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12366  13ED  30FF               	movlw	255
 12367  13EE  017E               	movlb	62	; select bank62
 12368  13EF  00CE               	movwf	78	;volatile
 12369                           
 12370                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12371  13F0  30E0               	movlw	224
 12372  13F1  00C3               	movwf	67	;volatile
 12373                           
 12374                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12375  13F2  3007               	movlw	7
 12376  13F3  00B8               	movwf	56	;volatile
 12377                           
 12378                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12379  13F4  01C4               	clrf	68	;volatile
 12380                           
 12381                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12382  13F5  01B9               	clrf	57	;volatile
 12383                           
 12384                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12385  13F6  01CF               	clrf	79	;volatile
 12386                           
 12387                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12388  13F7  01BA               	clrf	58	;volatile
 12389                           
 12390                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12391  13F8  01C5               	clrf	69	;volatile
 12392                           
 12393                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12394  13F9  01D0               	clrf	80	;volatile
 12395                           
 12396                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12397  13FA  3037               	movlw	55
 12398  13FB  00BB               	movwf	59	;volatile
 12399                           
 12400                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12401  13FC  30F0               	movlw	240
 12402  13FD  00C6               	movwf	70	;volatile
 12403                           
 12404                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12405  13FE  30FF               	movlw	255
 12406  13FF  00D1               	movwf	81	;volatile
 12407                           
 12408                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12409  1400  3005               	movlw	5
 12410  1401  017D               	movlb	61	; select bank61
 12411  1402  00C5               	movwf	69	;volatile
 12412                           
 12413                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12414  1403  3014               	movlw	20
 12415  1404  017E               	movlb	62	; select bank62
 12416  1405  0094               	movwf	20	;volatile
 12417                           
 12418                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12419  1406  300B               	movlw	11
 12420  1407  00A3               	movwf	35	;volatile
 12421                           
 12422                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12423  1408  300C               	movlw	12
 12424  1409  00A4               	movwf	36	;volatile
 12425                           
 12426                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12427  140A  3013               	movlw	19
 12428  140B  0095               	movwf	21	;volatile
 12429                           
 12430                           ;mcc_generated_files/pin_manager.c: 111:     RC5PPS = 0x09;
 12431  140C  3009               	movlw	9
 12432  140D  00A5               	movwf	37	;volatile
 12433                           
 12434                           ;mcc_generated_files/pin_manager.c: 112:     RC6PPS = 0x0A;
 12435  140E  300A               	movlw	10
 12436  140F  00A6               	movwf	38	;volatile
 12437                           
 12438                           ;mcc_generated_files/pin_manager.c: 113:     RC7PPS = 0x09;
 12439  1410  3009               	movlw	9
 12440  1411  00A7               	movwf	39	;volatile
 12441                           
 12442                           ;mcc_generated_files/pin_manager.c: 114:     SSP1DATPPS = 0x04;
 12443  1412  3004               	movlw	4
 12444  1413  017D               	movlb	61	; select bank61
 12445  1414  00C6               	movwf	70	;volatile
 12446                           
 12447                           ;mcc_generated_files/pin_manager.c: 115:     RX1DTPPS = 0x0C;
 12448  1415  300C               	movlw	12
 12449  1416  00CB               	movwf	75	;volatile
 12450  1417  0008               	return
 12451  1418                     __end_of_PIN_MANAGER_Initialize:	
 12452                           
 12453                           	psect	text11
 12454  1EDC                     __ptext11:	
 12455 ;; *************** function _OSCILLATOR_Initialize *****************
 12456 ;; Defined at:
 12457 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12458 ;; Parameters:    Size  Location     Type
 12459 ;;		None
 12460 ;; Auto vars:     Size  Location     Type
 12461 ;;		None
 12462 ;; Return value:  Size  Location     Type
 12463 ;;                  1    wreg      void 
 12464 ;; Registers used:
 12465 ;;		wreg, status,2
 12466 ;; Tracked objects:
 12467 ;;		On entry : 0/0
 12468 ;;		On exit  : 0/0
 12469 ;;		Unchanged: 0/0
 12470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12475 ;;Total ram usage:        0 bytes
 12476 ;; Hardware stack levels used:    1
 12477 ;; Hardware stack levels required when called:    4
 12478 ;; This function calls:
 12479 ;;		Nothing
 12480 ;; This function is called by:
 12481 ;;		_SYSTEM_Initialize
 12482 ;; This function uses a non-reentrant model
 12483 ;;
 12484                           
 12485                           
 12486                           ;psect for function _OSCILLATOR_Initialize
 12487  1EDC                     _OSCILLATOR_Initialize:	
 12488                           
 12489                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12490                           
 12491                           ;incstack = 0
 12492                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12493  1EDC  3060               	movlw	96
 12494  1EDD  0151               	movlb	17	; select bank17
 12495  1EDE  008D               	movwf	13	;volatile
 12496                           
 12497                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12498  1EDF  018F               	clrf	15	;volatile
 12499                           
 12500                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12501  1EE0  0191               	clrf	17	;volatile
 12502                           
 12503                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12504  1EE1  3006               	movlw	6
 12505  1EE2  0093               	movwf	19	;volatile
 12506                           
 12507                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12508  1EE3  0192               	clrf	18	;volatile
 12509  1EE4  0008               	return
 12510  1EE5                     __end_of_OSCILLATOR_Initialize:	
 12511                           
 12512                           	psect	text12
 12513  1092                     __ptext12:	
 12514 ;; *************** function _I2C1_Initialize *****************
 12515 ;; Defined at:
 12516 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12517 ;; Parameters:    Size  Location     Type
 12518 ;;		None
 12519 ;; Auto vars:     Size  Location     Type
 12520 ;;		None
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  1    wreg      void 
 12523 ;; Registers used:
 12524 ;;		wreg, status,2
 12525 ;; Tracked objects:
 12526 ;;		On entry : 0/0
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12532 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12533 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12534 ;;Total ram usage:        1 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:    4
 12537 ;; This function calls:
 12538 ;;		Nothing
 12539 ;; This function is called by:
 12540 ;;		_SYSTEM_Initialize
 12541 ;; This function uses a non-reentrant model
 12542 ;;
 12543                           
 12544                           
 12545                           ;psect for function _I2C1_Initialize
 12546  1092                     _I2C1_Initialize:	
 12547                           
 12548                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12549                           
 12550                           ;incstack = 0
 12551                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12552  1092  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12553  1093  0140               	movlb	0	; select bank0
 12554  1094  00A0               	movwf	??_I2C1_Initialize
 12555  1095  0820               	movf	??_I2C1_Initialize,w
 12556  1096  0141               	movlb	1	; select bank1
 12557  1097  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12558                           
 12559                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12560  1098  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12561  1099  0140               	movlb	0	; select bank0
 12562  109A  00A0               	movwf	??_I2C1_Initialize
 12563  109B  0820               	movf	??_I2C1_Initialize,w
 12564  109C  0141               	movlb	1	; select bank1
 12565  109D  00A0               	movwf	_i2c1_object^(0+128)
 12566                           
 12567                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12568  109E  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12569                           
 12570                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12571  109F  1022               	bcf	(_i2c1_object^(0+128)+2),0
 12572                           
 12573                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12574  10A0  01A4               	clrf	(_i2c1_object^(0+128)+4)
 12575                           
 12576                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12577  10A1  0143               	movlb	3	; select bank3
 12578  10A2  018F               	clrf	15	;volatile
 12579                           
 12580                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12581  10A3  3028               	movlw	40
 12582  10A4  0090               	movwf	16	;volatile
 12583                           
 12584                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12585  10A5  0192               	clrf	18	;volatile
 12586                           
 12587                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12588  10A6  304F               	movlw	79
 12589  10A7  008D               	movwf	13	;volatile
 12590                           
 12591                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12592  10A8  014E               	movlb	14	; select bank14
 12593  10A9  100F               	bcf	15,0	;volatile
 12594                           
 12595                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12596  10AA  108F               	bcf	15,1	;volatile
 12597                           
 12598                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12599  10AB  1419               	bsf	25,0	;volatile
 12600                           
 12601                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12602  10AC  1499               	bsf	25,1	;volatile
 12603  10AD  0008               	return
 12604  10AE                     __end_of_I2C1_Initialize:	
 12605                           
 12606                           	psect	text13
 12607  1347                     __ptext13:	
 12608 ;; *************** function _EUSART1_Initialize *****************
 12609 ;; Defined at:
 12610 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;		None
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;		None
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  1    wreg      void 
 12617 ;; Registers used:
 12618 ;;		wreg, status,2, status,0, pclath, cstack
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12628 ;;Total ram usage:        0 bytes
 12629 ;; Hardware stack levels used:    1
 12630 ;; Hardware stack levels required when called:    5
 12631 ;; This function calls:
 12632 ;;		_EUSART1_SetErrorHandler
 12633 ;;		_EUSART1_SetFramingErrorHandler
 12634 ;;		_EUSART1_SetOverrunErrorHandler
 12635 ;;		_EUSART1_SetRxInterruptHandler
 12636 ;; This function is called by:
 12637 ;;		_SYSTEM_Initialize
 12638 ;; This function uses a non-reentrant model
 12639 ;;
 12640                           
 12641                           
 12642                           ;psect for function _EUSART1_Initialize
 12643  1347                     _EUSART1_Initialize:	
 12644                           
 12645                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12646                           
 12647                           ;incstack = 0
 12648                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12649  1347  014E               	movlb	14	; select bank14
 12650  1348  1299               	bcf	25,5	;volatile
 12651                           
 12652                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12653  1349  307A               	movlw	low _EUSART1_Receive_ISR
 12654  134A  0140               	movlb	0	; select bank0
 12655  134B  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12656  134C  3013               	movlw	high _EUSART1_Receive_ISR
 12657  134D  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12658  134E  319E  26AF  3193   	fcall	_EUSART1_SetRxInterruptHandler
 12659                           
 12660                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12661  1351  3008               	movlw	8
 12662  1352  0142               	movlb	2	; select bank2
 12663  1353  009F               	movwf	31	;volatile
 12664                           
 12665                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12666  1354  3090               	movlw	144
 12667  1355  009D               	movwf	29	;volatile
 12668                           
 12669                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12670  1356  3004               	movlw	4
 12671  1357  009E               	movwf	30	;volatile
 12672                           
 12673                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12674  1358  301F               	movlw	31
 12675  1359  009B               	movwf	27	;volatile
 12676                           
 12677                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12678  135A  019C               	clrf	28	;volatile
 12679                           
 12680                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12681  135B  304D               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12682  135C  0140               	movlb	0	; select bank0
 12683  135D  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12684  135E  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12685  135F  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12686  1360  319E  26CA  3193   	fcall	_EUSART1_SetFramingErrorHandler
 12687                           
 12688                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12689  1363  3067               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12690  1364  0140               	movlb	0	; select bank0
 12691  1365  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12692  1366  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12693  1367  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12694  1368  319E  26D3  3193   	fcall	_EUSART1_SetOverrunErrorHandler
 12695                           
 12696                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12697  136B  3054               	movlw	low _EUSART1_DefaultErrorHandler
 12698  136C  0140               	movlb	0	; select bank0
 12699  136D  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12700  136E  301E               	movlw	high _EUSART1_DefaultErrorHandler
 12701  136F  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12702  1370  319E  26C1         	fcall	_EUSART1_SetErrorHandler
 12703                           
 12704                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12705  1372  0141               	movlb	1	; select bank1
 12706  1373  01C5               	clrf	_eusart1RxLastError^(0+128)	;volatile
 12707                           
 12708                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12709  1374  01F9               	clrf	_eusart1RxHead	;volatile
 12710                           
 12711                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12712  1375  01F8               	clrf	_eusart1RxTail	;volatile
 12713                           
 12714                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12715  1376  01C6               	clrf	_eusart1RxCount^(0+128)	;volatile
 12716                           
 12717                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12718  1377  014E               	movlb	14	; select bank14
 12719  1378  1699               	bsf	25,5	;volatile
 12720  1379  0008               	return
 12721  137A                     __end_of_EUSART1_Initialize:	
 12722                           
 12723                           	psect	text14
 12724  1ED3                     __ptext14:	
 12725 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12726 ;; Defined at:
 12727 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12730 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12731 ;; Auto vars:     Size  Location     Type
 12732 ;;		None
 12733 ;; Return value:  Size  Location     Type
 12734 ;;                  1    wreg      void 
 12735 ;; Registers used:
 12736 ;;		wreg
 12737 ;; Tracked objects:
 12738 ;;		On entry : 0/0
 12739 ;;		On exit  : 0/0
 12740 ;;		Unchanged: 0/0
 12741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12742 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12745 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12746 ;;Total ram usage:        2 bytes
 12747 ;; Hardware stack levels used:    1
 12748 ;; Hardware stack levels required when called:    4
 12749 ;; This function calls:
 12750 ;;		Nothing
 12751 ;; This function is called by:
 12752 ;;		_EUSART1_Initialize
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           
 12757                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12758  1ED3                     _EUSART1_SetOverrunErrorHandler:	
 12759                           
 12760                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12761                           
 12762                           ;incstack = 0
 12763                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12764  1ED3  0140               	movlb	0	; select bank0
 12765  1ED4  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12766  1ED5  0142               	movlb	2	; select bank2
 12767  1ED6  00DF               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12768  1ED7  0140               	movlb	0	; select bank0
 12769  1ED8  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12770  1ED9  0142               	movlb	2	; select bank2
 12771  1EDA  00DE               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12772  1EDB  0008               	return
 12773  1EDC                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12774                           
 12775                           	psect	text15
 12776  1ECA                     __ptext15:	
 12777 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12778 ;; Defined at:
 12779 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12780 ;; Parameters:    Size  Location     Type
 12781 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12782 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;		None
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  1    wreg      void 
 12787 ;; Registers used:
 12788 ;;		wreg
 12789 ;; Tracked objects:
 12790 ;;		On entry : 0/0
 12791 ;;		On exit  : 0/0
 12792 ;;		Unchanged: 0/0
 12793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12797 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12798 ;;Total ram usage:        2 bytes
 12799 ;; Hardware stack levels used:    1
 12800 ;; Hardware stack levels required when called:    4
 12801 ;; This function calls:
 12802 ;;		Nothing
 12803 ;; This function is called by:
 12804 ;;		_EUSART1_Initialize
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           
 12809                           ;psect for function _EUSART1_SetFramingErrorHandler
 12810  1ECA                     _EUSART1_SetFramingErrorHandler:	
 12811                           
 12812                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12813                           
 12814                           ;incstack = 0
 12815                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12816  1ECA  0140               	movlb	0	; select bank0
 12817  1ECB  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12818  1ECC  0142               	movlb	2	; select bank2
 12819  1ECD  00E1               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12820  1ECE  0140               	movlb	0	; select bank0
 12821  1ECF  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12822  1ED0  0142               	movlb	2	; select bank2
 12823  1ED1  00E0               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12824  1ED2  0008               	return
 12825  1ED3                     __end_of_EUSART1_SetFramingErrorHandler:	
 12826                           
 12827                           	psect	text16
 12828  1EC1                     __ptext16:	
 12829 ;; *************** function _EUSART1_SetErrorHandler *****************
 12830 ;; Defined at:
 12831 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 12832 ;; Parameters:    Size  Location     Type
 12833 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12834 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;		None
 12837 ;; Return value:  Size  Location     Type
 12838 ;;                  1    wreg      void 
 12839 ;; Registers used:
 12840 ;;		wreg
 12841 ;; Tracked objects:
 12842 ;;		On entry : 0/0
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12846 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12849 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12850 ;;Total ram usage:        2 bytes
 12851 ;; Hardware stack levels used:    1
 12852 ;; Hardware stack levels required when called:    4
 12853 ;; This function calls:
 12854 ;;		Nothing
 12855 ;; This function is called by:
 12856 ;;		_EUSART1_Initialize
 12857 ;; This function uses a non-reentrant model
 12858 ;;
 12859                           
 12860                           
 12861                           ;psect for function _EUSART1_SetErrorHandler
 12862  1EC1                     _EUSART1_SetErrorHandler:	
 12863                           
 12864                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 12865                           
 12866                           ;incstack = 0
 12867                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 12868  1EC1  0140               	movlb	0	; select bank0
 12869  1EC2  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 12870  1EC3  0142               	movlb	2	; select bank2
 12871  1EC4  00DD               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 12872  1EC5  0140               	movlb	0	; select bank0
 12873  1EC6  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 12874  1EC7  0142               	movlb	2	; select bank2
 12875  1EC8  00DC               	movwf	_EUSART1_ErrorHandler^(0+256)
 12876  1EC9  0008               	return
 12877  1ECA                     __end_of_EUSART1_SetErrorHandler:	
 12878                           
 12879                           	psect	text17
 12880  123A                     __ptext17:	
 12881 ;; *************** function _ADCC_Initialize *****************
 12882 ;; Defined at:
 12883 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;		None
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;		None
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  1    wreg      void 
 12890 ;; Registers used:
 12891 ;;		wreg, status,2, status,0, pclath, cstack
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12901 ;;Total ram usage:        0 bytes
 12902 ;; Hardware stack levels used:    1
 12903 ;; Hardware stack levels required when called:    5
 12904 ;; This function calls:
 12905 ;;		_ADCC_SetADTIInterruptHandler
 12906 ;; This function is called by:
 12907 ;;		_SYSTEM_Initialize
 12908 ;; This function uses a non-reentrant model
 12909 ;;
 12910                           
 12911                           
 12912                           ;psect for function _ADCC_Initialize
 12913  123A                     _ADCC_Initialize:	
 12914                           
 12915                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12916                           
 12917                           ;incstack = 0
 12918                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12919  123A  0141               	movlb	1	; select bank1
 12920  123B  018C               	clrf	12	;volatile
 12921                           
 12922                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12923  123C  018D               	clrf	13	;volatile
 12924                           
 12925                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12926  123D  018E               	clrf	14	;volatile
 12927                           
 12928                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12929  123E  018F               	clrf	15	;volatile
 12930                           
 12931                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12932  123F  0192               	clrf	18	;volatile
 12933                           
 12934                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12935  1240  0193               	clrf	19	;volatile
 12936                           
 12937                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12938  1241  0198               	clrf	24	;volatile
 12939                           
 12940                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12941  1242  019A               	clrf	26	;volatile
 12942                           
 12943                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12944  1243  019F               	clrf	31	;volatile
 12945                           
 12946                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12947  1244  0142               	movlb	2	; select bank2
 12948  1245  018C               	clrf	12	;volatile
 12949                           
 12950                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12951  1246  018D               	clrf	13	;volatile
 12952                           
 12953                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12954  1247  018E               	clrf	14	;volatile
 12955                           
 12956                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12957  1248  018F               	clrf	15	;volatile
 12958                           
 12959                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12960  1249  0190               	clrf	16	;volatile
 12961                           
 12962                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12963  124A  0192               	clrf	18	;volatile
 12964                           
 12965                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 12966  124B  3054               	movlw	84
 12967  124C  0093               	movwf	19	;volatile
 12968                           
 12969                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 12970  124D  3056               	movlw	86
 12971  124E  0094               	movwf	20	;volatile
 12972                           
 12973                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12974  124F  0195               	clrf	21	;volatile
 12975                           
 12976                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 12977  1250  0196               	clrf	22	;volatile
 12978                           
 12979                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12980  1251  0197               	clrf	23	;volatile
 12981                           
 12982                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12983  1252  0198               	clrf	24	;volatile
 12984                           
 12985                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 12986  1253  30D4               	movlw	212
 12987  1254  0091               	movwf	17	;volatile
 12988                           
 12989                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 12990  1255  014E               	movlb	14	; select bank14
 12991  1256  108D               	bcf	13,1	;volatile
 12992                           
 12993                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 12994  1257  1497               	bsf	23,1	;volatile
 12995                           
 12996                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 12997  1258  304C               	movlw	low _ADCC_DefaultInterruptHandler
 12998  1259  0140               	movlb	0	; select bank0
 12999  125A  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13000  125B  301E               	movlw	high _ADCC_DefaultInterruptHandler
 13001  125C  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13002  125D  319E  2682         	fcall	_ADCC_SetADTIInterruptHandler
 13003  125F  0008               	return
 13004  1260                     __end_of_ADCC_Initialize:	
 13005                           
 13006                           	psect	text18
 13007  0ACA                     __ptext18:	
 13008 ;; *************** function _LED_task *****************
 13009 ;; Defined at:
 13010 ;;		line 53 in file "led.c"
 13011 ;; Parameters:    Size  Location     Type
 13012 ;;		None
 13013 ;; Auto vars:     Size  Location     Type
 13014 ;;		None
 13015 ;; Return value:  Size  Location     Type
 13016 ;;                  1    wreg      void 
 13017 ;; Registers used:
 13018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13019 ;; Tracked objects:
 13020 ;;		On entry : 0/0
 13021 ;;		On exit  : 0/0
 13022 ;;		Unchanged: 0/0
 13023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13026 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13027 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13028 ;;Total ram usage:        2 bytes
 13029 ;; Hardware stack levels used:    1
 13030 ;; Hardware stack levels required when called:    9
 13031 ;; This function calls:
 13032 ;;		_LED_setColor
 13033 ;;		_LED_task_ANIMATION
 13034 ;;		_LED_task_BEAT_CONTINUOUS
 13035 ;;		_LED_task_BEAT_FADE
 13036 ;;		_LED_task_BEAT_MIXED
 13037 ;;		_LED_task_BEAT_STROBE
 13038 ;;		_LED_task_DMX
 13039 ;;		_LED_task_MANUAL
 13040 ;;		_beatColorCreator
 13041 ;;		_getIsHold
 13042 ;;		_getMode
 13043 ;; This function is called by:
 13044 ;;		_main
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048                           
 13049                           ;psect for function _LED_task
 13050  0ACA                     _LED_task:	
 13051                           
 13052                           ;led.c: 55:     switch(getMode()) {
 13053                           
 13054                           ;incstack = 0
 13055                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13056  0ACA  2B5A               	goto	l8657
 13057  0ACB                     l8621:	
 13058                           
 13059                           ;led.c: 57:             LED_task_DMX();
 13060  0ACB  3196  2627         	fcall	_LED_task_DMX
 13061                           
 13062                           ;led.c: 58:             break;
 13063  0ACD  0008               	return
 13064  0ACE                     l8623:	
 13065                           
 13066                           ;led.c: 61:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13067  0ACE  319E  265D  318A   	fcall	_getIsHold
 13068  0AD1  3A00               	xorlw	0
 13069  0AD2  1903               	skipnz
 13070  0AD3  2AE8               	goto	l8627
 13071  0AD4  0141               	movlb	1	; select bank1
 13072  0AD5  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13073  0AD6  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13074  0AD7  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13075  0AD8  3000               	movlw	0
 13076  0AD9  318A  221B  318A   	fcall	_beatColorCreator
 13077  0ADC  0141               	movlb	1	; select bank1
 13078  0ADD  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13079  0ADE  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13080  0ADF  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13081  0AE0  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13082  0AE1  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13083  0AE2  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13084  0AE3  0850               	movf	?_beatColorCreator^(0+128),w
 13085  0AE4  00DD               	movwf	LED_setColor@input^(0+128)
 13086  0AE5  3185  25C2         	fcall	_LED_setColor
 13087  0AE7  0008               	return
 13088  0AE8                     l8627:	
 13089  0AE8  3187  2725         	fcall	_LED_task_BEAT_STROBE
 13090  0AEA  0008               	return
 13091  0AEB                     l8629:	
 13092                           
 13093                           ;led.c: 66:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13094  0AEB  319E  265D  318A   	fcall	_getIsHold
 13095  0AEE  3A00               	xorlw	0
 13096  0AEF  1903               	skipnz
 13097  0AF0  2B05               	goto	l8633
 13098  0AF1  0141               	movlb	1	; select bank1
 13099  0AF2  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13100  0AF3  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13101  0AF4  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13102  0AF5  3000               	movlw	0
 13103  0AF6  318A  221B  318A   	fcall	_beatColorCreator
 13104  0AF9  0141               	movlb	1	; select bank1
 13105  0AFA  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13106  0AFB  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13107  0AFC  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13108  0AFD  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13109  0AFE  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13110  0AFF  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13111  0B00  0850               	movf	?_beatColorCreator^(0+128),w
 13112  0B01  00DD               	movwf	LED_setColor@input^(0+128)
 13113  0B02  3185  25C2         	fcall	_LED_setColor
 13114  0B04  0008               	return
 13115  0B05                     l8633:	
 13116  0B05  319E  2651         	fcall	_LED_task_BEAT_FADE
 13117  0B07  0008               	return
 13118  0B08                     l8635:	
 13119                           
 13120                           ;led.c: 71:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13121  0B08  319E  265D  318A   	fcall	_getIsHold
 13122  0B0B  3A00               	xorlw	0
 13123  0B0C  1903               	skipnz
 13124  0B0D  2B22               	goto	l8639
 13125  0B0E  0141               	movlb	1	; select bank1
 13126  0B0F  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13127  0B10  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13128  0B11  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13129  0B12  3000               	movlw	0
 13130  0B13  318A  221B  318A   	fcall	_beatColorCreator
 13131  0B16  0141               	movlb	1	; select bank1
 13132  0B17  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13133  0B18  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13134  0B19  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13135  0B1A  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13136  0B1B  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13137  0B1C  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13138  0B1D  0850               	movf	?_beatColorCreator^(0+128),w
 13139  0B1E  00DD               	movwf	LED_setColor@input^(0+128)
 13140  0B1F  3185  25C2  318A   	fcall	_LED_setColor
 13141  0B22                     l8639:	
 13142                           
 13143                           ;led.c: 72:             LED_task_BEAT_CONTINUOUS();
 13144  0B22  319E  2650         	fcall	_LED_task_BEAT_CONTINUOUS
 13145                           
 13146                           ;led.c: 73:             break;
 13147  0B24  0008               	return
 13148  0B25                     l8641:	
 13149                           
 13150                           ;led.c: 76:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13151  0B25  319E  265D  318A   	fcall	_getIsHold
 13152  0B28  3A00               	xorlw	0
 13153  0B29  1903               	skipnz
 13154  0B2A  2B3F               	goto	l8645
 13155  0B2B  0141               	movlb	1	; select bank1
 13156  0B2C  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13157  0B2D  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13158  0B2E  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13159  0B2F  3000               	movlw	0
 13160  0B30  318A  221B  318A   	fcall	_beatColorCreator
 13161  0B33  0141               	movlb	1	; select bank1
 13162  0B34  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13163  0B35  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13164  0B36  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13165  0B37  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13166  0B38  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13167  0B39  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13168  0B3A  0850               	movf	?_beatColorCreator^(0+128),w
 13169  0B3B  00DD               	movwf	LED_setColor@input^(0+128)
 13170  0B3C  3185  25C2         	fcall	_LED_setColor
 13171  0B3E  0008               	return
 13172  0B3F                     l8645:	
 13173  0B3F  319E  2652         	fcall	_LED_task_BEAT_MIXED
 13174  0B41  0008               	return
 13175  0B42                     l8647:	
 13176                           
 13177                           ;led.c: 81:             if(!getIsHold())
 13178  0B42  319E  265D  318A   	fcall	_getIsHold
 13179  0B45  3A00               	xorlw	0
 13180  0B46  1D03               	skipz
 13181  0B47  0008               	return
 13182                           
 13183                           ;led.c: 82:             LED_task_ANIMATION();
 13184  0B48  319E  264F         	fcall	_LED_task_ANIMATION
 13185  0B4A  0008               	return
 13186  0B4B                     l8651:	
 13187                           
 13188                           ;led.c: 86:             LED_task_MANUAL();
 13189  0B4B  319E  2653  318A   	fcall	_LED_task_MANUAL
 13190                           
 13191                           ;led.c: 87:             LED_setColor(manual);
 13192  0B4E  0141               	movlb	1	; select bank1
 13193  0B4F  0828               	movf	(_manual+3)^(0+128),w
 13194  0B50  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13195  0B51  0827               	movf	(_manual+2)^(0+128),w
 13196  0B52  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13197  0B53  0826               	movf	(_manual+1)^(0+128),w
 13198  0B54  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13199  0B55  0825               	movf	_manual^(0+128),w
 13200  0B56  00DD               	movwf	LED_setColor@input^(0+128)
 13201  0B57  3185  25C2         	fcall	_LED_setColor
 13202                           
 13203                           ;led.c: 88:             break;
 13204  0B59  0008               	return
 13205  0B5A                     l8657:	
 13206  0B5A  319E  2660  318A   	fcall	_getMode
 13207  0B5D  0141               	movlb	1	; select bank1
 13208  0B5E  00EA               	movwf	??_LED_task^(0+128)
 13209  0B5F  01EB               	clrf	(??_LED_task^(0+128)+1)
 13210                           
 13211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13212                           ; Switch size 1, requested type "simple"
 13213                           ; Number of cases is 1, Range of values is 0 to 0
 13214                           ; switch strategies available:
 13215                           ; Name         Instructions Cycles
 13216                           ; simple_byte            4     3 (average)
 13217                           ; direct_byte            8     6 (fixed)
 13218                           ; jumptable            260     6 (fixed)
 13219                           ;	Chosen strategy is simple_byte
 13220  0B60  086B               	movf	(??_LED_task+1)^(0+128),w
 13221  0B61  3A00               	xorlw	0	; case 0
 13222  0B62  1903               	skipnz
 13223  0B63  2B65               	goto	l8965
 13224  0B64  2B7C               	goto	l1376
 13225  0B65                     l8965:	
 13226                           
 13227                           ; Switch size 1, requested type "simple"
 13228                           ; Number of cases is 7, Range of values is 0 to 6
 13229                           ; switch strategies available:
 13230                           ; Name         Instructions Cycles
 13231                           ; direct_byte           20     6 (fixed)
 13232                           ; simple_byte           22    12 (average)
 13233                           ; jumptable            260     6 (fixed)
 13234                           ;	Chosen strategy is simple_byte
 13235  0B65  086A               	movf	??_LED_task^(0+128),w
 13236  0B66  3A00               	xorlw	0	; case 0
 13237  0B67  1903               	skipnz
 13238  0B68  2ACB               	goto	l8621
 13239  0B69  3A01               	xorlw	1	; case 1
 13240  0B6A  1903               	skipnz
 13241  0B6B  2ACE               	goto	l8623
 13242  0B6C  3A03               	xorlw	3	; case 2
 13243  0B6D  1903               	skipnz
 13244  0B6E  2B42               	goto	l8647
 13245  0B6F  3A01               	xorlw	1	; case 3
 13246  0B70  1903               	skipnz
 13247  0B71  2B4B               	goto	l8651
 13248  0B72  3A07               	xorlw	7	; case 4
 13249  0B73  1903               	skipnz
 13250  0B74  2AEB               	goto	l8629
 13251  0B75  3A01               	xorlw	1	; case 5
 13252  0B76  1903               	skipnz
 13253  0B77  2B08               	goto	l8635
 13254  0B78  3A03               	xorlw	3	; case 6
 13255  0B79  1903               	skipnz
 13256  0B7A  2B25               	goto	l8641
 13257  0B7B  2B7C               	goto	l1376
 13258  0B7C                     l1376:	
 13259  0B7C  0008               	return
 13260  0B7D                     __end_of_LED_task:	
 13261                           
 13262                           	psect	text19
 13263  1E60                     __ptext19:	
 13264 ;; *************** function _getMode *****************
 13265 ;; Defined at:
 13266 ;;		line 170 in file "controller.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;		None
 13269 ;; Auto vars:     Size  Location     Type
 13270 ;;		None
 13271 ;; Return value:  Size  Location     Type
 13272 ;;                  1    wreg      enum E10869
 13273 ;; Registers used:
 13274 ;;		wreg
 13275 ;; Tracked objects:
 13276 ;;		On entry : 0/0
 13277 ;;		On exit  : 0/0
 13278 ;;		Unchanged: 0/0
 13279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13284 ;;Total ram usage:        0 bytes
 13285 ;; Hardware stack levels used:    1
 13286 ;; Hardware stack levels required when called:    4
 13287 ;; This function calls:
 13288 ;;		Nothing
 13289 ;; This function is called by:
 13290 ;;		_LED_task
 13291 ;; This function uses a non-reentrant model
 13292 ;;
 13293                           
 13294                           
 13295                           ;psect for function _getMode
 13296  1E60                     _getMode:	
 13297                           
 13298                           ;controller.c: 171:     return currentSelection;
 13299                           
 13300                           ;incstack = 0
 13301                           ; Regs used in _getMode: [wreg]
 13302  1E60  0141               	movlb	1	; select bank1
 13303  1E61  0839               	movf	_currentSelection^(0+128),w
 13304  1E62  0008               	return
 13305  1E63                     __end_of_getMode:	
 13306                           
 13307                           	psect	text20
 13308  1E5D                     __ptext20:	
 13309 ;; *************** function _getIsHold *****************
 13310 ;; Defined at:
 13311 ;;		line 249 in file "controller.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;		None
 13314 ;; Auto vars:     Size  Location     Type
 13315 ;;		None
 13316 ;; Return value:  Size  Location     Type
 13317 ;;                  1    wreg      _Bool 
 13318 ;; Registers used:
 13319 ;;		wreg
 13320 ;; Tracked objects:
 13321 ;;		On entry : 0/0
 13322 ;;		On exit  : 0/0
 13323 ;;		Unchanged: 0/0
 13324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13329 ;;Total ram usage:        0 bytes
 13330 ;; Hardware stack levels used:    1
 13331 ;; Hardware stack levels required when called:    4
 13332 ;; This function calls:
 13333 ;;		Nothing
 13334 ;; This function is called by:
 13335 ;;		_LED_task
 13336 ;; This function uses a non-reentrant model
 13337 ;;
 13338                           
 13339                           
 13340                           ;psect for function _getIsHold
 13341  1E5D                     _getIsHold:	
 13342                           
 13343                           ;controller.c: 250:     return beatHold;
 13344                           
 13345                           ;incstack = 0
 13346                           ; Regs used in _getIsHold: [wreg]
 13347  1E5D  0141               	movlb	1	; select bank1
 13348  1E5E  0832               	movf	_beatHold^(0+128),w
 13349  1E5F  0008               	return
 13350  1E60                     __end_of_getIsHold:	
 13351                           
 13352                           	psect	text21
 13353  1E53                     __ptext21:	
 13354 ;; *************** function _LED_task_MANUAL *****************
 13355 ;; Defined at:
 13356 ;;		line 208 in file "led.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;		None
 13359 ;; Auto vars:     Size  Location     Type
 13360 ;;		None
 13361 ;; Return value:  Size  Location     Type
 13362 ;;                  1    wreg      void 
 13363 ;; Registers used:
 13364 ;;		None
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/0
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13374 ;;Total ram usage:        0 bytes
 13375 ;; Hardware stack levels used:    1
 13376 ;; Hardware stack levels required when called:    4
 13377 ;; This function calls:
 13378 ;;		Nothing
 13379 ;; This function is called by:
 13380 ;;		_LED_task
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384                           
 13385                           ;psect for function _LED_task_MANUAL
 13386  1E53                     _LED_task_MANUAL:	
 13387                           
 13388                           ;incstack = 0
 13389                           ; Regs used in _LED_task_MANUAL: []
 13390  1E53  0008               	return
 13391  1E54                     __end_of_LED_task_MANUAL:	
 13392                           
 13393                           	psect	text22
 13394  1627                     __ptext22:	
 13395 ;; *************** function _LED_task_DMX *****************
 13396 ;; Defined at:
 13397 ;;		line 33 in file "led.c"
 13398 ;; Parameters:    Size  Location     Type
 13399 ;;		None
 13400 ;; Auto vars:     Size  Location     Type
 13401 ;;  dmx             4    0[BANK2 ] struct .
 13402 ;; Return value:  Size  Location     Type
 13403 ;;                  1    wreg      void 
 13404 ;; Registers used:
 13405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13406 ;; Tracked objects:
 13407 ;;		On entry : 0/0
 13408 ;;		On exit  : 0/0
 13409 ;;		Unchanged: 0/0
 13410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13412 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13413 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13414 ;;      Totals:         0       0       5       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13415 ;;Total ram usage:        9 bytes
 13416 ;; Hardware stack levels used:    1
 13417 ;; Hardware stack levels required when called:    7
 13418 ;; This function calls:
 13419 ;;		_DMX_getAddress
 13420 ;;		_LED_setColor
 13421 ;; This function is called by:
 13422 ;;		_LED_task
 13423 ;; This function uses a non-reentrant model
 13424 ;;
 13425                           
 13426                           
 13427                           ;psect for function _LED_task_DMX
 13428  1627                     _LED_task_DMX:	
 13429                           
 13430                           ;led.c: 35:     color_t dmx;;led.c: 37:     dmx.red = dmxArray[DMX_getAddress()];
 13431                           
 13432                           ;incstack = 0
 13433                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13434  1627  319E  265A  3196   	fcall	_DMX_getAddress
 13435  162A  0141               	movlb	1	; select bank1
 13436  162B  00E5               	movwf	??_LED_task_DMX^(0+128)
 13437  162C  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13438  162D  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13439  162E  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13440  162F  30EE               	movlw	238
 13441  1630  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13442  1631  3023               	movlw	35
 13443  1632  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13444  1633  0865               	movf	??_LED_task_DMX^(0+128),w
 13445  1634  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13446  1635  0086               	movwf	6
 13447  1636  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13448  1637  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13449  1638  0087               	movwf	7
 13450  1639  0801               	movf	1,w
 13451  163A  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13452  163B  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13453  163C  0142               	movlb	2	; select bank2
 13454  163D  00EB               	movwf	(LED_task_DMX@dmx^(0+256)+1)
 13455                           
 13456                           ;led.c: 38:     dmx.green = dmxArray[DMX_getAddress() + 1];
 13457  163E  319E  265A  3196   	fcall	_DMX_getAddress
 13458  1641  0141               	movlb	1	; select bank1
 13459  1642  00E5               	movwf	??_LED_task_DMX^(0+128)
 13460  1643  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13461  1644  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13462  1645  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13463  1646  30F0               	movlw	240
 13464  1647  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13465  1648  3023               	movlw	35
 13466  1649  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13467  164A  0865               	movf	??_LED_task_DMX^(0+128),w
 13468  164B  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13469  164C  0086               	movwf	6
 13470  164D  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13471  164E  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13472  164F  0087               	movwf	7
 13473  1650  0801               	movf	1,w
 13474  1651  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13475  1652  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13476  1653  0142               	movlb	2	; select bank2
 13477  1654  00EC               	movwf	(LED_task_DMX@dmx^(0+256)+2)
 13478                           
 13479                           ;led.c: 39:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 13480  1655  319E  265A  3196   	fcall	_DMX_getAddress
 13481  1658  0141               	movlb	1	; select bank1
 13482  1659  00E5               	movwf	??_LED_task_DMX^(0+128)
 13483  165A  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13484  165B  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13485  165C  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13486  165D  30F2               	movlw	242
 13487  165E  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13488  165F  3023               	movlw	35
 13489  1660  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13490  1661  0865               	movf	??_LED_task_DMX^(0+128),w
 13491  1662  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13492  1663  0086               	movwf	6
 13493  1664  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13494  1665  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13495  1666  0087               	movwf	7
 13496  1667  0801               	movf	1,w
 13497  1668  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13498  1669  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13499  166A  0142               	movlb	2	; select bank2
 13500  166B  00ED               	movwf	(LED_task_DMX@dmx^(0+256)+3)
 13501                           
 13502                           ;led.c: 40:     dmx.white = dmxArray[DMX_getAddress() + 3];
 13503  166C  319E  265A  3196   	fcall	_DMX_getAddress
 13504  166F  0141               	movlb	1	; select bank1
 13505  1670  00E5               	movwf	??_LED_task_DMX^(0+128)
 13506  1671  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13507  1672  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13508  1673  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13509  1674  30F4               	movlw	244
 13510  1675  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13511  1676  3023               	movlw	35
 13512  1677  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13513  1678  0865               	movf	??_LED_task_DMX^(0+128),w
 13514  1679  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13515  167A  0086               	movwf	6
 13516  167B  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13517  167C  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13518  167D  0087               	movwf	7
 13519  167E  0801               	movf	1,w
 13520  167F  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13521  1680  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13522  1681  0142               	movlb	2	; select bank2
 13523  1682  00EA               	movwf	LED_task_DMX@dmx^(0+256)
 13524                           
 13525                           ;led.c: 42:     LED_setColor(dmx);
 13526  1683  086D               	movf	(LED_task_DMX@dmx+3)^(0+256),w
 13527  1684  0141               	movlb	1	; select bank1
 13528  1685  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13529  1686  0142               	movlb	2	; select bank2
 13530  1687  086C               	movf	(LED_task_DMX@dmx+2)^(0+256),w
 13531  1688  0141               	movlb	1	; select bank1
 13532  1689  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13533  168A  0142               	movlb	2	; select bank2
 13534  168B  086B               	movf	(LED_task_DMX@dmx+1)^(0+256),w
 13535  168C  0141               	movlb	1	; select bank1
 13536  168D  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13537  168E  0142               	movlb	2	; select bank2
 13538  168F  086A               	movf	LED_task_DMX@dmx^(0+256),w
 13539  1690  0141               	movlb	1	; select bank1
 13540  1691  00DD               	movwf	LED_setColor@input^(0+128)
 13541  1692  3185  25C2         	fcall	_LED_setColor
 13542  1694  0008               	return
 13543  1695                     __end_of_LED_task_DMX:	
 13544                           
 13545                           	psect	text23
 13546  1E5A                     __ptext23:	
 13547 ;; *************** function _DMX_getAddress *****************
 13548 ;; Defined at:
 13549 ;;		line 73 in file "dmx.c"
 13550 ;; Parameters:    Size  Location     Type
 13551 ;;		None
 13552 ;; Auto vars:     Size  Location     Type
 13553 ;;		None
 13554 ;; Return value:  Size  Location     Type
 13555 ;;                  1    wreg      unsigned char 
 13556 ;; Registers used:
 13557 ;;		wreg
 13558 ;; Tracked objects:
 13559 ;;		On entry : 0/0
 13560 ;;		On exit  : 0/0
 13561 ;;		Unchanged: 0/0
 13562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13567 ;;Total ram usage:        0 bytes
 13568 ;; Hardware stack levels used:    1
 13569 ;; Hardware stack levels required when called:    4
 13570 ;; This function calls:
 13571 ;;		Nothing
 13572 ;; This function is called by:
 13573 ;;		_LED_task_DMX
 13574 ;; This function uses a non-reentrant model
 13575 ;;
 13576                           
 13577                           
 13578                           ;psect for function _DMX_getAddress
 13579  1E5A                     _DMX_getAddress:	
 13580                           
 13581                           ;dmx.c: 74:     return address;
 13582                           
 13583                           ;incstack = 0
 13584                           ; Regs used in _DMX_getAddress: [wreg]
 13585  1E5A  0141               	movlb	1	; select bank1
 13586  1E5B  086C               	movf	_address^(0+128),w
 13587  1E5C  0008               	return
 13588  1E5D                     __end_of_DMX_getAddress:	
 13589                           
 13590                           	psect	text24
 13591  0725                     __ptext24:	
 13592 ;; *************** function _LED_task_BEAT_STROBE *****************
 13593 ;; Defined at:
 13594 ;;		line 93 in file "led.c"
 13595 ;; Parameters:    Size  Location     Type
 13596 ;;		None
 13597 ;; Auto vars:     Size  Location     Type
 13598 ;;		None
 13599 ;; Return value:  Size  Location     Type
 13600 ;;                  1    wreg      void 
 13601 ;; Registers used:
 13602 ;;		wreg, status,2, status,0, pclath, cstack
 13603 ;; Tracked objects:
 13604 ;;		On entry : 0/0
 13605 ;;		On exit  : 0/0
 13606 ;;		Unchanged: 0/0
 13607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13610 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13611 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13612 ;;Total ram usage:        2 bytes
 13613 ;; Hardware stack levels used:    1
 13614 ;; Hardware stack levels required when called:    8
 13615 ;; This function calls:
 13616 ;;		_BEAT_detected
 13617 ;;		_CLOCK_getTime
 13618 ;;		_LED_setColor
 13619 ;;		_beatColorCreator
 13620 ;; This function is called by:
 13621 ;;		_LED_task
 13622 ;; This function uses a non-reentrant model
 13623 ;;
 13624                           
 13625                           
 13626                           ;psect for function _LED_task_BEAT_STROBE
 13627  0725                     _LED_task_BEAT_STROBE:	
 13628                           
 13629                           ;led.c: 95:     if(CLOCK_getTime() - lastLedActiveTime < 50){
 13630                           
 13631                           ;incstack = 0
 13632                           ; Regs used in _LED_task_BEAT_STROBE: [wreg+status,2+status,0+pclath+cstack]
 13633  0725  319E  269D  3187   	fcall	_CLOCK_getTime
 13634  0728  0142               	movlb	2	; select bank2
 13635  0729  0838               	movf	_lastLedActiveTime^(0+256),w
 13636  072A  0140               	movlb	0	; select bank0
 13637  072B  0220               	subwf	?_CLOCK_getTime,w
 13638  072C  0141               	movlb	1	; select bank1
 13639  072D  00E5               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 13640  072E  0142               	movlb	2	; select bank2
 13641  072F  0839               	movf	(_lastLedActiveTime+1)^(0+256),w
 13642  0730  0140               	movlb	0	; select bank0
 13643  0731  3B21               	subwfb	?_CLOCK_getTime+1,w
 13644  0732  0141               	movlb	1	; select bank1
 13645  0733  00E6               	movwf	(??_LED_task_BEAT_STROBE+1)^(0+128)
 13646  0734  3000               	movlw	0
 13647  0735  0266               	subwf	(??_LED_task_BEAT_STROBE+1)^(0+128),w
 13648  0736  3032               	movlw	50
 13649  0737  1903               	skipnz
 13650  0738  0265               	subwf	??_LED_task_BEAT_STROBE^(0+128),w
 13651  0739  1C03               	btfss	3,0
 13652  073A  0008               	return
 13653                           
 13654                           ;led.c: 99:     lastLedActiveTime = CLOCK_getTime();
 13655  073B  319E  269D  3187   	fcall	_CLOCK_getTime
 13656  073E  0140               	movlb	0	; select bank0
 13657  073F  0821               	movf	?_CLOCK_getTime+1,w
 13658  0740  0142               	movlb	2	; select bank2
 13659  0741  00B9               	movwf	(_lastLedActiveTime+1)^(0+256)
 13660  0742  0140               	movlb	0	; select bank0
 13661  0743  0820               	movf	?_CLOCK_getTime,w
 13662  0744  0142               	movlb	2	; select bank2
 13663  0745  00B8               	movwf	_lastLedActiveTime^(0+256)
 13664                           
 13665                           ;led.c: 101:      if(!BEAT_detected()){
 13666  0746  319E  26B8  3187   	fcall	_BEAT_detected
 13667  0749  3A00               	xorlw	0
 13668  074A  1D03               	skipz
 13669  074B  2F60               	goto	l8231
 13670                           
 13671                           ;led.c: 102:          LED_setColor(beatColorCreator(0,0,0,0));
 13672  074C  0141               	movlb	1	; select bank1
 13673  074D  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13674  074E  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13675  074F  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13676  0750  3000               	movlw	0
 13677  0751  318A  221B  3187   	fcall	_beatColorCreator
 13678  0754  0141               	movlb	1	; select bank1
 13679  0755  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13680  0756  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13681  0757  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13682  0758  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13683  0759  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13684  075A  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13685  075B  0850               	movf	?_beatColorCreator^(0+128),w
 13686  075C  00DD               	movwf	LED_setColor@input^(0+128)
 13687  075D  3185  25C2         	fcall	_LED_setColor
 13688                           
 13689                           ;led.c: 103:     } else if (currentState == 1){
 13690  075F  0008               	return
 13691  0760                     l8231:	
 13692  0760  0141               	movlb	1	; select bank1
 13693  0761  0329               	decf	_currentState^(0+128),w
 13694  0762  042A               	iorwf	(_currentState+1)^(0+128),w
 13695  0763  1D03               	btfss	3,2
 13696  0764  2FA3               	goto	l8237
 13697                           
 13698                           ;led.c: 104:         LED_setColor(beatColorCreator(0,0,0,1));
 13699  0765  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13700  0766  2F8B               	goto	L1
 13701  0767                     l8251:	
 13702                           ;led.c: 110:          LED_setColor(beatColorCreator(0,1,1,0));
 13703                           
 13704                           ;led.c: 107:          LED_setColor(beatColorCreator(0,1,0,1));
 13705                           
 13706                           
 13707                           ;led.c: 113:          LED_setColor(beatColorCreator(1,0,1,1));
 13708  0767  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13709  0768  2F83               	goto	L13
 13710  0769                     l8257:	
 13711                           
 13712                           ;led.c: 116:         LED_setColor(beatColorCreator(0,1,1,0));
 13713  0769  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13714  076A  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13715  076B  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13716  076C  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13717  076D  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13718  076E  2F8E               	goto	L2
 13719  076F                     l8263:	
 13720                           
 13721                           ;led.c: 119:         LED_setColor(beatColorCreator(1,1,1,0));
 13722  076F  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13723  0770  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13724  0771  2F7A               	goto	L10
 13725  0772                     l8269:	
 13726                           
 13727                           ;led.c: 122:         LED_setColor(beatColorCreator(1,1,0,1));
 13728  0772  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13729  0773  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13730  0774  2F7F               	goto	L12
 13731  0775                     l8281:	
 13732                           ;led.c: 125:          LED_setColor(beatColorCreator(0,1,0,1));
 13733                           
 13734                           
 13735                           ;led.c: 128:          LED_setColor(beatColorCreator(0,0,1,1));
 13736  0775  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13737  0776  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13738  0777  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13739  0778  2F8C               	goto	L9
 13740  0779                     l8287:	
 13741                           
 13742                           ;led.c: 131:          LED_setColor(beatColorCreator(1,0,1,0));
 13743  0779  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13744  077A                     L10:	
 13745  077A  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13746  077B  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13747  077C  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13748  077D  2F87               	goto	L8
 13749  077E                     l8293:	
 13750                           
 13751                           ;led.c: 134:         LED_setColor(beatColorCreator(1,0,0,1));
 13752  077E  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13753  077F                     L12:	
 13754  077F  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13755  0780  2F85               	goto	L11
 13756  0781                     l8299:	
 13757                           
 13758                           ;led.c: 137:         LED_setColor(beatColorCreator(1,1,1,1));
 13759  0781  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13760  0782  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13761  0783                     L13:	
 13762  0783  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13763  0784  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13764  0785                     L11:	
 13765  0785  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13766  0786  0AD2               	incf	beatColorCreator@inWhite^(0+128),f
 13767  0787                     L8:	
 13768  0787  3001               	movlw	1
 13769  0788  2F8F               	goto	L3
 13770  0789                     l8305:	
 13771                           
 13772                           ;led.c: 140:         LED_setColor(beatColorCreator(0,1,0,1));
 13773  0789  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13774  078A  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13775  078B                     L1:	
 13776  078B  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13777  078C                     L9:	
 13778  078C  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13779  078D  0AD2               	incf	beatColorCreator@inWhite^(0+128),f
 13780  078E                     L2:	
 13781  078E  3000               	movlw	0
 13782  078F                     L3:	
 13783  078F  318A  221B  3187   	fcall	_beatColorCreator
 13784  0792  0141               	movlb	1	; select bank1
 13785  0793  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13786  0794  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13787  0795  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13788  0796  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13789  0797  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13790  0798  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13791  0799  0850               	movf	?_beatColorCreator^(0+128),w
 13792  079A  00DD               	movwf	LED_setColor@input^(0+128)
 13793  079B  3185  25C2         	fcall	_LED_setColor
 13794                           
 13795                           ;led.c: 105:         currentState++;
 13796  079D  3001               	movlw	1
 13797  079E  0141               	movlb	1	; select bank1
 13798  079F  07A9               	addwf	_currentState^(0+128),f
 13799  07A0  3000               	movlw	0
 13800  07A1  3DAA               	addwfc	(_currentState+1)^(0+128),f
 13801                           
 13802                           ;led.c: 106:     } else if(currentState == 2){
 13803  07A2  0008               	return
 13804  07A3                     l8237:	
 13805  07A3  3002               	movlw	2
 13806  07A4  0629               	xorwf	_currentState^(0+128),w
 13807  07A5  042A               	iorwf	(_currentState+1)^(0+128),w
 13808  07A6  1903               	btfsc	3,2
 13809  07A7  2F89               	goto	l8305
 13810  07A8  3003               	movlw	3
 13811  07A9  0629               	xorwf	_currentState^(0+128),w
 13812  07AA  042A               	iorwf	(_currentState+1)^(0+128),w
 13813  07AB  1903               	btfsc	3,2
 13814  07AC  2F69               	goto	l8257
 13815  07AD  3004               	movlw	4
 13816  07AE  0629               	xorwf	_currentState^(0+128),w
 13817  07AF  042A               	iorwf	(_currentState+1)^(0+128),w
 13818  07B0  1903               	btfsc	3,2
 13819  07B1  2F67               	goto	l8251
 13820  07B2  3005               	movlw	5
 13821  07B3  0629               	xorwf	_currentState^(0+128),w
 13822  07B4  042A               	iorwf	(_currentState+1)^(0+128),w
 13823  07B5  1903               	btfsc	3,2
 13824  07B6  2F69               	goto	l8257
 13825  07B7  3006               	movlw	6
 13826  07B8  0629               	xorwf	_currentState^(0+128),w
 13827  07B9  042A               	iorwf	(_currentState+1)^(0+128),w
 13828  07BA  1903               	btfsc	3,2
 13829  07BB  2F6F               	goto	l8263
 13830  07BC  3008               	movlw	8
 13831  07BD  0629               	xorwf	_currentState^(0+128),w
 13832  07BE  042A               	iorwf	(_currentState+1)^(0+128),w
 13833  07BF  1903               	btfsc	3,2
 13834  07C0  2F72               	goto	l8269
 13835  07C1  3009               	movlw	9
 13836  07C2  0629               	xorwf	_currentState^(0+128),w
 13837  07C3  042A               	iorwf	(_currentState+1)^(0+128),w
 13838  07C4  1903               	btfsc	3,2
 13839  07C5  2F89               	goto	l8305
 13840  07C6  300A               	movlw	10
 13841  07C7  0629               	xorwf	_currentState^(0+128),w
 13842  07C8  042A               	iorwf	(_currentState+1)^(0+128),w
 13843  07C9  1903               	btfsc	3,2
 13844  07CA  2F75               	goto	l8281
 13845  07CB  300B               	movlw	11
 13846  07CC  0629               	xorwf	_currentState^(0+128),w
 13847  07CD  042A               	iorwf	(_currentState+1)^(0+128),w
 13848  07CE  1903               	btfsc	3,2
 13849  07CF  2F79               	goto	l8287
 13850  07D0  300C               	movlw	12
 13851  07D1  0629               	xorwf	_currentState^(0+128),w
 13852  07D2  042A               	iorwf	(_currentState+1)^(0+128),w
 13853  07D3  1903               	btfsc	3,2
 13854  07D4  2F7E               	goto	l8293
 13855  07D5  300D               	movlw	13
 13856  07D6  0629               	xorwf	_currentState^(0+128),w
 13857  07D7  042A               	iorwf	(_currentState+1)^(0+128),w
 13858  07D8  1903               	btfsc	3,2
 13859  07D9  2F81               	goto	l8299
 13860  07DA  300E               	movlw	14
 13861  07DB  0629               	xorwf	_currentState^(0+128),w
 13862  07DC  042A               	iorwf	(_currentState+1)^(0+128),w
 13863  07DD  1903               	btfsc	3,2
 13864  07DE  2F89               	goto	l8305
 13865                           
 13866                           ;led.c: 143:         LED_setColor(beatColorCreator(0,1,1,1));
 13867  07DF  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13868  07E0  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13869  07E1  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13870  07E2  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13871  07E3  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13872  07E4  0AD2               	incf	beatColorCreator@inWhite^(0+128),f
 13873  07E5  3000               	movlw	0
 13874  07E6  318A  221B  3187   	fcall	_beatColorCreator
 13875  07E9  0141               	movlb	1	; select bank1
 13876  07EA  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13877  07EB  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13878  07EC  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13879  07ED  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13880  07EE  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13881  07EF  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13882  07F0  0850               	movf	?_beatColorCreator^(0+128),w
 13883  07F1  00DD               	movwf	LED_setColor@input^(0+128)
 13884  07F2  3185  25C2         	fcall	_LED_setColor
 13885                           
 13886                           ;led.c: 144:         currentState = 1;
 13887  07F4  3001               	movlw	1
 13888  07F5  0141               	movlb	1	; select bank1
 13889  07F6  00A9               	movwf	_currentState^(0+128)
 13890  07F7  3000               	movlw	0
 13891  07F8  00AA               	movwf	(_currentState^(0+128)+1)
 13892  07F9  0008               	return
 13893  07FA                     __end_of_LED_task_BEAT_STROBE:	
 13894                           
 13895                           	psect	text25
 13896  0A1B                     __ptext25:	
 13897 ;; *************** function _beatColorCreator *****************
 13898 ;; Defined at:
 13899 ;;		line 164 in file "led.c"
 13900 ;; Parameters:    Size  Location     Type
 13901 ;;  inRed           1    wreg     _Bool 
 13902 ;;  inGreen         1    9[BANK1 ] _Bool 
 13903 ;;  inBlue          1   10[BANK1 ] _Bool 
 13904 ;;  inWhite         1   11[BANK1 ] _Bool 
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;  inRed           1   13[BANK1 ] _Bool 
 13907 ;;  tempColor       4   18[BANK1 ] struct .
 13908 ;; Return value:  Size  Location     Type
 13909 ;;                  4    9[BANK1 ] struct .
 13910 ;; Registers used:
 13911 ;;		wreg, status,2, status,0, pclath, cstack
 13912 ;; Tracked objects:
 13913 ;;		On entry : 0/0
 13914 ;;		On exit  : 0/0
 13915 ;;		Unchanged: 0/0
 13916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13917 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13918 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13919 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13920 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13921 ;;Total ram usage:       14 bytes
 13922 ;; Hardware stack levels used:    1
 13923 ;; Hardware stack levels required when called:    7
 13924 ;; This function calls:
 13925 ;;		___fltol
 13926 ;;		_beatBrightnessCalculation
 13927 ;; This function is called by:
 13928 ;;		_LED_task
 13929 ;;		_LED_task_BEAT_STROBE
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           
 13933                           
 13934                           ;psect for function _beatColorCreator
 13935  0A1B                     _beatColorCreator:	
 13936                           
 13937                           ;incstack = 0
 13938                           ; Regs used in _beatColorCreator: [wreg+status,2+status,0+pclath+cstack]
 13939                           ;beatColorCreator@inRed stored from wreg
 13940  0A1B  0141               	movlb	1	; select bank1
 13941  0A1C  00D4               	movwf	beatColorCreator@inRed^(0+128)
 13942                           
 13943                           ;led.c: 165:     color_t tempColor;;led.c: 167:     if(inRed)
 13944  0A1D  0854               	movf	beatColorCreator@inRed^(0+128),w
 13945  0A1E  1903               	btfsc	3,2
 13946  0A1F  2A45               	goto	l7723
 13947                           
 13948                           ;led.c: 168:         tempColor.red = beatBrightnessCalculation();
 13949  0A20  3197  2705  318A   	fcall	_beatBrightnessCalculation
 13950  0A23  0141               	movlb	1	; select bank1
 13951  0A24  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13952  0A25  00D8               	movwf	(_beatColorCreator$3555+3)^(0+128)
 13953  0A26  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13954  0A27  00D7               	movwf	(_beatColorCreator$3555+2)^(0+128)
 13955  0A28  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13956  0A29  00D6               	movwf	(_beatColorCreator$3555+1)^(0+128)
 13957  0A2A  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 13958  0A2B  00D5               	movwf	_beatColorCreator$3555^(0+128)
 13959                           
 13960                           ;led.c: 168:         tempColor.red = beatBrightnessCalculation();
 13961  0A2C  0858               	movf	(_beatColorCreator$3555+3)^(0+128),w
 13962  0A2D  0140               	movlb	0	; select bank0
 13963  0A2E  00E5               	movwf	___fltol@f1+3
 13964  0A2F  0141               	movlb	1	; select bank1
 13965  0A30  0857               	movf	(_beatColorCreator$3555+2)^(0+128),w
 13966  0A31  0140               	movlb	0	; select bank0
 13967  0A32  00E4               	movwf	___fltol@f1+2
 13968  0A33  0141               	movlb	1	; select bank1
 13969  0A34  0856               	movf	(_beatColorCreator$3555+1)^(0+128),w
 13970  0A35  0140               	movlb	0	; select bank0
 13971  0A36  00E3               	movwf	___fltol@f1+1
 13972  0A37  0141               	movlb	1	; select bank1
 13973  0A38  0855               	movf	_beatColorCreator$3555^(0+128),w
 13974  0A39  0140               	movlb	0	; select bank0
 13975  0A3A  00E2               	movwf	___fltol@f1
 13976  0A3B  3195  25C1  318A   	fcall	___fltol
 13977  0A3E  0140               	movlb	0	; select bank0
 13978  0A3F  0862               	movf	?___fltol,w
 13979  0A40  00EE               	movwf	??_beatColorCreator
 13980  0A41  086E               	movf	??_beatColorCreator,w
 13981  0A42  0141               	movlb	1	; select bank1
 13982  0A43  00DA               	movwf	(beatColorCreator@tempColor^(0+128)+1)
 13983  0A44  2A46               	goto	l7725
 13984  0A45                     l7723:	
 13985                           
 13986                           ;led.c: 170:         tempColor.red = 0;
 13987  0A45  01DA               	clrf	(beatColorCreator@tempColor^(0+128)+1)
 13988  0A46                     l7725:	
 13989                           
 13990                           ;led.c: 172:     if(inBlue)
 13991  0A46  0851               	movf	beatColorCreator@inBlue^(0+128),w
 13992  0A47  1903               	btfsc	3,2
 13993  0A48  2A6E               	goto	l7729
 13994                           
 13995                           ;led.c: 173:         tempColor.blue = beatBrightnessCalculation();
 13996  0A49  3197  2705  318A   	fcall	_beatBrightnessCalculation
 13997  0A4C  0141               	movlb	1	; select bank1
 13998  0A4D  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13999  0A4E  00D8               	movwf	(_beatColorCreator$3555+3)^(0+128)
 14000  0A4F  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 14001  0A50  00D7               	movwf	(_beatColorCreator$3555+2)^(0+128)
 14002  0A51  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 14003  0A52  00D6               	movwf	(_beatColorCreator$3555+1)^(0+128)
 14004  0A53  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 14005  0A54  00D5               	movwf	_beatColorCreator$3555^(0+128)
 14006                           
 14007                           ;led.c: 173:         tempColor.blue = beatBrightnessCalculation();
 14008  0A55  0858               	movf	(_beatColorCreator$3555+3)^(0+128),w
 14009  0A56  0140               	movlb	0	; select bank0
 14010  0A57  00E5               	movwf	___fltol@f1+3
 14011  0A58  0141               	movlb	1	; select bank1
 14012  0A59  0857               	movf	(_beatColorCreator$3555+2)^(0+128),w
 14013  0A5A  0140               	movlb	0	; select bank0
 14014  0A5B  00E4               	movwf	___fltol@f1+2
 14015  0A5C  0141               	movlb	1	; select bank1
 14016  0A5D  0856               	movf	(_beatColorCreator$3555+1)^(0+128),w
 14017  0A5E  0140               	movlb	0	; select bank0
 14018  0A5F  00E3               	movwf	___fltol@f1+1
 14019  0A60  0141               	movlb	1	; select bank1
 14020  0A61  0855               	movf	_beatColorCreator$3555^(0+128),w
 14021  0A62  0140               	movlb	0	; select bank0
 14022  0A63  00E2               	movwf	___fltol@f1
 14023  0A64  3195  25C1  318A   	fcall	___fltol
 14024  0A67  0140               	movlb	0	; select bank0
 14025  0A68  0862               	movf	?___fltol,w
 14026  0A69  00EE               	movwf	??_beatColorCreator
 14027  0A6A  086E               	movf	??_beatColorCreator,w
 14028  0A6B  0141               	movlb	1	; select bank1
 14029  0A6C  00DC               	movwf	(beatColorCreator@tempColor^(0+128)+3)
 14030  0A6D  2A6F               	goto	l7731
 14031  0A6E                     l7729:	
 14032                           
 14033                           ;led.c: 175:         tempColor.blue = 0;
 14034  0A6E  01DC               	clrf	(beatColorCreator@tempColor^(0+128)+3)
 14035  0A6F                     l7731:	
 14036                           
 14037                           ;led.c: 177:     if(inGreen)
 14038  0A6F  0850               	movf	beatColorCreator@inGreen^(0+128),w
 14039  0A70  1903               	btfsc	3,2
 14040  0A71  2A97               	goto	l7735
 14041                           
 14042                           ;led.c: 178:         tempColor.green = beatBrightnessCalculation();
 14043  0A72  3197  2705  318A   	fcall	_beatBrightnessCalculation
 14044  0A75  0141               	movlb	1	; select bank1
 14045  0A76  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 14046  0A77  00D8               	movwf	(_beatColorCreator$3555+3)^(0+128)
 14047  0A78  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 14048  0A79  00D7               	movwf	(_beatColorCreator$3555+2)^(0+128)
 14049  0A7A  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 14050  0A7B  00D6               	movwf	(_beatColorCreator$3555+1)^(0+128)
 14051  0A7C  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 14052  0A7D  00D5               	movwf	_beatColorCreator$3555^(0+128)
 14053                           
 14054                           ;led.c: 178:         tempColor.green = beatBrightnessCalculation();
 14055  0A7E  0858               	movf	(_beatColorCreator$3555+3)^(0+128),w
 14056  0A7F  0140               	movlb	0	; select bank0
 14057  0A80  00E5               	movwf	___fltol@f1+3
 14058  0A81  0141               	movlb	1	; select bank1
 14059  0A82  0857               	movf	(_beatColorCreator$3555+2)^(0+128),w
 14060  0A83  0140               	movlb	0	; select bank0
 14061  0A84  00E4               	movwf	___fltol@f1+2
 14062  0A85  0141               	movlb	1	; select bank1
 14063  0A86  0856               	movf	(_beatColorCreator$3555+1)^(0+128),w
 14064  0A87  0140               	movlb	0	; select bank0
 14065  0A88  00E3               	movwf	___fltol@f1+1
 14066  0A89  0141               	movlb	1	; select bank1
 14067  0A8A  0855               	movf	_beatColorCreator$3555^(0+128),w
 14068  0A8B  0140               	movlb	0	; select bank0
 14069  0A8C  00E2               	movwf	___fltol@f1
 14070  0A8D  3195  25C1  318A   	fcall	___fltol
 14071  0A90  0140               	movlb	0	; select bank0
 14072  0A91  0862               	movf	?___fltol,w
 14073  0A92  00EE               	movwf	??_beatColorCreator
 14074  0A93  086E               	movf	??_beatColorCreator,w
 14075  0A94  0141               	movlb	1	; select bank1
 14076  0A95  00DB               	movwf	(beatColorCreator@tempColor^(0+128)+2)
 14077  0A96  2A98               	goto	l7737
 14078  0A97                     l7735:	
 14079                           
 14080                           ;led.c: 180:         tempColor.green = 0;
 14081  0A97  01DB               	clrf	(beatColorCreator@tempColor^(0+128)+2)
 14082  0A98                     l7737:	
 14083                           
 14084                           ;led.c: 182:     if(inWhite)
 14085  0A98  0852               	movf	beatColorCreator@inWhite^(0+128),w
 14086  0A99  1903               	btfsc	3,2
 14087  0A9A  2AC0               	goto	l7741
 14088                           
 14089                           ;led.c: 183:         tempColor.white = beatBrightnessCalculation();
 14090  0A9B  3197  2705  318A   	fcall	_beatBrightnessCalculation
 14091  0A9E  0141               	movlb	1	; select bank1
 14092  0A9F  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 14093  0AA0  00D8               	movwf	(_beatColorCreator$3555+3)^(0+128)
 14094  0AA1  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 14095  0AA2  00D7               	movwf	(_beatColorCreator$3555+2)^(0+128)
 14096  0AA3  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 14097  0AA4  00D6               	movwf	(_beatColorCreator$3555+1)^(0+128)
 14098  0AA5  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 14099  0AA6  00D5               	movwf	_beatColorCreator$3555^(0+128)
 14100                           
 14101                           ;led.c: 183:         tempColor.white = beatBrightnessCalculation();
 14102  0AA7  0858               	movf	(_beatColorCreator$3555+3)^(0+128),w
 14103  0AA8  0140               	movlb	0	; select bank0
 14104  0AA9  00E5               	movwf	___fltol@f1+3
 14105  0AAA  0141               	movlb	1	; select bank1
 14106  0AAB  0857               	movf	(_beatColorCreator$3555+2)^(0+128),w
 14107  0AAC  0140               	movlb	0	; select bank0
 14108  0AAD  00E4               	movwf	___fltol@f1+2
 14109  0AAE  0141               	movlb	1	; select bank1
 14110  0AAF  0856               	movf	(_beatColorCreator$3555+1)^(0+128),w
 14111  0AB0  0140               	movlb	0	; select bank0
 14112  0AB1  00E3               	movwf	___fltol@f1+1
 14113  0AB2  0141               	movlb	1	; select bank1
 14114  0AB3  0855               	movf	_beatColorCreator$3555^(0+128),w
 14115  0AB4  0140               	movlb	0	; select bank0
 14116  0AB5  00E2               	movwf	___fltol@f1
 14117  0AB6  3195  25C1  318A   	fcall	___fltol
 14118  0AB9  0140               	movlb	0	; select bank0
 14119  0ABA  0862               	movf	?___fltol,w
 14120  0ABB  00EE               	movwf	??_beatColorCreator
 14121  0ABC  086E               	movf	??_beatColorCreator,w
 14122  0ABD  0141               	movlb	1	; select bank1
 14123  0ABE  00D9               	movwf	beatColorCreator@tempColor^(0+128)
 14124  0ABF  2AC1               	goto	l7743
 14125  0AC0                     l7741:	
 14126                           
 14127                           ;led.c: 185:         tempColor.white = 0;
 14128  0AC0  01D9               	clrf	beatColorCreator@tempColor^(0+128)
 14129  0AC1                     l7743:	
 14130                           
 14131                           ;led.c: 187:     return tempColor;
 14132  0AC1  085C               	movf	(beatColorCreator@tempColor+3)^(0+128),w
 14133  0AC2  00D3               	movwf	(?_beatColorCreator+3)^(0+128)
 14134  0AC3  085B               	movf	(beatColorCreator@tempColor+2)^(0+128),w
 14135  0AC4  00D2               	movwf	(?_beatColorCreator+2)^(0+128)
 14136  0AC5  085A               	movf	(beatColorCreator@tempColor+1)^(0+128),w
 14137  0AC6  00D1               	movwf	(?_beatColorCreator+1)^(0+128)
 14138  0AC7  0859               	movf	beatColorCreator@tempColor^(0+128),w
 14139  0AC8  00D0               	movwf	?_beatColorCreator^(0+128)
 14140  0AC9  0008               	return
 14141  0ACA                     __end_of_beatColorCreator:	
 14142                           
 14143                           	psect	text26
 14144  1705                     __ptext26:	
 14145 ;; *************** function _beatBrightnessCalculation *****************
 14146 ;; Defined at:
 14147 ;;		line 149 in file "led.c"
 14148 ;; Parameters:    Size  Location     Type
 14149 ;;		None
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;  temp            1   77[BANK0 ] unsigned char 
 14152 ;; Return value:  Size  Location     Type
 14153 ;;                  4    0[BANK1 ] float 
 14154 ;; Registers used:
 14155 ;;		wreg, status,2, status,0, pclath, cstack
 14156 ;; Tracked objects:
 14157 ;;		On entry : 0/0
 14158 ;;		On exit  : 0/0
 14159 ;;		Unchanged: 0/0
 14160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14161 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14163 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14164 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14165 ;;Total ram usage:       10 bytes
 14166 ;; Hardware stack levels used:    1
 14167 ;; Hardware stack levels required when called:    6
 14168 ;; This function calls:
 14169 ;;		___fldiv
 14170 ;;		___flmul
 14171 ;;		___fltol
 14172 ;;		___xxtofl
 14173 ;; This function is called by:
 14174 ;;		_beatColorCreator
 14175 ;; This function uses a non-reentrant model
 14176 ;;
 14177                           
 14178                           
 14179                           ;psect for function _beatBrightnessCalculation
 14180  1705                     _beatBrightnessCalculation:	
 14181                           
 14182                           ;led.c: 150:     uint8_t temp = (float)(beatBrightness/9.0) * 255;
 14183                           
 14184                           ;incstack = 0
 14185                           ; Regs used in _beatBrightnessCalculation: [wreg+status,2+status,0+pclath+cstack]
 14186  1705  0141               	movlb	1	; select bank1
 14187  1706  086F               	movf	_beatBrightness^(0+128),w
 14188  1707  00CB               	movwf	??_beatBrightnessCalculation^(0+128)
 14189  1708  01CC               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 14190  1709  01CD               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 14191  170A  01CE               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 14192  170B  084E               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 14193  170C  0140               	movlb	0	; select bank0
 14194  170D  00A3               	movwf	___xxtofl@val+3
 14195  170E  0141               	movlb	1	; select bank1
 14196  170F  084D               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 14197  1710  0140               	movlb	0	; select bank0
 14198  1711  00A2               	movwf	___xxtofl@val+2
 14199  1712  0141               	movlb	1	; select bank1
 14200  1713  084C               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 14201  1714  0140               	movlb	0	; select bank0
 14202  1715  00A1               	movwf	___xxtofl@val+1
 14203  1716  0141               	movlb	1	; select bank1
 14204  1717  084B               	movf	??_beatBrightnessCalculation^(0+128),w
 14205  1718  0140               	movlb	0	; select bank0
 14206  1719  00A0               	movwf	___xxtofl@val
 14207  171A  3001               	movlw	1
 14208  171B  3188  2044  3197   	fcall	___xxtofl
 14209  171E  0140               	movlb	0	; select bank0
 14210  171F  0823               	movf	?___xxtofl+3,w
 14211  1720  00B5               	movwf	___fldiv@b+3
 14212  1721  0822               	movf	?___xxtofl+2,w
 14213  1722  00B4               	movwf	___fldiv@b+2
 14214  1723  0821               	movf	?___xxtofl+1,w
 14215  1724  00B3               	movwf	___fldiv@b+1
 14216  1725  0820               	movf	?___xxtofl,w
 14217  1726  00B2               	movwf	___fldiv@b
 14218  1727  3041               	movlw	65
 14219  1728  00B1               	movwf	___fldiv@a+3
 14220  1729  3010               	movlw	16
 14221  172A  00B0               	movwf	___fldiv@a+2
 14222  172B  3000               	movlw	0
 14223  172C  00AF               	movwf	___fldiv@a+1
 14224  172D  3000               	movlw	0
 14225  172E  00AE               	movwf	___fldiv@a
 14226  172F  3184  2448  3197   	fcall	___fldiv
 14227  1732  0140               	movlb	0	; select bank0
 14228  1733  0831               	movf	?___fldiv+3,w
 14229  1734  00CF               	movwf	___flmul@a+3
 14230  1735  0830               	movf	?___fldiv+2,w
 14231  1736  00CE               	movwf	___flmul@a+2
 14232  1737  082F               	movf	?___fldiv+1,w
 14233  1738  00CD               	movwf	___flmul@a+1
 14234  1739  082E               	movf	?___fldiv,w
 14235  173A  00CC               	movwf	___flmul@a
 14236  173B  3043               	movlw	67
 14237  173C  00CB               	movwf	___flmul@b+3
 14238  173D  307F               	movlw	127
 14239  173E  00CA               	movwf	___flmul@b+2
 14240  173F  3000               	movlw	0
 14241  1740  00C9               	movwf	___flmul@b+1
 14242  1741  3000               	movlw	0
 14243  1742  00C8               	movwf	___flmul@b
 14244  1743  3180  2090  3197   	fcall	___flmul
 14245  1746  0140               	movlb	0	; select bank0
 14246  1747  084B               	movf	?___flmul+3,w
 14247  1748  00E5               	movwf	___fltol@f1+3
 14248  1749  084A               	movf	?___flmul+2,w
 14249  174A  00E4               	movwf	___fltol@f1+2
 14250  174B  0849               	movf	?___flmul+1,w
 14251  174C  00E3               	movwf	___fltol@f1+1
 14252  174D  0848               	movf	?___flmul,w
 14253  174E  00E2               	movwf	___fltol@f1
 14254  174F  3195  25C1  3197   	fcall	___fltol
 14255  1752  0140               	movlb	0	; select bank0
 14256  1753  0862               	movf	?___fltol,w
 14257  1754  0141               	movlb	1	; select bank1
 14258  1755  00CF               	movwf	(??_beatBrightnessCalculation+4)^(0+128)
 14259  1756  084F               	movf	(??_beatBrightnessCalculation+4)^(0+128),w
 14260  1757  0140               	movlb	0	; select bank0
 14261  1758  00ED               	movwf	beatBrightnessCalculation@temp
 14262                           
 14263                           ;led.c: 151:     return temp;
 14264  1759  086D               	movf	beatBrightnessCalculation@temp,w
 14265  175A  0141               	movlb	1	; select bank1
 14266  175B  00CB               	movwf	??_beatBrightnessCalculation^(0+128)
 14267  175C  01CC               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 14268  175D  01CD               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 14269  175E  01CE               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 14270  175F  084E               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 14271  1760  0140               	movlb	0	; select bank0
 14272  1761  00A3               	movwf	___xxtofl@val+3
 14273  1762  0141               	movlb	1	; select bank1
 14274  1763  084D               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 14275  1764  0140               	movlb	0	; select bank0
 14276  1765  00A2               	movwf	___xxtofl@val+2
 14277  1766  0141               	movlb	1	; select bank1
 14278  1767  084C               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 14279  1768  0140               	movlb	0	; select bank0
 14280  1769  00A1               	movwf	___xxtofl@val+1
 14281  176A  0141               	movlb	1	; select bank1
 14282  176B  084B               	movf	??_beatBrightnessCalculation^(0+128),w
 14283  176C  0140               	movlb	0	; select bank0
 14284  176D  00A0               	movwf	___xxtofl@val
 14285  176E  3000               	movlw	0
 14286  176F  3188  2044         	fcall	___xxtofl
 14287  1771  0140               	movlb	0	; select bank0
 14288  1772  0823               	movf	?___xxtofl+3,w
 14289  1773  0141               	movlb	1	; select bank1
 14290  1774  00CA               	movwf	(?_beatBrightnessCalculation+3)^(0+128)
 14291  1775  0140               	movlb	0	; select bank0
 14292  1776  0822               	movf	?___xxtofl+2,w
 14293  1777  0141               	movlb	1	; select bank1
 14294  1778  00C9               	movwf	(?_beatBrightnessCalculation+2)^(0+128)
 14295  1779  0140               	movlb	0	; select bank0
 14296  177A  0821               	movf	?___xxtofl+1,w
 14297  177B  0141               	movlb	1	; select bank1
 14298  177C  00C8               	movwf	(?_beatBrightnessCalculation+1)^(0+128)
 14299  177D  0140               	movlb	0	; select bank0
 14300  177E  0820               	movf	?___xxtofl,w
 14301  177F  0141               	movlb	1	; select bank1
 14302  1780  00C7               	movwf	?_beatBrightnessCalculation^(0+128)
 14303  1781  0008               	return
 14304  1782                     __end_of_beatBrightnessCalculation:	
 14305                           
 14306                           	psect	text27
 14307  05C2                     __ptext27:	
 14308 ;; *************** function _LED_setColor *****************
 14309 ;; Defined at:
 14310 ;;		line 24 in file "led.c"
 14311 ;; Parameters:    Size  Location     Type
 14312 ;;  input           4   22[BANK1 ] struct .
 14313 ;; Auto vars:     Size  Location     Type
 14314 ;;		None
 14315 ;; Return value:  Size  Location     Type
 14316 ;;                  1    wreg      void 
 14317 ;; Registers used:
 14318 ;;		wreg, status,2, status,0, pclath, cstack
 14319 ;; Tracked objects:
 14320 ;;		On entry : 0/0
 14321 ;;		On exit  : 0/0
 14322 ;;		Unchanged: 0/0
 14323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14324 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14326 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14327 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14328 ;;Total ram usage:        8 bytes
 14329 ;; Hardware stack levels used:    1
 14330 ;; Hardware stack levels required when called:    6
 14331 ;; This function calls:
 14332 ;;		_PWM1_LoadDutyValue
 14333 ;;		_PWM2_LoadDutyValue
 14334 ;;		_PWM3_LoadDutyValue
 14335 ;;		_PWM4_LoadDutyValue
 14336 ;;		___fldiv
 14337 ;;		___flmul
 14338 ;;		___fltol
 14339 ;;		___xxtofl
 14340 ;; This function is called by:
 14341 ;;		_LED_task_DMX
 14342 ;;		_LED_task
 14343 ;;		_LED_task_BEAT_STROBE
 14344 ;; This function uses a non-reentrant model
 14345 ;;
 14346                           
 14347                           
 14348                           ;psect for function _LED_setColor
 14349  05C2                     _LED_setColor:	
 14350                           
 14351                           ;led.c: 25:     if(!startup){
 14352                           
 14353                           ;incstack = 0
 14354                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 14355  05C2  0141               	movlb	1	; select bank1
 14356  05C3  086E               	movf	_startup^(0+128),w
 14357  05C4  1D03               	btfss	3,2
 14358  05C5  0008               	return
 14359                           
 14360                           ;led.c: 26:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 127 );
 14361  05C6  085E               	movf	(LED_setColor@input^(0+128)+1),w
 14362  05C7  00E1               	movwf	??_LED_setColor^(0+128)
 14363  05C8  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14364  05C9  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14365  05CA  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14366  05CB  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14367  05CC  0140               	movlb	0	; select bank0
 14368  05CD  00A3               	movwf	___xxtofl@val+3
 14369  05CE  0141               	movlb	1	; select bank1
 14370  05CF  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14371  05D0  0140               	movlb	0	; select bank0
 14372  05D1  00A2               	movwf	___xxtofl@val+2
 14373  05D2  0141               	movlb	1	; select bank1
 14374  05D3  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14375  05D4  0140               	movlb	0	; select bank0
 14376  05D5  00A1               	movwf	___xxtofl@val+1
 14377  05D6  0141               	movlb	1	; select bank1
 14378  05D7  0861               	movf	??_LED_setColor^(0+128),w
 14379  05D8  0140               	movlb	0	; select bank0
 14380  05D9  00A0               	movwf	___xxtofl@val
 14381  05DA  3001               	movlw	1
 14382  05DB  3188  2044  3185   	fcall	___xxtofl
 14383  05DE  0140               	movlb	0	; select bank0
 14384  05DF  0823               	movf	?___xxtofl+3,w
 14385  05E0  00B5               	movwf	___fldiv@b+3
 14386  05E1  0822               	movf	?___xxtofl+2,w
 14387  05E2  00B4               	movwf	___fldiv@b+2
 14388  05E3  0821               	movf	?___xxtofl+1,w
 14389  05E4  00B3               	movwf	___fldiv@b+1
 14390  05E5  0820               	movf	?___xxtofl,w
 14391  05E6  00B2               	movwf	___fldiv@b
 14392  05E7  3043               	movlw	67
 14393  05E8  00B1               	movwf	___fldiv@a+3
 14394  05E9  307F               	movlw	127
 14395  05EA  00B0               	movwf	___fldiv@a+2
 14396  05EB  3000               	movlw	0
 14397  05EC  00AF               	movwf	___fldiv@a+1
 14398  05ED  3000               	movlw	0
 14399  05EE  00AE               	movwf	___fldiv@a
 14400  05EF  3184  2448  3185   	fcall	___fldiv
 14401  05F2  0140               	movlb	0	; select bank0
 14402  05F3  0831               	movf	?___fldiv+3,w
 14403  05F4  00CF               	movwf	___flmul@a+3
 14404  05F5  0830               	movf	?___fldiv+2,w
 14405  05F6  00CE               	movwf	___flmul@a+2
 14406  05F7  082F               	movf	?___fldiv+1,w
 14407  05F8  00CD               	movwf	___flmul@a+1
 14408  05F9  082E               	movf	?___fldiv,w
 14409  05FA  00CC               	movwf	___flmul@a
 14410  05FB  3042               	movlw	66
 14411  05FC  00CB               	movwf	___flmul@b+3
 14412  05FD  30FE               	movlw	254
 14413  05FE  00CA               	movwf	___flmul@b+2
 14414  05FF  3000               	movlw	0
 14415  0600  00C9               	movwf	___flmul@b+1
 14416  0601  3000               	movlw	0
 14417  0602  00C8               	movwf	___flmul@b
 14418  0603  3180  2090  3185   	fcall	___flmul
 14419  0606  0140               	movlb	0	; select bank0
 14420  0607  084B               	movf	?___flmul+3,w
 14421  0608  00E5               	movwf	___fltol@f1+3
 14422  0609  084A               	movf	?___flmul+2,w
 14423  060A  00E4               	movwf	___fltol@f1+2
 14424  060B  0849               	movf	?___flmul+1,w
 14425  060C  00E3               	movwf	___fltol@f1+1
 14426  060D  0848               	movf	?___flmul,w
 14427  060E  00E2               	movwf	___fltol@f1
 14428  060F  3195  25C1  3185   	fcall	___fltol
 14429  0612  0140               	movlb	0	; select bank0
 14430  0613  0863               	movf	?___fltol+1,w
 14431  0614  0141               	movlb	1	; select bank1
 14432  0615  00C8               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128)
 14433  0616  0140               	movlb	0	; select bank0
 14434  0617  0862               	movf	?___fltol,w
 14435  0618  0141               	movlb	1	; select bank1
 14436  0619  00C7               	movwf	PWM1_LoadDutyValue@dutyValue^(0+128)
 14437  061A  3190  20CB  3185   	fcall	_PWM1_LoadDutyValue
 14438                           
 14439                           ;led.c: 27:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 127 );
 14440  061D  0141               	movlb	1	; select bank1
 14441  061E  085F               	movf	(LED_setColor@input^(0+128)+2),w
 14442  061F  00E1               	movwf	??_LED_setColor^(0+128)
 14443  0620  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14444  0621  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14445  0622  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14446  0623  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14447  0624  0140               	movlb	0	; select bank0
 14448  0625  00A3               	movwf	___xxtofl@val+3
 14449  0626  0141               	movlb	1	; select bank1
 14450  0627  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14451  0628  0140               	movlb	0	; select bank0
 14452  0629  00A2               	movwf	___xxtofl@val+2
 14453  062A  0141               	movlb	1	; select bank1
 14454  062B  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14455  062C  0140               	movlb	0	; select bank0
 14456  062D  00A1               	movwf	___xxtofl@val+1
 14457  062E  0141               	movlb	1	; select bank1
 14458  062F  0861               	movf	??_LED_setColor^(0+128),w
 14459  0630  0140               	movlb	0	; select bank0
 14460  0631  00A0               	movwf	___xxtofl@val
 14461  0632  3001               	movlw	1
 14462  0633  3188  2044  3185   	fcall	___xxtofl
 14463  0636  0140               	movlb	0	; select bank0
 14464  0637  0823               	movf	?___xxtofl+3,w
 14465  0638  00B5               	movwf	___fldiv@b+3
 14466  0639  0822               	movf	?___xxtofl+2,w
 14467  063A  00B4               	movwf	___fldiv@b+2
 14468  063B  0821               	movf	?___xxtofl+1,w
 14469  063C  00B3               	movwf	___fldiv@b+1
 14470  063D  0820               	movf	?___xxtofl,w
 14471  063E  00B2               	movwf	___fldiv@b
 14472  063F  3043               	movlw	67
 14473  0640  00B1               	movwf	___fldiv@a+3
 14474  0641  307F               	movlw	127
 14475  0642  00B0               	movwf	___fldiv@a+2
 14476  0643  3000               	movlw	0
 14477  0644  00AF               	movwf	___fldiv@a+1
 14478  0645  3000               	movlw	0
 14479  0646  00AE               	movwf	___fldiv@a
 14480  0647  3184  2448  3185   	fcall	___fldiv
 14481  064A  0140               	movlb	0	; select bank0
 14482  064B  0831               	movf	?___fldiv+3,w
 14483  064C  00CF               	movwf	___flmul@a+3
 14484  064D  0830               	movf	?___fldiv+2,w
 14485  064E  00CE               	movwf	___flmul@a+2
 14486  064F  082F               	movf	?___fldiv+1,w
 14487  0650  00CD               	movwf	___flmul@a+1
 14488  0651  082E               	movf	?___fldiv,w
 14489  0652  00CC               	movwf	___flmul@a
 14490  0653  3042               	movlw	66
 14491  0654  00CB               	movwf	___flmul@b+3
 14492  0655  30FE               	movlw	254
 14493  0656  00CA               	movwf	___flmul@b+2
 14494  0657  3000               	movlw	0
 14495  0658  00C9               	movwf	___flmul@b+1
 14496  0659  3000               	movlw	0
 14497  065A  00C8               	movwf	___flmul@b
 14498  065B  3180  2090  3185   	fcall	___flmul
 14499  065E  0140               	movlb	0	; select bank0
 14500  065F  084B               	movf	?___flmul+3,w
 14501  0660  00E5               	movwf	___fltol@f1+3
 14502  0661  084A               	movf	?___flmul+2,w
 14503  0662  00E4               	movwf	___fltol@f1+2
 14504  0663  0849               	movf	?___flmul+1,w
 14505  0664  00E3               	movwf	___fltol@f1+1
 14506  0665  0848               	movf	?___flmul,w
 14507  0666  00E2               	movwf	___fltol@f1
 14508  0667  3195  25C1  3185   	fcall	___fltol
 14509  066A  0140               	movlb	0	; select bank0
 14510  066B  0863               	movf	?___fltol+1,w
 14511  066C  0141               	movlb	1	; select bank1
 14512  066D  00C8               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128)
 14513  066E  0140               	movlb	0	; select bank0
 14514  066F  0862               	movf	?___fltol,w
 14515  0670  0141               	movlb	1	; select bank1
 14516  0671  00C7               	movwf	PWM2_LoadDutyValue@dutyValue^(0+128)
 14517  0672  3190  20E9  3185   	fcall	_PWM2_LoadDutyValue
 14518                           
 14519                           ;led.c: 28:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 127 );
 14520  0675  0141               	movlb	1	; select bank1
 14521  0676  0860               	movf	(LED_setColor@input^(0+128)+3),w
 14522  0677  00E1               	movwf	??_LED_setColor^(0+128)
 14523  0678  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14524  0679  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14525  067A  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14526  067B  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14527  067C  0140               	movlb	0	; select bank0
 14528  067D  00A3               	movwf	___xxtofl@val+3
 14529  067E  0141               	movlb	1	; select bank1
 14530  067F  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14531  0680  0140               	movlb	0	; select bank0
 14532  0681  00A2               	movwf	___xxtofl@val+2
 14533  0682  0141               	movlb	1	; select bank1
 14534  0683  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14535  0684  0140               	movlb	0	; select bank0
 14536  0685  00A1               	movwf	___xxtofl@val+1
 14537  0686  0141               	movlb	1	; select bank1
 14538  0687  0861               	movf	??_LED_setColor^(0+128),w
 14539  0688  0140               	movlb	0	; select bank0
 14540  0689  00A0               	movwf	___xxtofl@val
 14541  068A  3001               	movlw	1
 14542  068B  3188  2044  3185   	fcall	___xxtofl
 14543  068E  0140               	movlb	0	; select bank0
 14544  068F  0823               	movf	?___xxtofl+3,w
 14545  0690  00B5               	movwf	___fldiv@b+3
 14546  0691  0822               	movf	?___xxtofl+2,w
 14547  0692  00B4               	movwf	___fldiv@b+2
 14548  0693  0821               	movf	?___xxtofl+1,w
 14549  0694  00B3               	movwf	___fldiv@b+1
 14550  0695  0820               	movf	?___xxtofl,w
 14551  0696  00B2               	movwf	___fldiv@b
 14552  0697  3043               	movlw	67
 14553  0698  00B1               	movwf	___fldiv@a+3
 14554  0699  307F               	movlw	127
 14555  069A  00B0               	movwf	___fldiv@a+2
 14556  069B  3000               	movlw	0
 14557  069C  00AF               	movwf	___fldiv@a+1
 14558  069D  3000               	movlw	0
 14559  069E  00AE               	movwf	___fldiv@a
 14560  069F  3184  2448  3185   	fcall	___fldiv
 14561  06A2  0140               	movlb	0	; select bank0
 14562  06A3  0831               	movf	?___fldiv+3,w
 14563  06A4  00CF               	movwf	___flmul@a+3
 14564  06A5  0830               	movf	?___fldiv+2,w
 14565  06A6  00CE               	movwf	___flmul@a+2
 14566  06A7  082F               	movf	?___fldiv+1,w
 14567  06A8  00CD               	movwf	___flmul@a+1
 14568  06A9  082E               	movf	?___fldiv,w
 14569  06AA  00CC               	movwf	___flmul@a
 14570  06AB  3042               	movlw	66
 14571  06AC  00CB               	movwf	___flmul@b+3
 14572  06AD  30FE               	movlw	254
 14573  06AE  00CA               	movwf	___flmul@b+2
 14574  06AF  3000               	movlw	0
 14575  06B0  00C9               	movwf	___flmul@b+1
 14576  06B1  3000               	movlw	0
 14577  06B2  00C8               	movwf	___flmul@b
 14578  06B3  3180  2090  3185   	fcall	___flmul
 14579  06B6  0140               	movlb	0	; select bank0
 14580  06B7  084B               	movf	?___flmul+3,w
 14581  06B8  00E5               	movwf	___fltol@f1+3
 14582  06B9  084A               	movf	?___flmul+2,w
 14583  06BA  00E4               	movwf	___fltol@f1+2
 14584  06BB  0849               	movf	?___flmul+1,w
 14585  06BC  00E3               	movwf	___fltol@f1+1
 14586  06BD  0848               	movf	?___flmul,w
 14587  06BE  00E2               	movwf	___fltol@f1
 14588  06BF  3195  25C1  3185   	fcall	___fltol
 14589  06C2  0140               	movlb	0	; select bank0
 14590  06C3  0863               	movf	?___fltol+1,w
 14591  06C4  0141               	movlb	1	; select bank1
 14592  06C5  00C8               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
 14593  06C6  0140               	movlb	0	; select bank0
 14594  06C7  0862               	movf	?___fltol,w
 14595  06C8  0141               	movlb	1	; select bank1
 14596  06C9  00C7               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
 14597  06CA  3191  2107  3185   	fcall	_PWM3_LoadDutyValue
 14598                           
 14599                           ;led.c: 29:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 127 );
 14600  06CD  0141               	movlb	1	; select bank1
 14601  06CE  085D               	movf	LED_setColor@input^(0+128),w
 14602  06CF  00E1               	movwf	??_LED_setColor^(0+128)
 14603  06D0  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14604  06D1  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14605  06D2  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14606  06D3  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14607  06D4  0140               	movlb	0	; select bank0
 14608  06D5  00A3               	movwf	___xxtofl@val+3
 14609  06D6  0141               	movlb	1	; select bank1
 14610  06D7  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14611  06D8  0140               	movlb	0	; select bank0
 14612  06D9  00A2               	movwf	___xxtofl@val+2
 14613  06DA  0141               	movlb	1	; select bank1
 14614  06DB  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14615  06DC  0140               	movlb	0	; select bank0
 14616  06DD  00A1               	movwf	___xxtofl@val+1
 14617  06DE  0141               	movlb	1	; select bank1
 14618  06DF  0861               	movf	??_LED_setColor^(0+128),w
 14619  06E0  0140               	movlb	0	; select bank0
 14620  06E1  00A0               	movwf	___xxtofl@val
 14621  06E2  3001               	movlw	1
 14622  06E3  3188  2044  3185   	fcall	___xxtofl
 14623  06E6  0140               	movlb	0	; select bank0
 14624  06E7  0823               	movf	?___xxtofl+3,w
 14625  06E8  00B5               	movwf	___fldiv@b+3
 14626  06E9  0822               	movf	?___xxtofl+2,w
 14627  06EA  00B4               	movwf	___fldiv@b+2
 14628  06EB  0821               	movf	?___xxtofl+1,w
 14629  06EC  00B3               	movwf	___fldiv@b+1
 14630  06ED  0820               	movf	?___xxtofl,w
 14631  06EE  00B2               	movwf	___fldiv@b
 14632  06EF  3043               	movlw	67
 14633  06F0  00B1               	movwf	___fldiv@a+3
 14634  06F1  307F               	movlw	127
 14635  06F2  00B0               	movwf	___fldiv@a+2
 14636  06F3  3000               	movlw	0
 14637  06F4  00AF               	movwf	___fldiv@a+1
 14638  06F5  3000               	movlw	0
 14639  06F6  00AE               	movwf	___fldiv@a
 14640  06F7  3184  2448  3185   	fcall	___fldiv
 14641  06FA  0140               	movlb	0	; select bank0
 14642  06FB  0831               	movf	?___fldiv+3,w
 14643  06FC  00CF               	movwf	___flmul@a+3
 14644  06FD  0830               	movf	?___fldiv+2,w
 14645  06FE  00CE               	movwf	___flmul@a+2
 14646  06FF  082F               	movf	?___fldiv+1,w
 14647  0700  00CD               	movwf	___flmul@a+1
 14648  0701  082E               	movf	?___fldiv,w
 14649  0702  00CC               	movwf	___flmul@a
 14650  0703  3042               	movlw	66
 14651  0704  00CB               	movwf	___flmul@b+3
 14652  0705  30FE               	movlw	254
 14653  0706  00CA               	movwf	___flmul@b+2
 14654  0707  3000               	movlw	0
 14655  0708  00C9               	movwf	___flmul@b+1
 14656  0709  3000               	movlw	0
 14657  070A  00C8               	movwf	___flmul@b
 14658  070B  3180  2090  3185   	fcall	___flmul
 14659  070E  0140               	movlb	0	; select bank0
 14660  070F  084B               	movf	?___flmul+3,w
 14661  0710  00E5               	movwf	___fltol@f1+3
 14662  0711  084A               	movf	?___flmul+2,w
 14663  0712  00E4               	movwf	___fltol@f1+2
 14664  0713  0849               	movf	?___flmul+1,w
 14665  0714  00E3               	movwf	___fltol@f1+1
 14666  0715  0848               	movf	?___flmul,w
 14667  0716  00E2               	movwf	___fltol@f1
 14668  0717  3195  25C1  3185   	fcall	___fltol
 14669  071A  0140               	movlb	0	; select bank0
 14670  071B  0863               	movf	?___fltol+1,w
 14671  071C  0141               	movlb	1	; select bank1
 14672  071D  00C8               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128)
 14673  071E  0140               	movlb	0	; select bank0
 14674  071F  0862               	movf	?___fltol,w
 14675  0720  0141               	movlb	1	; select bank1
 14676  0721  00C7               	movwf	PWM4_LoadDutyValue@dutyValue^(0+128)
 14677  0722  3191  2125         	fcall	_PWM4_LoadDutyValue
 14678  0724  0008               	return
 14679  0725                     __end_of_LED_setColor:	
 14680                           
 14681                           	psect	text28
 14682  0844                     __ptext28:	
 14683 ;; *************** function ___xxtofl *****************
 14684 ;; Defined at:
 14685 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 14686 ;; Parameters:    Size  Location     Type
 14687 ;;  sign            1    wreg     unsigned char 
 14688 ;;  val             4    0[BANK0 ] long 
 14689 ;; Auto vars:     Size  Location     Type
 14690 ;;  sign            1    8[BANK0 ] unsigned char 
 14691 ;;  arg             4   10[BANK0 ] unsigned long 
 14692 ;;  exp             1    9[BANK0 ] unsigned char 
 14693 ;; Return value:  Size  Location     Type
 14694 ;;                  4    0[BANK0 ] unsigned char 
 14695 ;; Registers used:
 14696 ;;		wreg, status,2, status,0
 14697 ;; Tracked objects:
 14698 ;;		On entry : 0/0
 14699 ;;		On exit  : 0/0
 14700 ;;		Unchanged: 0/0
 14701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14702 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14703 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14704 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14705 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14706 ;;Total ram usage:       14 bytes
 14707 ;; Hardware stack levels used:    1
 14708 ;; Hardware stack levels required when called:    4
 14709 ;; This function calls:
 14710 ;;		Nothing
 14711 ;; This function is called by:
 14712 ;;		_LED_setColor
 14713 ;;		_beatBrightnessCalculation
 14714 ;; This function uses a non-reentrant model
 14715 ;;
 14716                           
 14717                           
 14718                           ;psect for function ___xxtofl
 14719  0844                     ___xxtofl:	
 14720                           
 14721                           ;incstack = 0
 14722                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14723                           ;___xxtofl@sign stored from wreg
 14724  0844  0140               	movlb	0	; select bank0
 14725  0845  00A8               	movwf	___xxtofl@sign
 14726  0846  0828               	movf	___xxtofl@sign,w
 14727  0847  1D03               	btfss	3,2
 14728  0848  1FA3               	btfss	___xxtofl@val+3,7
 14729  0849  285A               	goto	l7525
 14730  084A  0920               	comf	___xxtofl@val,w
 14731  084B  00AA               	movwf	___xxtofl@arg
 14732  084C  0921               	comf	___xxtofl@val+1,w
 14733  084D  00AB               	movwf	___xxtofl@arg+1
 14734  084E  0922               	comf	___xxtofl@val+2,w
 14735  084F  00AC               	movwf	___xxtofl@arg+2
 14736  0850  0923               	comf	___xxtofl@val+3,w
 14737  0851  00AD               	movwf	___xxtofl@arg+3
 14738  0852  0AAA               	incf	___xxtofl@arg,f
 14739  0853  1903               	skipnz
 14740  0854  0AAB               	incf	___xxtofl@arg+1,f
 14741  0855  1903               	skipnz
 14742  0856  0AAC               	incf	___xxtofl@arg+2,f
 14743  0857  1903               	skipnz
 14744  0858  0AAD               	incf	___xxtofl@arg+3,f
 14745  0859  2862               	goto	l2111
 14746  085A                     l7525:	
 14747  085A  0823               	movf	___xxtofl@val+3,w
 14748  085B  00AD               	movwf	___xxtofl@arg+3
 14749  085C  0822               	movf	___xxtofl@val+2,w
 14750  085D  00AC               	movwf	___xxtofl@arg+2
 14751  085E  0821               	movf	___xxtofl@val+1,w
 14752  085F  00AB               	movwf	___xxtofl@arg+1
 14753  0860  0820               	movf	___xxtofl@val,w
 14754  0861  00AA               	movwf	___xxtofl@arg
 14755  0862                     l2111:	
 14756  0862  0823               	movf	___xxtofl@val+3,w
 14757  0863  0422               	iorwf	___xxtofl@val+2,w
 14758  0864  0421               	iorwf	___xxtofl@val+1,w
 14759  0865  0420               	iorwf	___xxtofl@val,w
 14760  0866  1D03               	skipz
 14761  0867  2871               	goto	l7531
 14762  0868  3000               	movlw	0
 14763  0869  00A3               	movwf	?___xxtofl+3
 14764  086A  3000               	movlw	0
 14765  086B  00A2               	movwf	?___xxtofl+2
 14766  086C  3000               	movlw	0
 14767  086D  00A1               	movwf	?___xxtofl+1
 14768  086E  3000               	movlw	0
 14769  086F  00A0               	movwf	?___xxtofl
 14770  0870  0008               	return
 14771  0871                     l7531:	
 14772  0871  3096               	movlw	150
 14773  0872  00A4               	movwf	??___xxtofl
 14774  0873  0824               	movf	??___xxtofl,w
 14775  0874  00A9               	movwf	___xxtofl@exp
 14776  0875                     l7535:	
 14777  0875  30FE               	movlw	254
 14778  0876  052D               	andwf	___xxtofl@arg+3,w
 14779  0877  1903               	btfsc	3,2
 14780  0878  2898               	goto	l2117
 14781  0879  3001               	movlw	1
 14782  087A  00A4               	movwf	??___xxtofl
 14783  087B  0824               	movf	??___xxtofl,w
 14784  087C  07A9               	addwf	___xxtofl@exp,f
 14785  087D  3001               	movlw	1
 14786  087E                     u7315:	
 14787  087E  36AD               	lsrf	___xxtofl@arg+3,f
 14788  087F  0CAC               	rrf	___xxtofl@arg+2,f
 14789  0880  0CAB               	rrf	___xxtofl@arg+1,f
 14790  0881  0CAA               	rrf	___xxtofl@arg,f
 14791  0882  0B89               	decfsz	9,f
 14792  0883  287E               	goto	u7315
 14793  0884  2875               	goto	l7535
 14794  0885                     l7537:	
 14795  0885  3001               	movlw	1
 14796  0886  00A4               	movwf	??___xxtofl
 14797  0887  0824               	movf	??___xxtofl,w
 14798  0888  07A9               	addwf	___xxtofl@exp,f
 14799  0889  3001               	movlw	1
 14800  088A  07AA               	addwf	___xxtofl@arg,f
 14801  088B  3000               	movlw	0
 14802  088C  3DAB               	addwfc	___xxtofl@arg+1,f
 14803  088D  3000               	movlw	0
 14804  088E  3DAC               	addwfc	___xxtofl@arg+2,f
 14805  088F  3000               	movlw	0
 14806  0890  3DAD               	addwfc	___xxtofl@arg+3,f
 14807  0891  3001               	movlw	1
 14808  0892                     u7335:	
 14809  0892  36AD               	lsrf	___xxtofl@arg+3,f
 14810  0893  0CAC               	rrf	___xxtofl@arg+2,f
 14811  0894  0CAB               	rrf	___xxtofl@arg+1,f
 14812  0895  0CAA               	rrf	___xxtofl@arg,f
 14813  0896  0B89               	decfsz	9,f
 14814  0897  2892               	goto	u7335
 14815  0898                     l2117:	
 14816  0898  30FF               	movlw	255
 14817  0899  052D               	andwf	___xxtofl@arg+3,w
 14818  089A  1903               	btfsc	3,2
 14819  089B  28AA               	goto	l7545
 14820  089C  2885               	goto	l7537
 14821  089D                     l7547:	
 14822  089D  3002               	movlw	2
 14823  089E  0229               	subwf	___xxtofl@exp,w
 14824  089F  1C03               	btfss	3,0
 14825  08A0  28AC               	goto	l2124
 14826  08A1  3001               	movlw	1
 14827  08A2  02A9               	subwf	___xxtofl@exp,f
 14828  08A3  3001               	movlw	1
 14829  08A4                     u7355:	
 14830  08A4  35AA               	lslf	___xxtofl@arg,f
 14831  08A5  0DAB               	rlf	___xxtofl@arg+1,f
 14832  08A6  0DAC               	rlf	___xxtofl@arg+2,f
 14833  08A7  0DAD               	rlf	___xxtofl@arg+3,f
 14834  08A8  0B89               	decfsz	9,f
 14835  08A9  28A4               	goto	u7355
 14836  08AA                     l7545:	
 14837  08AA  1FAC               	btfss	___xxtofl@arg+2,7
 14838  08AB  289D               	goto	l7547
 14839  08AC                     l2124:	
 14840  08AC  1829               	btfsc	___xxtofl@exp,0
 14841  08AD  28B6               	goto	l2125
 14842  08AE  30FF               	movlw	255
 14843  08AF  05AA               	andwf	___xxtofl@arg,f
 14844  08B0  30FF               	movlw	255
 14845  08B1  05AB               	andwf	___xxtofl@arg+1,f
 14846  08B2  307F               	movlw	127
 14847  08B3  05AC               	andwf	___xxtofl@arg+2,f
 14848  08B4  30FF               	movlw	255
 14849  08B5  05AD               	andwf	___xxtofl@arg+3,f
 14850  08B6                     l2125:	
 14851  08B6  1003               	clrc
 14852  08B7  0CA9               	rrf	___xxtofl@exp,f
 14853  08B8  0829               	movf	___xxtofl@exp,w
 14854  08B9  00A4               	movwf	??___xxtofl
 14855  08BA  01A5               	clrf	??___xxtofl+1
 14856  08BB  01A6               	clrf	??___xxtofl+2
 14857  08BC  01A7               	clrf	??___xxtofl+3
 14858  08BD  3018               	movlw	24
 14859  08BE                     u7395:	
 14860  08BE  35A4               	lslf	??___xxtofl,f
 14861  08BF  0DA5               	rlf	??___xxtofl+1,f
 14862  08C0  0DA6               	rlf	??___xxtofl+2,f
 14863  08C1  0DA7               	rlf	??___xxtofl+3,f
 14864  08C2  0B89               	decfsz	9,f
 14865  08C3  28BE               	goto	u7395
 14866  08C4  0824               	movf	??___xxtofl,w
 14867  08C5  04AA               	iorwf	___xxtofl@arg,f
 14868  08C6  0825               	movf	??___xxtofl+1,w
 14869  08C7  04AB               	iorwf	___xxtofl@arg+1,f
 14870  08C8  0826               	movf	??___xxtofl+2,w
 14871  08C9  04AC               	iorwf	___xxtofl@arg+2,f
 14872  08CA  0827               	movf	??___xxtofl+3,w
 14873  08CB  04AD               	iorwf	___xxtofl@arg+3,f
 14874  08CC  0828               	movf	___xxtofl@sign,w
 14875  08CD  1D03               	btfss	3,2
 14876  08CE  1FA3               	btfss	___xxtofl@val+3,7
 14877  08CF  28D1               	goto	l7559
 14878  08D0  17AD               	bsf	___xxtofl@arg+3,7
 14879  08D1                     l7559:	
 14880  08D1  082D               	movf	___xxtofl@arg+3,w
 14881  08D2  00A3               	movwf	?___xxtofl+3
 14882  08D3  082C               	movf	___xxtofl@arg+2,w
 14883  08D4  00A2               	movwf	?___xxtofl+2
 14884  08D5  082B               	movf	___xxtofl@arg+1,w
 14885  08D6  00A1               	movwf	?___xxtofl+1
 14886  08D7  082A               	movf	___xxtofl@arg,w
 14887  08D8  00A0               	movwf	?___xxtofl
 14888  08D9  0008               	return
 14889  08DA                     __end_of___xxtofl:	
 14890                           
 14891                           	psect	text29
 14892  15C1                     __ptext29:	
 14893 ;; *************** function ___fltol *****************
 14894 ;; Defined at:
 14895 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 14896 ;; Parameters:    Size  Location     Type
 14897 ;;  f1              4   66[BANK0 ] unsigned char 
 14898 ;; Auto vars:     Size  Location     Type
 14899 ;;  exp1            1   76[BANK0 ] unsigned char 
 14900 ;;  sign1           1   75[BANK0 ] unsigned char 
 14901 ;; Return value:  Size  Location     Type
 14902 ;;                  4   66[BANK0 ] long 
 14903 ;; Registers used:
 14904 ;;		wreg, status,2, status,0
 14905 ;; Tracked objects:
 14906 ;;		On entry : 0/0
 14907 ;;		On exit  : 0/0
 14908 ;;		Unchanged: 0/0
 14909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14910 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14911 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14912 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14913 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14914 ;;Total ram usage:       11 bytes
 14915 ;; Hardware stack levels used:    1
 14916 ;; Hardware stack levels required when called:    4
 14917 ;; This function calls:
 14918 ;;		Nothing
 14919 ;; This function is called by:
 14920 ;;		_LED_setColor
 14921 ;;		_beatColorCreator
 14922 ;;		_beatBrightnessCalculation
 14923 ;; This function uses a non-reentrant model
 14924 ;;
 14925                           
 14926                           
 14927                           ;psect for function ___fltol
 14928  15C1                     ___fltol:	
 14929                           
 14930                           ;incstack = 0
 14931                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14932  15C1  1003               	clrc
 14933  15C2  0140               	movlb	0	; select bank0
 14934  15C3  0D64               	rlf	___fltol@f1+2,w
 14935  15C4  0D65               	rlf	___fltol@f1+3,w
 14936  15C5  00E6               	movwf	??___fltol
 14937  15C6  0866               	movf	??___fltol,w
 14938  15C7  00EC               	movwf	___fltol@exp1
 14939  15C8  086C               	movf	___fltol@exp1,w
 14940  15C9  1D03               	btfss	3,2
 14941  15CA  2DD4               	goto	l7209
 14942  15CB                     l7205:	
 14943  15CB  3000               	movlw	0
 14944  15CC  00E5               	movwf	?___fltol+3
 14945  15CD  3000               	movlw	0
 14946  15CE  00E4               	movwf	?___fltol+2
 14947  15CF  3000               	movlw	0
 14948  15D0  00E3               	movwf	?___fltol+1
 14949  15D1  3000               	movlw	0
 14950  15D2  00E2               	movwf	?___fltol
 14951  15D3  0008               	return
 14952  15D4                     l7209:	
 14953  15D4  0862               	movf	___fltol@f1,w
 14954  15D5  00E6               	movwf	??___fltol
 14955  15D6  0863               	movf	___fltol@f1+1,w
 14956  15D7  00E7               	movwf	??___fltol+1
 14957  15D8  0864               	movf	___fltol@f1+2,w
 14958  15D9  00E8               	movwf	??___fltol+2
 14959  15DA  0865               	movf	___fltol@f1+3,w
 14960  15DB  00E9               	movwf	??___fltol+3
 14961  15DC  301F               	movlw	31
 14962  15DD                     u6645:	
 14963  15DD  36E9               	lsrf	??___fltol+3,f
 14964  15DE  0CE8               	rrf	??___fltol+2,f
 14965  15DF  0CE7               	rrf	??___fltol+1,f
 14966  15E0  0CE6               	rrf	??___fltol,f
 14967  15E1  0B89               	decfsz	9,f
 14968  15E2  2DDD               	goto	u6645
 14969  15E3  0866               	movf	??___fltol,w
 14970  15E4  00EA               	movwf	??___fltol+4
 14971  15E5  086A               	movf	??___fltol+4,w
 14972  15E6  00EB               	movwf	___fltol@sign1
 14973  15E7  17E4               	bsf	___fltol@f1+2,7
 14974  15E8  30FF               	movlw	255
 14975  15E9  05E2               	andwf	___fltol@f1,f
 14976  15EA  30FF               	movlw	255
 14977  15EB  05E3               	andwf	___fltol@f1+1,f
 14978  15EC  30FF               	movlw	255
 14979  15ED  05E4               	andwf	___fltol@f1+2,f
 14980  15EE  3000               	movlw	0
 14981  15EF  05E5               	andwf	___fltol@f1+3,f
 14982  15F0  3096               	movlw	150
 14983  15F1  02EC               	subwf	___fltol@exp1,f
 14984  15F2  1FEC               	btfss	___fltol@exp1,7
 14985  15F3  2E07               	goto	l7227
 14986  15F4  086C               	movf	___fltol@exp1,w
 14987  15F5  3A80               	xorlw	128
 14988  15F6  3E97               	addlw	151
 14989  15F7  1C03               	btfss	3,0
 14990  15F8  2DCB               	goto	l7205
 14991  15F9                     l7225:	
 14992  15F9  3001               	movlw	1
 14993  15FA                     u6675:	
 14994  15FA  36E5               	lsrf	___fltol@f1+3,f
 14995  15FB  0CE4               	rrf	___fltol@f1+2,f
 14996  15FC  0CE3               	rrf	___fltol@f1+1,f
 14997  15FD  0CE2               	rrf	___fltol@f1,f
 14998  15FE  0B89               	decfsz	9,f
 14999  15FF  2DFA               	goto	u6675
 15000  1600  3001               	movlw	1
 15001  1601  00E6               	movwf	??___fltol
 15002  1602  0866               	movf	??___fltol,w
 15003  1603  07EC               	addwf	___fltol@exp1,f
 15004  1604  1903               	btfsc	3,2
 15005  1605  2E18               	goto	l7235
 15006  1606  2DF9               	goto	l7225
 15007  1607                     l7227:	
 15008  1607  3020               	movlw	32
 15009  1608  026C               	subwf	___fltol@exp1,w
 15010  1609  1803               	btfsc	3,0
 15011  160A  2DCB               	goto	l7205
 15012  160B                     l1877:	
 15013  160B  086C               	movf	___fltol@exp1,w
 15014  160C  1903               	btfsc	3,2
 15015  160D  2E18               	goto	l7235
 15016  160E  3001               	movlw	1
 15017  160F                     u6705:	
 15018  160F  35E2               	lslf	___fltol@f1,f
 15019  1610  0DE3               	rlf	___fltol@f1+1,f
 15020  1611  0DE4               	rlf	___fltol@f1+2,f
 15021  1612  0DE5               	rlf	___fltol@f1+3,f
 15022  1613  0B89               	decfsz	9,f
 15023  1614  2E0F               	goto	u6705
 15024  1615  3001               	movlw	1
 15025  1616  02EC               	subwf	___fltol@exp1,f
 15026  1617  2E0B               	goto	l1877
 15027  1618                     l7235:	
 15028  1618  086B               	movf	___fltol@sign1,w
 15029  1619  1903               	btfsc	3,2
 15030  161A  0008               	return
 15031  161B  09E2               	comf	___fltol@f1,f
 15032  161C  09E3               	comf	___fltol@f1+1,f
 15033  161D  09E4               	comf	___fltol@f1+2,f
 15034  161E  09E5               	comf	___fltol@f1+3,f
 15035  161F  0AE2               	incf	___fltol@f1,f
 15036  1620  1903               	skipnz
 15037  1621  0AE3               	incf	___fltol@f1+1,f
 15038  1622  1903               	skipnz
 15039  1623  0AE4               	incf	___fltol@f1+2,f
 15040  1624  1903               	skipnz
 15041  1625  0AE5               	incf	___fltol@f1+3,f
 15042  1626  0008               	return
 15043  1627                     __end_of___fltol:	
 15044                           
 15045                           	psect	text30
 15046  0090                     __ptext30:	
 15047 ;; *************** function ___flmul *****************
 15048 ;; Defined at:
 15049 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 15050 ;; Parameters:    Size  Location     Type
 15051 ;;  b               4   40[BANK0 ] long 
 15052 ;;  a               4   44[BANK0 ] long 
 15053 ;; Auto vars:     Size  Location     Type
 15054 ;;  prod            4   60[BANK0 ] struct .
 15055 ;;  grs             4   55[BANK0 ] unsigned long 
 15056 ;;  temp            2   64[BANK0 ] struct .
 15057 ;;  bexp            1   59[BANK0 ] unsigned char 
 15058 ;;  aexp            1   54[BANK0 ] unsigned char 
 15059 ;;  sign            1   53[BANK0 ] unsigned char 
 15060 ;; Return value:  Size  Location     Type
 15061 ;;                  4   40[BANK0 ] unsigned char 
 15062 ;; Registers used:
 15063 ;;		wreg, status,2, status,0, pclath, cstack
 15064 ;; Tracked objects:
 15065 ;;		On entry : 0/0
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15069 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15070 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15071 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15072 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15073 ;;Total ram usage:       26 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; Hardware stack levels required when called:    5
 15076 ;; This function calls:
 15077 ;;		__Umul8_16
 15078 ;; This function is called by:
 15079 ;;		_LED_setColor
 15080 ;;		_beatBrightnessCalculation
 15081 ;; This function uses a non-reentrant model
 15082 ;;
 15083                           
 15084                           
 15085                           ;psect for function ___flmul
 15086  0090                     ___flmul:	
 15087                           
 15088                           ;incstack = 0
 15089                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15090  0090  0140               	movlb	0	; select bank0
 15091  0091  084B               	movf	___flmul@b+3,w
 15092  0092  3980               	andlw	128
 15093  0093  00D0               	movwf	??___flmul
 15094  0094  0850               	movf	??___flmul,w
 15095  0095  00D5               	movwf	___flmul@sign
 15096  0096  354B               	lslf	___flmul@b+3,w
 15097  0097  00D0               	movwf	??___flmul
 15098  0098  0850               	movf	??___flmul,w
 15099  0099  00DB               	movwf	___flmul@bexp
 15100  009A  1BCA               	btfsc	___flmul@b+2,7
 15101  009B  145B               	bsf	___flmul@bexp,0
 15102  009C  085B               	movf	___flmul@bexp,w
 15103  009D  1903               	btfsc	3,2
 15104  009E  28AC               	goto	l7395
 15105  009F  0A5B               	incf	___flmul@bexp,w
 15106  00A0  1D03               	btfss	3,2
 15107  00A1  28AA               	goto	l7393
 15108  00A2  3000               	movlw	0
 15109  00A3  00CB               	movwf	___flmul@b+3
 15110  00A4  3000               	movlw	0
 15111  00A5  00CA               	movwf	___flmul@b+2
 15112  00A6  3000               	movlw	0
 15113  00A7  00C9               	movwf	___flmul@b+1
 15114  00A8  3000               	movlw	0
 15115  00A9  00C8               	movwf	___flmul@b
 15116  00AA                     l7393:	
 15117  00AA  17CA               	bsf	___flmul@b+2,7
 15118  00AB  28B4               	goto	l7397
 15119  00AC                     l7395:	
 15120  00AC  3000               	movlw	0
 15121  00AD  00CB               	movwf	___flmul@b+3
 15122  00AE  3000               	movlw	0
 15123  00AF  00CA               	movwf	___flmul@b+2
 15124  00B0  3000               	movlw	0
 15125  00B1  00C9               	movwf	___flmul@b+1
 15126  00B2  3000               	movlw	0
 15127  00B3  00C8               	movwf	___flmul@b
 15128  00B4                     l7397:	
 15129  00B4  084F               	movf	___flmul@a+3,w
 15130  00B5  3980               	andlw	128
 15131  00B6  00D0               	movwf	??___flmul
 15132  00B7  0850               	movf	??___flmul,w
 15133  00B8  06D5               	xorwf	___flmul@sign,f
 15134  00B9  354F               	lslf	___flmul@a+3,w
 15135  00BA  00D0               	movwf	??___flmul
 15136  00BB  0850               	movf	??___flmul,w
 15137  00BC  00D6               	movwf	___flmul@aexp
 15138  00BD  1BCE               	btfsc	___flmul@a+2,7
 15139  00BE  1456               	bsf	___flmul@aexp,0
 15140  00BF  0856               	movf	___flmul@aexp,w
 15141  00C0  1903               	btfsc	3,2
 15142  00C1  28CF               	goto	l7413
 15143  00C2  0A56               	incf	___flmul@aexp,w
 15144  00C3  1D03               	btfss	3,2
 15145  00C4  28CD               	goto	l7411
 15146  00C5  3000               	movlw	0
 15147  00C6  00CF               	movwf	___flmul@a+3
 15148  00C7  3000               	movlw	0
 15149  00C8  00CE               	movwf	___flmul@a+2
 15150  00C9  3000               	movlw	0
 15151  00CA  00CD               	movwf	___flmul@a+1
 15152  00CB  3000               	movlw	0
 15153  00CC  00CC               	movwf	___flmul@a
 15154  00CD                     l7411:	
 15155  00CD  17CE               	bsf	___flmul@a+2,7
 15156  00CE  28D7               	goto	l7415
 15157  00CF                     l7413:	
 15158  00CF  3000               	movlw	0
 15159  00D0  00CF               	movwf	___flmul@a+3
 15160  00D1  3000               	movlw	0
 15161  00D2  00CE               	movwf	___flmul@a+2
 15162  00D3  3000               	movlw	0
 15163  00D4  00CD               	movwf	___flmul@a+1
 15164  00D5  3000               	movlw	0
 15165  00D6  00CC               	movwf	___flmul@a
 15166  00D7                     l7415:	
 15167  00D7  0856               	movf	___flmul@aexp,w
 15168  00D8  1D03               	btfss	3,2
 15169  00D9  085B               	movf	___flmul@bexp,w
 15170  00DA  1D03               	btfss	3,2
 15171  00DB  28E5               	goto	l7423
 15172  00DC  3000               	movlw	0
 15173  00DD  00CB               	movwf	?___flmul+3
 15174  00DE  3000               	movlw	0
 15175  00DF  00CA               	movwf	?___flmul+2
 15176  00E0  3000               	movlw	0
 15177  00E1  00C9               	movwf	?___flmul+1
 15178  00E2  3000               	movlw	0
 15179  00E3  00C8               	movwf	?___flmul
 15180  00E4  0008               	return
 15181  00E5                     l7423:	
 15182  00E5  0848               	movf	___flmul@b,w
 15183  00E6  00D0               	movwf	??___flmul
 15184  00E7  0850               	movf	??___flmul,w
 15185  00E8  00A0               	movwf	__Umul8_16@multiplicand
 15186  00E9  084E               	movf	___flmul@a+2,w
 15187  00EA  3191  2163  3180   	fcall	__Umul8_16
 15188  00ED  0140               	movlb	0	; select bank0
 15189  00EE  0821               	movf	?__Umul8_16+1,w
 15190  00EF  00E1               	movwf	___flmul@temp+1
 15191  00F0  0820               	movf	?__Umul8_16,w
 15192  00F1  00E0               	movwf	___flmul@temp
 15193  00F2  0860               	movf	___flmul@temp,w
 15194  00F3  00D0               	movwf	??___flmul
 15195  00F4  01D1               	clrf	??___flmul+1
 15196  00F5  01D2               	clrf	??___flmul+2
 15197  00F6  01D3               	clrf	??___flmul+3
 15198  00F7  0853               	movf	??___flmul+3,w
 15199  00F8  00DA               	movwf	___flmul@grs+3
 15200  00F9  0852               	movf	??___flmul+2,w
 15201  00FA  00D9               	movwf	___flmul@grs+2
 15202  00FB  0851               	movf	??___flmul+1,w
 15203  00FC  00D8               	movwf	___flmul@grs+1
 15204  00FD  0850               	movf	??___flmul,w
 15205  00FE  00D7               	movwf	___flmul@grs
 15206  00FF  0861               	movf	___flmul@temp+1,w
 15207  0100  00D0               	movwf	??___flmul
 15208  0101  01D1               	clrf	??___flmul+1
 15209  0102  01D2               	clrf	??___flmul+2
 15210  0103  01D3               	clrf	??___flmul+3
 15211  0104  0853               	movf	??___flmul+3,w
 15212  0105  00DF               	movwf	___flmul@prod+3
 15213  0106  0852               	movf	??___flmul+2,w
 15214  0107  00DE               	movwf	___flmul@prod+2
 15215  0108  0851               	movf	??___flmul+1,w
 15216  0109  00DD               	movwf	___flmul@prod+1
 15217  010A  0850               	movf	??___flmul,w
 15218  010B  00DC               	movwf	___flmul@prod
 15219  010C  0849               	movf	___flmul@b+1,w
 15220  010D  00D0               	movwf	??___flmul
 15221  010E  0850               	movf	??___flmul,w
 15222  010F  00A0               	movwf	__Umul8_16@multiplicand
 15223  0110  084D               	movf	___flmul@a+1,w
 15224  0111  3191  2163  3180   	fcall	__Umul8_16
 15225  0114  0140               	movlb	0	; select bank0
 15226  0115  0821               	movf	?__Umul8_16+1,w
 15227  0116  00E1               	movwf	___flmul@temp+1
 15228  0117  0820               	movf	?__Umul8_16,w
 15229  0118  00E0               	movwf	___flmul@temp
 15230  0119  0860               	movf	___flmul@temp,w
 15231  011A  00D0               	movwf	??___flmul
 15232  011B  01D1               	clrf	??___flmul+1
 15233  011C  01D2               	clrf	??___flmul+2
 15234  011D  01D3               	clrf	??___flmul+3
 15235  011E  0850               	movf	??___flmul,w
 15236  011F  07D7               	addwf	___flmul@grs,f
 15237  0120  0851               	movf	??___flmul+1,w
 15238  0121  3DD8               	addwfc	___flmul@grs+1,f
 15239  0122  0852               	movf	??___flmul+2,w
 15240  0123  3DD9               	addwfc	___flmul@grs+2,f
 15241  0124  0853               	movf	??___flmul+3,w
 15242  0125  3DDA               	addwfc	___flmul@grs+3,f
 15243  0126  0861               	movf	___flmul@temp+1,w
 15244  0127  00D0               	movwf	??___flmul
 15245  0128  01D1               	clrf	??___flmul+1
 15246  0129  01D2               	clrf	??___flmul+2
 15247  012A  01D3               	clrf	??___flmul+3
 15248  012B  0850               	movf	??___flmul,w
 15249  012C  07DC               	addwf	___flmul@prod,f
 15250  012D  0851               	movf	??___flmul+1,w
 15251  012E  3DDD               	addwfc	___flmul@prod+1,f
 15252  012F  0852               	movf	??___flmul+2,w
 15253  0130  3DDE               	addwfc	___flmul@prod+2,f
 15254  0131  0853               	movf	??___flmul+3,w
 15255  0132  3DDF               	addwfc	___flmul@prod+3,f
 15256  0133  084A               	movf	___flmul@b+2,w
 15257  0134  00D0               	movwf	??___flmul
 15258  0135  0850               	movf	??___flmul,w
 15259  0136  00A0               	movwf	__Umul8_16@multiplicand
 15260  0137  084C               	movf	___flmul@a,w
 15261  0138  3191  2163  3180   	fcall	__Umul8_16
 15262  013B  0140               	movlb	0	; select bank0
 15263  013C  0821               	movf	?__Umul8_16+1,w
 15264  013D  00E1               	movwf	___flmul@temp+1
 15265  013E  0820               	movf	?__Umul8_16,w
 15266  013F  00E0               	movwf	___flmul@temp
 15267  0140  0860               	movf	___flmul@temp,w
 15268  0141  00D0               	movwf	??___flmul
 15269  0142  01D1               	clrf	??___flmul+1
 15270  0143  01D2               	clrf	??___flmul+2
 15271  0144  01D3               	clrf	??___flmul+3
 15272  0145  0850               	movf	??___flmul,w
 15273  0146  07D7               	addwf	___flmul@grs,f
 15274  0147  0851               	movf	??___flmul+1,w
 15275  0148  3DD8               	addwfc	___flmul@grs+1,f
 15276  0149  0852               	movf	??___flmul+2,w
 15277  014A  3DD9               	addwfc	___flmul@grs+2,f
 15278  014B  0853               	movf	??___flmul+3,w
 15279  014C  3DDA               	addwfc	___flmul@grs+3,f
 15280  014D  0861               	movf	___flmul@temp+1,w
 15281  014E  00D0               	movwf	??___flmul
 15282  014F  01D1               	clrf	??___flmul+1
 15283  0150  01D2               	clrf	??___flmul+2
 15284  0151  01D3               	clrf	??___flmul+3
 15285  0152  0850               	movf	??___flmul,w
 15286  0153  07DC               	addwf	___flmul@prod,f
 15287  0154  0851               	movf	??___flmul+1,w
 15288  0155  3DDD               	addwfc	___flmul@prod+1,f
 15289  0156  0852               	movf	??___flmul+2,w
 15290  0157  3DDE               	addwfc	___flmul@prod+2,f
 15291  0158  0853               	movf	??___flmul+3,w
 15292  0159  3DDF               	addwfc	___flmul@prod+3,f
 15293  015A  3008               	movlw	8
 15294  015B                     u7105:	
 15295  015B  35D7               	lslf	___flmul@grs,f
 15296  015C  0DD8               	rlf	___flmul@grs+1,f
 15297  015D  0DD9               	rlf	___flmul@grs+2,f
 15298  015E  0DDA               	rlf	___flmul@grs+3,f
 15299  015F  0B89               	decfsz	9,f
 15300  0160  295B               	goto	u7105
 15301  0161  0849               	movf	___flmul@b+1,w
 15302  0162  00D0               	movwf	??___flmul
 15303  0163  0850               	movf	??___flmul,w
 15304  0164  00A0               	movwf	__Umul8_16@multiplicand
 15305  0165  084C               	movf	___flmul@a,w
 15306  0166  3191  2163  3180   	fcall	__Umul8_16
 15307  0169  0140               	movlb	0	; select bank0
 15308  016A  0821               	movf	?__Umul8_16+1,w
 15309  016B  00E1               	movwf	___flmul@temp+1
 15310  016C  0820               	movf	?__Umul8_16,w
 15311  016D  00E0               	movwf	___flmul@temp
 15312  016E  0860               	movf	___flmul@temp,w
 15313  016F  07D7               	addwf	___flmul@grs,f
 15314  0170  0861               	movf	___flmul@temp+1,w
 15315  0171  3DD8               	addwfc	___flmul@grs+1,f
 15316  0172  3000               	movlw	0
 15317  0173  3DD9               	addwfc	___flmul@grs+2,f
 15318  0174  3DDA               	addwfc	___flmul@grs+3,f
 15319  0175  0848               	movf	___flmul@b,w
 15320  0176  00D0               	movwf	??___flmul
 15321  0177  0850               	movf	??___flmul,w
 15322  0178  00A0               	movwf	__Umul8_16@multiplicand
 15323  0179  084D               	movf	___flmul@a+1,w
 15324  017A  3191  2163  3180   	fcall	__Umul8_16
 15325  017D  0140               	movlb	0	; select bank0
 15326  017E  0821               	movf	?__Umul8_16+1,w
 15327  017F  00E1               	movwf	___flmul@temp+1
 15328  0180  0820               	movf	?__Umul8_16,w
 15329  0181  00E0               	movwf	___flmul@temp
 15330  0182  0860               	movf	___flmul@temp,w
 15331  0183  07D7               	addwf	___flmul@grs,f
 15332  0184  0861               	movf	___flmul@temp+1,w
 15333  0185  3DD8               	addwfc	___flmul@grs+1,f
 15334  0186  3000               	movlw	0
 15335  0187  3DD9               	addwfc	___flmul@grs+2,f
 15336  0188  3DDA               	addwfc	___flmul@grs+3,f
 15337  0189  3008               	movlw	8
 15338  018A                     u7115:	
 15339  018A  35D7               	lslf	___flmul@grs,f
 15340  018B  0DD8               	rlf	___flmul@grs+1,f
 15341  018C  0DD9               	rlf	___flmul@grs+2,f
 15342  018D  0DDA               	rlf	___flmul@grs+3,f
 15343  018E  0B89               	decfsz	9,f
 15344  018F  298A               	goto	u7115
 15345  0190  0848               	movf	___flmul@b,w
 15346  0191  00D0               	movwf	??___flmul
 15347  0192  0850               	movf	??___flmul,w
 15348  0193  00A0               	movwf	__Umul8_16@multiplicand
 15349  0194  084C               	movf	___flmul@a,w
 15350  0195  3191  2163  3180   	fcall	__Umul8_16
 15351  0198  0140               	movlb	0	; select bank0
 15352  0199  0821               	movf	?__Umul8_16+1,w
 15353  019A  00E1               	movwf	___flmul@temp+1
 15354  019B  0820               	movf	?__Umul8_16,w
 15355  019C  00E0               	movwf	___flmul@temp
 15356  019D  0860               	movf	___flmul@temp,w
 15357  019E  07D7               	addwf	___flmul@grs,f
 15358  019F  0861               	movf	___flmul@temp+1,w
 15359  01A0  3DD8               	addwfc	___flmul@grs+1,f
 15360  01A1  3000               	movlw	0
 15361  01A2  3DD9               	addwfc	___flmul@grs+2,f
 15362  01A3  3DDA               	addwfc	___flmul@grs+3,f
 15363  01A4  0849               	movf	___flmul@b+1,w
 15364  01A5  00D0               	movwf	??___flmul
 15365  01A6  0850               	movf	??___flmul,w
 15366  01A7  00A0               	movwf	__Umul8_16@multiplicand
 15367  01A8  084E               	movf	___flmul@a+2,w
 15368  01A9  3191  2163  3180   	fcall	__Umul8_16
 15369  01AC  0140               	movlb	0	; select bank0
 15370  01AD  0821               	movf	?__Umul8_16+1,w
 15371  01AE  00E1               	movwf	___flmul@temp+1
 15372  01AF  0820               	movf	?__Umul8_16,w
 15373  01B0  00E0               	movwf	___flmul@temp
 15374  01B1  0860               	movf	___flmul@temp,w
 15375  01B2  07DC               	addwf	___flmul@prod,f
 15376  01B3  0861               	movf	___flmul@temp+1,w
 15377  01B4  3DDD               	addwfc	___flmul@prod+1,f
 15378  01B5  3000               	movlw	0
 15379  01B6  3DDE               	addwfc	___flmul@prod+2,f
 15380  01B7  3DDF               	addwfc	___flmul@prod+3,f
 15381  01B8  084A               	movf	___flmul@b+2,w
 15382  01B9  00D0               	movwf	??___flmul
 15383  01BA  0850               	movf	??___flmul,w
 15384  01BB  00A0               	movwf	__Umul8_16@multiplicand
 15385  01BC  084D               	movf	___flmul@a+1,w
 15386  01BD  3191  2163  3180   	fcall	__Umul8_16
 15387  01C0  0140               	movlb	0	; select bank0
 15388  01C1  0821               	movf	?__Umul8_16+1,w
 15389  01C2  00E1               	movwf	___flmul@temp+1
 15390  01C3  0820               	movf	?__Umul8_16,w
 15391  01C4  00E0               	movwf	___flmul@temp
 15392  01C5  0860               	movf	___flmul@temp,w
 15393  01C6  07DC               	addwf	___flmul@prod,f
 15394  01C7  0861               	movf	___flmul@temp+1,w
 15395  01C8  3DDD               	addwfc	___flmul@prod+1,f
 15396  01C9  3000               	movlw	0
 15397  01CA  3DDE               	addwfc	___flmul@prod+2,f
 15398  01CB  3DDF               	addwfc	___flmul@prod+3,f
 15399  01CC  084A               	movf	___flmul@b+2,w
 15400  01CD  00D0               	movwf	??___flmul
 15401  01CE  0850               	movf	??___flmul,w
 15402  01CF  00A0               	movwf	__Umul8_16@multiplicand
 15403  01D0  084E               	movf	___flmul@a+2,w
 15404  01D1  3191  2163  3180   	fcall	__Umul8_16
 15405  01D4  0140               	movlb	0	; select bank0
 15406  01D5  0821               	movf	?__Umul8_16+1,w
 15407  01D6  00E1               	movwf	___flmul@temp+1
 15408  01D7  0820               	movf	?__Umul8_16,w
 15409  01D8  00E0               	movwf	___flmul@temp
 15410  01D9  0860               	movf	___flmul@temp,w
 15411  01DA  00D0               	movwf	??___flmul
 15412  01DB  0861               	movf	___flmul@temp+1,w
 15413  01DC  00D1               	movwf	??___flmul+1
 15414  01DD  01D2               	clrf	??___flmul+2
 15415  01DE  01D3               	clrf	??___flmul+3
 15416  01DF  3008               	movlw	8
 15417  01E0                     u7125:	
 15418  01E0  35D0               	lslf	??___flmul,f
 15419  01E1  0DD1               	rlf	??___flmul+1,f
 15420  01E2  0DD2               	rlf	??___flmul+2,f
 15421  01E3  0DD3               	rlf	??___flmul+3,f
 15422  01E4  0B89               	decfsz	9,f
 15423  01E5  29E0               	goto	u7125
 15424  01E6  0850               	movf	??___flmul,w
 15425  01E7  07DC               	addwf	___flmul@prod,f
 15426  01E8  0851               	movf	??___flmul+1,w
 15427  01E9  3DDD               	addwfc	___flmul@prod+1,f
 15428  01EA  0852               	movf	??___flmul+2,w
 15429  01EB  3DDE               	addwfc	___flmul@prod+2,f
 15430  01EC  0853               	movf	??___flmul+3,w
 15431  01ED  3DDF               	addwfc	___flmul@prod+3,f
 15432  01EE  0857               	movf	___flmul@grs,w
 15433  01EF  00D0               	movwf	??___flmul
 15434  01F0  0858               	movf	___flmul@grs+1,w
 15435  01F1  00D1               	movwf	??___flmul+1
 15436  01F2  0859               	movf	___flmul@grs+2,w
 15437  01F3  00D2               	movwf	??___flmul+2
 15438  01F4  085A               	movf	___flmul@grs+3,w
 15439  01F5  00D3               	movwf	??___flmul+3
 15440  01F6  3018               	movlw	24
 15441  01F7                     u7135:	
 15442  01F7  36D3               	lsrf	??___flmul+3,f
 15443  01F8  0CD2               	rrf	??___flmul+2,f
 15444  01F9  0CD1               	rrf	??___flmul+1,f
 15445  01FA  0CD0               	rrf	??___flmul,f
 15446  01FB  0B89               	decfsz	9,f
 15447  01FC  29F7               	goto	u7135
 15448  01FD  0850               	movf	??___flmul,w
 15449  01FE  07DC               	addwf	___flmul@prod,f
 15450  01FF  0851               	movf	??___flmul+1,w
 15451  0200  3DDD               	addwfc	___flmul@prod+1,f
 15452  0201  0852               	movf	??___flmul+2,w
 15453  0202  3DDE               	addwfc	___flmul@prod+2,f
 15454  0203  0853               	movf	??___flmul+3,w
 15455  0204  3DDF               	addwfc	___flmul@prod+3,f
 15456  0205  3008               	movlw	8
 15457  0206                     u7145:	
 15458  0206  35D7               	lslf	___flmul@grs,f
 15459  0207  0DD8               	rlf	___flmul@grs+1,f
 15460  0208  0DD9               	rlf	___flmul@grs+2,f
 15461  0209  0DDA               	rlf	___flmul@grs+3,f
 15462  020A  0B89               	decfsz	9,f
 15463  020B  2A06               	goto	u7145
 15464  020C  085B               	movf	___flmul@bexp,w
 15465  020D  0756               	addwf	___flmul@aexp,w
 15466  020E  00D0               	movwf	??___flmul
 15467  020F  01D1               	clrf	??___flmul+1
 15468  0210  0DD1               	rlf	??___flmul+1,f
 15469  0211  0850               	movf	??___flmul,w
 15470  0212  3E82               	addlw	130
 15471  0213  00E0               	movwf	___flmul@temp
 15472  0214  30FF               	movlw	255
 15473  0215  3D51               	addwfc	??___flmul+1,w
 15474  0216  00E1               	movwf	___flmul@temp+1
 15475  0217                     l7475:	
 15476  0217  1BDE               	btfsc	___flmul@prod+2,7
 15477  0218  2A2E               	goto	l7477
 15478  0219  3001               	movlw	1
 15479  021A                     u7155:	
 15480  021A  35DC               	lslf	___flmul@prod,f
 15481  021B  0DDD               	rlf	___flmul@prod+1,f
 15482  021C  0DDE               	rlf	___flmul@prod+2,f
 15483  021D  0DDF               	rlf	___flmul@prod+3,f
 15484  021E  0B89               	decfsz	9,f
 15485  021F  2A1A               	goto	u7155
 15486  0220  1BDA               	btfsc	___flmul@grs+3,7
 15487  0221  145C               	bsf	___flmul@prod,0
 15488  0222  3001               	movlw	1
 15489  0223                     u7175:	
 15490  0223  35D7               	lslf	___flmul@grs,f
 15491  0224  0DD8               	rlf	___flmul@grs+1,f
 15492  0225  0DD9               	rlf	___flmul@grs+2,f
 15493  0226  0DDA               	rlf	___flmul@grs+3,f
 15494  0227  0B89               	decfsz	9,f
 15495  0228  2A23               	goto	u7175
 15496  0229  30FF               	movlw	255
 15497  022A  07E0               	addwf	___flmul@temp,f
 15498  022B  30FF               	movlw	255
 15499  022C  3DE1               	addwfc	___flmul@temp+1,f
 15500  022D  2A17               	goto	l7475
 15501  022E                     l7477:	
 15502  022E  01D6               	clrf	___flmul@aexp
 15503  022F  1FDA               	btfss	___flmul@grs+3,7
 15504  0230  2A47               	goto	l7487
 15505  0231  30FF               	movlw	255
 15506  0232  0557               	andwf	___flmul@grs,w
 15507  0233  00D0               	movwf	??___flmul
 15508  0234  30FF               	movlw	255
 15509  0235  0558               	andwf	___flmul@grs+1,w
 15510  0236  00D1               	movwf	??___flmul+1
 15511  0237  30FF               	movlw	255
 15512  0238  0559               	andwf	___flmul@grs+2,w
 15513  0239  00D2               	movwf	??___flmul+2
 15514  023A  307F               	movlw	127
 15515  023B  055A               	andwf	___flmul@grs+3,w
 15516  023C  00D3               	movwf	??___flmul+3
 15517  023D  0853               	movf	??___flmul+3,w
 15518  023E  0452               	iorwf	??___flmul+2,w
 15519  023F  0451               	iorwf	??___flmul+1,w
 15520  0240  0450               	iorwf	??___flmul,w
 15521  0241  1903               	skipnz
 15522  0242  185C               	btfsc	___flmul@prod,0
 15523  0243  2A45               	goto	l7483
 15524  0244  2A47               	goto	l7487
 15525  0245                     l7483:	
 15526  0245  01D6               	clrf	___flmul@aexp
 15527  0246  0AD6               	incf	___flmul@aexp,f
 15528  0247                     l7487:	
 15529  0247  0856               	movf	___flmul@aexp,w
 15530  0248  1903               	btfsc	3,2
 15531  0249  2A70               	goto	l7497
 15532  024A  3001               	movlw	1
 15533  024B  07DC               	addwf	___flmul@prod,f
 15534  024C  3000               	movlw	0
 15535  024D  3DDD               	addwfc	___flmul@prod+1,f
 15536  024E  3000               	movlw	0
 15537  024F  3DDE               	addwfc	___flmul@prod+2,f
 15538  0250  3000               	movlw	0
 15539  0251  3DDF               	addwfc	___flmul@prod+3,f
 15540  0252  1C5F               	btfss	___flmul@prod+3,0
 15541  0253  2A70               	goto	l7497
 15542  0254  085C               	movf	___flmul@prod,w
 15543  0255  00D0               	movwf	??___flmul
 15544  0256  085D               	movf	___flmul@prod+1,w
 15545  0257  00D1               	movwf	??___flmul+1
 15546  0258  085E               	movf	___flmul@prod+2,w
 15547  0259  00D2               	movwf	??___flmul+2
 15548  025A  085F               	movf	___flmul@prod+3,w
 15549  025B  00D3               	movwf	??___flmul+3
 15550  025C  3001               	movlw	1
 15551  025D  00D4               	movwf	??___flmul+4
 15552  025E                     u7245:	
 15553  025E  37D3               	asrf	??___flmul+3,f
 15554  025F  0CD2               	rrf	??___flmul+2,f
 15555  0260  0CD1               	rrf	??___flmul+1,f
 15556  0261  0CD0               	rrf	??___flmul,f
 15557  0262  0BD4               	decfsz	??___flmul+4,f
 15558  0263  2A5E               	goto	u7245
 15559  0264  0853               	movf	??___flmul+3,w
 15560  0265  00DF               	movwf	___flmul@prod+3
 15561  0266  0852               	movf	??___flmul+2,w
 15562  0267  00DE               	movwf	___flmul@prod+2
 15563  0268  0851               	movf	??___flmul+1,w
 15564  0269  00DD               	movwf	___flmul@prod+1
 15565  026A  0850               	movf	??___flmul,w
 15566  026B  00DC               	movwf	___flmul@prod
 15567  026C  3001               	movlw	1
 15568  026D  07E0               	addwf	___flmul@temp,f
 15569  026E  3000               	movlw	0
 15570  026F  3DE1               	addwfc	___flmul@temp+1,f
 15571  0270                     l7497:	
 15572  0270  0861               	movf	___flmul@temp+1,w
 15573  0271  3A80               	xorlw	128
 15574  0272  00D0               	movwf	??___flmul
 15575  0273  3080               	movlw	128
 15576  0274  0250               	subwf	??___flmul,w
 15577  0275  1D03               	skipz
 15578  0276  2A79               	goto	u7255
 15579  0277  30FF               	movlw	255
 15580  0278  0260               	subwf	___flmul@temp,w
 15581  0279                     u7255:	
 15582  0279  1C03               	skipc
 15583  027A  2A85               	goto	l7501
 15584  027B  307F               	movlw	127
 15585  027C  0140               	movlb	0	; select bank0
 15586  027D  00DF               	movwf	___flmul@prod+3
 15587  027E  3080               	movlw	128
 15588  027F  00DE               	movwf	___flmul@prod+2
 15589  0280  3000               	movlw	0
 15590  0281  00DD               	movwf	___flmul@prod+1
 15591  0282  3000               	movlw	0
 15592  0283  00DC               	movwf	___flmul@prod
 15593  0284  2AAF               	goto	l2085
 15594  0285                     l7501:	
 15595  0285  0140               	movlb	0	; select bank0
 15596  0286  0861               	movf	___flmul@temp+1,w
 15597  0287  3A80               	xorlw	128
 15598  0288  00D0               	movwf	??___flmul
 15599  0289  3080               	movlw	128
 15600  028A  0250               	subwf	??___flmul,w
 15601  028B  1D03               	skipz
 15602  028C  2A8F               	goto	u7265
 15603  028D  3001               	movlw	1
 15604  028E  0260               	subwf	___flmul@temp,w
 15605  028F                     u7265:	
 15606  028F  1803               	skipnc
 15607  0290  2A9C               	goto	l7507
 15608  0291  3000               	movlw	0
 15609  0292  0140               	movlb	0	; select bank0
 15610  0293  00DF               	movwf	___flmul@prod+3
 15611  0294  3000               	movlw	0
 15612  0295  00DE               	movwf	___flmul@prod+2
 15613  0296  3000               	movlw	0
 15614  0297  00DD               	movwf	___flmul@prod+1
 15615  0298  3000               	movlw	0
 15616  0299  00DC               	movwf	___flmul@prod
 15617  029A  01D5               	clrf	___flmul@sign
 15618  029B  2AAF               	goto	l2085
 15619  029C                     l7507:	
 15620  029C  0140               	movlb	0	; select bank0
 15621  029D  0860               	movf	___flmul@temp,w
 15622  029E  00D0               	movwf	??___flmul
 15623  029F  0850               	movf	??___flmul,w
 15624  02A0  00DB               	movwf	___flmul@bexp
 15625  02A1  30FF               	movlw	255
 15626  02A2  05DC               	andwf	___flmul@prod,f
 15627  02A3  30FF               	movlw	255
 15628  02A4  05DD               	andwf	___flmul@prod+1,f
 15629  02A5  307F               	movlw	127
 15630  02A6  05DE               	andwf	___flmul@prod+2,f
 15631  02A7  3000               	movlw	0
 15632  02A8  05DF               	andwf	___flmul@prod+3,f
 15633  02A9  185B               	btfsc	___flmul@bexp,0
 15634  02AA  17DE               	bsf	___flmul@prod+2,7
 15635  02AB  365B               	lsrf	___flmul@bexp,w
 15636  02AC  00D0               	movwf	??___flmul
 15637  02AD  0850               	movf	??___flmul,w
 15638  02AE  00DF               	movwf	___flmul@prod+3
 15639  02AF                     l2085:	
 15640  02AF  0855               	movf	___flmul@sign,w
 15641  02B0  00D0               	movwf	??___flmul
 15642  02B1  0850               	movf	??___flmul,w
 15643  02B2  04DF               	iorwf	___flmul@prod+3,f
 15644  02B3  085F               	movf	___flmul@prod+3,w
 15645  02B4  00CB               	movwf	?___flmul+3
 15646  02B5  085E               	movf	___flmul@prod+2,w
 15647  02B6  00CA               	movwf	?___flmul+2
 15648  02B7  085D               	movf	___flmul@prod+1,w
 15649  02B8  00C9               	movwf	?___flmul+1
 15650  02B9  085C               	movf	___flmul@prod,w
 15651  02BA  00C8               	movwf	?___flmul
 15652  02BB  0008               	return
 15653  02BC                     __end_of___flmul:	
 15654                           
 15655                           	psect	text31
 15656  1163                     __ptext31:	
 15657 ;; *************** function __Umul8_16 *****************
 15658 ;; Defined at:
 15659 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
 15660 ;; Parameters:    Size  Location     Type
 15661 ;;  multiplier      1    wreg     unsigned char 
 15662 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15663 ;; Auto vars:     Size  Location     Type
 15664 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15665 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15666 ;;  product         2    4[BANK0 ] unsigned int 
 15667 ;; Return value:  Size  Location     Type
 15668 ;;                  2    0[BANK0 ] unsigned int 
 15669 ;; Registers used:
 15670 ;;		wreg, status,2, status,0
 15671 ;; Tracked objects:
 15672 ;;		On entry : 0/0
 15673 ;;		On exit  : 0/0
 15674 ;;		Unchanged: 0/0
 15675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15677 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15678 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15679 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15680 ;;Total ram usage:        9 bytes
 15681 ;; Hardware stack levels used:    1
 15682 ;; Hardware stack levels required when called:    4
 15683 ;; This function calls:
 15684 ;;		Nothing
 15685 ;; This function is called by:
 15686 ;;		___flmul
 15687 ;; This function uses a non-reentrant model
 15688 ;;
 15689                           
 15690                           
 15691                           ;psect for function __Umul8_16
 15692  1163                     __Umul8_16:	
 15693                           
 15694                           ;incstack = 0
 15695                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15696                           ;__Umul8_16@multiplier stored from wreg
 15697  1163  0140               	movlb	0	; select bank0
 15698  1164  00A8               	movwf	__Umul8_16@multiplier
 15699  1165  01A4               	clrf	__Umul8_16@product
 15700  1166  01A5               	clrf	__Umul8_16@product+1
 15701  1167  0820               	movf	__Umul8_16@multiplicand,w
 15702  1168  00A2               	movwf	??__Umul8_16
 15703  1169  01A3               	clrf	??__Umul8_16+1
 15704  116A  0822               	movf	??__Umul8_16,w
 15705  116B  00A6               	movwf	__Umul8_16@word_mpld
 15706  116C  0823               	movf	??__Umul8_16+1,w
 15707  116D  00A7               	movwf	__Umul8_16@word_mpld+1
 15708  116E                     l7151:	
 15709  116E  1C28               	btfss	__Umul8_16@multiplier,0
 15710  116F  2974               	goto	l2163
 15711  1170  0826               	movf	__Umul8_16@word_mpld,w
 15712  1171  07A4               	addwf	__Umul8_16@product,f
 15713  1172  0827               	movf	__Umul8_16@word_mpld+1,w
 15714  1173  3DA5               	addwfc	__Umul8_16@product+1,f
 15715  1174                     l2163:	
 15716  1174  3001               	movlw	1
 15717  1175                     u6585:	
 15718  1175  35A6               	lslf	__Umul8_16@word_mpld,f
 15719  1176  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15720  1177  0B89               	decfsz	9,f
 15721  1178  2975               	goto	u6585
 15722  1179  1003               	clrc
 15723  117A  0CA8               	rrf	__Umul8_16@multiplier,f
 15724  117B  0828               	movf	__Umul8_16@multiplier,w
 15725  117C  1D03               	btfss	3,2
 15726  117D  296E               	goto	l7151
 15727  117E  0825               	movf	__Umul8_16@product+1,w
 15728  117F  00A1               	movwf	?__Umul8_16+1
 15729  1180  0824               	movf	__Umul8_16@product,w
 15730  1181  00A0               	movwf	?__Umul8_16
 15731  1182  0008               	return
 15732  1183                     __end_of__Umul8_16:	
 15733                           
 15734                           	psect	text32
 15735  0448                     __ptext32:	
 15736 ;; *************** function ___fldiv *****************
 15737 ;; Defined at:
 15738 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 15739 ;; Parameters:    Size  Location     Type
 15740 ;;  a               4   14[BANK0 ] unsigned int 
 15741 ;;  b               4   18[BANK0 ] unsigned int 
 15742 ;; Auto vars:     Size  Location     Type
 15743 ;;  grs             4   34[BANK0 ] unsigned long 
 15744 ;;  rem             4   27[BANK0 ] unsigned long 
 15745 ;;  new_exp         2   32[BANK0 ] int 
 15746 ;;  aexp            1   39[BANK0 ] unsigned char 
 15747 ;;  bexp            1   38[BANK0 ] unsigned char 
 15748 ;;  sign            1   31[BANK0 ] unsigned char 
 15749 ;; Return value:  Size  Location     Type
 15750 ;;                  4   14[BANK0 ] unsigned char 
 15751 ;; Registers used:
 15752 ;;		wreg, status,2, status,0
 15753 ;; Tracked objects:
 15754 ;;		On entry : 0/0
 15755 ;;		On exit  : 0/0
 15756 ;;		Unchanged: 0/0
 15757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15758 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15759 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15760 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15761 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15762 ;;Total ram usage:       26 bytes
 15763 ;; Hardware stack levels used:    1
 15764 ;; Hardware stack levels required when called:    4
 15765 ;; This function calls:
 15766 ;;		Nothing
 15767 ;; This function is called by:
 15768 ;;		_LED_setColor
 15769 ;;		_beatBrightnessCalculation
 15770 ;; This function uses a non-reentrant model
 15771 ;;
 15772                           
 15773                           
 15774                           ;psect for function ___fldiv
 15775  0448                     ___fldiv:	
 15776                           
 15777                           ;incstack = 0
 15778                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 15779  0448  0140               	movlb	0	; select bank0
 15780  0449  0835               	movf	___fldiv@b+3,w
 15781  044A  3980               	andlw	128
 15782  044B  00B6               	movwf	??___fldiv
 15783  044C  0836               	movf	??___fldiv,w
 15784  044D  00BF               	movwf	___fldiv@sign
 15785  044E  3535               	lslf	___fldiv@b+3,w
 15786  044F  00B6               	movwf	??___fldiv
 15787  0450  0836               	movf	??___fldiv,w
 15788  0451  00C6               	movwf	___fldiv@bexp
 15789  0452  1BB4               	btfsc	___fldiv@b+2,7
 15790  0453  1446               	bsf	___fldiv@bexp,0
 15791  0454  0846               	movf	___fldiv@bexp,w
 15792  0455  1903               	btfsc	3,2
 15793  0456  2C65               	goto	l7257
 15794  0457  0A46               	incf	___fldiv@bexp,w
 15795  0458  1D03               	btfss	3,2
 15796  0459  2C62               	goto	l7253
 15797  045A  3000               	movlw	0
 15798  045B  00B5               	movwf	___fldiv@b+3
 15799  045C  3000               	movlw	0
 15800  045D  00B4               	movwf	___fldiv@b+2
 15801  045E  3000               	movlw	0
 15802  045F  00B3               	movwf	___fldiv@b+1
 15803  0460  3000               	movlw	0
 15804  0461  00B2               	movwf	___fldiv@b
 15805  0462                     l7253:	
 15806  0462  17B4               	bsf	___fldiv@b+2,7
 15807  0463  01B5               	clrf	___fldiv@b+3
 15808  0464  2C6D               	goto	l7259
 15809  0465                     l7257:	
 15810  0465  3000               	movlw	0
 15811  0466  00B5               	movwf	___fldiv@b+3
 15812  0467  3000               	movlw	0
 15813  0468  00B4               	movwf	___fldiv@b+2
 15814  0469  3000               	movlw	0
 15815  046A  00B3               	movwf	___fldiv@b+1
 15816  046B  3000               	movlw	0
 15817  046C  00B2               	movwf	___fldiv@b
 15818  046D                     l7259:	
 15819  046D  0831               	movf	___fldiv@a+3,w
 15820  046E  3980               	andlw	128
 15821  046F  00B6               	movwf	??___fldiv
 15822  0470  0836               	movf	??___fldiv,w
 15823  0471  06BF               	xorwf	___fldiv@sign,f
 15824  0472  3531               	lslf	___fldiv@a+3,w
 15825  0473  00B6               	movwf	??___fldiv
 15826  0474  0836               	movf	??___fldiv,w
 15827  0475  00C7               	movwf	___fldiv@aexp
 15828  0476  1BB0               	btfsc	___fldiv@a+2,7
 15829  0477  1447               	bsf	___fldiv@aexp,0
 15830  0478  0847               	movf	___fldiv@aexp,w
 15831  0479  1903               	btfsc	3,2
 15832  047A  2C89               	goto	l7277
 15833  047B  0A47               	incf	___fldiv@aexp,w
 15834  047C  1D03               	btfss	3,2
 15835  047D  2C86               	goto	l7273
 15836  047E  3000               	movlw	0
 15837  047F  00B1               	movwf	___fldiv@a+3
 15838  0480  3000               	movlw	0
 15839  0481  00B0               	movwf	___fldiv@a+2
 15840  0482  3000               	movlw	0
 15841  0483  00AF               	movwf	___fldiv@a+1
 15842  0484  3000               	movlw	0
 15843  0485  00AE               	movwf	___fldiv@a
 15844  0486                     l7273:	
 15845  0486  17B0               	bsf	___fldiv@a+2,7
 15846  0487  01B1               	clrf	___fldiv@a+3
 15847  0488  2C91               	goto	l2033
 15848  0489                     l7277:	
 15849  0489  3000               	movlw	0
 15850  048A  00B1               	movwf	___fldiv@a+3
 15851  048B  3000               	movlw	0
 15852  048C  00B0               	movwf	___fldiv@a+2
 15853  048D  3000               	movlw	0
 15854  048E  00AF               	movwf	___fldiv@a+1
 15855  048F  3000               	movlw	0
 15856  0490  00AE               	movwf	___fldiv@a
 15857  0491                     l2033:	
 15858  0491  0831               	movf	___fldiv@a+3,w
 15859  0492  0430               	iorwf	___fldiv@a+2,w
 15860  0493  042F               	iorwf	___fldiv@a+1,w
 15861  0494  042E               	iorwf	___fldiv@a,w
 15862  0495  1D03               	skipz
 15863  0496  2CB0               	goto	l7287
 15864  0497  3000               	movlw	0
 15865  0498  00B5               	movwf	___fldiv@b+3
 15866  0499  3000               	movlw	0
 15867  049A  00B4               	movwf	___fldiv@b+2
 15868  049B  3000               	movlw	0
 15869  049C  00B3               	movwf	___fldiv@b+1
 15870  049D  3000               	movlw	0
 15871  049E  00B2               	movwf	___fldiv@b
 15872  049F  3080               	movlw	128
 15873  04A0  04B4               	iorwf	___fldiv@b+2,f
 15874  04A1  307F               	movlw	127
 15875  04A2  04B5               	iorwf	___fldiv@b+3,f
 15876  04A3                     L14:	
 15877  04A3  083F               	movf	___fldiv@sign,w
 15878  04A4  00B6               	movwf	??___fldiv
 15879  04A5  0836               	movf	??___fldiv,w
 15880  04A6  04B5               	iorwf	___fldiv@b+3,f
 15881  04A7  0835               	movf	___fldiv@b+3,w
 15882  04A8  00B1               	movwf	?___fldiv+3
 15883  04A9  0834               	movf	___fldiv@b+2,w
 15884  04AA  00B0               	movwf	?___fldiv+2
 15885  04AB  0833               	movf	___fldiv@b+1,w
 15886  04AC  00AF               	movwf	?___fldiv+1
 15887  04AD  0832               	movf	___fldiv@b,w
 15888  04AE  00AE               	movwf	?___fldiv
 15889  04AF  0008               	return
 15890  04B0                     l7287:	
 15891  04B0  0846               	movf	___fldiv@bexp,w
 15892  04B1  1D03               	btfss	3,2
 15893  04B2  2CBC               	goto	l7293
 15894  04B3  3000               	movlw	0
 15895  04B4  00B1               	movwf	?___fldiv+3
 15896  04B5  3000               	movlw	0
 15897  04B6  00B0               	movwf	?___fldiv+2
 15898  04B7  3000               	movlw	0
 15899  04B8  00AF               	movwf	?___fldiv+1
 15900  04B9  3000               	movlw	0
 15901  04BA  00AE               	movwf	?___fldiv
 15902  04BB  0008               	return
 15903  04BC                     l7293:	
 15904  04BC  0846               	movf	___fldiv@bexp,w
 15905  04BD  00B6               	movwf	??___fldiv
 15906  04BE  01B7               	clrf	??___fldiv+1
 15907  04BF  0837               	movf	??___fldiv+1,w
 15908  04C0  00B9               	movwf	??___fldiv+3
 15909  04C1  0847               	movf	___fldiv@aexp,w
 15910  04C2  0236               	subwf	??___fldiv,w
 15911  04C3  00B8               	movwf	??___fldiv+2
 15912  04C4  1C03               	skipc
 15913  04C5  03B9               	decf	??___fldiv+3,f
 15914  04C6  0838               	movf	??___fldiv+2,w
 15915  04C7  3E7F               	addlw	127
 15916  04C8  00C0               	movwf	___fldiv@new_exp
 15917  04C9  3000               	movlw	0
 15918  04CA  3D39               	addwfc	??___fldiv+3,w
 15919  04CB  00C1               	movwf	___fldiv@new_exp+1
 15920  04CC  0835               	movf	___fldiv@b+3,w
 15921  04CD  00BE               	movwf	___fldiv@rem+3
 15922  04CE  0834               	movf	___fldiv@b+2,w
 15923  04CF  00BD               	movwf	___fldiv@rem+2
 15924  04D0  0833               	movf	___fldiv@b+1,w
 15925  04D1  00BC               	movwf	___fldiv@rem+1
 15926  04D2  0832               	movf	___fldiv@b,w
 15927  04D3  00BB               	movwf	___fldiv@rem
 15928  04D4  3000               	movlw	0
 15929  04D5  00B5               	movwf	___fldiv@b+3
 15930  04D6  3000               	movlw	0
 15931  04D7  00B4               	movwf	___fldiv@b+2
 15932  04D8  3000               	movlw	0
 15933  04D9  00B3               	movwf	___fldiv@b+1
 15934  04DA  3000               	movlw	0
 15935  04DB  00B2               	movwf	___fldiv@b
 15936  04DC  3000               	movlw	0
 15937  04DD  00C5               	movwf	___fldiv@grs+3
 15938  04DE  3000               	movlw	0
 15939  04DF  00C4               	movwf	___fldiv@grs+2
 15940  04E0  3000               	movlw	0
 15941  04E1  00C3               	movwf	___fldiv@grs+1
 15942  04E2  3000               	movlw	0
 15943  04E3  00C2               	movwf	___fldiv@grs
 15944  04E4  01C7               	clrf	___fldiv@aexp
 15945  04E5                     l7321:	
 15946  04E5  301A               	movlw	26
 15947  04E6  0247               	subwf	___fldiv@aexp,w
 15948  04E7  1803               	btfsc	3,0
 15949  04E8  2D21               	goto	l7323
 15950  04E9  0847               	movf	___fldiv@aexp,w
 15951  04EA  1903               	btfsc	3,2
 15952  04EB  2D03               	goto	l7313
 15953  04EC  3001               	movlw	1
 15954  04ED                     u6825:	
 15955  04ED  35BB               	lslf	___fldiv@rem,f
 15956  04EE  0DBC               	rlf	___fldiv@rem+1,f
 15957  04EF  0DBD               	rlf	___fldiv@rem+2,f
 15958  04F0  0DBE               	rlf	___fldiv@rem+3,f
 15959  04F1  0B89               	decfsz	9,f
 15960  04F2  2CED               	goto	u6825
 15961  04F3  3001               	movlw	1
 15962  04F4                     u6835:	
 15963  04F4  35B2               	lslf	___fldiv@b,f
 15964  04F5  0DB3               	rlf	___fldiv@b+1,f
 15965  04F6  0DB4               	rlf	___fldiv@b+2,f
 15966  04F7  0DB5               	rlf	___fldiv@b+3,f
 15967  04F8  0B89               	decfsz	9,f
 15968  04F9  2CF4               	goto	u6835
 15969  04FA  1BC5               	btfsc	___fldiv@grs+3,7
 15970  04FB  1432               	bsf	___fldiv@b,0
 15971  04FC  3001               	movlw	1
 15972  04FD                     u6855:	
 15973  04FD  35C2               	lslf	___fldiv@grs,f
 15974  04FE  0DC3               	rlf	___fldiv@grs+1,f
 15975  04FF  0DC4               	rlf	___fldiv@grs+2,f
 15976  0500  0DC5               	rlf	___fldiv@grs+3,f
 15977  0501  0B89               	decfsz	9,f
 15978  0502  2CFD               	goto	u6855
 15979  0503                     l7313:	
 15980  0503  0831               	movf	___fldiv@a+3,w
 15981  0504  023E               	subwf	___fldiv@rem+3,w
 15982  0505  1D03               	skipz
 15983  0506  2D11               	goto	u6865
 15984  0507  0830               	movf	___fldiv@a+2,w
 15985  0508  023D               	subwf	___fldiv@rem+2,w
 15986  0509  1D03               	skipz
 15987  050A  2D11               	goto	u6865
 15988  050B  082F               	movf	___fldiv@a+1,w
 15989  050C  023C               	subwf	___fldiv@rem+1,w
 15990  050D  1D03               	skipz
 15991  050E  2D11               	goto	u6865
 15992  050F  082E               	movf	___fldiv@a,w
 15993  0510  023B               	subwf	___fldiv@rem,w
 15994  0511                     u6865:	
 15995  0511  1C03               	skipc
 15996  0512  2D1C               	goto	l7319
 15997  0513  1745               	bsf	___fldiv@grs+3,6
 15998  0514  082E               	movf	___fldiv@a,w
 15999  0515  02BB               	subwf	___fldiv@rem,f
 16000  0516  082F               	movf	___fldiv@a+1,w
 16001  0517  3BBC               	subwfb	___fldiv@rem+1,f
 16002  0518  0830               	movf	___fldiv@a+2,w
 16003  0519  3BBD               	subwfb	___fldiv@rem+2,f
 16004  051A  0831               	movf	___fldiv@a+3,w
 16005  051B  3BBE               	subwfb	___fldiv@rem+3,f
 16006  051C                     l7319:	
 16007  051C  3001               	movlw	1
 16008  051D  00B6               	movwf	??___fldiv
 16009  051E  0836               	movf	??___fldiv,w
 16010  051F  07C7               	addwf	___fldiv@aexp,f
 16011  0520  2CE5               	goto	l7321
 16012  0521                     l7323:	
 16013  0521  083E               	movf	___fldiv@rem+3,w
 16014  0522  043D               	iorwf	___fldiv@rem+2,w
 16015  0523  043C               	iorwf	___fldiv@rem+1,w
 16016  0524  043B               	iorwf	___fldiv@rem,w
 16017  0525  1D03               	btfss	3,2
 16018  0526  1442               	bsf	___fldiv@grs,0
 16019  0527                     l7337:	
 16020  0527  1BB4               	btfsc	___fldiv@b+2,7
 16021  0528  2D3E               	goto	l7339
 16022  0529  3001               	movlw	1
 16023  052A                     u6895:	
 16024  052A  35B2               	lslf	___fldiv@b,f
 16025  052B  0DB3               	rlf	___fldiv@b+1,f
 16026  052C  0DB4               	rlf	___fldiv@b+2,f
 16027  052D  0DB5               	rlf	___fldiv@b+3,f
 16028  052E  0B89               	decfsz	9,f
 16029  052F  2D2A               	goto	u6895
 16030  0530  1BC5               	btfsc	___fldiv@grs+3,7
 16031  0531  1432               	bsf	___fldiv@b,0
 16032  0532  3001               	movlw	1
 16033  0533                     u6915:	
 16034  0533  35C2               	lslf	___fldiv@grs,f
 16035  0534  0DC3               	rlf	___fldiv@grs+1,f
 16036  0535  0DC4               	rlf	___fldiv@grs+2,f
 16037  0536  0DC5               	rlf	___fldiv@grs+3,f
 16038  0537  0B89               	decfsz	9,f
 16039  0538  2D33               	goto	u6915
 16040  0539  30FF               	movlw	255
 16041  053A  07C0               	addwf	___fldiv@new_exp,f
 16042  053B  30FF               	movlw	255
 16043  053C  3DC1               	addwfc	___fldiv@new_exp+1,f
 16044  053D  2D27               	goto	l7337
 16045  053E                     l7339:	
 16046  053E  01C7               	clrf	___fldiv@aexp
 16047  053F  1FC5               	btfss	___fldiv@grs+3,7
 16048  0540  2D57               	goto	l7349
 16049  0541  30FF               	movlw	255
 16050  0542  0542               	andwf	___fldiv@grs,w
 16051  0543  00B6               	movwf	??___fldiv
 16052  0544  30FF               	movlw	255
 16053  0545  0543               	andwf	___fldiv@grs+1,w
 16054  0546  00B7               	movwf	??___fldiv+1
 16055  0547  30FF               	movlw	255
 16056  0548  0544               	andwf	___fldiv@grs+2,w
 16057  0549  00B8               	movwf	??___fldiv+2
 16058  054A  307F               	movlw	127
 16059  054B  0545               	andwf	___fldiv@grs+3,w
 16060  054C  00B9               	movwf	??___fldiv+3
 16061  054D  0839               	movf	??___fldiv+3,w
 16062  054E  0438               	iorwf	??___fldiv+2,w
 16063  054F  0437               	iorwf	??___fldiv+1,w
 16064  0550  0436               	iorwf	??___fldiv,w
 16065  0551  1903               	skipnz
 16066  0552  1832               	btfsc	___fldiv@b,0
 16067  0553  2D55               	goto	l7345
 16068  0554  2D57               	goto	l7349
 16069  0555                     l7345:	
 16070  0555  01C7               	clrf	___fldiv@aexp
 16071  0556  0AC7               	incf	___fldiv@aexp,f
 16072  0557                     l7349:	
 16073  0557  0847               	movf	___fldiv@aexp,w
 16074  0558  1903               	btfsc	3,2
 16075  0559  2D80               	goto	l7359
 16076  055A  3001               	movlw	1
 16077  055B  07B2               	addwf	___fldiv@b,f
 16078  055C  3000               	movlw	0
 16079  055D  3DB3               	addwfc	___fldiv@b+1,f
 16080  055E  3000               	movlw	0
 16081  055F  3DB4               	addwfc	___fldiv@b+2,f
 16082  0560  3000               	movlw	0
 16083  0561  3DB5               	addwfc	___fldiv@b+3,f
 16084  0562  1C35               	btfss	___fldiv@b+3,0
 16085  0563  2D80               	goto	l7359
 16086  0564  0832               	movf	___fldiv@b,w
 16087  0565  00B6               	movwf	??___fldiv
 16088  0566  0833               	movf	___fldiv@b+1,w
 16089  0567  00B7               	movwf	??___fldiv+1
 16090  0568  0834               	movf	___fldiv@b+2,w
 16091  0569  00B8               	movwf	??___fldiv+2
 16092  056A  0835               	movf	___fldiv@b+3,w
 16093  056B  00B9               	movwf	??___fldiv+3
 16094  056C  3001               	movlw	1
 16095  056D  00BA               	movwf	??___fldiv+4
 16096  056E                     u6985:	
 16097  056E  37B9               	asrf	??___fldiv+3,f
 16098  056F  0CB8               	rrf	??___fldiv+2,f
 16099  0570  0CB7               	rrf	??___fldiv+1,f
 16100  0571  0CB6               	rrf	??___fldiv,f
 16101  0572  0BBA               	decfsz	??___fldiv+4,f
 16102  0573  2D6E               	goto	u6985
 16103  0574  0839               	movf	??___fldiv+3,w
 16104  0575  00B5               	movwf	___fldiv@b+3
 16105  0576  0838               	movf	??___fldiv+2,w
 16106  0577  00B4               	movwf	___fldiv@b+2
 16107  0578  0837               	movf	??___fldiv+1,w
 16108  0579  00B3               	movwf	___fldiv@b+1
 16109  057A  0836               	movf	??___fldiv,w
 16110  057B  00B2               	movwf	___fldiv@b
 16111  057C  3001               	movlw	1
 16112  057D  07C0               	addwf	___fldiv@new_exp,f
 16113  057E  3000               	movlw	0
 16114  057F  3DC1               	addwfc	___fldiv@new_exp+1,f
 16115  0580                     l7359:	
 16116  0580  0841               	movf	___fldiv@new_exp+1,w
 16117  0581  3A80               	xorlw	128
 16118  0582  00B6               	movwf	??___fldiv
 16119  0583  3080               	movlw	128
 16120  0584  0236               	subwf	??___fldiv,w
 16121  0585  1D03               	skipz
 16122  0586  2D89               	goto	u6995
 16123  0587  30FF               	movlw	255
 16124  0588  0240               	subwf	___fldiv@new_exp,w
 16125  0589                     u6995:	
 16126  0589  1C03               	skipc
 16127  058A  2D98               	goto	l2054
 16128  058B  30FF               	movlw	255
 16129  058C  0140               	movlb	0	; select bank0
 16130  058D  00C0               	movwf	___fldiv@new_exp
 16131  058E  3000               	movlw	0
 16132  058F  00C1               	movwf	___fldiv@new_exp+1
 16133  0590  3000               	movlw	0
 16134  0591  00B5               	movwf	___fldiv@b+3
 16135  0592  3000               	movlw	0
 16136  0593  00B4               	movwf	___fldiv@b+2
 16137  0594  3000               	movlw	0
 16138  0595  00B3               	movwf	___fldiv@b+1
 16139  0596  3000               	movlw	0
 16140  0597  00B2               	movwf	___fldiv@b
 16141  0598                     l2054:	
 16142  0598  0140               	movlb	0	; select bank0
 16143  0599  0841               	movf	___fldiv@new_exp+1,w
 16144  059A  3A80               	xorlw	128
 16145  059B  00B6               	movwf	??___fldiv
 16146  059C  3080               	movlw	128
 16147  059D  0236               	subwf	??___fldiv,w
 16148  059E  1D03               	skipz
 16149  059F  2DA2               	goto	u7005
 16150  05A0  3001               	movlw	1
 16151  05A1  0240               	subwf	___fldiv@new_exp,w
 16152  05A2                     u7005:	
 16153  05A2  1803               	skipnc
 16154  05A3  2DB0               	goto	l2055
 16155  05A4  0140               	movlb	0	; select bank0
 16156  05A5  01C0               	clrf	___fldiv@new_exp
 16157  05A6  01C1               	clrf	___fldiv@new_exp+1
 16158  05A7  3000               	movlw	0
 16159  05A8  00B5               	movwf	___fldiv@b+3
 16160  05A9  3000               	movlw	0
 16161  05AA  00B4               	movwf	___fldiv@b+2
 16162  05AB  3000               	movlw	0
 16163  05AC  00B3               	movwf	___fldiv@b+1
 16164  05AD  3000               	movlw	0
 16165  05AE  00B2               	movwf	___fldiv@b
 16166  05AF  01BF               	clrf	___fldiv@sign
 16167  05B0                     l2055:	
 16168  05B0  0140               	movlb	0	; select bank0
 16169  05B1  0840               	movf	___fldiv@new_exp,w
 16170  05B2  00B6               	movwf	??___fldiv
 16171  05B3  0836               	movf	??___fldiv,w
 16172  05B4  00C6               	movwf	___fldiv@bexp
 16173  05B5  1C46               	btfss	___fldiv@bexp,0
 16174  05B6  2DB9               	goto	l7373
 16175  05B7  17B4               	bsf	___fldiv@b+2,7
 16176  05B8  2DBD               	goto	l2057
 16177  05B9                     l7373:	
 16178  05B9  307F               	movlw	127
 16179  05BA  00B6               	movwf	??___fldiv
 16180  05BB  0836               	movf	??___fldiv,w
 16181  05BC  05B4               	andwf	___fldiv@b+2,f
 16182  05BD                     l2057:	
 16183  05BD  3646               	lsrf	___fldiv@bexp,w
 16184  05BE  00B6               	movwf	??___fldiv
 16185  05BF  0836               	movf	??___fldiv,w
 16186  05C0  00B5               	movwf	___fldiv@b+3
 16187  05C1  2CA3               	goto	L14
 16188  05C2                     __end_of___fldiv:	
 16189                           
 16190                           	psect	text33
 16191  1125                     __ptext33:	
 16192 ;; *************** function _PWM4_LoadDutyValue *****************
 16193 ;; Defined at:
 16194 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 16195 ;; Parameters:    Size  Location     Type
 16196 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;		None
 16199 ;; Return value:  Size  Location     Type
 16200 ;;                  1    wreg      void 
 16201 ;; Registers used:
 16202 ;;		wreg, status,2
 16203 ;; Tracked objects:
 16204 ;;		On entry : 0/0
 16205 ;;		On exit  : 0/0
 16206 ;;		Unchanged: 0/0
 16207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16208 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16211 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16212 ;;Total ram usage:        2 bytes
 16213 ;; Hardware stack levels used:    1
 16214 ;; Hardware stack levels required when called:    4
 16215 ;; This function calls:
 16216 ;;		Nothing
 16217 ;; This function is called by:
 16218 ;;		_LED_setColor
 16219 ;; This function uses a non-reentrant model
 16220 ;;
 16221                           
 16222                           
 16223                           ;psect for function _PWM4_LoadDutyValue
 16224  1125                     _PWM4_LoadDutyValue:	
 16225                           
 16226                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 127){
 16227                           
 16228                           ;incstack = 0
 16229                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 16230  1125  3000               	movlw	0
 16231  1126  0141               	movlb	1	; select bank1
 16232  1127  0248               	subwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 16233  1128  3080               	movlw	128
 16234  1129  1903               	skipnz
 16235  112A  0247               	subwf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 16236  112B  1803               	skipnc
 16237  112C  0008               	return
 16238                           
 16239                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 16240  112D  30FF               	movlw	255
 16241  112E  05C7               	andwf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 16242  112F  3003               	movlw	3
 16243  1130  05C8               	andwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 16244                           
 16245                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 16246  1131  0146               	movlb	6	; select bank6
 16247  1132  1E1A               	btfss	26,4	;volatile
 16248  1133  293A               	goto	l7587
 16249                           
 16250                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 16251  1134  3006               	movlw	6
 16252  1135  0141               	movlb	1	; select bank1
 16253  1136                     u7475:	
 16254  1136  35C7               	lslf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 16255  1137  0DC8               	rlf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 16256  1138  0B89               	decfsz	9,f
 16257  1139  2936               	goto	u7475
 16258  113A                     l7587:	
 16259                           
 16260                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 16261  113A  0141               	movlb	1	; select bank1
 16262  113B  0848               	movf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 16263  113C  0146               	movlb	6	; select bank6
 16264  113D  0099               	movwf	25	;volatile
 16265                           
 16266                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 16267  113E  0141               	movlb	1	; select bank1
 16268  113F  0847               	movf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 16269  1140  0146               	movlb	6	; select bank6
 16270  1141  0098               	movwf	24	;volatile
 16271                           
 16272                           ;mcc_generated_files/pwm4.c: 93:         }
 16273  1142  0008               	return
 16274  1143                     __end_of_PWM4_LoadDutyValue:	
 16275                           
 16276                           	psect	text34
 16277  1107                     __ptext34:	
 16278 ;; *************** function _PWM3_LoadDutyValue *****************
 16279 ;; Defined at:
 16280 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 16281 ;; Parameters:    Size  Location     Type
 16282 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16283 ;; Auto vars:     Size  Location     Type
 16284 ;;		None
 16285 ;; Return value:  Size  Location     Type
 16286 ;;                  1    wreg      void 
 16287 ;; Registers used:
 16288 ;;		wreg, status,2
 16289 ;; Tracked objects:
 16290 ;;		On entry : 0/0
 16291 ;;		On exit  : 0/0
 16292 ;;		Unchanged: 0/0
 16293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16294 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16297 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16298 ;;Total ram usage:        2 bytes
 16299 ;; Hardware stack levels used:    1
 16300 ;; Hardware stack levels required when called:    4
 16301 ;; This function calls:
 16302 ;;		Nothing
 16303 ;; This function is called by:
 16304 ;;		_LED_setColor
 16305 ;; This function uses a non-reentrant model
 16306 ;;
 16307                           
 16308                           
 16309                           ;psect for function _PWM3_LoadDutyValue
 16310  1107                     _PWM3_LoadDutyValue:	
 16311                           
 16312                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 127){
 16313                           
 16314                           ;incstack = 0
 16315                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 16316  1107  3000               	movlw	0
 16317  1108  0141               	movlb	1	; select bank1
 16318  1109  0248               	subwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 16319  110A  3080               	movlw	128
 16320  110B  1903               	skipnz
 16321  110C  0247               	subwf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 16322  110D  1803               	skipnc
 16323  110E  0008               	return
 16324                           
 16325                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 16326  110F  30FF               	movlw	255
 16327  1110  05C7               	andwf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 16328  1111  3003               	movlw	3
 16329  1112  05C8               	andwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 16330                           
 16331                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 16332  1113  0146               	movlb	6	; select bank6
 16333  1114  1E16               	btfss	22,4	;volatile
 16334  1115  291C               	goto	l7571
 16335                           
 16336                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 16337  1116  3006               	movlw	6
 16338  1117  0141               	movlb	1	; select bank1
 16339  1118                     u7445:	
 16340  1118  35C7               	lslf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 16341  1119  0DC8               	rlf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 16342  111A  0B89               	decfsz	9,f
 16343  111B  2918               	goto	u7445
 16344  111C                     l7571:	
 16345                           
 16346                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 16347  111C  0141               	movlb	1	; select bank1
 16348  111D  0848               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 16349  111E  0146               	movlb	6	; select bank6
 16350  111F  0095               	movwf	21	;volatile
 16351                           
 16352                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 16353  1120  0141               	movlb	1	; select bank1
 16354  1121  0847               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 16355  1122  0146               	movlb	6	; select bank6
 16356  1123  0094               	movwf	20	;volatile
 16357                           
 16358                           ;mcc_generated_files/pwm3.c: 93:         }
 16359  1124  0008               	return
 16360  1125                     __end_of_PWM3_LoadDutyValue:	
 16361                           
 16362                           	psect	text35
 16363  10E9                     __ptext35:	
 16364 ;; *************** function _PWM2_LoadDutyValue *****************
 16365 ;; Defined at:
 16366 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;		None
 16371 ;; Return value:  Size  Location     Type
 16372 ;;                  1    wreg      void 
 16373 ;; Registers used:
 16374 ;;		wreg, status,2
 16375 ;; Tracked objects:
 16376 ;;		On entry : 0/0
 16377 ;;		On exit  : 0/0
 16378 ;;		Unchanged: 0/0
 16379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16380 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16383 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16384 ;;Total ram usage:        2 bytes
 16385 ;; Hardware stack levels used:    1
 16386 ;; Hardware stack levels required when called:    4
 16387 ;; This function calls:
 16388 ;;		Nothing
 16389 ;; This function is called by:
 16390 ;;		_LED_setColor
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394                           
 16395                           ;psect for function _PWM2_LoadDutyValue
 16396  10E9                     _PWM2_LoadDutyValue:	
 16397                           
 16398                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 127){
 16399                           
 16400                           ;incstack = 0
 16401                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 16402  10E9  3000               	movlw	0
 16403  10EA  0141               	movlb	1	; select bank1
 16404  10EB  0248               	subwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 16405  10EC  3080               	movlw	128
 16406  10ED  1903               	skipnz
 16407  10EE  0247               	subwf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 16408  10EF  1803               	skipnc
 16409  10F0  0008               	return
 16410                           
 16411                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 16412  10F1  30FF               	movlw	255
 16413  10F2  05C7               	andwf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 16414  10F3  3003               	movlw	3
 16415  10F4  05C8               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 16416                           
 16417                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 16418  10F5  0146               	movlb	6	; select bank6
 16419  10F6  1E12               	btfss	18,4	;volatile
 16420  10F7  28FE               	goto	l7619
 16421                           
 16422                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 16423  10F8  3006               	movlw	6
 16424  10F9  0141               	movlb	1	; select bank1
 16425  10FA                     u7535:	
 16426  10FA  35C7               	lslf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 16427  10FB  0DC8               	rlf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 16428  10FC  0B89               	decfsz	9,f
 16429  10FD  28FA               	goto	u7535
 16430  10FE                     l7619:	
 16431                           
 16432                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 16433  10FE  0141               	movlb	1	; select bank1
 16434  10FF  0848               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 16435  1100  0146               	movlb	6	; select bank6
 16436  1101  0091               	movwf	17	;volatile
 16437                           
 16438                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 16439  1102  0141               	movlb	1	; select bank1
 16440  1103  0847               	movf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 16441  1104  0146               	movlb	6	; select bank6
 16442  1105  0090               	movwf	16	;volatile
 16443                           
 16444                           ;mcc_generated_files/pwm2.c: 93:         }
 16445  1106  0008               	return
 16446  1107                     __end_of_PWM2_LoadDutyValue:	
 16447                           
 16448                           	psect	text36
 16449  10CB                     __ptext36:	
 16450 ;; *************** function _PWM1_LoadDutyValue *****************
 16451 ;; Defined at:
 16452 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 16453 ;; Parameters:    Size  Location     Type
 16454 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16455 ;; Auto vars:     Size  Location     Type
 16456 ;;		None
 16457 ;; Return value:  Size  Location     Type
 16458 ;;                  1    wreg      void 
 16459 ;; Registers used:
 16460 ;;		wreg, status,2
 16461 ;; Tracked objects:
 16462 ;;		On entry : 0/0
 16463 ;;		On exit  : 0/0
 16464 ;;		Unchanged: 0/0
 16465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16466 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16469 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16470 ;;Total ram usage:        2 bytes
 16471 ;; Hardware stack levels used:    1
 16472 ;; Hardware stack levels required when called:    4
 16473 ;; This function calls:
 16474 ;;		Nothing
 16475 ;; This function is called by:
 16476 ;;		_LED_setColor
 16477 ;; This function uses a non-reentrant model
 16478 ;;
 16479                           
 16480                           
 16481                           ;psect for function _PWM1_LoadDutyValue
 16482  10CB                     _PWM1_LoadDutyValue:	
 16483                           
 16484                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 127){
 16485                           
 16486                           ;incstack = 0
 16487                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 16488  10CB  3000               	movlw	0
 16489  10CC  0141               	movlb	1	; select bank1
 16490  10CD  0248               	subwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 16491  10CE  3080               	movlw	128
 16492  10CF  1903               	skipnz
 16493  10D0  0247               	subwf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 16494  10D1  1803               	skipnc
 16495  10D2  0008               	return
 16496                           
 16497                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 16498  10D3  30FF               	movlw	255
 16499  10D4  05C7               	andwf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 16500  10D5  3003               	movlw	3
 16501  10D6  05C8               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 16502                           
 16503                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 16504  10D7  0146               	movlb	6	; select bank6
 16505  10D8  1E0E               	btfss	14,4	;volatile
 16506  10D9  28E0               	goto	l7603
 16507                           
 16508                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 16509  10DA  3006               	movlw	6
 16510  10DB  0141               	movlb	1	; select bank1
 16511  10DC                     u7505:	
 16512  10DC  35C7               	lslf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 16513  10DD  0DC8               	rlf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 16514  10DE  0B89               	decfsz	9,f
 16515  10DF  28DC               	goto	u7505
 16516  10E0                     l7603:	
 16517                           
 16518                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 16519  10E0  0141               	movlb	1	; select bank1
 16520  10E1  0848               	movf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 16521  10E2  0146               	movlb	6	; select bank6
 16522  10E3  008D               	movwf	13	;volatile
 16523                           
 16524                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 16525  10E4  0141               	movlb	1	; select bank1
 16526  10E5  0847               	movf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 16527  10E6  0146               	movlb	6	; select bank6
 16528  10E7  008C               	movwf	12	;volatile
 16529                           
 16530                           ;mcc_generated_files/pwm1.c: 93:         }
 16531  10E8  0008               	return
 16532  10E9                     __end_of_PWM1_LoadDutyValue:	
 16533                           
 16534                           	psect	text37
 16535  1EB8                     __ptext37:	
 16536 ;; *************** function _BEAT_detected *****************
 16537 ;; Defined at:
 16538 ;;		line 49 in file "beat.c"
 16539 ;; Parameters:    Size  Location     Type
 16540 ;;		None
 16541 ;; Auto vars:     Size  Location     Type
 16542 ;;		None
 16543 ;; Return value:  Size  Location     Type
 16544 ;;                  1    wreg      _Bool 
 16545 ;; Registers used:
 16546 ;;		wreg, status,2, status,0
 16547 ;; Tracked objects:
 16548 ;;		On entry : 0/0
 16549 ;;		On exit  : 0/0
 16550 ;;		Unchanged: 0/0
 16551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16556 ;;Total ram usage:        0 bytes
 16557 ;; Hardware stack levels used:    1
 16558 ;; Hardware stack levels required when called:    4
 16559 ;; This function calls:
 16560 ;;		Nothing
 16561 ;; This function is called by:
 16562 ;;		_LED_task_BEAT_STROBE
 16563 ;; This function uses a non-reentrant model
 16564 ;;
 16565                           
 16566                           
 16567                           ;psect for function _BEAT_detected
 16568  1EB8                     _BEAT_detected:	
 16569                           
 16570                           ;beat.c: 50:     if (detected) {
 16571                           
 16572                           ;incstack = 0
 16573                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 16574  1EB8  0141               	movlb	1	; select bank1
 16575  1EB9  082F               	movf	_detected^(0+128),w
 16576  1EBA  1903               	btfsc	3,2
 16577  1EBB  2EBF               	goto	l7707
 16578                           
 16579                           ;beat.c: 51:         detected = 0;
 16580  1EBC  01AF               	clrf	_detected^(0+128)
 16581                           
 16582                           ;beat.c: 52:         return 1;
 16583  1EBD  3001               	movlw	1
 16584  1EBE  0008               	return
 16585  1EBF                     l7707:	
 16586                           
 16587                           ;beat.c: 55:     return 0;
 16588  1EBF  3000               	movlw	0
 16589  1EC0  0008               	return
 16590  1EC1                     __end_of_BEAT_detected:	
 16591                           
 16592                           	psect	text38
 16593  1E52                     __ptext38:	
 16594 ;; *************** function _LED_task_BEAT_MIXED *****************
 16595 ;; Defined at:
 16596 ;;		line 204 in file "led.c"
 16597 ;; Parameters:    Size  Location     Type
 16598 ;;		None
 16599 ;; Auto vars:     Size  Location     Type
 16600 ;;		None
 16601 ;; Return value:  Size  Location     Type
 16602 ;;                  1    wreg      void 
 16603 ;; Registers used:
 16604 ;;		None
 16605 ;; Tracked objects:
 16606 ;;		On entry : 0/0
 16607 ;;		On exit  : 0/0
 16608 ;;		Unchanged: 0/0
 16609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16614 ;;Total ram usage:        0 bytes
 16615 ;; Hardware stack levels used:    1
 16616 ;; Hardware stack levels required when called:    4
 16617 ;; This function calls:
 16618 ;;		Nothing
 16619 ;; This function is called by:
 16620 ;;		_LED_task
 16621 ;; This function uses a non-reentrant model
 16622 ;;
 16623                           
 16624                           
 16625                           ;psect for function _LED_task_BEAT_MIXED
 16626  1E52                     _LED_task_BEAT_MIXED:	
 16627                           
 16628                           ;incstack = 0
 16629                           ; Regs used in _LED_task_BEAT_MIXED: []
 16630  1E52  0008               	return
 16631  1E53                     __end_of_LED_task_BEAT_MIXED:	
 16632                           
 16633                           	psect	text39
 16634  1E51                     __ptext39:	
 16635 ;; *************** function _LED_task_BEAT_FADE *****************
 16636 ;; Defined at:
 16637 ;;		line 190 in file "led.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;		None
 16640 ;; Auto vars:     Size  Location     Type
 16641 ;;		None
 16642 ;; Return value:  Size  Location     Type
 16643 ;;                  1    wreg      void 
 16644 ;; Registers used:
 16645 ;;		None
 16646 ;; Tracked objects:
 16647 ;;		On entry : 0/0
 16648 ;;		On exit  : 0/0
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16655 ;;Total ram usage:        0 bytes
 16656 ;; Hardware stack levels used:    1
 16657 ;; Hardware stack levels required when called:    4
 16658 ;; This function calls:
 16659 ;;		Nothing
 16660 ;; This function is called by:
 16661 ;;		_LED_task
 16662 ;; This function uses a non-reentrant model
 16663 ;;
 16664                           
 16665                           
 16666                           ;psect for function _LED_task_BEAT_FADE
 16667  1E51                     _LED_task_BEAT_FADE:	
 16668                           
 16669                           ;incstack = 0
 16670                           ; Regs used in _LED_task_BEAT_FADE: []
 16671  1E51  0008               	return
 16672  1E52                     __end_of_LED_task_BEAT_FADE:	
 16673                           
 16674                           	psect	text40
 16675  1E50                     __ptext40:	
 16676 ;; *************** function _LED_task_BEAT_CONTINUOUS *****************
 16677 ;; Defined at:
 16678 ;;		line 200 in file "led.c"
 16679 ;; Parameters:    Size  Location     Type
 16680 ;;		None
 16681 ;; Auto vars:     Size  Location     Type
 16682 ;;		None
 16683 ;; Return value:  Size  Location     Type
 16684 ;;                  1    wreg      void 
 16685 ;; Registers used:
 16686 ;;		None
 16687 ;; Tracked objects:
 16688 ;;		On entry : 0/0
 16689 ;;		On exit  : 0/0
 16690 ;;		Unchanged: 0/0
 16691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16696 ;;Total ram usage:        0 bytes
 16697 ;; Hardware stack levels used:    1
 16698 ;; Hardware stack levels required when called:    4
 16699 ;; This function calls:
 16700 ;;		Nothing
 16701 ;; This function is called by:
 16702 ;;		_LED_task
 16703 ;; This function uses a non-reentrant model
 16704 ;;
 16705                           
 16706                           
 16707                           ;psect for function _LED_task_BEAT_CONTINUOUS
 16708  1E50                     _LED_task_BEAT_CONTINUOUS:	
 16709                           
 16710                           ;incstack = 0
 16711                           ; Regs used in _LED_task_BEAT_CONTINUOUS: []
 16712  1E50  0008               	return
 16713  1E51                     __end_of_LED_task_BEAT_CONTINUOUS:	
 16714                           
 16715                           	psect	text41
 16716  1E4F                     __ptext41:	
 16717 ;; *************** function _LED_task_ANIMATION *****************
 16718 ;; Defined at:
 16719 ;;		line 196 in file "led.c"
 16720 ;; Parameters:    Size  Location     Type
 16721 ;;		None
 16722 ;; Auto vars:     Size  Location     Type
 16723 ;;		None
 16724 ;; Return value:  Size  Location     Type
 16725 ;;                  1    wreg      void 
 16726 ;; Registers used:
 16727 ;;		None
 16728 ;; Tracked objects:
 16729 ;;		On entry : 0/0
 16730 ;;		On exit  : 0/0
 16731 ;;		Unchanged: 0/0
 16732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16737 ;;Total ram usage:        0 bytes
 16738 ;; Hardware stack levels used:    1
 16739 ;; Hardware stack levels required when called:    4
 16740 ;; This function calls:
 16741 ;;		Nothing
 16742 ;; This function is called by:
 16743 ;;		_LED_task
 16744 ;; This function uses a non-reentrant model
 16745 ;;
 16746                           
 16747                           
 16748                           ;psect for function _LED_task_ANIMATION
 16749  1E4F                     _LED_task_ANIMATION:	
 16750                           
 16751                           ;incstack = 0
 16752                           ; Regs used in _LED_task_ANIMATION: []
 16753  1E4F  0008               	return
 16754  1E50                     __end_of_LED_task_ANIMATION:	
 16755                           
 16756                           	psect	text42
 16757  1F87                     __ptext42:	
 16758 ;; *************** function _DMX_init *****************
 16759 ;; Defined at:
 16760 ;;		line 21 in file "dmx.c"
 16761 ;; Parameters:    Size  Location     Type
 16762 ;;		None
 16763 ;; Auto vars:     Size  Location     Type
 16764 ;;		None
 16765 ;; Return value:  Size  Location     Type
 16766 ;;                  1    wreg      void 
 16767 ;; Registers used:
 16768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16769 ;; Tracked objects:
 16770 ;;		On entry : 0/0
 16771 ;;		On exit  : 0/0
 16772 ;;		Unchanged: 0/0
 16773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16778 ;;Total ram usage:        0 bytes
 16779 ;; Hardware stack levels used:    1
 16780 ;; Hardware stack levels required when called:    9
 16781 ;; This function calls:
 16782 ;;		_EUSART1_SetRxInterruptHandler
 16783 ;;		_TM1650_fastPrintNum
 16784 ;; This function is called by:
 16785 ;;		_main
 16786 ;; This function uses a non-reentrant model
 16787 ;;
 16788                           
 16789                           
 16790                           ;psect for function _DMX_init
 16791  1F87                     _DMX_init:	
 16792                           
 16793                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 16794                           
 16795                           ;incstack = 0
 16796                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16797  1F87  3016               	movlw	low _DMX_interrupt
 16798  1F88  0140               	movlb	0	; select bank0
 16799  1F89  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 16800  1F8A  3013               	movlw	high _DMX_interrupt
 16801  1F8B  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 16802  1F8C  319E  26AF  319F   	fcall	_EUSART1_SetRxInterruptHandler
 16803                           
 16804                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 16805  1F8F  0141               	movlb	1	; select bank1
 16806  1F90  086D               	movf	(_address+1)^(0+128),w
 16807  1F91  0140               	movlb	0	; select bank0
 16808  1F92  00B5               	movwf	TM1650_fastPrintNum@num+1
 16809  1F93  0141               	movlb	1	; select bank1
 16810  1F94  086C               	movf	_address^(0+128),w
 16811  1F95  0140               	movlb	0	; select bank0
 16812  1F96  00B4               	movwf	TM1650_fastPrintNum@num
 16813  1F97  318C  2435         	fcall	_TM1650_fastPrintNum
 16814  1F99  0008               	return
 16815  1F9A                     __end_of_DMX_init:	
 16816                           
 16817                           	psect	text43
 16818  1EAF                     __ptext43:	
 16819 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 16820 ;; Defined at:
 16821 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 16822 ;; Parameters:    Size  Location     Type
 16823 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 16824 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 16825 ;; Auto vars:     Size  Location     Type
 16826 ;;		None
 16827 ;; Return value:  Size  Location     Type
 16828 ;;                  1    wreg      void 
 16829 ;; Registers used:
 16830 ;;		wreg
 16831 ;; Tracked objects:
 16832 ;;		On entry : 0/0
 16833 ;;		On exit  : 0/0
 16834 ;;		Unchanged: 0/0
 16835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16839 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16840 ;;Total ram usage:        2 bytes
 16841 ;; Hardware stack levels used:    1
 16842 ;; Hardware stack levels required when called:    4
 16843 ;; This function calls:
 16844 ;;		Nothing
 16845 ;; This function is called by:
 16846 ;;		_EUSART1_Initialize
 16847 ;;		_DMX_init
 16848 ;; This function uses a non-reentrant model
 16849 ;;
 16850                           
 16851                           
 16852                           ;psect for function _EUSART1_SetRxInterruptHandler
 16853  1EAF                     _EUSART1_SetRxInterruptHandler:	
 16854                           
 16855                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 16856                           
 16857                           ;incstack = 0
 16858                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 16859  1EAF  0140               	movlb	0	; select bank0
 16860  1EB0  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 16861  1EB1  0142               	movlb	2	; select bank2
 16862  1EB2  00E3               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 16863  1EB3  0140               	movlb	0	; select bank0
 16864  1EB4  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 16865  1EB5  0142               	movlb	2	; select bank2
 16866  1EB6  00E2               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 16867  1EB7  0008               	return
 16868  1EB8                     __end_of_EUSART1_SetRxInterruptHandler:	
 16869                           
 16870                           	psect	text44
 16871  02BC                     __ptext44:	
 16872 ;; *************** function _CONTROLLER_task *****************
 16873 ;; Defined at:
 16874 ;;		line 25 in file "controller.c"
 16875 ;; Parameters:    Size  Location     Type
 16876 ;;		None
 16877 ;; Auto vars:     Size  Location     Type
 16878 ;;  isActive        1   79[BANK0 ] _Bool 
 16879 ;; Return value:  Size  Location     Type
 16880 ;;                  1    wreg      void 
 16881 ;; Registers used:
 16882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16883 ;; Tracked objects:
 16884 ;;		On entry : 0/0
 16885 ;;		On exit  : 0/0
 16886 ;;		Unchanged: 0/0
 16887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16890 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16891 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16892 ;;Total ram usage:        3 bytes
 16893 ;; Hardware stack levels used:    1
 16894 ;; Hardware stack levels required when called:   18
 16895 ;; This function calls:
 16896 ;;		_BUTTONS_isClicked
 16897 ;;		_CLOCK_getTime
 16898 ;;		_CONTROL_BEAT
 16899 ;;		_CONTROL_DMX
 16900 ;;		_CONTROL_MANUAL
 16901 ;;		_TM1650_enable
 16902 ;;		_TM1650_fastPrintNum
 16903 ;;		_getManualColor
 16904 ;;		_menuSelection
 16905 ;;		_printf
 16906 ;; This function is called by:
 16907 ;;		_main
 16908 ;; This function uses a non-reentrant model
 16909 ;;
 16910                           
 16911                           
 16912                           ;psect for function _CONTROLLER_task
 16913  02BC                     _CONTROLLER_task:	
 16914                           
 16915                           ;controller.c: 27:     _Bool isActive = 1;
 16916                           
 16917                           ;incstack = 0
 16918 ;; hardware stack exceeded
 16919                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16920  02BC  0140               	movlb	0	; select bank0
 16921  02BD  01EF               	clrf	CONTROLLER_task@isActive
 16922  02BE  0AEF               	incf	CONTROLLER_task@isActive,f
 16923                           
 16924                           ;controller.c: 28:     upState = BUTTONS_isClicked(up);
 16925  02BF  0141               	movlb	1	; select bank1
 16926  02C0  083D               	movf	_up^(0+128),w
 16927  02C1  319F  279A  3182   	fcall	_BUTTONS_isClicked
 16928  02C4  0141               	movlb	1	; select bank1
 16929  02C5  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16930  02C6  0851               	movf	??_CONTROLLER_task^(0+128),w
 16931  02C7  00B6               	movwf	_upState^(0+128)
 16932                           
 16933                           ;controller.c: 29:     downState = BUTTONS_isClicked(down);
 16934  02C8  083C               	movf	_down^(0+128),w
 16935  02C9  319F  279A  3182   	fcall	_BUTTONS_isClicked
 16936  02CC  0141               	movlb	1	; select bank1
 16937  02CD  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16938  02CE  0851               	movf	??_CONTROLLER_task^(0+128),w
 16939  02CF  00B5               	movwf	_downState^(0+128)
 16940                           
 16941                           ;controller.c: 30:     menuState = BUTTONS_isClicked(menu);
 16942  02D0  083E               	movf	_menu^(0+128),w
 16943  02D1  319F  279A  3182   	fcall	_BUTTONS_isClicked
 16944  02D4  0141               	movlb	1	; select bank1
 16945  02D5  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16946  02D6  0851               	movf	??_CONTROLLER_task^(0+128),w
 16947  02D7  00B4               	movwf	_menuState^(0+128)
 16948                           
 16949                           ;controller.c: 31:     enterState = BUTTONS_isClicked(enter);
 16950  02D8  083B               	movf	_enter^(0+128),w
 16951  02D9  319F  279A  3182   	fcall	_BUTTONS_isClicked
 16952  02DC  0141               	movlb	1	; select bank1
 16953  02DD  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16954  02DE  0851               	movf	??_CONTROLLER_task^(0+128),w
 16955  02DF  00B3               	movwf	_enterState^(0+128)
 16956                           
 16957                           ;controller.c: 33:     if (startup == 1 && CLOCK_getTime() - startTime < 5000) {
 16958  02E0  036E               	decf	_startup^(0+128),w
 16959  02E1  1D03               	btfss	3,2
 16960  02E2  2B08               	goto	l8431
 16961  02E3  319E  269D  3182   	fcall	_CLOCK_getTime
 16962  02E6  0142               	movlb	2	; select bank2
 16963  02E7  084A               	movf	_startTime^(0+256),w
 16964  02E8  0140               	movlb	0	; select bank0
 16965  02E9  0220               	subwf	?_CLOCK_getTime,w
 16966  02EA  0141               	movlb	1	; select bank1
 16967  02EB  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16968  02EC  0142               	movlb	2	; select bank2
 16969  02ED  084B               	movf	(_startTime+1)^(0+256),w
 16970  02EE  0140               	movlb	0	; select bank0
 16971  02EF  3B21               	subwfb	?_CLOCK_getTime+1,w
 16972  02F0  0141               	movlb	1	; select bank1
 16973  02F1  00D2               	movwf	(??_CONTROLLER_task+1)^(0+128)
 16974  02F2  3013               	movlw	19
 16975  02F3  0252               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 16976  02F4  3088               	movlw	136
 16977  02F5  1903               	skipnz
 16978  02F6  0251               	subwf	??_CONTROLLER_task^(0+128),w
 16979  02F7  1803               	skipnc
 16980  02F8  2B08               	goto	l8431
 16981                           
 16982                           ;controller.c: 34:         menuSelection();
 16983  02F9  3197  2782  3182   	fcall	_menuSelection
 16984                           
 16985                           ;controller.c: 35:         if (upState || downState || menuState) {
 16986  02FC  0141               	movlb	1	; select bank1
 16987  02FD  0836               	movf	_upState^(0+128),w
 16988  02FE  1D03               	btfss	3,2
 16989  02FF  2B05               	goto	l1017
 16990  0300  0835               	movf	_downState^(0+128),w
 16991  0301  1903               	btfsc	3,2
 16992  0302  0834               	movf	_menuState^(0+128),w
 16993  0303  1903               	btfsc	3,2
 16994  0304  0008               	return
 16995  0305                     l1017:	
 16996                           
 16997                           ;controller.c: 36:             menuPressed = 1;
 16998  0305  01B8               	clrf	_menuPressed^(0+128)
 16999  0306  0AB8               	incf	_menuPressed^(0+128),f
 17000                           
 17001                           ;controller.c: 39:         return;
 17002                           
 17003                           ;controller.c: 37:         }
 17004  0307  0008               	return
 17005  0308                     l8431:	
 17006                           
 17007                           ;controller.c: 42:         if (menuPressed == 0 && startup == 1)
 17008  0308  0838               	movf	_menuPressed^(0+128),w
 17009  0309  1D03               	btfss	3,2
 17010  030A  2B0F               	goto	l1020
 17011  030B  036E               	decf	_startup^(0+128),w
 17012  030C  1D03               	btfss	3,2
 17013  030D  2B0F               	goto	l1020
 17014                           
 17015                           ;controller.c: 43:             currentSelection = MODE_DMX;
 17016  030E  01B9               	clrf	_currentSelection^(0+128)
 17017  030F                     l1020:	
 17018                           
 17019                           ;controller.c: 44:         startup = 0;
 17020  030F  01EE               	clrf	_startup^(0+128)
 17021                           
 17022                           ;controller.c: 47:     if ((menuState || menuPressed) && !enterPressed) {
 17023  0310  0834               	movf	_menuState^(0+128),w
 17024  0311  1903               	btfsc	3,2
 17025  0312  0838               	movf	_menuPressed^(0+128),w
 17026  0313  1903               	btfsc	3,2
 17027  0314  2B1E               	goto	l8447
 17028  0315  0837               	movf	_enterPressed^(0+128),w
 17029  0316  1D03               	btfss	3,2
 17030  0317  2B1E               	goto	l8447
 17031                           
 17032                           ;controller.c: 48:         menuPressed = 1;
 17033  0318  01B8               	clrf	_menuPressed^(0+128)
 17034  0319  0AB8               	incf	_menuPressed^(0+128),f
 17035                           
 17036                           ;controller.c: 49:         menuSelection();
 17037  031A  3197  2782  3182   	fcall	_menuSelection
 17038                           
 17039                           ;controller.c: 50:     } else if (currentSelection == MODE_DMX) {
 17040  031D  2B53               	goto	l8473
 17041  031E                     l8447:	
 17042  031E  0839               	movf	_currentSelection^(0+128),w
 17043  031F  1D03               	btfss	3,2
 17044  0320  2B25               	goto	l8451
 17045                           
 17046                           ;controller.c: 51:         isActive = CONTROL_DMX();
 17047  0321  3188  20DA  3182   	fcall	_CONTROL_DMX
 17048  0324  2B4B               	goto	L16
 17049  0325                     l8451:	
 17050                           ;controller.c: 52:     } else if (currentSelection == MODE_ANIMATION) {
 17051                           
 17052  0325  3002               	movlw	2
 17053  0326  0639               	xorwf	_currentSelection^(0+128),w
 17054  0327  1D03               	btfss	3,2
 17055  0328  2B2D               	goto	l8455
 17056                           
 17057                           ;controller.c: 53:         isActive = 1;
 17058  0329  0140               	movlb	0	; select bank0
 17059  032A  01EF               	clrf	CONTROLLER_task@isActive
 17060  032B  0AEF               	incf	CONTROLLER_task@isActive,f
 17061                           
 17062                           ;controller.c: 54:     } else if (currentSelection == MODE_BEAT_STROBE || currentSelecti
      +                          on == MODE_BEAT_FADE || currentSelection == MODE_BEAT_CONTINUOUS || currentSelection == 
      +                          MODE_BEAT_MIXED) {
 17063  032C  2B53               	goto	l8473
 17064  032D                     l8455:	
 17065  032D  0339               	decf	_currentSelection^(0+128),w
 17066  032E  1903               	btfsc	3,2
 17067  032F  2B3C               	goto	l8463
 17068  0330  3004               	movlw	4
 17069  0331  0639               	xorwf	_currentSelection^(0+128),w
 17070  0332  1903               	btfsc	3,2
 17071  0333  2B3C               	goto	l8463
 17072  0334  3005               	movlw	5
 17073  0335  0639               	xorwf	_currentSelection^(0+128),w
 17074  0336  1903               	btfsc	3,2
 17075  0337  2B3C               	goto	l8463
 17076  0338  3006               	movlw	6
 17077  0339  0639               	xorwf	_currentSelection^(0+128),w
 17078  033A  1D03               	btfss	3,2
 17079  033B  2B40               	goto	l8465
 17080  033C                     l8463:	
 17081                           
 17082                           ;controller.c: 55:         isActive = CONTROL_BEAT();
 17083  033C  3196  2695  3182   	fcall	_CONTROL_BEAT
 17084  033F  2B4B               	goto	L16
 17085  0340                     l8465:	
 17086                           ;controller.c: 56:     } else if(currentSelection == MODE_MANUAL && !enterPressed){
 17087                           
 17088  0340  3003               	movlw	3
 17089  0341  0639               	xorwf	_currentSelection^(0+128),w
 17090  0342  1D03               	btfss	3,2
 17091  0343  2B51               	goto	l8471
 17092  0344  0837               	movf	_enterPressed^(0+128),w
 17093  0345  1D03               	btfss	3,2
 17094  0346  2B51               	goto	l8471
 17095                           
 17096                           ;controller.c: 57:         isActive = CONTROL_MANUAL(colorModeSelected);
 17097  0347  0831               	movf	_colorModeSelected^(0+128),w
 17098  0348  318B  237D  3182   	fcall	_CONTROL_MANUAL
 17099  034B                     L16:	
 17100  034B  0141               	movlb	1	; select bank1
 17101  034C  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17102  034D  0851               	movf	??_CONTROLLER_task^(0+128),w
 17103  034E  0140               	movlb	0	; select bank0
 17104  034F  00EF               	movwf	CONTROLLER_task@isActive
 17105                           
 17106                           ;controller.c: 58:     } else {
 17107  0350  2B53               	goto	l8473
 17108  0351                     l8471:	
 17109                           
 17110                           ;controller.c: 59:         isActive = 0;
 17111  0351  0140               	movlb	0	; select bank0
 17112  0352  01EF               	clrf	CONTROLLER_task@isActive
 17113  0353                     l8473:	
 17114                           
 17115                           ;controller.c: 62:     if (isActive) {
 17116  0353  0140               	movlb	0	; select bank0
 17117  0354  086F               	movf	CONTROLLER_task@isActive,w
 17118  0355  1903               	btfsc	3,2
 17119  0356  2B62               	goto	l8477
 17120                           
 17121                           ;controller.c: 63:         lastActiveTime = CLOCK_getTime();
 17122  0357  319E  269D  3182   	fcall	_CLOCK_getTime
 17123  035A  0140               	movlb	0	; select bank0
 17124  035B  0821               	movf	?_CLOCK_getTime+1,w
 17125  035C  0142               	movlb	2	; select bank2
 17126  035D  00C5               	movwf	(_lastActiveTime+1)^(0+256)
 17127  035E  0140               	movlb	0	; select bank0
 17128  035F  0820               	movf	?_CLOCK_getTime,w
 17129  0360  0142               	movlb	2	; select bank2
 17130  0361  00C4               	movwf	_lastActiveTime^(0+256)
 17131  0362                     l8477:	
 17132                           
 17133                           ;controller.c: 66:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 17134  0362  319E  269D  3182   	fcall	_CLOCK_getTime
 17135  0365  0142               	movlb	2	; select bank2
 17136  0366  0844               	movf	_lastActiveTime^(0+256),w
 17137  0367  0140               	movlb	0	; select bank0
 17138  0368  0220               	subwf	?_CLOCK_getTime,w
 17139  0369  0141               	movlb	1	; select bank1
 17140  036A  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17141  036B  0142               	movlb	2	; select bank2
 17142  036C  0845               	movf	(_lastActiveTime+1)^(0+256),w
 17143  036D  0140               	movlb	0	; select bank0
 17144  036E  3B21               	subwfb	?_CLOCK_getTime+1,w
 17145  036F  0141               	movlb	1	; select bank1
 17146  0370  00D2               	movwf	(??_CONTROLLER_task+1)^(0+128)
 17147  0371  3013               	movlw	19
 17148  0372  0252               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 17149  0373  3088               	movlw	136
 17150  0374  1903               	skipnz
 17151  0375  0251               	subwf	??_CONTROLLER_task^(0+128),w
 17152  0376  1C03               	skipc
 17153  0377  2B8A               	goto	l8483
 17154                           
 17155                           ;controller.c: 67:         TM1650_enable(0);
 17156  0378  3000               	movlw	0
 17157  0379  319F  27D6  3182   	fcall	_TM1650_enable
 17158                           
 17159                           ;controller.c: 68:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 17160  037C  319E  269D  3182   	fcall	_CLOCK_getTime
 17161  037F  0140               	movlb	0	; select bank0
 17162  0380  0820               	movf	?_CLOCK_getTime,w
 17163  0381  3E77               	addlw	119
 17164  0382  0142               	movlb	2	; select bank2
 17165  0383  00C4               	movwf	_lastActiveTime^(0+256)
 17166  0384  30EC               	movlw	236
 17167  0385  0140               	movlb	0	; select bank0
 17168  0386  3D21               	addwfc	?_CLOCK_getTime+1,w
 17169  0387  0142               	movlb	2	; select bank2
 17170  0388  00C5               	movwf	(_lastActiveTime+1)^(0+256)
 17171                           
 17172                           ;controller.c: 69:     } else {
 17173  0389  2B8E               	goto	l8485
 17174  038A                     l8483:	
 17175                           
 17176                           ;controller.c: 70:         TM1650_enable(1);
 17177  038A  3001               	movlw	1
 17178  038B  319F  27D6  3182   	fcall	_TM1650_enable
 17179  038E                     l8485:	
 17180                           
 17181                           ;controller.c: 73:     if (currentSelection == MODE_DMX && !menuPressed) {
 17182  038E  0141               	movlb	1	; select bank1
 17183  038F  0839               	movf	_currentSelection^(0+128),w
 17184  0390  1D03               	btfss	3,2
 17185  0391  2C14               	goto	l8493
 17186  0392  0838               	movf	_menuPressed^(0+128),w
 17187  0393  1D03               	btfss	3,2
 17188  0394  2C14               	goto	l8493
 17189                           
 17190                           ;controller.c: 74:         TM1650_fastPrintNum(address);
 17191  0395  086D               	movf	(_address+1)^(0+128),w
 17192  0396  0140               	movlb	0	; select bank0
 17193  0397  00B5               	movwf	TM1650_fastPrintNum@num+1
 17194  0398  0141               	movlb	1	; select bank1
 17195  0399  086C               	movf	_address^(0+128),w
 17196  039A  0140               	movlb	0	; select bank0
 17197  039B  00B4               	movwf	TM1650_fastPrintNum@num
 17198  039C  2C0F               	goto	L17
 17199  039D                     l8495:	
 17200  039D  0838               	movf	_menuPressed^(0+128),w
 17201  039E  1D03               	btfss	3,2
 17202  039F  2C18               	goto	l8501
 17203                           
 17204                           ;controller.c: 77:         printf("SEL1\r");
 17205  03A0  307B               	movlw	low (STR_1| (0+32768))
 17206  03A1  00C7               	movwf	printf@fmt^(0+128)
 17207  03A2  30A0               	movlw	high (STR_1| (0+32768))
 17208  03A3  00C8               	movwf	(printf@fmt^(0+128)+1)
 17209  03A4  319F  27EB  3182   	fcall	_printf
 17210  03A7  2C11               	goto	l8491
 17211  03A8                     l8503:	
 17212  03A8  0832               	movf	_beatHold^(0+128),w
 17213  03A9  1903               	btfsc	3,2
 17214  03AA  2C1B               	goto	l8509
 17215                           
 17216                           ;controller.c: 80:         printf("HOLD");
 17217  03AB  308C               	movlw	low (STR_2| (0+32768))
 17218  03AC  00C7               	movwf	printf@fmt^(0+128)
 17219  03AD  30A0               	movlw	high (STR_2| (0+32768))
 17220  03AE  00C8               	movwf	(printf@fmt^(0+128)+1)
 17221  03AF  319F  27EB  3182   	fcall	_printf
 17222  03B2  2C11               	goto	l8491
 17223  03B3                     l8511:	
 17224  03B3  0838               	movf	_menuPressed^(0+128),w
 17225  03B4  1D03               	btfss	3,2
 17226  03B5  2C1E               	goto	l8517
 17227                           
 17228                           ;controller.c: 83:         printf("B-%u  \r", (uint8_t)beatBrightness);
 17229  03B6  304D               	movlw	low (STR_3| (0+32768))
 17230  03B7  00C7               	movwf	printf@fmt^(0+128)
 17231  03B8  30A0               	movlw	high (STR_3| (0+32768))
 17232  03B9  00C8               	movwf	(printf@fmt^(0+128)+1)
 17233  03BA  086F               	movf	_beatBrightness^(0+128),w
 17234  03BB  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17235  03BC  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17236  03BD  0851               	movf	??_CONTROLLER_task^(0+128),w
 17237  03BE  00C9               	movwf	(?_printf^(0+128)+2)
 17238  03BF  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17239  03C0  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17240  03C1  319F  27EB  3182   	fcall	_printf
 17241  03C4  2C11               	goto	l8491
 17242  03C5                     l8519:	
 17243  03C5  0838               	movf	_menuPressed^(0+128),w
 17244  03C6  1D03               	btfss	3,2
 17245  03C7  2C22               	goto	l8525
 17246                           
 17247                           ;controller.c: 86:         printf("F-%d  \r", (uint8_t)beatBrightness);
 17248  03C8  3045               	movlw	low (STR_4| (0+32768))
 17249  03C9  00C7               	movwf	printf@fmt^(0+128)
 17250  03CA  30A0               	movlw	high (STR_4| (0+32768))
 17251  03CB  00C8               	movwf	(printf@fmt^(0+128)+1)
 17252  03CC  086F               	movf	_beatBrightness^(0+128),w
 17253  03CD  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17254  03CE  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17255  03CF  0851               	movf	??_CONTROLLER_task^(0+128),w
 17256  03D0  00C9               	movwf	(?_printf^(0+128)+2)
 17257  03D1  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17258  03D2  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17259  03D3  319F  27EB  3182   	fcall	_printf
 17260  03D6  2C11               	goto	l8491
 17261  03D7                     l8527:	
 17262  03D7  0838               	movf	_menuPressed^(0+128),w
 17263  03D8  1D03               	btfss	3,2
 17264  03D9  2C26               	goto	l8533
 17265                           
 17266                           ;controller.c: 89:         printf("C-%d  \r", (uint8_t)beatBrightness);
 17267  03DA  303D               	movlw	low (STR_5| (0+32768))
 17268  03DB  00C7               	movwf	printf@fmt^(0+128)
 17269  03DC  30A0               	movlw	high (STR_5| (0+32768))
 17270  03DD  00C8               	movwf	(printf@fmt^(0+128)+1)
 17271  03DE  086F               	movf	_beatBrightness^(0+128),w
 17272  03DF  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17273  03E0  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17274  03E1  0851               	movf	??_CONTROLLER_task^(0+128),w
 17275  03E2  00C9               	movwf	(?_printf^(0+128)+2)
 17276  03E3  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17277  03E4  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17278  03E5  319F  27EB  3182   	fcall	_printf
 17279  03E8  2C11               	goto	l8491
 17280  03E9                     l8535:	
 17281  03E9  0838               	movf	_menuPressed^(0+128),w
 17282  03EA  1D03               	btfss	3,2
 17283  03EB  2C2A               	goto	l8541
 17284                           
 17285                           ;controller.c: 92:         printf("A-%d  \r", (uint8_t)beatBrightness);
 17286  03EC  3035               	movlw	low (STR_6| (0+32768))
 17287  03ED  00C7               	movwf	printf@fmt^(0+128)
 17288  03EE  30A0               	movlw	high (STR_6| (0+32768))
 17289  03EF  00C8               	movwf	(printf@fmt^(0+128)+1)
 17290  03F0  086F               	movf	_beatBrightness^(0+128),w
 17291  03F1  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17292  03F2  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17293  03F3  0851               	movf	??_CONTROLLER_task^(0+128),w
 17294  03F4  00C9               	movwf	(?_printf^(0+128)+2)
 17295  03F5  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17296  03F6  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17297  03F7  319F  27EB  3182   	fcall	_printf
 17298  03FA  2C11               	goto	l8491
 17299  03FB                     l8547:	
 17300                           
 17301                           ;controller.c: 98:                 TM1650_fastPrintNum(getManualColor(CMODE_RED));
 17302  03FB  3000               	movlw	0
 17303  03FC  2C02               	goto	L18
 17304  03FD                     l8549:	
 17305                           ;controller.c: 99:                 break;
 17306                           
 17307                           
 17308                           ;controller.c: 102:                 TM1650_fastPrintNum(getManualColor(CMODE_GREEN));
 17309  03FD  3001               	movlw	1
 17310  03FE  2C02               	goto	L18
 17311  03FF                     l8551:	
 17312                           ;controller.c: 104:                 break;
 17313                           
 17314                           
 17315                           ;controller.c: 107:                 TM1650_fastPrintNum(getManualColor(CMODE_BLUE));
 17316  03FF  3002               	movlw	2
 17317  0400  2C02               	goto	L18
 17318  0401                     l8553:	
 17319                           ;controller.c: 109:                 break;
 17320                           
 17321                           
 17322                           ;controller.c: 112:                 TM1650_fastPrintNum(getManualColor(CMODE_WHITE));
 17323  0401  3003               	movlw	3
 17324  0402                     L18:	
 17325  0402  3191  21EE  3182   	fcall	_getManualColor
 17326  0405  0141               	movlb	1	; select bank1
 17327  0406  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17328  0407  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17329  0408  0851               	movf	??_CONTROLLER_task^(0+128),w
 17330  0409  0140               	movlb	0	; select bank0
 17331  040A  00B4               	movwf	TM1650_fastPrintNum@num
 17332  040B  0141               	movlb	1	; select bank1
 17333  040C  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17334  040D  0140               	movlb	0	; select bank0
 17335  040E  00B5               	movwf	TM1650_fastPrintNum@num+1
 17336  040F                     L17:	
 17337  040F  318C  2435         	fcall	_TM1650_fastPrintNum
 17338  0411                     l8491:	
 17339                           ;controller.c: 114:                 break;
 17340                           
 17341                           
 17342                           ;controller.c: 75:         enterPressed = 0;
 17343  0411  0141               	movlb	1	; select bank1
 17344  0412  01B7               	clrf	_enterPressed^(0+128)
 17345                           
 17346                           ;controller.c: 76:     } else if (currentSelection == MODE_ANIMATION && !menuPressed) {
 17347  0413  0008               	return
 17348  0414                     l8493:	
 17349  0414  3002               	movlw	2
 17350  0415  0639               	xorwf	_currentSelection^(0+128),w
 17351  0416  1903               	btfsc	3,2
 17352  0417  2B9D               	goto	l8495
 17353  0418                     l8501:	
 17354  0418  0339               	decf	_currentSelection^(0+128),w
 17355  0419  1903               	btfsc	3,2
 17356  041A  2BA8               	goto	l8503
 17357  041B                     l8509:	
 17358  041B  0339               	decf	_currentSelection^(0+128),w
 17359  041C  1903               	btfsc	3,2
 17360  041D  2BB3               	goto	l8511
 17361  041E                     l8517:	
 17362  041E  3004               	movlw	4
 17363  041F  0639               	xorwf	_currentSelection^(0+128),w
 17364  0420  1903               	btfsc	3,2
 17365  0421  2BC5               	goto	l8519
 17366  0422                     l8525:	
 17367  0422  3005               	movlw	5
 17368  0423  0639               	xorwf	_currentSelection^(0+128),w
 17369  0424  1903               	btfsc	3,2
 17370  0425  2BD7               	goto	l8527
 17371  0426                     l8533:	
 17372  0426  3006               	movlw	6
 17373  0427  0639               	xorwf	_currentSelection^(0+128),w
 17374  0428  1903               	btfsc	3,2
 17375  0429  2BE9               	goto	l8535
 17376  042A                     l8541:	
 17377  042A  3003               	movlw	3
 17378  042B  0639               	xorwf	_currentSelection^(0+128),w
 17379  042C  1D03               	btfss	3,2
 17380  042D  0008               	return
 17381  042E  0838               	movf	_menuPressed^(0+128),w
 17382  042F  1D03               	btfss	3,2
 17383  0430  0008               	return
 17384  0431  0831               	movf	_colorModeSelected^(0+128),w
 17385  0432  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17386  0433  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17387                           
 17388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17389                           ; Switch size 1, requested type "simple"
 17390                           ; Number of cases is 1, Range of values is 0 to 0
 17391                           ; switch strategies available:
 17392                           ; Name         Instructions Cycles
 17393                           ; simple_byte            4     3 (average)
 17394                           ; direct_byte            8     6 (fixed)
 17395                           ; jumptable            260     6 (fixed)
 17396                           ;	Chosen strategy is simple_byte
 17397  0434  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17398  0435  3A00               	xorlw	0	; case 0
 17399  0436  1903               	skipnz
 17400  0437  2C39               	goto	l8967
 17401  0438  2C11               	goto	l8491
 17402  0439                     l8967:	
 17403                           
 17404                           ; Switch size 1, requested type "simple"
 17405                           ; Number of cases is 4, Range of values is 0 to 3
 17406                           ; switch strategies available:
 17407                           ; Name         Instructions Cycles
 17408                           ; simple_byte           13     7 (average)
 17409                           ; direct_byte           14     6 (fixed)
 17410                           ; jumptable            260     6 (fixed)
 17411                           ;	Chosen strategy is simple_byte
 17412  0439  0851               	movf	??_CONTROLLER_task^(0+128),w
 17413  043A  3A00               	xorlw	0	; case 0
 17414  043B  1903               	skipnz
 17415  043C  2BFB               	goto	l8547
 17416  043D  3A01               	xorlw	1	; case 1
 17417  043E  1903               	skipnz
 17418  043F  2BFD               	goto	l8549
 17419  0440  3A03               	xorlw	3	; case 2
 17420  0441  1903               	skipnz
 17421  0442  2BFF               	goto	l8551
 17422  0443  3A01               	xorlw	1	; case 3
 17423  0444  1903               	skipnz
 17424  0445  2C01               	goto	l8553
 17425  0446  2C11               	goto	l8491
 17426  0447  0008               	return
 17427  0448                     __end_of_CONTROLLER_task:	
 17428                           
 17429                           	psect	text45
 17430  1782                     __ptext45:	
 17431 ;; *************** function _menuSelection *****************
 17432 ;; Defined at:
 17433 ;;		line 121 in file "controller.c"
 17434 ;; Parameters:    Size  Location     Type
 17435 ;;		None
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;		None
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  1    wreg      void 
 17440 ;; Registers used:
 17441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17449 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17451 ;;Total ram usage:        2 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; Hardware stack levels required when called:   17
 17454 ;; This function calls:
 17455 ;;		_printf
 17456 ;; This function is called by:
 17457 ;;		_CONTROLLER_task
 17458 ;; This function uses a non-reentrant model
 17459 ;;
 17460                           
 17461                           
 17462                           ;psect for function _menuSelection
 17463  1782                     _menuSelection:	
 17464                           
 17465                           ;controller.c: 123:     if(menuSelected == MODE_BEAT_FADE || menuSelected == MODE_BEAT_C
      +                          ONTINUOUS || menuSelected == MODE_BEAT_MIXED)
 17466                           
 17467                           ;incstack = 0
 17468 ;; hardware stack exceeded
 17469                           ; Regs used in _menuSelection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17470  1782  3004               	movlw	4
 17471  1783  0141               	movlb	1	; select bank1
 17472  1784  063A               	xorwf	_menuSelected^(0+128),w
 17473  1785  1903               	btfsc	3,2
 17474  1786  2F8F               	goto	l1063
 17475  1787  3005               	movlw	5
 17476  1788  063A               	xorwf	_menuSelected^(0+128),w
 17477  1789  1903               	btfsc	3,2
 17478  178A  2F8F               	goto	l1063
 17479  178B  3006               	movlw	6
 17480  178C  063A               	xorwf	_menuSelected^(0+128),w
 17481  178D  1D03               	btfss	3,2
 17482  178E  2F91               	goto	l7919
 17483  178F                     l1063:	
 17484                           
 17485                           ;controller.c: 124:         menuSelected = MODE_BEAT_STROBE;
 17486  178F  01BA               	clrf	_menuSelected^(0+128)
 17487  1790  0ABA               	incf	_menuSelected^(0+128),f
 17488  1791                     l7919:	
 17489                           
 17490                           ;controller.c: 126:     if(upState){
 17491  1791  0836               	movf	_upState^(0+128),w
 17492  1792  1903               	btfsc	3,2
 17493  1793  2FA6               	goto	l7927
 17494                           
 17495                           ;controller.c: 127:         if(menuSelected < 3){
 17496  1794  3003               	movlw	3
 17497  1795  023A               	subwf	_menuSelected^(0+128),w
 17498  1796  1803               	skipnc
 17499  1797  2F9F               	goto	l7925
 17500                           
 17501                           ;controller.c: 128:             menuSelected++;
 17502  1798  3001               	movlw	1
 17503  1799  0140               	movlb	0	; select bank0
 17504  179A  00ED               	movwf	??_menuSelection
 17505  179B  086D               	movf	??_menuSelection,w
 17506  179C  0141               	movlb	1	; select bank1
 17507  179D  07BA               	addwf	_menuSelected^(0+128),f
 17508                           
 17509                           ;controller.c: 129:         } else {
 17510  179E  2FB0               	goto	l7935
 17511  179F                     l7925:	
 17512                           
 17513                           ;controller.c: 130:             menuSelected = 3;
 17514  179F  3003               	movlw	3
 17515  17A0  0140               	movlb	0	; select bank0
 17516  17A1  00ED               	movwf	??_menuSelection
 17517  17A2  086D               	movf	??_menuSelection,w
 17518  17A3  0141               	movlb	1	; select bank1
 17519  17A4  00BA               	movwf	_menuSelected^(0+128)
 17520  17A5  2FB0               	goto	l7935
 17521  17A6                     l7927:	
 17522  17A6  0835               	movf	_downState^(0+128),w
 17523  17A7  1903               	btfsc	3,2
 17524  17A8  2FB0               	goto	l7935
 17525                           
 17526                           ;controller.c: 133:         if(menuSelected > 0){
 17527  17A9  083A               	movf	_menuSelected^(0+128),w
 17528  17AA  1903               	btfsc	3,2
 17529  17AB  2FAF               	goto	l7933
 17530                           
 17531                           ;controller.c: 134:             menuSelected--;
 17532  17AC  3001               	movlw	1
 17533  17AD  02BA               	subwf	_menuSelected^(0+128),f
 17534                           
 17535                           ;controller.c: 135:         } else {
 17536  17AE  2FB0               	goto	l7935
 17537  17AF                     l7933:	
 17538                           
 17539                           ;controller.c: 136:             menuSelected = 0;
 17540  17AF  01BA               	clrf	_menuSelected^(0+128)
 17541  17B0                     l7935:	
 17542                           
 17543                           ;controller.c: 140:     if (enterState) {
 17544  17B0  0833               	movf	_enterState^(0+128),w
 17545  17B1  1903               	btfsc	3,2
 17546  17B2  2FE5               	goto	l7957
 17547                           
 17548                           ;controller.c: 141:         currentSelection = menuSelected;
 17549  17B3  083A               	movf	_menuSelected^(0+128),w
 17550  17B4  0140               	movlb	0	; select bank0
 17551  17B5  00ED               	movwf	??_menuSelection
 17552  17B6  086D               	movf	??_menuSelection,w
 17553  17B7  0141               	movlb	1	; select bank1
 17554  17B8  00B9               	movwf	_currentSelection^(0+128)
 17555                           
 17556                           ;controller.c: 142:         menuPressed = 0;
 17557  17B9  01B8               	clrf	_menuPressed^(0+128)
 17558                           
 17559                           ;controller.c: 143:         enterPressed = 1;
 17560  17BA  01B7               	clrf	_enterPressed^(0+128)
 17561  17BB  0AB7               	incf	_enterPressed^(0+128),f
 17562  17BC  0008               	return
 17563  17BD                     l7945:	
 17564                           
 17565                           ;controller.c: 149:             printf("ANI \r");
 17566  17BD  3075               	movlw	low (STR_7| (0+32768))
 17567  17BE  0141               	movlb	1	; select bank1
 17568  17BF  00C7               	movwf	printf@fmt^(0+128)
 17569  17C0  30A0               	movlw	high (STR_7| (0+32768))
 17570  17C1  00C8               	movwf	(printf@fmt^(0+128)+1)
 17571  17C2  319F  27EB         	fcall	_printf
 17572                           
 17573                           ;controller.c: 150:             break;
 17574  17C4  0008               	return
 17575  17C5                     l7947:	
 17576                           
 17577                           ;controller.c: 153:             printf("BEAT\r");
 17578  17C5  3081               	movlw	low (STR_8| (0+32768))
 17579  17C6  0141               	movlb	1	; select bank1
 17580  17C7  00C7               	movwf	printf@fmt^(0+128)
 17581  17C8  30A0               	movlw	high (STR_8| (0+32768))
 17582  17C9  00C8               	movwf	(printf@fmt^(0+128)+1)
 17583  17CA  319F  27EB         	fcall	_printf
 17584                           
 17585                           ;controller.c: 154:             break;
 17586  17CC  0008               	return
 17587  17CD                     l7949:	
 17588                           
 17589                           ;controller.c: 157:             printf("BEAT\r");
 17590  17CD  3081               	movlw	low (STR_8| (0+32768))
 17591  17CE  0141               	movlb	1	; select bank1
 17592  17CF  00C7               	movwf	printf@fmt^(0+128)
 17593  17D0  30A0               	movlw	high (STR_8| (0+32768))
 17594  17D1  00C8               	movwf	(printf@fmt^(0+128)+1)
 17595  17D2  319F  27EB         	fcall	_printf
 17596                           
 17597                           ;controller.c: 158:             break;
 17598  17D4  0008               	return
 17599  17D5                     l7951:	
 17600                           
 17601                           ;controller.c: 161:             printf("PC  \r");
 17602  17D5  3069               	movlw	low (STR_10| (0+32768))
 17603  17D6  0141               	movlb	1	; select bank1
 17604  17D7  00C7               	movwf	printf@fmt^(0+128)
 17605  17D8  30A0               	movlw	high (STR_10| (0+32768))
 17606  17D9  00C8               	movwf	(printf@fmt^(0+128)+1)
 17607  17DA  319F  27EB         	fcall	_printf
 17608                           
 17609                           ;controller.c: 162:             break;
 17610  17DC  0008               	return
 17611  17DD                     l7953:	
 17612                           
 17613                           ;controller.c: 165:             printf("LED \r");
 17614  17DD  306F               	movlw	low (STR_11| (0+32768))
 17615  17DE  0141               	movlb	1	; select bank1
 17616  17DF  00C7               	movwf	printf@fmt^(0+128)
 17617  17E0  30A0               	movlw	high (STR_11| (0+32768))
 17618  17E1  00C8               	movwf	(printf@fmt^(0+128)+1)
 17619  17E2  319F  27EB         	fcall	_printf
 17620                           
 17621                           ;controller.c: 166:             break;
 17622  17E4  0008               	return
 17623  17E5                     l7957:	
 17624  17E5  083A               	movf	_menuSelected^(0+128),w
 17625  17E6  0140               	movlb	0	; select bank0
 17626  17E7  00ED               	movwf	??_menuSelection
 17627  17E8  01EE               	clrf	??_menuSelection+1
 17628                           
 17629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17630                           ; Switch size 1, requested type "simple"
 17631                           ; Number of cases is 1, Range of values is 0 to 0
 17632                           ; switch strategies available:
 17633                           ; Name         Instructions Cycles
 17634                           ; simple_byte            4     3 (average)
 17635                           ; direct_byte            8     6 (fixed)
 17636                           ; jumptable            260     6 (fixed)
 17637                           ;	Chosen strategy is simple_byte
 17638  17E9  086E               	movf	??_menuSelection+1,w
 17639  17EA  3A00               	xorlw	0	; case 0
 17640  17EB  1903               	skipnz
 17641  17EC  2FEE               	goto	l8969
 17642  17ED  2FFF               	goto	l1072
 17643  17EE                     l8969:	
 17644                           
 17645                           ; Switch size 1, requested type "simple"
 17646                           ; Number of cases is 5, Range of values is 0 to 4
 17647                           ; switch strategies available:
 17648                           ; Name         Instructions Cycles
 17649                           ; direct_byte           16     6 (fixed)
 17650                           ; simple_byte           16     9 (average)
 17651                           ; jumptable            260     6 (fixed)
 17652                           ;	Chosen strategy is simple_byte
 17653  17EE  086D               	movf	??_menuSelection,w
 17654  17EF  3A00               	xorlw	0	; case 0
 17655  17F0  1903               	skipnz
 17656  17F1  2FD5               	goto	l7951
 17657  17F2  3A01               	xorlw	1	; case 1
 17658  17F3  1903               	skipnz
 17659  17F4  2FC5               	goto	l7947
 17660  17F5  3A03               	xorlw	3	; case 2
 17661  17F6  1903               	skipnz
 17662  17F7  2FBD               	goto	l7945
 17663  17F8  3A01               	xorlw	1	; case 3
 17664  17F9  1903               	skipnz
 17665  17FA  2FDD               	goto	l7953
 17666  17FB  3A07               	xorlw	7	; case 4
 17667  17FC  1903               	skipnz
 17668  17FD  2FCD               	goto	l7949
 17669  17FE  2FFF               	goto	l1072
 17670  17FF                     l1072:	
 17671  17FF  0008               	return
 17672  1800                     __end_of_menuSelection:	
 17673                           
 17674                           	psect	text46
 17675  1FEB                     __ptext46:	
 17676 ;; *************** function _printf *****************
 17677 ;; Defined at:
 17678 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 17679 ;; Parameters:    Size  Location     Type
 17680 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 17681 ;;		 -> STR_22(6), STR_21(7), STR_20(8), STR_19(9), 
 17682 ;;		 -> STR_18(10), STR_17(9), STR_16(8), STR_15(7), 
 17683 ;;		 -> STR_13(2), STR_12(5), STR_11(6), STR_10(6), 
 17684 ;;		 -> STR_9(6), STR_8(6), STR_7(6), STR_6(8), 
 17685 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(5), 
 17686 ;;		 -> STR_1(6), 
 17687 ;; Auto vars:     Size  Location     Type
 17688 ;;  ret             2    0        int 
 17689 ;;  ap              1   76[BANK0 ] PTR void [1]
 17690 ;;		 -> ?_printf(2), 
 17691 ;; Return value:  Size  Location     Type
 17692 ;;                  2    0[BANK1 ] int 
 17693 ;; Registers used:
 17694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17695 ;; Tracked objects:
 17696 ;;		On entry : 0/0
 17697 ;;		On exit  : 0/0
 17698 ;;		Unchanged: 0/0
 17699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17700 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17701 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17702 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17703 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17704 ;;Total ram usage:       14 bytes
 17705 ;; Hardware stack levels used:    1
 17706 ;; Hardware stack levels required when called:   16
 17707 ;; This function calls:
 17708 ;;		_vfprintf
 17709 ;; This function is called by:
 17710 ;;		_CONTROLLER_task
 17711 ;;		_menuSelection
 17712 ;;		_TM1650_init
 17713 ;;		_TM1650_scrollPrint
 17714 ;; This function uses a non-reentrant model
 17715 ;;
 17716                           
 17717                           
 17718                           ;psect for function _printf
 17719  1FEB                     _printf:	
 17720                           
 17721                           ;incstack = 0
 17722 ;; hardware stack exceeded
 17723                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17724  1FEB  30C9               	movlw	(low ((?_printf| 0+2)))& (0+255)
 17725  1FEC  0140               	movlb	0	; select bank0
 17726  1FED  00E9               	movwf	??_printf
 17727  1FEE  0869               	movf	??_printf,w
 17728  1FEF  00EC               	movwf	printf@ap
 17729  1FF0  0141               	movlb	1	; select bank1
 17730  1FF1  0848               	movf	(printf@fmt+1)^(0+128),w
 17731  1FF2  0140               	movlb	0	; select bank0
 17732  1FF3  00E2               	movwf	vfprintf@fmt+1
 17733  1FF4  0141               	movlb	1	; select bank1
 17734  1FF5  0847               	movf	printf@fmt^(0+128),w
 17735  1FF6  0140               	movlb	0	; select bank0
 17736  1FF7  00E1               	movwf	vfprintf@fmt
 17737  1FF8  306C               	movlw	(low (printf@ap| 0))& (0+255)
 17738  1FF9  00E9               	movwf	??_printf
 17739  1FFA  0869               	movf	??_printf,w
 17740  1FFB  00E3               	movwf	vfprintf@ap
 17741  1FFC  3000               	movlw	0
 17742  1FFD  3192  22B7         	fcall	_vfprintf
 17743  1FFF  0008               	return
 17744  2000                     __end_of_printf:	
 17745                           
 17746                           	psect	text47
 17747  12B7                     __ptext47:	
 17748 ;; *************** function _vfprintf *****************
 17749 ;; Defined at:
 17750 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17751 ;; Parameters:    Size  Location     Type
 17752 ;;  fp              1    wreg     PTR struct _IO_FILE
 17753 ;;		 -> NULL(0), 
 17754 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
 17755 ;;		 -> STR_22(6), STR_21(7), STR_20(8), STR_19(9), 
 17756 ;;		 -> STR_18(10), STR_17(9), STR_16(8), STR_15(7), 
 17757 ;;		 -> STR_13(2), STR_12(5), STR_11(6), STR_10(6), 
 17758 ;;		 -> STR_9(6), STR_8(6), STR_7(6), STR_6(8), 
 17759 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(5), 
 17760 ;;		 -> STR_1(6), 
 17761 ;;  ap              1   67[BANK0 ] PTR PTR void 
 17762 ;;		 -> printf@ap(1), 
 17763 ;; Auto vars:     Size  Location     Type
 17764 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
 17765 ;;		 -> NULL(0), 
 17766 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 17767 ;;		 -> STR_22(6), STR_21(7), STR_20(8), STR_19(9), 
 17768 ;;		 -> STR_18(10), STR_17(9), STR_16(8), STR_15(7), 
 17769 ;;		 -> STR_13(2), STR_12(5), STR_11(6), STR_10(6), 
 17770 ;;		 -> STR_9(6), STR_8(6), STR_7(6), STR_6(8), 
 17771 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(5), 
 17772 ;;		 -> STR_1(6), 
 17773 ;; Return value:  Size  Location     Type
 17774 ;;                  2   65[BANK0 ] int 
 17775 ;; Registers used:
 17776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17777 ;; Tracked objects:
 17778 ;;		On entry : 0/0
 17779 ;;		On exit  : 0/0
 17780 ;;		Unchanged: 0/0
 17781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17782 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17783 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17784 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17785 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17786 ;;Total ram usage:        8 bytes
 17787 ;; Hardware stack levels used:    1
 17788 ;; Hardware stack levels required when called:   15
 17789 ;; This function calls:
 17790 ;;		_vfpfcnvrt
 17791 ;; This function is called by:
 17792 ;;		_printf
 17793 ;; This function uses a non-reentrant model
 17794 ;;
 17795                           
 17796                           
 17797                           ;psect for function _vfprintf
 17798  12B7                     _vfprintf:	
 17799                           
 17800                           ;incstack = 0
 17801 ;; hardware stack exceeded
 17802                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17803                           ;vfprintf@fp stored from wreg
 17804  12B7  0140               	movlb	0	; select bank0
 17805  12B8  00E6               	movwf	vfprintf@fp
 17806                           
 17807                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 17808  12B9  0862               	movf	vfprintf@fmt+1,w
 17809  12BA  00E8               	movwf	vfprintf@cfmt+1
 17810  12BB  0861               	movf	vfprintf@fmt,w
 17811  12BC  00E7               	movwf	vfprintf@cfmt
 17812                           
 17813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 17814  12BD  0142               	movlb	2	; select bank2
 17815  12BE  01B0               	clrf	_nout^(0+256)
 17816  12BF  01B1               	clrf	(_nout+1)^(0+256)
 17817  12C0                     l7645:	
 17818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 17819                           
 17820                           
 17821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 17822  12C0  0140               	movlb	0	; select bank0
 17823  12C1  0867               	movf	vfprintf@cfmt,w
 17824  12C2  0084               	movwf	4
 17825  12C3  0868               	movf	vfprintf@cfmt+1,w
 17826  12C4  0085               	movwf	5
 17827  12C5  0012               	moviw fsr0++
 17828  12C6  1903               	btfsc	3,2
 17829  12C7  2ADD               	goto	l7647
 17830                           
 17831                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 17832  12C8  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 17833  12C9  00E4               	movwf	??_vfprintf
 17834  12CA  0864               	movf	??_vfprintf,w
 17835  12CB  00D8               	movwf	vfpfcnvrt@fmt
 17836  12CC  0863               	movf	vfprintf@ap,w
 17837  12CD  00E5               	movwf	??_vfprintf+1
 17838  12CE  0865               	movf	??_vfprintf+1,w
 17839  12CF  00D9               	movwf	vfpfcnvrt@ap
 17840  12D0  0866               	movf	vfprintf@fp,w
 17841  12D1  3189  2173  3192   	fcall	_vfpfcnvrt
 17842  12D4  0140               	movlb	0	; select bank0
 17843  12D5  0858               	movf	?_vfpfcnvrt,w
 17844  12D6  0142               	movlb	2	; select bank2
 17845  12D7  07B0               	addwf	_nout^(0+256),f
 17846  12D8  0140               	movlb	0	; select bank0
 17847  12D9  0859               	movf	?_vfpfcnvrt+1,w
 17848  12DA  0142               	movlb	2	; select bank2
 17849  12DB  3DB1               	addwfc	(_nout+1)^(0+256),f
 17850  12DC  2AC0               	goto	l7645
 17851  12DD                     l7647:	
 17852                           
 17853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 17854  12DD  0142               	movlb	2	; select bank2
 17855  12DE  0831               	movf	(_nout+1)^(0+256),w
 17856  12DF  0140               	movlb	0	; select bank0
 17857  12E0  00E2               	movwf	?_vfprintf+1
 17858  12E1  0142               	movlb	2	; select bank2
 17859  12E2  0830               	movf	_nout^(0+256),w
 17860  12E3  0140               	movlb	0	; select bank0
 17861  12E4  00E1               	movwf	?_vfprintf
 17862  12E5  0008               	return
 17863  12E6                     __end_of_vfprintf:	
 17864                           
 17865                           	psect	text48
 17866  0973                     __ptext48:	
 17867 ;; *************** function _vfpfcnvrt *****************
 17868 ;; Defined at:
 17869 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17870 ;; Parameters:    Size  Location     Type
 17871 ;;  fp              1    wreg     PTR struct _IO_FILE
 17872 ;;		 -> NULL(0), 
 17873 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
 17874 ;;		 -> vfprintf@cfmt(2), 
 17875 ;;  ap              1   57[BANK0 ] PTR PTR void 
 17876 ;;		 -> printf@ap(1), 
 17877 ;; Auto vars:     Size  Location     Type
 17878 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
 17879 ;;		 -> NULL(0), 
 17880 ;;  llu             8    0        unsigned long long 
 17881 ;;  ll              8    0        long long 
 17882 ;;  f               4    0        long long 
 17883 ;;  ct              3    0        unsigned char [3]
 17884 ;;  vp              2    0        PTR void 
 17885 ;;  i               2    0        int 
 17886 ;;  done            2    0        int 
 17887 ;;  cp              2    0        PTR unsigned char 
 17888 ;;  c               1   63[BANK0 ] unsigned char 
 17889 ;; Return value:  Size  Location     Type
 17890 ;;                  2   56[BANK0 ] int 
 17891 ;; Registers used:
 17892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17893 ;; Tracked objects:
 17894 ;;		On entry : 0/0
 17895 ;;		On exit  : 0/0
 17896 ;;		Unchanged: 0/0
 17897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17899 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17900 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17901 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17902 ;;Total ram usage:        9 bytes
 17903 ;; Hardware stack levels used:    1
 17904 ;; Hardware stack levels required when called:   14
 17905 ;; This function calls:
 17906 ;;		_ctoa
 17907 ;;		_fputc
 17908 ;; This function is called by:
 17909 ;;		_vfprintf
 17910 ;; This function uses a non-reentrant model
 17911 ;;
 17912                           
 17913                           
 17914                           ;psect for function _vfpfcnvrt
 17915  0973                     _vfpfcnvrt:	
 17916                           
 17917                           ;incstack = 0
 17918 ;; hardware stack exceeded
 17919                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17920                           ;vfpfcnvrt@fp stored from wreg
 17921  0973  0140               	movlb	0	; select bank0
 17922  0974  00E0               	movwf	vfpfcnvrt@fp
 17923                           
 17924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 17925  0975  0858               	movf	vfpfcnvrt@fmt,w
 17926  0976  0086               	movwf	6
 17927  0977  0187               	clrf	7
 17928  0978  3F40               	moviw [0]fsr1
 17929  0979  00DA               	movwf	??_vfpfcnvrt
 17930  097A  3F41               	moviw [1]fsr1
 17931  097B  00DB               	movwf	??_vfpfcnvrt+1
 17932  097C  085A               	movf	??_vfpfcnvrt,w
 17933  097D  0084               	movwf	4
 17934  097E  085B               	movf	??_vfpfcnvrt+1,w
 17935  097F  0085               	movwf	5
 17936  0980  0012               	moviw fsr0++
 17937  0981  3A25               	xorlw	37
 17938  0982  1D03               	btfss	3,2
 17939  0983  29F8               	goto	l7195
 17940                           
 17941                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 17942  0984  0858               	movf	vfpfcnvrt@fmt,w
 17943  0985  0086               	movwf	6
 17944  0986  0187               	clrf	7
 17945  0987  3001               	movlw	1
 17946  0988  0781               	addwf	1,f
 17947  0989  3141               	addfsr 1,1
 17948  098A  1803               	skipnc
 17949  098B  0A81               	incf	1,f
 17950                           
 17951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 17952  098C  0142               	movlb	2	; select bank2
 17953  098D  01B2               	clrf	_width^(0+256)
 17954  098E  01B3               	clrf	(_width+1)^(0+256)
 17955  098F  01B6               	clrf	_flags^(0+256)
 17956  0990  01B7               	clrf	(_flags+1)^(0+256)
 17957                           
 17958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 17959  0991  30FF               	movlw	255
 17960  0992  00B4               	movwf	_prec^(0+256)
 17961  0993  30FF               	movlw	255
 17962  0994  00B5               	movwf	(_prec^(0+256)+1)
 17963                           
 17964                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 17965  0995  0140               	movlb	0	; select bank0
 17966  0996  0858               	movf	vfpfcnvrt@fmt,w
 17967  0997  0086               	movwf	6
 17968  0998  0187               	clrf	7
 17969  0999  3F40               	moviw [0]fsr1
 17970  099A  00DA               	movwf	??_vfpfcnvrt
 17971  099B  3F41               	moviw [1]fsr1
 17972  099C  00DB               	movwf	??_vfpfcnvrt+1
 17973  099D  085A               	movf	??_vfpfcnvrt,w
 17974  099E  0084               	movwf	4
 17975  099F  085B               	movf	??_vfpfcnvrt+1,w
 17976  09A0  0085               	movwf	5
 17977  09A1  0012               	moviw fsr0++
 17978  09A2  3A63               	xorlw	99
 17979  09A3  1D03               	btfss	3,2
 17980  09A4  29C6               	goto	l7179
 17981                           
 17982                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 17983  09A5  0858               	movf	vfpfcnvrt@fmt,w
 17984  09A6  0086               	movwf	6
 17985  09A7  0187               	clrf	7
 17986  09A8  3001               	movlw	1
 17987  09A9  0781               	addwf	1,f
 17988  09AA  3141               	addfsr 1,1
 17989  09AB  1803               	skipnc
 17990  09AC  0A81               	incf	1,f
 17991                           
 17992                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17993  09AD  0859               	movf	vfpfcnvrt@ap,w
 17994  09AE  0086               	movwf	6
 17995  09AF  0187               	clrf	7
 17996  09B0  0801               	movf	1,w
 17997  09B1  0084               	movwf	4
 17998  09B2  0185               	clrf	5
 17999  09B3  3002               	movlw	2
 18000  09B4  0781               	addwf	1,f
 18001  09B5  0800               	movf	0,w
 18002  09B6  00DA               	movwf	??_vfpfcnvrt
 18003  09B7  085A               	movf	??_vfpfcnvrt,w
 18004  09B8  00DF               	movwf	vfpfcnvrt@c
 18005                           
 18006                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 18007  09B9  085F               	movf	vfpfcnvrt@c,w
 18008  09BA  00DA               	movwf	??_vfpfcnvrt
 18009  09BB  085A               	movf	??_vfpfcnvrt,w
 18010  09BC  00D2               	movwf	ctoa@c
 18011  09BD  0860               	movf	vfpfcnvrt@fp,w
 18012  09BE  3192  22E6         	fcall	_ctoa
 18013  09C0  0140               	movlb	0	; select bank0
 18014  09C1  0853               	movf	?_ctoa+1,w
 18015  09C2  00D9               	movwf	?_vfpfcnvrt+1
 18016  09C3  0852               	movf	?_ctoa,w
 18017  09C4  00D8               	movwf	?_vfpfcnvrt
 18018  09C5  0008               	return
 18019  09C6                     l7179:	
 18020                           
 18021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 18022  09C6  0858               	movf	vfpfcnvrt@fmt,w
 18023  09C7  0086               	movwf	6
 18024  09C8  0187               	clrf	7
 18025  09C9  3F40               	moviw [0]fsr1
 18026  09CA  00DA               	movwf	??_vfpfcnvrt
 18027  09CB  3F41               	moviw [1]fsr1
 18028  09CC  00DB               	movwf	??_vfpfcnvrt+1
 18029  09CD  085A               	movf	??_vfpfcnvrt,w
 18030  09CE  0084               	movwf	4
 18031  09CF  085B               	movf	??_vfpfcnvrt+1,w
 18032  09D0  0085               	movwf	5
 18033  09D1  0012               	moviw fsr0++
 18034  09D2  3A25               	xorlw	37
 18035  09D3  1D03               	btfss	3,2
 18036  09D4  29ED               	goto	l7189
 18037                           
 18038                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 18039  09D5  0858               	movf	vfpfcnvrt@fmt,w
 18040  09D6  0086               	movwf	6
 18041  09D7  0187               	clrf	7
 18042  09D8  3001               	movlw	1
 18043  09D9  0781               	addwf	1,f
 18044  09DA  3141               	addfsr 1,1
 18045  09DB  1803               	skipnc
 18046  09DC  0A81               	incf	1,f
 18047                           
 18048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 18049  09DD  3025               	movlw	37
 18050  09DE  00B9               	movwf	fputc@c
 18051  09DF  3000               	movlw	0
 18052  09E0  00BA               	movwf	fputc@c+1
 18053  09E1  0860               	movf	vfpfcnvrt@fp,w
 18054  09E2  00DA               	movwf	??_vfpfcnvrt
 18055  09E3  085A               	movf	??_vfpfcnvrt,w
 18056  09E4  00BB               	movwf	fputc@fp
 18057  09E5  3194  244E         	fcall	_fputc
 18058  09E7                     l7185:	
 18059                           
 18060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 18061  09E7  3001               	movlw	1
 18062  09E8  0140               	movlb	0	; select bank0
 18063  09E9  00D8               	movwf	?_vfpfcnvrt
 18064  09EA  3000               	movlw	0
 18065  09EB  00D9               	movwf	?_vfpfcnvrt+1
 18066  09EC  0008               	return
 18067  09ED                     l7189:	
 18068                           
 18069                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 18070  09ED  0858               	movf	vfpfcnvrt@fmt,w
 18071  09EE  0086               	movwf	6
 18072  09EF  0187               	clrf	7
 18073  09F0  3001               	movlw	1
 18074  09F1  0781               	addwf	1,f
 18075  09F2  3141               	addfsr 1,1
 18076  09F3  1803               	skipnc
 18077  09F4  0A81               	incf	1,f
 18078                           
 18079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 18080  09F5  01D8               	clrf	?_vfpfcnvrt
 18081  09F6  01D9               	clrf	?_vfpfcnvrt+1
 18082  09F7  0008               	return
 18083  09F8                     l7195:	
 18084                           
 18085                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 18086  09F8  0858               	movf	vfpfcnvrt@fmt,w
 18087  09F9  0086               	movwf	6
 18088  09FA  0187               	clrf	7
 18089  09FB  3F40               	moviw [0]fsr1
 18090  09FC  00DA               	movwf	??_vfpfcnvrt
 18091  09FD  3F41               	moviw [1]fsr1
 18092  09FE  00DB               	movwf	??_vfpfcnvrt+1
 18093  09FF  085A               	movf	??_vfpfcnvrt,w
 18094  0A00  0084               	movwf	4
 18095  0A01  085B               	movf	??_vfpfcnvrt+1,w
 18096  0A02  0085               	movwf	5
 18097  0A03  0800               	movf	0,w	;code access
 18098  0A04  00DC               	movwf	??_vfpfcnvrt+2
 18099  0A05  01DD               	clrf	??_vfpfcnvrt+3
 18100  0A06  085C               	movf	??_vfpfcnvrt+2,w
 18101  0A07  00B9               	movwf	fputc@c
 18102  0A08  085D               	movf	??_vfpfcnvrt+3,w
 18103  0A09  00BA               	movwf	fputc@c+1
 18104  0A0A  0860               	movf	vfpfcnvrt@fp,w
 18105  0A0B  00DE               	movwf	??_vfpfcnvrt+4
 18106  0A0C  085E               	movf	??_vfpfcnvrt+4,w
 18107  0A0D  00BB               	movwf	fputc@fp
 18108  0A0E  3194  244E  3189   	fcall	_fputc
 18109                           
 18110                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 18111  0A11  0140               	movlb	0	; select bank0
 18112  0A12  0858               	movf	vfpfcnvrt@fmt,w
 18113  0A13  0086               	movwf	6
 18114  0A14  0187               	clrf	7
 18115  0A15  3001               	movlw	1
 18116  0A16  0781               	addwf	1,f
 18117  0A17  3141               	addfsr 1,1
 18118  0A18  1803               	skipnc
 18119  0A19  0A81               	incf	1,f
 18120  0A1A  29E7               	goto	l7185
 18121  0A1B                     __end_of_vfpfcnvrt:	
 18122                           
 18123                           	psect	text49
 18124  12E6                     __ptext49:	
 18125 ;; *************** function _ctoa *****************
 18126 ;; Defined at:
 18127 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 18128 ;; Parameters:    Size  Location     Type
 18129 ;;  fp              1    wreg     PTR struct _IO_FILE
 18130 ;;		 -> NULL(0), 
 18131 ;;  c               1   50[BANK0 ] unsigned char 
 18132 ;; Auto vars:     Size  Location     Type
 18133 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 18134 ;;		 -> NULL(0), 
 18135 ;;  w               2   53[BANK0 ] int 
 18136 ;;  l               2    0        int 
 18137 ;; Return value:  Size  Location     Type
 18138 ;;                  2   50[BANK0 ] int 
 18139 ;; Registers used:
 18140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18141 ;; Tracked objects:
 18142 ;;		On entry : 0/0
 18143 ;;		On exit  : 0/0
 18144 ;;		Unchanged: 0/0
 18145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18147 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18148 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18149 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18150 ;;Total ram usage:        6 bytes
 18151 ;; Hardware stack levels used:    1
 18152 ;; Hardware stack levels required when called:   13
 18153 ;; This function calls:
 18154 ;;		_pad
 18155 ;; This function is called by:
 18156 ;;		_vfpfcnvrt
 18157 ;; This function uses a non-reentrant model
 18158 ;;
 18159                           
 18160                           
 18161                           ;psect for function _ctoa
 18162  12E6                     _ctoa:	
 18163                           
 18164                           ;incstack = 0
 18165 ;; hardware stack exceeded
 18166                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18167                           ;ctoa@fp stored from wreg
 18168  12E6  0140               	movlb	0	; select bank0
 18169  12E7  00D7               	movwf	ctoa@fp
 18170                           
 18171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18172  12E8  0142               	movlb	2	; select bank2
 18173  12E9  0832               	movf	_width^(0+256),w
 18174  12EA  0433               	iorwf	(_width+1)^(0+256),w
 18175  12EB  1D03               	btfss	3,2
 18176  12EC  2AF5               	goto	l7137
 18177  12ED  0833               	movf	(_width+1)^(0+256),w
 18178  12EE  0140               	movlb	0	; select bank0
 18179  12EF  00D6               	movwf	ctoa@w+1
 18180  12F0  0142               	movlb	2	; select bank2
 18181  12F1  0832               	movf	_width^(0+256),w
 18182  12F2  0140               	movlb	0	; select bank0
 18183  12F3  00D5               	movwf	ctoa@w
 18184  12F4  2AFE               	goto	l7139
 18185  12F5                     l7137:	
 18186  12F5  0832               	movf	_width^(0+256),w
 18187  12F6  3EFF               	addlw	255
 18188  12F7  0140               	movlb	0	; select bank0
 18189  12F8  00D5               	movwf	ctoa@w
 18190  12F9  30FF               	movlw	255
 18191  12FA  0142               	movlb	2	; select bank2
 18192  12FB  3D33               	addwfc	(_width+1)^(0+256),w
 18193  12FC  0140               	movlb	0	; select bank0
 18194  12FD  00D6               	movwf	ctoa@w+1
 18195  12FE                     l7139:	
 18196                           
 18197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18198  12FE  0852               	movf	ctoa@c,w
 18199  12FF  00D4               	movwf	??_ctoa
 18200  1300  0854               	movf	??_ctoa,w
 18201  1301  0143               	movlb	3	; select bank3
 18202  1302  00A0               	movwf	_dbuf^(0+384)
 18203                           
 18204                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18205  1303  01A1               	clrf	(_dbuf^(0+384)+1)
 18206                           
 18207                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18208  1304  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 18209  1305  0140               	movlb	0	; select bank0
 18210  1306  00D4               	movwf	??_ctoa
 18211  1307  0854               	movf	??_ctoa,w
 18212  1308  00C9               	movwf	pad@buf
 18213  1309  0856               	movf	ctoa@w+1,w
 18214  130A  00CB               	movwf	pad@p+1
 18215  130B  0855               	movf	ctoa@w,w
 18216  130C  00CA               	movwf	pad@p
 18217  130D  0857               	movf	ctoa@fp,w
 18218  130E  3195  2519         	fcall	_pad
 18219  1310  0140               	movlb	0	; select bank0
 18220  1311  084A               	movf	?_pad+1,w
 18221  1312  00D3               	movwf	?_ctoa+1
 18222  1313  0849               	movf	?_pad,w
 18223  1314  00D2               	movwf	?_ctoa
 18224  1315  0008               	return
 18225  1316                     __end_of_ctoa:	
 18226                           
 18227                           	psect	text50
 18228  1519                     __ptext50:	
 18229 ;; *************** function _pad *****************
 18230 ;; Defined at:
 18231 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 18232 ;; Parameters:    Size  Location     Type
 18233 ;;  fp              1    wreg     PTR struct _IO_FILE
 18234 ;;		 -> NULL(0), 
 18235 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 18236 ;;		 -> dbuf(32), 
 18237 ;;  p               2   42[BANK0 ] int 
 18238 ;; Auto vars:     Size  Location     Type
 18239 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
 18240 ;;		 -> NULL(0), 
 18241 ;;  w               2   47[BANK0 ] int 
 18242 ;;  i               2   45[BANK0 ] int 
 18243 ;; Return value:  Size  Location     Type
 18244 ;;                  2   41[BANK0 ] int 
 18245 ;; Registers used:
 18246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18247 ;; Tracked objects:
 18248 ;;		On entry : 0/0
 18249 ;;		On exit  : 0/0
 18250 ;;		Unchanged: 0/0
 18251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18252 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18253 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18254 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18255 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18256 ;;Total ram usage:        9 bytes
 18257 ;; Hardware stack levels used:    1
 18258 ;; Hardware stack levels required when called:   12
 18259 ;; This function calls:
 18260 ;;		_fputc
 18261 ;;		_fputs
 18262 ;;		_strlen
 18263 ;; This function is called by:
 18264 ;;		_ctoa
 18265 ;; This function uses a non-reentrant model
 18266 ;;
 18267                           
 18268                           
 18269                           ;psect for function _pad
 18270  1519                     _pad:	
 18271                           
 18272                           ;incstack = 0
 18273 ;; hardware stack exceeded
 18274                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18275                           ;pad@fp stored from wreg
 18276  1519  0140               	movlb	0	; select bank0
 18277  151A  00D1               	movwf	pad@fp
 18278                           
 18279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18280  151B  0142               	movlb	2	; select bank2
 18281  151C  1C36               	btfss	_flags^(0+256),0
 18282  151D  2D27               	goto	l7115
 18283                           
 18284                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18285  151E  0140               	movlb	0	; select bank0
 18286  151F  0851               	movf	pad@fp,w
 18287  1520  00CC               	movwf	??_pad
 18288  1521  084C               	movf	??_pad,w
 18289  1522  00C1               	movwf	fputs@fp
 18290  1523  0849               	movf	pad@buf,w
 18291  1524  3192  2214  3195   	fcall	_fputs
 18292  1527                     l7115:	
 18293                           
 18294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18295  1527  0140               	movlb	0	; select bank0
 18296  1528  1BCB               	btfsc	pad@p+1,7
 18297  1529  2D2F               	goto	l7119
 18298  152A  084B               	movf	pad@p+1,w
 18299  152B  00D0               	movwf	pad@w+1
 18300  152C  084A               	movf	pad@p,w
 18301  152D  00CF               	movwf	pad@w
 18302  152E  2D31               	goto	l1648
 18303  152F                     l7119:	
 18304  152F  01CF               	clrf	pad@w
 18305  1530  01D0               	clrf	pad@w+1
 18306  1531                     l1648:	
 18307                           
 18308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18309  1531  01CD               	clrf	pad@i
 18310  1532  01CE               	clrf	pad@i+1
 18311  1533                     l7125:	
 18312                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18313                           
 18314                           
 18315                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18316  1533  084E               	movf	pad@i+1,w
 18317  1534  3A80               	xorlw	128
 18318  1535  00CC               	movwf	??_pad
 18319  1536  0850               	movf	pad@w+1,w
 18320  1537  3A80               	xorlw	128
 18321  1538  024C               	subwf	??_pad,w
 18322  1539  1D03               	skipz
 18323  153A  2D3D               	goto	u6545
 18324  153B  084F               	movf	pad@w,w
 18325  153C  024D               	subwf	pad@i,w
 18326  153D                     u6545:	
 18327  153D  1803               	btfsc	3,0
 18328  153E  2D51               	goto	l1651
 18329                           
 18330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18331  153F  3020               	movlw	32
 18332  1540  0140               	movlb	0	; select bank0
 18333  1541  00B9               	movwf	fputc@c
 18334  1542  3000               	movlw	0
 18335  1543  00BA               	movwf	fputc@c+1
 18336  1544  0851               	movf	pad@fp,w
 18337  1545  00CC               	movwf	??_pad
 18338  1546  084C               	movf	??_pad,w
 18339  1547  00BB               	movwf	fputc@fp
 18340  1548  3194  244E  3195   	fcall	_fputc
 18341                           
 18342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18343  154B  3001               	movlw	1
 18344  154C  0140               	movlb	0	; select bank0
 18345  154D  07CD               	addwf	pad@i,f
 18346  154E  3000               	movlw	0
 18347  154F  3DCE               	addwfc	pad@i+1,f
 18348  1550  2D33               	goto	l7125
 18349  1551                     l1651:	
 18350                           
 18351                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18352  1551  0142               	movlb	2	; select bank2
 18353  1552  1836               	btfsc	_flags^(0+256),0
 18354  1553  2D5D               	goto	l7129
 18355                           
 18356                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18357  1554  0140               	movlb	0	; select bank0
 18358  1555  0851               	movf	pad@fp,w
 18359  1556  00CC               	movwf	??_pad
 18360  1557  084C               	movf	??_pad,w
 18361  1558  00C1               	movwf	fputs@fp
 18362  1559  0849               	movf	pad@buf,w
 18363  155A  3192  2214  3195   	fcall	_fputs
 18364  155D                     l7129:	
 18365                           
 18366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18367  155D  0140               	movlb	0	; select bank0
 18368  155E  0849               	movf	pad@buf,w
 18369  155F  00A0               	movwf	strlen@s
 18370  1560  3001               	movlw	1
 18371  1561  00A1               	movwf	strlen@s+1
 18372  1562  3190  2047         	fcall	_strlen
 18373  1564  0140               	movlb	0	; select bank0
 18374  1565  084F               	movf	pad@w,w
 18375  1566  0720               	addwf	?_strlen,w
 18376  1567  00C9               	movwf	?_pad
 18377  1568  0850               	movf	pad@w+1,w
 18378  1569  3D21               	addwfc	?_strlen+1,w
 18379  156A  00CA               	movwf	?_pad+1
 18380  156B  0008               	return
 18381  156C                     __end_of_pad:	
 18382                           
 18383                           	psect	text51
 18384  1047                     __ptext51:	
 18385 ;; *************** function _strlen *****************
 18386 ;; Defined at:
 18387 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 18388 ;; Parameters:    Size  Location     Type
 18389 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 18390 ;;		 -> dbuf(32), STR_14(9), 
 18391 ;; Auto vars:     Size  Location     Type
 18392 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 18393 ;;		 -> dbuf(32), STR_14(9), 
 18394 ;; Return value:  Size  Location     Type
 18395 ;;                  2    0[BANK0 ] unsigned int 
 18396 ;; Registers used:
 18397 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18398 ;; Tracked objects:
 18399 ;;		On entry : 0/0
 18400 ;;		On exit  : 0/0
 18401 ;;		Unchanged: 0/0
 18402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18404 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18405 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18406 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18407 ;;Total ram usage:        5 bytes
 18408 ;; Hardware stack levels used:    1
 18409 ;; Hardware stack levels required when called:    4
 18410 ;; This function calls:
 18411 ;;		Nothing
 18412 ;; This function is called by:
 18413 ;;		_pad
 18414 ;;		_TM1650_scrollPrint
 18415 ;; This function uses a non-reentrant model
 18416 ;;
 18417                           
 18418                           
 18419                           ;psect for function _strlen
 18420  1047                     _strlen:	
 18421                           
 18422                           ;incstack = 0
 18423                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 18424  1047  0140               	movlb	0	; select bank0
 18425  1048  0821               	movf	strlen@s+1,w
 18426  1049  00A4               	movwf	strlen@a+1
 18427  104A  0820               	movf	strlen@s,w
 18428  104B  00A3               	movwf	strlen@a
 18429  104C                     l4719:	
 18430  104C  0820               	movf	strlen@s,w
 18431  104D  0084               	movwf	4
 18432  104E  0821               	movf	strlen@s+1,w
 18433  104F  0085               	movwf	5
 18434  1050  0012               	moviw fsr0++
 18435  1051  1903               	btfsc	3,2
 18436  1052  2858               	goto	l4721
 18437  1053  3001               	movlw	1
 18438  1054  07A0               	addwf	strlen@s,f
 18439  1055  3000               	movlw	0
 18440  1056  3DA1               	addwfc	strlen@s+1,f
 18441  1057  284C               	goto	l4719
 18442  1058                     l4721:	
 18443  1058  0823               	movf	strlen@a,w
 18444  1059  0220               	subwf	strlen@s,w
 18445  105A  00A0               	movwf	?_strlen
 18446  105B  0824               	movf	strlen@a+1,w
 18447  105C  3B21               	subwfb	strlen@s+1,w
 18448  105D  00A1               	movwf	?_strlen+1
 18449  105E  0008               	return
 18450  105F                     __end_of_strlen:	
 18451                           
 18452                           	psect	text52
 18453  1214                     __ptext52:	
 18454 ;; *************** function _fputs *****************
 18455 ;; Defined at:
 18456 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 18457 ;; Parameters:    Size  Location     Type
 18458 ;;  s               1    wreg     PTR const unsigned char 
 18459 ;;		 -> dbuf(32), 
 18460 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
 18461 ;;		 -> NULL(0), 
 18462 ;; Auto vars:     Size  Location     Type
 18463 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 18464 ;;		 -> dbuf(32), 
 18465 ;;  i               2   38[BANK0 ] int 
 18466 ;;  c               1   37[BANK0 ] unsigned char 
 18467 ;; Return value:  Size  Location     Type
 18468 ;;                  2   33[BANK0 ] int 
 18469 ;; Registers used:
 18470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18471 ;; Tracked objects:
 18472 ;;		On entry : 0/0
 18473 ;;		On exit  : 0/0
 18474 ;;		Unchanged: 0/0
 18475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18476 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18477 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18478 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18479 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18480 ;;Total ram usage:        8 bytes
 18481 ;; Hardware stack levels used:    1
 18482 ;; Hardware stack levels required when called:   11
 18483 ;; This function calls:
 18484 ;;		_fputc
 18485 ;; This function is called by:
 18486 ;;		_pad
 18487 ;; This function uses a non-reentrant model
 18488 ;;
 18489                           
 18490                           
 18491                           ;psect for function _fputs
 18492  1214                     _fputs:	
 18493                           
 18494                           ;incstack = 0
 18495 ;; hardware stack exceeded
 18496                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18497                           ;fputs@s stored from wreg
 18498  1214  0140               	movlb	0	; select bank0
 18499  1215  00C8               	movwf	fputs@s
 18500  1216  01C6               	clrf	fputs@i
 18501  1217  01C7               	clrf	fputs@i+1
 18502  1218                     l7109:	
 18503  1218  0846               	movf	fputs@i,w
 18504  1219  0748               	addwf	fputs@s,w
 18505  121A  00C2               	movwf	??_fputs
 18506  121B  0842               	movf	??_fputs,w
 18507  121C  0086               	movwf	6
 18508  121D  3001               	movlw	1	; select bank2/3
 18509  121E  0087               	movwf	7
 18510  121F  0801               	movf	1,w
 18511  1220  00C3               	movwf	??_fputs+1
 18512  1221  0843               	movf	??_fputs+1,w
 18513  1222  00C5               	movwf	fputs@c
 18514  1223  0845               	movf	fputs@c,w
 18515  1224  1903               	btfsc	3,2
 18516  1225  0008               	return
 18517  1226  0845               	movf	fputs@c,w
 18518  1227  00C2               	movwf	??_fputs
 18519  1228  01C3               	clrf	??_fputs+1
 18520  1229  0842               	movf	??_fputs,w
 18521  122A  00B9               	movwf	fputc@c
 18522  122B  0843               	movf	??_fputs+1,w
 18523  122C  00BA               	movwf	fputc@c+1
 18524  122D  0841               	movf	fputs@fp,w
 18525  122E  00C4               	movwf	??_fputs+2
 18526  122F  0844               	movf	??_fputs+2,w
 18527  1230  00BB               	movwf	fputc@fp
 18528  1231  3194  244E  3192   	fcall	_fputc
 18529  1234  3001               	movlw	1
 18530  1235  0140               	movlb	0	; select bank0
 18531  1236  07C6               	addwf	fputs@i,f
 18532  1237  3000               	movlw	0
 18533  1238  3DC7               	addwfc	fputs@i+1,f
 18534  1239  2A18               	goto	l7109
 18535  123A                     __end_of_fputs:	
 18536                           
 18537                           	psect	text53
 18538  144E                     __ptext53:	
 18539 ;; *************** function _fputc *****************
 18540 ;; Defined at:
 18541 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 18542 ;; Parameters:    Size  Location     Type
 18543 ;;  c               2   25[BANK0 ] int 
 18544 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 18545 ;;		 -> NULL(0), 
 18546 ;; Auto vars:     Size  Location     Type
 18547 ;;		None
 18548 ;; Return value:  Size  Location     Type
 18549 ;;                  2   25[BANK0 ] int 
 18550 ;; Registers used:
 18551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18552 ;; Tracked objects:
 18553 ;;		On entry : 0/0
 18554 ;;		On exit  : 0/0
 18555 ;;		Unchanged: 0/0
 18556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18557 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18559 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18560 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18561 ;;Total ram usage:        8 bytes
 18562 ;; Hardware stack levels used:    1
 18563 ;; Hardware stack levels required when called:   10
 18564 ;; This function calls:
 18565 ;;		_putch
 18566 ;; This function is called by:
 18567 ;;		_pad
 18568 ;;		_vfpfcnvrt
 18569 ;;		_fputs
 18570 ;; This function uses a non-reentrant model
 18571 ;;
 18572                           
 18573                           
 18574                           ;psect for function _fputc
 18575  144E                     _fputc:	
 18576                           
 18577                           ;incstack = 0
 18578                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18579  144E  0140               	movlb	0	; select bank0
 18580  144F  083B               	movf	fputc@fp,w
 18581  1450  1D03               	btfss	3,2
 18582  1451  083B               	movf	fputc@fp,w
 18583  1452  1D03               	btfss	3,2
 18584  1453  2C58               	goto	l7095
 18585  1454  0839               	movf	fputc@c,w
 18586  1455  3191  21A6         	fcall	_putch
 18587  1457  0008               	return
 18588  1458                     l7095:	
 18589  1458  083B               	movf	fputc@fp,w
 18590  1459  3E03               	addlw	3
 18591  145A  0086               	movwf	6
 18592  145B  0187               	clrf	7
 18593  145C  0016               	moviw fsr1++
 18594  145D  0401               	iorwf	1,w
 18595  145E  1903               	btfsc	3,2
 18596  145F  2C7B               	goto	l7099
 18597  1460  083B               	movf	fputc@fp,w
 18598  1461  3E03               	addlw	3
 18599  1462  0086               	movwf	6
 18600  1463  0187               	clrf	7
 18601  1464  3F40               	moviw [0]fsr1
 18602  1465  00BC               	movwf	??_fputc
 18603  1466  3F41               	moviw [1]fsr1
 18604  1467  00BD               	movwf	??_fputc+1
 18605  1468  0A3B               	incf	fputc@fp,w
 18606  1469  0086               	movwf	6
 18607  146A  0187               	clrf	7
 18608  146B  3F40               	moviw [0]fsr1
 18609  146C  00BE               	movwf	??_fputc+2
 18610  146D  3F41               	moviw [1]fsr1
 18611  146E  00BF               	movwf	??_fputc+3
 18612  146F  083F               	movf	??_fputc+3,w
 18613  1470  3A80               	xorlw	128
 18614  1471  00C0               	movwf	??_fputc+4
 18615  1472  083D               	movf	??_fputc+1,w
 18616  1473  3A80               	xorlw	128
 18617  1474  0240               	subwf	??_fputc+4,w
 18618  1475  1D03               	skipz
 18619  1476  2C79               	goto	u6505
 18620  1477  083C               	movf	??_fputc,w
 18621  1478  023E               	subwf	??_fputc+2,w
 18622  1479                     u6505:	
 18623  1479  1803               	skipnc
 18624  147A  0008               	return
 18625  147B                     l7099:	
 18626  147B  0140               	movlb	0	; select bank0
 18627  147C  0A3B               	incf	fputc@fp,w
 18628  147D  0086               	movwf	6
 18629  147E  0187               	clrf	7
 18630  147F  3001               	movlw	1
 18631  1480  0781               	addwf	1,f
 18632  1481  3141               	addfsr 1,1
 18633  1482  1803               	skipnc
 18634  1483  0A81               	incf	1,f
 18635  1484  0008               	return
 18636  1485                     __end_of_fputc:	
 18637                           
 18638                           	psect	text54
 18639  11A6                     __ptext54:	
 18640 ;; *************** function _putch *****************
 18641 ;; Defined at:
 18642 ;;		line 120 in file "tm1650.c"
 18643 ;; Parameters:    Size  Location     Type
 18644 ;;  n               1    wreg     unsigned char 
 18645 ;; Auto vars:     Size  Location     Type
 18646 ;;  n               1   24[BANK0 ] unsigned char 
 18647 ;; Return value:  Size  Location     Type
 18648 ;;                  1    wreg      void 
 18649 ;; Registers used:
 18650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18651 ;; Tracked objects:
 18652 ;;		On entry : 0/0
 18653 ;;		On exit  : 0/0
 18654 ;;		Unchanged: 0/0
 18655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18658 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18659 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18660 ;;Total ram usage:        2 bytes
 18661 ;; Hardware stack levels used:    1
 18662 ;; Hardware stack levels required when called:    9
 18663 ;; This function calls:
 18664 ;;		_TM1650_setDigit
 18665 ;; This function is called by:
 18666 ;;		_fputc
 18667 ;; This function uses a non-reentrant model
 18668 ;;
 18669                           
 18670                           
 18671                           ;psect for function _putch
 18672  11A6                     _putch:	
 18673                           
 18674                           ;incstack = 0
 18675                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18676                           ;putch@n stored from wreg
 18677  11A6  0140               	movlb	0	; select bank0
 18678  11A7  00B8               	movwf	putch@n
 18679                           
 18680                           ;tm1650.c: 122:     if(position > 3 || n == '\r' || n == '\0')
 18681  11A8  3004               	movlw	4
 18682  11A9  0141               	movlb	1	; select bank1
 18683  11AA  0230               	subwf	_position^(0+128),w
 18684  11AB  1803               	skipnc
 18685  11AC  29B4               	goto	l7081
 18686  11AD  300D               	movlw	13
 18687  11AE  0140               	movlb	0	; select bank0
 18688  11AF  0638               	xorwf	putch@n,w
 18689  11B0  1D03               	btfss	3,2
 18690  11B1  0838               	movf	putch@n,w
 18691  11B2  1D03               	btfss	3,2
 18692  11B3  29B6               	goto	l7083
 18693  11B4                     l7081:	
 18694                           
 18695                           ;tm1650.c: 123:         position = 0;
 18696  11B4  0141               	movlb	1	; select bank1
 18697  11B5  01B0               	clrf	_position^(0+128)
 18698  11B6                     l7083:	
 18699                           
 18700                           ;tm1650.c: 125:     if(n != '\r'){
 18701  11B6  300D               	movlw	13
 18702  11B7  0140               	movlb	0	; select bank0
 18703  11B8  0638               	xorwf	putch@n,w
 18704  11B9  1903               	btfsc	3,2
 18705  11BA  0008               	return
 18706                           
 18707                           ;tm1650.c: 126:         TM1650_setDigit(position, n);
 18708  11BB  0838               	movf	putch@n,w
 18709  11BC  00B7               	movwf	??_putch
 18710  11BD  0837               	movf	??_putch,w
 18711  11BE  00B4               	movwf	TM1650_setDigit@data
 18712  11BF  0141               	movlb	1	; select bank1
 18713  11C0  0830               	movf	_position^(0+128),w
 18714  11C1  319F  2775         	fcall	_TM1650_setDigit
 18715                           
 18716                           ;tm1650.c: 127:         position++;
 18717  11C3  3001               	movlw	1
 18718  11C4  0140               	movlb	0	; select bank0
 18719  11C5  00B7               	movwf	??_putch
 18720  11C6  0837               	movf	??_putch,w
 18721  11C7  0141               	movlb	1	; select bank1
 18722  11C8  07B0               	addwf	_position^(0+128),f
 18723  11C9  0008               	return
 18724  11CA                     __end_of_putch:	
 18725                           
 18726                           	psect	text55
 18727  1F75                     __ptext55:	
 18728 ;; *************** function _TM1650_setDigit *****************
 18729 ;; Defined at:
 18730 ;;		line 95 in file "tm1650.c"
 18731 ;; Parameters:    Size  Location     Type
 18732 ;;  digit           1    wreg     unsigned char 
 18733 ;;  data            1   20[BANK0 ] unsigned char 
 18734 ;; Auto vars:     Size  Location     Type
 18735 ;;  digit           1   22[BANK0 ] unsigned char 
 18736 ;; Return value:  Size  Location     Type
 18737 ;;                  1    wreg      void 
 18738 ;; Registers used:
 18739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18740 ;; Tracked objects:
 18741 ;;		On entry : 0/0
 18742 ;;		On exit  : 0/0
 18743 ;;		Unchanged: 0/0
 18744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18745 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18748 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18749 ;;Total ram usage:        3 bytes
 18750 ;; Hardware stack levels used:    1
 18751 ;; Hardware stack levels required when called:    8
 18752 ;; This function calls:
 18753 ;;		_writeData
 18754 ;; This function is called by:
 18755 ;;		_putch
 18756 ;; This function uses a non-reentrant model
 18757 ;;
 18758                           
 18759                           
 18760                           ;psect for function _TM1650_setDigit
 18761  1F75                     _TM1650_setDigit:	
 18762                           
 18763                           ;incstack = 0
 18764                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18765                           ;TM1650_setDigit@digit stored from wreg
 18766  1F75  0140               	movlb	0	; select bank0
 18767  1F76  00B6               	movwf	TM1650_setDigit@digit
 18768                           
 18769                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 18770  1F77  0834               	movf	TM1650_setDigit@data,w
 18771  1F78  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 18772  1F79  0084               	movwf	4
 18773  1F7A  3097               	movlw	high ((_charTable+65504)| (0+32768))
 18774  1F7B  1803               	skipnc
 18775  1F7C  3E01               	addlw	1
 18776  1F7D  0085               	movwf	5
 18777  1F7E  0800               	movf	0,w	;code access
 18778  1F7F  00B5               	movwf	??_TM1650_setDigit
 18779  1F80  0835               	movf	??_TM1650_setDigit,w
 18780  1F81  00AE               	movwf	writeData@data
 18781  1F82  0836               	movf	TM1650_setDigit@digit,w
 18782  1F83  3E34               	addlw	52
 18783  1F84  3190  20AE         	fcall	_writeData
 18784  1F86  0008               	return
 18785  1F87                     __end_of_TM1650_setDigit:	
 18786                           
 18787                           	psect	text56
 18788  11EE                     __ptext56:	
 18789 ;; *************** function _getManualColor *****************
 18790 ;; Defined at:
 18791 ;;		line 268 in file "led.c"
 18792 ;; Parameters:    Size  Location     Type
 18793 ;;  input           1    wreg     enum E10883
 18794 ;; Auto vars:     Size  Location     Type
 18795 ;;  input           1    2[BANK0 ] enum E10883
 18796 ;; Return value:  Size  Location     Type
 18797 ;;                  1    wreg      unsigned char 
 18798 ;; Registers used:
 18799 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18800 ;; Tracked objects:
 18801 ;;		On entry : 0/0
 18802 ;;		On exit  : 0/0
 18803 ;;		Unchanged: 0/0
 18804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18807 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18808 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18809 ;;Total ram usage:        3 bytes
 18810 ;; Hardware stack levels used:    1
 18811 ;; Hardware stack levels required when called:    4
 18812 ;; This function calls:
 18813 ;;		Nothing
 18814 ;; This function is called by:
 18815 ;;		_CONTROLLER_task
 18816 ;; This function uses a non-reentrant model
 18817 ;;
 18818                           
 18819                           
 18820                           ;psect for function _getManualColor
 18821  11EE                     _getManualColor:	
 18822                           
 18823                           ;incstack = 0
 18824                           ; Regs used in _getManualColor: [wreg-fsr0h+status,2+status,0]
 18825                           ;getManualColor@input stored from wreg
 18826  11EE  0140               	movlb	0	; select bank0
 18827  11EF  00A2               	movwf	getManualColor@input
 18828                           
 18829                           ;led.c: 270:        switch(input){
 18830  11F0  29FD               	goto	l6021
 18831  11F1                     l5995:	
 18832                           
 18833                           ;led.c: 273:             return manual.red;
 18834  11F1  0141               	movlb	1	; select bank1
 18835  11F2  0826               	movf	(_manual^(0+128)+1),w
 18836  11F3  0008               	return
 18837  11F4                     l6001:	
 18838                           
 18839                           ;led.c: 277:             return manual.green;
 18840  11F4  0141               	movlb	1	; select bank1
 18841  11F5  0827               	movf	(_manual^(0+128)+2),w
 18842  11F6  0008               	return
 18843  11F7                     l6007:	
 18844                           
 18845                           ;led.c: 281:             return manual.blue;
 18846  11F7  0141               	movlb	1	; select bank1
 18847  11F8  0828               	movf	(_manual^(0+128)+3),w
 18848  11F9  0008               	return
 18849  11FA                     l6013:	
 18850                           
 18851                           ;led.c: 285:             return manual.white;
 18852  11FA  0141               	movlb	1	; select bank1
 18853  11FB  0825               	movf	_manual^(0+128),w
 18854  11FC  0008               	return
 18855  11FD                     l6021:	
 18856  11FD  0822               	movf	getManualColor@input,w
 18857  11FE  00A0               	movwf	??_getManualColor
 18858  11FF  01A1               	clrf	??_getManualColor+1
 18859                           
 18860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18861                           ; Switch size 1, requested type "simple"
 18862                           ; Number of cases is 1, Range of values is 0 to 0
 18863                           ; switch strategies available:
 18864                           ; Name         Instructions Cycles
 18865                           ; simple_byte            4     3 (average)
 18866                           ; direct_byte            8     6 (fixed)
 18867                           ; jumptable            260     6 (fixed)
 18868                           ;	Chosen strategy is simple_byte
 18869  1200  0821               	movf	??_getManualColor+1,w
 18870  1201  3A00               	xorlw	0	; case 0
 18871  1202  1903               	skipnz
 18872  1203  2A05               	goto	l8971
 18873  1204  2A13               	goto	l1471
 18874  1205                     l8971:	
 18875                           
 18876                           ; Switch size 1, requested type "simple"
 18877                           ; Number of cases is 4, Range of values is 0 to 3
 18878                           ; switch strategies available:
 18879                           ; Name         Instructions Cycles
 18880                           ; simple_byte           13     7 (average)
 18881                           ; direct_byte           14     6 (fixed)
 18882                           ; jumptable            260     6 (fixed)
 18883                           ;	Chosen strategy is simple_byte
 18884  1205  0820               	movf	??_getManualColor,w
 18885  1206  3A00               	xorlw	0	; case 0
 18886  1207  1903               	skipnz
 18887  1208  29F1               	goto	l5995
 18888  1209  3A01               	xorlw	1	; case 1
 18889  120A  1903               	skipnz
 18890  120B  29F4               	goto	l6001
 18891  120C  3A03               	xorlw	3	; case 2
 18892  120D  1903               	skipnz
 18893  120E  29F7               	goto	l6007
 18894  120F  3A01               	xorlw	1	; case 3
 18895  1210  1903               	skipnz
 18896  1211  29FA               	goto	l6013
 18897  1212  2A13               	goto	l1471
 18898  1213                     l1471:	
 18899  1213  0008               	return
 18900  1214                     __end_of_getManualColor:	
 18901                           
 18902                           	psect	text57
 18903  1FD6                     __ptext57:	
 18904 ;; *************** function _TM1650_enable *****************
 18905 ;; Defined at:
 18906 ;;		line 41 in file "tm1650.c"
 18907 ;; Parameters:    Size  Location     Type
 18908 ;;  enable          1    wreg     _Bool 
 18909 ;; Auto vars:     Size  Location     Type
 18910 ;;  enable          1   20[BANK0 ] _Bool 
 18911 ;; Return value:  Size  Location     Type
 18912 ;;                  1    wreg      void 
 18913 ;; Registers used:
 18914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18915 ;; Tracked objects:
 18916 ;;		On entry : 0/0
 18917 ;;		On exit  : 0/0
 18918 ;;		Unchanged: 0/0
 18919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18923 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18924 ;;Total ram usage:        1 bytes
 18925 ;; Hardware stack levels used:    1
 18926 ;; Hardware stack levels required when called:    8
 18927 ;; This function calls:
 18928 ;;		_writeData
 18929 ;; This function is called by:
 18930 ;;		_CONTROLLER_task
 18931 ;;		_TM1650_init
 18932 ;; This function uses a non-reentrant model
 18933 ;;
 18934                           
 18935                           
 18936                           ;psect for function _TM1650_enable
 18937  1FD6                     _TM1650_enable:	
 18938                           
 18939                           ;incstack = 0
 18940                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18941                           ;TM1650_enable@enable stored from wreg
 18942  1FD6  0140               	movlb	0	; select bank0
 18943  1FD7  00B4               	movwf	TM1650_enable@enable
 18944                           
 18945                           ;tm1650.c: 42:     if(enable){
 18946  1FD8  0834               	movf	TM1650_enable@enable,w
 18947  1FD9  1903               	btfsc	3,2
 18948  1FDA  2FE4               	goto	l8205
 18949                           
 18950                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 18951  1FDB  01AE               	clrf	writeData@data
 18952  1FDC  0AAE               	incf	writeData@data,f
 18953  1FDD  3024               	movlw	36
 18954  1FDE  3190  20AE         	fcall	_writeData
 18955                           
 18956                           ;tm1650.c: 44:         tm1650_status = 1;
 18957  1FE0  0142               	movlb	2	; select bank2
 18958  1FE1  01CC               	clrf	_tm1650_status^(0+256)
 18959  1FE2  0ACC               	incf	_tm1650_status^(0+256),f
 18960                           
 18961                           ;tm1650.c: 45:     } else {
 18962  1FE3  0008               	return
 18963  1FE4                     l8205:	
 18964                           
 18965                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 18966  1FE4  01AE               	clrf	writeData@data
 18967  1FE5  3024               	movlw	36
 18968  1FE6  3190  20AE         	fcall	_writeData
 18969                           
 18970                           ;tm1650.c: 47:         tm1650_status = 0;
 18971  1FE8  0142               	movlb	2	; select bank2
 18972  1FE9  01CC               	clrf	_tm1650_status^(0+256)
 18973  1FEA  0008               	return
 18974  1FEB                     __end_of_TM1650_enable:	
 18975                           
 18976                           	psect	text58
 18977  0B7D                     __ptext58:	
 18978 ;; *************** function _CONTROL_MANUAL *****************
 18979 ;; Defined at:
 18980 ;;		line 253 in file "controller.c"
 18981 ;; Parameters:    Size  Location     Type
 18982 ;;  input           1    wreg     enum E10878
 18983 ;; Auto vars:     Size  Location     Type
 18984 ;;  input           1    5[BANK0 ] enum E10878
 18985 ;; Return value:  Size  Location     Type
 18986 ;;                  1    wreg      _Bool 
 18987 ;; Registers used:
 18988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18989 ;; Tracked objects:
 18990 ;;		On entry : 0/0
 18991 ;;		On exit  : 0/0
 18992 ;;		Unchanged: 0/0
 18993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18996 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18997 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18998 ;;Total ram usage:        3 bytes
 18999 ;; Hardware stack levels used:    1
 19000 ;; Hardware stack levels required when called:    5
 19001 ;; This function calls:
 19002 ;;		_BUTTONS_isHeld
 19003 ;;		_CLOCK_getTime
 19004 ;;		_colorDec
 19005 ;;		_colorInc
 19006 ;; This function is called by:
 19007 ;;		_CONTROLLER_task
 19008 ;; This function uses a non-reentrant model
 19009 ;;
 19010                           
 19011                           
 19012                           ;psect for function _CONTROL_MANUAL
 19013  0B7D                     _CONTROL_MANUAL:	
 19014                           
 19015                           ;incstack = 0
 19016                           ; Regs used in _CONTROL_MANUAL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19017                           ;CONTROL_MANUAL@input stored from wreg
 19018  0B7D  0140               	movlb	0	; select bank0
 19019  0B7E  00A5               	movwf	CONTROL_MANUAL@input
 19020                           
 19021                           ;controller.c: 255:      if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incIn
      +                          terval)){
 19022  0B7F  0141               	movlb	1	; select bank1
 19023  0B80  083D               	movf	_up^(0+128),w
 19024  0B81  319F  2744  318B   	fcall	_BUTTONS_isHeld
 19025  0B84  3A00               	xorlw	0
 19026  0B85  1903               	skipnz
 19027  0B86  2BE2               	goto	l8121
 19028  0B87  319E  269D  318B   	fcall	_CLOCK_getTime
 19029  0B8A  0141               	movlb	1	; select bank1
 19030  0B8B  082B               	movf	_lastIncTime^(0+128),w
 19031  0B8C  0140               	movlb	0	; select bank0
 19032  0B8D  0220               	subwf	?_CLOCK_getTime,w
 19033  0B8E  00A3               	movwf	??_CONTROL_MANUAL
 19034  0B8F  0141               	movlb	1	; select bank1
 19035  0B90  082C               	movf	(_lastIncTime+1)^(0+128),w
 19036  0B91  0140               	movlb	0	; select bank0
 19037  0B92  3B21               	subwfb	?_CLOCK_getTime+1,w
 19038  0B93  00A4               	movwf	??_CONTROL_MANUAL+1
 19039  0B94  0824               	movf	??_CONTROL_MANUAL+1,w
 19040  0B95  027D               	subwf	_incInterval+1,w
 19041  0B96  1D03               	skipz
 19042  0B97  2B9A               	goto	u8055
 19043  0B98  0823               	movf	??_CONTROL_MANUAL,w
 19044  0B99  027C               	subwf	_incInterval,w
 19045  0B9A                     u8055:	
 19046  0B9A  1803               	skipnc
 19047  0B9B  2BE2               	goto	l8121
 19048                           
 19049                           ;controller.c: 256:         colorInc(input);
 19050  0B9C  0825               	movf	CONTROL_MANUAL@input,w
 19051  0B9D  3194  2485  318B   	fcall	_colorInc
 19052  0BA0  2BBA               	goto	L20
 19053  0BA1                     l8123:	
 19054                           ;controller.c: 258:         if(incInterval > 20){
 19055                           
 19056                           ;controller.c: 257:         lastIncTime = CLOCK_getTime();
 19057                           
 19058  0BA1  319E  269D  318B   	fcall	_CLOCK_getTime
 19059  0BA4  0141               	movlb	1	; select bank1
 19060  0BA5  082B               	movf	_lastIncTime^(0+128),w
 19061  0BA6  0140               	movlb	0	; select bank0
 19062  0BA7  0220               	subwf	?_CLOCK_getTime,w
 19063  0BA8  00A3               	movwf	??_CONTROL_MANUAL
 19064  0BA9  0141               	movlb	1	; select bank1
 19065  0BAA  082C               	movf	(_lastIncTime+1)^(0+128),w
 19066  0BAB  0140               	movlb	0	; select bank0
 19067  0BAC  3B21               	subwfb	?_CLOCK_getTime+1,w
 19068  0BAD  00A4               	movwf	??_CONTROL_MANUAL+1
 19069  0BAE  0824               	movf	??_CONTROL_MANUAL+1,w
 19070  0BAF  027D               	subwf	_incInterval+1,w
 19071  0BB0  1D03               	skipz
 19072  0BB1  2BB4               	goto	u8085
 19073  0BB2  0823               	movf	??_CONTROL_MANUAL,w
 19074  0BB3  027C               	subwf	_incInterval,w
 19075  0BB4                     u8085:	
 19076  0BB4  1803               	skipnc
 19077  0BB5  2BEA               	goto	l8137
 19078                           
 19079                           ;controller.c: 263:         colorDec(input);
 19080  0BB6  0825               	movf	CONTROL_MANUAL@input,w
 19081  0BB7  3194  2418  318B   	fcall	_colorDec
 19082  0BBA                     L20:	
 19083                           
 19084                           ;controller.c: 264:         lastIncTime = CLOCK_getTime();
 19085  0BBA  319E  269D  318B   	fcall	_CLOCK_getTime
 19086  0BBD  0140               	movlb	0	; select bank0
 19087  0BBE  0821               	movf	?_CLOCK_getTime+1,w
 19088  0BBF  0141               	movlb	1	; select bank1
 19089  0BC0  00AC               	movwf	(_lastIncTime+1)^(0+128)
 19090  0BC1  0140               	movlb	0	; select bank0
 19091  0BC2  0820               	movf	?_CLOCK_getTime,w
 19092  0BC3  0141               	movlb	1	; select bank1
 19093  0BC4  00AB               	movwf	_lastIncTime^(0+128)
 19094                           
 19095                           ;controller.c: 265:         if(incInterval > 20){
 19096  0BC5  087D               	movf	_incInterval+1,w
 19097  0BC6  3A80               	xorlw	128
 19098  0BC7  0140               	movlb	0	; select bank0
 19099  0BC8  00A3               	movwf	??_CONTROL_MANUAL
 19100  0BC9  3080               	movlw	128
 19101  0BCA  0223               	subwf	??_CONTROL_MANUAL,w
 19102  0BCB  1D03               	skipz
 19103  0BCC  2BCF               	goto	u8095
 19104  0BCD  3015               	movlw	21
 19105  0BCE  027C               	subwf	_incInterval,w
 19106  0BCF                     u8095:	
 19107  0BCF  1C03               	skipc
 19108  0BD0  2BE0               	goto	l1128
 19109                           
 19110                           ;controller.c: 259:             incInterval-=1;
 19111  0BD1  30FF               	movlw	255
 19112  0BD2  07FC               	addwf	_incInterval,f
 19113  0BD3  30FF               	movlw	255
 19114  0BD4  3DFD               	addwfc	_incInterval+1,f
 19115  0BD5  2BE0               	goto	l1128
 19116  0BD6                     l8139:	
 19117                           
 19118                           ;controller.c: 270:         colorInc(input);
 19119  0BD6  0140               	movlb	0	; select bank0
 19120  0BD7  0825               	movf	CONTROL_MANUAL@input,w
 19121  0BD8  3194  2485  318B   	fcall	_colorInc
 19122  0BDB  2BE0               	goto	l1128
 19123  0BDC                     l8149:	
 19124                           
 19125                           ;controller.c: 274:         colorDec(input);
 19126  0BDC  0140               	movlb	0	; select bank0
 19127  0BDD  0825               	movf	CONTROL_MANUAL@input,w
 19128  0BDE  3194  2418         	fcall	_colorDec
 19129  0BE0                     l1128:	
 19130                           ;controller.c: 260:         }
 19131                           
 19132                           
 19133                           ;controller.c: 261:         return 1;
 19134  0BE0  3001               	movlw	1
 19135  0BE1  0008               	return
 19136  0BE2                     l8121:	
 19137  0BE2  0141               	movlb	1	; select bank1
 19138  0BE3  083C               	movf	_down^(0+128),w
 19139  0BE4  319F  2744  318B   	fcall	_BUTTONS_isHeld
 19140  0BE7  3A00               	xorlw	0
 19141  0BE8  1D03               	btfss	3,2
 19142  0BE9  2BA1               	goto	l8123
 19143  0BEA                     l8137:	
 19144  0BEA  0141               	movlb	1	; select bank1
 19145  0BEB  0836               	movf	_upState^(0+128),w
 19146  0BEC  1D03               	btfss	3,2
 19147  0BED  2BD6               	goto	l8139
 19148  0BEE  0835               	movf	_downState^(0+128),w
 19149  0BEF  1D03               	btfss	3,2
 19150  0BF0  2BDC               	goto	l8149
 19151  0BF1  0833               	movf	_enterState^(0+128),w
 19152  0BF2  1D03               	btfss	3,2
 19153  0BF3  2C04               	goto	l8169
 19154  0BF4  2C1B               	goto	l8177
 19155  0BF5                     l1140:	
 19156                           ;controller.c: 278:             case CMODE_RED:
 19157                           
 19158                           
 19159                           ;controller.c: 279:                 colorModeSelected = CMODE_GREEN;
 19160  0BF5  0141               	movlb	1	; select bank1
 19161  0BF6  01B1               	clrf	_colorModeSelected^(0+128)
 19162  0BF7  0AB1               	incf	_colorModeSelected^(0+128),f
 19163                           
 19164                           ;controller.c: 280:                 break;
 19165  0BF8  2BE0               	goto	l1128
 19166  0BF9                     l8161:	
 19167                           
 19168                           ;controller.c: 283:                 colorModeSelected = CMODE_BLUE;
 19169  0BF9  3002               	movlw	2
 19170  0BFA  2BFC               	goto	L19
 19171  0BFB                     l8163:	
 19172                           ;controller.c: 284:                 break;
 19173                           
 19174                           
 19175                           ;controller.c: 287:                 colorModeSelected = CMODE_WHITE;
 19176  0BFB  3003               	movlw	3
 19177  0BFC                     L19:	
 19178  0BFC  00A3               	movwf	??_CONTROL_MANUAL
 19179  0BFD  0823               	movf	??_CONTROL_MANUAL,w
 19180  0BFE  0141               	movlb	1	; select bank1
 19181  0BFF  00B1               	movwf	_colorModeSelected^(0+128)
 19182                           
 19183                           ;controller.c: 288:                 break;
 19184  0C00  2BE0               	goto	l1128
 19185  0C01                     l8165:	
 19186                           
 19187                           ;controller.c: 291:                 colorModeSelected = CMODE_RED;
 19188  0C01  0141               	movlb	1	; select bank1
 19189  0C02  01B1               	clrf	_colorModeSelected^(0+128)
 19190                           
 19191                           ;controller.c: 292:                 break;
 19192  0C03  2BE0               	goto	l1128
 19193  0C04                     l8169:	
 19194  0C04  0140               	movlb	0	; select bank0
 19195  0C05  0825               	movf	CONTROL_MANUAL@input,w
 19196  0C06  00A3               	movwf	??_CONTROL_MANUAL
 19197  0C07  01A4               	clrf	??_CONTROL_MANUAL+1
 19198                           
 19199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19200                           ; Switch size 1, requested type "simple"
 19201                           ; Number of cases is 1, Range of values is 0 to 0
 19202                           ; switch strategies available:
 19203                           ; Name         Instructions Cycles
 19204                           ; simple_byte            4     3 (average)
 19205                           ; direct_byte            8     6 (fixed)
 19206                           ; jumptable            260     6 (fixed)
 19207                           ;	Chosen strategy is simple_byte
 19208  0C08  0824               	movf	??_CONTROL_MANUAL+1,w
 19209  0C09  3A00               	xorlw	0	; case 0
 19210  0C0A  1903               	skipnz
 19211  0C0B  2C0D               	goto	l8973
 19212  0C0C  2BE0               	goto	l1128
 19213  0C0D                     l8973:	
 19214                           
 19215                           ; Switch size 1, requested type "simple"
 19216                           ; Number of cases is 4, Range of values is 0 to 3
 19217                           ; switch strategies available:
 19218                           ; Name         Instructions Cycles
 19219                           ; simple_byte           13     7 (average)
 19220                           ; direct_byte           14     6 (fixed)
 19221                           ; jumptable            260     6 (fixed)
 19222                           ;	Chosen strategy is simple_byte
 19223  0C0D  0823               	movf	??_CONTROL_MANUAL,w
 19224  0C0E  3A00               	xorlw	0	; case 0
 19225  0C0F  1903               	skipnz
 19226  0C10  2BF5               	goto	l1140
 19227  0C11  3A01               	xorlw	1	; case 1
 19228  0C12  1903               	skipnz
 19229  0C13  2BF9               	goto	l8161
 19230  0C14  3A03               	xorlw	3	; case 2
 19231  0C15  1903               	skipnz
 19232  0C16  2BFB               	goto	l8163
 19233  0C17  3A01               	xorlw	1	; case 3
 19234  0C18  1903               	skipnz
 19235  0C19  2C01               	goto	l8165
 19236  0C1A  2BE0               	goto	l1128
 19237  0C1B                     l8177:	
 19238  0C1B  0836               	movf	_upState^(0+128),w
 19239  0C1C  1D03               	btfss	3,2
 19240  0C1D  0835               	movf	_downState^(0+128),w
 19241  0C1E  1D03               	btfss	3,2
 19242  0C1F  2C33               	goto	l8187
 19243  0C20  083C               	movf	_down^(0+128),w
 19244  0C21  319F  2744  318B   	fcall	_BUTTONS_isHeld
 19245  0C24  3A00               	xorlw	0
 19246  0C25  1D03               	skipz
 19247  0C26  2C33               	goto	l8187
 19248  0C27  0141               	movlb	1	; select bank1
 19249  0C28  083D               	movf	_up^(0+128),w
 19250  0C29  319F  2744  318B   	fcall	_BUTTONS_isHeld
 19251  0C2C  3A00               	xorlw	0
 19252  0C2D  1D03               	skipz
 19253  0C2E  2C33               	goto	l8187
 19254                           
 19255                           ;controller.c: 296:         incInterval = 100;
 19256  0C2F  3064               	movlw	100
 19257  0C30  00FC               	movwf	_incInterval
 19258  0C31  3000               	movlw	0
 19259  0C32  00FD               	movwf	_incInterval+1
 19260  0C33                     l8187:	
 19261                           ;controller.c: 297:     } else {
 19262                           
 19263                           
 19264                           ;controller.c: 298:         return 0;
 19265  0C33  3000               	movlw	0
 19266  0C34  0008               	return
 19267  0C35                     __end_of_CONTROL_MANUAL:	
 19268                           
 19269                           	psect	text59
 19270  1485                     __ptext59:	
 19271 ;; *************** function _colorInc *****************
 19272 ;; Defined at:
 19273 ;;		line 212 in file "led.c"
 19274 ;; Parameters:    Size  Location     Type
 19275 ;;  input           1    wreg     enum E10883
 19276 ;; Auto vars:     Size  Location     Type
 19277 ;;  input           1    2[BANK0 ] enum E10883
 19278 ;; Return value:  Size  Location     Type
 19279 ;;                  1    wreg      void 
 19280 ;; Registers used:
 19281 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19282 ;; Tracked objects:
 19283 ;;		On entry : 0/0
 19284 ;;		On exit  : 0/0
 19285 ;;		Unchanged: 0/0
 19286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19289 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19290 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19291 ;;Total ram usage:        3 bytes
 19292 ;; Hardware stack levels used:    1
 19293 ;; Hardware stack levels required when called:    4
 19294 ;; This function calls:
 19295 ;;		Nothing
 19296 ;; This function is called by:
 19297 ;;		_CONTROL_MANUAL
 19298 ;; This function uses a non-reentrant model
 19299 ;;
 19300                           
 19301                           
 19302                           ;psect for function _colorInc
 19303  1485                     _colorInc:	
 19304                           
 19305                           ;incstack = 0
 19306                           ; Regs used in _colorInc: [wreg-fsr0h+status,2+status,0]
 19307                           ;colorInc@input stored from wreg
 19308  1485  0140               	movlb	0	; select bank0
 19309  1486  00A2               	movwf	colorInc@input
 19310                           
 19311                           ;led.c: 214:     switch(input){
 19312  1487  2CB4               	goto	l5399
 19313  1488                     l5381:	
 19314                           
 19315                           ;led.c: 217:             if(!(manual.red > 254))
 19316  1488  0141               	movlb	1	; select bank1
 19317  1489  0A26               	incf	(_manual^(0+128)+1),w
 19318  148A  1903               	btfsc	3,2
 19319  148B  0008               	return
 19320                           
 19321                           ;led.c: 218:             manual.red++;
 19322  148C  3001               	movlw	1
 19323  148D  0140               	movlb	0	; select bank0
 19324  148E  00A0               	movwf	??_colorInc
 19325  148F  0820               	movf	??_colorInc,w
 19326  1490  0141               	movlb	1	; select bank1
 19327  1491  07A6               	addwf	(_manual^(0+128)+1),f
 19328  1492  0008               	return
 19329  1493                     l5385:	
 19330                           
 19331                           ;led.c: 222:             if(!(manual.green > 254))
 19332  1493  0141               	movlb	1	; select bank1
 19333  1494  0A27               	incf	(_manual^(0+128)+2),w
 19334  1495  1903               	btfsc	3,2
 19335  1496  0008               	return
 19336                           
 19337                           ;led.c: 223:             manual.green++;
 19338  1497  3001               	movlw	1
 19339  1498  0140               	movlb	0	; select bank0
 19340  1499  00A0               	movwf	??_colorInc
 19341  149A  0820               	movf	??_colorInc,w
 19342  149B  0141               	movlb	1	; select bank1
 19343  149C  07A7               	addwf	(_manual^(0+128)+2),f
 19344  149D  0008               	return
 19345  149E                     l5389:	
 19346                           
 19347                           ;led.c: 227:             if(!(manual.blue > 254))
 19348  149E  0141               	movlb	1	; select bank1
 19349  149F  0A28               	incf	(_manual^(0+128)+3),w
 19350  14A0  1903               	btfsc	3,2
 19351  14A1  0008               	return
 19352                           
 19353                           ;led.c: 228:             manual.blue++;
 19354  14A2  3001               	movlw	1
 19355  14A3  0140               	movlb	0	; select bank0
 19356  14A4  00A0               	movwf	??_colorInc
 19357  14A5  0820               	movf	??_colorInc,w
 19358  14A6  0141               	movlb	1	; select bank1
 19359  14A7  07A8               	addwf	(_manual^(0+128)+3),f
 19360  14A8  0008               	return
 19361  14A9                     l5393:	
 19362                           
 19363                           ;led.c: 232:             if(!(manual.white > 254))
 19364  14A9  0141               	movlb	1	; select bank1
 19365  14AA  0A25               	incf	_manual^(0+128),w
 19366  14AB  1903               	btfsc	3,2
 19367  14AC  0008               	return
 19368                           
 19369                           ;led.c: 233:             manual.white++;
 19370  14AD  3001               	movlw	1
 19371  14AE  0140               	movlb	0	; select bank0
 19372  14AF  00A0               	movwf	??_colorInc
 19373  14B0  0820               	movf	??_colorInc,w
 19374  14B1  0141               	movlb	1	; select bank1
 19375  14B2  07A5               	addwf	_manual^(0+128),f
 19376  14B3  0008               	return
 19377  14B4                     l5399:	
 19378  14B4  0822               	movf	colorInc@input,w
 19379  14B5  00A0               	movwf	??_colorInc
 19380  14B6  01A1               	clrf	??_colorInc+1
 19381                           
 19382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19383                           ; Switch size 1, requested type "simple"
 19384                           ; Number of cases is 1, Range of values is 0 to 0
 19385                           ; switch strategies available:
 19386                           ; Name         Instructions Cycles
 19387                           ; simple_byte            4     3 (average)
 19388                           ; direct_byte            8     6 (fixed)
 19389                           ; jumptable            260     6 (fixed)
 19390                           ;	Chosen strategy is simple_byte
 19391  14B7  0821               	movf	??_colorInc+1,w
 19392  14B8  3A00               	xorlw	0	; case 0
 19393  14B9  1903               	skipnz
 19394  14BA  2CBC               	goto	l8975
 19395  14BB  2CCA               	goto	l1453
 19396  14BC                     l8975:	
 19397                           
 19398                           ; Switch size 1, requested type "simple"
 19399                           ; Number of cases is 4, Range of values is 0 to 3
 19400                           ; switch strategies available:
 19401                           ; Name         Instructions Cycles
 19402                           ; simple_byte           13     7 (average)
 19403                           ; direct_byte           14     6 (fixed)
 19404                           ; jumptable            260     6 (fixed)
 19405                           ;	Chosen strategy is simple_byte
 19406  14BC  0820               	movf	??_colorInc,w
 19407  14BD  3A00               	xorlw	0	; case 0
 19408  14BE  1903               	skipnz
 19409  14BF  2C88               	goto	l5381
 19410  14C0  3A01               	xorlw	1	; case 1
 19411  14C1  1903               	skipnz
 19412  14C2  2C93               	goto	l5385
 19413  14C3  3A03               	xorlw	3	; case 2
 19414  14C4  1903               	skipnz
 19415  14C5  2C9E               	goto	l5389
 19416  14C6  3A01               	xorlw	1	; case 3
 19417  14C7  1903               	skipnz
 19418  14C8  2CA9               	goto	l5393
 19419  14C9  2CCA               	goto	l1453
 19420  14CA                     l1453:	
 19421  14CA  0008               	return
 19422  14CB                     __end_of_colorInc:	
 19423                           
 19424                           	psect	text60
 19425  1418                     __ptext60:	
 19426 ;; *************** function _colorDec *****************
 19427 ;; Defined at:
 19428 ;;		line 240 in file "led.c"
 19429 ;; Parameters:    Size  Location     Type
 19430 ;;  input           1    wreg     enum E10883
 19431 ;; Auto vars:     Size  Location     Type
 19432 ;;  input           1    2[BANK0 ] enum E10883
 19433 ;; Return value:  Size  Location     Type
 19434 ;;                  1    wreg      void 
 19435 ;; Registers used:
 19436 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19437 ;; Tracked objects:
 19438 ;;		On entry : 0/0
 19439 ;;		On exit  : 0/0
 19440 ;;		Unchanged: 0/0
 19441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19443 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19444 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19445 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19446 ;;Total ram usage:        3 bytes
 19447 ;; Hardware stack levels used:    1
 19448 ;; Hardware stack levels required when called:    4
 19449 ;; This function calls:
 19450 ;;		Nothing
 19451 ;; This function is called by:
 19452 ;;		_CONTROL_MANUAL
 19453 ;; This function uses a non-reentrant model
 19454 ;;
 19455                           
 19456                           
 19457                           ;psect for function _colorDec
 19458  1418                     _colorDec:	
 19459                           
 19460                           ;incstack = 0
 19461                           ; Regs used in _colorDec: [wreg-fsr0h+status,2+status,0]
 19462                           ;colorDec@input stored from wreg
 19463  1418  0140               	movlb	0	; select bank0
 19464  1419  00A2               	movwf	colorDec@input
 19465                           
 19466                           ;led.c: 242:     switch(input){
 19467  141A  2C37               	goto	l5427
 19468  141B                     l5409:	
 19469                           
 19470                           ;led.c: 245:             if(!(manual.red < 1))
 19471  141B  0141               	movlb	1	; select bank1
 19472  141C  0826               	movf	(_manual^(0+128)+1),w
 19473  141D  1903               	btfsc	3,2
 19474  141E  0008               	return
 19475                           
 19476                           ;led.c: 246:             manual.red--;
 19477  141F  3001               	movlw	1
 19478  1420  02A6               	subwf	(_manual^(0+128)+1),f
 19479  1421  0008               	return
 19480  1422                     l5413:	
 19481                           
 19482                           ;led.c: 250:             if(!(manual.green < 1))
 19483  1422  0141               	movlb	1	; select bank1
 19484  1423  0827               	movf	(_manual^(0+128)+2),w
 19485  1424  1903               	btfsc	3,2
 19486  1425  0008               	return
 19487                           
 19488                           ;led.c: 251:             manual.green--;
 19489  1426  3001               	movlw	1
 19490  1427  02A7               	subwf	(_manual^(0+128)+2),f
 19491  1428  0008               	return
 19492  1429                     l5417:	
 19493                           
 19494                           ;led.c: 255:             if(!(manual.blue < 1))
 19495  1429  0141               	movlb	1	; select bank1
 19496  142A  0828               	movf	(_manual^(0+128)+3),w
 19497  142B  1903               	btfsc	3,2
 19498  142C  0008               	return
 19499                           
 19500                           ;led.c: 256:             manual.blue--;
 19501  142D  3001               	movlw	1
 19502  142E  02A8               	subwf	(_manual^(0+128)+3),f
 19503  142F  0008               	return
 19504  1430                     l5421:	
 19505                           
 19506                           ;led.c: 260:             if(!(manual.white < 1))
 19507  1430  0141               	movlb	1	; select bank1
 19508  1431  0825               	movf	_manual^(0+128),w
 19509  1432  1903               	btfsc	3,2
 19510  1433  0008               	return
 19511                           
 19512                           ;led.c: 261:             manual.white--;
 19513  1434  3001               	movlw	1
 19514  1435  02A5               	subwf	_manual^(0+128),f
 19515  1436  0008               	return
 19516  1437                     l5427:	
 19517  1437  0822               	movf	colorDec@input,w
 19518  1438  00A0               	movwf	??_colorDec
 19519  1439  01A1               	clrf	??_colorDec+1
 19520                           
 19521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19522                           ; Switch size 1, requested type "simple"
 19523                           ; Number of cases is 1, Range of values is 0 to 0
 19524                           ; switch strategies available:
 19525                           ; Name         Instructions Cycles
 19526                           ; simple_byte            4     3 (average)
 19527                           ; direct_byte            8     6 (fixed)
 19528                           ; jumptable            260     6 (fixed)
 19529                           ;	Chosen strategy is simple_byte
 19530  143A  0821               	movf	??_colorDec+1,w
 19531  143B  3A00               	xorlw	0	; case 0
 19532  143C  1903               	skipnz
 19533  143D  2C3F               	goto	l8977
 19534  143E  2C4D               	goto	l1466
 19535  143F                     l8977:	
 19536                           
 19537                           ; Switch size 1, requested type "simple"
 19538                           ; Number of cases is 4, Range of values is 0 to 3
 19539                           ; switch strategies available:
 19540                           ; Name         Instructions Cycles
 19541                           ; simple_byte           13     7 (average)
 19542                           ; direct_byte           14     6 (fixed)
 19543                           ; jumptable            260     6 (fixed)
 19544                           ;	Chosen strategy is simple_byte
 19545  143F  0820               	movf	??_colorDec,w
 19546  1440  3A00               	xorlw	0	; case 0
 19547  1441  1903               	skipnz
 19548  1442  2C1B               	goto	l5409
 19549  1443  3A01               	xorlw	1	; case 1
 19550  1444  1903               	skipnz
 19551  1445  2C22               	goto	l5413
 19552  1446  3A03               	xorlw	3	; case 2
 19553  1447  1903               	skipnz
 19554  1448  2C29               	goto	l5417
 19555  1449  3A01               	xorlw	1	; case 3
 19556  144A  1903               	skipnz
 19557  144B  2C30               	goto	l5421
 19558  144C  2C4D               	goto	l1466
 19559  144D                     l1466:	
 19560  144D  0008               	return
 19561  144E                     __end_of_colorDec:	
 19562                           
 19563                           	psect	text61
 19564  08DA                     __ptext61:	
 19565 ;; *************** function _CONTROL_DMX *****************
 19566 ;; Defined at:
 19567 ;;		line 174 in file "controller.c"
 19568 ;; Parameters:    Size  Location     Type
 19569 ;;		None
 19570 ;; Auto vars:     Size  Location     Type
 19571 ;;		None
 19572 ;; Return value:  Size  Location     Type
 19573 ;;                  1    wreg      _Bool 
 19574 ;; Registers used:
 19575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19576 ;; Tracked objects:
 19577 ;;		On entry : 0/0
 19578 ;;		On exit  : 0/0
 19579 ;;		Unchanged: 0/0
 19580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19583 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19584 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19585 ;;Total ram usage:        2 bytes
 19586 ;; Hardware stack levels used:    1
 19587 ;; Hardware stack levels required when called:   10
 19588 ;; This function calls:
 19589 ;;		_BUTTONS_isHeld
 19590 ;;		_CLOCK_getTime
 19591 ;;		_address_dec
 19592 ;;		_address_inc
 19593 ;; This function is called by:
 19594 ;;		_CONTROLLER_task
 19595 ;; This function uses a non-reentrant model
 19596 ;;
 19597                           
 19598                           
 19599                           ;psect for function _CONTROL_DMX
 19600  08DA                     _CONTROL_DMX:	
 19601                           
 19602                           ;controller.c: 176:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 19603                           
 19604                           ;incstack = 0
 19605                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19606  08DA  0141               	movlb	1	; select bank1
 19607  08DB  083D               	movf	_up^(0+128),w
 19608  08DC  319F  2744  3188   	fcall	_BUTTONS_isHeld
 19609  08DF  3A00               	xorlw	0
 19610  08E0  1903               	skipnz
 19611  08E1  2930               	goto	l7979
 19612  08E2  319E  269D  3188   	fcall	_CLOCK_getTime
 19613  08E5  0141               	movlb	1	; select bank1
 19614  08E6  082B               	movf	_lastIncTime^(0+128),w
 19615  08E7  0140               	movlb	0	; select bank0
 19616  08E8  0220               	subwf	?_CLOCK_getTime,w
 19617  08E9  00B7               	movwf	??_CONTROL_DMX
 19618  08EA  0141               	movlb	1	; select bank1
 19619  08EB  082C               	movf	(_lastIncTime+1)^(0+128),w
 19620  08EC  0140               	movlb	0	; select bank0
 19621  08ED  3B21               	subwfb	?_CLOCK_getTime+1,w
 19622  08EE  00B8               	movwf	??_CONTROL_DMX+1
 19623  08EF  0838               	movf	??_CONTROL_DMX+1,w
 19624  08F0  027D               	subwf	_incInterval+1,w
 19625  08F1  1D03               	skipz
 19626  08F2  28F5               	goto	u7755
 19627  08F3  0837               	movf	??_CONTROL_DMX,w
 19628  08F4  027C               	subwf	_incInterval,w
 19629  08F5                     u7755:	
 19630  08F5  1803               	skipnc
 19631  08F6  2930               	goto	l7979
 19632                           
 19633                           ;controller.c: 177:         address_inc();
 19634  08F7  3190  205F  3188   	fcall	_address_inc
 19635  08FA  2913               	goto	L21
 19636  08FB                     l7981:	
 19637                           ;controller.c: 179:         if(incInterval > 20){
 19638                           
 19639                           ;controller.c: 178:         lastIncTime = CLOCK_getTime();
 19640                           
 19641  08FB  319E  269D  3188   	fcall	_CLOCK_getTime
 19642  08FE  0141               	movlb	1	; select bank1
 19643  08FF  082B               	movf	_lastIncTime^(0+128),w
 19644  0900  0140               	movlb	0	; select bank0
 19645  0901  0220               	subwf	?_CLOCK_getTime,w
 19646  0902  00B7               	movwf	??_CONTROL_DMX
 19647  0903  0141               	movlb	1	; select bank1
 19648  0904  082C               	movf	(_lastIncTime+1)^(0+128),w
 19649  0905  0140               	movlb	0	; select bank0
 19650  0906  3B21               	subwfb	?_CLOCK_getTime+1,w
 19651  0907  00B8               	movwf	??_CONTROL_DMX+1
 19652  0908  0838               	movf	??_CONTROL_DMX+1,w
 19653  0909  027D               	subwf	_incInterval+1,w
 19654  090A  1D03               	skipz
 19655  090B  290E               	goto	u7785
 19656  090C  0837               	movf	??_CONTROL_DMX,w
 19657  090D  027C               	subwf	_incInterval,w
 19658  090E                     u7785:	
 19659  090E  1803               	skipnc
 19660  090F  2938               	goto	l7995
 19661                           
 19662                           ;controller.c: 184:         address_dec();
 19663  0910  3190  202F  3188   	fcall	_address_dec
 19664  0913                     L21:	
 19665                           
 19666                           ;controller.c: 185:         lastIncTime = CLOCK_getTime();
 19667  0913  319E  269D  3188   	fcall	_CLOCK_getTime
 19668  0916  0140               	movlb	0	; select bank0
 19669  0917  0821               	movf	?_CLOCK_getTime+1,w
 19670  0918  0141               	movlb	1	; select bank1
 19671  0919  00AC               	movwf	(_lastIncTime+1)^(0+128)
 19672  091A  0140               	movlb	0	; select bank0
 19673  091B  0820               	movf	?_CLOCK_getTime,w
 19674  091C  0141               	movlb	1	; select bank1
 19675  091D  00AB               	movwf	_lastIncTime^(0+128)
 19676                           
 19677                           ;controller.c: 186:         if(incInterval > 20){
 19678  091E  087D               	movf	_incInterval+1,w
 19679  091F  3A80               	xorlw	128
 19680  0920  0140               	movlb	0	; select bank0
 19681  0921  00B7               	movwf	??_CONTROL_DMX
 19682  0922  3080               	movlw	128
 19683  0923  0237               	subwf	??_CONTROL_DMX,w
 19684  0924  1D03               	skipz
 19685  0925  2928               	goto	u7795
 19686  0926  3015               	movlw	21
 19687  0927  027C               	subwf	_incInterval,w
 19688  0928                     u7795:	
 19689  0928  1C03               	skipc
 19690  0929  292E               	goto	l1086
 19691                           
 19692                           ;controller.c: 180:             incInterval-=1;
 19693  092A  30FF               	movlw	255
 19694  092B  07FC               	addwf	_incInterval,f
 19695  092C  30FF               	movlw	255
 19696  092D  3DFD               	addwfc	_incInterval+1,f
 19697  092E                     l1086:	
 19698                           ;controller.c: 181:         }
 19699                           
 19700                           
 19701                           ;controller.c: 182:         return 1;
 19702  092E  3001               	movlw	1
 19703  092F  0008               	return
 19704  0930                     l7979:	
 19705  0930  0141               	movlb	1	; select bank1
 19706  0931  083C               	movf	_down^(0+128),w
 19707  0932  319F  2744  3188   	fcall	_BUTTONS_isHeld
 19708  0935  3A00               	xorlw	0
 19709  0936  1D03               	btfss	3,2
 19710  0937  28FB               	goto	l7981
 19711  0938                     l7995:	
 19712  0938  0141               	movlb	1	; select bank1
 19713  0939  083B               	movf	_enter^(0+128),w
 19714  093A  319F  2744  3188   	fcall	_BUTTONS_isHeld
 19715  093D  3A00               	xorlw	0
 19716  093E  1903               	skipnz
 19717  093F  2947               	goto	l8003
 19718                           
 19719                           ;controller.c: 191:         address = 1;
 19720  0940  3001               	movlw	1
 19721  0941  0141               	movlb	1	; select bank1
 19722  0942  00EC               	movwf	_address^(0+128)
 19723  0943  3000               	movlw	0
 19724  0944  00ED               	movwf	(_address^(0+128)+1)
 19725                           
 19726                           ;controller.c: 192:         return 1;
 19727  0945  3001               	movlw	1
 19728  0946  0008               	return
 19729  0947                     l8003:	
 19730  0947  0141               	movlb	1	; select bank1
 19731  0948  0836               	movf	_upState^(0+128),w
 19732  0949  1903               	btfsc	3,2
 19733  094A  294F               	goto	l8013
 19734                           
 19735                           ;controller.c: 194:         address_inc();
 19736  094B  3190  205F  3188   	fcall	_address_inc
 19737  094E  292E               	goto	l1086
 19738  094F                     l8013:	
 19739  094F  0835               	movf	_downState^(0+128),w
 19740  0950  1903               	btfsc	3,2
 19741  0951  2956               	goto	l8023
 19742                           
 19743                           ;controller.c: 198:         address_dec();
 19744  0952  3190  202F  3188   	fcall	_address_dec
 19745  0955  292E               	goto	l1086
 19746  0956                     l8023:	
 19747  0956  0833               	movf	_enterState^(0+128),w
 19748  0957  1D03               	btfss	3,2
 19749  0958  292E               	goto	l1086
 19750  0959  0836               	movf	_upState^(0+128),w
 19751  095A  1D03               	btfss	3,2
 19752  095B  0835               	movf	_downState^(0+128),w
 19753  095C  1D03               	btfss	3,2
 19754  095D  2971               	goto	l8041
 19755  095E  083C               	movf	_down^(0+128),w
 19756  095F  319F  2744  3188   	fcall	_BUTTONS_isHeld
 19757  0962  3A00               	xorlw	0
 19758  0963  1D03               	skipz
 19759  0964  2971               	goto	l8041
 19760  0965  0141               	movlb	1	; select bank1
 19761  0966  083D               	movf	_up^(0+128),w
 19762  0967  319F  2744  3188   	fcall	_BUTTONS_isHeld
 19763  096A  3A00               	xorlw	0
 19764  096B  1D03               	skipz
 19765  096C  2971               	goto	l8041
 19766                           
 19767                           ;controller.c: 203:         incInterval = 100;
 19768  096D  3064               	movlw	100
 19769  096E  00FC               	movwf	_incInterval
 19770  096F  3000               	movlw	0
 19771  0970  00FD               	movwf	_incInterval+1
 19772  0971                     l8041:	
 19773                           ;controller.c: 204:     } else {
 19774                           
 19775                           
 19776                           ;controller.c: 205:         return 0;
 19777  0971  3000               	movlw	0
 19778  0972  0008               	return
 19779  0973                     __end_of_CONTROL_DMX:	
 19780                           
 19781                           	psect	text62
 19782  105F                     __ptext62:	
 19783 ;; *************** function _address_inc *****************
 19784 ;; Defined at:
 19785 ;;		line 29 in file "dmx.c"
 19786 ;; Parameters:    Size  Location     Type
 19787 ;;		None
 19788 ;; Auto vars:     Size  Location     Type
 19789 ;;		None
 19790 ;; Return value:  Size  Location     Type
 19791 ;;                  1    wreg      void 
 19792 ;; Registers used:
 19793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19794 ;; Tracked objects:
 19795 ;;		On entry : 0/0
 19796 ;;		On exit  : 0/0
 19797 ;;		Unchanged: 0/0
 19798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19803 ;;Total ram usage:        0 bytes
 19804 ;; Hardware stack levels used:    1
 19805 ;; Hardware stack levels required when called:    9
 19806 ;; This function calls:
 19807 ;;		_TM1650_fastPrintNum
 19808 ;; This function is called by:
 19809 ;;		_CONTROL_DMX
 19810 ;; This function uses a non-reentrant model
 19811 ;;
 19812                           
 19813                           
 19814                           ;psect for function _address_inc
 19815  105F                     _address_inc:	
 19816                           
 19817                           ;dmx.c: 31:     if(address == 512)
 19818                           
 19819                           ;incstack = 0
 19820                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19821  105F  3002               	movlw	2
 19822  1060  0141               	movlb	1	; select bank1
 19823  1061  066D               	xorwf	(_address+1)^(0+128),w
 19824  1062  046C               	iorwf	_address^(0+128),w
 19825  1063  1D03               	btfss	3,2
 19826  1064  286A               	goto	l7687
 19827                           
 19828                           ;dmx.c: 32:         address = 1;
 19829  1065  3001               	movlw	1
 19830  1066  00EC               	movwf	_address^(0+128)
 19831  1067  3000               	movlw	0
 19832  1068  00ED               	movwf	(_address^(0+128)+1)
 19833  1069  286E               	goto	l7689
 19834  106A                     l7687:	
 19835                           
 19836                           ;dmx.c: 34:         address++;
 19837  106A  3001               	movlw	1
 19838  106B  07EC               	addwf	_address^(0+128),f
 19839  106C  3000               	movlw	0
 19840  106D  3DED               	addwfc	(_address+1)^(0+128),f
 19841  106E                     l7689:	
 19842                           
 19843                           ;dmx.c: 37:     TM1650_fastPrintNum(address);
 19844  106E  086D               	movf	(_address+1)^(0+128),w
 19845  106F  0140               	movlb	0	; select bank0
 19846  1070  00B5               	movwf	TM1650_fastPrintNum@num+1
 19847  1071  0141               	movlb	1	; select bank1
 19848  1072  086C               	movf	_address^(0+128),w
 19849  1073  0140               	movlb	0	; select bank0
 19850  1074  00B4               	movwf	TM1650_fastPrintNum@num
 19851  1075  318C  2435         	fcall	_TM1650_fastPrintNum
 19852  1077  0008               	return
 19853  1078                     __end_of_address_inc:	
 19854                           
 19855                           	psect	text63
 19856  102F                     __ptext63:	
 19857 ;; *************** function _address_dec *****************
 19858 ;; Defined at:
 19859 ;;		line 43 in file "dmx.c"
 19860 ;; Parameters:    Size  Location     Type
 19861 ;;		None
 19862 ;; Auto vars:     Size  Location     Type
 19863 ;;		None
 19864 ;; Return value:  Size  Location     Type
 19865 ;;                  1    wreg      void 
 19866 ;; Registers used:
 19867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19868 ;; Tracked objects:
 19869 ;;		On entry : 0/0
 19870 ;;		On exit  : 0/0
 19871 ;;		Unchanged: 0/0
 19872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19877 ;;Total ram usage:        0 bytes
 19878 ;; Hardware stack levels used:    1
 19879 ;; Hardware stack levels required when called:    9
 19880 ;; This function calls:
 19881 ;;		_TM1650_fastPrintNum
 19882 ;; This function is called by:
 19883 ;;		_CONTROL_DMX
 19884 ;; This function uses a non-reentrant model
 19885 ;;
 19886                           
 19887                           
 19888                           ;psect for function _address_dec
 19889  102F                     _address_dec:	
 19890                           
 19891                           ;dmx.c: 45:     if(address == 1)
 19892                           
 19893                           ;incstack = 0
 19894                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19895  102F  0141               	movlb	1	; select bank1
 19896  1030  036C               	decf	_address^(0+128),w
 19897  1031  046D               	iorwf	(_address+1)^(0+128),w
 19898  1032  1D03               	btfss	3,2
 19899  1033  2839               	goto	l7695
 19900                           
 19901                           ;dmx.c: 46:         address = 512;
 19902  1034  3000               	movlw	0
 19903  1035  00EC               	movwf	_address^(0+128)
 19904  1036  3002               	movlw	2
 19905  1037  00ED               	movwf	(_address^(0+128)+1)
 19906  1038  283D               	goto	l7697
 19907  1039                     l7695:	
 19908                           
 19909                           ;dmx.c: 48:         address--;
 19910  1039  3001               	movlw	1
 19911  103A  02EC               	subwf	_address^(0+128),f
 19912  103B  3000               	movlw	0
 19913  103C  3BED               	subwfb	(_address+1)^(0+128),f
 19914  103D                     l7697:	
 19915                           
 19916                           ;dmx.c: 51:     TM1650_fastPrintNum(address);
 19917  103D  086D               	movf	(_address+1)^(0+128),w
 19918  103E  0140               	movlb	0	; select bank0
 19919  103F  00B5               	movwf	TM1650_fastPrintNum@num+1
 19920  1040  0141               	movlb	1	; select bank1
 19921  1041  086C               	movf	_address^(0+128),w
 19922  1042  0140               	movlb	0	; select bank0
 19923  1043  00B4               	movwf	TM1650_fastPrintNum@num
 19924  1044  318C  2435         	fcall	_TM1650_fastPrintNum
 19925  1046  0008               	return
 19926  1047                     __end_of_address_dec:	
 19927                           
 19928                           	psect	text64
 19929  0C35                     __ptext64:	
 19930 ;; *************** function _TM1650_fastPrintNum *****************
 19931 ;; Defined at:
 19932 ;;		line 101 in file "tm1650.c"
 19933 ;; Parameters:    Size  Location     Type
 19934 ;;  num             2   20[BANK0 ] unsigned short 
 19935 ;; Auto vars:     Size  Location     Type
 19936 ;;		None
 19937 ;; Return value:  Size  Location     Type
 19938 ;;                  1    wreg      void 
 19939 ;; Registers used:
 19940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19941 ;; Tracked objects:
 19942 ;;		On entry : 0/0
 19943 ;;		On exit  : 0/0
 19944 ;;		Unchanged: 0/0
 19945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19946 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19948 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19949 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19950 ;;Total ram usage:        3 bytes
 19951 ;; Hardware stack levels used:    1
 19952 ;; Hardware stack levels required when called:    8
 19953 ;; This function calls:
 19954 ;;		___lwdiv
 19955 ;;		___lwmod
 19956 ;;		_writeData
 19957 ;; This function is called by:
 19958 ;;		_CONTROLLER_task
 19959 ;;		_DMX_init
 19960 ;;		_address_inc
 19961 ;;		_address_dec
 19962 ;; This function uses a non-reentrant model
 19963 ;;
 19964                           
 19965                           
 19966                           ;psect for function _TM1650_fastPrintNum
 19967  0C35                     _TM1650_fastPrintNum:	
 19968                           
 19969                           ;tm1650.c: 103:     if(num > 9999){
 19970                           
 19971                           ;incstack = 0
 19972                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19973  0C35  3027               	movlw	39
 19974  0C36  0140               	movlb	0	; select bank0
 19975  0C37  0235               	subwf	TM1650_fastPrintNum@num+1,w
 19976  0C38  3010               	movlw	16
 19977  0C39  1903               	skipnz
 19978  0C3A  0234               	subwf	TM1650_fastPrintNum@num,w
 19979  0C3B  1C03               	skipc
 19980  0C3C  2C60               	goto	l7633
 19981                           
 19982                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 19983  0C3D  3079               	movlw	121
 19984  0C3E  00B6               	movwf	??_TM1650_fastPrintNum
 19985  0C3F  0836               	movf	??_TM1650_fastPrintNum,w
 19986  0C40  00AE               	movwf	writeData@data
 19987  0C41  3034               	movlw	52
 19988  0C42  3190  20AE  318C   	fcall	_writeData
 19989                           
 19990                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 19991  0C45  3079               	movlw	121
 19992  0C46  0140               	movlb	0	; select bank0
 19993  0C47  00B6               	movwf	??_TM1650_fastPrintNum
 19994  0C48  0836               	movf	??_TM1650_fastPrintNum,w
 19995  0C49  00AE               	movwf	writeData@data
 19996  0C4A  3035               	movlw	53
 19997  0C4B  3190  20AE  318C   	fcall	_writeData
 19998                           
 19999                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 20000  0C4E  3079               	movlw	121
 20001  0C4F  0140               	movlb	0	; select bank0
 20002  0C50  00B6               	movwf	??_TM1650_fastPrintNum
 20003  0C51  0836               	movf	??_TM1650_fastPrintNum,w
 20004  0C52  00AE               	movwf	writeData@data
 20005  0C53  3036               	movlw	54
 20006  0C54  3190  20AE  318C   	fcall	_writeData
 20007                           
 20008                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 20009  0C57  3079               	movlw	121
 20010  0C58  0140               	movlb	0	; select bank0
 20011  0C59  00B6               	movwf	??_TM1650_fastPrintNum
 20012  0C5A  0836               	movf	??_TM1650_fastPrintNum,w
 20013  0C5B  00AE               	movwf	writeData@data
 20014  0C5C  3037               	movlw	55
 20015  0C5D  3190  20AE         	fcall	_writeData
 20016  0C5F  0008               	return
 20017  0C60                     l7633:	
 20018                           
 20019                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 20020  0C60  300A               	movlw	10
 20021  0C61  00A8               	movwf	___lwmod@divisor
 20022  0C62  3000               	movlw	0
 20023  0C63  00A9               	movwf	___lwmod@divisor+1
 20024  0C64  0835               	movf	TM1650_fastPrintNum@num+1,w
 20025  0C65  00AB               	movwf	___lwmod@dividend+1
 20026  0C66  0834               	movf	TM1650_fastPrintNum@num,w
 20027  0C67  00AA               	movwf	___lwmod@dividend
 20028  0C68  3192  228A  318C   	fcall	___lwmod
 20029  0C6B  0140               	movlb	0	; select bank0
 20030  0C6C  0829               	movf	?___lwmod+1,w
 20031  0C6D  0085               	movwf	5
 20032  0C6E  0828               	movf	?___lwmod,w
 20033  0C6F  0084               	movwf	4
 20034  0C70  3010               	movlw	low ((_charTable+16)| (0+32768))
 20035  0C71  0784               	addwf	4,f
 20036  0C72  3098               	movlw	high ((_charTable+16)| (0+32768))
 20037  0C73  3D85               	addwfc	5,f
 20038  0C74  0800               	movf	0,w	;code access
 20039  0C75  00B6               	movwf	??_TM1650_fastPrintNum
 20040  0C76  0836               	movf	??_TM1650_fastPrintNum,w
 20041  0C77  00AE               	movwf	writeData@data
 20042  0C78  3037               	movlw	55
 20043  0C79  3190  20AE  318C   	fcall	_writeData
 20044                           
 20045                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 20046  0C7C  300A               	movlw	10
 20047  0C7D  0140               	movlb	0	; select bank0
 20048  0C7E  00A8               	movwf	___lwmod@divisor
 20049  0C7F  3000               	movlw	0
 20050  0C80  00A9               	movwf	___lwmod@divisor+1
 20051  0C81  300A               	movlw	10
 20052  0C82  00A0               	movwf	___lwdiv@divisor
 20053  0C83  3000               	movlw	0
 20054  0C84  00A1               	movwf	___lwdiv@divisor+1
 20055  0C85  0835               	movf	TM1650_fastPrintNum@num+1,w
 20056  0C86  00A3               	movwf	___lwdiv@dividend+1
 20057  0C87  0834               	movf	TM1650_fastPrintNum@num,w
 20058  0C88  00A2               	movwf	___lwdiv@dividend
 20059  0C89  3193  23AE  318C   	fcall	___lwdiv
 20060  0C8C  0140               	movlb	0	; select bank0
 20061  0C8D  0821               	movf	?___lwdiv+1,w
 20062  0C8E  00AB               	movwf	___lwmod@dividend+1
 20063  0C8F  0820               	movf	?___lwdiv,w
 20064  0C90  00AA               	movwf	___lwmod@dividend
 20065  0C91  3192  228A  318C   	fcall	___lwmod
 20066  0C94  0140               	movlb	0	; select bank0
 20067  0C95  0829               	movf	?___lwmod+1,w
 20068  0C96  0085               	movwf	5
 20069  0C97  0828               	movf	?___lwmod,w
 20070  0C98  0084               	movwf	4
 20071  0C99  3010               	movlw	low ((_charTable+16)| (0+32768))
 20072  0C9A  0784               	addwf	4,f
 20073  0C9B  3098               	movlw	high ((_charTable+16)| (0+32768))
 20074  0C9C  3D85               	addwfc	5,f
 20075  0C9D  0800               	movf	0,w	;code access
 20076  0C9E  00B6               	movwf	??_TM1650_fastPrintNum
 20077  0C9F  0836               	movf	??_TM1650_fastPrintNum,w
 20078  0CA0  00AE               	movwf	writeData@data
 20079  0CA1  3036               	movlw	54
 20080  0CA2  3190  20AE  318C   	fcall	_writeData
 20081                           
 20082                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 20083  0CA5  300A               	movlw	10
 20084  0CA6  0140               	movlb	0	; select bank0
 20085  0CA7  00A8               	movwf	___lwmod@divisor
 20086  0CA8  3000               	movlw	0
 20087  0CA9  00A9               	movwf	___lwmod@divisor+1
 20088  0CAA  3064               	movlw	100
 20089  0CAB  00A0               	movwf	___lwdiv@divisor
 20090  0CAC  3000               	movlw	0
 20091  0CAD  00A1               	movwf	___lwdiv@divisor+1
 20092  0CAE  0835               	movf	TM1650_fastPrintNum@num+1,w
 20093  0CAF  00A3               	movwf	___lwdiv@dividend+1
 20094  0CB0  0834               	movf	TM1650_fastPrintNum@num,w
 20095  0CB1  00A2               	movwf	___lwdiv@dividend
 20096  0CB2  3193  23AE  318C   	fcall	___lwdiv
 20097  0CB5  0140               	movlb	0	; select bank0
 20098  0CB6  0821               	movf	?___lwdiv+1,w
 20099  0CB7  00AB               	movwf	___lwmod@dividend+1
 20100  0CB8  0820               	movf	?___lwdiv,w
 20101  0CB9  00AA               	movwf	___lwmod@dividend
 20102  0CBA  3192  228A  318C   	fcall	___lwmod
 20103  0CBD  0140               	movlb	0	; select bank0
 20104  0CBE  0829               	movf	?___lwmod+1,w
 20105  0CBF  0085               	movwf	5
 20106  0CC0  0828               	movf	?___lwmod,w
 20107  0CC1  0084               	movwf	4
 20108  0CC2  3010               	movlw	low ((_charTable+16)| (0+32768))
 20109  0CC3  0784               	addwf	4,f
 20110  0CC4  3098               	movlw	high ((_charTable+16)| (0+32768))
 20111  0CC5  3D85               	addwfc	5,f
 20112  0CC6  0800               	movf	0,w	;code access
 20113  0CC7  00B6               	movwf	??_TM1650_fastPrintNum
 20114  0CC8  0836               	movf	??_TM1650_fastPrintNum,w
 20115  0CC9  00AE               	movwf	writeData@data
 20116  0CCA  3035               	movlw	53
 20117  0CCB  3190  20AE  318C   	fcall	_writeData
 20118                           
 20119                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 20120  0CCE  300A               	movlw	10
 20121  0CCF  0140               	movlb	0	; select bank0
 20122  0CD0  00A8               	movwf	___lwmod@divisor
 20123  0CD1  3000               	movlw	0
 20124  0CD2  00A9               	movwf	___lwmod@divisor+1
 20125  0CD3  30E8               	movlw	232
 20126  0CD4  00A0               	movwf	___lwdiv@divisor
 20127  0CD5  3003               	movlw	3
 20128  0CD6  00A1               	movwf	___lwdiv@divisor+1
 20129  0CD7  0835               	movf	TM1650_fastPrintNum@num+1,w
 20130  0CD8  00A3               	movwf	___lwdiv@dividend+1
 20131  0CD9  0834               	movf	TM1650_fastPrintNum@num,w
 20132  0CDA  00A2               	movwf	___lwdiv@dividend
 20133  0CDB  3193  23AE  318C   	fcall	___lwdiv
 20134  0CDE  0140               	movlb	0	; select bank0
 20135  0CDF  0821               	movf	?___lwdiv+1,w
 20136  0CE0  00AB               	movwf	___lwmod@dividend+1
 20137  0CE1  0820               	movf	?___lwdiv,w
 20138  0CE2  00AA               	movwf	___lwmod@dividend
 20139  0CE3  3192  228A  318C   	fcall	___lwmod
 20140  0CE6  0140               	movlb	0	; select bank0
 20141  0CE7  0829               	movf	?___lwmod+1,w
 20142  0CE8  0085               	movwf	5
 20143  0CE9  0828               	movf	?___lwmod,w
 20144  0CEA  0084               	movwf	4
 20145  0CEB  3010               	movlw	low ((_charTable+16)| (0+32768))
 20146  0CEC  0784               	addwf	4,f
 20147  0CED  3098               	movlw	high ((_charTable+16)| (0+32768))
 20148  0CEE  3D85               	addwfc	5,f
 20149  0CEF  0800               	movf	0,w	;code access
 20150  0CF0  00B6               	movwf	??_TM1650_fastPrintNum
 20151  0CF1  0836               	movf	??_TM1650_fastPrintNum,w
 20152  0CF2  00AE               	movwf	writeData@data
 20153  0CF3  3034               	movlw	52
 20154  0CF4  3190  20AE         	fcall	_writeData
 20155  0CF6  0008               	return
 20156  0CF7                     __end_of_TM1650_fastPrintNum:	
 20157                           
 20158                           	psect	text65
 20159  10AE                     __ptext65:	
 20160 ;; *************** function _writeData *****************
 20161 ;; Defined at:
 20162 ;;		line 31 in file "tm1650.c"
 20163 ;; Parameters:    Size  Location     Type
 20164 ;;  address         1    wreg     unsigned char 
 20165 ;;  data            1   14[BANK0 ] unsigned char 
 20166 ;; Auto vars:     Size  Location     Type
 20167 ;;  address         1   18[BANK0 ] unsigned char 
 20168 ;;  status          1   19[BANK0 ] enum E11370
 20169 ;; Return value:  Size  Location     Type
 20170 ;;                  1    wreg      void 
 20171 ;; Registers used:
 20172 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20173 ;; Tracked objects:
 20174 ;;		On entry : 0/0
 20175 ;;		On exit  : 0/0
 20176 ;;		Unchanged: 0/0
 20177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20178 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20179 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20180 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20181 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20182 ;;Total ram usage:        6 bytes
 20183 ;; Hardware stack levels used:    1
 20184 ;; Hardware stack levels required when called:    7
 20185 ;; This function calls:
 20186 ;;		_I2C1_MasterWrite
 20187 ;; This function is called by:
 20188 ;;		_TM1650_enable
 20189 ;;		_TM1650_setDigit
 20190 ;;		_TM1650_fastPrintNum
 20191 ;;		_TM1650_brightness
 20192 ;; This function uses a non-reentrant model
 20193 ;;
 20194                           
 20195                           
 20196                           ;psect for function _writeData
 20197  10AE                     _writeData:	
 20198                           
 20199                           ;incstack = 0
 20200                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20201                           ;writeData@address stored from wreg
 20202  10AE  0140               	movlb	0	; select bank0
 20203  10AF  00B2               	movwf	writeData@address
 20204                           
 20205                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 20206  10B0  3002               	movlw	2
 20207  10B1  00AF               	movwf	??_writeData
 20208  10B2  082F               	movf	??_writeData,w
 20209  10B3  00B3               	movwf	writeData@status
 20210                           
 20211                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 20212  10B4  01A7               	clrf	I2C1_MasterWrite@length
 20213  10B5  0AA7               	incf	I2C1_MasterWrite@length,f
 20214  10B6  0832               	movf	writeData@address,w
 20215  10B7  00AF               	movwf	??_writeData
 20216  10B8  01B0               	clrf	??_writeData+1
 20217  10B9  082F               	movf	??_writeData,w
 20218  10BA  00A8               	movwf	I2C1_MasterWrite@address
 20219  10BB  0830               	movf	??_writeData+1,w
 20220  10BC  00A9               	movwf	I2C1_MasterWrite@address+1
 20221  10BD  3033               	movlw	(low (writeData@status| 0))& (0+255)
 20222  10BE  00B1               	movwf	??_writeData+2
 20223  10BF  0831               	movf	??_writeData+2,w
 20224  10C0  00AA               	movwf	I2C1_MasterWrite@pflag
 20225  10C1  302E               	movlw	(low (writeData@data| 0))& (0+255)
 20226  10C2  3192  2260  3190   	fcall	_I2C1_MasterWrite
 20227  10C5                     l7071:	
 20228                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 20229                           
 20230  10C5  3002               	movlw	2
 20231  10C6  0140               	movlb	0	; select bank0
 20232  10C7  0633               	xorwf	writeData@status,w
 20233  10C8  1D03               	btfss	3,2
 20234  10C9  0008               	return
 20235  10CA  28C5               	goto	l7071
 20236  10CB                     __end_of_writeData:	
 20237                           
 20238                           	psect	text66
 20239  1260                     __ptext66:	
 20240 ;; *************** function _I2C1_MasterWrite *****************
 20241 ;; Defined at:
 20242 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 20243 ;; Parameters:    Size  Location     Type
 20244 ;;  pdata           1    wreg     PTR unsigned char 
 20245 ;;		 -> writeData@data(1), 
 20246 ;;  length          1    7[BANK0 ] unsigned char 
 20247 ;;  address         2    8[BANK0 ] unsigned short 
 20248 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 20249 ;;		 -> writeData@status(1), 
 20250 ;; Auto vars:     Size  Location     Type
 20251 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 20252 ;;		 -> writeData@data(1), 
 20253 ;; Return value:  Size  Location     Type
 20254 ;;                  1    wreg      void 
 20255 ;; Registers used:
 20256 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20257 ;; Tracked objects:
 20258 ;;		On entry : 0/0
 20259 ;;		On exit  : 0/0
 20260 ;;		Unchanged: 0/0
 20261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20262 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20263 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20264 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20265 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20266 ;;Total ram usage:        7 bytes
 20267 ;; Hardware stack levels used:    1
 20268 ;; Hardware stack levels required when called:    6
 20269 ;; This function calls:
 20270 ;;		_I2C1_MasterTRBInsert
 20271 ;;		_I2C1_MasterWriteTRBBuild
 20272 ;; This function is called by:
 20273 ;;		_writeData
 20274 ;; This function uses a non-reentrant model
 20275 ;;
 20276                           
 20277                           
 20278                           ;psect for function _I2C1_MasterWrite
 20279  1260                     _I2C1_MasterWrite:	
 20280                           
 20281                           ;incstack = 0
 20282                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20283                           ;I2C1_MasterWrite@pdata stored from wreg
 20284  1260  0140               	movlb	0	; select bank0
 20285  1261  00AD               	movwf	I2C1_MasterWrite@pdata
 20286                           
 20287                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 20288  1262  0141               	movlb	1	; select bank1
 20289  1263  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 20290  1264  2A83               	goto	l7065
 20291                           
 20292                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 20293  1265  0140               	movlb	0	; select bank0
 20294  1266  082D               	movf	I2C1_MasterWrite@pdata,w
 20295  1267  00AB               	movwf	??_I2C1_MasterWrite
 20296  1268  082B               	movf	??_I2C1_MasterWrite,w
 20297  1269  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 20298  126A  0827               	movf	I2C1_MasterWrite@length,w
 20299  126B  00AC               	movwf	??_I2C1_MasterWrite+1
 20300  126C  082C               	movf	??_I2C1_MasterWrite+1,w
 20301  126D  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 20302  126E  0829               	movf	I2C1_MasterWrite@address+1,w
 20303  126F  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 20304  1270  0828               	movf	I2C1_MasterWrite@address,w
 20305  1271  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 20306  1272  3051               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 20307  1273  3191  2183  3192   	fcall	_I2C1_MasterWriteTRBBuild
 20308                           
 20309                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 20310  1276  3051               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 20311  1277  0140               	movlb	0	; select bank0
 20312  1278  00AB               	movwf	??_I2C1_MasterWrite
 20313  1279  082B               	movf	??_I2C1_MasterWrite,w
 20314  127A  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 20315  127B  082A               	movf	I2C1_MasterWrite@pflag,w
 20316  127C  00AC               	movwf	??_I2C1_MasterWrite+1
 20317  127D  082C               	movf	??_I2C1_MasterWrite+1,w
 20318  127E  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 20319  127F  3001               	movlw	1
 20320  1280  3195  256C         	fcall	_I2C1_MasterTRBInsert
 20321                           
 20322                           ;mcc_generated_files/i2c1.c: 613:     }
 20323  1282  0008               	return
 20324  1283                     l7065:	
 20325                           
 20326                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20327  1283  0140               	movlb	0	; select bank0
 20328  1284  082A               	movf	I2C1_MasterWrite@pflag,w
 20329  1285  0086               	movwf	6
 20330  1286  0187               	clrf	7
 20331  1287  0181               	clrf	1
 20332  1288  0A81               	incf	1,f
 20333  1289  0008               	return
 20334  128A                     __end_of_I2C1_MasterWrite:	
 20335                           
 20336                           	psect	text67
 20337  1183                     __ptext67:	
 20338 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 20339 ;; Defined at:
 20340 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 20341 ;; Parameters:    Size  Location     Type
 20342 ;;  ptrb            1    wreg     PTR struct .
 20343 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 20344 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 20345 ;;		 -> writeData@data(1), 
 20346 ;;  length          1    1[BANK0 ] unsigned char 
 20347 ;;  address         2    2[BANK0 ] unsigned short 
 20348 ;; Auto vars:     Size  Location     Type
 20349 ;;  ptrb            1    6[BANK0 ] PTR struct .
 20350 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 20351 ;; Return value:  Size  Location     Type
 20352 ;;                  1    wreg      void 
 20353 ;; Registers used:
 20354 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20355 ;; Tracked objects:
 20356 ;;		On entry : 0/0
 20357 ;;		On exit  : 0/0
 20358 ;;		Unchanged: 0/0
 20359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20363 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20364 ;;Total ram usage:        7 bytes
 20365 ;; Hardware stack levels used:    1
 20366 ;; Hardware stack levels required when called:    4
 20367 ;; This function calls:
 20368 ;;		Nothing
 20369 ;; This function is called by:
 20370 ;;		_I2C1_MasterWrite
 20371 ;; This function uses a non-reentrant model
 20372 ;;
 20373                           
 20374                           
 20375                           ;psect for function _I2C1_MasterWriteTRBBuild
 20376  1183                     _I2C1_MasterWriteTRBBuild:	
 20377                           
 20378                           ;incstack = 0
 20379                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 20380                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 20381  1183  0140               	movlb	0	; select bank0
 20382  1184  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 20383                           
 20384                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 20385  1185  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 20386  1186  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 20387  1187  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 20388  1188  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20389  1189  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 20390  118A  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 20391  118B  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20392  118C  0086               	movwf	6
 20393  118D  3001               	movlw	1	; select bank2/3
 20394  118E  0087               	movwf	7
 20395  118F  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20396  1190  3FC0               	movwi [0]fsr1
 20397  1191  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 20398  1192  3FC1               	movwi [1]fsr1
 20399                           
 20400                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 20401  1193  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 20402  1194  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20403  1195  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20404  1196  3E02               	addlw	2
 20405  1197  0086               	movwf	6
 20406  1198  3001               	movlw	1	; select bank2/3
 20407  1199  0087               	movwf	7
 20408  119A  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20409  119B  0081               	movwf	1
 20410                           
 20411                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 20412  119C  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 20413  119D  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20414  119E  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20415  119F  3E03               	addlw	3
 20416  11A0  0086               	movwf	6
 20417  11A1  3001               	movlw	1	; select bank2/3
 20418  11A2  0087               	movwf	7
 20419  11A3  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20420  11A4  0081               	movwf	1
 20421  11A5  0008               	return
 20422  11A6                     __end_of_I2C1_MasterWriteTRBBuild:	
 20423                           
 20424                           	psect	text68
 20425  156C                     __ptext68:	
 20426 ;; *************** function _I2C1_MasterTRBInsert *****************
 20427 ;; Defined at:
 20428 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 20429 ;; Parameters:    Size  Location     Type
 20430 ;;  count           1    wreg     unsigned char 
 20431 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 20432 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 20433 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 20434 ;;		 -> writeData@status(1), 
 20435 ;; Auto vars:     Size  Location     Type
 20436 ;;  count           1    3[BANK0 ] unsigned char 
 20437 ;; Return value:  Size  Location     Type
 20438 ;;                  1    wreg      void 
 20439 ;; Registers used:
 20440 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20441 ;; Tracked objects:
 20442 ;;		On entry : 0/0
 20443 ;;		On exit  : 0/0
 20444 ;;		Unchanged: 0/0
 20445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20447 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20448 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20449 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20450 ;;Total ram usage:        4 bytes
 20451 ;; Hardware stack levels used:    1
 20452 ;; Hardware stack levels required when called:    5
 20453 ;; This function calls:
 20454 ;;		_I2C1_WaitForLastPacketToComplete
 20455 ;; This function is called by:
 20456 ;;		_I2C1_MasterWrite
 20457 ;;		_I2C1_MasterRead
 20458 ;; This function uses a non-reentrant model
 20459 ;;
 20460                           
 20461                           
 20462                           ;psect for function _I2C1_MasterTRBInsert
 20463  156C                     _I2C1_MasterTRBInsert:	
 20464                           
 20465                           ;incstack = 0
 20466                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20467                           ;I2C1_MasterTRBInsert@count stored from wreg
 20468  156C  0140               	movlb	0	; select bank0
 20469  156D  00A3               	movwf	I2C1_MasterTRBInsert@count
 20470                           
 20471                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 20472  156E  0141               	movlb	1	; select bank1
 20473  156F  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 20474  1570  2DAE               	goto	l7053
 20475                           
 20476                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 20477  1571  3002               	movlw	2
 20478  1572  0140               	movlb	0	; select bank0
 20479  1573  00A2               	movwf	??_I2C1_MasterTRBInsert
 20480  1574  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20481  1575  0086               	movwf	6
 20482  1576  0187               	clrf	7
 20483  1577  0822               	movf	??_I2C1_MasterTRBInsert,w
 20484  1578  0081               	movwf	1
 20485                           
 20486                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 20487  1579  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 20488  157A  00A2               	movwf	??_I2C1_MasterTRBInsert
 20489  157B  0141               	movlb	1	; select bank1
 20490  157C  0A20               	incf	_i2c1_object^(0+128),w
 20491  157D  0086               	movwf	6
 20492  157E  3001               	movlw	1	; select bank2/3
 20493  157F  0087               	movwf	7
 20494  1580  0140               	movlb	0	; select bank0
 20495  1581  0822               	movf	??_I2C1_MasterTRBInsert,w
 20496  1582  0081               	movwf	1
 20497                           
 20498                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 20499  1583  0823               	movf	I2C1_MasterTRBInsert@count,w
 20500  1584  00A2               	movwf	??_I2C1_MasterTRBInsert
 20501  1585  0141               	movlb	1	; select bank1
 20502  1586  0820               	movf	_i2c1_object^(0+128),w
 20503  1587  0086               	movwf	6
 20504  1588  3001               	movlw	1	; select bank2/3
 20505  1589  0087               	movwf	7
 20506  158A  0140               	movlb	0	; select bank0
 20507  158B  0822               	movf	??_I2C1_MasterTRBInsert,w
 20508  158C  0081               	movwf	1
 20509                           
 20510                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 20511  158D  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20512  158E  00A2               	movwf	??_I2C1_MasterTRBInsert
 20513  158F  0141               	movlb	1	; select bank1
 20514  1590  0820               	movf	_i2c1_object^(0+128),w
 20515  1591  3E02               	addlw	2
 20516  1592  0086               	movwf	6
 20517  1593  3001               	movlw	1	; select bank2/3
 20518  1594  0087               	movwf	7
 20519  1595  0140               	movlb	0	; select bank0
 20520  1596  0822               	movf	??_I2C1_MasterTRBInsert,w
 20521  1597  0081               	movwf	1
 20522                           
 20523                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 20524  1598  3003               	movlw	3
 20525  1599  00A2               	movwf	??_I2C1_MasterTRBInsert
 20526  159A  0822               	movf	??_I2C1_MasterTRBInsert,w
 20527  159B  0141               	movlb	1	; select bank1
 20528  159C  07A0               	addwf	_i2c1_object^(0+128),f
 20529                           
 20530                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 20531  159D  0820               	movf	_i2c1_object^(0+128),w
 20532  159E  3A58               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 20533  159F  1D03               	skipz
 20534  15A0  2DA7               	goto	l7049
 20535                           
 20536                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 20537  15A1  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 20538  15A2  0140               	movlb	0	; select bank0
 20539  15A3  00A2               	movwf	??_I2C1_MasterTRBInsert
 20540  15A4  0822               	movf	??_I2C1_MasterTRBInsert,w
 20541  15A5  0141               	movlb	1	; select bank1
 20542  15A6  00A0               	movwf	_i2c1_object^(0+128)
 20543  15A7                     l7049:	
 20544                           
 20545                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 20546  15A7  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 20547                           
 20548                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 20549  15A8  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 20550  15A9  0620               	xorwf	_i2c1_object^(0+128),w
 20551  15AA  1D03               	skipz
 20552  15AB  2DB4               	goto	l7055
 20553                           
 20554                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 20555  15AC  1422               	bsf	(_i2c1_object^(0+128)+2),0
 20556  15AD  2DB4               	goto	l7055
 20557  15AE                     l7053:	
 20558                           
 20559                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20560  15AE  0140               	movlb	0	; select bank0
 20561  15AF  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20562  15B0  0086               	movwf	6
 20563  15B1  0187               	clrf	7
 20564  15B2  0181               	clrf	1
 20565  15B3  0A81               	incf	1,f
 20566  15B4                     l7055:	
 20567                           
 20568                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 20569  15B4  0140               	movlb	0	; select bank0
 20570  15B5  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20571  15B6  0086               	movwf	6
 20572  15B7  0187               	clrf	7
 20573  15B8  3002               	movlw	2
 20574  15B9  0601               	xorwf	1,w
 20575  15BA  1D03               	btfss	3,2
 20576  15BB  0008               	return
 20577                           
 20578                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 20579  15BC  319E  266F         	fcall	_I2C1_WaitForLastPacketToComplete
 20580                           
 20581                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 20582  15BE  014E               	movlb	14	; select bank14
 20583  15BF  140F               	bsf	15,0	;volatile
 20584  15C0  0008               	return
 20585  15C1                     __end_of_I2C1_MasterTRBInsert:	
 20586                           
 20587                           	psect	text69
 20588  1E6F                     __ptext69:	
 20589 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 20590 ;; Defined at:
 20591 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 20592 ;; Parameters:    Size  Location     Type
 20593 ;;		None
 20594 ;; Auto vars:     Size  Location     Type
 20595 ;;		None
 20596 ;; Return value:  Size  Location     Type
 20597 ;;                  1    wreg      void 
 20598 ;; Registers used:
 20599 ;;		wreg, status,2, status,0
 20600 ;; Tracked objects:
 20601 ;;		On entry : 0/0
 20602 ;;		On exit  : 0/0
 20603 ;;		Unchanged: 0/0
 20604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20609 ;;Total ram usage:        0 bytes
 20610 ;; Hardware stack levels used:    1
 20611 ;; Hardware stack levels required when called:    4
 20612 ;; This function calls:
 20613 ;;		Nothing
 20614 ;; This function is called by:
 20615 ;;		_I2C1_MasterTRBInsert
 20616 ;; This function uses a non-reentrant model
 20617 ;;
 20618                           
 20619                           
 20620                           ;psect for function _I2C1_WaitForLastPacketToComplete
 20621  1E6F                     _I2C1_WaitForLastPacketToComplete:	
 20622  1E6F                     l7037:	
 20623                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 20624                           
 20625                           ;incstack = 0
 20626                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 20627                           
 20628                           
 20629                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 20630  1E6F  0141               	movlb	1	; select bank1
 20631  1E70  0844               	movf	_i2c1_state^(0+128),w
 20632  1E71  1903               	btfsc	3,2
 20633  1E72  0008               	return
 20634  1E73  2E6F               	goto	l7037
 20635  1E74                     __end_of_I2C1_WaitForLastPacketToComplete:	
 20636                           
 20637                           	psect	text70
 20638  128A                     __ptext70:	
 20639 ;; *************** function ___lwmod *****************
 20640 ;; Defined at:
 20641 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 20642 ;; Parameters:    Size  Location     Type
 20643 ;;  divisor         2    8[BANK0 ] unsigned int 
 20644 ;;  dividend        2   10[BANK0 ] unsigned int 
 20645 ;; Auto vars:     Size  Location     Type
 20646 ;;  counter         1   13[BANK0 ] unsigned char 
 20647 ;; Return value:  Size  Location     Type
 20648 ;;                  2    8[BANK0 ] unsigned int 
 20649 ;; Registers used:
 20650 ;;		wreg, status,2, status,0
 20651 ;; Tracked objects:
 20652 ;;		On entry : 0/0
 20653 ;;		On exit  : 0/0
 20654 ;;		Unchanged: 0/0
 20655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20658 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20659 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20660 ;;Total ram usage:        6 bytes
 20661 ;; Hardware stack levels used:    1
 20662 ;; Hardware stack levels required when called:    4
 20663 ;; This function calls:
 20664 ;;		Nothing
 20665 ;; This function is called by:
 20666 ;;		_TM1650_fastPrintNum
 20667 ;; This function uses a non-reentrant model
 20668 ;;
 20669                           
 20670                           
 20671                           ;psect for function ___lwmod
 20672  128A                     ___lwmod:	
 20673                           
 20674                           ;incstack = 0
 20675                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 20676  128A  0140               	movlb	0	; select bank0
 20677  128B  0828               	movf	___lwmod@divisor,w
 20678  128C  0429               	iorwf	___lwmod@divisor+1,w
 20679  128D  1903               	btfsc	3,2
 20680  128E  2AB2               	goto	l4905
 20681  128F  01AD               	clrf	___lwmod@counter
 20682  1290  0AAD               	incf	___lwmod@counter,f
 20683  1291                     l4895:	
 20684  1291  1BA9               	btfsc	___lwmod@divisor+1,7
 20685  1292  2A9D               	goto	l4897
 20686  1293  3001               	movlw	1
 20687  1294                     u3605:	
 20688  1294  35A8               	lslf	___lwmod@divisor,f
 20689  1295  0DA9               	rlf	___lwmod@divisor+1,f
 20690  1296  0B89               	decfsz	9,f
 20691  1297  2A94               	goto	u3605
 20692  1298  3001               	movlw	1
 20693  1299  00AC               	movwf	??___lwmod
 20694  129A  082C               	movf	??___lwmod,w
 20695  129B  07AD               	addwf	___lwmod@counter,f
 20696  129C  2A91               	goto	l4895
 20697  129D                     l4897:	
 20698  129D  0829               	movf	___lwmod@divisor+1,w
 20699  129E  022B               	subwf	___lwmod@dividend+1,w
 20700  129F  1D03               	skipz
 20701  12A0  2AA3               	goto	u3625
 20702  12A1  0828               	movf	___lwmod@divisor,w
 20703  12A2  022A               	subwf	___lwmod@dividend,w
 20704  12A3                     u3625:	
 20705  12A3  1C03               	skipc
 20706  12A4  2AA9               	goto	l4901
 20707  12A5  0828               	movf	___lwmod@divisor,w
 20708  12A6  02AA               	subwf	___lwmod@dividend,f
 20709  12A7  0829               	movf	___lwmod@divisor+1,w
 20710  12A8  3BAB               	subwfb	___lwmod@dividend+1,f
 20711  12A9                     l4901:	
 20712  12A9  3001               	movlw	1
 20713  12AA                     u3635:	
 20714  12AA  36A9               	lsrf	___lwmod@divisor+1,f
 20715  12AB  0CA8               	rrf	___lwmod@divisor,f
 20716  12AC  0B89               	decfsz	9,f
 20717  12AD  2AAA               	goto	u3635
 20718  12AE  3001               	movlw	1
 20719  12AF  02AD               	subwf	___lwmod@counter,f
 20720  12B0  1D03               	btfss	3,2
 20721  12B1  2A9D               	goto	l4897
 20722  12B2                     l4905:	
 20723  12B2  082B               	movf	___lwmod@dividend+1,w
 20724  12B3  00A9               	movwf	?___lwmod+1
 20725  12B4  082A               	movf	___lwmod@dividend,w
 20726  12B5  00A8               	movwf	?___lwmod
 20727  12B6  0008               	return
 20728  12B7                     __end_of___lwmod:	
 20729                           
 20730                           	psect	text71
 20731  1695                     __ptext71:	
 20732 ;; *************** function _CONTROL_BEAT *****************
 20733 ;; Defined at:
 20734 ;;		line 212 in file "controller.c"
 20735 ;; Parameters:    Size  Location     Type
 20736 ;;		None
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;  i               1    2[BANK0 ] volatile unsigned char 
 20739 ;; Return value:  Size  Location     Type
 20740 ;;                  1    wreg      _Bool 
 20741 ;; Registers used:
 20742 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20743 ;; Tracked objects:
 20744 ;;		On entry : 0/0
 20745 ;;		On exit  : 0/0
 20746 ;;		Unchanged: 0/0
 20747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20751 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20752 ;;Total ram usage:        2 bytes
 20753 ;; Hardware stack levels used:    1
 20754 ;; Hardware stack levels required when called:    5
 20755 ;; This function calls:
 20756 ;;		_BUTTONS_isHeld
 20757 ;; This function is called by:
 20758 ;;		_CONTROLLER_task
 20759 ;; This function uses a non-reentrant model
 20760 ;;
 20761                           
 20762                           
 20763                           ;psect for function _CONTROL_BEAT
 20764  1695                     _CONTROL_BEAT:	
 20765                           
 20766                           ;controller.c: 214:     if(BUTTONS_isHeld(enter) && !enterPressed){
 20767                           
 20768                           ;incstack = 0
 20769                           ; Regs used in _CONTROL_BEAT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20770  1695  0141               	movlb	1	; select bank1
 20771  1696  083B               	movf	_enter^(0+128),w
 20772  1697  319F  2744  3196   	fcall	_BUTTONS_isHeld
 20773  169A  3A00               	xorlw	0
 20774  169B  1903               	skipnz
 20775  169C  2EAE               	goto	l1106
 20776  169D  0141               	movlb	1	; select bank1
 20777  169E  0837               	movf	_enterPressed^(0+128),w
 20778  169F  1D03               	btfss	3,2
 20779  16A0  2EAE               	goto	l1106
 20780                           
 20781                           ;controller.c: 215:         beatHold = !beatHold;
 20782  16A1  0832               	movf	_beatHold^(0+128),w
 20783  16A2  1D03               	btfss	3,2
 20784  16A3  2EA6               	goto	u7900
 20785  16A4  3001               	movlw	1
 20786  16A5  2EA7               	goto	u7910
 20787  16A6                     u7900:	
 20788  16A6  3000               	movlw	0
 20789  16A7                     u7910:	
 20790  16A7  0140               	movlb	0	; select bank0
 20791  16A8  00A1               	movwf	??_CONTROL_BEAT
 20792  16A9  0821               	movf	??_CONTROL_BEAT,w
 20793  16AA  0141               	movlb	1	; select bank1
 20794  16AB  00B2               	movwf	_beatHold^(0+128)
 20795                           
 20796                           ;controller.c: 216:         enterPressed = 1;
 20797  16AC  01B7               	clrf	_enterPressed^(0+128)
 20798  16AD  0AB7               	incf	_enterPressed^(0+128),f
 20799  16AE                     l1106:	
 20800                           ;controller.c: 217:     }
 20801                           
 20802                           
 20803                           ;controller.c: 219:     if (upState) {
 20804  16AE  0141               	movlb	1	; select bank1
 20805  16AF  0836               	movf	_upState^(0+128),w
 20806  16B0  1903               	btfsc	3,2
 20807  16B1  2ECD               	goto	l8067
 20808                           
 20809                           ;controller.c: 220:         if(beatBrightness < 9){
 20810  16B2  3009               	movlw	9
 20811  16B3  026F               	subwf	_beatBrightness^(0+128),w
 20812  16B4  1803               	skipnc
 20813  16B5  2EBD               	goto	l8061
 20814                           
 20815                           ;controller.c: 221:             beatBrightness++;
 20816  16B6  3001               	movlw	1
 20817  16B7  0140               	movlb	0	; select bank0
 20818  16B8  00A1               	movwf	??_CONTROL_BEAT
 20819  16B9  0821               	movf	??_CONTROL_BEAT,w
 20820  16BA  0141               	movlb	1	; select bank1
 20821  16BB  07EF               	addwf	_beatBrightness^(0+128),f
 20822                           
 20823                           ;controller.c: 222:         } else {
 20824  16BC  2ECB               	goto	l1109
 20825  16BD                     l8061:	
 20826                           
 20827                           ;controller.c: 223:             beatBrightness = 9;
 20828  16BD  3009               	movlw	9
 20829  16BE  0140               	movlb	0	; select bank0
 20830  16BF  00A1               	movwf	??_CONTROL_BEAT
 20831  16C0  0821               	movf	??_CONTROL_BEAT,w
 20832  16C1  0141               	movlb	1	; select bank1
 20833  16C2  00EF               	movwf	_beatBrightness^(0+128)
 20834  16C3  2ECB               	goto	l1109
 20835  16C4                     l8069:	
 20836                           
 20837                           ;controller.c: 227:         if(beatBrightness > 0){
 20838  16C4  086F               	movf	_beatBrightness^(0+128),w
 20839  16C5  1903               	btfsc	3,2
 20840  16C6  2ECA               	goto	l8073
 20841                           
 20842                           ;controller.c: 228:             beatBrightness--;
 20843  16C7  3001               	movlw	1
 20844  16C8  02EF               	subwf	_beatBrightness^(0+128),f
 20845                           
 20846                           ;controller.c: 229:         } else {
 20847  16C9  2ECB               	goto	l1109
 20848  16CA                     l8073:	
 20849                           
 20850                           ;controller.c: 230:             beatBrightness = 0;
 20851  16CA  01EF               	clrf	_beatBrightness^(0+128)
 20852  16CB                     l1109:	
 20853                           ;controller.c: 224:         }
 20854                           
 20855                           
 20856                           ;controller.c: 225:         return 1;
 20857  16CB  3001               	movlw	1
 20858  16CC  0008               	return
 20859  16CD                     l8067:	
 20860  16CD  0835               	movf	_downState^(0+128),w
 20861  16CE  1D03               	btfss	3,2
 20862  16CF  2EC4               	goto	l8069
 20863                           
 20864                           ;controller.c: 235:     if(enterState && currentSelection == MODE_BEAT_FADE){
 20865  16D0  0833               	movf	_enterState^(0+128),w
 20866  16D1  1903               	btfsc	3,2
 20867  16D2  2EE0               	goto	l8087
 20868  16D3  3004               	movlw	4
 20869  16D4  0639               	xorwf	_currentSelection^(0+128),w
 20870  16D5  1D03               	btfss	3,2
 20871  16D6  2EE0               	goto	l8087
 20872                           
 20873                           ;controller.c: 236:         currentSelection = MODE_BEAT_CONTINUOUS;
 20874  16D7  3005               	movlw	5
 20875  16D8  0140               	movlb	0	; select bank0
 20876  16D9  00A1               	movwf	??_CONTROL_BEAT
 20877  16DA  0821               	movf	??_CONTROL_BEAT,w
 20878  16DB  0141               	movlb	1	; select bank1
 20879  16DC  00B9               	movwf	_currentSelection^(0+128)
 20880                           
 20881                           ;controller.c: 237:         volatile uint8_t i = 0;
 20882  16DD  0140               	movlb	0	; select bank0
 20883  16DE  01A2               	clrf	CONTROL_BEAT@i	;volatile
 20884                           
 20885                           ;controller.c: 239:     } else if(enterState && currentSelection == MODE_BEAT_STROBE){
 20886  16DF  0008               	return
 20887  16E0                     l8087:	
 20888  16E0  0833               	movf	_enterState^(0+128),w
 20889  16E1  1903               	btfsc	3,2
 20890  16E2  2EED               	goto	l8093
 20891  16E3  0339               	decf	_currentSelection^(0+128),w
 20892  16E4  1D03               	btfss	3,2
 20893  16E5  2EED               	goto	l8093
 20894                           
 20895                           ;controller.c: 240:         currentSelection = MODE_BEAT_FADE;
 20896  16E6  3004               	movlw	4
 20897  16E7  0140               	movlb	0	; select bank0
 20898  16E8  00A1               	movwf	??_CONTROL_BEAT
 20899  16E9  0821               	movf	??_CONTROL_BEAT,w
 20900  16EA  0141               	movlb	1	; select bank1
 20901  16EB  00B9               	movwf	_currentSelection^(0+128)
 20902                           
 20903                           ;controller.c: 241:     } else if(enterState && currentSelection == MODE_BEAT_CONTINUOUS
      +                          ){
 20904  16EC  0008               	return
 20905  16ED                     l8093:	
 20906  16ED  0833               	movf	_enterState^(0+128),w
 20907  16EE  1903               	btfsc	3,2
 20908  16EF  2EFB               	goto	l8099
 20909  16F0  3005               	movlw	5
 20910  16F1  0639               	xorwf	_currentSelection^(0+128),w
 20911  16F2  1D03               	btfss	3,2
 20912  16F3  2EFB               	goto	l8099
 20913                           
 20914                           ;controller.c: 242:         currentSelection = MODE_BEAT_MIXED;
 20915  16F4  3006               	movlw	6
 20916  16F5  0140               	movlb	0	; select bank0
 20917  16F6  00A1               	movwf	??_CONTROL_BEAT
 20918  16F7  0821               	movf	??_CONTROL_BEAT,w
 20919  16F8  0141               	movlb	1	; select bank1
 20920  16F9  00B9               	movwf	_currentSelection^(0+128)
 20921                           
 20922                           ;controller.c: 243:     } else if(enterState && currentSelection == MODE_BEAT_MIXED){
 20923  16FA  0008               	return
 20924  16FB                     l8099:	
 20925  16FB  0833               	movf	_enterState^(0+128),w
 20926  16FC  1903               	btfsc	3,2
 20927  16FD  0008               	return
 20928  16FE  3006               	movlw	6
 20929  16FF  0639               	xorwf	_currentSelection^(0+128),w
 20930  1700  1D03               	btfss	3,2
 20931  1701  0008               	return
 20932                           
 20933                           ;controller.c: 244:         currentSelection = MODE_BEAT_STROBE;
 20934  1702  01B9               	clrf	_currentSelection^(0+128)
 20935  1703  0AB9               	incf	_currentSelection^(0+128),f
 20936  1704  0008               	return
 20937  1705                     __end_of_CONTROL_BEAT:	
 20938                           
 20939                           	psect	text72
 20940  1F44                     __ptext72:	
 20941 ;; *************** function _BUTTONS_isHeld *****************
 20942 ;; Defined at:
 20943 ;;		line 106 in file "buttons.c"
 20944 ;; Parameters:    Size  Location     Type
 20945 ;;  button          1    wreg     PTR struct .
 20946 ;;		 -> buttons(32), NULL(0), 
 20947 ;; Auto vars:     Size  Location     Type
 20948 ;;  button          1    0[BANK0 ] PTR struct .
 20949 ;;		 -> buttons(32), NULL(0), 
 20950 ;; Return value:  Size  Location     Type
 20951 ;;                  1    wreg      _Bool 
 20952 ;; Registers used:
 20953 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20954 ;; Tracked objects:
 20955 ;;		On entry : 0/0
 20956 ;;		On exit  : 0/0
 20957 ;;		Unchanged: 0/0
 20958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20962 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20963 ;;Total ram usage:        1 bytes
 20964 ;; Hardware stack levels used:    1
 20965 ;; Hardware stack levels required when called:    4
 20966 ;; This function calls:
 20967 ;;		Nothing
 20968 ;; This function is called by:
 20969 ;;		_CONTROL_DMX
 20970 ;;		_CONTROL_BEAT
 20971 ;;		_CONTROL_MANUAL
 20972 ;; This function uses a non-reentrant model
 20973 ;;
 20974                           
 20975                           
 20976                           ;psect for function _BUTTONS_isHeld
 20977  1F44                     _BUTTONS_isHeld:	
 20978                           
 20979                           ;incstack = 0
 20980                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 20981                           ;BUTTONS_isHeld@button stored from wreg
 20982  1F44  0140               	movlb	0	; select bank0
 20983  1F45  00A0               	movwf	BUTTONS_isHeld@button
 20984                           
 20985                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 20986  1F46  0820               	movf	BUTTONS_isHeld@button,w
 20987  1F47  3E07               	addlw	7
 20988  1F48  0086               	movwf	6
 20989  1F49  3001               	movlw	1	; select bank2/3
 20990  1F4A  0087               	movwf	7
 20991  1F4B  3003               	movlw	3
 20992  1F4C  0601               	xorwf	1,w
 20993  1F4D  1D03               	btfss	3,2
 20994  1F4E  2F51               	goto	l7673
 20995                           
 20996                           ;buttons.c: 108:         return 1;
 20997  1F4F  3001               	movlw	1
 20998  1F50  0008               	return
 20999  1F51                     l7673:	
 21000                           
 21001                           ;buttons.c: 111:     return 0;
 21002  1F51  3000               	movlw	0
 21003  1F52  0008               	return
 21004  1F53                     __end_of_BUTTONS_isHeld:	
 21005                           
 21006                           	psect	text73
 21007  1F9A                     __ptext73:	
 21008 ;; *************** function _BUTTONS_isClicked *****************
 21009 ;; Defined at:
 21010 ;;		line 97 in file "buttons.c"
 21011 ;; Parameters:    Size  Location     Type
 21012 ;;  button          1    wreg     PTR struct .
 21013 ;;		 -> buttons(32), NULL(0), 
 21014 ;; Auto vars:     Size  Location     Type
 21015 ;;  button          1    0[BANK0 ] PTR struct .
 21016 ;;		 -> buttons(32), NULL(0), 
 21017 ;; Return value:  Size  Location     Type
 21018 ;;                  1    wreg      _Bool 
 21019 ;; Registers used:
 21020 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21021 ;; Tracked objects:
 21022 ;;		On entry : 0/0
 21023 ;;		On exit  : 0/0
 21024 ;;		Unchanged: 0/0
 21025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21029 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21030 ;;Total ram usage:        1 bytes
 21031 ;; Hardware stack levels used:    1
 21032 ;; Hardware stack levels required when called:    4
 21033 ;; This function calls:
 21034 ;;		Nothing
 21035 ;; This function is called by:
 21036 ;;		_CONTROLLER_task
 21037 ;; This function uses a non-reentrant model
 21038 ;;
 21039                           
 21040                           
 21041                           ;psect for function _BUTTONS_isClicked
 21042  1F9A                     _BUTTONS_isClicked:	
 21043                           
 21044                           ;incstack = 0
 21045                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 21046                           ;BUTTONS_isClicked@button stored from wreg
 21047  1F9A  0140               	movlb	0	; select bank0
 21048  1F9B  00A0               	movwf	BUTTONS_isClicked@button
 21049                           
 21050                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 21051  1F9C  0820               	movf	BUTTONS_isClicked@button,w
 21052  1F9D  3E07               	addlw	7
 21053  1F9E  0086               	movwf	6
 21054  1F9F  3001               	movlw	1	; select bank2/3
 21055  1FA0  0087               	movwf	7
 21056  1FA1  0301               	decf	1,w
 21057  1FA2  1D03               	btfss	3,2
 21058  1FA3  2FAC               	goto	l7909
 21059                           
 21060                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 21061  1FA4  0820               	movf	BUTTONS_isClicked@button,w
 21062  1FA5  3E07               	addlw	7
 21063  1FA6  0086               	movwf	6
 21064  1FA7  3001               	movlw	1	; select bank2/3
 21065  1FA8  0087               	movwf	7
 21066  1FA9  0181               	clrf	1
 21067                           
 21068                           ;buttons.c: 100:         return 1;
 21069  1FAA  3001               	movlw	1
 21070  1FAB  0008               	return
 21071  1FAC                     l7909:	
 21072                           
 21073                           ;buttons.c: 103:     return 0;
 21074  1FAC  3000               	movlw	0
 21075  1FAD  0008               	return
 21076  1FAE                     __end_of_BUTTONS_isClicked:	
 21077                           
 21078                           	psect	text74
 21079  1E7A                     __ptext74:	
 21080 ;; *************** function _CLOCK_init *****************
 21081 ;; Defined at:
 21082 ;;		line 8 in file "clock.c"
 21083 ;; Parameters:    Size  Location     Type
 21084 ;;		None
 21085 ;; Auto vars:     Size  Location     Type
 21086 ;;		None
 21087 ;; Return value:  Size  Location     Type
 21088 ;;                  1    wreg      void 
 21089 ;; Registers used:
 21090 ;;		wreg, status,2, status,0, pclath, cstack
 21091 ;; Tracked objects:
 21092 ;;		On entry : 0/0
 21093 ;;		On exit  : 0/0
 21094 ;;		Unchanged: 0/0
 21095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21100 ;;Total ram usage:        0 bytes
 21101 ;; Hardware stack levels used:    1
 21102 ;; Hardware stack levels required when called:    5
 21103 ;; This function calls:
 21104 ;;		_TMR0_SetInterruptHandler
 21105 ;; This function is called by:
 21106 ;;		_main
 21107 ;; This function uses a non-reentrant model
 21108 ;;
 21109                           
 21110                           
 21111                           ;psect for function _CLOCK_init
 21112  1E7A                     _CLOCK_init:	
 21113                           
 21114                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 21115                           
 21116                           ;incstack = 0
 21117                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 21118  1E7A  3074               	movlw	low _CLOCK_timerCallback
 21119  1E7B  0140               	movlb	0	; select bank0
 21120  1E7C  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 21121  1E7D  301E               	movlw	high _CLOCK_timerCallback
 21122  1E7E  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 21123  1E7F  319E  26A6         	fcall	_TMR0_SetInterruptHandler
 21124  1E81  0008               	return
 21125  1E82                     __end_of_CLOCK_init:	
 21126                           
 21127                           	psect	text75
 21128  1EA6                     __ptext75:	
 21129 ;; *************** function _TMR0_SetInterruptHandler *****************
 21130 ;; Defined at:
 21131 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 21132 ;; Parameters:    Size  Location     Type
 21133 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 21134 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 21135 ;; Auto vars:     Size  Location     Type
 21136 ;;		None
 21137 ;; Return value:  Size  Location     Type
 21138 ;;                  1    wreg      void 
 21139 ;; Registers used:
 21140 ;;		wreg
 21141 ;; Tracked objects:
 21142 ;;		On entry : 0/0
 21143 ;;		On exit  : 0/0
 21144 ;;		Unchanged: 0/0
 21145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21150 ;;Total ram usage:        2 bytes
 21151 ;; Hardware stack levels used:    1
 21152 ;; Hardware stack levels required when called:    4
 21153 ;; This function calls:
 21154 ;;		Nothing
 21155 ;; This function is called by:
 21156 ;;		_TMR0_Initialize
 21157 ;;		_CLOCK_init
 21158 ;; This function uses a non-reentrant model
 21159 ;;
 21160                           
 21161                           
 21162                           ;psect for function _TMR0_SetInterruptHandler
 21163  1EA6                     _TMR0_SetInterruptHandler:	
 21164                           
 21165                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 21166                           
 21167                           ;incstack = 0
 21168                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 21169  1EA6  0140               	movlb	0	; select bank0
 21170  1EA7  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 21171  1EA8  0142               	movlb	2	; select bank2
 21172  1EA9  00DB               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 21173  1EAA  0140               	movlb	0	; select bank0
 21174  1EAB  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 21175  1EAC  0142               	movlb	2	; select bank2
 21176  1EAD  00DA               	movwf	_TMR0_InterruptHandler^(0+256)
 21177  1EAE  0008               	return
 21178  1EAF                     __end_of_TMR0_SetInterruptHandler:	
 21179                           
 21180                           	psect	text76
 21181  0DC9                     __ptext76:	
 21182 ;; *************** function _BUTTONS_task *****************
 21183 ;; Defined at:
 21184 ;;		line 56 in file "buttons.c"
 21185 ;; Parameters:    Size  Location     Type
 21186 ;;		None
 21187 ;; Auto vars:     Size  Location     Type
 21188 ;;  btn             1    8[BANK0 ] PTR struct .
 21189 ;;		 -> buttons(32), 
 21190 ;;  i               1    5[BANK0 ] unsigned char 
 21191 ;;  time            2    6[BANK0 ] unsigned short 
 21192 ;; Return value:  Size  Location     Type
 21193 ;;                  1    wreg      void 
 21194 ;; Registers used:
 21195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21196 ;; Tracked objects:
 21197 ;;		On entry : 0/0
 21198 ;;		On exit  : 0/0
 21199 ;;		Unchanged: 0/0
 21200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21202 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21203 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21204 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21205 ;;Total ram usage:        7 bytes
 21206 ;; Hardware stack levels used:    1
 21207 ;; Hardware stack levels required when called:    5
 21208 ;; This function calls:
 21209 ;;		_CLOCK_getTime
 21210 ;; This function is called by:
 21211 ;;		_main
 21212 ;; This function uses a non-reentrant model
 21213 ;;
 21214                           
 21215                           
 21216                           ;psect for function _BUTTONS_task
 21217  0DC9                     _BUTTONS_task:	
 21218                           
 21219                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 21220                           
 21221                           ;incstack = 0
 21222                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21223  0DC9  319E  269D  318D   	fcall	_CLOCK_getTime
 21224  0DCC  0140               	movlb	0	; select bank0
 21225  0DCD  0821               	movf	?_CLOCK_getTime+1,w
 21226  0DCE  00A7               	movwf	BUTTONS_task@time+1
 21227  0DCF  0820               	movf	?_CLOCK_getTime,w
 21228  0DD0  00A6               	movwf	BUTTONS_task@time
 21229                           
 21230                           ;buttons.c: 61:     if (time - lastTime < 10)
 21231  0DD1  0142               	movlb	2	; select bank2
 21232  0DD2  0848               	movf	_lastTime^(0+256),w
 21233  0DD3  0140               	movlb	0	; select bank0
 21234  0DD4  0226               	subwf	BUTTONS_task@time,w
 21235  0DD5  00A2               	movwf	??_BUTTONS_task
 21236  0DD6  0142               	movlb	2	; select bank2
 21237  0DD7  0849               	movf	(_lastTime+1)^(0+256),w
 21238  0DD8  0140               	movlb	0	; select bank0
 21239  0DD9  3B27               	subwfb	BUTTONS_task@time+1,w
 21240  0DDA  00A3               	movwf	??_BUTTONS_task+1
 21241  0DDB  3000               	movlw	0
 21242  0DDC  0223               	subwf	??_BUTTONS_task+1,w
 21243  0DDD  300A               	movlw	10
 21244  0DDE  1903               	skipnz
 21245  0DDF  0222               	subwf	??_BUTTONS_task,w
 21246  0DE0  1C03               	btfss	3,0
 21247  0DE1  0008               	return
 21248                           
 21249                           ;buttons.c: 64:     lastTime = time;
 21250  0DE2  0827               	movf	BUTTONS_task@time+1,w
 21251  0DE3  0142               	movlb	2	; select bank2
 21252  0DE4  00C9               	movwf	(_lastTime+1)^(0+256)
 21253  0DE5  0140               	movlb	0	; select bank0
 21254  0DE6  0826               	movf	BUTTONS_task@time,w
 21255  0DE7  0142               	movlb	2	; select bank2
 21256  0DE8  00C8               	movwf	_lastTime^(0+256)
 21257                           
 21258                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 21259  0DE9  0140               	movlb	0	; select bank0
 21260  0DEA  01A5               	clrf	BUTTONS_task@i
 21261  0DEB                     l8377:	
 21262                           
 21263                           ;buttons.c: 68:         button_t* btn = buttons + i;
 21264  0DEB  0825               	movf	BUTTONS_task@i,w
 21265  0DEC  00A2               	movwf	??_BUTTONS_task
 21266  0DED  3002               	movlw	2
 21267  0DEE                     u8345:	
 21268  0DEE  35A2               	lslf	??_BUTTONS_task,f
 21269  0DEF  3EFF               	addlw	-1
 21270  0DF0  1D03               	skipz
 21271  0DF1  2DEE               	goto	u8345
 21272  0DF2  3522               	lslf	??_BUTTONS_task,w
 21273  0DF3  3EC0               	addlw	(low (_buttons| (0+256)))& (0+255)
 21274  0DF4  00A3               	movwf	??_BUTTONS_task+1
 21275  0DF5  0823               	movf	??_BUTTONS_task+1,w
 21276  0DF6  00A8               	movwf	BUTTONS_task@btn
 21277                           
 21278                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 21279  0DF7  0828               	movf	BUTTONS_task@btn,w
 21280  0DF8  0086               	movwf	6
 21281  0DF9  3001               	movlw	1	; select bank2/3
 21282  0DFA  0087               	movwf	7
 21283  0DFB  3F40               	moviw [0]fsr1
 21284  0DFC  00A2               	movwf	??_BUTTONS_task
 21285  0DFD  3F41               	moviw [1]fsr1
 21286  0DFE  00A3               	movwf	??_BUTTONS_task+1
 21287  0DFF  0822               	movf	??_BUTTONS_task,w
 21288  0E00  0086               	movwf	6
 21289  0E01  0823               	movf	??_BUTTONS_task+1,w
 21290  0E02  0087               	movwf	7
 21291  0E03  3001               	movlw	1
 21292  0E04  00A4               	movwf	??_BUTTONS_task+2
 21293  0E05  0828               	movf	BUTTONS_task@btn,w
 21294  0E06  3E02               	addlw	2
 21295  0E07  0084               	movwf	4
 21296  0E08  3001               	movlw	1	; select bank2/3
 21297  0E09  0085               	movwf	5
 21298  0E0A  0A00               	incf	0,w
 21299  0E0B  2E0D               	goto	u8354
 21300  0E0C                     u8355:	
 21301  0E0C  35A4               	lslf	??_BUTTONS_task+2,f
 21302  0E0D                     u8354:	
 21303  0E0D  0B89               	decfsz	9,f
 21304  0E0E  2E0C               	goto	u8355
 21305  0E0F  0824               	movf	??_BUTTONS_task+2,w
 21306  0E10  0501               	andwf	1,w
 21307  0E11  1D03               	btfss	3,2
 21308  0E12  2E2C               	goto	l8385
 21309                           
 21310                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 21311  0E13  0828               	movf	BUTTONS_task@btn,w
 21312  0E14  3E03               	addlw	3
 21313  0E15  0086               	movwf	6
 21314  0E16  3001               	movlw	1	; select bank2/3
 21315  0E17  0087               	movwf	7
 21316  0E18  0181               	clrf	1
 21317  0E19  0A81               	incf	1,f
 21318                           
 21319                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 21320  0E1A  0828               	movf	BUTTONS_task@btn,w
 21321  0E1B  3E07               	addlw	7
 21322  0E1C  0086               	movwf	6
 21323  0E1D  3001               	movlw	1	; select bank2/3
 21324  0E1E  0087               	movwf	7
 21325  0E1F  0801               	movf	1,w
 21326  0E20  1D03               	btfss	3,2
 21327  0E21  2E32               	goto	l909
 21328                           
 21329                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 21330  0E22  0828               	movf	BUTTONS_task@btn,w
 21331  0E23  3E05               	addlw	5
 21332  0E24  0086               	movwf	6
 21333  0E25  3001               	movlw	1	; select bank2/3
 21334  0E26  0087               	movwf	7
 21335  0E27  0826               	movf	BUTTONS_task@time,w
 21336  0E28  3FC0               	movwi [0]fsr1
 21337  0E29  0827               	movf	BUTTONS_task@time+1,w
 21338  0E2A  3FC1               	movwi [1]fsr1
 21339  0E2B  2E32               	goto	l909
 21340  0E2C                     l8385:	
 21341                           
 21342                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 21343  0E2C  0828               	movf	BUTTONS_task@btn,w
 21344  0E2D  3E03               	addlw	3
 21345  0E2E  0086               	movwf	6
 21346  0E2F  3001               	movlw	1	; select bank2/3
 21347  0E30  0087               	movwf	7
 21348  0E31  0181               	clrf	1
 21349  0E32                     l909:	
 21350                           ;buttons.c: 78:         }
 21351                           
 21352                           
 21353                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 21354  0E32  0828               	movf	BUTTONS_task@btn,w
 21355  0E33  3E03               	addlw	3
 21356  0E34  0086               	movwf	6
 21357  0E35  3001               	movlw	1	; select bank2/3
 21358  0E36  0087               	movwf	7
 21359  0E37  0801               	movf	1,w
 21360  0E38  1D03               	btfss	3,2
 21361  0E39  2E4A               	goto	l8391
 21362  0E3A  0828               	movf	BUTTONS_task@btn,w
 21363  0E3B  3E04               	addlw	4
 21364  0E3C  0086               	movwf	6
 21365  0E3D  3001               	movlw	1	; select bank2/3
 21366  0E3E  0087               	movwf	7
 21367  0E3F  0301               	decf	1,w
 21368  0E40  1D03               	btfss	3,2
 21369  0E41  2E4A               	goto	l8391
 21370                           
 21371                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 21372  0E42  0828               	movf	BUTTONS_task@btn,w
 21373  0E43  3E07               	addlw	7
 21374  0E44  0086               	movwf	6
 21375  0E45  3001               	movlw	1	; select bank2/3
 21376  0E46  0087               	movwf	7
 21377  0E47  0181               	clrf	1
 21378  0E48  0A81               	incf	1,f
 21379                           
 21380                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 21381  0E49  2E97               	goto	l911
 21382  0E4A                     l8391:	
 21383  0E4A  0828               	movf	BUTTONS_task@btn,w
 21384  0E4B  3E03               	addlw	3
 21385  0E4C  0086               	movwf	6
 21386  0E4D  3001               	movlw	1	; select bank2/3
 21387  0E4E  0087               	movwf	7
 21388  0E4F  0301               	decf	1,w
 21389  0E50  1D03               	btfss	3,2
 21390  0E51  2E78               	goto	l8401
 21391  0E52  0828               	movf	BUTTONS_task@btn,w
 21392  0E53  3E04               	addlw	4
 21393  0E54  0086               	movwf	6
 21394  0E55  3001               	movlw	1	; select bank2/3
 21395  0E56  0087               	movwf	7
 21396  0E57  0301               	decf	1,w
 21397  0E58  1D03               	btfss	3,2
 21398  0E59  2E78               	goto	l8401
 21399                           
 21400                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 21401  0E5A  0828               	movf	BUTTONS_task@btn,w
 21402  0E5B  3E05               	addlw	5
 21403  0E5C  0086               	movwf	6
 21404  0E5D  3001               	movlw	1	; select bank2/3
 21405  0E5E  0087               	movwf	7
 21406  0E5F  3F40               	moviw [0]fsr1
 21407  0E60  0226               	subwf	BUTTONS_task@time,w
 21408  0E61  00A2               	movwf	??_BUTTONS_task
 21409  0E62  3F41               	moviw [1]fsr1
 21410  0E63  3B27               	subwfb	BUTTONS_task@time+1,w
 21411  0E64  00A3               	movwf	??_BUTTONS_task+1
 21412  0E65  3000               	movlw	0
 21413  0E66  0223               	subwf	??_BUTTONS_task+1,w
 21414  0E67  30C9               	movlw	201
 21415  0E68  1903               	skipnz
 21416  0E69  0222               	subwf	??_BUTTONS_task,w
 21417  0E6A  1C03               	skipc
 21418  0E6B  2E6E               	goto	l8399
 21419                           
 21420                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 21421  0E6C  3003               	movlw	3
 21422  0E6D  2E6F               	goto	L22
 21423  0E6E                     l8399:	
 21424                           ;buttons.c: 86:             } else {
 21425                           
 21426                           
 21427                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 21428  0E6E  3002               	movlw	2
 21429  0E6F                     L22:	
 21430  0E6F  00A2               	movwf	??_BUTTONS_task
 21431  0E70  0828               	movf	BUTTONS_task@btn,w
 21432  0E71  3E07               	addlw	7
 21433  0E72  0086               	movwf	6
 21434  0E73  3001               	movlw	1	; select bank2/3
 21435  0E74  0087               	movwf	7
 21436  0E75  0822               	movf	??_BUTTONS_task,w
 21437  0E76  0081               	movwf	1
 21438  0E77  2E97               	goto	l911
 21439  0E78                     l8401:	
 21440  0E78  0828               	movf	BUTTONS_task@btn,w
 21441  0E79  3E03               	addlw	3
 21442  0E7A  0086               	movwf	6
 21443  0E7B  3001               	movlw	1	; select bank2/3
 21444  0E7C  0087               	movwf	7
 21445  0E7D  0801               	movf	1,w
 21446  0E7E  1D03               	btfss	3,2
 21447  0E7F  2E97               	goto	l911
 21448  0E80  0828               	movf	BUTTONS_task@btn,w
 21449  0E81  3E04               	addlw	4
 21450  0E82  0086               	movwf	6
 21451  0E83  3001               	movlw	1	; select bank2/3
 21452  0E84  0087               	movwf	7
 21453  0E85  0301               	decf	1,w
 21454  0E86  1D03               	btfss	3,2
 21455  0E87  2E97               	goto	l911
 21456  0E88  0828               	movf	BUTTONS_task@btn,w
 21457  0E89  3E07               	addlw	7
 21458  0E8A  0086               	movwf	6
 21459  0E8B  3001               	movlw	1	; select bank2/3
 21460  0E8C  0087               	movwf	7
 21461  0E8D  3003               	movlw	3
 21462  0E8E  0601               	xorwf	1,w
 21463  0E8F  1D03               	btfss	3,2
 21464  0E90  2E97               	goto	l911
 21465                           
 21466                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 21467  0E91  0828               	movf	BUTTONS_task@btn,w
 21468  0E92  3E07               	addlw	7
 21469  0E93  0086               	movwf	6
 21470  0E94  3001               	movlw	1	; select bank2/3
 21471  0E95  0087               	movwf	7
 21472  0E96  0181               	clrf	1
 21473  0E97                     l911:	
 21474                           
 21475                           ;buttons.c: 93:         btn->lastState = btn->state;
 21476  0E97  0828               	movf	BUTTONS_task@btn,w
 21477  0E98  3E03               	addlw	3
 21478  0E99  0086               	movwf	6
 21479  0E9A  3001               	movlw	1	; select bank2/3
 21480  0E9B  0087               	movwf	7
 21481  0E9C  0801               	movf	1,w
 21482  0E9D  00A2               	movwf	??_BUTTONS_task
 21483  0E9E  0828               	movf	BUTTONS_task@btn,w
 21484  0E9F  3E04               	addlw	4
 21485  0EA0  0086               	movwf	6
 21486  0EA1  3001               	movlw	1	; select bank2/3
 21487  0EA2  0087               	movwf	7
 21488  0EA3  0822               	movf	??_BUTTONS_task,w
 21489  0EA4  0081               	movwf	1
 21490                           
 21491                           ;buttons.c: 94:     }
 21492  0EA5  3001               	movlw	1
 21493  0EA6  00A2               	movwf	??_BUTTONS_task
 21494  0EA7  0822               	movf	??_BUTTONS_task,w
 21495  0EA8  07A5               	addwf	BUTTONS_task@i,f
 21496  0EA9  3004               	movlw	4
 21497  0EAA  0225               	subwf	BUTTONS_task@i,w
 21498  0EAB  1803               	btfsc	3,0
 21499  0EAC  0008               	return
 21500  0EAD  2DEB               	goto	l8377
 21501  0EAE                     __end_of_BUTTONS_task:	
 21502                           
 21503                           	psect	text77
 21504  14CB                     __ptext77:	
 21505 ;; *************** function _BUTTONS_init *****************
 21506 ;; Defined at:
 21507 ;;		line 23 in file "buttons.c"
 21508 ;; Parameters:    Size  Location     Type
 21509 ;;		None
 21510 ;; Auto vars:     Size  Location     Type
 21511 ;;		None
 21512 ;; Return value:  Size  Location     Type
 21513 ;;                  1    wreg      void 
 21514 ;; Registers used:
 21515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21516 ;; Tracked objects:
 21517 ;;		On entry : 0/0
 21518 ;;		On exit  : 0/0
 21519 ;;		Unchanged: 0/0
 21520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21523 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21524 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21525 ;;Total ram usage:        1 bytes
 21526 ;; Hardware stack levels used:    1
 21527 ;; Hardware stack levels required when called:    5
 21528 ;; This function calls:
 21529 ;;		_GPIO_init
 21530 ;;		_init
 21531 ;; This function is called by:
 21532 ;;		_main
 21533 ;; This function uses a non-reentrant model
 21534 ;;
 21535                           
 21536                           
 21537                           ;psect for function _BUTTONS_init
 21538  14CB                     _BUTTONS_init:	
 21539                           
 21540                           ;buttons.c: 24:     menu = &buttons[0];
 21541                           
 21542                           ;incstack = 0
 21543                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21544  14CB  30C0               	movlw	(low (_buttons| (0+256)))& (0+255)
 21545  14CC  0140               	movlb	0	; select bank0
 21546  14CD  00A5               	movwf	??_BUTTONS_init
 21547  14CE  0825               	movf	??_BUTTONS_init,w
 21548  14CF  0141               	movlb	1	; select bank1
 21549  14D0  00BE               	movwf	_menu^(0+128)
 21550                           
 21551                           ;buttons.c: 25:     up = &buttons[1];
 21552  14D1  30C8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 21553  14D2  0140               	movlb	0	; select bank0
 21554  14D3  00A5               	movwf	??_BUTTONS_init
 21555  14D4  0825               	movf	??_BUTTONS_init,w
 21556  14D5  0141               	movlb	1	; select bank1
 21557  14D6  00BD               	movwf	_up^(0+128)
 21558                           
 21559                           ;buttons.c: 26:     down = &buttons[2];
 21560  14D7  30D0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 21561  14D8  0140               	movlb	0	; select bank0
 21562  14D9  00A5               	movwf	??_BUTTONS_init
 21563  14DA  0825               	movf	??_BUTTONS_init,w
 21564  14DB  0141               	movlb	1	; select bank1
 21565  14DC  00BC               	movwf	_down^(0+128)
 21566                           
 21567                           ;buttons.c: 27:     enter = &buttons[3];
 21568  14DD  30D8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 21569  14DE  0140               	movlb	0	; select bank0
 21570  14DF  00A5               	movwf	??_BUTTONS_init
 21571  14E0  0825               	movf	??_BUTTONS_init,w
 21572  14E1  0141               	movlb	1	; select bank1
 21573  14E2  00BB               	movwf	_enter^(0+128)
 21574                           
 21575                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 21576  14E3  300E               	movlw	14
 21577  14E4  0140               	movlb	0	; select bank0
 21578  14E5  00A0               	movwf	init@port
 21579  14E6  3000               	movlw	0
 21580  14E7  00A1               	movwf	init@port+1
 21581  14E8  3002               	movlw	2
 21582  14E9  00A5               	movwf	??_BUTTONS_init
 21583  14EA  0825               	movf	??_BUTTONS_init,w
 21584  14EB  00A2               	movwf	init@pin
 21585  14EC  0141               	movlb	1	; select bank1
 21586  14ED  083E               	movf	_menu^(0+128),w
 21587  14EE  3191  2143  3194   	fcall	_init
 21588                           
 21589                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 21590  14F1  300C               	movlw	12
 21591  14F2  0140               	movlb	0	; select bank0
 21592  14F3  00A0               	movwf	init@port
 21593  14F4  3000               	movlw	0
 21594  14F5  00A1               	movwf	init@port+1
 21595  14F6  3002               	movlw	2
 21596  14F7  00A5               	movwf	??_BUTTONS_init
 21597  14F8  0825               	movf	??_BUTTONS_init,w
 21598  14F9  00A2               	movwf	init@pin
 21599  14FA  0141               	movlb	1	; select bank1
 21600  14FB  083B               	movf	_enter^(0+128),w
 21601  14FC  3191  2143  3194   	fcall	_init
 21602                           
 21603                           ;buttons.c: 31:     init(down, &PORTC, 0);
 21604  14FF  300E               	movlw	14
 21605  1500  0140               	movlb	0	; select bank0
 21606  1501  00A0               	movwf	init@port
 21607  1502  3000               	movlw	0
 21608  1503  00A1               	movwf	init@port+1
 21609  1504  01A2               	clrf	init@pin
 21610  1505  0141               	movlb	1	; select bank1
 21611  1506  083C               	movf	_down^(0+128),w
 21612  1507  3191  2143  3194   	fcall	_init
 21613                           
 21614                           ;buttons.c: 32:     init(up, &PORTC, 1);
 21615  150A  300E               	movlw	14
 21616  150B  0140               	movlb	0	; select bank0
 21617  150C  00A0               	movwf	init@port
 21618  150D  3000               	movlw	0
 21619  150E  00A1               	movwf	init@port+1
 21620  150F  01A2               	clrf	init@pin
 21621  1510  0AA2               	incf	init@pin,f
 21622  1511  0141               	movlb	1	; select bank1
 21623  1512  083D               	movf	_up^(0+128),w
 21624  1513  3191  2143  3194   	fcall	_init
 21625                           
 21626                           ;buttons.c: 34:     GPIO_init();
 21627  1516  319F  2764         	fcall	_GPIO_init
 21628  1518  0008               	return
 21629  1519                     __end_of_BUTTONS_init:	
 21630                           
 21631                           	psect	text78
 21632  1143                     __ptext78:	
 21633 ;; *************** function _init *****************
 21634 ;; Defined at:
 21635 ;;		line 16 in file "buttons.c"
 21636 ;; Parameters:    Size  Location     Type
 21637 ;;  btn             1    wreg     PTR struct .
 21638 ;;		 -> buttons(32), NULL(0), 
 21639 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 21640 ;;		 -> PORTA(1), PORTC(1), 
 21641 ;;  pin             1    2[BANK0 ] unsigned char 
 21642 ;; Auto vars:     Size  Location     Type
 21643 ;;  btn             1    4[BANK0 ] PTR struct .
 21644 ;;		 -> buttons(32), NULL(0), 
 21645 ;; Return value:  Size  Location     Type
 21646 ;;                  1    wreg      void 
 21647 ;; Registers used:
 21648 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21649 ;; Tracked objects:
 21650 ;;		On entry : 0/0
 21651 ;;		On exit  : 0/0
 21652 ;;		Unchanged: 0/0
 21653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21654 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21657 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21658 ;;Total ram usage:        5 bytes
 21659 ;; Hardware stack levels used:    1
 21660 ;; Hardware stack levels required when called:    4
 21661 ;; This function calls:
 21662 ;;		Nothing
 21663 ;; This function is called by:
 21664 ;;		_BUTTONS_init
 21665 ;; This function uses a non-reentrant model
 21666 ;;
 21667                           
 21668                           
 21669                           ;psect for function _init
 21670  1143                     _init:	
 21671                           
 21672                           ;incstack = 0
 21673                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 21674                           ;init@btn stored from wreg
 21675  1143  0140               	movlb	0	; select bank0
 21676  1144  00A4               	movwf	init@btn
 21677                           
 21678                           ;buttons.c: 17:     btn->port = port;
 21679  1145  0824               	movf	init@btn,w
 21680  1146  0086               	movwf	6
 21681  1147  3001               	movlw	1	; select bank2/3
 21682  1148  0087               	movwf	7
 21683  1149  0820               	movf	init@port,w
 21684  114A  3FC0               	movwi [0]fsr1
 21685  114B  0821               	movf	init@port+1,w
 21686  114C  3FC1               	movwi [1]fsr1
 21687                           
 21688                           ;buttons.c: 18:     btn->pin = pin;
 21689  114D  0822               	movf	init@pin,w
 21690  114E  00A3               	movwf	??_init
 21691  114F  0824               	movf	init@btn,w
 21692  1150  3E02               	addlw	2
 21693  1151  0086               	movwf	6
 21694  1152  3001               	movlw	1	; select bank2/3
 21695  1153  0087               	movwf	7
 21696  1154  0823               	movf	??_init,w
 21697  1155  0081               	movwf	1
 21698                           
 21699                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 21700  1156  0824               	movf	init@btn,w
 21701  1157  3E03               	addlw	3
 21702  1158  0086               	movwf	6
 21703  1159  3001               	movlw	1	; select bank2/3
 21704  115A  0087               	movwf	7
 21705  115B  0181               	clrf	1
 21706                           
 21707                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 21708  115C  0824               	movf	init@btn,w
 21709  115D  3E07               	addlw	7
 21710  115E  0086               	movwf	6
 21711  115F  3001               	movlw	1	; select bank2/3
 21712  1160  0087               	movwf	7
 21713  1161  0181               	clrf	1
 21714  1162  0008               	return
 21715  1163                     __end_of_init:	
 21716                           
 21717                           	psect	text79
 21718  1F64                     __ptext79:	
 21719 ;; *************** function _GPIO_init *****************
 21720 ;; Defined at:
 21721 ;;		line 38 in file "buttons.c"
 21722 ;; Parameters:    Size  Location     Type
 21723 ;;		None
 21724 ;; Auto vars:     Size  Location     Type
 21725 ;;		None
 21726 ;; Return value:  Size  Location     Type
 21727 ;;                  1    wreg      void 
 21728 ;; Registers used:
 21729 ;;		None
 21730 ;; Tracked objects:
 21731 ;;		On entry : 0/0
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21739 ;;Total ram usage:        0 bytes
 21740 ;; Hardware stack levels used:    1
 21741 ;; Hardware stack levels required when called:    4
 21742 ;; This function calls:
 21743 ;;		Nothing
 21744 ;; This function is called by:
 21745 ;;		_BUTTONS_init
 21746 ;; This function uses a non-reentrant model
 21747 ;;
 21748                           
 21749                           
 21750                           ;psect for function _GPIO_init
 21751  1F64                     _GPIO_init:	
 21752                           
 21753                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 21754                           
 21755                           ;incstack = 0
 21756                           ; Regs used in _GPIO_init: []
 21757  1F64  0140               	movlb	0	; select bank0
 21758  1F65  1512               	bsf	18,2	;volatile
 21759                           
 21760                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 21761  1F66  017E               	movlb	62	; select bank62
 21762  1F67  1138               	bcf	56,2	;volatile
 21763                           
 21764                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 21765  1F68  1539               	bsf	57,2	;volatile
 21766                           
 21767                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 21768  1F69  0140               	movlb	0	; select bank0
 21769  1F6A  1414               	bsf	20,0	;volatile
 21770                           
 21771                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 21772  1F6B  1494               	bsf	20,1	;volatile
 21773                           
 21774                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 21775  1F6C  1514               	bsf	20,2	;volatile
 21776                           
 21777                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 21778  1F6D  017E               	movlb	62	; select bank62
 21779  1F6E  104E               	bcf	78,0	;volatile
 21780                           
 21781                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 21782  1F6F  10CE               	bcf	78,1	;volatile
 21783                           
 21784                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 21785  1F70  114E               	bcf	78,2	;volatile
 21786                           
 21787                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 21788  1F71  144F               	bsf	79,0	;volatile
 21789                           
 21790                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 21791  1F72  14CF               	bsf	79,1	;volatile
 21792                           
 21793                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 21794  1F73  154F               	bsf	79,2	;volatile
 21795  1F74  0008               	return
 21796  1F75                     __end_of_GPIO_init:	
 21797                           
 21798                           	psect	text80
 21799  0CF7                     __ptext80:	
 21800 ;; *************** function _BEAT_task *****************
 21801 ;; Defined at:
 21802 ;;		line 65 in file "beat.c"
 21803 ;; Parameters:    Size  Location     Type
 21804 ;;		None
 21805 ;; Auto vars:     Size  Location     Type
 21806 ;;  offset          2   10[BANK0 ] unsigned short 
 21807 ;; Return value:  Size  Location     Type
 21808 ;;                  1    wreg      void 
 21809 ;; Registers used:
 21810 ;;		wreg, status,2, status,0, pclath, cstack
 21811 ;; Tracked objects:
 21812 ;;		On entry : 0/0
 21813 ;;		On exit  : 0/0
 21814 ;;		Unchanged: 0/0
 21815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21819 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21820 ;;Total ram usage:        4 bytes
 21821 ;; Hardware stack levels used:    1
 21822 ;; Hardware stack levels required when called:    5
 21823 ;; This function calls:
 21824 ;;		_ADCC_SetUpperThreshold
 21825 ;;		_CLOCK_getTime
 21826 ;;		___lwdiv
 21827 ;; This function is called by:
 21828 ;;		_main
 21829 ;; This function uses a non-reentrant model
 21830 ;;
 21831                           
 21832                           
 21833                           ;psect for function _BEAT_task
 21834  0CF7                     _BEAT_task:	
 21835                           
 21836                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 21837                           
 21838                           ;incstack = 0
 21839                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 21840  0CF7  319E  269D  318C   	fcall	_CLOCK_getTime
 21841  0CFA  0142               	movlb	2	; select bank2
 21842  0CFB  083E               	movf	_lastRun^(0+256),w
 21843  0CFC  0140               	movlb	0	; select bank0
 21844  0CFD  0220               	subwf	?_CLOCK_getTime,w
 21845  0CFE  00A8               	movwf	??_BEAT_task
 21846  0CFF  0142               	movlb	2	; select bank2
 21847  0D00  083F               	movf	(_lastRun+1)^(0+256),w
 21848  0D01  0140               	movlb	0	; select bank0
 21849  0D02  3B21               	subwfb	?_CLOCK_getTime+1,w
 21850  0D03  00A9               	movwf	??_BEAT_task+1
 21851  0D04  0142               	movlb	2	; select bank2
 21852  0D05  0867               	movf	(_delay+1)^(0+256),w
 21853  0D06  0140               	movlb	0	; select bank0
 21854  0D07  0229               	subwf	??_BEAT_task+1,w
 21855  0D08  1D03               	skipz
 21856  0D09  2D0E               	goto	u8835
 21857  0D0A  0142               	movlb	2	; select bank2
 21858  0D0B  0866               	movf	_delay^(0+256),w
 21859  0D0C  0140               	movlb	0	; select bank0
 21860  0D0D  0228               	subwf	??_BEAT_task,w
 21861  0D0E                     u8835:	
 21862  0D0E  1C03               	btfss	3,0
 21863  0D0F  0008               	return
 21864                           
 21865                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 21866  0D10  319E  269D  318C   	fcall	_CLOCK_getTime
 21867  0D13  0140               	movlb	0	; select bank0
 21868  0D14  0821               	movf	?_CLOCK_getTime+1,w
 21869  0D15  0142               	movlb	2	; select bank2
 21870  0D16  00BF               	movwf	(_lastRun+1)^(0+256)
 21871  0D17  0140               	movlb	0	; select bank0
 21872  0D18  0820               	movf	?_CLOCK_getTime,w
 21873  0D19  0142               	movlb	2	; select bank2
 21874  0D1A  00BE               	movwf	_lastRun^(0+256)
 21875                           
 21876                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 21877  0D1B  0141               	movlb	1	; select bank1
 21878  0D1C  032E               	decf	_thresholdExceeded^(0+128),w
 21879  0D1D  1D03               	btfss	3,2
 21880  0D1E  2D25               	goto	l8577
 21881                           
 21882                           ;beat.c: 77:         thresholdCount++;
 21883  0D1F  3001               	movlw	1
 21884  0D20  0142               	movlb	2	; select bank2
 21885  0D21  07BC               	addwf	_thresholdCount^(0+256),f
 21886  0D22  3000               	movlw	0
 21887  0D23  3DBD               	addwfc	(_thresholdCount+1)^(0+256),f
 21888                           
 21889                           ;beat.c: 78:     } else {
 21890  0D24  2D2C               	goto	l8581
 21891  0D25                     l8577:	
 21892                           
 21893                           ;beat.c: 80:         thresholdCount = 0;
 21894  0D25  0142               	movlb	2	; select bank2
 21895  0D26  01BC               	clrf	_thresholdCount^(0+256)
 21896  0D27  01BD               	clrf	(_thresholdCount+1)^(0+256)
 21897                           
 21898                           ;beat.c: 81:         delay = 30;
 21899  0D28  301E               	movlw	30
 21900  0D29  00E6               	movwf	_delay^(0+256)
 21901  0D2A  3000               	movlw	0
 21902  0D2B  00E7               	movwf	(_delay^(0+256)+1)
 21903  0D2C                     l8581:	
 21904                           
 21905                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 21906  0D2C  0141               	movlb	1	; select bank1
 21907  0D2D  032E               	decf	_thresholdExceeded^(0+128),w
 21908  0D2E  1D03               	btfss	3,2
 21909  0D2F  2D73               	goto	l8599
 21910  0D30  082D               	movf	_lastDetected^(0+128),w
 21911  0D31  1D03               	btfss	3,2
 21912  0D32  2D73               	goto	l8599
 21913                           
 21914                           ;beat.c: 89:         detected = 1;
 21915  0D33  01AF               	clrf	_detected^(0+128)
 21916  0D34  0AAF               	incf	_detected^(0+128),f
 21917                           
 21918                           ;beat.c: 92:         delay = 15;
 21919  0D35  300F               	movlw	15
 21920  0D36  0142               	movlb	2	; select bank2
 21921  0D37  00E6               	movwf	_delay^(0+256)
 21922  0D38  3000               	movlw	0
 21923  0D39  00E7               	movwf	(_delay^(0+256)+1)
 21924                           
 21925                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 21926  0D3A  319E  269D  318C   	fcall	_CLOCK_getTime
 21927  0D3D  0142               	movlb	2	; select bank2
 21928  0D3E  0842               	movf	_lastBeat^(0+256),w
 21929  0D3F  0140               	movlb	0	; select bank0
 21930  0D40  0220               	subwf	?_CLOCK_getTime,w
 21931  0D41  00AA               	movwf	BEAT_task@offset
 21932  0D42  0142               	movlb	2	; select bank2
 21933  0D43  0843               	movf	(_lastBeat+1)^(0+256),w
 21934  0D44  0140               	movlb	0	; select bank0
 21935  0D45  3B21               	subwfb	?_CLOCK_getTime+1,w
 21936  0D46  00AB               	movwf	BEAT_task@offset+1
 21937                           
 21938                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 21939  0D47  319E  269D  318C   	fcall	_CLOCK_getTime
 21940  0D4A  0140               	movlb	0	; select bank0
 21941  0D4B  0821               	movf	?_CLOCK_getTime+1,w
 21942  0D4C  0142               	movlb	2	; select bank2
 21943  0D4D  00C3               	movwf	(_lastBeat+1)^(0+256)
 21944  0D4E  0140               	movlb	0	; select bank0
 21945  0D4F  0820               	movf	?_CLOCK_getTime,w
 21946  0D50  0142               	movlb	2	; select bank2
 21947  0D51  00C2               	movwf	_lastBeat^(0+256)
 21948                           
 21949                           ;beat.c: 99:         if (offset < 150)
 21950  0D52  3000               	movlw	0
 21951  0D53  0140               	movlb	0	; select bank0
 21952  0D54  022B               	subwf	BEAT_task@offset+1,w
 21953  0D55  3096               	movlw	150
 21954  0D56  1903               	skipnz
 21955  0D57  022A               	subwf	BEAT_task@offset,w
 21956  0D58  1803               	skipnc
 21957  0D59  2D60               	goto	l8597
 21958                           
 21959                           ;beat.c: 100:             bpm = 400;
 21960  0D5A  3090               	movlw	144
 21961  0D5B  0142               	movlb	2	; select bank2
 21962  0D5C  00C0               	movwf	_bpm^(0+256)
 21963  0D5D  3001               	movlw	1
 21964  0D5E  00C1               	movwf	(_bpm^(0+256)+1)
 21965  0D5F  2D73               	goto	l8599
 21966  0D60                     l8597:	
 21967                           
 21968                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 21969  0D60  082B               	movf	BEAT_task@offset+1,w
 21970  0D61  00A1               	movwf	___lwdiv@divisor+1
 21971  0D62  082A               	movf	BEAT_task@offset,w
 21972  0D63  00A0               	movwf	___lwdiv@divisor
 21973  0D64  3060               	movlw	96
 21974  0D65  00A2               	movwf	___lwdiv@dividend
 21975  0D66  30EA               	movlw	234
 21976  0D67  00A3               	movwf	___lwdiv@dividend+1
 21977  0D68  3193  23AE  318C   	fcall	___lwdiv
 21978  0D6B  0140               	movlb	0	; select bank0
 21979  0D6C  0821               	movf	?___lwdiv+1,w
 21980  0D6D  0142               	movlb	2	; select bank2
 21981  0D6E  00C1               	movwf	(_bpm+1)^(0+256)
 21982  0D6F  0140               	movlb	0	; select bank0
 21983  0D70  0820               	movf	?___lwdiv,w
 21984  0D71  0142               	movlb	2	; select bank2
 21985  0D72  00C0               	movwf	_bpm^(0+256)
 21986  0D73                     l8599:	
 21987                           
 21988                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 21989  0D73  0141               	movlb	1	; select bank1
 21990  0D74  082E               	movf	_thresholdExceeded^(0+128),w
 21991  0D75  0140               	movlb	0	; select bank0
 21992  0D76  00A8               	movwf	??_BEAT_task
 21993  0D77  0828               	movf	??_BEAT_task,w
 21994  0D78  0141               	movlb	1	; select bank1
 21995  0D79  00AD               	movwf	_lastDetected^(0+128)
 21996                           
 21997                           ;beat.c: 109:     thresholdExceeded = 0;
 21998  0D7A  01AE               	clrf	_thresholdExceeded^(0+128)
 21999                           
 22000                           ;beat.c: 111:     if (thresholdCount > 3) {
 22001  0D7B  0142               	movlb	2	; select bank2
 22002  0D7C  083D               	movf	(_thresholdCount+1)^(0+256),w
 22003  0D7D  3A80               	xorlw	128
 22004  0D7E  0140               	movlb	0	; select bank0
 22005  0D7F  00A8               	movwf	??_BEAT_task
 22006  0D80  3080               	movlw	128
 22007  0D81  0228               	subwf	??_BEAT_task,w
 22008  0D82  1D03               	skipz
 22009  0D83  2D87               	goto	u8885
 22010  0D84  3004               	movlw	4
 22011  0D85  0142               	movlb	2	; select bank2
 22012  0D86  023C               	subwf	_thresholdCount^(0+256),w
 22013  0D87                     u8885:	
 22014  0D87  1C03               	skipc
 22015  0D88  2DA6               	goto	l8613
 22016                           
 22017                           ;beat.c: 112:         threshold += 1;
 22018  0D89  3001               	movlw	1
 22019  0D8A  0142               	movlb	2	; select bank2
 22020  0D8B  07E8               	addwf	_threshold^(0+256),f
 22021  0D8C  3000               	movlw	0
 22022  0D8D  3DE9               	addwfc	(_threshold+1)^(0+256),f
 22023                           
 22024                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 22025  0D8E  0869               	movf	(_threshold+1)^(0+256),w
 22026  0D8F  0140               	movlb	0	; select bank0
 22027  0D90  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22028  0D91  0142               	movlb	2	; select bank2
 22029  0D92  0868               	movf	_threshold^(0+256),w
 22030  0D93  0140               	movlb	0	; select bank0
 22031  0D94  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22032  0D95  319E  268B  318C   	fcall	_ADCC_SetUpperThreshold
 22033                           
 22034                           ;beat.c: 114:         thresholdCount = 0;
 22035  0D98  0142               	movlb	2	; select bank2
 22036  0D99  01BC               	clrf	_thresholdCount^(0+256)
 22037  0D9A  01BD               	clrf	(_thresholdCount+1)^(0+256)
 22038                           
 22039                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 22040  0D9B  319E  269D         	fcall	_CLOCK_getTime
 22041  0D9D  0140               	movlb	0	; select bank0
 22042  0D9E  0821               	movf	?_CLOCK_getTime+1,w
 22043  0D9F  0142               	movlb	2	; select bank2
 22044  0DA0  00C3               	movwf	(_lastBeat+1)^(0+256)
 22045  0DA1  0140               	movlb	0	; select bank0
 22046  0DA2  0820               	movf	?_CLOCK_getTime,w
 22047  0DA3  0142               	movlb	2	; select bank2
 22048  0DA4  00C2               	movwf	_lastBeat^(0+256)
 22049                           
 22050                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 22051  0DA5  0008               	return
 22052  0DA6                     l8613:	
 22053  0DA6  319E  269D  318C   	fcall	_CLOCK_getTime
 22054  0DA9  0142               	movlb	2	; select bank2
 22055  0DAA  0842               	movf	_lastBeat^(0+256),w
 22056  0DAB  0140               	movlb	0	; select bank0
 22057  0DAC  0220               	subwf	?_CLOCK_getTime,w
 22058  0DAD  00A8               	movwf	??_BEAT_task
 22059  0DAE  0142               	movlb	2	; select bank2
 22060  0DAF  0843               	movf	(_lastBeat+1)^(0+256),w
 22061  0DB0  0140               	movlb	0	; select bank0
 22062  0DB1  3B21               	subwfb	?_CLOCK_getTime+1,w
 22063  0DB2  00A9               	movwf	??_BEAT_task+1
 22064  0DB3  3003               	movlw	3
 22065  0DB4  0229               	subwf	??_BEAT_task+1,w
 22066  0DB5  30E9               	movlw	233
 22067  0DB6  1903               	skipnz
 22068  0DB7  0228               	subwf	??_BEAT_task,w
 22069  0DB8  1C03               	skipc
 22070  0DB9  0008               	return
 22071                           
 22072                           ;beat.c: 119:         threshold -= 1;
 22073  0DBA  3001               	movlw	1
 22074  0DBB  0142               	movlb	2	; select bank2
 22075  0DBC  02E8               	subwf	_threshold^(0+256),f
 22076  0DBD  3000               	movlw	0
 22077  0DBE  3BE9               	subwfb	(_threshold+1)^(0+256),f
 22078                           
 22079                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 22080  0DBF  0869               	movf	(_threshold+1)^(0+256),w
 22081  0DC0  0140               	movlb	0	; select bank0
 22082  0DC1  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22083  0DC2  0142               	movlb	2	; select bank2
 22084  0DC3  0868               	movf	_threshold^(0+256),w
 22085  0DC4  0140               	movlb	0	; select bank0
 22086  0DC5  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22087  0DC6  319E  268B         	fcall	_ADCC_SetUpperThreshold
 22088  0DC8  0008               	return
 22089  0DC9                     __end_of_BEAT_task:	
 22090                           
 22091                           	psect	text81
 22092  13AE                     __ptext81:	
 22093 ;; *************** function ___lwdiv *****************
 22094 ;; Defined at:
 22095 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 22096 ;; Parameters:    Size  Location     Type
 22097 ;;  divisor         2    0[BANK0 ] unsigned int 
 22098 ;;  dividend        2    2[BANK0 ] unsigned int 
 22099 ;; Auto vars:     Size  Location     Type
 22100 ;;  quotient        2    5[BANK0 ] unsigned int 
 22101 ;;  counter         1    7[BANK0 ] unsigned char 
 22102 ;; Return value:  Size  Location     Type
 22103 ;;                  2    0[BANK0 ] unsigned int 
 22104 ;; Registers used:
 22105 ;;		wreg, status,2, status,0
 22106 ;; Tracked objects:
 22107 ;;		On entry : 0/0
 22108 ;;		On exit  : 0/0
 22109 ;;		Unchanged: 0/0
 22110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22112 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22114 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22115 ;;Total ram usage:        8 bytes
 22116 ;; Hardware stack levels used:    1
 22117 ;; Hardware stack levels required when called:    4
 22118 ;; This function calls:
 22119 ;;		Nothing
 22120 ;; This function is called by:
 22121 ;;		_TM1650_fastPrintNum
 22122 ;;		_BEAT_task
 22123 ;; This function uses a non-reentrant model
 22124 ;;
 22125                           
 22126                           
 22127                           ;psect for function ___lwdiv
 22128  13AE                     ___lwdiv:	
 22129                           
 22130                           ;incstack = 0
 22131                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 22132  13AE  0140               	movlb	0	; select bank0
 22133  13AF  01A5               	clrf	___lwdiv@quotient
 22134  13B0  01A6               	clrf	___lwdiv@quotient+1
 22135  13B1  0820               	movf	___lwdiv@divisor,w
 22136  13B2  0421               	iorwf	___lwdiv@divisor+1,w
 22137  13B3  1903               	btfsc	3,2
 22138  13B4  2BDE               	goto	l4883
 22139  13B5  01A7               	clrf	___lwdiv@counter
 22140  13B6  0AA7               	incf	___lwdiv@counter,f
 22141  13B7                     l4871:	
 22142  13B7  1BA1               	btfsc	___lwdiv@divisor+1,7
 22143  13B8  2BC3               	goto	l4873
 22144  13B9  3001               	movlw	1
 22145  13BA                     u3535:	
 22146  13BA  35A0               	lslf	___lwdiv@divisor,f
 22147  13BB  0DA1               	rlf	___lwdiv@divisor+1,f
 22148  13BC  0B89               	decfsz	9,f
 22149  13BD  2BBA               	goto	u3535
 22150  13BE  3001               	movlw	1
 22151  13BF  00A4               	movwf	??___lwdiv
 22152  13C0  0824               	movf	??___lwdiv,w
 22153  13C1  07A7               	addwf	___lwdiv@counter,f
 22154  13C2  2BB7               	goto	l4871
 22155  13C3                     l4873:	
 22156  13C3  3001               	movlw	1
 22157  13C4                     u3555:	
 22158  13C4  35A5               	lslf	___lwdiv@quotient,f
 22159  13C5  0DA6               	rlf	___lwdiv@quotient+1,f
 22160  13C6  0B89               	decfsz	9,f
 22161  13C7  2BC4               	goto	u3555
 22162  13C8  0821               	movf	___lwdiv@divisor+1,w
 22163  13C9  0223               	subwf	___lwdiv@dividend+1,w
 22164  13CA  1D03               	skipz
 22165  13CB  2BCE               	goto	u3565
 22166  13CC  0820               	movf	___lwdiv@divisor,w
 22167  13CD  0222               	subwf	___lwdiv@dividend,w
 22168  13CE                     u3565:	
 22169  13CE  1C03               	skipc
 22170  13CF  2BD5               	goto	l4879
 22171  13D0  0820               	movf	___lwdiv@divisor,w
 22172  13D1  02A2               	subwf	___lwdiv@dividend,f
 22173  13D2  0821               	movf	___lwdiv@divisor+1,w
 22174  13D3  3BA3               	subwfb	___lwdiv@dividend+1,f
 22175  13D4  1425               	bsf	___lwdiv@quotient,0
 22176  13D5                     l4879:	
 22177  13D5  3001               	movlw	1
 22178  13D6                     u3575:	
 22179  13D6  36A1               	lsrf	___lwdiv@divisor+1,f
 22180  13D7  0CA0               	rrf	___lwdiv@divisor,f
 22181  13D8  0B89               	decfsz	9,f
 22182  13D9  2BD6               	goto	u3575
 22183  13DA  3001               	movlw	1
 22184  13DB  02A7               	subwf	___lwdiv@counter,f
 22185  13DC  1D03               	btfss	3,2
 22186  13DD  2BC3               	goto	l4873
 22187  13DE                     l4883:	
 22188  13DE  0826               	movf	___lwdiv@quotient+1,w
 22189  13DF  00A1               	movwf	?___lwdiv+1
 22190  13E0  0825               	movf	___lwdiv@quotient,w
 22191  13E1  00A0               	movwf	?___lwdiv
 22192  13E2  0008               	return
 22193  13E3                     __end_of___lwdiv:	
 22194                           
 22195                           	psect	text82
 22196  1E9D                     __ptext82:	
 22197 ;; *************** function _CLOCK_getTime *****************
 22198 ;; Defined at:
 22199 ;;		line 16 in file "clock.c"
 22200 ;; Parameters:    Size  Location     Type
 22201 ;;		None
 22202 ;; Auto vars:     Size  Location     Type
 22203 ;;		None
 22204 ;; Return value:  Size  Location     Type
 22205 ;;                  2    0[BANK0 ] unsigned short 
 22206 ;; Registers used:
 22207 ;;		wreg
 22208 ;; Tracked objects:
 22209 ;;		On entry : 0/0
 22210 ;;		On exit  : 0/0
 22211 ;;		Unchanged: 0/0
 22212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22217 ;;Total ram usage:        2 bytes
 22218 ;; Hardware stack levels used:    1
 22219 ;; Hardware stack levels required when called:    4
 22220 ;; This function calls:
 22221 ;;		Nothing
 22222 ;; This function is called by:
 22223 ;;		_main
 22224 ;;		_BUTTONS_task
 22225 ;;		_CONTROLLER_task
 22226 ;;		_CONTROL_DMX
 22227 ;;		_CONTROL_MANUAL
 22228 ;;		_BEAT_task
 22229 ;;		_LED_task_BEAT_STROBE
 22230 ;; This function uses a non-reentrant model
 22231 ;;
 22232                           
 22233                           
 22234                           ;psect for function _CLOCK_getTime
 22235  1E9D                     _CLOCK_getTime:	
 22236                           
 22237                           ;clock.c: 17:     return currentTime;
 22238                           
 22239                           ;incstack = 0
 22240                           ; Regs used in _CLOCK_getTime: [wreg]
 22241  1E9D  0142               	movlb	2	; select bank2
 22242  1E9E  0847               	movf	(_currentTime+1)^(0+256),w
 22243  1E9F  0140               	movlb	0	; select bank0
 22244  1EA0  00A1               	movwf	?_CLOCK_getTime+1
 22245  1EA1  0142               	movlb	2	; select bank2
 22246  1EA2  0846               	movf	_currentTime^(0+256),w
 22247  1EA3  0140               	movlb	0	; select bank0
 22248  1EA4  00A0               	movwf	?_CLOCK_getTime
 22249  1EA5  0008               	return
 22250  1EA6                     __end_of_CLOCK_getTime:	
 22251                           
 22252                           	psect	text83
 22253  1000                     __ptext83:	
 22254 ;; *************** function _BEAT_init *****************
 22255 ;; Defined at:
 22256 ;;		line 39 in file "beat.c"
 22257 ;; Parameters:    Size  Location     Type
 22258 ;;		None
 22259 ;; Auto vars:     Size  Location     Type
 22260 ;;		None
 22261 ;; Return value:  Size  Location     Type
 22262 ;;                  1    wreg      void 
 22263 ;; Registers used:
 22264 ;;		wreg, status,2, status,0, pclath, cstack
 22265 ;; Tracked objects:
 22266 ;;		On entry : 0/0
 22267 ;;		On exit  : 0/0
 22268 ;;		Unchanged: 0/0
 22269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22274 ;;Total ram usage:        0 bytes
 22275 ;; Hardware stack levels used:    1
 22276 ;; Hardware stack levels required when called:    5
 22277 ;; This function calls:
 22278 ;;		_ADCC_SetADTIInterruptHandler
 22279 ;;		_ADCC_SetUpperThreshold
 22280 ;;		_ADCC_StartConversion
 22281 ;; This function is called by:
 22282 ;;		_main
 22283 ;; This function uses a non-reentrant model
 22284 ;;
 22285                           
 22286                           
 22287                           ;psect for function _BEAT_init
 22288  1000                     _BEAT_init:	
 22289                           
 22290                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 22291                           
 22292                           ;incstack = 0
 22293                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 22294  1000  0142               	movlb	2	; select bank2
 22295  1001  0869               	movf	(_threshold+1)^(0+256),w
 22296  1002  0140               	movlb	0	; select bank0
 22297  1003  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22298  1004  0142               	movlb	2	; select bank2
 22299  1005  0868               	movf	_threshold^(0+256),w
 22300  1006  0140               	movlb	0	; select bank0
 22301  1007  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22302  1008  319E  268B  3190   	fcall	_ADCC_SetUpperThreshold
 22303                           
 22304                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 22305  100B  3063               	movlw	low _adcThresholdHandler
 22306  100C  0140               	movlb	0	; select bank0
 22307  100D  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 22308  100E  301E               	movlw	high _adcThresholdHandler
 22309  100F  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 22310  1010  319E  2682  3190   	fcall	_ADCC_SetADTIInterruptHandler
 22311                           
 22312                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 22313  1013  300F               	movlw	15
 22314  1014  319E  2694         	fcall	_ADCC_StartConversion
 22315  1016  0008               	return
 22316  1017                     __end_of_BEAT_init:	
 22317                           
 22318                           	psect	text84
 22319  1E94                     __ptext84:	
 22320 ;; *************** function _ADCC_StartConversion *****************
 22321 ;; Defined at:
 22322 ;;		line 121 in file "mcc_generated_files/adcc.c"
 22323 ;; Parameters:    Size  Location     Type
 22324 ;;  channel         1    wreg     enum E10867
 22325 ;; Auto vars:     Size  Location     Type
 22326 ;;  channel         1    0[BANK0 ] enum E10867
 22327 ;; Return value:  Size  Location     Type
 22328 ;;                  1    wreg      void 
 22329 ;; Registers used:
 22330 ;;		wreg
 22331 ;; Tracked objects:
 22332 ;;		On entry : 0/0
 22333 ;;		On exit  : 0/0
 22334 ;;		Unchanged: 0/0
 22335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22337 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22339 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22340 ;;Total ram usage:        1 bytes
 22341 ;; Hardware stack levels used:    1
 22342 ;; Hardware stack levels required when called:    4
 22343 ;; This function calls:
 22344 ;;		Nothing
 22345 ;; This function is called by:
 22346 ;;		_BEAT_init
 22347 ;; This function uses a non-reentrant model
 22348 ;;
 22349                           
 22350                           
 22351                           ;psect for function _ADCC_StartConversion
 22352  1E94                     _ADCC_StartConversion:	
 22353                           
 22354                           ;incstack = 0
 22355                           ; Regs used in _ADCC_StartConversion: [wreg]
 22356                           ;ADCC_StartConversion@channel stored from wreg
 22357  1E94  0140               	movlb	0	; select bank0
 22358  1E95  00A0               	movwf	ADCC_StartConversion@channel
 22359                           
 22360                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 22361  1E96  0820               	movf	ADCC_StartConversion@channel,w
 22362  1E97  0141               	movlb	1	; select bank1
 22363  1E98  009F               	movwf	31	;volatile
 22364                           
 22365                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 22366  1E99  0142               	movlb	2	; select bank2
 22367  1E9A  1791               	bsf	17,7	;volatile
 22368                           
 22369                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 22370  1E9B  1411               	bsf	17,0	;volatile
 22371  1E9C  0008               	return
 22372  1E9D                     __end_of_ADCC_StartConversion:	
 22373                           
 22374                           	psect	text85
 22375  1E8B                     __ptext85:	
 22376 ;; *************** function _ADCC_SetUpperThreshold *****************
 22377 ;; Defined at:
 22378 ;;		line 251 in file "mcc_generated_files/adcc.c"
 22379 ;; Parameters:    Size  Location     Type
 22380 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 22381 ;; Auto vars:     Size  Location     Type
 22382 ;;		None
 22383 ;; Return value:  Size  Location     Type
 22384 ;;                  1    wreg      void 
 22385 ;; Registers used:
 22386 ;;		wreg, status,2
 22387 ;; Tracked objects:
 22388 ;;		On entry : 0/0
 22389 ;;		On exit  : 0/0
 22390 ;;		Unchanged: 0/0
 22391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22392 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22395 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22396 ;;Total ram usage:        2 bytes
 22397 ;; Hardware stack levels used:    1
 22398 ;; Hardware stack levels required when called:    4
 22399 ;; This function calls:
 22400 ;;		Nothing
 22401 ;; This function is called by:
 22402 ;;		_BEAT_init
 22403 ;;		_BEAT_task
 22404 ;; This function uses a non-reentrant model
 22405 ;;
 22406                           
 22407                           
 22408                           ;psect for function _ADCC_SetUpperThreshold
 22409  1E8B                     _ADCC_SetUpperThreshold:	
 22410                           
 22411                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 22412                           
 22413                           ;incstack = 0
 22414                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 22415  1E8B  0140               	movlb	0	; select bank0
 22416  1E8C  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 22417  1E8D  0141               	movlb	1	; select bank1
 22418  1E8E  008F               	movwf	15	;volatile
 22419                           
 22420                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 22421  1E8F  0140               	movlb	0	; select bank0
 22422  1E90  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 22423  1E91  0141               	movlb	1	; select bank1
 22424  1E92  008E               	movwf	14	;volatile
 22425  1E93  0008               	return
 22426  1E94                     __end_of_ADCC_SetUpperThreshold:	
 22427                           
 22428                           	psect	text86
 22429  1E82                     __ptext86:	
 22430 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 22431 ;; Defined at:
 22432 ;;		line 317 in file "mcc_generated_files/adcc.c"
 22433 ;; Parameters:    Size  Location     Type
 22434 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 22435 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 22436 ;; Auto vars:     Size  Location     Type
 22437 ;;		None
 22438 ;; Return value:  Size  Location     Type
 22439 ;;                  1    wreg      void 
 22440 ;; Registers used:
 22441 ;;		wreg
 22442 ;; Tracked objects:
 22443 ;;		On entry : 0/0
 22444 ;;		On exit  : 0/0
 22445 ;;		Unchanged: 0/0
 22446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22451 ;;Total ram usage:        2 bytes
 22452 ;; Hardware stack levels used:    1
 22453 ;; Hardware stack levels required when called:    4
 22454 ;; This function calls:
 22455 ;;		Nothing
 22456 ;; This function is called by:
 22457 ;;		_ADCC_Initialize
 22458 ;;		_BEAT_init
 22459 ;; This function uses a non-reentrant model
 22460 ;;
 22461                           
 22462                           
 22463                           ;psect for function _ADCC_SetADTIInterruptHandler
 22464  1E82                     _ADCC_SetADTIInterruptHandler:	
 22465                           
 22466                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 22467                           
 22468                           ;incstack = 0
 22469                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 22470  1E82  0140               	movlb	0	; select bank0
 22471  1E83  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 22472  1E84  0142               	movlb	2	; select bank2
 22473  1E85  00D9               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 22474  1E86  0140               	movlb	0	; select bank0
 22475  1E87  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 22476  1E88  0142               	movlb	2	; select bank2
 22477  1E89  00D8               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 22478  1E8A  0008               	return
 22479  1E8B                     __end_of_ADCC_SetADTIInterruptHandler:	
 22480                           
 22481                           	psect	intentry
 22482  0004                     __pintentry:	
 22483 ;; *************** function _INTERRUPT_InterruptManager *****************
 22484 ;; Defined at:
 22485 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22486 ;; Parameters:    Size  Location     Type
 22487 ;;		None
 22488 ;; Auto vars:     Size  Location     Type
 22489 ;;		None
 22490 ;; Return value:  Size  Location     Type
 22491 ;;                  1    wreg      void 
 22492 ;; Registers used:
 22493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22494 ;; Tracked objects:
 22495 ;;		On entry : 0/0
 22496 ;;		On exit  : 0/0
 22497 ;;		Unchanged: 0/0
 22498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22503 ;;Total ram usage:        0 bytes
 22504 ;; Hardware stack levels used:    1
 22505 ;; Hardware stack levels required when called:    3
 22506 ;; This function calls:
 22507 ;;		Absolute function
 22508 ;;		_ADCC_ThresholdISR
 22509 ;;		_DMX_interrupt
 22510 ;;		_EUSART1_Receive_ISR
 22511 ;;		_I2C1_BusCollisionISR
 22512 ;;		_I2C1_ISR
 22513 ;;		_TMR0_ISR
 22514 ;; This function is called by:
 22515 ;;		Interrupt level 1
 22516 ;; This function uses a non-reentrant model
 22517 ;;
 22518                           
 22519  0004                     _INTERRUPT_InterruptManager:	
 22520                           
 22521                           ;incstack = 0
 22522 ;; hardware stack exceeded
 22523  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 22524                           
 22525                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22526  0005  3180               	pagesel	$
 22527                           
 22528                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 22529  0006  014E               	movlb	14	; select bank14
 22530  0007  1A96               	btfsc	22,5	;volatile
 22531  0008  1E8C               	btfss	12,5	;volatile
 22532  0009  280E               	goto	i1l429
 22533                           
 22534                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 22535  000A  319F  2729  3180   	fcall	_TMR0_ISR
 22536                           
 22537                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 22538  000D  282E               	goto	i1l441
 22539  000E                     i1l429:	
 22540                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 22541                           
 22542  000E  1F0B               	btfss	11,6	;volatile
 22543  000F  282E               	goto	i1l441
 22544                           
 22545                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 22546  0010  1899               	btfsc	25,1	;volatile
 22547  0011  1C8F               	btfss	15,1	;volatile
 22548  0012  2817               	goto	i1l432
 22549                           
 22550                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 22551  0013  319E  2657  3180   	fcall	_I2C1_BusCollisionISR
 22552                           
 22553                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 22554  0016  282E               	goto	i1l441
 22555  0017                     i1l432:	
 22556                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 22557                           
 22558  0017  1819               	btfsc	25,0	;volatile
 22559  0018  1C0F               	btfss	15,0	;volatile
 22560  0019  281E               	goto	i1l434
 22561                           
 22562                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 22563  001A  318E  26AE  3180   	fcall	_I2C1_ISR
 22564                           
 22565                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 22566  001D  282E               	goto	i1l441
 22567  001E                     i1l434:	
 22568                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 22569                           
 22570  001E  1897               	btfsc	23,1	;volatile
 22571  001F  1C8D               	btfss	13,1	;volatile
 22572  0020  2825               	goto	i1l436
 22573                           
 22574                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 22575  0021  319F  271C  3180   	fcall	_ADCC_ThresholdISR
 22576                           
 22577                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 22578  0024  282E               	goto	i1l441
 22579  0025                     i1l436:	
 22580                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 22581                           
 22582  0025  1A99               	btfsc	25,5	;volatile
 22583  0026  1E8F               	btfss	15,5	;volatile
 22584  0027  282E               	goto	i1l441
 22585                           
 22586                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 22587  0028  0142               	movlb	2	; select bank2
 22588  0029  0863               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 22589  002A  008A               	movwf	10
 22590  002B  0862               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 22591  002C  000A               	callw
 22592  002D  3180               	pagesel	$
 22593  002E                     i1l441:	
 22594                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 22595                           
 22596  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 22597  002F  0009               	retfie
 22598  0030                     __end_of_INTERRUPT_InterruptManager:	
 22599                           
 22600                           	psect	text88
 22601  1F29                     __ptext88:	
 22602 ;; *************** function _TMR0_ISR *****************
 22603 ;; Defined at:
 22604 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 22605 ;; Parameters:    Size  Location     Type
 22606 ;;		None
 22607 ;; Auto vars:     Size  Location     Type
 22608 ;;		None
 22609 ;; Return value:  Size  Location     Type
 22610 ;;                  1    wreg      void 
 22611 ;; Registers used:
 22612 ;;		wreg, status,2, status,0, pclath, cstack
 22613 ;; Tracked objects:
 22614 ;;		On entry : 0/0
 22615 ;;		On exit  : 0/0
 22616 ;;		Unchanged: 0/0
 22617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22622 ;;Total ram usage:        0 bytes
 22623 ;; Hardware stack levels used:    1
 22624 ;; Hardware stack levels required when called:    1
 22625 ;; This function calls:
 22626 ;;		Absolute function
 22627 ;;		_CLOCK_timerCallback
 22628 ;;		_TMR0_DefaultInterruptHandler
 22629 ;; This function is called by:
 22630 ;;		_INTERRUPT_InterruptManager
 22631 ;; This function uses a non-reentrant model
 22632 ;;
 22633                           
 22634                           
 22635                           ;psect for function _TMR0_ISR
 22636  1F29                     _TMR0_ISR:	
 22637                           
 22638                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 22639                           
 22640                           ;incstack = 0
 22641 ;; hardware stack exceeded
 22642                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 22643  1F29  014E               	movlb	14	; select bank14
 22644  1F2A  128C               	bcf	12,5	;volatile
 22645                           
 22646                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 22647  1F2B  0142               	movlb	2	; select bank2
 22648  1F2C  085A               	movf	_TMR0_InterruptHandler^(0+256),w
 22649  1F2D  045B               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 22650  1F2E  1903               	btfsc	3,2
 22651  1F2F  0008               	return
 22652                           
 22653                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 22654  1F30  085B               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 22655  1F31  008A               	movwf	10
 22656  1F32  085A               	movf	_TMR0_InterruptHandler^(0+256),w
 22657  1F33  000A               	callw
 22658  1F34  319F               	pagesel	$
 22659  1F35  0008               	return
 22660  1F36                     __end_of_TMR0_ISR:	
 22661                           
 22662                           	psect	text89
 22663  1E74                     __ptext89:	
 22664 ;; *************** function _CLOCK_timerCallback *****************
 22665 ;; Defined at:
 22666 ;;		line 20 in file "clock.c"
 22667 ;; Parameters:    Size  Location     Type
 22668 ;;		None
 22669 ;; Auto vars:     Size  Location     Type
 22670 ;;		None
 22671 ;; Return value:  Size  Location     Type
 22672 ;;                  1    wreg      void 
 22673 ;; Registers used:
 22674 ;;		wreg
 22675 ;; Tracked objects:
 22676 ;;		On entry : 0/0
 22677 ;;		On exit  : 0/0
 22678 ;;		Unchanged: 0/0
 22679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22684 ;;Total ram usage:        0 bytes
 22685 ;; Hardware stack levels used:    1
 22686 ;; This function calls:
 22687 ;;		Nothing
 22688 ;; This function is called by:
 22689 ;;		_CLOCK_init
 22690 ;;		_TMR0_ISR
 22691 ;; This function uses a non-reentrant model
 22692 ;;
 22693                           
 22694                           
 22695                           ;psect for function _CLOCK_timerCallback
 22696  1E74                     _CLOCK_timerCallback:	
 22697                           
 22698                           ;clock.c: 21:     currentTime++;
 22699                           
 22700                           ;incstack = 0
 22701 ;; hardware stack exceeded
 22702                           ; Regs used in _CLOCK_timerCallback: [wreg]
 22703  1E74  3001               	movlw	1
 22704  1E75  0142               	movlb	2	; select bank2
 22705  1E76  07C6               	addwf	_currentTime^(0+256),f
 22706  1E77  3000               	movlw	0
 22707  1E78  3DC7               	addwfc	(_currentTime+1)^(0+256),f
 22708  1E79  0008               	return
 22709  1E7A                     __end_of_CLOCK_timerCallback:	
 22710                           
 22711                           	psect	text90
 22712  1E4E                     __ptext90:	
 22713 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 22714 ;; Defined at:
 22715 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 22716 ;; Parameters:    Size  Location     Type
 22717 ;;		None
 22718 ;; Auto vars:     Size  Location     Type
 22719 ;;		None
 22720 ;; Return value:  Size  Location     Type
 22721 ;;                  1    wreg      void 
 22722 ;; Registers used:
 22723 ;;		None
 22724 ;; Tracked objects:
 22725 ;;		On entry : 0/0
 22726 ;;		On exit  : 0/0
 22727 ;;		Unchanged: 0/0
 22728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22733 ;;Total ram usage:        0 bytes
 22734 ;; Hardware stack levels used:    1
 22735 ;; This function calls:
 22736 ;;		Nothing
 22737 ;; This function is called by:
 22738 ;;		_TMR0_Initialize
 22739 ;;		_TMR0_ISR
 22740 ;; This function uses a non-reentrant model
 22741 ;;
 22742                           
 22743                           
 22744                           ;psect for function _TMR0_DefaultInterruptHandler
 22745  1E4E                     _TMR0_DefaultInterruptHandler:	
 22746                           
 22747                           ;incstack = 0
 22748 ;; hardware stack exceeded
 22749                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 22750  1E4E  0008               	return
 22751  1E4F                     __end_of_TMR0_DefaultInterruptHandler:	
 22752                           
 22753                           	psect	text91
 22754  0EAE                     __ptext91:	
 22755 ;; *************** function _I2C1_ISR *****************
 22756 ;; Defined at:
 22757 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 22758 ;; Parameters:    Size  Location     Type
 22759 ;;		None
 22760 ;; Auto vars:     Size  Location     Type
 22761 ;;		None
 22762 ;; Return value:  Size  Location     Type
 22763 ;;                  1    wreg      void 
 22764 ;; Registers used:
 22765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22766 ;; Tracked objects:
 22767 ;;		On entry : 0/0
 22768 ;;		On exit  : 0/0
 22769 ;;		Unchanged: 0/0
 22770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22773 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22774 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22775 ;;Total ram usage:        4 bytes
 22776 ;; Hardware stack levels used:    1
 22777 ;; Hardware stack levels required when called:    1
 22778 ;; This function calls:
 22779 ;;		_I2C1_FunctionComplete
 22780 ;;		_I2C1_Stop
 22781 ;; This function is called by:
 22782 ;;		_INTERRUPT_InterruptManager
 22783 ;; This function uses a non-reentrant model
 22784 ;;
 22785                           
 22786                           
 22787                           ;psect for function _I2C1_ISR
 22788  0EAE                     _I2C1_ISR:	
 22789                           
 22790                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 22791                           
 22792                           ;incstack = 0
 22793 ;; hardware stack exceeded
 22794                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22795  0EAE  014E               	movlb	14	; select bank14
 22796  0EAF  100F               	bcf	15,0	;volatile
 22797                           
 22798                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 22799  0EB0  0143               	movlb	3	; select bank3
 22800  0EB1  1F90               	btfss	16,7	;volatile
 22801  0EB2  2FD3               	goto	i1l6323
 22802                           
 22803                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 22804  0EB3  1390               	bcf	16,7	;volatile
 22805                           
 22806                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 22807  0EB4  0141               	movlb	1	; select bank1
 22808  0EB5  01C4               	clrf	_i2c1_state^(0+128)
 22809                           
 22810                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 22811  0EB6  0842               	movf	_p_i2c1_current^(0+128),w
 22812  0EB7  3E02               	addlw	2
 22813  0EB8  0086               	movwf	6
 22814  0EB9  3001               	movlw	1	; select bank2/3
 22815  0EBA  0087               	movwf	7
 22816  0EBB  0801               	movf	1,w
 22817  0EBC  0086               	movwf	6
 22818  0EBD  0187               	clrf	7
 22819  0EBE  0181               	clrf	1
 22820  0EBF  0A81               	incf	1,f
 22821                           
 22822                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 22823  0EC0  01C2               	clrf	_p_i2c1_current^(0+128)
 22824  0EC1  0008               	return
 22825  0EC2                     i1l549:	
 22826                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 22827                           
 22828                           
 22829                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 22830  0EC2  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 22831  0EC3  0008               	return
 22832                           
 22833                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 22834  0EC4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22835  0EC5  00F2               	movwf	??_I2C1_ISR
 22836  0EC6  0872               	movf	??_I2C1_ISR,w
 22837  0EC7  00C2               	movwf	_p_i2c1_current^(0+128)
 22838                           
 22839                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 22840  0EC8  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22841  0EC9  0086               	movwf	6
 22842  0ECA  3001               	movlw	1	; select bank2/3
 22843  0ECB  0087               	movwf	7
 22844  0ECC  0801               	movf	1,w
 22845  0ECD  00F2               	movwf	??_I2C1_ISR
 22846  0ECE  0872               	movf	??_I2C1_ISR,w
 22847  0ECF  00C3               	movwf	_i2c1_trb_count^(0+128)
 22848                           
 22849                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 22850  0ED0  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22851  0ED1  0086               	movwf	6
 22852  0ED2  3001               	movlw	1	; select bank2/3
 22853  0ED3  0087               	movwf	7
 22854  0ED4  3001               	movlw	1	; select bank2/3
 22855  0ED5  3F41               	moviw [1]fsr1
 22856  0ED6  00F7               	movwf	_p_i2c1_trb_current
 22857                           
 22858                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 22859  0ED7  3003               	movlw	3
 22860  0ED8  00F2               	movwf	??_I2C1_ISR
 22861  0ED9  0872               	movf	??_I2C1_ISR,w
 22862  0EDA  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 22863                           
 22864                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 22865  0EDB  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22866  0EDC  3A58               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 22867  0EDD  1D03               	skipz
 22868  0EDE  2EE3               	goto	i1l6211
 22869                           
 22870                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 22871  0EDF  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 22872  0EE0  00F2               	movwf	??_I2C1_ISR
 22873  0EE1  0872               	movf	??_I2C1_ISR,w
 22874  0EE2  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 22875  0EE3                     i1l6211:	
 22876                           
 22877                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 22878  0EE3  1022               	bcf	(_i2c1_object^(0+128)+2),0
 22879                           
 22880                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 22881  0EE4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22882  0EE5  0620               	xorwf	_i2c1_object^(0+128),w
 22883  0EE6  1903               	btfsc	3,2
 22884                           
 22885                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 22886  0EE7  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 22887                           
 22888                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 22889                           
 22890                           ;mcc_generated_files/i2c1.c: 290:                 }
 22891  0EE8  0143               	movlb	3	; select bank3
 22892  0EE9  1411               	bsf	17,0	;volatile
 22893  0EEA                     i1l6215:	
 22894                           
 22895                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 22896  0EEA  3002               	movlw	2
 22897  0EEB  00F2               	movwf	??_I2C1_ISR
 22898  0EEC  0872               	movf	??_I2C1_ISR,w
 22899  0EED  0141               	movlb	1	; select bank1
 22900  0EEE  00C4               	movwf	_i2c1_state^(0+128)
 22901  0EEF  0008               	return
 22902  0EF0                     i1l554:	
 22903                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 22904                           
 22905  0EF0  2F7C               	goto	i1l575
 22906  0EF1                     i1l555:	
 22907                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 22908                           
 22909                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 22910                           
 22911                           
 22912                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 22913  0EF1  0143               	movlb	3	; select bank3
 22914  0EF2  1F11               	btfss	17,6	;volatile
 22915  0EF3  2EFD               	goto	i1l6223
 22916                           
 22917                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 22918  0EF4  3001               	movlw	1
 22919  0EF5  00F2               	movwf	??_I2C1_ISR
 22920  0EF6  0872               	movf	??_I2C1_ISR,w
 22921  0EF7  0141               	movlb	1	; select bank1
 22922  0EF8  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22923                           
 22924                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 22925  0EF9  3004               	movlw	4
 22926  0EFA  3190  2078         	fcall	_I2C1_Stop
 22927                           
 22928                           ;mcc_generated_files/i2c1.c: 319:             }
 22929  0EFC  0008               	return
 22930  0EFD                     i1l6223:	
 22931                           
 22932                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 22933  0EFD  087B               	movf	I2C1_ISR@i2c_address+1,w
 22934  0EFE  00F3               	movwf	??_I2C1_ISR+1
 22935  0EFF  087A               	movf	I2C1_ISR@i2c_address,w
 22936  0F00  00F2               	movwf	??_I2C1_ISR
 22937  0F01  36F3               	lsrf	??_I2C1_ISR+1,f
 22938  0F02  0CF2               	rrf	??_I2C1_ISR,f
 22939  0F03  0872               	movf	??_I2C1_ISR,w
 22940  0F04  008C               	movwf	12	;volatile
 22941                           
 22942                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 22943  0F05  1C7A               	btfss	I2C1_ISR@i2c_address,0
 22944  0F06  2F0D               	goto	i1l6229
 22945                           
 22946                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 22947  0F07  300B               	movlw	11
 22948  0F08  00F2               	movwf	??_I2C1_ISR
 22949  0F09  0872               	movf	??_I2C1_ISR,w
 22950  0F0A  0141               	movlb	1	; select bank1
 22951  0F0B  00C4               	movwf	_i2c1_state^(0+128)
 22952                           
 22953                           ;mcc_generated_files/i2c1.c: 331:                 }
 22954  0F0C  0008               	return
 22955  0F0D                     i1l6229:	
 22956                           
 22957                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 22958  0F0D  3003               	movlw	3
 22959  0F0E  00F2               	movwf	??_I2C1_ISR
 22960  0F0F  0872               	movf	??_I2C1_ISR,w
 22961  0F10  0141               	movlb	1	; select bank1
 22962  0F11  00C4               	movwf	_i2c1_state^(0+128)
 22963  0F12  0008               	return
 22964  0F13                     i1l560:	
 22965                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 22966                           
 22967                           
 22968                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 22969  0F13  0143               	movlb	3	; select bank3
 22970  0F14  1F11               	btfss	17,6	;volatile
 22971  0F15  2F1F               	goto	i1l561
 22972                           
 22973                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 22974  0F16  3001               	movlw	1
 22975  0F17  00F2               	movwf	??_I2C1_ISR
 22976  0F18  0872               	movf	??_I2C1_ISR,w
 22977  0F19  0141               	movlb	1	; select bank1
 22978  0F1A  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22979                           
 22980                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 22981  0F1B  3004               	movlw	4
 22982  0F1C  3190  2078         	fcall	_I2C1_Stop
 22983                           
 22984                           ;mcc_generated_files/i2c1.c: 347:             }
 22985  0F1E  0008               	return
 22986  0F1F                     i1l561:	
 22987                           ;mcc_generated_files/i2c1.c: 348:             else
 22988                           
 22989                           
 22990                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 22991  0F1F  1491               	bsf	17,1	;volatile
 22992                           
 22993                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 22994  0F20  087B               	movf	I2C1_ISR@i2c_address+1,w
 22995  0F21  00F3               	movwf	??_I2C1_ISR+1
 22996  0F22  087A               	movf	I2C1_ISR@i2c_address,w
 22997  0F23  00F2               	movwf	??_I2C1_ISR
 22998  0F24  0873               	movf	??_I2C1_ISR+1,w
 22999  0F25  00F2               	movwf	??_I2C1_ISR
 23000  0F26  01F3               	clrf	??_I2C1_ISR+1
 23001  0F27  3006               	movlw	6
 23002  0F28  0572               	andwf	??_I2C1_ISR,w
 23003  0F29  00F4               	movwf	??_I2C1_ISR+2
 23004  0F2A  3000               	movlw	0
 23005  0F2B  0573               	andwf	??_I2C1_ISR+1,w
 23006  0F2C  00F5               	movwf	??_I2C1_ISR+3
 23007  0F2D  30F0               	movlw	240
 23008  0F2E  0474               	iorwf	??_I2C1_ISR+2,w
 23009  0F2F  00FA               	movwf	I2C1_ISR@i2c_address
 23010  0F30  3000               	movlw	0
 23011  0F31  0475               	iorwf	??_I2C1_ISR+3,w
 23012  0F32  00FB               	movwf	I2C1_ISR@i2c_address+1
 23013                           
 23014                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 23015  0F33  147A               	bsf	I2C1_ISR@i2c_address,0
 23016                           
 23017                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 23018  0F34  0141               	movlb	1	; select bank1
 23019  0F35  01BF               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 23020  0F36  0ABF               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 23021  0F37  2EEA               	goto	i1l6215
 23022  0F38                     i1l6243:	
 23023                           
 23024                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 23025  0F38  033F               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 23026  0F39  1903               	btfsc	3,2
 23027  0F3A  2F51               	goto	i1l6263
 23028                           
 23029                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 23030  0F3B  0877               	movf	_p_i2c1_trb_current,w
 23031  0F3C  0086               	movwf	6
 23032  0F3D  3001               	movlw	1	; select bank2/3
 23033  0F3E  0087               	movwf	7
 23034  0F3F  3F40               	moviw [0]fsr1
 23035  0F40  00FA               	movwf	I2C1_ISR@i2c_address
 23036  0F41  3F41               	moviw [1]fsr1
 23037  0F42  00FB               	movwf	I2C1_ISR@i2c_address+1
 23038                           
 23039                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 23040  0F43  0877               	movf	_p_i2c1_trb_current,w
 23041  0F44  0086               	movwf	6
 23042  0F45  3001               	movlw	1	; select bank2/3
 23043  0F46  0087               	movwf	7
 23044  0F47  3001               	movlw	1	; select bank2/3
 23045  0F48  3F43               	moviw [3]fsr1
 23046  0F49  00C1               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 23047                           
 23048                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 23049  0F4A  0877               	movf	_p_i2c1_trb_current,w
 23050  0F4B  0086               	movwf	6
 23051  0F4C  3001               	movlw	1	; select bank2/3
 23052  0F4D  0087               	movwf	7
 23053  0F4E  3001               	movlw	1	; select bank2/3
 23054  0F4F  3F42               	moviw [2]fsr1
 23055  0F50  00C0               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 23056  0F51                     i1l6263:	
 23057                           
 23058                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 23059  0F51  087A               	movf	I2C1_ISR@i2c_address,w
 23060  0F52  0143               	movlb	3	; select bank3
 23061  0F53  008C               	movwf	12	;volatile
 23062                           
 23063                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 23064  0F54  1C7A               	btfss	I2C1_ISR@i2c_address,0
 23065  0F55  2F0D               	goto	i1l6229
 23066                           
 23067                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 23068  0F56  3005               	movlw	5
 23069  0F57  00F2               	movwf	??_I2C1_ISR
 23070  0F58  0872               	movf	??_I2C1_ISR,w
 23071  0F59  0141               	movlb	1	; select bank1
 23072  0F5A  00C4               	movwf	_i2c1_state^(0+128)
 23073                           
 23074                           ;mcc_generated_files/i2c1.c: 419:                 }
 23075  0F5B  0008               	return
 23076  0F5C                     i1l571:	
 23077                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 23078                           
 23079                           
 23080                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 23081  0F5C  0143               	movlb	3	; select bank3
 23082  0F5D  1F11               	btfss	17,6	;volatile
 23083  0F5E  2F6A               	goto	i1l6277
 23084                           
 23085                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 23086  0F5F  3001               	movlw	1
 23087  0F60  00F2               	movwf	??_I2C1_ISR
 23088  0F61  0872               	movf	??_I2C1_ISR,w
 23089  0F62  0141               	movlb	1	; select bank1
 23090  0F63  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23091                           
 23092                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 23093  0F64  0143               	movlb	3	; select bank3
 23094  0F65  1311               	bcf	17,6	;volatile
 23095                           
 23096                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 23097  0F66  3005               	movlw	5
 23098  0F67  3190  2078         	fcall	_I2C1_Stop
 23099                           
 23100                           ;mcc_generated_files/i2c1.c: 442:             }
 23101  0F69  0008               	return
 23102  0F6A                     i1l6277:	
 23103                           
 23104                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 23105  0F6A  3001               	movlw	1
 23106  0F6B  0141               	movlb	1	; select bank1
 23107  0F6C  02C0               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 23108  0F6D  0A40               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 23109  0F6E  1D03               	btfss	3,2
 23110  0F6F  2F7F               	goto	i1l6285
 23111                           
 23112                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 23113  0F70  3004               	movlw	4
 23114  0F71  00F2               	movwf	??_I2C1_ISR
 23115  0F72  0872               	movf	??_I2C1_ISR,w
 23116  0F73  07F7               	addwf	_p_i2c1_trb_current,f
 23117                           
 23118                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 23119  0F74  3001               	movlw	1
 23120  0F75  02C3               	subwf	_i2c1_trb_count^(0+128),f
 23121  0F76  1D03               	btfss	3,2
 23122  0F77  2F7C               	goto	i1l575
 23123                           
 23124                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 23125  0F78  3000               	movlw	0
 23126  0F79  3190  2078         	fcall	_I2C1_Stop
 23127                           
 23128                           ;mcc_generated_files/i2c1.c: 457:                     }
 23129  0F7B  0008               	return
 23130  0F7C                     i1l575:	
 23131                           ;mcc_generated_files/i2c1.c: 458:                     else
 23132                           
 23133                           
 23134                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 23135  0F7C  0143               	movlb	3	; select bank3
 23136  0F7D  1491               	bsf	17,1	;volatile
 23137  0F7E  2EEA               	goto	i1l6215
 23138  0F7F                     i1l6285:	
 23139                           
 23140                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 23141  0F7F  0841               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 23142  0F80  0086               	movwf	6
 23143  0F81  0187               	clrf	7
 23144  0F82  0801               	movf	1,w
 23145  0F83  0143               	movlb	3	; select bank3
 23146  0F84  008C               	movwf	12	;volatile
 23147  0F85  3001               	movlw	1
 23148  0F86  00F2               	movwf	??_I2C1_ISR
 23149  0F87  0872               	movf	??_I2C1_ISR,w
 23150  0F88  0141               	movlb	1	; select bank1
 23151  0F89  07C1               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 23152  0F8A  0008               	return
 23153  0F8B                     i1l578:	
 23154                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 23155                           
 23156                           
 23157                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 23158  0F8B  0143               	movlb	3	; select bank3
 23159  0F8C  1F11               	btfss	17,6	;volatile
 23160  0F8D  2F99               	goto	i1l579
 23161                           
 23162                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 23163  0F8E  3001               	movlw	1
 23164  0F8F  00F2               	movwf	??_I2C1_ISR
 23165  0F90  0872               	movf	??_I2C1_ISR,w
 23166  0F91  0141               	movlb	1	; select bank1
 23167  0F92  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23168                           
 23169                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 23170  0F93  3004               	movlw	4
 23171  0F94  3190  2078         	fcall	_I2C1_Stop
 23172                           
 23173                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 23174  0F96  0143               	movlb	3	; select bank3
 23175  0F97  1311               	bcf	17,6	;volatile
 23176                           
 23177                           ;mcc_generated_files/i2c1.c: 495:             }
 23178  0F98  0008               	return
 23179  0F99                     i1l579:	
 23180                           ;mcc_generated_files/i2c1.c: 496:             else
 23181                           
 23182                           
 23183                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 23184  0F99  1591               	bsf	17,3	;volatile
 23185                           
 23186                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 23187  0F9A  3008               	movlw	8
 23188  0F9B  00F2               	movwf	??_I2C1_ISR
 23189  0F9C  0872               	movf	??_I2C1_ISR,w
 23190  0F9D  0141               	movlb	1	; select bank1
 23191  0F9E  00C4               	movwf	_i2c1_state^(0+128)
 23192  0F9F  0008               	return
 23193  0FA0                     i1l6297:	
 23194                           
 23195                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 23196  0FA0  3008               	movlw	8
 23197  0FA1  00F2               	movwf	??_I2C1_ISR
 23198  0FA2  0872               	movf	??_I2C1_ISR,w
 23199  0FA3  00C4               	movwf	_i2c1_state^(0+128)
 23200                           
 23201                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 23202  0FA4  0143               	movlb	3	; select bank3
 23203  0FA5  1591               	bsf	17,3	;volatile
 23204                           
 23205                           ;mcc_generated_files/i2c1.c: 513:             break;
 23206  0FA6  0008               	return
 23207  0FA7                     i1l6301:	
 23208                           
 23209                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 23210  0FA7  0143               	movlb	3	; select bank3
 23211  0FA8  080C               	movf	12,w	;volatile
 23212  0FA9  00F2               	movwf	??_I2C1_ISR
 23213  0FAA  0141               	movlb	1	; select bank1
 23214  0FAB  0841               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 23215  0FAC  0086               	movwf	6
 23216  0FAD  0187               	clrf	7
 23217  0FAE  0872               	movf	??_I2C1_ISR,w
 23218  0FAF  0081               	movwf	1
 23219  0FB0  3001               	movlw	1
 23220  0FB1  00F2               	movwf	??_I2C1_ISR
 23221  0FB2  0872               	movf	??_I2C1_ISR,w
 23222  0FB3  07C1               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 23223                           
 23224                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 23225  0FB4  3001               	movlw	1
 23226  0FB5  02C0               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 23227  0FB6  1903               	btfsc	3,2
 23228  0FB7  2FC0               	goto	i1l583
 23229                           
 23230                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 23231  0FB8  0143               	movlb	3	; select bank3
 23232  0FB9  1291               	bcf	17,5	;volatile
 23233                           
 23234                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 23235  0FBA  3006               	movlw	6
 23236  0FBB  00F2               	movwf	??_I2C1_ISR
 23237  0FBC  0872               	movf	??_I2C1_ISR,w
 23238  0FBD  0141               	movlb	1	; select bank1
 23239  0FBE  00C4               	movwf	_i2c1_state^(0+128)
 23240                           
 23241                           ;mcc_generated_files/i2c1.c: 532:             }
 23242  0FBF  2FC4               	goto	i1l6313
 23243  0FC0                     i1l583:	
 23244                           ;mcc_generated_files/i2c1.c: 533:             else
 23245                           
 23246                           
 23247                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 23248  0FC0  0143               	movlb	3	; select bank3
 23249  0FC1  1691               	bsf	17,5	;volatile
 23250                           
 23251                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 23252  0FC2  319F  2753         	fcall	_I2C1_FunctionComplete
 23253  0FC4                     i1l6313:	
 23254                           
 23255                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 23256  0FC4  0143               	movlb	3	; select bank3
 23257  0FC5  1611               	bsf	17,4	;volatile
 23258                           
 23259                           ;mcc_generated_files/i2c1.c: 545:             break;
 23260  0FC6  0008               	return
 23261  0FC7                     i1l6315:	
 23262                           
 23263                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 23264  0FC7  3000               	movlw	0
 23265  0FC8  3190  2078         	fcall	_I2C1_Stop
 23266                           
 23267                           ;mcc_generated_files/i2c1.c: 552:             break;
 23268  0FCA  0008               	return
 23269  0FCB                     i1l6317:	
 23270                           
 23271                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 23272  0FCB  3001               	movlw	1
 23273  0FCC  00F2               	movwf	??_I2C1_ISR
 23274  0FCD  0872               	movf	??_I2C1_ISR,w
 23275  0FCE  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23276                           
 23277                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 23278  0FCF  3006               	movlw	6
 23279  0FD0  3190  2078         	fcall	_I2C1_Stop
 23280                           
 23281                           ;mcc_generated_files/i2c1.c: 560:             break;
 23282  0FD2  0008               	return
 23283  0FD3                     i1l6323:	
 23284  0FD3  0141               	movlb	1	; select bank1
 23285  0FD4  0844               	movf	_i2c1_state^(0+128),w
 23286  0FD5  00F2               	movwf	??_I2C1_ISR
 23287  0FD6  01F3               	clrf	??_I2C1_ISR+1
 23288                           
 23289                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23290                           ; Switch size 1, requested type "simple"
 23291                           ; Number of cases is 1, Range of values is 0 to 0
 23292                           ; switch strategies available:
 23293                           ; Name         Instructions Cycles
 23294                           ; simple_byte            4     3 (average)
 23295                           ; direct_byte            8     6 (fixed)
 23296                           ; jumptable            260     6 (fixed)
 23297                           ;	Chosen strategy is simple_byte
 23298  0FD7  0873               	movf	??_I2C1_ISR+1,w
 23299  0FD8  3A00               	xorlw	0	; case 0
 23300  0FD9  1903               	skipnz
 23301  0FDA  2FDC               	goto	i1l8979
 23302  0FDB  2FCB               	goto	i1l6317
 23303  0FDC                     i1l8979:	
 23304                           
 23305                           ; Switch size 1, requested type "simple"
 23306                           ; Number of cases is 11, Range of values is 0 to 11
 23307                           ; switch strategies available:
 23308                           ; Name         Instructions Cycles
 23309                           ; direct_byte           30     6 (fixed)
 23310                           ; simple_byte           34    18 (average)
 23311                           ; jumptable            260     6 (fixed)
 23312                           ;	Chosen strategy is simple_byte
 23313  0FDC  0872               	movf	??_I2C1_ISR,w
 23314  0FDD  3A00               	xorlw	0	; case 0
 23315  0FDE  1903               	skipnz
 23316  0FDF  2EC2               	goto	i1l549
 23317  0FE0  3A01               	xorlw	1	; case 1
 23318  0FE1  1903               	skipnz
 23319  0FE2  2EF0               	goto	i1l554
 23320  0FE3  3A03               	xorlw	3	; case 2
 23321  0FE4  1903               	skipnz
 23322  0FE5  2F38               	goto	i1l6243
 23323  0FE6  3A01               	xorlw	1	; case 3
 23324  0FE7  1903               	skipnz
 23325  0FE8  2F5C               	goto	i1l571
 23326  0FE9  3A07               	xorlw	7	; case 4
 23327  0FEA  1903               	skipnz
 23328  0FEB  2FC7               	goto	i1l6315
 23329  0FEC  3A01               	xorlw	1	; case 5
 23330  0FED  1903               	skipnz
 23331  0FEE  2F8B               	goto	i1l578
 23332  0FEF  3A03               	xorlw	3	; case 6
 23333  0FF0  1903               	skipnz
 23334  0FF1  2FA0               	goto	i1l6297
 23335  0FF2  3A01               	xorlw	1	; case 7
 23336  0FF3  1903               	skipnz
 23337  0FF4  2FC7               	goto	i1l6315
 23338  0FF5  3A0F               	xorlw	15	; case 8
 23339  0FF6  1903               	skipnz
 23340  0FF7  2FA7               	goto	i1l6301
 23341  0FF8  3A02               	xorlw	2	; case 10
 23342  0FF9  1903               	skipnz
 23343  0FFA  2EF1               	goto	i1l555
 23344  0FFB  3A01               	xorlw	1	; case 11
 23345  0FFC  1903               	skipnz
 23346  0FFD  2F13               	goto	i1l560
 23347  0FFE  2FCB               	goto	i1l6317
 23348  0FFF  0008               	return
 23349  1000                     __end_of_I2C1_ISR:	
 23350                           
 23351                           	psect	text92
 23352  1078                     __ptext92:	
 23353 ;; *************** function _I2C1_Stop *****************
 23354 ;; Defined at:
 23355 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 23356 ;; Parameters:    Size  Location     Type
 23357 ;;  completion_c    1    wreg     enum E10866
 23358 ;; Auto vars:     Size  Location     Type
 23359 ;;  completion_c    1    1[COMMON] enum E10866
 23360 ;; Return value:  Size  Location     Type
 23361 ;;                  1    wreg      void 
 23362 ;; Registers used:
 23363 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23364 ;; Tracked objects:
 23365 ;;		On entry : 0/0
 23366 ;;		On exit  : 0/0
 23367 ;;		Unchanged: 0/0
 23368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23373 ;;Total ram usage:        2 bytes
 23374 ;; Hardware stack levels used:    1
 23375 ;; This function calls:
 23376 ;;		Nothing
 23377 ;; This function is called by:
 23378 ;;		_I2C1_ISR
 23379 ;; This function uses a non-reentrant model
 23380 ;;
 23381                           
 23382                           
 23383                           ;psect for function _I2C1_Stop
 23384  1078                     _I2C1_Stop:	
 23385                           
 23386                           ;incstack = 0
 23387 ;; hardware stack exceeded
 23388                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 23389                           ;I2C1_Stop@completion_code stored from wreg
 23390  1078  00F1               	movwf	I2C1_Stop@completion_code
 23391                           
 23392                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 23393  1079  0143               	movlb	3	; select bank3
 23394  107A  1511               	bsf	17,2	;volatile
 23395                           
 23396                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 23397  107B  0141               	movlb	1	; select bank1
 23398  107C  0842               	movf	_p_i2c1_current^(0+128),w
 23399  107D  3E02               	addlw	2
 23400  107E  0086               	movwf	6
 23401  107F  3001               	movlw	1	; select bank2/3
 23402  1080  0087               	movwf	7
 23403  1081  0801               	movf	1,w
 23404  1082  1903               	btfsc	3,2
 23405  1083  2890               	goto	i1l5657
 23406                           
 23407                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 23408  1084  0871               	movf	I2C1_Stop@completion_code,w
 23409  1085  00F0               	movwf	??_I2C1_Stop
 23410  1086  0842               	movf	_p_i2c1_current^(0+128),w
 23411  1087  3E02               	addlw	2
 23412  1088  0086               	movwf	6
 23413  1089  3001               	movlw	1	; select bank2/3
 23414  108A  0087               	movwf	7
 23415  108B  0801               	movf	1,w
 23416  108C  0086               	movwf	6
 23417  108D  0187               	clrf	7
 23418  108E  0870               	movf	??_I2C1_Stop,w
 23419  108F  0081               	movwf	1
 23420  1090                     i1l5657:	
 23421                           
 23422                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 23423  1090  01C4               	clrf	_i2c1_state^(0+128)
 23424  1091  0008               	return
 23425  1092                     __end_of_I2C1_Stop:	
 23426                           
 23427                           	psect	text93
 23428  1F53                     __ptext93:	
 23429 ;; *************** function _I2C1_FunctionComplete *****************
 23430 ;; Defined at:
 23431 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 23432 ;; Parameters:    Size  Location     Type
 23433 ;;		None
 23434 ;; Auto vars:     Size  Location     Type
 23435 ;;		None
 23436 ;; Return value:  Size  Location     Type
 23437 ;;                  1    wreg      void 
 23438 ;; Registers used:
 23439 ;;		wreg, status,2, status,0
 23440 ;; Tracked objects:
 23441 ;;		On entry : 0/0
 23442 ;;		On exit  : 0/0
 23443 ;;		Unchanged: 0/0
 23444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23449 ;;Total ram usage:        1 bytes
 23450 ;; Hardware stack levels used:    1
 23451 ;; This function calls:
 23452 ;;		Nothing
 23453 ;; This function is called by:
 23454 ;;		_I2C1_ISR
 23455 ;; This function uses a non-reentrant model
 23456 ;;
 23457                           
 23458                           
 23459                           ;psect for function _I2C1_FunctionComplete
 23460  1F53                     _I2C1_FunctionComplete:	
 23461                           
 23462                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 23463                           
 23464                           ;incstack = 0
 23465 ;; hardware stack exceeded
 23466                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 23467  1F53  3004               	movlw	4
 23468  1F54  00F0               	movwf	??_I2C1_FunctionComplete
 23469  1F55  0870               	movf	??_I2C1_FunctionComplete,w
 23470  1F56  07F7               	addwf	_p_i2c1_trb_current,f
 23471                           
 23472                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 23473  1F57  3001               	movlw	1
 23474  1F58  0141               	movlb	1	; select bank1
 23475  1F59  02C3               	subwf	_i2c1_trb_count^(0+128),f
 23476  1F5A  1D03               	btfss	3,2
 23477  1F5B  2F61               	goto	i1l590
 23478                           
 23479                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 23480  1F5C  3004               	movlw	4
 23481  1F5D  00F0               	movwf	??_I2C1_FunctionComplete
 23482  1F5E  0870               	movf	??_I2C1_FunctionComplete,w
 23483  1F5F  00C4               	movwf	_i2c1_state^(0+128)
 23484                           
 23485                           ;mcc_generated_files/i2c1.c: 575:     }
 23486  1F60  0008               	return
 23487  1F61                     i1l590:	
 23488                           ;mcc_generated_files/i2c1.c: 576:     else
 23489                           
 23490                           
 23491                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 23492  1F61  01C4               	clrf	_i2c1_state^(0+128)
 23493  1F62  0AC4               	incf	_i2c1_state^(0+128),f
 23494  1F63  0008               	return
 23495  1F64                     __end_of_I2C1_FunctionComplete:	
 23496                           
 23497                           	psect	text94
 23498  1E57                     __ptext94:	
 23499 ;; *************** function _I2C1_BusCollisionISR *****************
 23500 ;; Defined at:
 23501 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 23502 ;; Parameters:    Size  Location     Type
 23503 ;;		None
 23504 ;; Auto vars:     Size  Location     Type
 23505 ;;		None
 23506 ;; Return value:  Size  Location     Type
 23507 ;;                  1    wreg      void 
 23508 ;; Registers used:
 23509 ;;		None
 23510 ;; Tracked objects:
 23511 ;;		On entry : 0/0
 23512 ;;		On exit  : 0/0
 23513 ;;		Unchanged: 0/0
 23514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23519 ;;Total ram usage:        0 bytes
 23520 ;; Hardware stack levels used:    1
 23521 ;; This function calls:
 23522 ;;		Nothing
 23523 ;; This function is called by:
 23524 ;;		_INTERRUPT_InterruptManager
 23525 ;; This function uses a non-reentrant model
 23526 ;;
 23527                           
 23528                           
 23529                           ;psect for function _I2C1_BusCollisionISR
 23530  1E57                     _I2C1_BusCollisionISR:	
 23531                           
 23532                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 23533                           
 23534                           ;incstack = 0
 23535 ;; hardware stack exceeded
 23536                           ; Regs used in _I2C1_BusCollisionISR: []
 23537  1E57  014E               	movlb	14	; select bank14
 23538  1E58  108F               	bcf	15,1	;volatile
 23539  1E59  0008               	return
 23540  1E5A                     __end_of_I2C1_BusCollisionISR:	
 23541                           
 23542                           	psect	text95
 23543  1316                     __ptext95:	
 23544 ;; *************** function _DMX_interrupt *****************
 23545 ;; Defined at:
 23546 ;;		line 54 in file "dmx.c"
 23547 ;; Parameters:    Size  Location     Type
 23548 ;;		None
 23549 ;; Auto vars:     Size  Location     Type
 23550 ;;  dummy           1    6[COMMON] volatile unsigned char 
 23551 ;; Return value:  Size  Location     Type
 23552 ;;                  1    wreg      void 
 23553 ;; Registers used:
 23554 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23555 ;; Tracked objects:
 23556 ;;		On entry : 0/0
 23557 ;;		On exit  : 0/0
 23558 ;;		Unchanged: 0/0
 23559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23562 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23563 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23564 ;;Total ram usage:        7 bytes
 23565 ;; Hardware stack levels used:    1
 23566 ;; This function calls:
 23567 ;;		Nothing
 23568 ;; This function is called by:
 23569 ;;		_DMX_init
 23570 ;;		_INTERRUPT_InterruptManager
 23571 ;; This function uses a non-reentrant model
 23572 ;;
 23573                           
 23574                           
 23575                           ;psect for function _DMX_interrupt
 23576  1316                     _DMX_interrupt:	
 23577                           
 23578                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 23579                           
 23580                           ;incstack = 0
 23581 ;; hardware stack exceeded
 23582                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 23583  1316  0142               	movlb	2	; select bank2
 23584  1317  1C9D               	btfss	29,1	;volatile
 23585  1318  2B1B               	goto	i1l6669
 23586                           
 23587                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 23588  1319  121D               	bcf	29,4	;volatile
 23589                           
 23590                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 23591  131A  161D               	bsf	29,4	;volatile
 23592  131B                     i1l6669:	
 23593                           
 23594                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 23595  131B  0864               	movf	_initial^(0+256),w
 23596  131C  0465               	iorwf	(_initial+1)^(0+256),w
 23597  131D  1903               	btfsc	3,2
 23598  131E  191D               	btfsc	29,2	;volatile
 23599  131F  2B3C               	goto	i1l6677
 23600                           
 23601                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 23602  1320  0819               	movf	25,w	;volatile
 23603  1321  00F0               	movwf	??_DMX_interrupt
 23604  1322  01F1               	clrf	??_DMX_interrupt+1
 23605  1323  083B               	movf	(_arrayIndex+1)^(0+256),w
 23606  1324  00F3               	movwf	??_DMX_interrupt+3
 23607  1325  083A               	movf	_arrayIndex^(0+256),w
 23608  1326  00F2               	movwf	??_DMX_interrupt+2
 23609  1327  35F2               	lslf	??_DMX_interrupt+2,f
 23610  1328  0DF3               	rlf	??_DMX_interrupt+3,f
 23611  1329  30EE               	movlw	238
 23612  132A  00F4               	movwf	??_DMX_interrupt+4
 23613  132B  3023               	movlw	35
 23614  132C  00F5               	movwf	??_DMX_interrupt+5
 23615  132D  0872               	movf	??_DMX_interrupt+2,w
 23616  132E  0774               	addwf	??_DMX_interrupt+4,w
 23617  132F  0086               	movwf	6
 23618  1330  0873               	movf	??_DMX_interrupt+3,w
 23619  1331  3D75               	addwfc	??_DMX_interrupt+5,w
 23620  1332  0087               	movwf	7
 23621  1333  0870               	movf	??_DMX_interrupt,w
 23622  1334  3FC0               	movwi [0]fsr1
 23623  1335  0871               	movf	??_DMX_interrupt+1,w
 23624  1336  3FC1               	movwi [1]fsr1
 23625                           
 23626                           ;dmx.c: 63:         arrayIndex += 1;
 23627  1337  3001               	movlw	1
 23628  1338  07BA               	addwf	_arrayIndex^(0+256),f
 23629  1339  3000               	movlw	0
 23630  133A  3DBB               	addwfc	(_arrayIndex+1)^(0+256),f
 23631                           
 23632                           ;dmx.c: 64:     } else {
 23633  133B  2B44               	goto	i1l6681
 23634  133C                     i1l6677:	
 23635                           
 23636                           ;dmx.c: 65:         arrayIndex = 0;
 23637  133C  01BA               	clrf	_arrayIndex^(0+256)
 23638  133D  01BB               	clrf	(_arrayIndex+1)^(0+256)
 23639                           
 23640                           ;dmx.c: 66:         initial = 0;
 23641  133E  01E4               	clrf	_initial^(0+256)
 23642  133F  01E5               	clrf	(_initial+1)^(0+256)
 23643                           
 23644                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 23645  1340  0819               	movf	25,w	;volatile
 23646  1341  00F0               	movwf	??_DMX_interrupt
 23647  1342  0870               	movf	??_DMX_interrupt,w
 23648  1343  00F6               	movwf	DMX_interrupt@dummy	;volatile
 23649  1344                     i1l6681:	
 23650                           
 23651                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 23652  1344  014E               	movlb	14	; select bank14
 23653  1345  128F               	bcf	15,5	;volatile
 23654  1346  0008               	return
 23655  1347                     __end_of_DMX_interrupt:	
 23656                           
 23657                           	psect	text96
 23658  137A                     __ptext96:	
 23659 ;; *************** function _EUSART1_Receive_ISR *****************
 23660 ;; Defined at:
 23661 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 23662 ;; Parameters:    Size  Location     Type
 23663 ;;		None
 23664 ;; Auto vars:     Size  Location     Type
 23665 ;;		None
 23666 ;; Return value:  Size  Location     Type
 23667 ;;                  1    wreg      void 
 23668 ;; Registers used:
 23669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23670 ;; Tracked objects:
 23671 ;;		On entry : 0/0
 23672 ;;		On exit  : 0/0
 23673 ;;		Unchanged: 0/0
 23674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23679 ;;Total ram usage:        0 bytes
 23680 ;; Hardware stack levels used:    1
 23681 ;; Hardware stack levels required when called:    2
 23682 ;; This function calls:
 23683 ;;		Absolute function
 23684 ;;		_EUSART1_DefaultErrorHandler
 23685 ;;		_EUSART1_DefaultFramingErrorHandler
 23686 ;;		_EUSART1_DefaultOverrunErrorHandler
 23687 ;;		_EUSART1_RxDataHandler
 23688 ;; This function is called by:
 23689 ;;		_EUSART1_Initialize
 23690 ;;		_INTERRUPT_InterruptManager
 23691 ;; This function uses a non-reentrant model
 23692 ;;
 23693                           
 23694                           
 23695                           ;psect for function _EUSART1_Receive_ISR
 23696  137A                     _EUSART1_Receive_ISR:	
 23697                           
 23698                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 23699                           
 23700                           ;incstack = 0
 23701 ;; hardware stack exceeded
 23702                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23703  137A  0879               	movf	_eusart1RxHead,w	;volatile
 23704  137B  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23705  137C  0086               	movwf	6
 23706  137D  3001               	movlw	1	; select bank2/3
 23707  137E  0087               	movwf	7
 23708  137F  0181               	clrf	1
 23709                           
 23710                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 23711  1380  0142               	movlb	2	; select bank2
 23712  1381  1D1D               	btfss	29,2	;volatile
 23713  1382  2B8E               	goto	i1l6167
 23714                           
 23715                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 23716  1383  0879               	movf	_eusart1RxHead,w	;volatile
 23717  1384  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23718  1385  0086               	movwf	6
 23719  1386  3001               	movlw	1	; select bank2/3
 23720  1387  0087               	movwf	7
 23721  1388  1481               	bsf	1,1
 23722                           
 23723                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 23724  1389  0861               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 23725  138A  008A               	movwf	10
 23726  138B  0860               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 23727  138C  000A               	callw
 23728  138D  3193               	pagesel	$
 23729  138E                     i1l6167:	
 23730                           
 23731                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 23732  138E  0142               	movlb	2	; select bank2
 23733  138F  1C9D               	btfss	29,1	;volatile
 23734  1390  2B9C               	goto	i1l6173
 23735                           
 23736                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 23737  1391  0879               	movf	_eusart1RxHead,w	;volatile
 23738  1392  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23739  1393  0086               	movwf	6
 23740  1394  3001               	movlw	1	; select bank2/3
 23741  1395  0087               	movwf	7
 23742  1396  1501               	bsf	1,2
 23743                           
 23744                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 23745  1397  085F               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 23746  1398  008A               	movwf	10
 23747  1399  085E               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 23748  139A  000A               	callw
 23749  139B  3193               	pagesel	$
 23750  139C                     i1l6173:	
 23751                           
 23752                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 23753  139C  0879               	movf	_eusart1RxHead,w	;volatile
 23754  139D  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23755  139E  0086               	movwf	6
 23756  139F  3001               	movlw	1	; select bank2/3
 23757  13A0  0087               	movwf	7
 23758  13A1  0801               	movf	1,w
 23759  13A2  1903               	btfsc	3,2
 23760  13A3  2BAB               	goto	i1l6177
 23761                           
 23762                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 23763  13A4  0142               	movlb	2	; select bank2
 23764  13A5  085D               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 23765  13A6  008A               	movwf	10
 23766  13A7  085C               	movf	_EUSART1_ErrorHandler^(0+256),w
 23767  13A8  000A               	callw
 23768  13A9  3193               	pagesel	$
 23769                           
 23770                           ;mcc_generated_files/eusart1.c: 188:     } else {
 23771  13AA  0008               	return
 23772  13AB                     i1l6177:	
 23773                           
 23774                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 23775  13AB  3190  2017         	fcall	_EUSART1_RxDataHandler
 23776  13AD  0008               	return
 23777  13AE                     __end_of_EUSART1_Receive_ISR:	
 23778                           
 23779                           	psect	text97
 23780  1E67                     __ptext97:	
 23781 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 23782 ;; Defined at:
 23783 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 23784 ;; Parameters:    Size  Location     Type
 23785 ;;		None
 23786 ;; Auto vars:     Size  Location     Type
 23787 ;;		None
 23788 ;; Return value:  Size  Location     Type
 23789 ;;                  1    wreg      void 
 23790 ;; Registers used:
 23791 ;;		None
 23792 ;; Tracked objects:
 23793 ;;		On entry : 0/0
 23794 ;;		On exit  : 0/0
 23795 ;;		Unchanged: 0/0
 23796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23801 ;;Total ram usage:        0 bytes
 23802 ;; Hardware stack levels used:    1
 23803 ;; This function calls:
 23804 ;;		Nothing
 23805 ;; This function is called by:
 23806 ;;		_EUSART1_Initialize
 23807 ;;		_EUSART1_Receive_ISR
 23808 ;; This function uses a non-reentrant model
 23809 ;;
 23810                           
 23811                           
 23812                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 23813  1E67                     _EUSART1_DefaultOverrunErrorHandler:	
 23814                           
 23815                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 23816                           
 23817                           ;incstack = 0
 23818 ;; hardware stack exceeded
 23819                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 23820  1E67  0142               	movlb	2	; select bank2
 23821  1E68  121D               	bcf	29,4	;volatile
 23822                           
 23823                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 23824  1E69  161D               	bsf	29,4	;volatile
 23825  1E6A  0008               	return
 23826  1E6B                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 23827                           
 23828                           	psect	text98
 23829  1E4D                     __ptext98:	
 23830 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 23831 ;; Defined at:
 23832 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 23833 ;; Parameters:    Size  Location     Type
 23834 ;;		None
 23835 ;; Auto vars:     Size  Location     Type
 23836 ;;		None
 23837 ;; Return value:  Size  Location     Type
 23838 ;;                  1    wreg      void 
 23839 ;; Registers used:
 23840 ;;		None
 23841 ;; Tracked objects:
 23842 ;;		On entry : 0/0
 23843 ;;		On exit  : 0/0
 23844 ;;		Unchanged: 0/0
 23845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23850 ;;Total ram usage:        0 bytes
 23851 ;; Hardware stack levels used:    1
 23852 ;; This function calls:
 23853 ;;		Nothing
 23854 ;; This function is called by:
 23855 ;;		_EUSART1_Initialize
 23856 ;;		_EUSART1_Receive_ISR
 23857 ;; This function uses a non-reentrant model
 23858 ;;
 23859                           
 23860                           
 23861                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 23862  1E4D                     _EUSART1_DefaultFramingErrorHandler:	
 23863                           
 23864                           ;incstack = 0
 23865 ;; hardware stack exceeded
 23866                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 23867  1E4D  0008               	return
 23868  1E4E                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 23869                           
 23870                           	psect	text99
 23871  1E54                     __ptext99:	
 23872 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 23873 ;; Defined at:
 23874 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 23875 ;; Parameters:    Size  Location     Type
 23876 ;;		None
 23877 ;; Auto vars:     Size  Location     Type
 23878 ;;		None
 23879 ;; Return value:  Size  Location     Type
 23880 ;;                  1    wreg      void 
 23881 ;; Registers used:
 23882 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23883 ;; Tracked objects:
 23884 ;;		On entry : 0/0
 23885 ;;		On exit  : 0/0
 23886 ;;		Unchanged: 0/0
 23887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23892 ;;Total ram usage:        0 bytes
 23893 ;; Hardware stack levels used:    1
 23894 ;; Hardware stack levels required when called:    1
 23895 ;; This function calls:
 23896 ;;		_EUSART1_RxDataHandler
 23897 ;; This function is called by:
 23898 ;;		_EUSART1_Initialize
 23899 ;;		_EUSART1_Receive_ISR
 23900 ;; This function uses a non-reentrant model
 23901 ;;
 23902                           
 23903                           
 23904                           ;psect for function _EUSART1_DefaultErrorHandler
 23905  1E54                     _EUSART1_DefaultErrorHandler:	
 23906                           
 23907                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 23908                           
 23909                           ;incstack = 0
 23910 ;; hardware stack exceeded
 23911                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 23912  1E54  3190  2017         	fcall	_EUSART1_RxDataHandler
 23913  1E56  0008               	return
 23914  1E57                     __end_of_EUSART1_DefaultErrorHandler:	
 23915                           
 23916                           	psect	text100
 23917  1017                     __ptext100:	
 23918 ;; *************** function _EUSART1_RxDataHandler *****************
 23919 ;; Defined at:
 23920 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 23921 ;; Parameters:    Size  Location     Type
 23922 ;;		None
 23923 ;; Auto vars:     Size  Location     Type
 23924 ;;		None
 23925 ;; Return value:  Size  Location     Type
 23926 ;;                  1    wreg      void 
 23927 ;; Registers used:
 23928 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23929 ;; Tracked objects:
 23930 ;;		On entry : 0/0
 23931 ;;		On exit  : 0/0
 23932 ;;		Unchanged: 0/0
 23933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23938 ;;Total ram usage:        1 bytes
 23939 ;; Hardware stack levels used:    1
 23940 ;; This function calls:
 23941 ;;		Nothing
 23942 ;; This function is called by:
 23943 ;;		_EUSART1_Receive_ISR
 23944 ;;		_EUSART1_DefaultErrorHandler
 23945 ;; This function uses a non-reentrant model
 23946 ;;
 23947                           
 23948                           
 23949                           ;psect for function _EUSART1_RxDataHandler
 23950  1017                     _EUSART1_RxDataHandler:	
 23951                           
 23952                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 23953                           
 23954                           ;incstack = 0
 23955 ;; hardware stack exceeded
 23956                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 23957  1017  0142               	movlb	2	; select bank2
 23958  1018  0819               	movf	25,w	;volatile
 23959  1019  00F0               	movwf	??_EUSART1_RxDataHandler
 23960  101A  0879               	movf	_eusart1RxHead,w
 23961  101B  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 23962  101C  0086               	movwf	6
 23963  101D  3001               	movlw	1	; select bank2/3
 23964  101E  0087               	movwf	7
 23965  101F  0870               	movf	??_EUSART1_RxDataHandler,w
 23966  1020  0081               	movwf	1
 23967  1021  3001               	movlw	1
 23968  1022  00F0               	movwf	??_EUSART1_RxDataHandler
 23969  1023  0870               	movf	??_EUSART1_RxDataHandler,w
 23970  1024  07F9               	addwf	_eusart1RxHead,f	;volatile
 23971                           
 23972                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 23973  1025  3008               	movlw	8
 23974  1026  0279               	subwf	_eusart1RxHead,w	;volatile
 23975  1027  1803               	btfsc	3,0
 23976                           
 23977                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 23978  1028  01F9               	clrf	_eusart1RxHead	;volatile
 23979                           
 23980                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 23981  1029  3001               	movlw	1
 23982  102A  00F0               	movwf	??_EUSART1_RxDataHandler
 23983  102B  0870               	movf	??_EUSART1_RxDataHandler,w
 23984  102C  0141               	movlb	1	; select bank1
 23985  102D  07C6               	addwf	_eusart1RxCount^(0+128),f	;volatile
 23986  102E  0008               	return
 23987  102F                     __end_of_EUSART1_RxDataHandler:	
 23988                           
 23989                           	psect	text101
 23990  1F1C                     __ptext101:	
 23991 ;; *************** function _ADCC_ThresholdISR *****************
 23992 ;; Defined at:
 23993 ;;		line 308 in file "mcc_generated_files/adcc.c"
 23994 ;; Parameters:    Size  Location     Type
 23995 ;;		None
 23996 ;; Auto vars:     Size  Location     Type
 23997 ;;		None
 23998 ;; Return value:  Size  Location     Type
 23999 ;;                  1    wreg      void 
 24000 ;; Registers used:
 24001 ;;		wreg, status,2, status,0, pclath, cstack
 24002 ;; Tracked objects:
 24003 ;;		On entry : 0/0
 24004 ;;		On exit  : 0/0
 24005 ;;		Unchanged: 0/0
 24006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24011 ;;Total ram usage:        0 bytes
 24012 ;; Hardware stack levels used:    1
 24013 ;; Hardware stack levels required when called:    1
 24014 ;; This function calls:
 24015 ;;		Absolute function
 24016 ;;		_ADCC_DefaultInterruptHandler
 24017 ;;		_adcThresholdHandler
 24018 ;; This function is called by:
 24019 ;;		_INTERRUPT_InterruptManager
 24020 ;; This function uses a non-reentrant model
 24021 ;;
 24022                           
 24023                           
 24024                           ;psect for function _ADCC_ThresholdISR
 24025  1F1C                     _ADCC_ThresholdISR:	
 24026                           
 24027                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 24028                           
 24029                           ;incstack = 0
 24030 ;; hardware stack exceeded
 24031                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 24032  1F1C  014E               	movlb	14	; select bank14
 24033  1F1D  108D               	bcf	13,1	;volatile
 24034                           
 24035                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 24036  1F1E  0142               	movlb	2	; select bank2
 24037  1F1F  0858               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 24038  1F20  0459               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 24039  1F21  1903               	btfsc	3,2
 24040  1F22  0008               	return
 24041                           
 24042                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 24043  1F23  0859               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 24044  1F24  008A               	movwf	10
 24045  1F25  0858               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 24046  1F26  000A               	callw
 24047  1F27  319F               	pagesel	$
 24048  1F28  0008               	return
 24049  1F29                     __end_of_ADCC_ThresholdISR:	
 24050                           
 24051                           	psect	text102
 24052  1E4C                     __ptext102:	
 24053 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24054 ;; Defined at:
 24055 ;;		line 320 in file "mcc_generated_files/adcc.c"
 24056 ;; Parameters:    Size  Location     Type
 24057 ;;		None
 24058 ;; Auto vars:     Size  Location     Type
 24059 ;;		None
 24060 ;; Return value:  Size  Location     Type
 24061 ;;                  1    wreg      void 
 24062 ;; Registers used:
 24063 ;;		None
 24064 ;; Tracked objects:
 24065 ;;		On entry : 0/0
 24066 ;;		On exit  : 0/0
 24067 ;;		Unchanged: 0/0
 24068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24073 ;;Total ram usage:        0 bytes
 24074 ;; Hardware stack levels used:    1
 24075 ;; This function calls:
 24076 ;;		Nothing
 24077 ;; This function is called by:
 24078 ;;		_ADCC_Initialize
 24079 ;;		_ADCC_ThresholdISR
 24080 ;; This function uses a non-reentrant model
 24081 ;;
 24082                           
 24083                           
 24084                           ;psect for function _ADCC_DefaultInterruptHandler
 24085  1E4C                     _ADCC_DefaultInterruptHandler:	
 24086                           
 24087                           ;incstack = 0
 24088 ;; hardware stack exceeded
 24089                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 24090  1E4C  0008               	return
 24091  1E4D                     __end_of_ADCC_DefaultInterruptHandler:	
 24092                           
 24093                           	psect	text103
 24094  1E63                     __ptext103:	
 24095 ;; *************** function _adcThresholdHandler *****************
 24096 ;; Defined at:
 24097 ;;		line 35 in file "beat.c"
 24098 ;; Parameters:    Size  Location     Type
 24099 ;;		None
 24100 ;; Auto vars:     Size  Location     Type
 24101 ;;		None
 24102 ;; Return value:  Size  Location     Type
 24103 ;;                  1    wreg      void 
 24104 ;; Registers used:
 24105 ;;		None
 24106 ;; Tracked objects:
 24107 ;;		On entry : 0/0
 24108 ;;		On exit  : 0/0
 24109 ;;		Unchanged: 0/0
 24110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24115 ;;Total ram usage:        0 bytes
 24116 ;; Hardware stack levels used:    1
 24117 ;; This function calls:
 24118 ;;		Nothing
 24119 ;; This function is called by:
 24120 ;;		_BEAT_init
 24121 ;;		_ADCC_ThresholdISR
 24122 ;; This function uses a non-reentrant model
 24123 ;;
 24124                           
 24125                           
 24126                           ;psect for function _adcThresholdHandler
 24127  1E63                     _adcThresholdHandler:	
 24128                           
 24129                           ;beat.c: 36:     thresholdExceeded = 1;
 24130                           
 24131                           ;incstack = 0
 24132 ;; hardware stack exceeded
 24133                           ; Regs used in _adcThresholdHandler: []
 24134  1E63  0141               	movlb	1	; select bank1
 24135  1E64  01AE               	clrf	_thresholdExceeded^(0+128)
 24136  1E65  0AAE               	incf	_thresholdExceeded^(0+128),f
 24137  1E66  0008               	return
 24138  1E67                     __end_of_adcThresholdHandler:	
 24139  007E                     btemp	set	126	;btemp
 24140  007E                     int$flags	set	126
 24141  007E                     wtemp0	set	126


Data Sizes:
    Strings     145
    Constant    96
    Data        12
    BSS         164
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     37      80
    BANK2            80      6      80
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_14(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_14(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_22(CODE[6]), STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[9]), 
		 -> STR_18(CODE[10]), STR_17(CODE[9]), STR_16(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S3089_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_22(CODE[6]), STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[9]), 
		 -> STR_18(CODE[10]), STR_17(CODE[9]), STR_16(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_22(CODE[6]), STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[9]), 
		 -> STR_18(CODE[10]), STR_17(CODE[9]), STR_16(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1990$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1140$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S1163$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S1163$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_printf
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_beatColorCreator
    _LED_task_BEAT_STROBE->_beatColorCreator
    _beatColorCreator->_beatBrightnessCalculation
    _beatBrightnessCalculation->___fltol
    _LED_setColor->_beatColorCreator
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _DMX_init->_TM1650_fastPrintNum
    _CONTROLLER_task->_menuSelection
    _menuSelection->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _CONTROL_MANUAL->_colorDec
    _CONTROL_MANUAL->_colorInc
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->_I2C1_MasterWrite
    _writeData->___lwmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CONTROL_BEAT->_BUTTONS_isHeld
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _TM1650_init->_printf
    _LED_task->_LED_task_DMX
    _LED_task_DMX->_LED_setColor
    _LED_task_BEAT_STROBE->_LED_setColor
    _beatColorCreator->_beatBrightnessCalculation
    _LED_setColor->_beatColorCreator
    _CONTROLLER_task->_printf
    _menuSelection->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _LED_task->_LED_task_DMX

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  147357
                                              4 BANK2      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   19447
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0   64857
                                             35 BANK1      2     2      0
                       _LED_setColor
                 _LED_task_ANIMATION
           _LED_task_BEAT_CONTINUOUS
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
                       _LED_task_DMX
                    _LED_task_MANUAL
                   _beatColorCreator
                          _getIsHold
                            _getMode
 ---------------------------------------------------------------------------------
 (2) _getMode                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getIsHold                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_MANUAL                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_DMX                                         9     9      0   11647
                                             30 BANK1      5     5      0
                                              0 BANK2      4     4      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (3) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_STROBE                                 2     2      0   26605
                                             30 BANK1      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
                   _beatColorCreator
 ---------------------------------------------------------------------------------
 (2) _beatColorCreator                                    14    10      4   15103
                                             78 BANK0      1     1      0
                                              9 BANK1     13     9      4
                            ___fltol
          _beatBrightnessCalculation
 ---------------------------------------------------------------------------------
 (3) _beatBrightnessCalculation                           10     6      4    8509
                                             77 BANK0      1     1      0
                                              0 BANK1      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         8     4      4   11502
                                             22 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _beatColorCreator (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     930
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4    1061
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4073
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    2411
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_MIXED                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_FADE                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_CONTINUOUS                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    5293
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   53091
                                             79 BANK0      1     1      0
                                             10 BANK1      2     2      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                       _CONTROL_BEAT
                        _CONTROL_DMX
                     _CONTROL_MANUAL
                      _TM1650_enable
                _TM1650_fastPrintNum
                     _getManualColor
                      _menuSelection
                             _printf
 ---------------------------------------------------------------------------------
 (2) _menuSelection                                        2     2      0   16746
                                             77 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   16746
                                             73 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   14775
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   14340
                                             56 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2    9778
                                             50 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    9534
                                             41 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    4282
                                             33 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    3890
                                             25 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    2946
                                             23 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    2822
                                             20 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _getManualColor                                       3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2701
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _CONTROL_MANUAL                                       3     3      0     590
                                              3 BANK0      3     3      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                           _colorDec
                           _colorInc
 ---------------------------------------------------------------------------------
 (3) _colorInc                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _colorDec                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0   10555
                                             23 BANK0      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0    5082
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0    5082
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    5082
                                             20 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                     _getManualColor (ARG)
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    2670
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1400
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         2     2      0     394
                                              1 BANK0      2     2      0
                     _BUTTONS_isHeld
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     391
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     849
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1167
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _CONTROL_BEAT
       _BUTTONS_isHeld
     _CONTROL_DMX
       _BUTTONS_isHeld
       _CLOCK_getTime
       _address_dec
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _getManualColor (ARG)
           _writeData (ARG)
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
       _address_inc
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _getManualColor (ARG)
           _writeData (ARG)
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
     _CONTROL_MANUAL
       _BUTTONS_isHeld
       _CLOCK_getTime
       _colorDec
       _colorInc
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _getManualColor (ARG)
       _writeData (ARG)
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _getManualColor
     _menuSelection
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _getManualColor (ARG)
       _writeData (ARG)
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_task
     _LED_setColor
       _PWM1_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM2_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM3_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM4_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _beatColorCreator (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_ANIMATION
     _LED_task_BEAT_CONTINUOUS
     _LED_task_BEAT_FADE
     _LED_task_BEAT_MIXED
     _LED_task_BEAT_STROBE
       _BEAT_detected
       _CLOCK_getTime
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _beatColorCreator
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_DMX
       _DMX_getAddress
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _LED_task_MANUAL
     _beatColorCreator
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _beatBrightnessCalculation
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _getIsHold
     _getMode
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     13E       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      6      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     13E      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 29 14:56:21 2019

                       __end_of_LED_task_MANUAL 1E54                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0070                                              _up 00BD  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00D2  
                           __Umul8_16@word_mpld 0026                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 1E63                                             l911 0E97  
                                           l909 0E32                                             _PR2 028D  
                                           _bpm 0140                                             _pad 1519  
                       __size_of_PMD_Initialize 000A                                 _TMR2_Initialize 1F36  
                               _PWM4_Initialize 0800                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                    ___flmul@aexp 0056  
                                  ___flmul@bexp 005B                              _LED_task_BEAT_FADE 1E51  
                                  ___flmul@sign 0055                                    ___flmul@temp 0060  
                                  ___flmul@prod 005C                                   __CFG_BBEN$OFF 0000  
                              __end_of_I2C1_ISR 1000                                    ___fltol@exp1 006C  
                                          l1020 030F                                            l1017 0305  
                                          l1106 16AE                                            l1140 0BF5  
                                          l1109 16CB                                            l1063 178F  
                                          l2111 0862                                            l1128 0BE0  
                                          l1072 17FF                                            l2033 0491  
                                          l2124 08AC                                            l2125 08B6  
                                          l2117 0898                                            l1086 092E  
                                          l2054 0598                                            l2055 05B0  
                                          l2057 05BD                                            l2163 1174  
                                          l1453 14CA                                            l2085 02AF  
                                          l1471 1213                                            l1376 0B7C  
                                          l1466 144D                                            l1651 1551  
                                          l1648 1531                                            l6001 11F4  
                                          l6013 11FA                                            l6021 11FD  
                          _ADCC_StartConversion 1E94                                            l6007 11F7  
                                          l5421 1430                                            l5413 1422  
                                          l1877 160B                                            ?_pad 0049  
                                          l5417 1429                                            l5409 141B  
                                          l4721 1058                                            l8003 0947  
                                          l5427 1437                                            l7115 1527  
                                          l4901 12A9                                            l7037 1E6F  
                                          l7053 15AE                                            l8013 094F  
                                          l5381 1488                                            l7109 1218  
                                          l7125 1533                                            l7205 15CB  
                                          l7055 15B4                                            l7071 10C5  
                                          l8023 0956                                            l4719 104C  
                                          l7119 152F                                            l7151 116E  
                                          l4905 12B2                                            l7049 15A7  
                                          l7065 1283                                            l8041 0971  
                                          l5393 14A9                                            l5385 1493  
                                          l8121 0BE2                                            l7081 11B4  
                                          l7129 155D                                            l7137 12F5  
                                          l7313 0503                                            l7321 04E5  
                                          l7225 15F9                                            l7209 15D4  
                                          l8123 0BA1                                            l7083 11B6  
                                          l7139 12FE                                            l7323 0521  
                                          l7411 00CD                                            l7235 1618  
                                          l7227 1607                                            l8061 16BD  
                                          l5389 149E                                            l8205 1FE4  
                                          l7253 0462                                            l7501 0285  
                                          l7413 00CF                                            l4871 13B7  
                                          l5399 14B4                                            l7095 1458  
                                          l7319 051C                                            l7423 00E5  
                                          l7415 00D7                                            l8231 0760  
                                          l4873 13C3                                            l8401 0E78  
                                          l8073 16CA                                            l8161 0BF9  
                                          l8137 0BEA                                            l7185 09E7  
                                          l7345 0555                                            l7337 0527  
                                          l7273 0486                                            l7257 0465  
                                          l8305 0789                                            l4883 13DE  
                                          l8067 16CD                                            l8163 0BFB  
                                          l8139 0BD6                                            l7099 147B  
                                          l7179 09C6                                            l7195 09F8  
                                          l7603 10E0                                            l7339 053E  
                                          l7259 046D                                            l7507 029C  
                                          l7531 0871                                            l8251 0767  
                                          l8093 16ED                                            l8069 16C4  
                                          l8165 0C01                                            l8149 0BDC  
                                          l7189 09ED                                            l8501 0418  
                                          l7373 05B9                                            l7349 0557  
                                          l7293 04BC                                            l7277 0489  
                                          l7525 085A                                            l8237 07A3  
                                          l4879 13D5                                            l8087 16E0  
                                          l4895 1291                                            l8511 03B3  
                                          l8503 03A8                                            l8431 0308  
                                          l7359 0580                                            l7287 04B0  
                                          l7535 0875                                            l8263 076F  
                                          l4897 129D                                            l7633 0C60  
                                          l8169 0C04                                            l8177 0C1B  
                                          l7393 00AA                                            l7545 08AA  
                                          l7537 0885                                            l8281 0775  
                                          l8257 0769                                            l8099 16FB  
                                          l8187 0C33                                            l8451 0325  
                                          l7707 1EBF                                            l7619 10FE  
                                          l7571 111C                                            l7483 0245  
                                          l7475 0217                                            l7395 00AC  
                                          l7547 089D                                            l7731 0A6F  
                                          l7723 0A45                                            l8613 0DA6  
                                          l7645 12C0                                            l8541 042A  
                                          l8533 0426                                            l8525 0422  
                                          l8517 041E                                            l8509 041B  
                                          l7477 022E                                            l7397 00B4  
                                          l7741 0AC0                                            l7725 0A46  
                                          l8293 077E                                            l8269 0772  
                                          l8621 0ACB                                            l8391 0E4A  
                                          l7647 12DD                                            l8551 03FF  
                                          l8535 03E9                                            l8527 03D7  
                                          l8519 03C5                                            l8471 0351  
                                          l8463 033C                                            l8455 032D  
                                          l8447 031E                                            l7487 0247  
                                          l7559 08D1                                            l7743 0AC1  
                                          l7735 0A97                                            l8287 0779  
                                          l8623 0ACE                                            l8385 0E2C  
                                          l8377 0DEB                                            l7673 1F51  
                                          l8553 0401                                            l8465 0340  
                                          l8473 0353                                            l7497 0270  
                                          l7737 0A98                                            l7729 0A6E  
                                          l8641 0B25                                            l8633 0B05  
                                          l5995 11F1                                            l8547 03FB  
                                          l8491 0411                                            l8483 038A  
                                          l7587 113A                                            l8299 0781  
                                          l8651 0B4B                                            l8635 0B08  
                                          l8627 0AE8                                            l8581 0D2C  
                                          l7909 1FAC                                            l7933 17AF  
                                          l7925 179F                                            l8549 03FD  
                                          l8493 0414                                            l8485 038E  
                                          l8477 0362                                            l8645 0B3F  
                                          l8629 0AEB                                            l8399 0E6E  
                                          l7695 1039                                            l7687 106A  
                                          l7951 17D5                                            l7935 17B0  
                                          l7927 17A6                                            l7919 1791  
                                          l8495 039D                                            l8647 0B42  
                                          l8639 0B22                                            l8577 0D25  
                                          l7697 103D                                            l7689 106E  
                                          l7953 17DD                                            l7945 17BD  
                                          l8657 0B5A                                            l7947 17C5  
                                          l8597 0D60                                            l7981 08FB  
                                          l7949 17CD                                            l7957 17E5  
                                          l8599 0D73                                            l8689 0837  
                                          l7995 0938                                            l7979 0930  
                                          l8971 1205                                            l8973 0C0D  
                                          l8965 0B65                                  ?_TM1650_enable 0070  
                                          l8975 14BC                                            l8967 0439  
                                          STR_1 207B                                            STR_2 208C  
                                          l8977 143F                                            l8969 17EE  
                                          STR_3 204D                                            STR_4 2045  
                                          STR_5 203D                                            STR_6 2035  
                                          STR_7 2075                                            STR_8 2081  
                                          STR_9 2081                         __end_of_PWM1_Initialize 1EFA  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            _T2PR 028D  
                                          u3605 1294                                            u3535 13BA  
                                          u3625 12A3                                            u3555 13C4  
                                          u3635 12AA                                            _PMD0 0796  
                                          u3565 13CE                                            u7005 05A2  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u3575 13D6                                            _PMD3 0799  
                                          _PMD4 079A                                            u7105 015B  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u7115 018A                                            _PMD7 079D  
                                          u7125 01E0                                            u7135 01F7  
                                          u6505 1479                                            u7145 0206  
                                          u7155 021A                                            u7315 087E  
                                          u7245 025E                                            u8055 0B9A  
                                          u7255 0279                                            u7175 0223  
                                          u7335 0892                                            u6545 153D  
                                          u7505 10DC                                            u7265 028F  
                                          u6705 160F                                            u7355 08A4  
                                          u8085 0BB4                                            u7445 1118  
                                          u6645 15DD                                            u8095 0BCF  
                                          u7535 10FA                                            u8345 0DEE  
                                          u6825 04ED                                            u6585 1175  
                                          u8354 0E0D                                            u8355 0E0C  
                                          u7475 1136                                            u6915 0533  
                                          u6835 04F4                                            u6675 15FA  
                                          u7395 08BE                                            u7900 16A6  
                                          u7910 16A7                      ?_beatBrightnessCalculation 00C7  
                                          u6855 04FD                                            u6865 0511  
                                          u7755 08F5                                            u6895 052A  
                                          u7785 090E                                            u6985 056E  
                                          u8835 0D0E                                            u7795 0928  
                                          u6995 0589                                            u8885 0D87  
                                          _TMR2 028C                                            u8987 0814  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                              _LED_task_ANIMATION 1E4F  
                                 __CFG_FCMEN$ON 0000                             ?_LED_task_BEAT_FADE 0070  
                                 ?_BUTTONS_init 0070                                   ?_BUTTONS_task 0070  
                                          _dbuf 01A0                            ?_adcThresholdHandler 0070  
                                          _ctoa 12E6                                            _main 080B  
                                          _down 00BC                                            _init 1143  
                                          _menu 00BE                                            _prec 0134  
                                          _nout 0130                                            pad@i 004D  
                                          pad@p 004A                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            pad@w 004F  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0030  
                               ___fldiv@new_exp 0040                         __end_of_TM1650_setDigit 1F87  
                           ?_LED_task_ANIMATION 0070                              __size_of_GPIO_init 0011  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0018  
                          __size_of_address_inc 0019                  I2C1_MasterWriteTRBBuild@length 0021  
                           _LED_task_BEAT_MIXED 1E52                                  _BUTTONS_isHeld 1F44  
                                         ??_pad 004C                         __end_of_PWM2_Initialize 1F05  
                       __end_of_TMR0_Initialize 1FC2                                      _i2c1_state 00C4  
                ??_TMR0_DefaultInterruptHandler 0070                  __size_of_OSCILLATOR_Initialize 0009  
                          ??_LED_task_BEAT_FADE 0020                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 1EE5                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 0120                                   ___fltol@sign1 006B  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_ctoa 0052                                __end_of_LED_task 0B7D  
                                         ?_main 0070                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 05C2  
                                         _ADREF 0116                               __end_of_I2C1_Stop 1092  
                                         STR_10 2069                                           STR_11 206F  
                                         STR_12 2087                                           STR_20 2025  
                                         STR_13 2067                                           STR_21 2055  
                                         STR_22 2063                                           STR_14 201C  
                                         STR_15 205C                                           STR_16 202D  
                                         STR_17 2013                                   __CFG_WDTE$OFF 0000  
                                         STR_18 2000                                           STR_19 200A  
                              __end_of_DMX_init 1F9A                                           _ADRPT 009A  
                               __end_of___flmul 02BC                                 __end_of___fltol 1627  
                                         _T2CON 028E                                           _T2HLT 028F  
                               __end_of___lwdiv 13E3                      _ADCC_ADTI_InterruptHandler 0158  
                                         _T2TMR 028C                                           _T2RST 0291  
                                         i1l432 0017                                           i1l441 002E  
                               __end_of___lwmod 12B7                                           i1l434 001E  
                                         i1l436 0025                                           i1l429 000E  
                                         i1l560 0F13                                           i1l561 0F1F  
                                         i1l554 0EF0                                           i1l571 0F5C  
                                         i1l555 0EF1                                           i1l549 0EC2  
                                         i1l590 1F61                                           i1l583 0FC0  
                                         i1l575 0F7C                                           i1l578 0F8B  
                                         i1l579 0F99                                           _OSCEN 0891  
                                  vfpfcnvrt@fmt 0058                              _PWM4_LoadDutyValue 1125  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
              __end_of_LED_task_BEAT_CONTINUOUS 1E51                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1E5A  
                          ??_LED_task_ANIMATION 0020                       ?_TMR0_SetInterruptHandler 0020  
                               __end_of_getMode 1E63                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 1F36                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                                         _delay 0166                            ?_LED_task_BEAT_MIXED 0070  
                                         _flags 0136                                           _enter 00BB  
                         ?_ADCC_StartConversion 0070                                           _fputc 144E  
                                         _fputs 1214                             ?_PWM4_LoadDutyValue 00C7  
                     __size_of_beatColorCreator 00AF                                           pad@fp 0051  
                                         _width 0132                                           ctoa@c 0052  
                                         _putch 11A6                                           ctoa@w 0055  
                       __end_of_PWM3_Initialize 1F10                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0070                               __end_of_BEAT_init 1017  
                             __end_of_BEAT_task 0DC9                                           status 0003  
                                 colorDec@input 0022                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 1E4E     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0070             ?_EUSART1_DefaultFramingErrorHandler 0070  
            _EUSART1_DefaultFramingErrorHandler 1E4D                 I2C1_MasterWriteTRBBuild@address 0022  
                        __end_of_BUTTONS_isHeld 1F53                                 __initialization 0032  
                          TM1650_setDigit@digit 0036                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                                ?_LED_task_MANUAL 0070  
                                  __end_of_ctoa 1316                      __end_of_EUSART1_Initialize 137A  
                                  __end_of_main 0844                                    __end_of_init 1163  
                               _CONTROLLER_task 02BC                            ??_PWM4_LoadDutyValue 006D  
                                 ?_LED_setColor 00DD                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                                   ?_LED_task_DMX 0070  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1EA6  
                       __end_of_PWM4_Initialize 080B                         __end_of_TMR2_Initialize 1F44  
                   ?_INTERRUPT_InterruptManager 0070                            _LED_task_BEAT_STROBE 0725  
                                   _i2c1_object 00A0                                          ??_ctoa 0054  
                                        ??_main 016E                                          ??_init 0023  
                          __end_of_CONTROL_BEAT 1705                                   colorInc@input 0022  
                             __end_of_GPIO_init 1F75                           ??_LED_task_BEAT_MIXED 0020  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                          __size_of_CONTROL_DMX 0099                                          ?_fputc 0039  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0041                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR3H 0315  
                                        _CCPR1L 030C                                          _CCPR4H 0319  
                                        _CCPR2L 0310                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          ?_putch 0070  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                ?_PWM1_Initialize 0070  
                                        _RC5PPS 1F25                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l6211 0EE3                                          i1l6301 0FA7  
                                        i1l6223 0EFD                                          i1l6215 0EEA  
                                        i1l6313 0FC4                                  __CFG_WDTCCS$SC 0000  
                                        i1l6315 0FC7                                          i1l6243 0F38  
                                        i1l6323 0FD3                                          i1l6173 139C  
                                        i1l6317 0FCB                                          i1l6229 0F0D  
                                        i1l6167 138E                                          i1l6263 0F51  
                                        i1l6177 13AB                                          i1l6285 0F7F  
                                        i1l6277 0F6A                                          i1l5657 1090  
                                        i1l6297 0FA0                                          i1l6681 1344  
                                        i1l6677 133C                                          i1l6669 131B  
                                        i1l8979 0FDC                                          _OSCFRQ 0893  
                        __size_of_DMX_interrupt 0031                                          _TX1REG 011A  
                                        _TX1STA 011E                                __end_of___xxtofl 08DA  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0034                                 ?_BUTTONS_isHeld 0070  
                            ??_I2C1_MasterWrite 002B                                    _CCPTMRS0bits 021E  
                                  vfprintf@cfmt 0067                                __end_of_colorDec 144E  
                              __end_of_colorInc 14CB                                  _p_i2c1_current 00C2  
                                ??_LED_setColor 00E1                     __size_of_PWM3_LoadDutyValue 001E  
                                ??_LED_task_DMX 00E5                     __end_of_TM1650_fastPrintNum 0CF7  
                             _ADCC_ThresholdISR 1F1C                                       ??___fldiv 0036  
                        __size_of_menuSelection 007E                                  __CFG_STVREN$ON 0000  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 0024                                       ??___lwmod 002C  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                                        _manual 00A5                                ?_TMR0_Initialize 0070  
                              ?_PWM2_Initialize 0070                              ?_ADCC_ThresholdISR 0070  
                         ?_LED_task_BEAT_STROBE 0070                                       ?_I2C1_ISR 0070  
                                     ??_getMode 0020                                          _printf 1FEB  
                        __size_of_BEAT_detected 0009                                          pad@buf 0049  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                        ctoa@fp 0057                                  _lastActiveTime 0144  
                                        _strlen 1047                            __size_of_TM1650_init 0014  
                               _ADCC_Initialize 123A                                          fputc@c 0039  
                                _PMD_Initialize 1EE5                                          fputs@c 0045  
                                  ??_CLOCK_init 0022                                          fputs@i 0046  
                                        fputs@s 0048                                    __pdataCOMMON 007C  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0070  
                        ??_ADCC_StartConversion 0020                                          putch@n 0038  
                              __end_of_vfprintf 12E6            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 1E8B                   I2C1_MasterWriteTRBBuild@pdata 0020  
                      _LED_task_BEAT_CONTINUOUS 1E50                                   _tm1650_status 014C  
                               _eusart1RxBuffer 0128                         beatColorCreator@inGreen 00D0  
                              ?_PWM3_Initialize 0070                                    ___xxtofl@arg 002A  
                                  ___xxtofl@exp 0029                               _SYSTEM_Initialize 11CA  
                                  ___xxtofl@val 0020                         beatColorCreator@inWhite 00D2  
                       __end_of__initialization 008C                         __end_of_CONTROLLER_task 0448  
                            ?_SYSTEM_Initialize 0070                      __end_of_PWM2_LoadDutyValue 1107  
                                     ?_LED_task 0070                                      ___fltol@f1 0062  
                                     ?_DMX_init 0070                                  _i2c1_trb_count 00C3  
                   PWM1_LoadDutyValue@dutyValue 00C7                  __size_of_EUSART1_RxDataHandler 0018  
                     __end_of_ADCC_ThresholdISR 1F29                         __size_of_DMX_getAddress 0003  
                 __end_of_EUSART1_RxDataHandler 102F                           _I2C1_FunctionComplete 1F53  
                          _I2C1_BusCollisionISR 1E57                                  __pcstackCOMMON 0070  
                            __end_of_CLOCK_init 1E82                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 1E6B                                    __pidataBANK2 07FA  
                           ??_SYSTEM_Initialize 0022                                       ?_TMR0_ISR 0070  
                                 __end_of_fputc 1485                                   __end_of_fputs 123A  
                                 __end_of_putch 11CA                              _PWM1_LoadDutyValue 10CB  
                                    ??_I2C1_ISR 0072                                ?_TMR2_Initialize 0070  
                              ?_PWM4_Initialize 0070                                   _DMX_interrupt 1316  
                          __end_of_BUTTONS_init 1519                          __end_of_PMD_Initialize 1EEF  
                          __end_of_BUTTONS_task 0EAE                     PWM4_LoadDutyValue@dutyValue 00C7  
                            __size_of_getIsHold 0003                         __size_of_getManualColor 0026  
                           ?_PWM1_LoadDutyValue 00C7                     __end_of_EUSART1_Receive_ISR 13AE  
                             _thresholdExceeded 00AE                     ADCC_StartConversion@channel 0020  
                             LED_setColor@input 00DD                                   _menuSelection 1782  
                                       ??_fputc 003C                       __end_of_SYSTEM_Initialize 11EE  
                                       ??_fputs 0042                                _beatColorCreator 0A1B  
                                       ??_putch 0037                                   _eusart1RxHead 0079  
                                 _eusart1RxTail 0078                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
               ??_EUSART1_SetRxInterruptHandler 0022                     ??_beatBrightnessCalculation 00CB  
                                 _BEAT_detected 1EB8                                      ??_LED_task 00EA  
                                    ??_DMX_init 0037                            ??_PWM1_LoadDutyValue 006D  
                             __end_of__Umul8_16 1183                           ?_I2C1_BusCollisionISR 0070  
               __end_of_EUSART1_SetErrorHandler 1ECA                                      __pmaintext 080B  
              __end_of_TMR0_SetInterruptHandler 1EAF                                      ??_TMR0_ISR 0070  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 1260                          ??_LED_task_BEAT_STROBE 00E5  
                                    __pintentry 0004                                 _I2C1_Initialize 1092  
                                       _CCP1CON 030E                                         _CCP2CON 0312  
                                       _CCP3CON 0316                           __size_of_CONTROL_BEAT 0070  
                                       _CCP4CON 031A                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                  ?_DMX_interrupt 0070  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 1E8B  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 1E82  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               __CFG_ZCDDIS$OFF 0000                                         ?_printf 00C7  
                               ?_PMD_Initialize 0070                                         ?_strlen 0020  
        __end_of_EUSART1_SetFramingErrorHandler 1ED3         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 1ECA                                       ?___xxtofl 0020  
                  ?_EUSART1_DefaultErrorHandler 0070                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00A8  
                                     _I2C1_Stop 1078                                      _arrayIndex 013A  
                                ?_menuSelection 0070                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 0725  
                             _colorModeSelected 00B1                                       ?_colorDec 0070  
                             __end_of_charTable 1860                             _CLOCK_timerCallback 1E74  
                                     ?_colorInc 0070                            __end_of_LED_task_DMX 1695  
                                ?_BEAT_detected 0070                   I2C1_MasterTRBInsert@ptrb_list 0020  
                       __size_of_CONTROL_MANUAL 00B8                              __size_of_writeData 001D  
                             __end_of_getIsHold 1E60                                   ??_address_dec 0037  
                                 ??_address_inc 0037                                ?_CONTROLLER_task 0070  
                                    _enterState 00B3                                 BUTTONS_task@btn 0028  
                                  _CONTROL_BEAT 1695                          ?_I2C1_FunctionComplete 0070  
                                     _BEAT_init 1000                   __size_of_I2C1_MasterTRBInsert 0055  
                                     _BEAT_task 0CF7                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 0077                                         ___fldiv 0448  
                          ?_CLOCK_timerCallback 0070                                         ___flmul 0090  
                                       ___fltol 15C1                                         ___lwdiv 13AE  
                                       ___lwmod 128A                                       ?_vfprintf 0061  
                     _beatBrightnessCalculation 1705                                         _address 00EC  
                   __size_of_LED_task_BEAT_FADE 0001                                         _getMode 1E60  
                                       __ptext1 1FC2                                         __ptext2 11CA  
                                       __ptext3 1F36                                         __ptext4 1FAE  
                                       __ptext5 0800                                         __ptext6 1F05  
                                       __ptext7 1EFA                                         __ptext8 1EEF  
                                       __ptext9 1EE5                                 __size_of_printf 0015  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                               __size_of_strlen 0018                                         _lastRun 013E  
                         _OSCILLATOR_Initialize 1EDC                                       _T2CONbits 028E  
                                  __size_of_pad 0053                                         _initial 0164  
                                       _buttons 01C0                                      ??___xxtofl 0024  
                            _EUSART1_Initialize 1347                        ??_PIN_MANAGER_Initialize 0020  
                                     _T2HLTbits 028F                                 __CFG_WRTSAF$OFF 0000  
                   __size_of_LED_task_ANIMATION 0001                                      ?_I2C1_Stop 0070  
                   __end_of_adcThresholdHandler 1E67                                         _upState 00B6  
                 ??_EUSART1_DefaultErrorHandler 0071                                         _startup 00EE  
                    __size_of_SYSTEM_Initialize 0024                            I2C1_ISR@pi2c_buf_ptr 00C1  
                                       clrloop0 1F11                                      ??_colorDec 0020  
                                    ??_colorInc 0020                                _currentSelection 00B9  
                          end_of_initialization 008C                                       _T2RSTbits 0291  
                                     _GPIO_init 1F64                             ?_EUSART1_Initialize 0070  
                                       init@btn 0024                                         init@pin 0022  
                              ??_BUTTONS_isHeld 0020                                         fputc@fp 003B  
                   _EUSART1_OverrunErrorHandler 015E                                         fputs@fp 0041  
                        ??_I2C1_BusCollisionISR 0070                         __end_of_I2C1_Initialize 10AE  
                                _DMX_getAddress 1E5A           __end_of_EUSART1_SetRxInterruptHandler 1EB8  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 1EAF  
                                    ?_BEAT_init 0070                                      ?_BEAT_task 0070  
                 beatBrightnessCalculation@temp 006D                               __end_of_vfpfcnvrt 0A1B  
                         __size_of_BUTTONS_init 004E                           __size_of_BUTTONS_task 00E5  
                         ??_CLOCK_timerCallback 0070                                 ??_DMX_interrupt 0070  
                           __end_of_address_dec 1047                     __size_of_PWM4_LoadDutyValue 001E  
                           __end_of_address_inc 1078                                ?_ADCC_Initialize 0070  
                                    ??_vfprintf 0064                            ??_EUSART1_Initialize 0022  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0023  
                                       strlen@s 0020                        _TMR0_SetInterruptHandler 1EA6  
                   __end_of_LED_task_BEAT_MIXED 1E53                      ??_LED_task_BEAT_CONTINUOUS 0020  
                                _getManualColor 11EE                       __size_of_I2C1_MasterWrite 002A  
                             __size_of_I2C1_ISR 0152                        __size_of_LED_task_MANUAL 0001  
                             __end_of_writeData 10CB                                 ??_menuSelection 006D  
                       ?_ADCC_SetUpperThreshold 0020                                   ??_CONTROL_DMX 0037  
                                 ___xxtofl@sign 0028                                       _TRISAbits 0012  
                                     _TRISCbits 0014                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 1FEB               I2C1_ISR@i2c_10bit_address_restart 00BF  
                                    ?_GPIO_init 0070                             getManualColor@input 0022  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 0057  
                                  _BUTTONS_init 14CB                                    _BUTTONS_task 0DC9  
                        __end_of_DMX_getAddress 1E5D                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
                    __end_of_PWM3_LoadDutyValue 1125            __size_of_EUSART1_DefaultErrorHandler 0003  
                      __size_of_PWM1_Initialize 000B                               __size_of_LED_task 00B3  
                             __size_of_DMX_init 0013                        __end_of_beatColorCreator 0ACA  
                ??_ADCC_DefaultInterruptHandler 0070                                   ??_TM1650_init 006D  
                                   vfpfcnvrt@ap 0059                                     vfpfcnvrt@fp 0060  
                       I2C1_MasterWrite@trBlock 0151                          __end_of_getManualColor 1214  
                                 __pidataCOMMON 0002                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0071                              _PWM2_LoadDutyValue 10E9  
                      __size_of_TM1650_setDigit 0012                          ?_OSCILLATOR_Initialize 0070  
                __end_of_ADCC_SetUpperThreshold 1E94                    __size_of_TM1650_fastPrintNum 00C2  
                                __end_of_printf 2000                           __size_of_LED_setColor 0163  
                                __end_of_strlen 105F                                    _lastDetected 00AD  
                         __size_of_LED_task_DMX 006E                             start_initialization 0032  
                                  _enterPressed 00B7                                     ??_I2C1_Stop 0070  
                      __size_of_PWM2_Initialize 000B                        __size_of_TMR0_Initialize 0014  
                           ?_PWM2_LoadDutyValue 00C7                 __size_of_PIN_MANAGER_Initialize 0035  
                           TM1650_setDigit@data 0034                                     __end_of_pad 156C  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020                                  _beatBrightness 00EF  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 1F9A  
                           __end_of_CONTROL_DMX 0973                                  _CONTROL_MANUAL 0B7D  
                               ?_DMX_getAddress 0070                              ?_BUTTONS_isClicked 0070  
                                   _address_dec 102F                                     _address_inc 105F  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0070  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                          ??_PWM2_LoadDutyValue 006D                        __size_of_PWM3_Initialize 000B  
                                   vfprintf@fmt 0061                     PWM2_LoadDutyValue@dutyValue 00C7  
                           ??_BUTTONS_isClicked 0020                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 1017                                    _LED_setColor 05C2  
                ?_EUSART1_SetRxInterruptHandler 0020                             CONTROL_MANUAL@input 0025  
                                     __Umul8_16 1163                                     __pdataBANK1 00EC  
                                   __pdataBANK2 0164                                    _LED_task_DMX 1627  
                               ?_getManualColor 0070                                   _CLOCK_getTime 1E9D  
                                      ??_printf 0069                                        ??_strlen 0022  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 00C6  
                        beatColorCreator@inBlue 00D1                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 23EE  
                           __end_of_TM1650_init 1FD6                                       ___flmul@a 004C  
                                     ___flmul@b 0048                                     __pbssCOMMON 0077  
             _EUSART1_RxDefaultInterruptHandler 0162                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00C7  
                                 __pcstackBANK2 016A              __size_of_beatBrightnessCalculation 007D  
                      __size_of_PWM4_Initialize 000B                        __size_of_TMR2_Initialize 000E  
                                 _i2c1_tr_queue 0155                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 1FAE                       beatColorCreator@tempColor 00D9  
                             ??_LED_task_MANUAL 0020                          __end_of_CONTROL_MANUAL 0C35  
                                   ??_GPIO_init 0020                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0070  
                  __size_of_EUSART1_Receive_ISR 0034                               __size_of_colorDec 0036  
                             __size_of_colorInc 0046                                    _menuSelected 00BA  
                                  _currentState 00A9                                       _charTable 1800  
                         _TMR0_InterruptHandler 015A                                       __pnvBANK2 0158  
                   __size_of_PWM1_LoadDutyValue 001E                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 13E3                                       _getIsHold 1E5D  
                                      ?___fldiv 002E                                       __ptext100 1017  
                                     __ptext101 1F1C                                       __ptext102 1E4C  
                                     __ptext103 1E63                                        ?___flmul 0048  
                                      ?___fltol 0062                                      ?__Umul8_16 0020  
                                      ?___lwdiv 0020                                        ?___lwmod 0028  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0EAE  
                 __size_of_LED_task_BEAT_STROBE 00D5                               ??_PWM1_Initialize 0020  
                  ??_INTERRUPT_InterruptManager 0077                                 writeData@status 0033  
                                      ?_getMode 0070                               __size_of_vfprintf 002F  
                              _I2C1_MasterWrite 1260                                        _BAUD1CON 011F  
                  __end_of_I2C1_MasterTRBInsert 15C1      __end_of_EUSART1_DefaultOverrunErrorHandler 1E6B  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0070  
           ?_EUSART1_DefaultOverrunErrorHandler 0070              _EUSART1_DefaultOverrunErrorHandler 1E67  
                          _EUSART1_ErrorHandler 015C                                       _downState 00B5  
                                   _CONTROL_DMX 08DA                         _EUSART1_SetErrorHandler 1EC1  
                             ??_TM1650_setDigit 0035                                ___lwdiv@quotient 0025  
             __end_of_beatBrightnessCalculation 1782                                  __size_of_fputc 0037  
                                      _T2CLKCON 0290                                       _menuState 00B4  
                                __size_of_fputs 0026                                 ?_CONTROL_MANUAL 0070  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 1E74  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0070                _I2C1_WaitForLastPacketToComplete 1E6F  
                        I2C1_MasterRead@trBlock 014D                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 1F10  
                                      _PIE0bits 0716                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 0ACA  
                                      _DMX_init 1F87             __size_of_INTERRUPT_InterruptManager 002C  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 007C                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0070  
                                    ?_getIsHold 0070                         CONTROLLER_task@isActive 006F  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 1F29  
                    __end_of_LED_task_BEAT_FADE 1E52                                        _SSP1STAT 018F  
                      __size_of_CONTROLLER_task 018C                                     _TM1650_init 1FC2  
                                     _threshold 0168                                       _vfpfcnvrt 0973  
                             ??_PWM3_Initialize 0020                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                       _startTime 014A  
                    __end_of_LED_task_ANIMATION 1E50                              DMX_interrupt@dummy 0076  
                                      _WPUAbits 1F39                                        _WPUCbits 1F4F  
                                     _writeData 10AE                      __size_of_BUTTONS_isClicked 0014  
                                    vfpfcnvrt@c 005F                                     _lastIncTime 00AB  
                             ??_TMR2_Initialize 0020                               ??_PWM4_Initialize 0020  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 1E7A  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 0C35  
                                    _ADSTATbits 0115                      __end_of_PWM4_LoadDutyValue 1143  
                 __size_of_I2C1_BusCollisionISR 0003                                      vfprintf@ap 0063  
                                    vfprintf@fp 0066                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 00C0                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fldiv 017A  
                             ?_beatColorCreator 00D0                           beatColorCreator@inRed 00D4  
                              __size_of___flmul 022C                                __size_of___fltol 0066  
                         __end_of_DMX_interrupt 1347                     __size_of_EUSART1_Initialize 0033  
                                    ?_vfpfcnvrt 0058                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                           _beatColorCreator$3555 00D5  
              __end_of_I2C1_MasterWriteTRBBuild 11A6                              ??_beatColorCreator 006E  
                            _PWM3_LoadDutyValue 1107                                      _ANSELAbits 1F38  
                                      _beatHold 00B2                                      _ANSELCbits 1F4E  
                              __size_of_getMode 0003                            ?_TM1650_fastPrintNum 0034  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                           TM1650_enable@enable 0034             __end_of_EUSART1_DefaultErrorHandler 1E57  
                   _EUSART1_DefaultErrorHandler 1E54                                     _currentTime 0146  
                                    _CLOCK_init 1E7A                                        ___xxtofl 0844  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                                   _menuPressed 00B8                                 ___lwdiv@divisor 0020  
                         __end_of_menuSelection 1800                             I2C1_ISR@i2c_address 007A  
                               ___lwdiv@counter 0027                                        _detected 00AF  
                                    ?_writeData 002E                                        __ptext10 13E3  
                                      __ptext11 1EDC                                        __ptext20 1E5D  
                                      __ptext12 1092                                        __ptext21 1E53  
                                      __ptext13 1347                                        __ptext30 0090  
                                      __ptext22 1627                                        __ptext14 1ED3  
                                      __ptext31 1163                                        __ptext23 1E5A  
                                      __ptext15 1ECA                                        __ptext40 1E50  
                                      __ptext32 0448                                        __ptext24 0725  
                                      __ptext16 1EC1                                        __ptext41 1E4F  
                                      __ptext33 1125                                        __ptext25 0A1B  
                                      __ptext17 123A                                        __ptext50 1519  
                                      __ptext42 1F87                                        __ptext34 1107  
                                      __ptext26 1705                                        __ptext18 0ACA  
                                      __ptext51 1047                                        __ptext43 1EAF  
                                      __ptext35 10E9                                        __ptext27 05C2  
                                      __ptext19 1E60                                        __ptext60 1418  
                                      __ptext52 1214                                        __ptext44 02BC  
                                      __ptext36 10CB                                        __ptext28 0844  
                                      __ptext61 08DA                                        __ptext53 144E  
                                      __ptext45 1782                                        __ptext37 1EB8  
                                      __ptext29 15C1                                        __ptext70 128A  
                                      __ptext62 105F                                        __ptext54 11A6  
                                      __ptext46 1FEB                                        __ptext38 1E52  
                                      __ptext71 1695                                        __ptext63 102F  
                                      __ptext55 1F75                                        __ptext47 12B7  
                                      __ptext39 1E51                                        __ptext80 0CF7  
                                      __ptext72 1F44                                        __ptext64 0C35  
                                      __ptext56 11EE                                        __ptext48 0973  
                                      __ptext81 13AE                                        __ptext73 1F9A  
                                      __ptext65 10AE                                        __ptext57 1FD6  
                                      __ptext49 12E6                                        __ptext90 1E4E  
                                      __ptext82 1E9D                                        __ptext74 1E7A  
                                      __ptext66 1260                                        __ptext58 0B7D  
                           ?_PWM3_LoadDutyValue 00C7                                        __ptext91 0EAE  
                                      __ptext83 1000                                        __ptext75 1EA6  
                                      __ptext67 1183                                        __ptext59 1485  
                                      __ptext92 1078                                        __ptext84 1E94  
                                      __ptext76 0DC9                                        __ptext68 156C  
                                      __ptext93 1F53                                        __ptext85 1E8B  
                                      __ptext77 14CB                                        __ptext69 1E6F  
                                      __ptext94 1E57                                        __ptext86 1E82  
                                      __ptext78 1143                                        __ptext95 1316  
                                      __ptext79 1F64                                        __ptext96 137A  
                                      __ptext88 1F29                                        __ptext97 1E67  
                                      __ptext89 1E74                                        __ptext98 1E4D  
                                      __ptext99 1E54                    __size_of_LED_task_BEAT_MIXED 0001  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _dmxArray 23EE                                ??_DMX_getAddress 0020  
                                      _colorDec 1418                                        _colorInc 1485  
                          BUTTONS_isHeld@button 0020                           __end_of_BEAT_detected 1EC1  
                                      _lastBeat 0142                                   CONTROL_BEAT@i 0022  
                                      _lastTime 0148               __size_of_LED_task_BEAT_CONTINUOUS 0001  
                               LED_task_DMX@dmx 016A                       ?_LED_task_BEAT_CONTINUOUS 0070  
                                 __size_of_ctoa 0030                                   __size_of_main 0039  
                                 __size_of_init 0020                                    ?_address_dec 0070  
          __end_of_TMR0_DefaultInterruptHandler 1E4F           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 1E4E                                    ?_address_inc 0070  
                          __CFG_WDTCWS$WDTCWS_7 0000                            _I2C1_MasterTRBInsert 156C  
                                    _RC1STAbits 011D                                ??_getManualColor 0020  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                                     ??_getIsHold 0020  
                          ??_PWM3_LoadDutyValue 006D                    __end_of_ADCC_StartConversion 1E9D  
                                      int$flags 007E                                        _position 00B0  
                       __size_of_BUTTONS_isHeld 000F                                        _vfprintf 12B7  
            __end_of_INTERRUPT_InterruptManager 0030                      _INTERRUPT_InterruptManager 0004  
                                     printf@fmt 00C7                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 0160                             _EUSART1_Receive_ISR 137A  
                               _LED_task_MANUAL 1E53                           ??_TM1650_fastPrintNum 0036  
                                    _INTCONbits 000B                               ??_CONTROLLER_task 00D1  
                                      init@port 0020                                  __pstringtext10 2045  
                                __pstringtext11 204D                                  __pstringtext20 2087  
                                __pstringtext12 2055                                  __pstringtext21 208C  
                                __pstringtext13 205C                                  __pstringtext22 0000  
                                __pstringtext14 2063                                  __pstringtext15 2069  
                                __pstringtext16 206F                                  __pstringtext17 2075  
                                __pstringtext18 207B                                  __pstringtext19 2081  
          __end_of_ADCC_DefaultInterruptHandler 1E4D           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1E4C                                        intlevel1 0000  
                                _thresholdCount 013C                            ?_EUSART1_Receive_ISR 0070  
                                 writeData@data 002E                                ___lwmod@dividend 002A  
                       ?_PIN_MANAGER_Initialize 0070                        __end_of_I2C1_MasterWrite 128A  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 1EDC         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1ED3                   __end_of_I2C1_FunctionComplete 1F64  
                                 ?_CONTROL_BEAT 0070                           ?_I2C1_MasterTRBInsert 0020  
                               _PWM1_Initialize 1EEF                   ?_TMR0_DefaultInterruptHandler 0070  
                   __size_of_PWM2_LoadDutyValue 001E                          TM1650_fastPrintNum@num 0034  
                             _lastLedActiveTime 0138                                        printf@ap 006C  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                     PWM3_LoadDutyValue@dutyValue 00C7  
                               _TM1650_setDigit 1F75                                     ??_vfpfcnvrt 005A  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 00C5  
                                 __pstringtext1 1800                                   __pstringtext2 2000  
                                 __pstringtext3 200A                                   __pstringtext4 2013  
                                 __pstringtext5 201C                                   __pstringtext6 2025  
                                 __pstringtext7 202D                                   __pstringtext8 2035  
                                 __pstringtext9 203D                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0028                                     ?_CLOCK_init 0070  
                               _TMR0_Initialize 1FAE                                 _PWM2_Initialize 1EFA  
                              ??_CONTROL_MANUAL 0023                                 ___lwmod@counter 002D  
                                  ?_CONTROL_DMX 0070                        _I2C1_MasterWriteTRBBuild 1183  
                                   ??_writeData 002F                                      _TX1STAbits 011E  
                  __end_of_LED_task_BEAT_STROBE 07FA                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0071                  __end_of_PIN_MANAGER_Initialize 1418  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 1FD6  
                            __size_of_I2C1_Stop 001A                   ?_ADCC_DefaultInterruptHandler 0070  
                    __end_of_PWM1_LoadDutyValue 10E9                            __Umul8_16@multiplier 0028  
                                ??_CONTROL_BEAT 0021                         ??_EUSART1_RxDataHandler 0070  
                               _PWM3_Initialize 1F05                               __Umul8_16@product 0024  
