

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 17:33:38 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	stringtext2,global,class=STRCODE,delta=2
    11                           	psect	stringtext3,global,class=STRCODE,delta=2
    12                           	psect	stringtext4,global,class=STRCODE,delta=2
    13                           	psect	stringtext5,global,class=STRCODE,delta=2
    14                           	psect	stringtext6,global,class=STRCODE,delta=2
    15                           	psect	stringtext7,global,class=STRCODE,delta=2
    16                           	psect	stringtext8,global,class=STRCODE,delta=2
    17                           	psect	stringtext9,global,class=STRCODE,delta=2
    18                           	psect	stringtext10,global,class=STRCODE,delta=2
    19                           	psect	stringtext11,global,class=STRCODE,delta=2
    20                           	psect	stringtext12,global,class=STRCODE,delta=2
    21                           	psect	stringtext13,global,class=STRCODE,delta=2
    22                           	psect	stringtext14,global,class=STRCODE,delta=2
    23                           	psect	stringtext15,global,class=STRCODE,delta=2
    24                           	psect	stringtext16,global,class=STRCODE,delta=2
    25                           	psect	stringtext17,global,class=STRCODE,delta=2
    26                           	psect	stringtext18,global,class=STRCODE,delta=2
    27                           	psect	stringtext19,global,class=STRCODE,delta=2
    28                           	psect	stringtext20,global,class=STRCODE,delta=2
    29                           	psect	stringtext21,global,class=STRCODE,delta=2
    30                           	psect	stringtext22,global,class=STRCODE,delta=2
    31                           	psect	cinit,global,class=CODE,merge=1,delta=2
    32                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    36                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    38                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    39                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    40                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    41                           	psect	inittext,global,class=CODE,delta=2
    42                           	psect	clrtext,global,class=CODE,delta=2
    43                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    44                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    45                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    46                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    47                           	psect	text1,local,class=CODE,merge=1,delta=2
    48                           	psect	text2,local,class=CODE,merge=1,delta=2
    49                           	psect	text3,local,class=CODE,merge=1,delta=2
    50                           	psect	text4,local,class=CODE,merge=1,delta=2
    51                           	psect	text5,local,class=CODE,merge=1,delta=2
    52                           	psect	text6,local,class=CODE,merge=1,delta=2
    53                           	psect	text7,local,class=CODE,merge=1,delta=2
    54                           	psect	text8,local,class=CODE,merge=1,delta=2
    55                           	psect	text9,local,class=CODE,merge=1,delta=2
    56                           	psect	text10,local,class=CODE,merge=1,delta=2
    57                           	psect	text11,local,class=CODE,merge=1,delta=2
    58                           	psect	text12,local,class=CODE,merge=1,delta=2
    59                           	psect	text13,local,class=CODE,merge=1,delta=2
    60                           	psect	text14,local,class=CODE,merge=1,delta=2
    61                           	psect	text15,local,class=CODE,merge=1,delta=2
    62                           	psect	text16,local,class=CODE,merge=1,delta=2
    63                           	psect	text17,local,class=CODE,merge=1,delta=2
    64                           	psect	text18,local,class=CODE,merge=1,delta=2
    65                           	psect	text19,local,class=CODE,merge=1,delta=2
    66                           	psect	text20,local,class=CODE,merge=1,delta=2
    67                           	psect	text21,local,class=CODE,merge=1,delta=2
    68                           	psect	text22,local,class=CODE,merge=1,delta=2
    69                           	psect	text23,local,class=CODE,merge=1,delta=2
    70                           	psect	text24,local,class=CODE,merge=1,delta=2
    71                           	psect	text25,local,class=CODE,merge=1,delta=2
    72                           	psect	text26,local,class=CODE,merge=1,delta=2
    73                           	psect	text27,local,class=CODE,merge=1,delta=2
    74                           	psect	text28,local,class=CODE,merge=1,delta=2
    75                           	psect	text29,local,class=CODE,merge=1,delta=2
    76                           	psect	text30,local,class=CODE,merge=1,delta=2
    77                           	psect	text31,local,class=CODE,merge=1,delta=2
    78                           	psect	text32,local,class=CODE,merge=1,delta=2
    79                           	psect	text33,local,class=CODE,merge=1,delta=2
    80                           	psect	text34,local,class=CODE,merge=1,delta=2
    81                           	psect	text35,local,class=CODE,merge=1,delta=2
    82                           	psect	text36,local,class=CODE,merge=1,delta=2
    83                           	psect	text37,local,class=CODE,merge=1,delta=2
    84                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text40,local,class=CODE,merge=1,delta=2
    87                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    88                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    90                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    91                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    92                           	psect	text46,local,class=CODE,merge=1,delta=2
    93                           	psect	text47,local,class=CODE,merge=1,delta=2
    94                           	psect	text48,local,class=CODE,merge=1,delta=2
    95                           	psect	text49,local,class=CODE,merge=1,delta=2
    96                           	psect	text50,local,class=CODE,merge=1,delta=2
    97                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text52,local,class=CODE,merge=1,delta=2
    99                           	psect	text53,local,class=CODE,merge=1,delta=2
   100                           	psect	text54,local,class=CODE,merge=1,delta=2
   101                           	psect	text55,local,class=CODE,merge=1,delta=2
   102                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
   104                           	psect	text58,local,class=CODE,merge=1,delta=2,group=2
   105                           	psect	text59,local,class=CODE,merge=1,delta=2
   106                           	psect	text60,local,class=CODE,merge=1,delta=2
   107                           	psect	text61,local,class=CODE,merge=1,delta=2
   108                           	psect	text62,local,class=CODE,merge=1,delta=2
   109                           	psect	text63,local,class=CODE,merge=1,delta=2
   110                           	psect	text64,local,class=CODE,merge=1,delta=2
   111                           	psect	text65,local,class=CODE,merge=1,delta=2
   112                           	psect	text66,local,class=CODE,merge=1,delta=2
   113                           	psect	text67,local,class=CODE,merge=1,delta=2
   114                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
   116                           	psect	text70,local,class=CODE,merge=1,delta=2
   117                           	psect	text71,local,class=CODE,merge=1,delta=2
   118                           	psect	text72,local,class=CODE,merge=1,delta=2
   119                           	psect	text73,local,class=CODE,merge=1,delta=2
   120                           	psect	text74,local,class=CODE,merge=1,delta=2
   121                           	psect	text75,local,class=CODE,merge=1,delta=2
   122                           	psect	text76,local,class=CODE,merge=1,delta=2
   123                           	psect	text77,local,class=CODE,merge=1,delta=2
   124                           	psect	text78,local,class=CODE,merge=1,delta=2
   125                           	psect	text79,local,class=CODE,merge=1,delta=2
   126                           	psect	text80,local,class=CODE,merge=1,delta=2
   127                           	psect	text81,local,class=CODE,merge=1,delta=2,group=1
   128                           	psect	text82,local,class=CODE,merge=1,delta=2
   129                           	psect	text83,local,class=CODE,merge=1,delta=2
   130                           	psect	text84,local,class=CODE,merge=1,delta=2
   131                           	psect	text85,local,class=CODE,merge=1,delta=2
   132                           	psect	text86,local,class=CODE,merge=1,delta=2
   133                           	psect	intentry,global,class=CODE,delta=2
   134                           	psect	text88,local,class=CODE,merge=1,delta=2
   135                           	psect	text89,local,class=CODE,merge=1,delta=2
   136                           	psect	text90,local,class=CODE,merge=1,delta=2
   137                           	psect	text91,local,class=CODE,merge=1,delta=2
   138                           	psect	text92,local,class=CODE,merge=1,delta=2
   139                           	psect	text93,local,class=CODE,merge=1,delta=2
   140                           	psect	text94,local,class=CODE,merge=1,delta=2
   141                           	psect	text95,local,class=CODE,merge=1,delta=2
   142                           	psect	text96,local,class=CODE,merge=1,delta=2
   143                           	psect	text97,local,class=CODE,merge=1,delta=2
   144                           	psect	text98,local,class=CODE,merge=1,delta=2
   145                           	psect	text99,local,class=CODE,merge=1,delta=2
   146                           	psect	text100,local,class=CODE,merge=1,delta=2
   147                           	psect	text101,local,class=CODE,merge=1,delta=2
   148                           	psect	text102,local,class=CODE,merge=1,delta=2
   149                           	psect	text103,local,class=CODE,merge=1,delta=2
   150                           	dabs	1,0xCA0,32
   151                           	dabs	1,0xC20,80
   152                           	dabs	1,0xBA0,80
   153                           	dabs	1,0xB20,80
   154                           	dabs	1,0xAA0,80
   155                           	dabs	1,0xA20,80
   156                           	dabs	1,0x9A0,80
   157                           	dabs	1,0x920,80
   158                           	dabs	1,0x8A0,80
   159                           	dabs	1,0x820,80
   160                           	dabs	1,0x7A0,80
   161                           	dabs	1,0x720,80
   162                           	dabs	1,0x6A0,80
   163                           	dabs	1,0x64E,34
   164                           	dabs	1,0x23EE,0,_dmxArray
   165                           	dabs	1,0x7E,2
   166  0000                     
   167                           ; Version 2.05
   168                           ; Generated 20/12/2018 GMT
   169                           ; 
   170                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   171                           ; All rights reserved.
   172                           ; 
   173                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   174                           ; 
   175                           ; Redistribution and use in source and binary forms, with or without modification, are
   176                           ; permitted provided that the following conditions are met:
   177                           ; 
   178                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   179                           ;        conditions and the following disclaimer.
   180                           ; 
   181                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   182                           ;        of conditions and the following disclaimer in the documentation and/or other
   183                           ;        materials provided with the distribution.
   184                           ; 
   185                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   186                           ;        software without specific prior written permission.
   187                           ; 
   188                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   189                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   190                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   191                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   192                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   193                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   194                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   195                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   196                           ; 
   197                           ; 
   198                           ; Code-generator required, PIC16F18446 Definitions
   199                           ; 
   200                           ; SFR Addresses
   201  0000                     	;# 
   202  0001                     	;# 
   203  0002                     	;# 
   204  0003                     	;# 
   205  0004                     	;# 
   206  0005                     	;# 
   207  0006                     	;# 
   208  0007                     	;# 
   209  0008                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  0012                     	;# 
   217  0013                     	;# 
   218  0014                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  008C                     	;# 
   223  008C                     	;# 
   224  008D                     	;# 
   225  008E                     	;# 
   226  008E                     	;# 
   227  008F                     	;# 
   228  0090                     	;# 
   229  0090                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0094                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009B                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009D                     	;# 
   248  009E                     	;# 
   249  009F                     	;# 
   250  010C                     	;# 
   251  010C                     	;# 
   252  010D                     	;# 
   253  010E                     	;# 
   254  010F                     	;# 
   255  010F                     	;# 
   256  0110                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  0119                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011A                     	;# 
   270  011A                     	;# 
   271  011B                     	;# 
   272  011B                     	;# 
   273  011B                     	;# 
   274  011B                     	;# 
   275  011B                     	;# 
   276  011C                     	;# 
   277  011C                     	;# 
   278  011C                     	;# 
   279  011D                     	;# 
   280  011D                     	;# 
   281  011D                     	;# 
   282  011E                     	;# 
   283  011E                     	;# 
   284  011E                     	;# 
   285  011F                     	;# 
   286  011F                     	;# 
   287  011F                     	;# 
   288  011F                     	;# 
   289  011F                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  018E                     	;# 
   293  018F                     	;# 
   294  0190                     	;# 
   295  0191                     	;# 
   296  0192                     	;# 
   297  0196                     	;# 
   298  0197                     	;# 
   299  0198                     	;# 
   300  0199                     	;# 
   301  019A                     	;# 
   302  019B                     	;# 
   303  019C                     	;# 
   304  020C                     	;# 
   305  020D                     	;# 
   306  020E                     	;# 
   307  020E                     	;# 
   308  020F                     	;# 
   309  020F                     	;# 
   310  0210                     	;# 
   311  0210                     	;# 
   312  0211                     	;# 
   313  0211                     	;# 
   314  0212                     	;# 
   315  0213                     	;# 
   316  0214                     	;# 
   317  0214                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0216                     	;# 
   321  0216                     	;# 
   322  0217                     	;# 
   323  0217                     	;# 
   324  0218                     	;# 
   325  0219                     	;# 
   326  021A                     	;# 
   327  021A                     	;# 
   328  021B                     	;# 
   329  021B                     	;# 
   330  021C                     	;# 
   331  021C                     	;# 
   332  021D                     	;# 
   333  021D                     	;# 
   334  021E                     	;# 
   335  021F                     	;# 
   336  028C                     	;# 
   337  028C                     	;# 
   338  028D                     	;# 
   339  028D                     	;# 
   340  028E                     	;# 
   341  028F                     	;# 
   342  0290                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0292                     	;# 
   346  0293                     	;# 
   347  0293                     	;# 
   348  0294                     	;# 
   349  0295                     	;# 
   350  0296                     	;# 
   351  0297                     	;# 
   352  0298                     	;# 
   353  0298                     	;# 
   354  0299                     	;# 
   355  0299                     	;# 
   356  029A                     	;# 
   357  029B                     	;# 
   358  029C                     	;# 
   359  029D                     	;# 
   360  029F                     	;# 
   361  030C                     	;# 
   362  030C                     	;# 
   363  030D                     	;# 
   364  030E                     	;# 
   365  030F                     	;# 
   366  0310                     	;# 
   367  0310                     	;# 
   368  0311                     	;# 
   369  0312                     	;# 
   370  0313                     	;# 
   371  0314                     	;# 
   372  0314                     	;# 
   373  0315                     	;# 
   374  0316                     	;# 
   375  0317                     	;# 
   376  0318                     	;# 
   377  0318                     	;# 
   378  0319                     	;# 
   379  031A                     	;# 
   380  031B                     	;# 
   381  038C                     	;# 
   382  038C                     	;# 
   383  038D                     	;# 
   384  038E                     	;# 
   385  0390                     	;# 
   386  0390                     	;# 
   387  0391                     	;# 
   388  0392                     	;# 
   389  048C                     	;# 
   390  048C                     	;# 
   391  048D                     	;# 
   392  048E                     	;# 
   393  048F                     	;# 
   394  048F                     	;# 
   395  0490                     	;# 
   396  0491                     	;# 
   397  0492                     	;# 
   398  0492                     	;# 
   399  0493                     	;# 
   400  0494                     	;# 
   401  0495                     	;# 
   402  0495                     	;# 
   403  0496                     	;# 
   404  0497                     	;# 
   405  0498                     	;# 
   406  0499                     	;# 
   407  049A                     	;# 
   408  049B                     	;# 
   409  049C                     	;# 
   410  049D                     	;# 
   411  058C                     	;# 
   412  058C                     	;# 
   413  058D                     	;# 
   414  058E                     	;# 
   415  058F                     	;# 
   416  058F                     	;# 
   417  0590                     	;# 
   418  0591                     	;# 
   419  0592                     	;# 
   420  0593                     	;# 
   421  059C                     	;# 
   422  059C                     	;# 
   423  059D                     	;# 
   424  059D                     	;# 
   425  059E                     	;# 
   426  059F                     	;# 
   427  060C                     	;# 
   428  060C                     	;# 
   429  060D                     	;# 
   430  060D                     	;# 
   431  060E                     	;# 
   432  060F                     	;# 
   433  0610                     	;# 
   434  0611                     	;# 
   435  0612                     	;# 
   436  0613                     	;# 
   437  0614                     	;# 
   438  0616                     	;# 
   439  0616                     	;# 
   440  0617                     	;# 
   441  0617                     	;# 
   442  0618                     	;# 
   443  0619                     	;# 
   444  061A                     	;# 
   445  061B                     	;# 
   446  061C                     	;# 
   447  061D                     	;# 
   448  061E                     	;# 
   449  070C                     	;# 
   450  070D                     	;# 
   451  070E                     	;# 
   452  070F                     	;# 
   453  0710                     	;# 
   454  0711                     	;# 
   455  0712                     	;# 
   456  0713                     	;# 
   457  0714                     	;# 
   458  0716                     	;# 
   459  0717                     	;# 
   460  0718                     	;# 
   461  0719                     	;# 
   462  071A                     	;# 
   463  071B                     	;# 
   464  071C                     	;# 
   465  071D                     	;# 
   466  071E                     	;# 
   467  0796                     	;# 
   468  0797                     	;# 
   469  0798                     	;# 
   470  0799                     	;# 
   471  079A                     	;# 
   472  079B                     	;# 
   473  079C                     	;# 
   474  079D                     	;# 
   475  080C                     	;# 
   476  080D                     	;# 
   477  080E                     	;# 
   478  080F                     	;# 
   479  0810                     	;# 
   480  0811                     	;# 
   481  0812                     	;# 
   482  0813                     	;# 
   483  0814                     	;# 
   484  081A                     	;# 
   485  081A                     	;# 
   486  081B                     	;# 
   487  081C                     	;# 
   488  081C                     	;# 
   489  081D                     	;# 
   490  081E                     	;# 
   491  081F                     	;# 
   492  088C                     	;# 
   493  088D                     	;# 
   494  088E                     	;# 
   495  088F                     	;# 
   496  0890                     	;# 
   497  0891                     	;# 
   498  0892                     	;# 
   499  0893                     	;# 
   500  0895                     	;# 
   501  0896                     	;# 
   502  0897                     	;# 
   503  0898                     	;# 
   504  0899                     	;# 
   505  089A                     	;# 
   506  089B                     	;# 
   507  090C                     	;# 
   508  090E                     	;# 
   509  090F                     	;# 
   510  091F                     	;# 
   511  098F                     	;# 
   512  098F                     	;# 
   513  0990                     	;# 
   514  0991                     	;# 
   515  0992                     	;# 
   516  0993                     	;# 
   517  0994                     	;# 
   518  0995                     	;# 
   519  0996                     	;# 
   520  0997                     	;# 
   521  1E0F                     	;# 
   522  1E10                     	;# 
   523  1E11                     	;# 
   524  1E12                     	;# 
   525  1E13                     	;# 
   526  1E14                     	;# 
   527  1E15                     	;# 
   528  1E16                     	;# 
   529  1E17                     	;# 
   530  1E18                     	;# 
   531  1E19                     	;# 
   532  1E1A                     	;# 
   533  1E1B                     	;# 
   534  1E1C                     	;# 
   535  1E1D                     	;# 
   536  1E1E                     	;# 
   537  1E1F                     	;# 
   538  1E20                     	;# 
   539  1E21                     	;# 
   540  1E22                     	;# 
   541  1E23                     	;# 
   542  1E24                     	;# 
   543  1E25                     	;# 
   544  1E26                     	;# 
   545  1E27                     	;# 
   546  1E28                     	;# 
   547  1E29                     	;# 
   548  1E2A                     	;# 
   549  1E2B                     	;# 
   550  1E2C                     	;# 
   551  1E2D                     	;# 
   552  1E2E                     	;# 
   553  1E2F                     	;# 
   554  1E30                     	;# 
   555  1E31                     	;# 
   556  1E32                     	;# 
   557  1E33                     	;# 
   558  1E34                     	;# 
   559  1E35                     	;# 
   560  1E36                     	;# 
   561  1E37                     	;# 
   562  1E8F                     	;# 
   563  1E90                     	;# 
   564  1E91                     	;# 
   565  1E92                     	;# 
   566  1E93                     	;# 
   567  1E94                     	;# 
   568  1E95                     	;# 
   569  1E96                     	;# 
   570  1E97                     	;# 
   571  1E9C                     	;# 
   572  1E9D                     	;# 
   573  1E9E                     	;# 
   574  1EA1                     	;# 
   575  1EA2                     	;# 
   576  1EA3                     	;# 
   577  1EA4                     	;# 
   578  1EA9                     	;# 
   579  1EAA                     	;# 
   580  1EB1                     	;# 
   581  1EB2                     	;# 
   582  1EB8                     	;# 
   583  1EB9                     	;# 
   584  1EBA                     	;# 
   585  1EBB                     	;# 
   586  1EBC                     	;# 
   587  1EBD                     	;# 
   588  1EBE                     	;# 
   589  1EC3                     	;# 
   590  1EC5                     	;# 
   591  1EC6                     	;# 
   592  1EC7                     	;# 
   593  1EC8                     	;# 
   594  1EC9                     	;# 
   595  1ECA                     	;# 
   596  1ECB                     	;# 
   597  1ECB                     	;# 
   598  1ECB                     	;# 
   599  1ECC                     	;# 
   600  1ECC                     	;# 
   601  1ECC                     	;# 
   602  1F10                     	;# 
   603  1F11                     	;# 
   604  1F12                     	;# 
   605  1F14                     	;# 
   606  1F15                     	;# 
   607  1F1C                     	;# 
   608  1F1D                     	;# 
   609  1F1E                     	;# 
   610  1F1F                     	;# 
   611  1F20                     	;# 
   612  1F21                     	;# 
   613  1F22                     	;# 
   614  1F23                     	;# 
   615  1F24                     	;# 
   616  1F25                     	;# 
   617  1F26                     	;# 
   618  1F27                     	;# 
   619  1F38                     	;# 
   620  1F39                     	;# 
   621  1F3A                     	;# 
   622  1F3B                     	;# 
   623  1F3C                     	;# 
   624  1F3D                     	;# 
   625  1F3E                     	;# 
   626  1F3F                     	;# 
   627  1F43                     	;# 
   628  1F44                     	;# 
   629  1F45                     	;# 
   630  1F46                     	;# 
   631  1F47                     	;# 
   632  1F48                     	;# 
   633  1F49                     	;# 
   634  1F4A                     	;# 
   635  1F4E                     	;# 
   636  1F4F                     	;# 
   637  1F50                     	;# 
   638  1F51                     	;# 
   639  1F52                     	;# 
   640  1F53                     	;# 
   641  1F54                     	;# 
   642  1F55                     	;# 
   643  1FE4                     	;# 
   644  1FE5                     	;# 
   645  1FE6                     	;# 
   646  1FE7                     	;# 
   647  1FE8                     	;# 
   648  1FE8                     	;# 
   649  1FE9                     	;# 
   650  1FEA                     	;# 
   651  1FEB                     	;# 
   652  1FED                     	;# 
   653  1FEE                     	;# 
   654  1FEF                     	;# 
   655  0000                     	;# 
   656  0001                     	;# 
   657  0002                     	;# 
   658  0003                     	;# 
   659  0004                     	;# 
   660  0005                     	;# 
   661  0006                     	;# 
   662  0007                     	;# 
   663  0008                     	;# 
   664  0009                     	;# 
   665  000A                     	;# 
   666  000B                     	;# 
   667  000C                     	;# 
   668  000D                     	;# 
   669  000E                     	;# 
   670  0012                     	;# 
   671  0013                     	;# 
   672  0014                     	;# 
   673  0018                     	;# 
   674  0019                     	;# 
   675  001A                     	;# 
   676  008C                     	;# 
   677  008C                     	;# 
   678  008D                     	;# 
   679  008E                     	;# 
   680  008E                     	;# 
   681  008F                     	;# 
   682  0090                     	;# 
   683  0090                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0092                     	;# 
   687  0093                     	;# 
   688  0094                     	;# 
   689  0094                     	;# 
   690  0095                     	;# 
   691  0096                     	;# 
   692  0096                     	;# 
   693  0097                     	;# 
   694  0098                     	;# 
   695  0099                     	;# 
   696  009A                     	;# 
   697  009B                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  010C                     	;# 
   705  010C                     	;# 
   706  010D                     	;# 
   707  010E                     	;# 
   708  010F                     	;# 
   709  010F                     	;# 
   710  0110                     	;# 
   711  0111                     	;# 
   712  0112                     	;# 
   713  0113                     	;# 
   714  0114                     	;# 
   715  0115                     	;# 
   716  0116                     	;# 
   717  0117                     	;# 
   718  0118                     	;# 
   719  0119                     	;# 
   720  0119                     	;# 
   721  0119                     	;# 
   722  011A                     	;# 
   723  011A                     	;# 
   724  011A                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011B                     	;# 
   728  011B                     	;# 
   729  011B                     	;# 
   730  011C                     	;# 
   731  011C                     	;# 
   732  011C                     	;# 
   733  011D                     	;# 
   734  011D                     	;# 
   735  011D                     	;# 
   736  011E                     	;# 
   737  011E                     	;# 
   738  011E                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  011F                     	;# 
   742  011F                     	;# 
   743  011F                     	;# 
   744  018C                     	;# 
   745  018D                     	;# 
   746  018E                     	;# 
   747  018F                     	;# 
   748  0190                     	;# 
   749  0191                     	;# 
   750  0192                     	;# 
   751  0196                     	;# 
   752  0197                     	;# 
   753  0198                     	;# 
   754  0199                     	;# 
   755  019A                     	;# 
   756  019B                     	;# 
   757  019C                     	;# 
   758  020C                     	;# 
   759  020D                     	;# 
   760  020E                     	;# 
   761  020E                     	;# 
   762  020F                     	;# 
   763  020F                     	;# 
   764  0210                     	;# 
   765  0210                     	;# 
   766  0211                     	;# 
   767  0211                     	;# 
   768  0212                     	;# 
   769  0213                     	;# 
   770  0214                     	;# 
   771  0214                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0216                     	;# 
   775  0216                     	;# 
   776  0217                     	;# 
   777  0217                     	;# 
   778  0218                     	;# 
   779  0219                     	;# 
   780  021A                     	;# 
   781  021A                     	;# 
   782  021B                     	;# 
   783  021B                     	;# 
   784  021C                     	;# 
   785  021C                     	;# 
   786  021D                     	;# 
   787  021D                     	;# 
   788  021E                     	;# 
   789  021F                     	;# 
   790  028C                     	;# 
   791  028C                     	;# 
   792  028D                     	;# 
   793  028D                     	;# 
   794  028E                     	;# 
   795  028F                     	;# 
   796  0290                     	;# 
   797  0291                     	;# 
   798  0292                     	;# 
   799  0292                     	;# 
   800  0293                     	;# 
   801  0293                     	;# 
   802  0294                     	;# 
   803  0295                     	;# 
   804  0296                     	;# 
   805  0297                     	;# 
   806  0298                     	;# 
   807  0298                     	;# 
   808  0299                     	;# 
   809  0299                     	;# 
   810  029A                     	;# 
   811  029B                     	;# 
   812  029C                     	;# 
   813  029D                     	;# 
   814  029F                     	;# 
   815  030C                     	;# 
   816  030C                     	;# 
   817  030D                     	;# 
   818  030E                     	;# 
   819  030F                     	;# 
   820  0310                     	;# 
   821  0310                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0314                     	;# 
   826  0314                     	;# 
   827  0315                     	;# 
   828  0316                     	;# 
   829  0317                     	;# 
   830  0318                     	;# 
   831  0318                     	;# 
   832  0319                     	;# 
   833  031A                     	;# 
   834  031B                     	;# 
   835  038C                     	;# 
   836  038C                     	;# 
   837  038D                     	;# 
   838  038E                     	;# 
   839  0390                     	;# 
   840  0390                     	;# 
   841  0391                     	;# 
   842  0392                     	;# 
   843  048C                     	;# 
   844  048C                     	;# 
   845  048D                     	;# 
   846  048E                     	;# 
   847  048F                     	;# 
   848  048F                     	;# 
   849  0490                     	;# 
   850  0491                     	;# 
   851  0492                     	;# 
   852  0492                     	;# 
   853  0493                     	;# 
   854  0494                     	;# 
   855  0495                     	;# 
   856  0495                     	;# 
   857  0496                     	;# 
   858  0497                     	;# 
   859  0498                     	;# 
   860  0499                     	;# 
   861  049A                     	;# 
   862  049B                     	;# 
   863  049C                     	;# 
   864  049D                     	;# 
   865  058C                     	;# 
   866  058C                     	;# 
   867  058D                     	;# 
   868  058E                     	;# 
   869  058F                     	;# 
   870  058F                     	;# 
   871  0590                     	;# 
   872  0591                     	;# 
   873  0592                     	;# 
   874  0593                     	;# 
   875  059C                     	;# 
   876  059C                     	;# 
   877  059D                     	;# 
   878  059D                     	;# 
   879  059E                     	;# 
   880  059F                     	;# 
   881  060C                     	;# 
   882  060C                     	;# 
   883  060D                     	;# 
   884  060D                     	;# 
   885  060E                     	;# 
   886  060F                     	;# 
   887  0610                     	;# 
   888  0611                     	;# 
   889  0612                     	;# 
   890  0613                     	;# 
   891  0614                     	;# 
   892  0616                     	;# 
   893  0616                     	;# 
   894  0617                     	;# 
   895  0617                     	;# 
   896  0618                     	;# 
   897  0619                     	;# 
   898  061A                     	;# 
   899  061B                     	;# 
   900  061C                     	;# 
   901  061D                     	;# 
   902  061E                     	;# 
   903  070C                     	;# 
   904  070D                     	;# 
   905  070E                     	;# 
   906  070F                     	;# 
   907  0710                     	;# 
   908  0711                     	;# 
   909  0712                     	;# 
   910  0713                     	;# 
   911  0714                     	;# 
   912  0716                     	;# 
   913  0717                     	;# 
   914  0718                     	;# 
   915  0719                     	;# 
   916  071A                     	;# 
   917  071B                     	;# 
   918  071C                     	;# 
   919  071D                     	;# 
   920  071E                     	;# 
   921  0796                     	;# 
   922  0797                     	;# 
   923  0798                     	;# 
   924  0799                     	;# 
   925  079A                     	;# 
   926  079B                     	;# 
   927  079C                     	;# 
   928  079D                     	;# 
   929  080C                     	;# 
   930  080D                     	;# 
   931  080E                     	;# 
   932  080F                     	;# 
   933  0810                     	;# 
   934  0811                     	;# 
   935  0812                     	;# 
   936  0813                     	;# 
   937  0814                     	;# 
   938  081A                     	;# 
   939  081A                     	;# 
   940  081B                     	;# 
   941  081C                     	;# 
   942  081C                     	;# 
   943  081D                     	;# 
   944  081E                     	;# 
   945  081F                     	;# 
   946  088C                     	;# 
   947  088D                     	;# 
   948  088E                     	;# 
   949  088F                     	;# 
   950  0890                     	;# 
   951  0891                     	;# 
   952  0892                     	;# 
   953  0893                     	;# 
   954  0895                     	;# 
   955  0896                     	;# 
   956  0897                     	;# 
   957  0898                     	;# 
   958  0899                     	;# 
   959  089A                     	;# 
   960  089B                     	;# 
   961  090C                     	;# 
   962  090E                     	;# 
   963  090F                     	;# 
   964  091F                     	;# 
   965  098F                     	;# 
   966  098F                     	;# 
   967  0990                     	;# 
   968  0991                     	;# 
   969  0992                     	;# 
   970  0993                     	;# 
   971  0994                     	;# 
   972  0995                     	;# 
   973  0996                     	;# 
   974  0997                     	;# 
   975  1E0F                     	;# 
   976  1E10                     	;# 
   977  1E11                     	;# 
   978  1E12                     	;# 
   979  1E13                     	;# 
   980  1E14                     	;# 
   981  1E15                     	;# 
   982  1E16                     	;# 
   983  1E17                     	;# 
   984  1E18                     	;# 
   985  1E19                     	;# 
   986  1E1A                     	;# 
   987  1E1B                     	;# 
   988  1E1C                     	;# 
   989  1E1D                     	;# 
   990  1E1E                     	;# 
   991  1E1F                     	;# 
   992  1E20                     	;# 
   993  1E21                     	;# 
   994  1E22                     	;# 
   995  1E23                     	;# 
   996  1E24                     	;# 
   997  1E25                     	;# 
   998  1E26                     	;# 
   999  1E27                     	;# 
  1000  1E28                     	;# 
  1001  1E29                     	;# 
  1002  1E2A                     	;# 
  1003  1E2B                     	;# 
  1004  1E2C                     	;# 
  1005  1E2D                     	;# 
  1006  1E2E                     	;# 
  1007  1E2F                     	;# 
  1008  1E30                     	;# 
  1009  1E31                     	;# 
  1010  1E32                     	;# 
  1011  1E33                     	;# 
  1012  1E34                     	;# 
  1013  1E35                     	;# 
  1014  1E36                     	;# 
  1015  1E37                     	;# 
  1016  1E8F                     	;# 
  1017  1E90                     	;# 
  1018  1E91                     	;# 
  1019  1E92                     	;# 
  1020  1E93                     	;# 
  1021  1E94                     	;# 
  1022  1E95                     	;# 
  1023  1E96                     	;# 
  1024  1E97                     	;# 
  1025  1E9C                     	;# 
  1026  1E9D                     	;# 
  1027  1E9E                     	;# 
  1028  1EA1                     	;# 
  1029  1EA2                     	;# 
  1030  1EA3                     	;# 
  1031  1EA4                     	;# 
  1032  1EA9                     	;# 
  1033  1EAA                     	;# 
  1034  1EB1                     	;# 
  1035  1EB2                     	;# 
  1036  1EB8                     	;# 
  1037  1EB9                     	;# 
  1038  1EBA                     	;# 
  1039  1EBB                     	;# 
  1040  1EBC                     	;# 
  1041  1EBD                     	;# 
  1042  1EBE                     	;# 
  1043  1EC3                     	;# 
  1044  1EC5                     	;# 
  1045  1EC6                     	;# 
  1046  1EC7                     	;# 
  1047  1EC8                     	;# 
  1048  1EC9                     	;# 
  1049  1ECA                     	;# 
  1050  1ECB                     	;# 
  1051  1ECB                     	;# 
  1052  1ECB                     	;# 
  1053  1ECC                     	;# 
  1054  1ECC                     	;# 
  1055  1ECC                     	;# 
  1056  1F10                     	;# 
  1057  1F11                     	;# 
  1058  1F12                     	;# 
  1059  1F14                     	;# 
  1060  1F15                     	;# 
  1061  1F1C                     	;# 
  1062  1F1D                     	;# 
  1063  1F1E                     	;# 
  1064  1F1F                     	;# 
  1065  1F20                     	;# 
  1066  1F21                     	;# 
  1067  1F22                     	;# 
  1068  1F23                     	;# 
  1069  1F24                     	;# 
  1070  1F25                     	;# 
  1071  1F26                     	;# 
  1072  1F27                     	;# 
  1073  1F38                     	;# 
  1074  1F39                     	;# 
  1075  1F3A                     	;# 
  1076  1F3B                     	;# 
  1077  1F3C                     	;# 
  1078  1F3D                     	;# 
  1079  1F3E                     	;# 
  1080  1F3F                     	;# 
  1081  1F43                     	;# 
  1082  1F44                     	;# 
  1083  1F45                     	;# 
  1084  1F46                     	;# 
  1085  1F47                     	;# 
  1086  1F48                     	;# 
  1087  1F49                     	;# 
  1088  1F4A                     	;# 
  1089  1F4E                     	;# 
  1090  1F4F                     	;# 
  1091  1F50                     	;# 
  1092  1F51                     	;# 
  1093  1F52                     	;# 
  1094  1F53                     	;# 
  1095  1F54                     	;# 
  1096  1F55                     	;# 
  1097  1FE4                     	;# 
  1098  1FE5                     	;# 
  1099  1FE6                     	;# 
  1100  1FE7                     	;# 
  1101  1FE8                     	;# 
  1102  1FE8                     	;# 
  1103  1FE9                     	;# 
  1104  1FEA                     	;# 
  1105  1FEB                     	;# 
  1106  1FED                     	;# 
  1107  1FEE                     	;# 
  1108  1FEF                     	;# 
  1109  0000                     	;# 
  1110  0001                     	;# 
  1111  0002                     	;# 
  1112  0003                     	;# 
  1113  0004                     	;# 
  1114  0005                     	;# 
  1115  0006                     	;# 
  1116  0007                     	;# 
  1117  0008                     	;# 
  1118  0009                     	;# 
  1119  000A                     	;# 
  1120  000B                     	;# 
  1121  000C                     	;# 
  1122  000D                     	;# 
  1123  000E                     	;# 
  1124  0012                     	;# 
  1125  0013                     	;# 
  1126  0014                     	;# 
  1127  0018                     	;# 
  1128  0019                     	;# 
  1129  001A                     	;# 
  1130  008C                     	;# 
  1131  008C                     	;# 
  1132  008D                     	;# 
  1133  008E                     	;# 
  1134  008E                     	;# 
  1135  008F                     	;# 
  1136  0090                     	;# 
  1137  0090                     	;# 
  1138  0091                     	;# 
  1139  0092                     	;# 
  1140  0092                     	;# 
  1141  0093                     	;# 
  1142  0094                     	;# 
  1143  0094                     	;# 
  1144  0095                     	;# 
  1145  0096                     	;# 
  1146  0096                     	;# 
  1147  0097                     	;# 
  1148  0098                     	;# 
  1149  0099                     	;# 
  1150  009A                     	;# 
  1151  009B                     	;# 
  1152  009B                     	;# 
  1153  009C                     	;# 
  1154  009D                     	;# 
  1155  009D                     	;# 
  1156  009E                     	;# 
  1157  009F                     	;# 
  1158  010C                     	;# 
  1159  010C                     	;# 
  1160  010D                     	;# 
  1161  010E                     	;# 
  1162  010F                     	;# 
  1163  010F                     	;# 
  1164  0110                     	;# 
  1165  0111                     	;# 
  1166  0112                     	;# 
  1167  0113                     	;# 
  1168  0114                     	;# 
  1169  0115                     	;# 
  1170  0116                     	;# 
  1171  0117                     	;# 
  1172  0118                     	;# 
  1173  0119                     	;# 
  1174  0119                     	;# 
  1175  0119                     	;# 
  1176  011A                     	;# 
  1177  011A                     	;# 
  1178  011A                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011B                     	;# 
  1183  011B                     	;# 
  1184  011C                     	;# 
  1185  011C                     	;# 
  1186  011C                     	;# 
  1187  011D                     	;# 
  1188  011D                     	;# 
  1189  011D                     	;# 
  1190  011E                     	;# 
  1191  011E                     	;# 
  1192  011E                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  011F                     	;# 
  1197  011F                     	;# 
  1198  018C                     	;# 
  1199  018D                     	;# 
  1200  018E                     	;# 
  1201  018F                     	;# 
  1202  0190                     	;# 
  1203  0191                     	;# 
  1204  0192                     	;# 
  1205  0196                     	;# 
  1206  0197                     	;# 
  1207  0198                     	;# 
  1208  0199                     	;# 
  1209  019A                     	;# 
  1210  019B                     	;# 
  1211  019C                     	;# 
  1212  020C                     	;# 
  1213  020D                     	;# 
  1214  020E                     	;# 
  1215  020E                     	;# 
  1216  020F                     	;# 
  1217  020F                     	;# 
  1218  0210                     	;# 
  1219  0210                     	;# 
  1220  0211                     	;# 
  1221  0211                     	;# 
  1222  0212                     	;# 
  1223  0213                     	;# 
  1224  0214                     	;# 
  1225  0214                     	;# 
  1226  0215                     	;# 
  1227  0215                     	;# 
  1228  0216                     	;# 
  1229  0216                     	;# 
  1230  0217                     	;# 
  1231  0217                     	;# 
  1232  0218                     	;# 
  1233  0219                     	;# 
  1234  021A                     	;# 
  1235  021A                     	;# 
  1236  021B                     	;# 
  1237  021B                     	;# 
  1238  021C                     	;# 
  1239  021C                     	;# 
  1240  021D                     	;# 
  1241  021D                     	;# 
  1242  021E                     	;# 
  1243  021F                     	;# 
  1244  028C                     	;# 
  1245  028C                     	;# 
  1246  028D                     	;# 
  1247  028D                     	;# 
  1248  028E                     	;# 
  1249  028F                     	;# 
  1250  0290                     	;# 
  1251  0291                     	;# 
  1252  0292                     	;# 
  1253  0292                     	;# 
  1254  0293                     	;# 
  1255  0293                     	;# 
  1256  0294                     	;# 
  1257  0295                     	;# 
  1258  0296                     	;# 
  1259  0297                     	;# 
  1260  0298                     	;# 
  1261  0298                     	;# 
  1262  0299                     	;# 
  1263  0299                     	;# 
  1264  029A                     	;# 
  1265  029B                     	;# 
  1266  029C                     	;# 
  1267  029D                     	;# 
  1268  029F                     	;# 
  1269  030C                     	;# 
  1270  030C                     	;# 
  1271  030D                     	;# 
  1272  030E                     	;# 
  1273  030F                     	;# 
  1274  0310                     	;# 
  1275  0310                     	;# 
  1276  0311                     	;# 
  1277  0312                     	;# 
  1278  0313                     	;# 
  1279  0314                     	;# 
  1280  0314                     	;# 
  1281  0315                     	;# 
  1282  0316                     	;# 
  1283  0317                     	;# 
  1284  0318                     	;# 
  1285  0318                     	;# 
  1286  0319                     	;# 
  1287  031A                     	;# 
  1288  031B                     	;# 
  1289  038C                     	;# 
  1290  038C                     	;# 
  1291  038D                     	;# 
  1292  038E                     	;# 
  1293  0390                     	;# 
  1294  0390                     	;# 
  1295  0391                     	;# 
  1296  0392                     	;# 
  1297  048C                     	;# 
  1298  048C                     	;# 
  1299  048D                     	;# 
  1300  048E                     	;# 
  1301  048F                     	;# 
  1302  048F                     	;# 
  1303  0490                     	;# 
  1304  0491                     	;# 
  1305  0492                     	;# 
  1306  0492                     	;# 
  1307  0493                     	;# 
  1308  0494                     	;# 
  1309  0495                     	;# 
  1310  0495                     	;# 
  1311  0496                     	;# 
  1312  0497                     	;# 
  1313  0498                     	;# 
  1314  0499                     	;# 
  1315  049A                     	;# 
  1316  049B                     	;# 
  1317  049C                     	;# 
  1318  049D                     	;# 
  1319  058C                     	;# 
  1320  058C                     	;# 
  1321  058D                     	;# 
  1322  058E                     	;# 
  1323  058F                     	;# 
  1324  058F                     	;# 
  1325  0590                     	;# 
  1326  0591                     	;# 
  1327  0592                     	;# 
  1328  0593                     	;# 
  1329  059C                     	;# 
  1330  059C                     	;# 
  1331  059D                     	;# 
  1332  059D                     	;# 
  1333  059E                     	;# 
  1334  059F                     	;# 
  1335  060C                     	;# 
  1336  060C                     	;# 
  1337  060D                     	;# 
  1338  060D                     	;# 
  1339  060E                     	;# 
  1340  060F                     	;# 
  1341  0610                     	;# 
  1342  0611                     	;# 
  1343  0612                     	;# 
  1344  0613                     	;# 
  1345  0614                     	;# 
  1346  0616                     	;# 
  1347  0616                     	;# 
  1348  0617                     	;# 
  1349  0617                     	;# 
  1350  0618                     	;# 
  1351  0619                     	;# 
  1352  061A                     	;# 
  1353  061B                     	;# 
  1354  061C                     	;# 
  1355  061D                     	;# 
  1356  061E                     	;# 
  1357  070C                     	;# 
  1358  070D                     	;# 
  1359  070E                     	;# 
  1360  070F                     	;# 
  1361  0710                     	;# 
  1362  0711                     	;# 
  1363  0712                     	;# 
  1364  0713                     	;# 
  1365  0714                     	;# 
  1366  0716                     	;# 
  1367  0717                     	;# 
  1368  0718                     	;# 
  1369  0719                     	;# 
  1370  071A                     	;# 
  1371  071B                     	;# 
  1372  071C                     	;# 
  1373  071D                     	;# 
  1374  071E                     	;# 
  1375  0796                     	;# 
  1376  0797                     	;# 
  1377  0798                     	;# 
  1378  0799                     	;# 
  1379  079A                     	;# 
  1380  079B                     	;# 
  1381  079C                     	;# 
  1382  079D                     	;# 
  1383  080C                     	;# 
  1384  080D                     	;# 
  1385  080E                     	;# 
  1386  080F                     	;# 
  1387  0810                     	;# 
  1388  0811                     	;# 
  1389  0812                     	;# 
  1390  0813                     	;# 
  1391  0814                     	;# 
  1392  081A                     	;# 
  1393  081A                     	;# 
  1394  081B                     	;# 
  1395  081C                     	;# 
  1396  081C                     	;# 
  1397  081D                     	;# 
  1398  081E                     	;# 
  1399  081F                     	;# 
  1400  088C                     	;# 
  1401  088D                     	;# 
  1402  088E                     	;# 
  1403  088F                     	;# 
  1404  0890                     	;# 
  1405  0891                     	;# 
  1406  0892                     	;# 
  1407  0893                     	;# 
  1408  0895                     	;# 
  1409  0896                     	;# 
  1410  0897                     	;# 
  1411  0898                     	;# 
  1412  0899                     	;# 
  1413  089A                     	;# 
  1414  089B                     	;# 
  1415  090C                     	;# 
  1416  090E                     	;# 
  1417  090F                     	;# 
  1418  091F                     	;# 
  1419  098F                     	;# 
  1420  098F                     	;# 
  1421  0990                     	;# 
  1422  0991                     	;# 
  1423  0992                     	;# 
  1424  0993                     	;# 
  1425  0994                     	;# 
  1426  0995                     	;# 
  1427  0996                     	;# 
  1428  0997                     	;# 
  1429  1E0F                     	;# 
  1430  1E10                     	;# 
  1431  1E11                     	;# 
  1432  1E12                     	;# 
  1433  1E13                     	;# 
  1434  1E14                     	;# 
  1435  1E15                     	;# 
  1436  1E16                     	;# 
  1437  1E17                     	;# 
  1438  1E18                     	;# 
  1439  1E19                     	;# 
  1440  1E1A                     	;# 
  1441  1E1B                     	;# 
  1442  1E1C                     	;# 
  1443  1E1D                     	;# 
  1444  1E1E                     	;# 
  1445  1E1F                     	;# 
  1446  1E20                     	;# 
  1447  1E21                     	;# 
  1448  1E22                     	;# 
  1449  1E23                     	;# 
  1450  1E24                     	;# 
  1451  1E25                     	;# 
  1452  1E26                     	;# 
  1453  1E27                     	;# 
  1454  1E28                     	;# 
  1455  1E29                     	;# 
  1456  1E2A                     	;# 
  1457  1E2B                     	;# 
  1458  1E2C                     	;# 
  1459  1E2D                     	;# 
  1460  1E2E                     	;# 
  1461  1E2F                     	;# 
  1462  1E30                     	;# 
  1463  1E31                     	;# 
  1464  1E32                     	;# 
  1465  1E33                     	;# 
  1466  1E34                     	;# 
  1467  1E35                     	;# 
  1468  1E36                     	;# 
  1469  1E37                     	;# 
  1470  1E8F                     	;# 
  1471  1E90                     	;# 
  1472  1E91                     	;# 
  1473  1E92                     	;# 
  1474  1E93                     	;# 
  1475  1E94                     	;# 
  1476  1E95                     	;# 
  1477  1E96                     	;# 
  1478  1E97                     	;# 
  1479  1E9C                     	;# 
  1480  1E9D                     	;# 
  1481  1E9E                     	;# 
  1482  1EA1                     	;# 
  1483  1EA2                     	;# 
  1484  1EA3                     	;# 
  1485  1EA4                     	;# 
  1486  1EA9                     	;# 
  1487  1EAA                     	;# 
  1488  1EB1                     	;# 
  1489  1EB2                     	;# 
  1490  1EB8                     	;# 
  1491  1EB9                     	;# 
  1492  1EBA                     	;# 
  1493  1EBB                     	;# 
  1494  1EBC                     	;# 
  1495  1EBD                     	;# 
  1496  1EBE                     	;# 
  1497  1EC3                     	;# 
  1498  1EC5                     	;# 
  1499  1EC6                     	;# 
  1500  1EC7                     	;# 
  1501  1EC8                     	;# 
  1502  1EC9                     	;# 
  1503  1ECA                     	;# 
  1504  1ECB                     	;# 
  1505  1ECB                     	;# 
  1506  1ECB                     	;# 
  1507  1ECC                     	;# 
  1508  1ECC                     	;# 
  1509  1ECC                     	;# 
  1510  1F10                     	;# 
  1511  1F11                     	;# 
  1512  1F12                     	;# 
  1513  1F14                     	;# 
  1514  1F15                     	;# 
  1515  1F1C                     	;# 
  1516  1F1D                     	;# 
  1517  1F1E                     	;# 
  1518  1F1F                     	;# 
  1519  1F20                     	;# 
  1520  1F21                     	;# 
  1521  1F22                     	;# 
  1522  1F23                     	;# 
  1523  1F24                     	;# 
  1524  1F25                     	;# 
  1525  1F26                     	;# 
  1526  1F27                     	;# 
  1527  1F38                     	;# 
  1528  1F39                     	;# 
  1529  1F3A                     	;# 
  1530  1F3B                     	;# 
  1531  1F3C                     	;# 
  1532  1F3D                     	;# 
  1533  1F3E                     	;# 
  1534  1F3F                     	;# 
  1535  1F43                     	;# 
  1536  1F44                     	;# 
  1537  1F45                     	;# 
  1538  1F46                     	;# 
  1539  1F47                     	;# 
  1540  1F48                     	;# 
  1541  1F49                     	;# 
  1542  1F4A                     	;# 
  1543  1F4E                     	;# 
  1544  1F4F                     	;# 
  1545  1F50                     	;# 
  1546  1F51                     	;# 
  1547  1F52                     	;# 
  1548  1F53                     	;# 
  1549  1F54                     	;# 
  1550  1F55                     	;# 
  1551  1FE4                     	;# 
  1552  1FE5                     	;# 
  1553  1FE6                     	;# 
  1554  1FE7                     	;# 
  1555  1FE8                     	;# 
  1556  1FE8                     	;# 
  1557  1FE9                     	;# 
  1558  1FEA                     	;# 
  1559  1FEB                     	;# 
  1560  1FED                     	;# 
  1561  1FEE                     	;# 
  1562  1FEF                     	;# 
  1563  0000                     	;# 
  1564  0001                     	;# 
  1565  0002                     	;# 
  1566  0003                     	;# 
  1567  0004                     	;# 
  1568  0005                     	;# 
  1569  0006                     	;# 
  1570  0007                     	;# 
  1571  0008                     	;# 
  1572  0009                     	;# 
  1573  000A                     	;# 
  1574  000B                     	;# 
  1575  000C                     	;# 
  1576  000D                     	;# 
  1577  000E                     	;# 
  1578  0012                     	;# 
  1579  0013                     	;# 
  1580  0014                     	;# 
  1581  0018                     	;# 
  1582  0019                     	;# 
  1583  001A                     	;# 
  1584  008C                     	;# 
  1585  008C                     	;# 
  1586  008D                     	;# 
  1587  008E                     	;# 
  1588  008E                     	;# 
  1589  008F                     	;# 
  1590  0090                     	;# 
  1591  0090                     	;# 
  1592  0091                     	;# 
  1593  0092                     	;# 
  1594  0092                     	;# 
  1595  0093                     	;# 
  1596  0094                     	;# 
  1597  0094                     	;# 
  1598  0095                     	;# 
  1599  0096                     	;# 
  1600  0096                     	;# 
  1601  0097                     	;# 
  1602  0098                     	;# 
  1603  0099                     	;# 
  1604  009A                     	;# 
  1605  009B                     	;# 
  1606  009B                     	;# 
  1607  009C                     	;# 
  1608  009D                     	;# 
  1609  009D                     	;# 
  1610  009E                     	;# 
  1611  009F                     	;# 
  1612  010C                     	;# 
  1613  010C                     	;# 
  1614  010D                     	;# 
  1615  010E                     	;# 
  1616  010F                     	;# 
  1617  010F                     	;# 
  1618  0110                     	;# 
  1619  0111                     	;# 
  1620  0112                     	;# 
  1621  0113                     	;# 
  1622  0114                     	;# 
  1623  0115                     	;# 
  1624  0116                     	;# 
  1625  0117                     	;# 
  1626  0118                     	;# 
  1627  0119                     	;# 
  1628  0119                     	;# 
  1629  0119                     	;# 
  1630  011A                     	;# 
  1631  011A                     	;# 
  1632  011A                     	;# 
  1633  011B                     	;# 
  1634  011B                     	;# 
  1635  011B                     	;# 
  1636  011B                     	;# 
  1637  011B                     	;# 
  1638  011C                     	;# 
  1639  011C                     	;# 
  1640  011C                     	;# 
  1641  011D                     	;# 
  1642  011D                     	;# 
  1643  011D                     	;# 
  1644  011E                     	;# 
  1645  011E                     	;# 
  1646  011E                     	;# 
  1647  011F                     	;# 
  1648  011F                     	;# 
  1649  011F                     	;# 
  1650  011F                     	;# 
  1651  011F                     	;# 
  1652  018C                     	;# 
  1653  018D                     	;# 
  1654  018E                     	;# 
  1655  018F                     	;# 
  1656  0190                     	;# 
  1657  0191                     	;# 
  1658  0192                     	;# 
  1659  0196                     	;# 
  1660  0197                     	;# 
  1661  0198                     	;# 
  1662  0199                     	;# 
  1663  019A                     	;# 
  1664  019B                     	;# 
  1665  019C                     	;# 
  1666  020C                     	;# 
  1667  020D                     	;# 
  1668  020E                     	;# 
  1669  020E                     	;# 
  1670  020F                     	;# 
  1671  020F                     	;# 
  1672  0210                     	;# 
  1673  0210                     	;# 
  1674  0211                     	;# 
  1675  0211                     	;# 
  1676  0212                     	;# 
  1677  0213                     	;# 
  1678  0214                     	;# 
  1679  0214                     	;# 
  1680  0215                     	;# 
  1681  0215                     	;# 
  1682  0216                     	;# 
  1683  0216                     	;# 
  1684  0217                     	;# 
  1685  0217                     	;# 
  1686  0218                     	;# 
  1687  0219                     	;# 
  1688  021A                     	;# 
  1689  021A                     	;# 
  1690  021B                     	;# 
  1691  021B                     	;# 
  1692  021C                     	;# 
  1693  021C                     	;# 
  1694  021D                     	;# 
  1695  021D                     	;# 
  1696  021E                     	;# 
  1697  021F                     	;# 
  1698  028C                     	;# 
  1699  028C                     	;# 
  1700  028D                     	;# 
  1701  028D                     	;# 
  1702  028E                     	;# 
  1703  028F                     	;# 
  1704  0290                     	;# 
  1705  0291                     	;# 
  1706  0292                     	;# 
  1707  0292                     	;# 
  1708  0293                     	;# 
  1709  0293                     	;# 
  1710  0294                     	;# 
  1711  0295                     	;# 
  1712  0296                     	;# 
  1713  0297                     	;# 
  1714  0298                     	;# 
  1715  0298                     	;# 
  1716  0299                     	;# 
  1717  0299                     	;# 
  1718  029A                     	;# 
  1719  029B                     	;# 
  1720  029C                     	;# 
  1721  029D                     	;# 
  1722  029F                     	;# 
  1723  030C                     	;# 
  1724  030C                     	;# 
  1725  030D                     	;# 
  1726  030E                     	;# 
  1727  030F                     	;# 
  1728  0310                     	;# 
  1729  0310                     	;# 
  1730  0311                     	;# 
  1731  0312                     	;# 
  1732  0313                     	;# 
  1733  0314                     	;# 
  1734  0314                     	;# 
  1735  0315                     	;# 
  1736  0316                     	;# 
  1737  0317                     	;# 
  1738  0318                     	;# 
  1739  0318                     	;# 
  1740  0319                     	;# 
  1741  031A                     	;# 
  1742  031B                     	;# 
  1743  038C                     	;# 
  1744  038C                     	;# 
  1745  038D                     	;# 
  1746  038E                     	;# 
  1747  0390                     	;# 
  1748  0390                     	;# 
  1749  0391                     	;# 
  1750  0392                     	;# 
  1751  048C                     	;# 
  1752  048C                     	;# 
  1753  048D                     	;# 
  1754  048E                     	;# 
  1755  048F                     	;# 
  1756  048F                     	;# 
  1757  0490                     	;# 
  1758  0491                     	;# 
  1759  0492                     	;# 
  1760  0492                     	;# 
  1761  0493                     	;# 
  1762  0494                     	;# 
  1763  0495                     	;# 
  1764  0495                     	;# 
  1765  0496                     	;# 
  1766  0497                     	;# 
  1767  0498                     	;# 
  1768  0499                     	;# 
  1769  049A                     	;# 
  1770  049B                     	;# 
  1771  049C                     	;# 
  1772  049D                     	;# 
  1773  058C                     	;# 
  1774  058C                     	;# 
  1775  058D                     	;# 
  1776  058E                     	;# 
  1777  058F                     	;# 
  1778  058F                     	;# 
  1779  0590                     	;# 
  1780  0591                     	;# 
  1781  0592                     	;# 
  1782  0593                     	;# 
  1783  059C                     	;# 
  1784  059C                     	;# 
  1785  059D                     	;# 
  1786  059D                     	;# 
  1787  059E                     	;# 
  1788  059F                     	;# 
  1789  060C                     	;# 
  1790  060C                     	;# 
  1791  060D                     	;# 
  1792  060D                     	;# 
  1793  060E                     	;# 
  1794  060F                     	;# 
  1795  0610                     	;# 
  1796  0611                     	;# 
  1797  0612                     	;# 
  1798  0613                     	;# 
  1799  0614                     	;# 
  1800  0616                     	;# 
  1801  0616                     	;# 
  1802  0617                     	;# 
  1803  0617                     	;# 
  1804  0618                     	;# 
  1805  0619                     	;# 
  1806  061A                     	;# 
  1807  061B                     	;# 
  1808  061C                     	;# 
  1809  061D                     	;# 
  1810  061E                     	;# 
  1811  070C                     	;# 
  1812  070D                     	;# 
  1813  070E                     	;# 
  1814  070F                     	;# 
  1815  0710                     	;# 
  1816  0711                     	;# 
  1817  0712                     	;# 
  1818  0713                     	;# 
  1819  0714                     	;# 
  1820  0716                     	;# 
  1821  0717                     	;# 
  1822  0718                     	;# 
  1823  0719                     	;# 
  1824  071A                     	;# 
  1825  071B                     	;# 
  1826  071C                     	;# 
  1827  071D                     	;# 
  1828  071E                     	;# 
  1829  0796                     	;# 
  1830  0797                     	;# 
  1831  0798                     	;# 
  1832  0799                     	;# 
  1833  079A                     	;# 
  1834  079B                     	;# 
  1835  079C                     	;# 
  1836  079D                     	;# 
  1837  080C                     	;# 
  1838  080D                     	;# 
  1839  080E                     	;# 
  1840  080F                     	;# 
  1841  0810                     	;# 
  1842  0811                     	;# 
  1843  0812                     	;# 
  1844  0813                     	;# 
  1845  0814                     	;# 
  1846  081A                     	;# 
  1847  081A                     	;# 
  1848  081B                     	;# 
  1849  081C                     	;# 
  1850  081C                     	;# 
  1851  081D                     	;# 
  1852  081E                     	;# 
  1853  081F                     	;# 
  1854  088C                     	;# 
  1855  088D                     	;# 
  1856  088E                     	;# 
  1857  088F                     	;# 
  1858  0890                     	;# 
  1859  0891                     	;# 
  1860  0892                     	;# 
  1861  0893                     	;# 
  1862  0895                     	;# 
  1863  0896                     	;# 
  1864  0897                     	;# 
  1865  0898                     	;# 
  1866  0899                     	;# 
  1867  089A                     	;# 
  1868  089B                     	;# 
  1869  090C                     	;# 
  1870  090E                     	;# 
  1871  090F                     	;# 
  1872  091F                     	;# 
  1873  098F                     	;# 
  1874  098F                     	;# 
  1875  0990                     	;# 
  1876  0991                     	;# 
  1877  0992                     	;# 
  1878  0993                     	;# 
  1879  0994                     	;# 
  1880  0995                     	;# 
  1881  0996                     	;# 
  1882  0997                     	;# 
  1883  1E0F                     	;# 
  1884  1E10                     	;# 
  1885  1E11                     	;# 
  1886  1E12                     	;# 
  1887  1E13                     	;# 
  1888  1E14                     	;# 
  1889  1E15                     	;# 
  1890  1E16                     	;# 
  1891  1E17                     	;# 
  1892  1E18                     	;# 
  1893  1E19                     	;# 
  1894  1E1A                     	;# 
  1895  1E1B                     	;# 
  1896  1E1C                     	;# 
  1897  1E1D                     	;# 
  1898  1E1E                     	;# 
  1899  1E1F                     	;# 
  1900  1E20                     	;# 
  1901  1E21                     	;# 
  1902  1E22                     	;# 
  1903  1E23                     	;# 
  1904  1E24                     	;# 
  1905  1E25                     	;# 
  1906  1E26                     	;# 
  1907  1E27                     	;# 
  1908  1E28                     	;# 
  1909  1E29                     	;# 
  1910  1E2A                     	;# 
  1911  1E2B                     	;# 
  1912  1E2C                     	;# 
  1913  1E2D                     	;# 
  1914  1E2E                     	;# 
  1915  1E2F                     	;# 
  1916  1E30                     	;# 
  1917  1E31                     	;# 
  1918  1E32                     	;# 
  1919  1E33                     	;# 
  1920  1E34                     	;# 
  1921  1E35                     	;# 
  1922  1E36                     	;# 
  1923  1E37                     	;# 
  1924  1E8F                     	;# 
  1925  1E90                     	;# 
  1926  1E91                     	;# 
  1927  1E92                     	;# 
  1928  1E93                     	;# 
  1929  1E94                     	;# 
  1930  1E95                     	;# 
  1931  1E96                     	;# 
  1932  1E97                     	;# 
  1933  1E9C                     	;# 
  1934  1E9D                     	;# 
  1935  1E9E                     	;# 
  1936  1EA1                     	;# 
  1937  1EA2                     	;# 
  1938  1EA3                     	;# 
  1939  1EA4                     	;# 
  1940  1EA9                     	;# 
  1941  1EAA                     	;# 
  1942  1EB1                     	;# 
  1943  1EB2                     	;# 
  1944  1EB8                     	;# 
  1945  1EB9                     	;# 
  1946  1EBA                     	;# 
  1947  1EBB                     	;# 
  1948  1EBC                     	;# 
  1949  1EBD                     	;# 
  1950  1EBE                     	;# 
  1951  1EC3                     	;# 
  1952  1EC5                     	;# 
  1953  1EC6                     	;# 
  1954  1EC7                     	;# 
  1955  1EC8                     	;# 
  1956  1EC9                     	;# 
  1957  1ECA                     	;# 
  1958  1ECB                     	;# 
  1959  1ECB                     	;# 
  1960  1ECB                     	;# 
  1961  1ECC                     	;# 
  1962  1ECC                     	;# 
  1963  1ECC                     	;# 
  1964  1F10                     	;# 
  1965  1F11                     	;# 
  1966  1F12                     	;# 
  1967  1F14                     	;# 
  1968  1F15                     	;# 
  1969  1F1C                     	;# 
  1970  1F1D                     	;# 
  1971  1F1E                     	;# 
  1972  1F1F                     	;# 
  1973  1F20                     	;# 
  1974  1F21                     	;# 
  1975  1F22                     	;# 
  1976  1F23                     	;# 
  1977  1F24                     	;# 
  1978  1F25                     	;# 
  1979  1F26                     	;# 
  1980  1F27                     	;# 
  1981  1F38                     	;# 
  1982  1F39                     	;# 
  1983  1F3A                     	;# 
  1984  1F3B                     	;# 
  1985  1F3C                     	;# 
  1986  1F3D                     	;# 
  1987  1F3E                     	;# 
  1988  1F3F                     	;# 
  1989  1F43                     	;# 
  1990  1F44                     	;# 
  1991  1F45                     	;# 
  1992  1F46                     	;# 
  1993  1F47                     	;# 
  1994  1F48                     	;# 
  1995  1F49                     	;# 
  1996  1F4A                     	;# 
  1997  1F4E                     	;# 
  1998  1F4F                     	;# 
  1999  1F50                     	;# 
  2000  1F51                     	;# 
  2001  1F52                     	;# 
  2002  1F53                     	;# 
  2003  1F54                     	;# 
  2004  1F55                     	;# 
  2005  1FE4                     	;# 
  2006  1FE5                     	;# 
  2007  1FE6                     	;# 
  2008  1FE7                     	;# 
  2009  1FE8                     	;# 
  2010  1FE8                     	;# 
  2011  1FE9                     	;# 
  2012  1FEA                     	;# 
  2013  1FEB                     	;# 
  2014  1FED                     	;# 
  2015  1FEE                     	;# 
  2016  1FEF                     	;# 
  2017  0000                     	;# 
  2018  0001                     	;# 
  2019  0002                     	;# 
  2020  0003                     	;# 
  2021  0004                     	;# 
  2022  0005                     	;# 
  2023  0006                     	;# 
  2024  0007                     	;# 
  2025  0008                     	;# 
  2026  0009                     	;# 
  2027  000A                     	;# 
  2028  000B                     	;# 
  2029  000C                     	;# 
  2030  000D                     	;# 
  2031  000E                     	;# 
  2032  0012                     	;# 
  2033  0013                     	;# 
  2034  0014                     	;# 
  2035  0018                     	;# 
  2036  0019                     	;# 
  2037  001A                     	;# 
  2038  008C                     	;# 
  2039  008C                     	;# 
  2040  008D                     	;# 
  2041  008E                     	;# 
  2042  008E                     	;# 
  2043  008F                     	;# 
  2044  0090                     	;# 
  2045  0090                     	;# 
  2046  0091                     	;# 
  2047  0092                     	;# 
  2048  0092                     	;# 
  2049  0093                     	;# 
  2050  0094                     	;# 
  2051  0094                     	;# 
  2052  0095                     	;# 
  2053  0096                     	;# 
  2054  0096                     	;# 
  2055  0097                     	;# 
  2056  0098                     	;# 
  2057  0099                     	;# 
  2058  009A                     	;# 
  2059  009B                     	;# 
  2060  009B                     	;# 
  2061  009C                     	;# 
  2062  009D                     	;# 
  2063  009D                     	;# 
  2064  009E                     	;# 
  2065  009F                     	;# 
  2066  010C                     	;# 
  2067  010C                     	;# 
  2068  010D                     	;# 
  2069  010E                     	;# 
  2070  010F                     	;# 
  2071  010F                     	;# 
  2072  0110                     	;# 
  2073  0111                     	;# 
  2074  0112                     	;# 
  2075  0113                     	;# 
  2076  0114                     	;# 
  2077  0115                     	;# 
  2078  0116                     	;# 
  2079  0117                     	;# 
  2080  0118                     	;# 
  2081  0119                     	;# 
  2082  0119                     	;# 
  2083  0119                     	;# 
  2084  011A                     	;# 
  2085  011A                     	;# 
  2086  011A                     	;# 
  2087  011B                     	;# 
  2088  011B                     	;# 
  2089  011B                     	;# 
  2090  011B                     	;# 
  2091  011B                     	;# 
  2092  011C                     	;# 
  2093  011C                     	;# 
  2094  011C                     	;# 
  2095  011D                     	;# 
  2096  011D                     	;# 
  2097  011D                     	;# 
  2098  011E                     	;# 
  2099  011E                     	;# 
  2100  011E                     	;# 
  2101  011F                     	;# 
  2102  011F                     	;# 
  2103  011F                     	;# 
  2104  011F                     	;# 
  2105  011F                     	;# 
  2106  018C                     	;# 
  2107  018D                     	;# 
  2108  018E                     	;# 
  2109  018F                     	;# 
  2110  0190                     	;# 
  2111  0191                     	;# 
  2112  0192                     	;# 
  2113  0196                     	;# 
  2114  0197                     	;# 
  2115  0198                     	;# 
  2116  0199                     	;# 
  2117  019A                     	;# 
  2118  019B                     	;# 
  2119  019C                     	;# 
  2120  020C                     	;# 
  2121  020D                     	;# 
  2122  020E                     	;# 
  2123  020E                     	;# 
  2124  020F                     	;# 
  2125  020F                     	;# 
  2126  0210                     	;# 
  2127  0210                     	;# 
  2128  0211                     	;# 
  2129  0211                     	;# 
  2130  0212                     	;# 
  2131  0213                     	;# 
  2132  0214                     	;# 
  2133  0214                     	;# 
  2134  0215                     	;# 
  2135  0215                     	;# 
  2136  0216                     	;# 
  2137  0216                     	;# 
  2138  0217                     	;# 
  2139  0217                     	;# 
  2140  0218                     	;# 
  2141  0219                     	;# 
  2142  021A                     	;# 
  2143  021A                     	;# 
  2144  021B                     	;# 
  2145  021B                     	;# 
  2146  021C                     	;# 
  2147  021C                     	;# 
  2148  021D                     	;# 
  2149  021D                     	;# 
  2150  021E                     	;# 
  2151  021F                     	;# 
  2152  028C                     	;# 
  2153  028C                     	;# 
  2154  028D                     	;# 
  2155  028D                     	;# 
  2156  028E                     	;# 
  2157  028F                     	;# 
  2158  0290                     	;# 
  2159  0291                     	;# 
  2160  0292                     	;# 
  2161  0292                     	;# 
  2162  0293                     	;# 
  2163  0293                     	;# 
  2164  0294                     	;# 
  2165  0295                     	;# 
  2166  0296                     	;# 
  2167  0297                     	;# 
  2168  0298                     	;# 
  2169  0298                     	;# 
  2170  0299                     	;# 
  2171  0299                     	;# 
  2172  029A                     	;# 
  2173  029B                     	;# 
  2174  029C                     	;# 
  2175  029D                     	;# 
  2176  029F                     	;# 
  2177  030C                     	;# 
  2178  030C                     	;# 
  2179  030D                     	;# 
  2180  030E                     	;# 
  2181  030F                     	;# 
  2182  0310                     	;# 
  2183  0310                     	;# 
  2184  0311                     	;# 
  2185  0312                     	;# 
  2186  0313                     	;# 
  2187  0314                     	;# 
  2188  0314                     	;# 
  2189  0315                     	;# 
  2190  0316                     	;# 
  2191  0317                     	;# 
  2192  0318                     	;# 
  2193  0318                     	;# 
  2194  0319                     	;# 
  2195  031A                     	;# 
  2196  031B                     	;# 
  2197  038C                     	;# 
  2198  038C                     	;# 
  2199  038D                     	;# 
  2200  038E                     	;# 
  2201  0390                     	;# 
  2202  0390                     	;# 
  2203  0391                     	;# 
  2204  0392                     	;# 
  2205  048C                     	;# 
  2206  048C                     	;# 
  2207  048D                     	;# 
  2208  048E                     	;# 
  2209  048F                     	;# 
  2210  048F                     	;# 
  2211  0490                     	;# 
  2212  0491                     	;# 
  2213  0492                     	;# 
  2214  0492                     	;# 
  2215  0493                     	;# 
  2216  0494                     	;# 
  2217  0495                     	;# 
  2218  0495                     	;# 
  2219  0496                     	;# 
  2220  0497                     	;# 
  2221  0498                     	;# 
  2222  0499                     	;# 
  2223  049A                     	;# 
  2224  049B                     	;# 
  2225  049C                     	;# 
  2226  049D                     	;# 
  2227  058C                     	;# 
  2228  058C                     	;# 
  2229  058D                     	;# 
  2230  058E                     	;# 
  2231  058F                     	;# 
  2232  058F                     	;# 
  2233  0590                     	;# 
  2234  0591                     	;# 
  2235  0592                     	;# 
  2236  0593                     	;# 
  2237  059C                     	;# 
  2238  059C                     	;# 
  2239  059D                     	;# 
  2240  059D                     	;# 
  2241  059E                     	;# 
  2242  059F                     	;# 
  2243  060C                     	;# 
  2244  060C                     	;# 
  2245  060D                     	;# 
  2246  060D                     	;# 
  2247  060E                     	;# 
  2248  060F                     	;# 
  2249  0610                     	;# 
  2250  0611                     	;# 
  2251  0612                     	;# 
  2252  0613                     	;# 
  2253  0614                     	;# 
  2254  0616                     	;# 
  2255  0616                     	;# 
  2256  0617                     	;# 
  2257  0617                     	;# 
  2258  0618                     	;# 
  2259  0619                     	;# 
  2260  061A                     	;# 
  2261  061B                     	;# 
  2262  061C                     	;# 
  2263  061D                     	;# 
  2264  061E                     	;# 
  2265  070C                     	;# 
  2266  070D                     	;# 
  2267  070E                     	;# 
  2268  070F                     	;# 
  2269  0710                     	;# 
  2270  0711                     	;# 
  2271  0712                     	;# 
  2272  0713                     	;# 
  2273  0714                     	;# 
  2274  0716                     	;# 
  2275  0717                     	;# 
  2276  0718                     	;# 
  2277  0719                     	;# 
  2278  071A                     	;# 
  2279  071B                     	;# 
  2280  071C                     	;# 
  2281  071D                     	;# 
  2282  071E                     	;# 
  2283  0796                     	;# 
  2284  0797                     	;# 
  2285  0798                     	;# 
  2286  0799                     	;# 
  2287  079A                     	;# 
  2288  079B                     	;# 
  2289  079C                     	;# 
  2290  079D                     	;# 
  2291  080C                     	;# 
  2292  080D                     	;# 
  2293  080E                     	;# 
  2294  080F                     	;# 
  2295  0810                     	;# 
  2296  0811                     	;# 
  2297  0812                     	;# 
  2298  0813                     	;# 
  2299  0814                     	;# 
  2300  081A                     	;# 
  2301  081A                     	;# 
  2302  081B                     	;# 
  2303  081C                     	;# 
  2304  081C                     	;# 
  2305  081D                     	;# 
  2306  081E                     	;# 
  2307  081F                     	;# 
  2308  088C                     	;# 
  2309  088D                     	;# 
  2310  088E                     	;# 
  2311  088F                     	;# 
  2312  0890                     	;# 
  2313  0891                     	;# 
  2314  0892                     	;# 
  2315  0893                     	;# 
  2316  0895                     	;# 
  2317  0896                     	;# 
  2318  0897                     	;# 
  2319  0898                     	;# 
  2320  0899                     	;# 
  2321  089A                     	;# 
  2322  089B                     	;# 
  2323  090C                     	;# 
  2324  090E                     	;# 
  2325  090F                     	;# 
  2326  091F                     	;# 
  2327  098F                     	;# 
  2328  098F                     	;# 
  2329  0990                     	;# 
  2330  0991                     	;# 
  2331  0992                     	;# 
  2332  0993                     	;# 
  2333  0994                     	;# 
  2334  0995                     	;# 
  2335  0996                     	;# 
  2336  0997                     	;# 
  2337  1E0F                     	;# 
  2338  1E10                     	;# 
  2339  1E11                     	;# 
  2340  1E12                     	;# 
  2341  1E13                     	;# 
  2342  1E14                     	;# 
  2343  1E15                     	;# 
  2344  1E16                     	;# 
  2345  1E17                     	;# 
  2346  1E18                     	;# 
  2347  1E19                     	;# 
  2348  1E1A                     	;# 
  2349  1E1B                     	;# 
  2350  1E1C                     	;# 
  2351  1E1D                     	;# 
  2352  1E1E                     	;# 
  2353  1E1F                     	;# 
  2354  1E20                     	;# 
  2355  1E21                     	;# 
  2356  1E22                     	;# 
  2357  1E23                     	;# 
  2358  1E24                     	;# 
  2359  1E25                     	;# 
  2360  1E26                     	;# 
  2361  1E27                     	;# 
  2362  1E28                     	;# 
  2363  1E29                     	;# 
  2364  1E2A                     	;# 
  2365  1E2B                     	;# 
  2366  1E2C                     	;# 
  2367  1E2D                     	;# 
  2368  1E2E                     	;# 
  2369  1E2F                     	;# 
  2370  1E30                     	;# 
  2371  1E31                     	;# 
  2372  1E32                     	;# 
  2373  1E33                     	;# 
  2374  1E34                     	;# 
  2375  1E35                     	;# 
  2376  1E36                     	;# 
  2377  1E37                     	;# 
  2378  1E8F                     	;# 
  2379  1E90                     	;# 
  2380  1E91                     	;# 
  2381  1E92                     	;# 
  2382  1E93                     	;# 
  2383  1E94                     	;# 
  2384  1E95                     	;# 
  2385  1E96                     	;# 
  2386  1E97                     	;# 
  2387  1E9C                     	;# 
  2388  1E9D                     	;# 
  2389  1E9E                     	;# 
  2390  1EA1                     	;# 
  2391  1EA2                     	;# 
  2392  1EA3                     	;# 
  2393  1EA4                     	;# 
  2394  1EA9                     	;# 
  2395  1EAA                     	;# 
  2396  1EB1                     	;# 
  2397  1EB2                     	;# 
  2398  1EB8                     	;# 
  2399  1EB9                     	;# 
  2400  1EBA                     	;# 
  2401  1EBB                     	;# 
  2402  1EBC                     	;# 
  2403  1EBD                     	;# 
  2404  1EBE                     	;# 
  2405  1EC3                     	;# 
  2406  1EC5                     	;# 
  2407  1EC6                     	;# 
  2408  1EC7                     	;# 
  2409  1EC8                     	;# 
  2410  1EC9                     	;# 
  2411  1ECA                     	;# 
  2412  1ECB                     	;# 
  2413  1ECB                     	;# 
  2414  1ECB                     	;# 
  2415  1ECC                     	;# 
  2416  1ECC                     	;# 
  2417  1ECC                     	;# 
  2418  1F10                     	;# 
  2419  1F11                     	;# 
  2420  1F12                     	;# 
  2421  1F14                     	;# 
  2422  1F15                     	;# 
  2423  1F1C                     	;# 
  2424  1F1D                     	;# 
  2425  1F1E                     	;# 
  2426  1F1F                     	;# 
  2427  1F20                     	;# 
  2428  1F21                     	;# 
  2429  1F22                     	;# 
  2430  1F23                     	;# 
  2431  1F24                     	;# 
  2432  1F25                     	;# 
  2433  1F26                     	;# 
  2434  1F27                     	;# 
  2435  1F38                     	;# 
  2436  1F39                     	;# 
  2437  1F3A                     	;# 
  2438  1F3B                     	;# 
  2439  1F3C                     	;# 
  2440  1F3D                     	;# 
  2441  1F3E                     	;# 
  2442  1F3F                     	;# 
  2443  1F43                     	;# 
  2444  1F44                     	;# 
  2445  1F45                     	;# 
  2446  1F46                     	;# 
  2447  1F47                     	;# 
  2448  1F48                     	;# 
  2449  1F49                     	;# 
  2450  1F4A                     	;# 
  2451  1F4E                     	;# 
  2452  1F4F                     	;# 
  2453  1F50                     	;# 
  2454  1F51                     	;# 
  2455  1F52                     	;# 
  2456  1F53                     	;# 
  2457  1F54                     	;# 
  2458  1F55                     	;# 
  2459  1FE4                     	;# 
  2460  1FE5                     	;# 
  2461  1FE6                     	;# 
  2462  1FE7                     	;# 
  2463  1FE8                     	;# 
  2464  1FE8                     	;# 
  2465  1FE9                     	;# 
  2466  1FEA                     	;# 
  2467  1FEB                     	;# 
  2468  1FED                     	;# 
  2469  1FEE                     	;# 
  2470  1FEF                     	;# 
  2471  0000                     	;# 
  2472  0001                     	;# 
  2473  0002                     	;# 
  2474  0003                     	;# 
  2475  0004                     	;# 
  2476  0005                     	;# 
  2477  0006                     	;# 
  2478  0007                     	;# 
  2479  0008                     	;# 
  2480  0009                     	;# 
  2481  000A                     	;# 
  2482  000B                     	;# 
  2483  000C                     	;# 
  2484  000D                     	;# 
  2485  000E                     	;# 
  2486  0012                     	;# 
  2487  0013                     	;# 
  2488  0014                     	;# 
  2489  0018                     	;# 
  2490  0019                     	;# 
  2491  001A                     	;# 
  2492  008C                     	;# 
  2493  008C                     	;# 
  2494  008D                     	;# 
  2495  008E                     	;# 
  2496  008E                     	;# 
  2497  008F                     	;# 
  2498  0090                     	;# 
  2499  0090                     	;# 
  2500  0091                     	;# 
  2501  0092                     	;# 
  2502  0092                     	;# 
  2503  0093                     	;# 
  2504  0094                     	;# 
  2505  0094                     	;# 
  2506  0095                     	;# 
  2507  0096                     	;# 
  2508  0096                     	;# 
  2509  0097                     	;# 
  2510  0098                     	;# 
  2511  0099                     	;# 
  2512  009A                     	;# 
  2513  009B                     	;# 
  2514  009B                     	;# 
  2515  009C                     	;# 
  2516  009D                     	;# 
  2517  009D                     	;# 
  2518  009E                     	;# 
  2519  009F                     	;# 
  2520  010C                     	;# 
  2521  010C                     	;# 
  2522  010D                     	;# 
  2523  010E                     	;# 
  2524  010F                     	;# 
  2525  010F                     	;# 
  2526  0110                     	;# 
  2527  0111                     	;# 
  2528  0112                     	;# 
  2529  0113                     	;# 
  2530  0114                     	;# 
  2531  0115                     	;# 
  2532  0116                     	;# 
  2533  0117                     	;# 
  2534  0118                     	;# 
  2535  0119                     	;# 
  2536  0119                     	;# 
  2537  0119                     	;# 
  2538  011A                     	;# 
  2539  011A                     	;# 
  2540  011A                     	;# 
  2541  011B                     	;# 
  2542  011B                     	;# 
  2543  011B                     	;# 
  2544  011B                     	;# 
  2545  011B                     	;# 
  2546  011C                     	;# 
  2547  011C                     	;# 
  2548  011C                     	;# 
  2549  011D                     	;# 
  2550  011D                     	;# 
  2551  011D                     	;# 
  2552  011E                     	;# 
  2553  011E                     	;# 
  2554  011E                     	;# 
  2555  011F                     	;# 
  2556  011F                     	;# 
  2557  011F                     	;# 
  2558  011F                     	;# 
  2559  011F                     	;# 
  2560  018C                     	;# 
  2561  018D                     	;# 
  2562  018E                     	;# 
  2563  018F                     	;# 
  2564  0190                     	;# 
  2565  0191                     	;# 
  2566  0192                     	;# 
  2567  0196                     	;# 
  2568  0197                     	;# 
  2569  0198                     	;# 
  2570  0199                     	;# 
  2571  019A                     	;# 
  2572  019B                     	;# 
  2573  019C                     	;# 
  2574  020C                     	;# 
  2575  020D                     	;# 
  2576  020E                     	;# 
  2577  020E                     	;# 
  2578  020F                     	;# 
  2579  020F                     	;# 
  2580  0210                     	;# 
  2581  0210                     	;# 
  2582  0211                     	;# 
  2583  0211                     	;# 
  2584  0212                     	;# 
  2585  0213                     	;# 
  2586  0214                     	;# 
  2587  0214                     	;# 
  2588  0215                     	;# 
  2589  0215                     	;# 
  2590  0216                     	;# 
  2591  0216                     	;# 
  2592  0217                     	;# 
  2593  0217                     	;# 
  2594  0218                     	;# 
  2595  0219                     	;# 
  2596  021A                     	;# 
  2597  021A                     	;# 
  2598  021B                     	;# 
  2599  021B                     	;# 
  2600  021C                     	;# 
  2601  021C                     	;# 
  2602  021D                     	;# 
  2603  021D                     	;# 
  2604  021E                     	;# 
  2605  021F                     	;# 
  2606  028C                     	;# 
  2607  028C                     	;# 
  2608  028D                     	;# 
  2609  028D                     	;# 
  2610  028E                     	;# 
  2611  028F                     	;# 
  2612  0290                     	;# 
  2613  0291                     	;# 
  2614  0292                     	;# 
  2615  0292                     	;# 
  2616  0293                     	;# 
  2617  0293                     	;# 
  2618  0294                     	;# 
  2619  0295                     	;# 
  2620  0296                     	;# 
  2621  0297                     	;# 
  2622  0298                     	;# 
  2623  0298                     	;# 
  2624  0299                     	;# 
  2625  0299                     	;# 
  2626  029A                     	;# 
  2627  029B                     	;# 
  2628  029C                     	;# 
  2629  029D                     	;# 
  2630  029F                     	;# 
  2631  030C                     	;# 
  2632  030C                     	;# 
  2633  030D                     	;# 
  2634  030E                     	;# 
  2635  030F                     	;# 
  2636  0310                     	;# 
  2637  0310                     	;# 
  2638  0311                     	;# 
  2639  0312                     	;# 
  2640  0313                     	;# 
  2641  0314                     	;# 
  2642  0314                     	;# 
  2643  0315                     	;# 
  2644  0316                     	;# 
  2645  0317                     	;# 
  2646  0318                     	;# 
  2647  0318                     	;# 
  2648  0319                     	;# 
  2649  031A                     	;# 
  2650  031B                     	;# 
  2651  038C                     	;# 
  2652  038C                     	;# 
  2653  038D                     	;# 
  2654  038E                     	;# 
  2655  0390                     	;# 
  2656  0390                     	;# 
  2657  0391                     	;# 
  2658  0392                     	;# 
  2659  048C                     	;# 
  2660  048C                     	;# 
  2661  048D                     	;# 
  2662  048E                     	;# 
  2663  048F                     	;# 
  2664  048F                     	;# 
  2665  0490                     	;# 
  2666  0491                     	;# 
  2667  0492                     	;# 
  2668  0492                     	;# 
  2669  0493                     	;# 
  2670  0494                     	;# 
  2671  0495                     	;# 
  2672  0495                     	;# 
  2673  0496                     	;# 
  2674  0497                     	;# 
  2675  0498                     	;# 
  2676  0499                     	;# 
  2677  049A                     	;# 
  2678  049B                     	;# 
  2679  049C                     	;# 
  2680  049D                     	;# 
  2681  058C                     	;# 
  2682  058C                     	;# 
  2683  058D                     	;# 
  2684  058E                     	;# 
  2685  058F                     	;# 
  2686  058F                     	;# 
  2687  0590                     	;# 
  2688  0591                     	;# 
  2689  0592                     	;# 
  2690  0593                     	;# 
  2691  059C                     	;# 
  2692  059C                     	;# 
  2693  059D                     	;# 
  2694  059D                     	;# 
  2695  059E                     	;# 
  2696  059F                     	;# 
  2697  060C                     	;# 
  2698  060C                     	;# 
  2699  060D                     	;# 
  2700  060D                     	;# 
  2701  060E                     	;# 
  2702  060F                     	;# 
  2703  0610                     	;# 
  2704  0611                     	;# 
  2705  0612                     	;# 
  2706  0613                     	;# 
  2707  0614                     	;# 
  2708  0616                     	;# 
  2709  0616                     	;# 
  2710  0617                     	;# 
  2711  0617                     	;# 
  2712  0618                     	;# 
  2713  0619                     	;# 
  2714  061A                     	;# 
  2715  061B                     	;# 
  2716  061C                     	;# 
  2717  061D                     	;# 
  2718  061E                     	;# 
  2719  070C                     	;# 
  2720  070D                     	;# 
  2721  070E                     	;# 
  2722  070F                     	;# 
  2723  0710                     	;# 
  2724  0711                     	;# 
  2725  0712                     	;# 
  2726  0713                     	;# 
  2727  0714                     	;# 
  2728  0716                     	;# 
  2729  0717                     	;# 
  2730  0718                     	;# 
  2731  0719                     	;# 
  2732  071A                     	;# 
  2733  071B                     	;# 
  2734  071C                     	;# 
  2735  071D                     	;# 
  2736  071E                     	;# 
  2737  0796                     	;# 
  2738  0797                     	;# 
  2739  0798                     	;# 
  2740  0799                     	;# 
  2741  079A                     	;# 
  2742  079B                     	;# 
  2743  079C                     	;# 
  2744  079D                     	;# 
  2745  080C                     	;# 
  2746  080D                     	;# 
  2747  080E                     	;# 
  2748  080F                     	;# 
  2749  0810                     	;# 
  2750  0811                     	;# 
  2751  0812                     	;# 
  2752  0813                     	;# 
  2753  0814                     	;# 
  2754  081A                     	;# 
  2755  081A                     	;# 
  2756  081B                     	;# 
  2757  081C                     	;# 
  2758  081C                     	;# 
  2759  081D                     	;# 
  2760  081E                     	;# 
  2761  081F                     	;# 
  2762  088C                     	;# 
  2763  088D                     	;# 
  2764  088E                     	;# 
  2765  088F                     	;# 
  2766  0890                     	;# 
  2767  0891                     	;# 
  2768  0892                     	;# 
  2769  0893                     	;# 
  2770  0895                     	;# 
  2771  0896                     	;# 
  2772  0897                     	;# 
  2773  0898                     	;# 
  2774  0899                     	;# 
  2775  089A                     	;# 
  2776  089B                     	;# 
  2777  090C                     	;# 
  2778  090E                     	;# 
  2779  090F                     	;# 
  2780  091F                     	;# 
  2781  098F                     	;# 
  2782  098F                     	;# 
  2783  0990                     	;# 
  2784  0991                     	;# 
  2785  0992                     	;# 
  2786  0993                     	;# 
  2787  0994                     	;# 
  2788  0995                     	;# 
  2789  0996                     	;# 
  2790  0997                     	;# 
  2791  1E0F                     	;# 
  2792  1E10                     	;# 
  2793  1E11                     	;# 
  2794  1E12                     	;# 
  2795  1E13                     	;# 
  2796  1E14                     	;# 
  2797  1E15                     	;# 
  2798  1E16                     	;# 
  2799  1E17                     	;# 
  2800  1E18                     	;# 
  2801  1E19                     	;# 
  2802  1E1A                     	;# 
  2803  1E1B                     	;# 
  2804  1E1C                     	;# 
  2805  1E1D                     	;# 
  2806  1E1E                     	;# 
  2807  1E1F                     	;# 
  2808  1E20                     	;# 
  2809  1E21                     	;# 
  2810  1E22                     	;# 
  2811  1E23                     	;# 
  2812  1E24                     	;# 
  2813  1E25                     	;# 
  2814  1E26                     	;# 
  2815  1E27                     	;# 
  2816  1E28                     	;# 
  2817  1E29                     	;# 
  2818  1E2A                     	;# 
  2819  1E2B                     	;# 
  2820  1E2C                     	;# 
  2821  1E2D                     	;# 
  2822  1E2E                     	;# 
  2823  1E2F                     	;# 
  2824  1E30                     	;# 
  2825  1E31                     	;# 
  2826  1E32                     	;# 
  2827  1E33                     	;# 
  2828  1E34                     	;# 
  2829  1E35                     	;# 
  2830  1E36                     	;# 
  2831  1E37                     	;# 
  2832  1E8F                     	;# 
  2833  1E90                     	;# 
  2834  1E91                     	;# 
  2835  1E92                     	;# 
  2836  1E93                     	;# 
  2837  1E94                     	;# 
  2838  1E95                     	;# 
  2839  1E96                     	;# 
  2840  1E97                     	;# 
  2841  1E9C                     	;# 
  2842  1E9D                     	;# 
  2843  1E9E                     	;# 
  2844  1EA1                     	;# 
  2845  1EA2                     	;# 
  2846  1EA3                     	;# 
  2847  1EA4                     	;# 
  2848  1EA9                     	;# 
  2849  1EAA                     	;# 
  2850  1EB1                     	;# 
  2851  1EB2                     	;# 
  2852  1EB8                     	;# 
  2853  1EB9                     	;# 
  2854  1EBA                     	;# 
  2855  1EBB                     	;# 
  2856  1EBC                     	;# 
  2857  1EBD                     	;# 
  2858  1EBE                     	;# 
  2859  1EC3                     	;# 
  2860  1EC5                     	;# 
  2861  1EC6                     	;# 
  2862  1EC7                     	;# 
  2863  1EC8                     	;# 
  2864  1EC9                     	;# 
  2865  1ECA                     	;# 
  2866  1ECB                     	;# 
  2867  1ECB                     	;# 
  2868  1ECB                     	;# 
  2869  1ECC                     	;# 
  2870  1ECC                     	;# 
  2871  1ECC                     	;# 
  2872  1F10                     	;# 
  2873  1F11                     	;# 
  2874  1F12                     	;# 
  2875  1F14                     	;# 
  2876  1F15                     	;# 
  2877  1F1C                     	;# 
  2878  1F1D                     	;# 
  2879  1F1E                     	;# 
  2880  1F1F                     	;# 
  2881  1F20                     	;# 
  2882  1F21                     	;# 
  2883  1F22                     	;# 
  2884  1F23                     	;# 
  2885  1F24                     	;# 
  2886  1F25                     	;# 
  2887  1F26                     	;# 
  2888  1F27                     	;# 
  2889  1F38                     	;# 
  2890  1F39                     	;# 
  2891  1F3A                     	;# 
  2892  1F3B                     	;# 
  2893  1F3C                     	;# 
  2894  1F3D                     	;# 
  2895  1F3E                     	;# 
  2896  1F3F                     	;# 
  2897  1F43                     	;# 
  2898  1F44                     	;# 
  2899  1F45                     	;# 
  2900  1F46                     	;# 
  2901  1F47                     	;# 
  2902  1F48                     	;# 
  2903  1F49                     	;# 
  2904  1F4A                     	;# 
  2905  1F4E                     	;# 
  2906  1F4F                     	;# 
  2907  1F50                     	;# 
  2908  1F51                     	;# 
  2909  1F52                     	;# 
  2910  1F53                     	;# 
  2911  1F54                     	;# 
  2912  1F55                     	;# 
  2913  1FE4                     	;# 
  2914  1FE5                     	;# 
  2915  1FE6                     	;# 
  2916  1FE7                     	;# 
  2917  1FE8                     	;# 
  2918  1FE8                     	;# 
  2919  1FE9                     	;# 
  2920  1FEA                     	;# 
  2921  1FEB                     	;# 
  2922  1FED                     	;# 
  2923  1FEE                     	;# 
  2924  1FEF                     	;# 
  2925  0000                     	;# 
  2926  0001                     	;# 
  2927  0002                     	;# 
  2928  0003                     	;# 
  2929  0004                     	;# 
  2930  0005                     	;# 
  2931  0006                     	;# 
  2932  0007                     	;# 
  2933  0008                     	;# 
  2934  0009                     	;# 
  2935  000A                     	;# 
  2936  000B                     	;# 
  2937  000C                     	;# 
  2938  000D                     	;# 
  2939  000E                     	;# 
  2940  0012                     	;# 
  2941  0013                     	;# 
  2942  0014                     	;# 
  2943  0018                     	;# 
  2944  0019                     	;# 
  2945  001A                     	;# 
  2946  008C                     	;# 
  2947  008C                     	;# 
  2948  008D                     	;# 
  2949  008E                     	;# 
  2950  008E                     	;# 
  2951  008F                     	;# 
  2952  0090                     	;# 
  2953  0090                     	;# 
  2954  0091                     	;# 
  2955  0092                     	;# 
  2956  0092                     	;# 
  2957  0093                     	;# 
  2958  0094                     	;# 
  2959  0094                     	;# 
  2960  0095                     	;# 
  2961  0096                     	;# 
  2962  0096                     	;# 
  2963  0097                     	;# 
  2964  0098                     	;# 
  2965  0099                     	;# 
  2966  009A                     	;# 
  2967  009B                     	;# 
  2968  009B                     	;# 
  2969  009C                     	;# 
  2970  009D                     	;# 
  2971  009D                     	;# 
  2972  009E                     	;# 
  2973  009F                     	;# 
  2974  010C                     	;# 
  2975  010C                     	;# 
  2976  010D                     	;# 
  2977  010E                     	;# 
  2978  010F                     	;# 
  2979  010F                     	;# 
  2980  0110                     	;# 
  2981  0111                     	;# 
  2982  0112                     	;# 
  2983  0113                     	;# 
  2984  0114                     	;# 
  2985  0115                     	;# 
  2986  0116                     	;# 
  2987  0117                     	;# 
  2988  0118                     	;# 
  2989  0119                     	;# 
  2990  0119                     	;# 
  2991  0119                     	;# 
  2992  011A                     	;# 
  2993  011A                     	;# 
  2994  011A                     	;# 
  2995  011B                     	;# 
  2996  011B                     	;# 
  2997  011B                     	;# 
  2998  011B                     	;# 
  2999  011B                     	;# 
  3000  011C                     	;# 
  3001  011C                     	;# 
  3002  011C                     	;# 
  3003  011D                     	;# 
  3004  011D                     	;# 
  3005  011D                     	;# 
  3006  011E                     	;# 
  3007  011E                     	;# 
  3008  011E                     	;# 
  3009  011F                     	;# 
  3010  011F                     	;# 
  3011  011F                     	;# 
  3012  011F                     	;# 
  3013  011F                     	;# 
  3014  018C                     	;# 
  3015  018D                     	;# 
  3016  018E                     	;# 
  3017  018F                     	;# 
  3018  0190                     	;# 
  3019  0191                     	;# 
  3020  0192                     	;# 
  3021  0196                     	;# 
  3022  0197                     	;# 
  3023  0198                     	;# 
  3024  0199                     	;# 
  3025  019A                     	;# 
  3026  019B                     	;# 
  3027  019C                     	;# 
  3028  020C                     	;# 
  3029  020D                     	;# 
  3030  020E                     	;# 
  3031  020E                     	;# 
  3032  020F                     	;# 
  3033  020F                     	;# 
  3034  0210                     	;# 
  3035  0210                     	;# 
  3036  0211                     	;# 
  3037  0211                     	;# 
  3038  0212                     	;# 
  3039  0213                     	;# 
  3040  0214                     	;# 
  3041  0214                     	;# 
  3042  0215                     	;# 
  3043  0215                     	;# 
  3044  0216                     	;# 
  3045  0216                     	;# 
  3046  0217                     	;# 
  3047  0217                     	;# 
  3048  0218                     	;# 
  3049  0219                     	;# 
  3050  021A                     	;# 
  3051  021A                     	;# 
  3052  021B                     	;# 
  3053  021B                     	;# 
  3054  021C                     	;# 
  3055  021C                     	;# 
  3056  021D                     	;# 
  3057  021D                     	;# 
  3058  021E                     	;# 
  3059  021F                     	;# 
  3060  028C                     	;# 
  3061  028C                     	;# 
  3062  028D                     	;# 
  3063  028D                     	;# 
  3064  028E                     	;# 
  3065  028F                     	;# 
  3066  0290                     	;# 
  3067  0291                     	;# 
  3068  0292                     	;# 
  3069  0292                     	;# 
  3070  0293                     	;# 
  3071  0293                     	;# 
  3072  0294                     	;# 
  3073  0295                     	;# 
  3074  0296                     	;# 
  3075  0297                     	;# 
  3076  0298                     	;# 
  3077  0298                     	;# 
  3078  0299                     	;# 
  3079  0299                     	;# 
  3080  029A                     	;# 
  3081  029B                     	;# 
  3082  029C                     	;# 
  3083  029D                     	;# 
  3084  029F                     	;# 
  3085  030C                     	;# 
  3086  030C                     	;# 
  3087  030D                     	;# 
  3088  030E                     	;# 
  3089  030F                     	;# 
  3090  0310                     	;# 
  3091  0310                     	;# 
  3092  0311                     	;# 
  3093  0312                     	;# 
  3094  0313                     	;# 
  3095  0314                     	;# 
  3096  0314                     	;# 
  3097  0315                     	;# 
  3098  0316                     	;# 
  3099  0317                     	;# 
  3100  0318                     	;# 
  3101  0318                     	;# 
  3102  0319                     	;# 
  3103  031A                     	;# 
  3104  031B                     	;# 
  3105  038C                     	;# 
  3106  038C                     	;# 
  3107  038D                     	;# 
  3108  038E                     	;# 
  3109  0390                     	;# 
  3110  0390                     	;# 
  3111  0391                     	;# 
  3112  0392                     	;# 
  3113  048C                     	;# 
  3114  048C                     	;# 
  3115  048D                     	;# 
  3116  048E                     	;# 
  3117  048F                     	;# 
  3118  048F                     	;# 
  3119  0490                     	;# 
  3120  0491                     	;# 
  3121  0492                     	;# 
  3122  0492                     	;# 
  3123  0493                     	;# 
  3124  0494                     	;# 
  3125  0495                     	;# 
  3126  0495                     	;# 
  3127  0496                     	;# 
  3128  0497                     	;# 
  3129  0498                     	;# 
  3130  0499                     	;# 
  3131  049A                     	;# 
  3132  049B                     	;# 
  3133  049C                     	;# 
  3134  049D                     	;# 
  3135  058C                     	;# 
  3136  058C                     	;# 
  3137  058D                     	;# 
  3138  058E                     	;# 
  3139  058F                     	;# 
  3140  058F                     	;# 
  3141  0590                     	;# 
  3142  0591                     	;# 
  3143  0592                     	;# 
  3144  0593                     	;# 
  3145  059C                     	;# 
  3146  059C                     	;# 
  3147  059D                     	;# 
  3148  059D                     	;# 
  3149  059E                     	;# 
  3150  059F                     	;# 
  3151  060C                     	;# 
  3152  060C                     	;# 
  3153  060D                     	;# 
  3154  060D                     	;# 
  3155  060E                     	;# 
  3156  060F                     	;# 
  3157  0610                     	;# 
  3158  0611                     	;# 
  3159  0612                     	;# 
  3160  0613                     	;# 
  3161  0614                     	;# 
  3162  0616                     	;# 
  3163  0616                     	;# 
  3164  0617                     	;# 
  3165  0617                     	;# 
  3166  0618                     	;# 
  3167  0619                     	;# 
  3168  061A                     	;# 
  3169  061B                     	;# 
  3170  061C                     	;# 
  3171  061D                     	;# 
  3172  061E                     	;# 
  3173  070C                     	;# 
  3174  070D                     	;# 
  3175  070E                     	;# 
  3176  070F                     	;# 
  3177  0710                     	;# 
  3178  0711                     	;# 
  3179  0712                     	;# 
  3180  0713                     	;# 
  3181  0714                     	;# 
  3182  0716                     	;# 
  3183  0717                     	;# 
  3184  0718                     	;# 
  3185  0719                     	;# 
  3186  071A                     	;# 
  3187  071B                     	;# 
  3188  071C                     	;# 
  3189  071D                     	;# 
  3190  071E                     	;# 
  3191  0796                     	;# 
  3192  0797                     	;# 
  3193  0798                     	;# 
  3194  0799                     	;# 
  3195  079A                     	;# 
  3196  079B                     	;# 
  3197  079C                     	;# 
  3198  079D                     	;# 
  3199  080C                     	;# 
  3200  080D                     	;# 
  3201  080E                     	;# 
  3202  080F                     	;# 
  3203  0810                     	;# 
  3204  0811                     	;# 
  3205  0812                     	;# 
  3206  0813                     	;# 
  3207  0814                     	;# 
  3208  081A                     	;# 
  3209  081A                     	;# 
  3210  081B                     	;# 
  3211  081C                     	;# 
  3212  081C                     	;# 
  3213  081D                     	;# 
  3214  081E                     	;# 
  3215  081F                     	;# 
  3216  088C                     	;# 
  3217  088D                     	;# 
  3218  088E                     	;# 
  3219  088F                     	;# 
  3220  0890                     	;# 
  3221  0891                     	;# 
  3222  0892                     	;# 
  3223  0893                     	;# 
  3224  0895                     	;# 
  3225  0896                     	;# 
  3226  0897                     	;# 
  3227  0898                     	;# 
  3228  0899                     	;# 
  3229  089A                     	;# 
  3230  089B                     	;# 
  3231  090C                     	;# 
  3232  090E                     	;# 
  3233  090F                     	;# 
  3234  091F                     	;# 
  3235  098F                     	;# 
  3236  098F                     	;# 
  3237  0990                     	;# 
  3238  0991                     	;# 
  3239  0992                     	;# 
  3240  0993                     	;# 
  3241  0994                     	;# 
  3242  0995                     	;# 
  3243  0996                     	;# 
  3244  0997                     	;# 
  3245  1E0F                     	;# 
  3246  1E10                     	;# 
  3247  1E11                     	;# 
  3248  1E12                     	;# 
  3249  1E13                     	;# 
  3250  1E14                     	;# 
  3251  1E15                     	;# 
  3252  1E16                     	;# 
  3253  1E17                     	;# 
  3254  1E18                     	;# 
  3255  1E19                     	;# 
  3256  1E1A                     	;# 
  3257  1E1B                     	;# 
  3258  1E1C                     	;# 
  3259  1E1D                     	;# 
  3260  1E1E                     	;# 
  3261  1E1F                     	;# 
  3262  1E20                     	;# 
  3263  1E21                     	;# 
  3264  1E22                     	;# 
  3265  1E23                     	;# 
  3266  1E24                     	;# 
  3267  1E25                     	;# 
  3268  1E26                     	;# 
  3269  1E27                     	;# 
  3270  1E28                     	;# 
  3271  1E29                     	;# 
  3272  1E2A                     	;# 
  3273  1E2B                     	;# 
  3274  1E2C                     	;# 
  3275  1E2D                     	;# 
  3276  1E2E                     	;# 
  3277  1E2F                     	;# 
  3278  1E30                     	;# 
  3279  1E31                     	;# 
  3280  1E32                     	;# 
  3281  1E33                     	;# 
  3282  1E34                     	;# 
  3283  1E35                     	;# 
  3284  1E36                     	;# 
  3285  1E37                     	;# 
  3286  1E8F                     	;# 
  3287  1E90                     	;# 
  3288  1E91                     	;# 
  3289  1E92                     	;# 
  3290  1E93                     	;# 
  3291  1E94                     	;# 
  3292  1E95                     	;# 
  3293  1E96                     	;# 
  3294  1E97                     	;# 
  3295  1E9C                     	;# 
  3296  1E9D                     	;# 
  3297  1E9E                     	;# 
  3298  1EA1                     	;# 
  3299  1EA2                     	;# 
  3300  1EA3                     	;# 
  3301  1EA4                     	;# 
  3302  1EA9                     	;# 
  3303  1EAA                     	;# 
  3304  1EB1                     	;# 
  3305  1EB2                     	;# 
  3306  1EB8                     	;# 
  3307  1EB9                     	;# 
  3308  1EBA                     	;# 
  3309  1EBB                     	;# 
  3310  1EBC                     	;# 
  3311  1EBD                     	;# 
  3312  1EBE                     	;# 
  3313  1EC3                     	;# 
  3314  1EC5                     	;# 
  3315  1EC6                     	;# 
  3316  1EC7                     	;# 
  3317  1EC8                     	;# 
  3318  1EC9                     	;# 
  3319  1ECA                     	;# 
  3320  1ECB                     	;# 
  3321  1ECB                     	;# 
  3322  1ECB                     	;# 
  3323  1ECC                     	;# 
  3324  1ECC                     	;# 
  3325  1ECC                     	;# 
  3326  1F10                     	;# 
  3327  1F11                     	;# 
  3328  1F12                     	;# 
  3329  1F14                     	;# 
  3330  1F15                     	;# 
  3331  1F1C                     	;# 
  3332  1F1D                     	;# 
  3333  1F1E                     	;# 
  3334  1F1F                     	;# 
  3335  1F20                     	;# 
  3336  1F21                     	;# 
  3337  1F22                     	;# 
  3338  1F23                     	;# 
  3339  1F24                     	;# 
  3340  1F25                     	;# 
  3341  1F26                     	;# 
  3342  1F27                     	;# 
  3343  1F38                     	;# 
  3344  1F39                     	;# 
  3345  1F3A                     	;# 
  3346  1F3B                     	;# 
  3347  1F3C                     	;# 
  3348  1F3D                     	;# 
  3349  1F3E                     	;# 
  3350  1F3F                     	;# 
  3351  1F43                     	;# 
  3352  1F44                     	;# 
  3353  1F45                     	;# 
  3354  1F46                     	;# 
  3355  1F47                     	;# 
  3356  1F48                     	;# 
  3357  1F49                     	;# 
  3358  1F4A                     	;# 
  3359  1F4E                     	;# 
  3360  1F4F                     	;# 
  3361  1F50                     	;# 
  3362  1F51                     	;# 
  3363  1F52                     	;# 
  3364  1F53                     	;# 
  3365  1F54                     	;# 
  3366  1F55                     	;# 
  3367  1FE4                     	;# 
  3368  1FE5                     	;# 
  3369  1FE6                     	;# 
  3370  1FE7                     	;# 
  3371  1FE8                     	;# 
  3372  1FE8                     	;# 
  3373  1FE9                     	;# 
  3374  1FEA                     	;# 
  3375  1FEB                     	;# 
  3376  1FED                     	;# 
  3377  1FEE                     	;# 
  3378  1FEF                     	;# 
  3379  0000                     	;# 
  3380  0001                     	;# 
  3381  0002                     	;# 
  3382  0003                     	;# 
  3383  0004                     	;# 
  3384  0005                     	;# 
  3385  0006                     	;# 
  3386  0007                     	;# 
  3387  0008                     	;# 
  3388  0009                     	;# 
  3389  000A                     	;# 
  3390  000B                     	;# 
  3391  000C                     	;# 
  3392  000D                     	;# 
  3393  000E                     	;# 
  3394  0012                     	;# 
  3395  0013                     	;# 
  3396  0014                     	;# 
  3397  0018                     	;# 
  3398  0019                     	;# 
  3399  001A                     	;# 
  3400  008C                     	;# 
  3401  008C                     	;# 
  3402  008D                     	;# 
  3403  008E                     	;# 
  3404  008E                     	;# 
  3405  008F                     	;# 
  3406  0090                     	;# 
  3407  0090                     	;# 
  3408  0091                     	;# 
  3409  0092                     	;# 
  3410  0092                     	;# 
  3411  0093                     	;# 
  3412  0094                     	;# 
  3413  0094                     	;# 
  3414  0095                     	;# 
  3415  0096                     	;# 
  3416  0096                     	;# 
  3417  0097                     	;# 
  3418  0098                     	;# 
  3419  0099                     	;# 
  3420  009A                     	;# 
  3421  009B                     	;# 
  3422  009B                     	;# 
  3423  009C                     	;# 
  3424  009D                     	;# 
  3425  009D                     	;# 
  3426  009E                     	;# 
  3427  009F                     	;# 
  3428  010C                     	;# 
  3429  010C                     	;# 
  3430  010D                     	;# 
  3431  010E                     	;# 
  3432  010F                     	;# 
  3433  010F                     	;# 
  3434  0110                     	;# 
  3435  0111                     	;# 
  3436  0112                     	;# 
  3437  0113                     	;# 
  3438  0114                     	;# 
  3439  0115                     	;# 
  3440  0116                     	;# 
  3441  0117                     	;# 
  3442  0118                     	;# 
  3443  0119                     	;# 
  3444  0119                     	;# 
  3445  0119                     	;# 
  3446  011A                     	;# 
  3447  011A                     	;# 
  3448  011A                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011B                     	;# 
  3452  011B                     	;# 
  3453  011B                     	;# 
  3454  011C                     	;# 
  3455  011C                     	;# 
  3456  011C                     	;# 
  3457  011D                     	;# 
  3458  011D                     	;# 
  3459  011D                     	;# 
  3460  011E                     	;# 
  3461  011E                     	;# 
  3462  011E                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  011F                     	;# 
  3466  011F                     	;# 
  3467  011F                     	;# 
  3468  018C                     	;# 
  3469  018D                     	;# 
  3470  018E                     	;# 
  3471  018F                     	;# 
  3472  0190                     	;# 
  3473  0191                     	;# 
  3474  0192                     	;# 
  3475  0196                     	;# 
  3476  0197                     	;# 
  3477  0198                     	;# 
  3478  0199                     	;# 
  3479  019A                     	;# 
  3480  019B                     	;# 
  3481  019C                     	;# 
  3482  020C                     	;# 
  3483  020D                     	;# 
  3484  020E                     	;# 
  3485  020E                     	;# 
  3486  020F                     	;# 
  3487  020F                     	;# 
  3488  0210                     	;# 
  3489  0210                     	;# 
  3490  0211                     	;# 
  3491  0211                     	;# 
  3492  0212                     	;# 
  3493  0213                     	;# 
  3494  0214                     	;# 
  3495  0214                     	;# 
  3496  0215                     	;# 
  3497  0215                     	;# 
  3498  0216                     	;# 
  3499  0216                     	;# 
  3500  0217                     	;# 
  3501  0217                     	;# 
  3502  0218                     	;# 
  3503  0219                     	;# 
  3504  021A                     	;# 
  3505  021A                     	;# 
  3506  021B                     	;# 
  3507  021B                     	;# 
  3508  021C                     	;# 
  3509  021C                     	;# 
  3510  021D                     	;# 
  3511  021D                     	;# 
  3512  021E                     	;# 
  3513  021F                     	;# 
  3514  028C                     	;# 
  3515  028C                     	;# 
  3516  028D                     	;# 
  3517  028D                     	;# 
  3518  028E                     	;# 
  3519  028F                     	;# 
  3520  0290                     	;# 
  3521  0291                     	;# 
  3522  0292                     	;# 
  3523  0292                     	;# 
  3524  0293                     	;# 
  3525  0293                     	;# 
  3526  0294                     	;# 
  3527  0295                     	;# 
  3528  0296                     	;# 
  3529  0297                     	;# 
  3530  0298                     	;# 
  3531  0298                     	;# 
  3532  0299                     	;# 
  3533  0299                     	;# 
  3534  029A                     	;# 
  3535  029B                     	;# 
  3536  029C                     	;# 
  3537  029D                     	;# 
  3538  029F                     	;# 
  3539  030C                     	;# 
  3540  030C                     	;# 
  3541  030D                     	;# 
  3542  030E                     	;# 
  3543  030F                     	;# 
  3544  0310                     	;# 
  3545  0310                     	;# 
  3546  0311                     	;# 
  3547  0312                     	;# 
  3548  0313                     	;# 
  3549  0314                     	;# 
  3550  0314                     	;# 
  3551  0315                     	;# 
  3552  0316                     	;# 
  3553  0317                     	;# 
  3554  0318                     	;# 
  3555  0318                     	;# 
  3556  0319                     	;# 
  3557  031A                     	;# 
  3558  031B                     	;# 
  3559  038C                     	;# 
  3560  038C                     	;# 
  3561  038D                     	;# 
  3562  038E                     	;# 
  3563  0390                     	;# 
  3564  0390                     	;# 
  3565  0391                     	;# 
  3566  0392                     	;# 
  3567  048C                     	;# 
  3568  048C                     	;# 
  3569  048D                     	;# 
  3570  048E                     	;# 
  3571  048F                     	;# 
  3572  048F                     	;# 
  3573  0490                     	;# 
  3574  0491                     	;# 
  3575  0492                     	;# 
  3576  0492                     	;# 
  3577  0493                     	;# 
  3578  0494                     	;# 
  3579  0495                     	;# 
  3580  0495                     	;# 
  3581  0496                     	;# 
  3582  0497                     	;# 
  3583  0498                     	;# 
  3584  0499                     	;# 
  3585  049A                     	;# 
  3586  049B                     	;# 
  3587  049C                     	;# 
  3588  049D                     	;# 
  3589  058C                     	;# 
  3590  058C                     	;# 
  3591  058D                     	;# 
  3592  058E                     	;# 
  3593  058F                     	;# 
  3594  058F                     	;# 
  3595  0590                     	;# 
  3596  0591                     	;# 
  3597  0592                     	;# 
  3598  0593                     	;# 
  3599  059C                     	;# 
  3600  059C                     	;# 
  3601  059D                     	;# 
  3602  059D                     	;# 
  3603  059E                     	;# 
  3604  059F                     	;# 
  3605  060C                     	;# 
  3606  060C                     	;# 
  3607  060D                     	;# 
  3608  060D                     	;# 
  3609  060E                     	;# 
  3610  060F                     	;# 
  3611  0610                     	;# 
  3612  0611                     	;# 
  3613  0612                     	;# 
  3614  0613                     	;# 
  3615  0614                     	;# 
  3616  0616                     	;# 
  3617  0616                     	;# 
  3618  0617                     	;# 
  3619  0617                     	;# 
  3620  0618                     	;# 
  3621  0619                     	;# 
  3622  061A                     	;# 
  3623  061B                     	;# 
  3624  061C                     	;# 
  3625  061D                     	;# 
  3626  061E                     	;# 
  3627  070C                     	;# 
  3628  070D                     	;# 
  3629  070E                     	;# 
  3630  070F                     	;# 
  3631  0710                     	;# 
  3632  0711                     	;# 
  3633  0712                     	;# 
  3634  0713                     	;# 
  3635  0714                     	;# 
  3636  0716                     	;# 
  3637  0717                     	;# 
  3638  0718                     	;# 
  3639  0719                     	;# 
  3640  071A                     	;# 
  3641  071B                     	;# 
  3642  071C                     	;# 
  3643  071D                     	;# 
  3644  071E                     	;# 
  3645  0796                     	;# 
  3646  0797                     	;# 
  3647  0798                     	;# 
  3648  0799                     	;# 
  3649  079A                     	;# 
  3650  079B                     	;# 
  3651  079C                     	;# 
  3652  079D                     	;# 
  3653  080C                     	;# 
  3654  080D                     	;# 
  3655  080E                     	;# 
  3656  080F                     	;# 
  3657  0810                     	;# 
  3658  0811                     	;# 
  3659  0812                     	;# 
  3660  0813                     	;# 
  3661  0814                     	;# 
  3662  081A                     	;# 
  3663  081A                     	;# 
  3664  081B                     	;# 
  3665  081C                     	;# 
  3666  081C                     	;# 
  3667  081D                     	;# 
  3668  081E                     	;# 
  3669  081F                     	;# 
  3670  088C                     	;# 
  3671  088D                     	;# 
  3672  088E                     	;# 
  3673  088F                     	;# 
  3674  0890                     	;# 
  3675  0891                     	;# 
  3676  0892                     	;# 
  3677  0893                     	;# 
  3678  0895                     	;# 
  3679  0896                     	;# 
  3680  0897                     	;# 
  3681  0898                     	;# 
  3682  0899                     	;# 
  3683  089A                     	;# 
  3684  089B                     	;# 
  3685  090C                     	;# 
  3686  090E                     	;# 
  3687  090F                     	;# 
  3688  091F                     	;# 
  3689  098F                     	;# 
  3690  098F                     	;# 
  3691  0990                     	;# 
  3692  0991                     	;# 
  3693  0992                     	;# 
  3694  0993                     	;# 
  3695  0994                     	;# 
  3696  0995                     	;# 
  3697  0996                     	;# 
  3698  0997                     	;# 
  3699  1E0F                     	;# 
  3700  1E10                     	;# 
  3701  1E11                     	;# 
  3702  1E12                     	;# 
  3703  1E13                     	;# 
  3704  1E14                     	;# 
  3705  1E15                     	;# 
  3706  1E16                     	;# 
  3707  1E17                     	;# 
  3708  1E18                     	;# 
  3709  1E19                     	;# 
  3710  1E1A                     	;# 
  3711  1E1B                     	;# 
  3712  1E1C                     	;# 
  3713  1E1D                     	;# 
  3714  1E1E                     	;# 
  3715  1E1F                     	;# 
  3716  1E20                     	;# 
  3717  1E21                     	;# 
  3718  1E22                     	;# 
  3719  1E23                     	;# 
  3720  1E24                     	;# 
  3721  1E25                     	;# 
  3722  1E26                     	;# 
  3723  1E27                     	;# 
  3724  1E28                     	;# 
  3725  1E29                     	;# 
  3726  1E2A                     	;# 
  3727  1E2B                     	;# 
  3728  1E2C                     	;# 
  3729  1E2D                     	;# 
  3730  1E2E                     	;# 
  3731  1E2F                     	;# 
  3732  1E30                     	;# 
  3733  1E31                     	;# 
  3734  1E32                     	;# 
  3735  1E33                     	;# 
  3736  1E34                     	;# 
  3737  1E35                     	;# 
  3738  1E36                     	;# 
  3739  1E37                     	;# 
  3740  1E8F                     	;# 
  3741  1E90                     	;# 
  3742  1E91                     	;# 
  3743  1E92                     	;# 
  3744  1E93                     	;# 
  3745  1E94                     	;# 
  3746  1E95                     	;# 
  3747  1E96                     	;# 
  3748  1E97                     	;# 
  3749  1E9C                     	;# 
  3750  1E9D                     	;# 
  3751  1E9E                     	;# 
  3752  1EA1                     	;# 
  3753  1EA2                     	;# 
  3754  1EA3                     	;# 
  3755  1EA4                     	;# 
  3756  1EA9                     	;# 
  3757  1EAA                     	;# 
  3758  1EB1                     	;# 
  3759  1EB2                     	;# 
  3760  1EB8                     	;# 
  3761  1EB9                     	;# 
  3762  1EBA                     	;# 
  3763  1EBB                     	;# 
  3764  1EBC                     	;# 
  3765  1EBD                     	;# 
  3766  1EBE                     	;# 
  3767  1EC3                     	;# 
  3768  1EC5                     	;# 
  3769  1EC6                     	;# 
  3770  1EC7                     	;# 
  3771  1EC8                     	;# 
  3772  1EC9                     	;# 
  3773  1ECA                     	;# 
  3774  1ECB                     	;# 
  3775  1ECB                     	;# 
  3776  1ECB                     	;# 
  3777  1ECC                     	;# 
  3778  1ECC                     	;# 
  3779  1ECC                     	;# 
  3780  1F10                     	;# 
  3781  1F11                     	;# 
  3782  1F12                     	;# 
  3783  1F14                     	;# 
  3784  1F15                     	;# 
  3785  1F1C                     	;# 
  3786  1F1D                     	;# 
  3787  1F1E                     	;# 
  3788  1F1F                     	;# 
  3789  1F20                     	;# 
  3790  1F21                     	;# 
  3791  1F22                     	;# 
  3792  1F23                     	;# 
  3793  1F24                     	;# 
  3794  1F25                     	;# 
  3795  1F26                     	;# 
  3796  1F27                     	;# 
  3797  1F38                     	;# 
  3798  1F39                     	;# 
  3799  1F3A                     	;# 
  3800  1F3B                     	;# 
  3801  1F3C                     	;# 
  3802  1F3D                     	;# 
  3803  1F3E                     	;# 
  3804  1F3F                     	;# 
  3805  1F43                     	;# 
  3806  1F44                     	;# 
  3807  1F45                     	;# 
  3808  1F46                     	;# 
  3809  1F47                     	;# 
  3810  1F48                     	;# 
  3811  1F49                     	;# 
  3812  1F4A                     	;# 
  3813  1F4E                     	;# 
  3814  1F4F                     	;# 
  3815  1F50                     	;# 
  3816  1F51                     	;# 
  3817  1F52                     	;# 
  3818  1F53                     	;# 
  3819  1F54                     	;# 
  3820  1F55                     	;# 
  3821  1FE4                     	;# 
  3822  1FE5                     	;# 
  3823  1FE6                     	;# 
  3824  1FE7                     	;# 
  3825  1FE8                     	;# 
  3826  1FE8                     	;# 
  3827  1FE9                     	;# 
  3828  1FEA                     	;# 
  3829  1FEB                     	;# 
  3830  1FED                     	;# 
  3831  1FEE                     	;# 
  3832  1FEF                     	;# 
  3833  0000                     	;# 
  3834  0001                     	;# 
  3835  0002                     	;# 
  3836  0003                     	;# 
  3837  0004                     	;# 
  3838  0005                     	;# 
  3839  0006                     	;# 
  3840  0007                     	;# 
  3841  0008                     	;# 
  3842  0009                     	;# 
  3843  000A                     	;# 
  3844  000B                     	;# 
  3845  000C                     	;# 
  3846  000D                     	;# 
  3847  000E                     	;# 
  3848  0012                     	;# 
  3849  0013                     	;# 
  3850  0014                     	;# 
  3851  0018                     	;# 
  3852  0019                     	;# 
  3853  001A                     	;# 
  3854  008C                     	;# 
  3855  008C                     	;# 
  3856  008D                     	;# 
  3857  008E                     	;# 
  3858  008E                     	;# 
  3859  008F                     	;# 
  3860  0090                     	;# 
  3861  0090                     	;# 
  3862  0091                     	;# 
  3863  0092                     	;# 
  3864  0092                     	;# 
  3865  0093                     	;# 
  3866  0094                     	;# 
  3867  0094                     	;# 
  3868  0095                     	;# 
  3869  0096                     	;# 
  3870  0096                     	;# 
  3871  0097                     	;# 
  3872  0098                     	;# 
  3873  0099                     	;# 
  3874  009A                     	;# 
  3875  009B                     	;# 
  3876  009B                     	;# 
  3877  009C                     	;# 
  3878  009D                     	;# 
  3879  009D                     	;# 
  3880  009E                     	;# 
  3881  009F                     	;# 
  3882  010C                     	;# 
  3883  010C                     	;# 
  3884  010D                     	;# 
  3885  010E                     	;# 
  3886  010F                     	;# 
  3887  010F                     	;# 
  3888  0110                     	;# 
  3889  0111                     	;# 
  3890  0112                     	;# 
  3891  0113                     	;# 
  3892  0114                     	;# 
  3893  0115                     	;# 
  3894  0116                     	;# 
  3895  0117                     	;# 
  3896  0118                     	;# 
  3897  0119                     	;# 
  3898  0119                     	;# 
  3899  0119                     	;# 
  3900  011A                     	;# 
  3901  011A                     	;# 
  3902  011A                     	;# 
  3903  011B                     	;# 
  3904  011B                     	;# 
  3905  011B                     	;# 
  3906  011B                     	;# 
  3907  011B                     	;# 
  3908  011C                     	;# 
  3909  011C                     	;# 
  3910  011C                     	;# 
  3911  011D                     	;# 
  3912  011D                     	;# 
  3913  011D                     	;# 
  3914  011E                     	;# 
  3915  011E                     	;# 
  3916  011E                     	;# 
  3917  011F                     	;# 
  3918  011F                     	;# 
  3919  011F                     	;# 
  3920  011F                     	;# 
  3921  011F                     	;# 
  3922  018C                     	;# 
  3923  018D                     	;# 
  3924  018E                     	;# 
  3925  018F                     	;# 
  3926  0190                     	;# 
  3927  0191                     	;# 
  3928  0192                     	;# 
  3929  0196                     	;# 
  3930  0197                     	;# 
  3931  0198                     	;# 
  3932  0199                     	;# 
  3933  019A                     	;# 
  3934  019B                     	;# 
  3935  019C                     	;# 
  3936  020C                     	;# 
  3937  020D                     	;# 
  3938  020E                     	;# 
  3939  020E                     	;# 
  3940  020F                     	;# 
  3941  020F                     	;# 
  3942  0210                     	;# 
  3943  0210                     	;# 
  3944  0211                     	;# 
  3945  0211                     	;# 
  3946  0212                     	;# 
  3947  0213                     	;# 
  3948  0214                     	;# 
  3949  0214                     	;# 
  3950  0215                     	;# 
  3951  0215                     	;# 
  3952  0216                     	;# 
  3953  0216                     	;# 
  3954  0217                     	;# 
  3955  0217                     	;# 
  3956  0218                     	;# 
  3957  0219                     	;# 
  3958  021A                     	;# 
  3959  021A                     	;# 
  3960  021B                     	;# 
  3961  021B                     	;# 
  3962  021C                     	;# 
  3963  021C                     	;# 
  3964  021D                     	;# 
  3965  021D                     	;# 
  3966  021E                     	;# 
  3967  021F                     	;# 
  3968  028C                     	;# 
  3969  028C                     	;# 
  3970  028D                     	;# 
  3971  028D                     	;# 
  3972  028E                     	;# 
  3973  028F                     	;# 
  3974  0290                     	;# 
  3975  0291                     	;# 
  3976  0292                     	;# 
  3977  0292                     	;# 
  3978  0293                     	;# 
  3979  0293                     	;# 
  3980  0294                     	;# 
  3981  0295                     	;# 
  3982  0296                     	;# 
  3983  0297                     	;# 
  3984  0298                     	;# 
  3985  0298                     	;# 
  3986  0299                     	;# 
  3987  0299                     	;# 
  3988  029A                     	;# 
  3989  029B                     	;# 
  3990  029C                     	;# 
  3991  029D                     	;# 
  3992  029F                     	;# 
  3993  030C                     	;# 
  3994  030C                     	;# 
  3995  030D                     	;# 
  3996  030E                     	;# 
  3997  030F                     	;# 
  3998  0310                     	;# 
  3999  0310                     	;# 
  4000  0311                     	;# 
  4001  0312                     	;# 
  4002  0313                     	;# 
  4003  0314                     	;# 
  4004  0314                     	;# 
  4005  0315                     	;# 
  4006  0316                     	;# 
  4007  0317                     	;# 
  4008  0318                     	;# 
  4009  0318                     	;# 
  4010  0319                     	;# 
  4011  031A                     	;# 
  4012  031B                     	;# 
  4013  038C                     	;# 
  4014  038C                     	;# 
  4015  038D                     	;# 
  4016  038E                     	;# 
  4017  0390                     	;# 
  4018  0390                     	;# 
  4019  0391                     	;# 
  4020  0392                     	;# 
  4021  048C                     	;# 
  4022  048C                     	;# 
  4023  048D                     	;# 
  4024  048E                     	;# 
  4025  048F                     	;# 
  4026  048F                     	;# 
  4027  0490                     	;# 
  4028  0491                     	;# 
  4029  0492                     	;# 
  4030  0492                     	;# 
  4031  0493                     	;# 
  4032  0494                     	;# 
  4033  0495                     	;# 
  4034  0495                     	;# 
  4035  0496                     	;# 
  4036  0497                     	;# 
  4037  0498                     	;# 
  4038  0499                     	;# 
  4039  049A                     	;# 
  4040  049B                     	;# 
  4041  049C                     	;# 
  4042  049D                     	;# 
  4043  058C                     	;# 
  4044  058C                     	;# 
  4045  058D                     	;# 
  4046  058E                     	;# 
  4047  058F                     	;# 
  4048  058F                     	;# 
  4049  0590                     	;# 
  4050  0591                     	;# 
  4051  0592                     	;# 
  4052  0593                     	;# 
  4053  059C                     	;# 
  4054  059C                     	;# 
  4055  059D                     	;# 
  4056  059D                     	;# 
  4057  059E                     	;# 
  4058  059F                     	;# 
  4059  060C                     	;# 
  4060  060C                     	;# 
  4061  060D                     	;# 
  4062  060D                     	;# 
  4063  060E                     	;# 
  4064  060F                     	;# 
  4065  0610                     	;# 
  4066  0611                     	;# 
  4067  0612                     	;# 
  4068  0613                     	;# 
  4069  0614                     	;# 
  4070  0616                     	;# 
  4071  0616                     	;# 
  4072  0617                     	;# 
  4073  0617                     	;# 
  4074  0618                     	;# 
  4075  0619                     	;# 
  4076  061A                     	;# 
  4077  061B                     	;# 
  4078  061C                     	;# 
  4079  061D                     	;# 
  4080  061E                     	;# 
  4081  070C                     	;# 
  4082  070D                     	;# 
  4083  070E                     	;# 
  4084  070F                     	;# 
  4085  0710                     	;# 
  4086  0711                     	;# 
  4087  0712                     	;# 
  4088  0713                     	;# 
  4089  0714                     	;# 
  4090  0716                     	;# 
  4091  0717                     	;# 
  4092  0718                     	;# 
  4093  0719                     	;# 
  4094  071A                     	;# 
  4095  071B                     	;# 
  4096  071C                     	;# 
  4097  071D                     	;# 
  4098  071E                     	;# 
  4099  0796                     	;# 
  4100  0797                     	;# 
  4101  0798                     	;# 
  4102  0799                     	;# 
  4103  079A                     	;# 
  4104  079B                     	;# 
  4105  079C                     	;# 
  4106  079D                     	;# 
  4107  080C                     	;# 
  4108  080D                     	;# 
  4109  080E                     	;# 
  4110  080F                     	;# 
  4111  0810                     	;# 
  4112  0811                     	;# 
  4113  0812                     	;# 
  4114  0813                     	;# 
  4115  0814                     	;# 
  4116  081A                     	;# 
  4117  081A                     	;# 
  4118  081B                     	;# 
  4119  081C                     	;# 
  4120  081C                     	;# 
  4121  081D                     	;# 
  4122  081E                     	;# 
  4123  081F                     	;# 
  4124  088C                     	;# 
  4125  088D                     	;# 
  4126  088E                     	;# 
  4127  088F                     	;# 
  4128  0890                     	;# 
  4129  0891                     	;# 
  4130  0892                     	;# 
  4131  0893                     	;# 
  4132  0895                     	;# 
  4133  0896                     	;# 
  4134  0897                     	;# 
  4135  0898                     	;# 
  4136  0899                     	;# 
  4137  089A                     	;# 
  4138  089B                     	;# 
  4139  090C                     	;# 
  4140  090E                     	;# 
  4141  090F                     	;# 
  4142  091F                     	;# 
  4143  098F                     	;# 
  4144  098F                     	;# 
  4145  0990                     	;# 
  4146  0991                     	;# 
  4147  0992                     	;# 
  4148  0993                     	;# 
  4149  0994                     	;# 
  4150  0995                     	;# 
  4151  0996                     	;# 
  4152  0997                     	;# 
  4153  1E0F                     	;# 
  4154  1E10                     	;# 
  4155  1E11                     	;# 
  4156  1E12                     	;# 
  4157  1E13                     	;# 
  4158  1E14                     	;# 
  4159  1E15                     	;# 
  4160  1E16                     	;# 
  4161  1E17                     	;# 
  4162  1E18                     	;# 
  4163  1E19                     	;# 
  4164  1E1A                     	;# 
  4165  1E1B                     	;# 
  4166  1E1C                     	;# 
  4167  1E1D                     	;# 
  4168  1E1E                     	;# 
  4169  1E1F                     	;# 
  4170  1E20                     	;# 
  4171  1E21                     	;# 
  4172  1E22                     	;# 
  4173  1E23                     	;# 
  4174  1E24                     	;# 
  4175  1E25                     	;# 
  4176  1E26                     	;# 
  4177  1E27                     	;# 
  4178  1E28                     	;# 
  4179  1E29                     	;# 
  4180  1E2A                     	;# 
  4181  1E2B                     	;# 
  4182  1E2C                     	;# 
  4183  1E2D                     	;# 
  4184  1E2E                     	;# 
  4185  1E2F                     	;# 
  4186  1E30                     	;# 
  4187  1E31                     	;# 
  4188  1E32                     	;# 
  4189  1E33                     	;# 
  4190  1E34                     	;# 
  4191  1E35                     	;# 
  4192  1E36                     	;# 
  4193  1E37                     	;# 
  4194  1E8F                     	;# 
  4195  1E90                     	;# 
  4196  1E91                     	;# 
  4197  1E92                     	;# 
  4198  1E93                     	;# 
  4199  1E94                     	;# 
  4200  1E95                     	;# 
  4201  1E96                     	;# 
  4202  1E97                     	;# 
  4203  1E9C                     	;# 
  4204  1E9D                     	;# 
  4205  1E9E                     	;# 
  4206  1EA1                     	;# 
  4207  1EA2                     	;# 
  4208  1EA3                     	;# 
  4209  1EA4                     	;# 
  4210  1EA9                     	;# 
  4211  1EAA                     	;# 
  4212  1EB1                     	;# 
  4213  1EB2                     	;# 
  4214  1EB8                     	;# 
  4215  1EB9                     	;# 
  4216  1EBA                     	;# 
  4217  1EBB                     	;# 
  4218  1EBC                     	;# 
  4219  1EBD                     	;# 
  4220  1EBE                     	;# 
  4221  1EC3                     	;# 
  4222  1EC5                     	;# 
  4223  1EC6                     	;# 
  4224  1EC7                     	;# 
  4225  1EC8                     	;# 
  4226  1EC9                     	;# 
  4227  1ECA                     	;# 
  4228  1ECB                     	;# 
  4229  1ECB                     	;# 
  4230  1ECB                     	;# 
  4231  1ECC                     	;# 
  4232  1ECC                     	;# 
  4233  1ECC                     	;# 
  4234  1F10                     	;# 
  4235  1F11                     	;# 
  4236  1F12                     	;# 
  4237  1F14                     	;# 
  4238  1F15                     	;# 
  4239  1F1C                     	;# 
  4240  1F1D                     	;# 
  4241  1F1E                     	;# 
  4242  1F1F                     	;# 
  4243  1F20                     	;# 
  4244  1F21                     	;# 
  4245  1F22                     	;# 
  4246  1F23                     	;# 
  4247  1F24                     	;# 
  4248  1F25                     	;# 
  4249  1F26                     	;# 
  4250  1F27                     	;# 
  4251  1F38                     	;# 
  4252  1F39                     	;# 
  4253  1F3A                     	;# 
  4254  1F3B                     	;# 
  4255  1F3C                     	;# 
  4256  1F3D                     	;# 
  4257  1F3E                     	;# 
  4258  1F3F                     	;# 
  4259  1F43                     	;# 
  4260  1F44                     	;# 
  4261  1F45                     	;# 
  4262  1F46                     	;# 
  4263  1F47                     	;# 
  4264  1F48                     	;# 
  4265  1F49                     	;# 
  4266  1F4A                     	;# 
  4267  1F4E                     	;# 
  4268  1F4F                     	;# 
  4269  1F50                     	;# 
  4270  1F51                     	;# 
  4271  1F52                     	;# 
  4272  1F53                     	;# 
  4273  1F54                     	;# 
  4274  1F55                     	;# 
  4275  1FE4                     	;# 
  4276  1FE5                     	;# 
  4277  1FE6                     	;# 
  4278  1FE7                     	;# 
  4279  1FE8                     	;# 
  4280  1FE8                     	;# 
  4281  1FE9                     	;# 
  4282  1FEA                     	;# 
  4283  1FEB                     	;# 
  4284  1FED                     	;# 
  4285  1FEE                     	;# 
  4286  1FEF                     	;# 
  4287  0000                     	;# 
  4288  0001                     	;# 
  4289  0002                     	;# 
  4290  0003                     	;# 
  4291  0004                     	;# 
  4292  0005                     	;# 
  4293  0006                     	;# 
  4294  0007                     	;# 
  4295  0008                     	;# 
  4296  0009                     	;# 
  4297  000A                     	;# 
  4298  000B                     	;# 
  4299  000C                     	;# 
  4300  000D                     	;# 
  4301  000E                     	;# 
  4302  0012                     	;# 
  4303  0013                     	;# 
  4304  0014                     	;# 
  4305  0018                     	;# 
  4306  0019                     	;# 
  4307  001A                     	;# 
  4308  008C                     	;# 
  4309  008C                     	;# 
  4310  008D                     	;# 
  4311  008E                     	;# 
  4312  008E                     	;# 
  4313  008F                     	;# 
  4314  0090                     	;# 
  4315  0090                     	;# 
  4316  0091                     	;# 
  4317  0092                     	;# 
  4318  0092                     	;# 
  4319  0093                     	;# 
  4320  0094                     	;# 
  4321  0094                     	;# 
  4322  0095                     	;# 
  4323  0096                     	;# 
  4324  0096                     	;# 
  4325  0097                     	;# 
  4326  0098                     	;# 
  4327  0099                     	;# 
  4328  009A                     	;# 
  4329  009B                     	;# 
  4330  009B                     	;# 
  4331  009C                     	;# 
  4332  009D                     	;# 
  4333  009D                     	;# 
  4334  009E                     	;# 
  4335  009F                     	;# 
  4336  010C                     	;# 
  4337  010C                     	;# 
  4338  010D                     	;# 
  4339  010E                     	;# 
  4340  010F                     	;# 
  4341  010F                     	;# 
  4342  0110                     	;# 
  4343  0111                     	;# 
  4344  0112                     	;# 
  4345  0113                     	;# 
  4346  0114                     	;# 
  4347  0115                     	;# 
  4348  0116                     	;# 
  4349  0117                     	;# 
  4350  0118                     	;# 
  4351  0119                     	;# 
  4352  0119                     	;# 
  4353  0119                     	;# 
  4354  011A                     	;# 
  4355  011A                     	;# 
  4356  011A                     	;# 
  4357  011B                     	;# 
  4358  011B                     	;# 
  4359  011B                     	;# 
  4360  011B                     	;# 
  4361  011B                     	;# 
  4362  011C                     	;# 
  4363  011C                     	;# 
  4364  011C                     	;# 
  4365  011D                     	;# 
  4366  011D                     	;# 
  4367  011D                     	;# 
  4368  011E                     	;# 
  4369  011E                     	;# 
  4370  011E                     	;# 
  4371  011F                     	;# 
  4372  011F                     	;# 
  4373  011F                     	;# 
  4374  011F                     	;# 
  4375  011F                     	;# 
  4376  018C                     	;# 
  4377  018D                     	;# 
  4378  018E                     	;# 
  4379  018F                     	;# 
  4380  0190                     	;# 
  4381  0191                     	;# 
  4382  0192                     	;# 
  4383  0196                     	;# 
  4384  0197                     	;# 
  4385  0198                     	;# 
  4386  0199                     	;# 
  4387  019A                     	;# 
  4388  019B                     	;# 
  4389  019C                     	;# 
  4390  020C                     	;# 
  4391  020D                     	;# 
  4392  020E                     	;# 
  4393  020E                     	;# 
  4394  020F                     	;# 
  4395  020F                     	;# 
  4396  0210                     	;# 
  4397  0210                     	;# 
  4398  0211                     	;# 
  4399  0211                     	;# 
  4400  0212                     	;# 
  4401  0213                     	;# 
  4402  0214                     	;# 
  4403  0214                     	;# 
  4404  0215                     	;# 
  4405  0215                     	;# 
  4406  0216                     	;# 
  4407  0216                     	;# 
  4408  0217                     	;# 
  4409  0217                     	;# 
  4410  0218                     	;# 
  4411  0219                     	;# 
  4412  021A                     	;# 
  4413  021A                     	;# 
  4414  021B                     	;# 
  4415  021B                     	;# 
  4416  021C                     	;# 
  4417  021C                     	;# 
  4418  021D                     	;# 
  4419  021D                     	;# 
  4420  021E                     	;# 
  4421  021F                     	;# 
  4422  028C                     	;# 
  4423  028C                     	;# 
  4424  028D                     	;# 
  4425  028D                     	;# 
  4426  028E                     	;# 
  4427  028F                     	;# 
  4428  0290                     	;# 
  4429  0291                     	;# 
  4430  0292                     	;# 
  4431  0292                     	;# 
  4432  0293                     	;# 
  4433  0293                     	;# 
  4434  0294                     	;# 
  4435  0295                     	;# 
  4436  0296                     	;# 
  4437  0297                     	;# 
  4438  0298                     	;# 
  4439  0298                     	;# 
  4440  0299                     	;# 
  4441  0299                     	;# 
  4442  029A                     	;# 
  4443  029B                     	;# 
  4444  029C                     	;# 
  4445  029D                     	;# 
  4446  029F                     	;# 
  4447  030C                     	;# 
  4448  030C                     	;# 
  4449  030D                     	;# 
  4450  030E                     	;# 
  4451  030F                     	;# 
  4452  0310                     	;# 
  4453  0310                     	;# 
  4454  0311                     	;# 
  4455  0312                     	;# 
  4456  0313                     	;# 
  4457  0314                     	;# 
  4458  0314                     	;# 
  4459  0315                     	;# 
  4460  0316                     	;# 
  4461  0317                     	;# 
  4462  0318                     	;# 
  4463  0318                     	;# 
  4464  0319                     	;# 
  4465  031A                     	;# 
  4466  031B                     	;# 
  4467  038C                     	;# 
  4468  038C                     	;# 
  4469  038D                     	;# 
  4470  038E                     	;# 
  4471  0390                     	;# 
  4472  0390                     	;# 
  4473  0391                     	;# 
  4474  0392                     	;# 
  4475  048C                     	;# 
  4476  048C                     	;# 
  4477  048D                     	;# 
  4478  048E                     	;# 
  4479  048F                     	;# 
  4480  048F                     	;# 
  4481  0490                     	;# 
  4482  0491                     	;# 
  4483  0492                     	;# 
  4484  0492                     	;# 
  4485  0493                     	;# 
  4486  0494                     	;# 
  4487  0495                     	;# 
  4488  0495                     	;# 
  4489  0496                     	;# 
  4490  0497                     	;# 
  4491  0498                     	;# 
  4492  0499                     	;# 
  4493  049A                     	;# 
  4494  049B                     	;# 
  4495  049C                     	;# 
  4496  049D                     	;# 
  4497  058C                     	;# 
  4498  058C                     	;# 
  4499  058D                     	;# 
  4500  058E                     	;# 
  4501  058F                     	;# 
  4502  058F                     	;# 
  4503  0590                     	;# 
  4504  0591                     	;# 
  4505  0592                     	;# 
  4506  0593                     	;# 
  4507  059C                     	;# 
  4508  059C                     	;# 
  4509  059D                     	;# 
  4510  059D                     	;# 
  4511  059E                     	;# 
  4512  059F                     	;# 
  4513  060C                     	;# 
  4514  060C                     	;# 
  4515  060D                     	;# 
  4516  060D                     	;# 
  4517  060E                     	;# 
  4518  060F                     	;# 
  4519  0610                     	;# 
  4520  0611                     	;# 
  4521  0612                     	;# 
  4522  0613                     	;# 
  4523  0614                     	;# 
  4524  0616                     	;# 
  4525  0616                     	;# 
  4526  0617                     	;# 
  4527  0617                     	;# 
  4528  0618                     	;# 
  4529  0619                     	;# 
  4530  061A                     	;# 
  4531  061B                     	;# 
  4532  061C                     	;# 
  4533  061D                     	;# 
  4534  061E                     	;# 
  4535  070C                     	;# 
  4536  070D                     	;# 
  4537  070E                     	;# 
  4538  070F                     	;# 
  4539  0710                     	;# 
  4540  0711                     	;# 
  4541  0712                     	;# 
  4542  0713                     	;# 
  4543  0714                     	;# 
  4544  0716                     	;# 
  4545  0717                     	;# 
  4546  0718                     	;# 
  4547  0719                     	;# 
  4548  071A                     	;# 
  4549  071B                     	;# 
  4550  071C                     	;# 
  4551  071D                     	;# 
  4552  071E                     	;# 
  4553  0796                     	;# 
  4554  0797                     	;# 
  4555  0798                     	;# 
  4556  0799                     	;# 
  4557  079A                     	;# 
  4558  079B                     	;# 
  4559  079C                     	;# 
  4560  079D                     	;# 
  4561  080C                     	;# 
  4562  080D                     	;# 
  4563  080E                     	;# 
  4564  080F                     	;# 
  4565  0810                     	;# 
  4566  0811                     	;# 
  4567  0812                     	;# 
  4568  0813                     	;# 
  4569  0814                     	;# 
  4570  081A                     	;# 
  4571  081A                     	;# 
  4572  081B                     	;# 
  4573  081C                     	;# 
  4574  081C                     	;# 
  4575  081D                     	;# 
  4576  081E                     	;# 
  4577  081F                     	;# 
  4578  088C                     	;# 
  4579  088D                     	;# 
  4580  088E                     	;# 
  4581  088F                     	;# 
  4582  0890                     	;# 
  4583  0891                     	;# 
  4584  0892                     	;# 
  4585  0893                     	;# 
  4586  0895                     	;# 
  4587  0896                     	;# 
  4588  0897                     	;# 
  4589  0898                     	;# 
  4590  0899                     	;# 
  4591  089A                     	;# 
  4592  089B                     	;# 
  4593  090C                     	;# 
  4594  090E                     	;# 
  4595  090F                     	;# 
  4596  091F                     	;# 
  4597  098F                     	;# 
  4598  098F                     	;# 
  4599  0990                     	;# 
  4600  0991                     	;# 
  4601  0992                     	;# 
  4602  0993                     	;# 
  4603  0994                     	;# 
  4604  0995                     	;# 
  4605  0996                     	;# 
  4606  0997                     	;# 
  4607  1E0F                     	;# 
  4608  1E10                     	;# 
  4609  1E11                     	;# 
  4610  1E12                     	;# 
  4611  1E13                     	;# 
  4612  1E14                     	;# 
  4613  1E15                     	;# 
  4614  1E16                     	;# 
  4615  1E17                     	;# 
  4616  1E18                     	;# 
  4617  1E19                     	;# 
  4618  1E1A                     	;# 
  4619  1E1B                     	;# 
  4620  1E1C                     	;# 
  4621  1E1D                     	;# 
  4622  1E1E                     	;# 
  4623  1E1F                     	;# 
  4624  1E20                     	;# 
  4625  1E21                     	;# 
  4626  1E22                     	;# 
  4627  1E23                     	;# 
  4628  1E24                     	;# 
  4629  1E25                     	;# 
  4630  1E26                     	;# 
  4631  1E27                     	;# 
  4632  1E28                     	;# 
  4633  1E29                     	;# 
  4634  1E2A                     	;# 
  4635  1E2B                     	;# 
  4636  1E2C                     	;# 
  4637  1E2D                     	;# 
  4638  1E2E                     	;# 
  4639  1E2F                     	;# 
  4640  1E30                     	;# 
  4641  1E31                     	;# 
  4642  1E32                     	;# 
  4643  1E33                     	;# 
  4644  1E34                     	;# 
  4645  1E35                     	;# 
  4646  1E36                     	;# 
  4647  1E37                     	;# 
  4648  1E8F                     	;# 
  4649  1E90                     	;# 
  4650  1E91                     	;# 
  4651  1E92                     	;# 
  4652  1E93                     	;# 
  4653  1E94                     	;# 
  4654  1E95                     	;# 
  4655  1E96                     	;# 
  4656  1E97                     	;# 
  4657  1E9C                     	;# 
  4658  1E9D                     	;# 
  4659  1E9E                     	;# 
  4660  1EA1                     	;# 
  4661  1EA2                     	;# 
  4662  1EA3                     	;# 
  4663  1EA4                     	;# 
  4664  1EA9                     	;# 
  4665  1EAA                     	;# 
  4666  1EB1                     	;# 
  4667  1EB2                     	;# 
  4668  1EB8                     	;# 
  4669  1EB9                     	;# 
  4670  1EBA                     	;# 
  4671  1EBB                     	;# 
  4672  1EBC                     	;# 
  4673  1EBD                     	;# 
  4674  1EBE                     	;# 
  4675  1EC3                     	;# 
  4676  1EC5                     	;# 
  4677  1EC6                     	;# 
  4678  1EC7                     	;# 
  4679  1EC8                     	;# 
  4680  1EC9                     	;# 
  4681  1ECA                     	;# 
  4682  1ECB                     	;# 
  4683  1ECB                     	;# 
  4684  1ECB                     	;# 
  4685  1ECC                     	;# 
  4686  1ECC                     	;# 
  4687  1ECC                     	;# 
  4688  1F10                     	;# 
  4689  1F11                     	;# 
  4690  1F12                     	;# 
  4691  1F14                     	;# 
  4692  1F15                     	;# 
  4693  1F1C                     	;# 
  4694  1F1D                     	;# 
  4695  1F1E                     	;# 
  4696  1F1F                     	;# 
  4697  1F20                     	;# 
  4698  1F21                     	;# 
  4699  1F22                     	;# 
  4700  1F23                     	;# 
  4701  1F24                     	;# 
  4702  1F25                     	;# 
  4703  1F26                     	;# 
  4704  1F27                     	;# 
  4705  1F38                     	;# 
  4706  1F39                     	;# 
  4707  1F3A                     	;# 
  4708  1F3B                     	;# 
  4709  1F3C                     	;# 
  4710  1F3D                     	;# 
  4711  1F3E                     	;# 
  4712  1F3F                     	;# 
  4713  1F43                     	;# 
  4714  1F44                     	;# 
  4715  1F45                     	;# 
  4716  1F46                     	;# 
  4717  1F47                     	;# 
  4718  1F48                     	;# 
  4719  1F49                     	;# 
  4720  1F4A                     	;# 
  4721  1F4E                     	;# 
  4722  1F4F                     	;# 
  4723  1F50                     	;# 
  4724  1F51                     	;# 
  4725  1F52                     	;# 
  4726  1F53                     	;# 
  4727  1F54                     	;# 
  4728  1F55                     	;# 
  4729  1FE4                     	;# 
  4730  1FE5                     	;# 
  4731  1FE6                     	;# 
  4732  1FE7                     	;# 
  4733  1FE8                     	;# 
  4734  1FE8                     	;# 
  4735  1FE9                     	;# 
  4736  1FEA                     	;# 
  4737  1FEB                     	;# 
  4738  1FED                     	;# 
  4739  1FEE                     	;# 
  4740  1FEF                     	;# 
  4741  0000                     	;# 
  4742  0001                     	;# 
  4743  0002                     	;# 
  4744  0003                     	;# 
  4745  0004                     	;# 
  4746  0005                     	;# 
  4747  0006                     	;# 
  4748  0007                     	;# 
  4749  0008                     	;# 
  4750  0009                     	;# 
  4751  000A                     	;# 
  4752  000B                     	;# 
  4753  000C                     	;# 
  4754  000D                     	;# 
  4755  000E                     	;# 
  4756  0012                     	;# 
  4757  0013                     	;# 
  4758  0014                     	;# 
  4759  0018                     	;# 
  4760  0019                     	;# 
  4761  001A                     	;# 
  4762  008C                     	;# 
  4763  008C                     	;# 
  4764  008D                     	;# 
  4765  008E                     	;# 
  4766  008E                     	;# 
  4767  008F                     	;# 
  4768  0090                     	;# 
  4769  0090                     	;# 
  4770  0091                     	;# 
  4771  0092                     	;# 
  4772  0092                     	;# 
  4773  0093                     	;# 
  4774  0094                     	;# 
  4775  0094                     	;# 
  4776  0095                     	;# 
  4777  0096                     	;# 
  4778  0096                     	;# 
  4779  0097                     	;# 
  4780  0098                     	;# 
  4781  0099                     	;# 
  4782  009A                     	;# 
  4783  009B                     	;# 
  4784  009B                     	;# 
  4785  009C                     	;# 
  4786  009D                     	;# 
  4787  009D                     	;# 
  4788  009E                     	;# 
  4789  009F                     	;# 
  4790  010C                     	;# 
  4791  010C                     	;# 
  4792  010D                     	;# 
  4793  010E                     	;# 
  4794  010F                     	;# 
  4795  010F                     	;# 
  4796  0110                     	;# 
  4797  0111                     	;# 
  4798  0112                     	;# 
  4799  0113                     	;# 
  4800  0114                     	;# 
  4801  0115                     	;# 
  4802  0116                     	;# 
  4803  0117                     	;# 
  4804  0118                     	;# 
  4805  0119                     	;# 
  4806  0119                     	;# 
  4807  0119                     	;# 
  4808  011A                     	;# 
  4809  011A                     	;# 
  4810  011A                     	;# 
  4811  011B                     	;# 
  4812  011B                     	;# 
  4813  011B                     	;# 
  4814  011B                     	;# 
  4815  011B                     	;# 
  4816  011C                     	;# 
  4817  011C                     	;# 
  4818  011C                     	;# 
  4819  011D                     	;# 
  4820  011D                     	;# 
  4821  011D                     	;# 
  4822  011E                     	;# 
  4823  011E                     	;# 
  4824  011E                     	;# 
  4825  011F                     	;# 
  4826  011F                     	;# 
  4827  011F                     	;# 
  4828  011F                     	;# 
  4829  011F                     	;# 
  4830  018C                     	;# 
  4831  018D                     	;# 
  4832  018E                     	;# 
  4833  018F                     	;# 
  4834  0190                     	;# 
  4835  0191                     	;# 
  4836  0192                     	;# 
  4837  0196                     	;# 
  4838  0197                     	;# 
  4839  0198                     	;# 
  4840  0199                     	;# 
  4841  019A                     	;# 
  4842  019B                     	;# 
  4843  019C                     	;# 
  4844  020C                     	;# 
  4845  020D                     	;# 
  4846  020E                     	;# 
  4847  020E                     	;# 
  4848  020F                     	;# 
  4849  020F                     	;# 
  4850  0210                     	;# 
  4851  0210                     	;# 
  4852  0211                     	;# 
  4853  0211                     	;# 
  4854  0212                     	;# 
  4855  0213                     	;# 
  4856  0214                     	;# 
  4857  0214                     	;# 
  4858  0215                     	;# 
  4859  0215                     	;# 
  4860  0216                     	;# 
  4861  0216                     	;# 
  4862  0217                     	;# 
  4863  0217                     	;# 
  4864  0218                     	;# 
  4865  0219                     	;# 
  4866  021A                     	;# 
  4867  021A                     	;# 
  4868  021B                     	;# 
  4869  021B                     	;# 
  4870  021C                     	;# 
  4871  021C                     	;# 
  4872  021D                     	;# 
  4873  021D                     	;# 
  4874  021E                     	;# 
  4875  021F                     	;# 
  4876  028C                     	;# 
  4877  028C                     	;# 
  4878  028D                     	;# 
  4879  028D                     	;# 
  4880  028E                     	;# 
  4881  028F                     	;# 
  4882  0290                     	;# 
  4883  0291                     	;# 
  4884  0292                     	;# 
  4885  0292                     	;# 
  4886  0293                     	;# 
  4887  0293                     	;# 
  4888  0294                     	;# 
  4889  0295                     	;# 
  4890  0296                     	;# 
  4891  0297                     	;# 
  4892  0298                     	;# 
  4893  0298                     	;# 
  4894  0299                     	;# 
  4895  0299                     	;# 
  4896  029A                     	;# 
  4897  029B                     	;# 
  4898  029C                     	;# 
  4899  029D                     	;# 
  4900  029F                     	;# 
  4901  030C                     	;# 
  4902  030C                     	;# 
  4903  030D                     	;# 
  4904  030E                     	;# 
  4905  030F                     	;# 
  4906  0310                     	;# 
  4907  0310                     	;# 
  4908  0311                     	;# 
  4909  0312                     	;# 
  4910  0313                     	;# 
  4911  0314                     	;# 
  4912  0314                     	;# 
  4913  0315                     	;# 
  4914  0316                     	;# 
  4915  0317                     	;# 
  4916  0318                     	;# 
  4917  0318                     	;# 
  4918  0319                     	;# 
  4919  031A                     	;# 
  4920  031B                     	;# 
  4921  038C                     	;# 
  4922  038C                     	;# 
  4923  038D                     	;# 
  4924  038E                     	;# 
  4925  0390                     	;# 
  4926  0390                     	;# 
  4927  0391                     	;# 
  4928  0392                     	;# 
  4929  048C                     	;# 
  4930  048C                     	;# 
  4931  048D                     	;# 
  4932  048E                     	;# 
  4933  048F                     	;# 
  4934  048F                     	;# 
  4935  0490                     	;# 
  4936  0491                     	;# 
  4937  0492                     	;# 
  4938  0492                     	;# 
  4939  0493                     	;# 
  4940  0494                     	;# 
  4941  0495                     	;# 
  4942  0495                     	;# 
  4943  0496                     	;# 
  4944  0497                     	;# 
  4945  0498                     	;# 
  4946  0499                     	;# 
  4947  049A                     	;# 
  4948  049B                     	;# 
  4949  049C                     	;# 
  4950  049D                     	;# 
  4951  058C                     	;# 
  4952  058C                     	;# 
  4953  058D                     	;# 
  4954  058E                     	;# 
  4955  058F                     	;# 
  4956  058F                     	;# 
  4957  0590                     	;# 
  4958  0591                     	;# 
  4959  0592                     	;# 
  4960  0593                     	;# 
  4961  059C                     	;# 
  4962  059C                     	;# 
  4963  059D                     	;# 
  4964  059D                     	;# 
  4965  059E                     	;# 
  4966  059F                     	;# 
  4967  060C                     	;# 
  4968  060C                     	;# 
  4969  060D                     	;# 
  4970  060D                     	;# 
  4971  060E                     	;# 
  4972  060F                     	;# 
  4973  0610                     	;# 
  4974  0611                     	;# 
  4975  0612                     	;# 
  4976  0613                     	;# 
  4977  0614                     	;# 
  4978  0616                     	;# 
  4979  0616                     	;# 
  4980  0617                     	;# 
  4981  0617                     	;# 
  4982  0618                     	;# 
  4983  0619                     	;# 
  4984  061A                     	;# 
  4985  061B                     	;# 
  4986  061C                     	;# 
  4987  061D                     	;# 
  4988  061E                     	;# 
  4989  070C                     	;# 
  4990  070D                     	;# 
  4991  070E                     	;# 
  4992  070F                     	;# 
  4993  0710                     	;# 
  4994  0711                     	;# 
  4995  0712                     	;# 
  4996  0713                     	;# 
  4997  0714                     	;# 
  4998  0716                     	;# 
  4999  0717                     	;# 
  5000  0718                     	;# 
  5001  0719                     	;# 
  5002  071A                     	;# 
  5003  071B                     	;# 
  5004  071C                     	;# 
  5005  071D                     	;# 
  5006  071E                     	;# 
  5007  0796                     	;# 
  5008  0797                     	;# 
  5009  0798                     	;# 
  5010  0799                     	;# 
  5011  079A                     	;# 
  5012  079B                     	;# 
  5013  079C                     	;# 
  5014  079D                     	;# 
  5015  080C                     	;# 
  5016  080D                     	;# 
  5017  080E                     	;# 
  5018  080F                     	;# 
  5019  0810                     	;# 
  5020  0811                     	;# 
  5021  0812                     	;# 
  5022  0813                     	;# 
  5023  0814                     	;# 
  5024  081A                     	;# 
  5025  081A                     	;# 
  5026  081B                     	;# 
  5027  081C                     	;# 
  5028  081C                     	;# 
  5029  081D                     	;# 
  5030  081E                     	;# 
  5031  081F                     	;# 
  5032  088C                     	;# 
  5033  088D                     	;# 
  5034  088E                     	;# 
  5035  088F                     	;# 
  5036  0890                     	;# 
  5037  0891                     	;# 
  5038  0892                     	;# 
  5039  0893                     	;# 
  5040  0895                     	;# 
  5041  0896                     	;# 
  5042  0897                     	;# 
  5043  0898                     	;# 
  5044  0899                     	;# 
  5045  089A                     	;# 
  5046  089B                     	;# 
  5047  090C                     	;# 
  5048  090E                     	;# 
  5049  090F                     	;# 
  5050  091F                     	;# 
  5051  098F                     	;# 
  5052  098F                     	;# 
  5053  0990                     	;# 
  5054  0991                     	;# 
  5055  0992                     	;# 
  5056  0993                     	;# 
  5057  0994                     	;# 
  5058  0995                     	;# 
  5059  0996                     	;# 
  5060  0997                     	;# 
  5061  1E0F                     	;# 
  5062  1E10                     	;# 
  5063  1E11                     	;# 
  5064  1E12                     	;# 
  5065  1E13                     	;# 
  5066  1E14                     	;# 
  5067  1E15                     	;# 
  5068  1E16                     	;# 
  5069  1E17                     	;# 
  5070  1E18                     	;# 
  5071  1E19                     	;# 
  5072  1E1A                     	;# 
  5073  1E1B                     	;# 
  5074  1E1C                     	;# 
  5075  1E1D                     	;# 
  5076  1E1E                     	;# 
  5077  1E1F                     	;# 
  5078  1E20                     	;# 
  5079  1E21                     	;# 
  5080  1E22                     	;# 
  5081  1E23                     	;# 
  5082  1E24                     	;# 
  5083  1E25                     	;# 
  5084  1E26                     	;# 
  5085  1E27                     	;# 
  5086  1E28                     	;# 
  5087  1E29                     	;# 
  5088  1E2A                     	;# 
  5089  1E2B                     	;# 
  5090  1E2C                     	;# 
  5091  1E2D                     	;# 
  5092  1E2E                     	;# 
  5093  1E2F                     	;# 
  5094  1E30                     	;# 
  5095  1E31                     	;# 
  5096  1E32                     	;# 
  5097  1E33                     	;# 
  5098  1E34                     	;# 
  5099  1E35                     	;# 
  5100  1E36                     	;# 
  5101  1E37                     	;# 
  5102  1E8F                     	;# 
  5103  1E90                     	;# 
  5104  1E91                     	;# 
  5105  1E92                     	;# 
  5106  1E93                     	;# 
  5107  1E94                     	;# 
  5108  1E95                     	;# 
  5109  1E96                     	;# 
  5110  1E97                     	;# 
  5111  1E9C                     	;# 
  5112  1E9D                     	;# 
  5113  1E9E                     	;# 
  5114  1EA1                     	;# 
  5115  1EA2                     	;# 
  5116  1EA3                     	;# 
  5117  1EA4                     	;# 
  5118  1EA9                     	;# 
  5119  1EAA                     	;# 
  5120  1EB1                     	;# 
  5121  1EB2                     	;# 
  5122  1EB8                     	;# 
  5123  1EB9                     	;# 
  5124  1EBA                     	;# 
  5125  1EBB                     	;# 
  5126  1EBC                     	;# 
  5127  1EBD                     	;# 
  5128  1EBE                     	;# 
  5129  1EC3                     	;# 
  5130  1EC5                     	;# 
  5131  1EC6                     	;# 
  5132  1EC7                     	;# 
  5133  1EC8                     	;# 
  5134  1EC9                     	;# 
  5135  1ECA                     	;# 
  5136  1ECB                     	;# 
  5137  1ECB                     	;# 
  5138  1ECB                     	;# 
  5139  1ECC                     	;# 
  5140  1ECC                     	;# 
  5141  1ECC                     	;# 
  5142  1F10                     	;# 
  5143  1F11                     	;# 
  5144  1F12                     	;# 
  5145  1F14                     	;# 
  5146  1F15                     	;# 
  5147  1F1C                     	;# 
  5148  1F1D                     	;# 
  5149  1F1E                     	;# 
  5150  1F1F                     	;# 
  5151  1F20                     	;# 
  5152  1F21                     	;# 
  5153  1F22                     	;# 
  5154  1F23                     	;# 
  5155  1F24                     	;# 
  5156  1F25                     	;# 
  5157  1F26                     	;# 
  5158  1F27                     	;# 
  5159  1F38                     	;# 
  5160  1F39                     	;# 
  5161  1F3A                     	;# 
  5162  1F3B                     	;# 
  5163  1F3C                     	;# 
  5164  1F3D                     	;# 
  5165  1F3E                     	;# 
  5166  1F3F                     	;# 
  5167  1F43                     	;# 
  5168  1F44                     	;# 
  5169  1F45                     	;# 
  5170  1F46                     	;# 
  5171  1F47                     	;# 
  5172  1F48                     	;# 
  5173  1F49                     	;# 
  5174  1F4A                     	;# 
  5175  1F4E                     	;# 
  5176  1F4F                     	;# 
  5177  1F50                     	;# 
  5178  1F51                     	;# 
  5179  1F52                     	;# 
  5180  1F53                     	;# 
  5181  1F54                     	;# 
  5182  1F55                     	;# 
  5183  1FE4                     	;# 
  5184  1FE5                     	;# 
  5185  1FE6                     	;# 
  5186  1FE7                     	;# 
  5187  1FE8                     	;# 
  5188  1FE8                     	;# 
  5189  1FE9                     	;# 
  5190  1FEA                     	;# 
  5191  1FEB                     	;# 
  5192  1FED                     	;# 
  5193  1FEE                     	;# 
  5194  1FEF                     	;# 
  5195  0000                     	;# 
  5196  0001                     	;# 
  5197  0002                     	;# 
  5198  0003                     	;# 
  5199  0004                     	;# 
  5200  0005                     	;# 
  5201  0006                     	;# 
  5202  0007                     	;# 
  5203  0008                     	;# 
  5204  0009                     	;# 
  5205  000A                     	;# 
  5206  000B                     	;# 
  5207  000C                     	;# 
  5208  000D                     	;# 
  5209  000E                     	;# 
  5210  0012                     	;# 
  5211  0013                     	;# 
  5212  0014                     	;# 
  5213  0018                     	;# 
  5214  0019                     	;# 
  5215  001A                     	;# 
  5216  008C                     	;# 
  5217  008C                     	;# 
  5218  008D                     	;# 
  5219  008E                     	;# 
  5220  008E                     	;# 
  5221  008F                     	;# 
  5222  0090                     	;# 
  5223  0090                     	;# 
  5224  0091                     	;# 
  5225  0092                     	;# 
  5226  0092                     	;# 
  5227  0093                     	;# 
  5228  0094                     	;# 
  5229  0094                     	;# 
  5230  0095                     	;# 
  5231  0096                     	;# 
  5232  0096                     	;# 
  5233  0097                     	;# 
  5234  0098                     	;# 
  5235  0099                     	;# 
  5236  009A                     	;# 
  5237  009B                     	;# 
  5238  009B                     	;# 
  5239  009C                     	;# 
  5240  009D                     	;# 
  5241  009D                     	;# 
  5242  009E                     	;# 
  5243  009F                     	;# 
  5244  010C                     	;# 
  5245  010C                     	;# 
  5246  010D                     	;# 
  5247  010E                     	;# 
  5248  010F                     	;# 
  5249  010F                     	;# 
  5250  0110                     	;# 
  5251  0111                     	;# 
  5252  0112                     	;# 
  5253  0113                     	;# 
  5254  0114                     	;# 
  5255  0115                     	;# 
  5256  0116                     	;# 
  5257  0117                     	;# 
  5258  0118                     	;# 
  5259  0119                     	;# 
  5260  0119                     	;# 
  5261  0119                     	;# 
  5262  011A                     	;# 
  5263  011A                     	;# 
  5264  011A                     	;# 
  5265  011B                     	;# 
  5266  011B                     	;# 
  5267  011B                     	;# 
  5268  011B                     	;# 
  5269  011B                     	;# 
  5270  011C                     	;# 
  5271  011C                     	;# 
  5272  011C                     	;# 
  5273  011D                     	;# 
  5274  011D                     	;# 
  5275  011D                     	;# 
  5276  011E                     	;# 
  5277  011E                     	;# 
  5278  011E                     	;# 
  5279  011F                     	;# 
  5280  011F                     	;# 
  5281  011F                     	;# 
  5282  011F                     	;# 
  5283  011F                     	;# 
  5284  018C                     	;# 
  5285  018D                     	;# 
  5286  018E                     	;# 
  5287  018F                     	;# 
  5288  0190                     	;# 
  5289  0191                     	;# 
  5290  0192                     	;# 
  5291  0196                     	;# 
  5292  0197                     	;# 
  5293  0198                     	;# 
  5294  0199                     	;# 
  5295  019A                     	;# 
  5296  019B                     	;# 
  5297  019C                     	;# 
  5298  020C                     	;# 
  5299  020D                     	;# 
  5300  020E                     	;# 
  5301  020E                     	;# 
  5302  020F                     	;# 
  5303  020F                     	;# 
  5304  0210                     	;# 
  5305  0210                     	;# 
  5306  0211                     	;# 
  5307  0211                     	;# 
  5308  0212                     	;# 
  5309  0213                     	;# 
  5310  0214                     	;# 
  5311  0214                     	;# 
  5312  0215                     	;# 
  5313  0215                     	;# 
  5314  0216                     	;# 
  5315  0216                     	;# 
  5316  0217                     	;# 
  5317  0217                     	;# 
  5318  0218                     	;# 
  5319  0219                     	;# 
  5320  021A                     	;# 
  5321  021A                     	;# 
  5322  021B                     	;# 
  5323  021B                     	;# 
  5324  021C                     	;# 
  5325  021C                     	;# 
  5326  021D                     	;# 
  5327  021D                     	;# 
  5328  021E                     	;# 
  5329  021F                     	;# 
  5330  028C                     	;# 
  5331  028C                     	;# 
  5332  028D                     	;# 
  5333  028D                     	;# 
  5334  028E                     	;# 
  5335  028F                     	;# 
  5336  0290                     	;# 
  5337  0291                     	;# 
  5338  0292                     	;# 
  5339  0292                     	;# 
  5340  0293                     	;# 
  5341  0293                     	;# 
  5342  0294                     	;# 
  5343  0295                     	;# 
  5344  0296                     	;# 
  5345  0297                     	;# 
  5346  0298                     	;# 
  5347  0298                     	;# 
  5348  0299                     	;# 
  5349  0299                     	;# 
  5350  029A                     	;# 
  5351  029B                     	;# 
  5352  029C                     	;# 
  5353  029D                     	;# 
  5354  029F                     	;# 
  5355  030C                     	;# 
  5356  030C                     	;# 
  5357  030D                     	;# 
  5358  030E                     	;# 
  5359  030F                     	;# 
  5360  0310                     	;# 
  5361  0310                     	;# 
  5362  0311                     	;# 
  5363  0312                     	;# 
  5364  0313                     	;# 
  5365  0314                     	;# 
  5366  0314                     	;# 
  5367  0315                     	;# 
  5368  0316                     	;# 
  5369  0317                     	;# 
  5370  0318                     	;# 
  5371  0318                     	;# 
  5372  0319                     	;# 
  5373  031A                     	;# 
  5374  031B                     	;# 
  5375  038C                     	;# 
  5376  038C                     	;# 
  5377  038D                     	;# 
  5378  038E                     	;# 
  5379  0390                     	;# 
  5380  0390                     	;# 
  5381  0391                     	;# 
  5382  0392                     	;# 
  5383  048C                     	;# 
  5384  048C                     	;# 
  5385  048D                     	;# 
  5386  048E                     	;# 
  5387  048F                     	;# 
  5388  048F                     	;# 
  5389  0490                     	;# 
  5390  0491                     	;# 
  5391  0492                     	;# 
  5392  0492                     	;# 
  5393  0493                     	;# 
  5394  0494                     	;# 
  5395  0495                     	;# 
  5396  0495                     	;# 
  5397  0496                     	;# 
  5398  0497                     	;# 
  5399  0498                     	;# 
  5400  0499                     	;# 
  5401  049A                     	;# 
  5402  049B                     	;# 
  5403  049C                     	;# 
  5404  049D                     	;# 
  5405  058C                     	;# 
  5406  058C                     	;# 
  5407  058D                     	;# 
  5408  058E                     	;# 
  5409  058F                     	;# 
  5410  058F                     	;# 
  5411  0590                     	;# 
  5412  0591                     	;# 
  5413  0592                     	;# 
  5414  0593                     	;# 
  5415  059C                     	;# 
  5416  059C                     	;# 
  5417  059D                     	;# 
  5418  059D                     	;# 
  5419  059E                     	;# 
  5420  059F                     	;# 
  5421  060C                     	;# 
  5422  060C                     	;# 
  5423  060D                     	;# 
  5424  060D                     	;# 
  5425  060E                     	;# 
  5426  060F                     	;# 
  5427  0610                     	;# 
  5428  0611                     	;# 
  5429  0612                     	;# 
  5430  0613                     	;# 
  5431  0614                     	;# 
  5432  0616                     	;# 
  5433  0616                     	;# 
  5434  0617                     	;# 
  5435  0617                     	;# 
  5436  0618                     	;# 
  5437  0619                     	;# 
  5438  061A                     	;# 
  5439  061B                     	;# 
  5440  061C                     	;# 
  5441  061D                     	;# 
  5442  061E                     	;# 
  5443  070C                     	;# 
  5444  070D                     	;# 
  5445  070E                     	;# 
  5446  070F                     	;# 
  5447  0710                     	;# 
  5448  0711                     	;# 
  5449  0712                     	;# 
  5450  0713                     	;# 
  5451  0714                     	;# 
  5452  0716                     	;# 
  5453  0717                     	;# 
  5454  0718                     	;# 
  5455  0719                     	;# 
  5456  071A                     	;# 
  5457  071B                     	;# 
  5458  071C                     	;# 
  5459  071D                     	;# 
  5460  071E                     	;# 
  5461  0796                     	;# 
  5462  0797                     	;# 
  5463  0798                     	;# 
  5464  0799                     	;# 
  5465  079A                     	;# 
  5466  079B                     	;# 
  5467  079C                     	;# 
  5468  079D                     	;# 
  5469  080C                     	;# 
  5470  080D                     	;# 
  5471  080E                     	;# 
  5472  080F                     	;# 
  5473  0810                     	;# 
  5474  0811                     	;# 
  5475  0812                     	;# 
  5476  0813                     	;# 
  5477  0814                     	;# 
  5478  081A                     	;# 
  5479  081A                     	;# 
  5480  081B                     	;# 
  5481  081C                     	;# 
  5482  081C                     	;# 
  5483  081D                     	;# 
  5484  081E                     	;# 
  5485  081F                     	;# 
  5486  088C                     	;# 
  5487  088D                     	;# 
  5488  088E                     	;# 
  5489  088F                     	;# 
  5490  0890                     	;# 
  5491  0891                     	;# 
  5492  0892                     	;# 
  5493  0893                     	;# 
  5494  0895                     	;# 
  5495  0896                     	;# 
  5496  0897                     	;# 
  5497  0898                     	;# 
  5498  0899                     	;# 
  5499  089A                     	;# 
  5500  089B                     	;# 
  5501  090C                     	;# 
  5502  090E                     	;# 
  5503  090F                     	;# 
  5504  091F                     	;# 
  5505  098F                     	;# 
  5506  098F                     	;# 
  5507  0990                     	;# 
  5508  0991                     	;# 
  5509  0992                     	;# 
  5510  0993                     	;# 
  5511  0994                     	;# 
  5512  0995                     	;# 
  5513  0996                     	;# 
  5514  0997                     	;# 
  5515  1E0F                     	;# 
  5516  1E10                     	;# 
  5517  1E11                     	;# 
  5518  1E12                     	;# 
  5519  1E13                     	;# 
  5520  1E14                     	;# 
  5521  1E15                     	;# 
  5522  1E16                     	;# 
  5523  1E17                     	;# 
  5524  1E18                     	;# 
  5525  1E19                     	;# 
  5526  1E1A                     	;# 
  5527  1E1B                     	;# 
  5528  1E1C                     	;# 
  5529  1E1D                     	;# 
  5530  1E1E                     	;# 
  5531  1E1F                     	;# 
  5532  1E20                     	;# 
  5533  1E21                     	;# 
  5534  1E22                     	;# 
  5535  1E23                     	;# 
  5536  1E24                     	;# 
  5537  1E25                     	;# 
  5538  1E26                     	;# 
  5539  1E27                     	;# 
  5540  1E28                     	;# 
  5541  1E29                     	;# 
  5542  1E2A                     	;# 
  5543  1E2B                     	;# 
  5544  1E2C                     	;# 
  5545  1E2D                     	;# 
  5546  1E2E                     	;# 
  5547  1E2F                     	;# 
  5548  1E30                     	;# 
  5549  1E31                     	;# 
  5550  1E32                     	;# 
  5551  1E33                     	;# 
  5552  1E34                     	;# 
  5553  1E35                     	;# 
  5554  1E36                     	;# 
  5555  1E37                     	;# 
  5556  1E8F                     	;# 
  5557  1E90                     	;# 
  5558  1E91                     	;# 
  5559  1E92                     	;# 
  5560  1E93                     	;# 
  5561  1E94                     	;# 
  5562  1E95                     	;# 
  5563  1E96                     	;# 
  5564  1E97                     	;# 
  5565  1E9C                     	;# 
  5566  1E9D                     	;# 
  5567  1E9E                     	;# 
  5568  1EA1                     	;# 
  5569  1EA2                     	;# 
  5570  1EA3                     	;# 
  5571  1EA4                     	;# 
  5572  1EA9                     	;# 
  5573  1EAA                     	;# 
  5574  1EB1                     	;# 
  5575  1EB2                     	;# 
  5576  1EB8                     	;# 
  5577  1EB9                     	;# 
  5578  1EBA                     	;# 
  5579  1EBB                     	;# 
  5580  1EBC                     	;# 
  5581  1EBD                     	;# 
  5582  1EBE                     	;# 
  5583  1EC3                     	;# 
  5584  1EC5                     	;# 
  5585  1EC6                     	;# 
  5586  1EC7                     	;# 
  5587  1EC8                     	;# 
  5588  1EC9                     	;# 
  5589  1ECA                     	;# 
  5590  1ECB                     	;# 
  5591  1ECB                     	;# 
  5592  1ECB                     	;# 
  5593  1ECC                     	;# 
  5594  1ECC                     	;# 
  5595  1ECC                     	;# 
  5596  1F10                     	;# 
  5597  1F11                     	;# 
  5598  1F12                     	;# 
  5599  1F14                     	;# 
  5600  1F15                     	;# 
  5601  1F1C                     	;# 
  5602  1F1D                     	;# 
  5603  1F1E                     	;# 
  5604  1F1F                     	;# 
  5605  1F20                     	;# 
  5606  1F21                     	;# 
  5607  1F22                     	;# 
  5608  1F23                     	;# 
  5609  1F24                     	;# 
  5610  1F25                     	;# 
  5611  1F26                     	;# 
  5612  1F27                     	;# 
  5613  1F38                     	;# 
  5614  1F39                     	;# 
  5615  1F3A                     	;# 
  5616  1F3B                     	;# 
  5617  1F3C                     	;# 
  5618  1F3D                     	;# 
  5619  1F3E                     	;# 
  5620  1F3F                     	;# 
  5621  1F43                     	;# 
  5622  1F44                     	;# 
  5623  1F45                     	;# 
  5624  1F46                     	;# 
  5625  1F47                     	;# 
  5626  1F48                     	;# 
  5627  1F49                     	;# 
  5628  1F4A                     	;# 
  5629  1F4E                     	;# 
  5630  1F4F                     	;# 
  5631  1F50                     	;# 
  5632  1F51                     	;# 
  5633  1F52                     	;# 
  5634  1F53                     	;# 
  5635  1F54                     	;# 
  5636  1F55                     	;# 
  5637  1FE4                     	;# 
  5638  1FE5                     	;# 
  5639  1FE6                     	;# 
  5640  1FE7                     	;# 
  5641  1FE8                     	;# 
  5642  1FE8                     	;# 
  5643  1FE9                     	;# 
  5644  1FEA                     	;# 
  5645  1FEB                     	;# 
  5646  1FED                     	;# 
  5647  1FEE                     	;# 
  5648  1FEF                     	;# 
  5649  0000                     	;# 
  5650  0001                     	;# 
  5651  0002                     	;# 
  5652  0003                     	;# 
  5653  0004                     	;# 
  5654  0005                     	;# 
  5655  0006                     	;# 
  5656  0007                     	;# 
  5657  0008                     	;# 
  5658  0009                     	;# 
  5659  000A                     	;# 
  5660  000B                     	;# 
  5661  000C                     	;# 
  5662  000D                     	;# 
  5663  000E                     	;# 
  5664  0012                     	;# 
  5665  0013                     	;# 
  5666  0014                     	;# 
  5667  0018                     	;# 
  5668  0019                     	;# 
  5669  001A                     	;# 
  5670  008C                     	;# 
  5671  008C                     	;# 
  5672  008D                     	;# 
  5673  008E                     	;# 
  5674  008E                     	;# 
  5675  008F                     	;# 
  5676  0090                     	;# 
  5677  0090                     	;# 
  5678  0091                     	;# 
  5679  0092                     	;# 
  5680  0092                     	;# 
  5681  0093                     	;# 
  5682  0094                     	;# 
  5683  0094                     	;# 
  5684  0095                     	;# 
  5685  0096                     	;# 
  5686  0096                     	;# 
  5687  0097                     	;# 
  5688  0098                     	;# 
  5689  0099                     	;# 
  5690  009A                     	;# 
  5691  009B                     	;# 
  5692  009B                     	;# 
  5693  009C                     	;# 
  5694  009D                     	;# 
  5695  009D                     	;# 
  5696  009E                     	;# 
  5697  009F                     	;# 
  5698  010C                     	;# 
  5699  010C                     	;# 
  5700  010D                     	;# 
  5701  010E                     	;# 
  5702  010F                     	;# 
  5703  010F                     	;# 
  5704  0110                     	;# 
  5705  0111                     	;# 
  5706  0112                     	;# 
  5707  0113                     	;# 
  5708  0114                     	;# 
  5709  0115                     	;# 
  5710  0116                     	;# 
  5711  0117                     	;# 
  5712  0118                     	;# 
  5713  0119                     	;# 
  5714  0119                     	;# 
  5715  0119                     	;# 
  5716  011A                     	;# 
  5717  011A                     	;# 
  5718  011A                     	;# 
  5719  011B                     	;# 
  5720  011B                     	;# 
  5721  011B                     	;# 
  5722  011B                     	;# 
  5723  011B                     	;# 
  5724  011C                     	;# 
  5725  011C                     	;# 
  5726  011C                     	;# 
  5727  011D                     	;# 
  5728  011D                     	;# 
  5729  011D                     	;# 
  5730  011E                     	;# 
  5731  011E                     	;# 
  5732  011E                     	;# 
  5733  011F                     	;# 
  5734  011F                     	;# 
  5735  011F                     	;# 
  5736  011F                     	;# 
  5737  011F                     	;# 
  5738  018C                     	;# 
  5739  018D                     	;# 
  5740  018E                     	;# 
  5741  018F                     	;# 
  5742  0190                     	;# 
  5743  0191                     	;# 
  5744  0192                     	;# 
  5745  0196                     	;# 
  5746  0197                     	;# 
  5747  0198                     	;# 
  5748  0199                     	;# 
  5749  019A                     	;# 
  5750  019B                     	;# 
  5751  019C                     	;# 
  5752  020C                     	;# 
  5753  020D                     	;# 
  5754  020E                     	;# 
  5755  020E                     	;# 
  5756  020F                     	;# 
  5757  020F                     	;# 
  5758  0210                     	;# 
  5759  0210                     	;# 
  5760  0211                     	;# 
  5761  0211                     	;# 
  5762  0212                     	;# 
  5763  0213                     	;# 
  5764  0214                     	;# 
  5765  0214                     	;# 
  5766  0215                     	;# 
  5767  0215                     	;# 
  5768  0216                     	;# 
  5769  0216                     	;# 
  5770  0217                     	;# 
  5771  0217                     	;# 
  5772  0218                     	;# 
  5773  0219                     	;# 
  5774  021A                     	;# 
  5775  021A                     	;# 
  5776  021B                     	;# 
  5777  021B                     	;# 
  5778  021C                     	;# 
  5779  021C                     	;# 
  5780  021D                     	;# 
  5781  021D                     	;# 
  5782  021E                     	;# 
  5783  021F                     	;# 
  5784  028C                     	;# 
  5785  028C                     	;# 
  5786  028D                     	;# 
  5787  028D                     	;# 
  5788  028E                     	;# 
  5789  028F                     	;# 
  5790  0290                     	;# 
  5791  0291                     	;# 
  5792  0292                     	;# 
  5793  0292                     	;# 
  5794  0293                     	;# 
  5795  0293                     	;# 
  5796  0294                     	;# 
  5797  0295                     	;# 
  5798  0296                     	;# 
  5799  0297                     	;# 
  5800  0298                     	;# 
  5801  0298                     	;# 
  5802  0299                     	;# 
  5803  0299                     	;# 
  5804  029A                     	;# 
  5805  029B                     	;# 
  5806  029C                     	;# 
  5807  029D                     	;# 
  5808  029F                     	;# 
  5809  030C                     	;# 
  5810  030C                     	;# 
  5811  030D                     	;# 
  5812  030E                     	;# 
  5813  030F                     	;# 
  5814  0310                     	;# 
  5815  0310                     	;# 
  5816  0311                     	;# 
  5817  0312                     	;# 
  5818  0313                     	;# 
  5819  0314                     	;# 
  5820  0314                     	;# 
  5821  0315                     	;# 
  5822  0316                     	;# 
  5823  0317                     	;# 
  5824  0318                     	;# 
  5825  0318                     	;# 
  5826  0319                     	;# 
  5827  031A                     	;# 
  5828  031B                     	;# 
  5829  038C                     	;# 
  5830  038C                     	;# 
  5831  038D                     	;# 
  5832  038E                     	;# 
  5833  0390                     	;# 
  5834  0390                     	;# 
  5835  0391                     	;# 
  5836  0392                     	;# 
  5837  048C                     	;# 
  5838  048C                     	;# 
  5839  048D                     	;# 
  5840  048E                     	;# 
  5841  048F                     	;# 
  5842  048F                     	;# 
  5843  0490                     	;# 
  5844  0491                     	;# 
  5845  0492                     	;# 
  5846  0492                     	;# 
  5847  0493                     	;# 
  5848  0494                     	;# 
  5849  0495                     	;# 
  5850  0495                     	;# 
  5851  0496                     	;# 
  5852  0497                     	;# 
  5853  0498                     	;# 
  5854  0499                     	;# 
  5855  049A                     	;# 
  5856  049B                     	;# 
  5857  049C                     	;# 
  5858  049D                     	;# 
  5859  058C                     	;# 
  5860  058C                     	;# 
  5861  058D                     	;# 
  5862  058E                     	;# 
  5863  058F                     	;# 
  5864  058F                     	;# 
  5865  0590                     	;# 
  5866  0591                     	;# 
  5867  0592                     	;# 
  5868  0593                     	;# 
  5869  059C                     	;# 
  5870  059C                     	;# 
  5871  059D                     	;# 
  5872  059D                     	;# 
  5873  059E                     	;# 
  5874  059F                     	;# 
  5875  060C                     	;# 
  5876  060C                     	;# 
  5877  060D                     	;# 
  5878  060D                     	;# 
  5879  060E                     	;# 
  5880  060F                     	;# 
  5881  0610                     	;# 
  5882  0611                     	;# 
  5883  0612                     	;# 
  5884  0613                     	;# 
  5885  0614                     	;# 
  5886  0616                     	;# 
  5887  0616                     	;# 
  5888  0617                     	;# 
  5889  0617                     	;# 
  5890  0618                     	;# 
  5891  0619                     	;# 
  5892  061A                     	;# 
  5893  061B                     	;# 
  5894  061C                     	;# 
  5895  061D                     	;# 
  5896  061E                     	;# 
  5897  070C                     	;# 
  5898  070D                     	;# 
  5899  070E                     	;# 
  5900  070F                     	;# 
  5901  0710                     	;# 
  5902  0711                     	;# 
  5903  0712                     	;# 
  5904  0713                     	;# 
  5905  0714                     	;# 
  5906  0716                     	;# 
  5907  0717                     	;# 
  5908  0718                     	;# 
  5909  0719                     	;# 
  5910  071A                     	;# 
  5911  071B                     	;# 
  5912  071C                     	;# 
  5913  071D                     	;# 
  5914  071E                     	;# 
  5915  0796                     	;# 
  5916  0797                     	;# 
  5917  0798                     	;# 
  5918  0799                     	;# 
  5919  079A                     	;# 
  5920  079B                     	;# 
  5921  079C                     	;# 
  5922  079D                     	;# 
  5923  080C                     	;# 
  5924  080D                     	;# 
  5925  080E                     	;# 
  5926  080F                     	;# 
  5927  0810                     	;# 
  5928  0811                     	;# 
  5929  0812                     	;# 
  5930  0813                     	;# 
  5931  0814                     	;# 
  5932  081A                     	;# 
  5933  081A                     	;# 
  5934  081B                     	;# 
  5935  081C                     	;# 
  5936  081C                     	;# 
  5937  081D                     	;# 
  5938  081E                     	;# 
  5939  081F                     	;# 
  5940  088C                     	;# 
  5941  088D                     	;# 
  5942  088E                     	;# 
  5943  088F                     	;# 
  5944  0890                     	;# 
  5945  0891                     	;# 
  5946  0892                     	;# 
  5947  0893                     	;# 
  5948  0895                     	;# 
  5949  0896                     	;# 
  5950  0897                     	;# 
  5951  0898                     	;# 
  5952  0899                     	;# 
  5953  089A                     	;# 
  5954  089B                     	;# 
  5955  090C                     	;# 
  5956  090E                     	;# 
  5957  090F                     	;# 
  5958  091F                     	;# 
  5959  098F                     	;# 
  5960  098F                     	;# 
  5961  0990                     	;# 
  5962  0991                     	;# 
  5963  0992                     	;# 
  5964  0993                     	;# 
  5965  0994                     	;# 
  5966  0995                     	;# 
  5967  0996                     	;# 
  5968  0997                     	;# 
  5969  1E0F                     	;# 
  5970  1E10                     	;# 
  5971  1E11                     	;# 
  5972  1E12                     	;# 
  5973  1E13                     	;# 
  5974  1E14                     	;# 
  5975  1E15                     	;# 
  5976  1E16                     	;# 
  5977  1E17                     	;# 
  5978  1E18                     	;# 
  5979  1E19                     	;# 
  5980  1E1A                     	;# 
  5981  1E1B                     	;# 
  5982  1E1C                     	;# 
  5983  1E1D                     	;# 
  5984  1E1E                     	;# 
  5985  1E1F                     	;# 
  5986  1E20                     	;# 
  5987  1E21                     	;# 
  5988  1E22                     	;# 
  5989  1E23                     	;# 
  5990  1E24                     	;# 
  5991  1E25                     	;# 
  5992  1E26                     	;# 
  5993  1E27                     	;# 
  5994  1E28                     	;# 
  5995  1E29                     	;# 
  5996  1E2A                     	;# 
  5997  1E2B                     	;# 
  5998  1E2C                     	;# 
  5999  1E2D                     	;# 
  6000  1E2E                     	;# 
  6001  1E2F                     	;# 
  6002  1E30                     	;# 
  6003  1E31                     	;# 
  6004  1E32                     	;# 
  6005  1E33                     	;# 
  6006  1E34                     	;# 
  6007  1E35                     	;# 
  6008  1E36                     	;# 
  6009  1E37                     	;# 
  6010  1E8F                     	;# 
  6011  1E90                     	;# 
  6012  1E91                     	;# 
  6013  1E92                     	;# 
  6014  1E93                     	;# 
  6015  1E94                     	;# 
  6016  1E95                     	;# 
  6017  1E96                     	;# 
  6018  1E97                     	;# 
  6019  1E9C                     	;# 
  6020  1E9D                     	;# 
  6021  1E9E                     	;# 
  6022  1EA1                     	;# 
  6023  1EA2                     	;# 
  6024  1EA3                     	;# 
  6025  1EA4                     	;# 
  6026  1EA9                     	;# 
  6027  1EAA                     	;# 
  6028  1EB1                     	;# 
  6029  1EB2                     	;# 
  6030  1EB8                     	;# 
  6031  1EB9                     	;# 
  6032  1EBA                     	;# 
  6033  1EBB                     	;# 
  6034  1EBC                     	;# 
  6035  1EBD                     	;# 
  6036  1EBE                     	;# 
  6037  1EC3                     	;# 
  6038  1EC5                     	;# 
  6039  1EC6                     	;# 
  6040  1EC7                     	;# 
  6041  1EC8                     	;# 
  6042  1EC9                     	;# 
  6043  1ECA                     	;# 
  6044  1ECB                     	;# 
  6045  1ECB                     	;# 
  6046  1ECB                     	;# 
  6047  1ECC                     	;# 
  6048  1ECC                     	;# 
  6049  1ECC                     	;# 
  6050  1F10                     	;# 
  6051  1F11                     	;# 
  6052  1F12                     	;# 
  6053  1F14                     	;# 
  6054  1F15                     	;# 
  6055  1F1C                     	;# 
  6056  1F1D                     	;# 
  6057  1F1E                     	;# 
  6058  1F1F                     	;# 
  6059  1F20                     	;# 
  6060  1F21                     	;# 
  6061  1F22                     	;# 
  6062  1F23                     	;# 
  6063  1F24                     	;# 
  6064  1F25                     	;# 
  6065  1F26                     	;# 
  6066  1F27                     	;# 
  6067  1F38                     	;# 
  6068  1F39                     	;# 
  6069  1F3A                     	;# 
  6070  1F3B                     	;# 
  6071  1F3C                     	;# 
  6072  1F3D                     	;# 
  6073  1F3E                     	;# 
  6074  1F3F                     	;# 
  6075  1F43                     	;# 
  6076  1F44                     	;# 
  6077  1F45                     	;# 
  6078  1F46                     	;# 
  6079  1F47                     	;# 
  6080  1F48                     	;# 
  6081  1F49                     	;# 
  6082  1F4A                     	;# 
  6083  1F4E                     	;# 
  6084  1F4F                     	;# 
  6085  1F50                     	;# 
  6086  1F51                     	;# 
  6087  1F52                     	;# 
  6088  1F53                     	;# 
  6089  1F54                     	;# 
  6090  1F55                     	;# 
  6091  1FE4                     	;# 
  6092  1FE5                     	;# 
  6093  1FE6                     	;# 
  6094  1FE7                     	;# 
  6095  1FE8                     	;# 
  6096  1FE8                     	;# 
  6097  1FE9                     	;# 
  6098  1FEA                     	;# 
  6099  1FEB                     	;# 
  6100  1FED                     	;# 
  6101  1FEE                     	;# 
  6102  1FEF                     	;# 
  6103  0000                     	;# 
  6104  0001                     	;# 
  6105  0002                     	;# 
  6106  0003                     	;# 
  6107  0004                     	;# 
  6108  0005                     	;# 
  6109  0006                     	;# 
  6110  0007                     	;# 
  6111  0008                     	;# 
  6112  0009                     	;# 
  6113  000A                     	;# 
  6114  000B                     	;# 
  6115  000C                     	;# 
  6116  000D                     	;# 
  6117  000E                     	;# 
  6118  0012                     	;# 
  6119  0013                     	;# 
  6120  0014                     	;# 
  6121  0018                     	;# 
  6122  0019                     	;# 
  6123  001A                     	;# 
  6124  008C                     	;# 
  6125  008C                     	;# 
  6126  008D                     	;# 
  6127  008E                     	;# 
  6128  008E                     	;# 
  6129  008F                     	;# 
  6130  0090                     	;# 
  6131  0090                     	;# 
  6132  0091                     	;# 
  6133  0092                     	;# 
  6134  0092                     	;# 
  6135  0093                     	;# 
  6136  0094                     	;# 
  6137  0094                     	;# 
  6138  0095                     	;# 
  6139  0096                     	;# 
  6140  0096                     	;# 
  6141  0097                     	;# 
  6142  0098                     	;# 
  6143  0099                     	;# 
  6144  009A                     	;# 
  6145  009B                     	;# 
  6146  009B                     	;# 
  6147  009C                     	;# 
  6148  009D                     	;# 
  6149  009D                     	;# 
  6150  009E                     	;# 
  6151  009F                     	;# 
  6152  010C                     	;# 
  6153  010C                     	;# 
  6154  010D                     	;# 
  6155  010E                     	;# 
  6156  010F                     	;# 
  6157  010F                     	;# 
  6158  0110                     	;# 
  6159  0111                     	;# 
  6160  0112                     	;# 
  6161  0113                     	;# 
  6162  0114                     	;# 
  6163  0115                     	;# 
  6164  0116                     	;# 
  6165  0117                     	;# 
  6166  0118                     	;# 
  6167  0119                     	;# 
  6168  0119                     	;# 
  6169  0119                     	;# 
  6170  011A                     	;# 
  6171  011A                     	;# 
  6172  011A                     	;# 
  6173  011B                     	;# 
  6174  011B                     	;# 
  6175  011B                     	;# 
  6176  011B                     	;# 
  6177  011B                     	;# 
  6178  011C                     	;# 
  6179  011C                     	;# 
  6180  011C                     	;# 
  6181  011D                     	;# 
  6182  011D                     	;# 
  6183  011D                     	;# 
  6184  011E                     	;# 
  6185  011E                     	;# 
  6186  011E                     	;# 
  6187  011F                     	;# 
  6188  011F                     	;# 
  6189  011F                     	;# 
  6190  011F                     	;# 
  6191  011F                     	;# 
  6192  018C                     	;# 
  6193  018D                     	;# 
  6194  018E                     	;# 
  6195  018F                     	;# 
  6196  0190                     	;# 
  6197  0191                     	;# 
  6198  0192                     	;# 
  6199  0196                     	;# 
  6200  0197                     	;# 
  6201  0198                     	;# 
  6202  0199                     	;# 
  6203  019A                     	;# 
  6204  019B                     	;# 
  6205  019C                     	;# 
  6206  020C                     	;# 
  6207  020D                     	;# 
  6208  020E                     	;# 
  6209  020E                     	;# 
  6210  020F                     	;# 
  6211  020F                     	;# 
  6212  0210                     	;# 
  6213  0210                     	;# 
  6214  0211                     	;# 
  6215  0211                     	;# 
  6216  0212                     	;# 
  6217  0213                     	;# 
  6218  0214                     	;# 
  6219  0214                     	;# 
  6220  0215                     	;# 
  6221  0215                     	;# 
  6222  0216                     	;# 
  6223  0216                     	;# 
  6224  0217                     	;# 
  6225  0217                     	;# 
  6226  0218                     	;# 
  6227  0219                     	;# 
  6228  021A                     	;# 
  6229  021A                     	;# 
  6230  021B                     	;# 
  6231  021B                     	;# 
  6232  021C                     	;# 
  6233  021C                     	;# 
  6234  021D                     	;# 
  6235  021D                     	;# 
  6236  021E                     	;# 
  6237  021F                     	;# 
  6238  028C                     	;# 
  6239  028C                     	;# 
  6240  028D                     	;# 
  6241  028D                     	;# 
  6242  028E                     	;# 
  6243  028F                     	;# 
  6244  0290                     	;# 
  6245  0291                     	;# 
  6246  0292                     	;# 
  6247  0292                     	;# 
  6248  0293                     	;# 
  6249  0293                     	;# 
  6250  0294                     	;# 
  6251  0295                     	;# 
  6252  0296                     	;# 
  6253  0297                     	;# 
  6254  0298                     	;# 
  6255  0298                     	;# 
  6256  0299                     	;# 
  6257  0299                     	;# 
  6258  029A                     	;# 
  6259  029B                     	;# 
  6260  029C                     	;# 
  6261  029D                     	;# 
  6262  029F                     	;# 
  6263  030C                     	;# 
  6264  030C                     	;# 
  6265  030D                     	;# 
  6266  030E                     	;# 
  6267  030F                     	;# 
  6268  0310                     	;# 
  6269  0310                     	;# 
  6270  0311                     	;# 
  6271  0312                     	;# 
  6272  0313                     	;# 
  6273  0314                     	;# 
  6274  0314                     	;# 
  6275  0315                     	;# 
  6276  0316                     	;# 
  6277  0317                     	;# 
  6278  0318                     	;# 
  6279  0318                     	;# 
  6280  0319                     	;# 
  6281  031A                     	;# 
  6282  031B                     	;# 
  6283  038C                     	;# 
  6284  038C                     	;# 
  6285  038D                     	;# 
  6286  038E                     	;# 
  6287  0390                     	;# 
  6288  0390                     	;# 
  6289  0391                     	;# 
  6290  0392                     	;# 
  6291  048C                     	;# 
  6292  048C                     	;# 
  6293  048D                     	;# 
  6294  048E                     	;# 
  6295  048F                     	;# 
  6296  048F                     	;# 
  6297  0490                     	;# 
  6298  0491                     	;# 
  6299  0492                     	;# 
  6300  0492                     	;# 
  6301  0493                     	;# 
  6302  0494                     	;# 
  6303  0495                     	;# 
  6304  0495                     	;# 
  6305  0496                     	;# 
  6306  0497                     	;# 
  6307  0498                     	;# 
  6308  0499                     	;# 
  6309  049A                     	;# 
  6310  049B                     	;# 
  6311  049C                     	;# 
  6312  049D                     	;# 
  6313  058C                     	;# 
  6314  058C                     	;# 
  6315  058D                     	;# 
  6316  058E                     	;# 
  6317  058F                     	;# 
  6318  058F                     	;# 
  6319  0590                     	;# 
  6320  0591                     	;# 
  6321  0592                     	;# 
  6322  0593                     	;# 
  6323  059C                     	;# 
  6324  059C                     	;# 
  6325  059D                     	;# 
  6326  059D                     	;# 
  6327  059E                     	;# 
  6328  059F                     	;# 
  6329  060C                     	;# 
  6330  060C                     	;# 
  6331  060D                     	;# 
  6332  060D                     	;# 
  6333  060E                     	;# 
  6334  060F                     	;# 
  6335  0610                     	;# 
  6336  0611                     	;# 
  6337  0612                     	;# 
  6338  0613                     	;# 
  6339  0614                     	;# 
  6340  0616                     	;# 
  6341  0616                     	;# 
  6342  0617                     	;# 
  6343  0617                     	;# 
  6344  0618                     	;# 
  6345  0619                     	;# 
  6346  061A                     	;# 
  6347  061B                     	;# 
  6348  061C                     	;# 
  6349  061D                     	;# 
  6350  061E                     	;# 
  6351  070C                     	;# 
  6352  070D                     	;# 
  6353  070E                     	;# 
  6354  070F                     	;# 
  6355  0710                     	;# 
  6356  0711                     	;# 
  6357  0712                     	;# 
  6358  0713                     	;# 
  6359  0714                     	;# 
  6360  0716                     	;# 
  6361  0717                     	;# 
  6362  0718                     	;# 
  6363  0719                     	;# 
  6364  071A                     	;# 
  6365  071B                     	;# 
  6366  071C                     	;# 
  6367  071D                     	;# 
  6368  071E                     	;# 
  6369  0796                     	;# 
  6370  0797                     	;# 
  6371  0798                     	;# 
  6372  0799                     	;# 
  6373  079A                     	;# 
  6374  079B                     	;# 
  6375  079C                     	;# 
  6376  079D                     	;# 
  6377  080C                     	;# 
  6378  080D                     	;# 
  6379  080E                     	;# 
  6380  080F                     	;# 
  6381  0810                     	;# 
  6382  0811                     	;# 
  6383  0812                     	;# 
  6384  0813                     	;# 
  6385  0814                     	;# 
  6386  081A                     	;# 
  6387  081A                     	;# 
  6388  081B                     	;# 
  6389  081C                     	;# 
  6390  081C                     	;# 
  6391  081D                     	;# 
  6392  081E                     	;# 
  6393  081F                     	;# 
  6394  088C                     	;# 
  6395  088D                     	;# 
  6396  088E                     	;# 
  6397  088F                     	;# 
  6398  0890                     	;# 
  6399  0891                     	;# 
  6400  0892                     	;# 
  6401  0893                     	;# 
  6402  0895                     	;# 
  6403  0896                     	;# 
  6404  0897                     	;# 
  6405  0898                     	;# 
  6406  0899                     	;# 
  6407  089A                     	;# 
  6408  089B                     	;# 
  6409  090C                     	;# 
  6410  090E                     	;# 
  6411  090F                     	;# 
  6412  091F                     	;# 
  6413  098F                     	;# 
  6414  098F                     	;# 
  6415  0990                     	;# 
  6416  0991                     	;# 
  6417  0992                     	;# 
  6418  0993                     	;# 
  6419  0994                     	;# 
  6420  0995                     	;# 
  6421  0996                     	;# 
  6422  0997                     	;# 
  6423  1E0F                     	;# 
  6424  1E10                     	;# 
  6425  1E11                     	;# 
  6426  1E12                     	;# 
  6427  1E13                     	;# 
  6428  1E14                     	;# 
  6429  1E15                     	;# 
  6430  1E16                     	;# 
  6431  1E17                     	;# 
  6432  1E18                     	;# 
  6433  1E19                     	;# 
  6434  1E1A                     	;# 
  6435  1E1B                     	;# 
  6436  1E1C                     	;# 
  6437  1E1D                     	;# 
  6438  1E1E                     	;# 
  6439  1E1F                     	;# 
  6440  1E20                     	;# 
  6441  1E21                     	;# 
  6442  1E22                     	;# 
  6443  1E23                     	;# 
  6444  1E24                     	;# 
  6445  1E25                     	;# 
  6446  1E26                     	;# 
  6447  1E27                     	;# 
  6448  1E28                     	;# 
  6449  1E29                     	;# 
  6450  1E2A                     	;# 
  6451  1E2B                     	;# 
  6452  1E2C                     	;# 
  6453  1E2D                     	;# 
  6454  1E2E                     	;# 
  6455  1E2F                     	;# 
  6456  1E30                     	;# 
  6457  1E31                     	;# 
  6458  1E32                     	;# 
  6459  1E33                     	;# 
  6460  1E34                     	;# 
  6461  1E35                     	;# 
  6462  1E36                     	;# 
  6463  1E37                     	;# 
  6464  1E8F                     	;# 
  6465  1E90                     	;# 
  6466  1E91                     	;# 
  6467  1E92                     	;# 
  6468  1E93                     	;# 
  6469  1E94                     	;# 
  6470  1E95                     	;# 
  6471  1E96                     	;# 
  6472  1E97                     	;# 
  6473  1E9C                     	;# 
  6474  1E9D                     	;# 
  6475  1E9E                     	;# 
  6476  1EA1                     	;# 
  6477  1EA2                     	;# 
  6478  1EA3                     	;# 
  6479  1EA4                     	;# 
  6480  1EA9                     	;# 
  6481  1EAA                     	;# 
  6482  1EB1                     	;# 
  6483  1EB2                     	;# 
  6484  1EB8                     	;# 
  6485  1EB9                     	;# 
  6486  1EBA                     	;# 
  6487  1EBB                     	;# 
  6488  1EBC                     	;# 
  6489  1EBD                     	;# 
  6490  1EBE                     	;# 
  6491  1EC3                     	;# 
  6492  1EC5                     	;# 
  6493  1EC6                     	;# 
  6494  1EC7                     	;# 
  6495  1EC8                     	;# 
  6496  1EC9                     	;# 
  6497  1ECA                     	;# 
  6498  1ECB                     	;# 
  6499  1ECB                     	;# 
  6500  1ECB                     	;# 
  6501  1ECC                     	;# 
  6502  1ECC                     	;# 
  6503  1ECC                     	;# 
  6504  1F10                     	;# 
  6505  1F11                     	;# 
  6506  1F12                     	;# 
  6507  1F14                     	;# 
  6508  1F15                     	;# 
  6509  1F1C                     	;# 
  6510  1F1D                     	;# 
  6511  1F1E                     	;# 
  6512  1F1F                     	;# 
  6513  1F20                     	;# 
  6514  1F21                     	;# 
  6515  1F22                     	;# 
  6516  1F23                     	;# 
  6517  1F24                     	;# 
  6518  1F25                     	;# 
  6519  1F26                     	;# 
  6520  1F27                     	;# 
  6521  1F38                     	;# 
  6522  1F39                     	;# 
  6523  1F3A                     	;# 
  6524  1F3B                     	;# 
  6525  1F3C                     	;# 
  6526  1F3D                     	;# 
  6527  1F3E                     	;# 
  6528  1F3F                     	;# 
  6529  1F43                     	;# 
  6530  1F44                     	;# 
  6531  1F45                     	;# 
  6532  1F46                     	;# 
  6533  1F47                     	;# 
  6534  1F48                     	;# 
  6535  1F49                     	;# 
  6536  1F4A                     	;# 
  6537  1F4E                     	;# 
  6538  1F4F                     	;# 
  6539  1F50                     	;# 
  6540  1F51                     	;# 
  6541  1F52                     	;# 
  6542  1F53                     	;# 
  6543  1F54                     	;# 
  6544  1F55                     	;# 
  6545  1FE4                     	;# 
  6546  1FE5                     	;# 
  6547  1FE6                     	;# 
  6548  1FE7                     	;# 
  6549  1FE8                     	;# 
  6550  1FE8                     	;# 
  6551  1FE9                     	;# 
  6552  1FEA                     	;# 
  6553  1FEB                     	;# 
  6554  1FED                     	;# 
  6555  1FEE                     	;# 
  6556  1FEF                     	;# 
  6557  0000                     	;# 
  6558  0001                     	;# 
  6559  0002                     	;# 
  6560  0003                     	;# 
  6561  0004                     	;# 
  6562  0005                     	;# 
  6563  0006                     	;# 
  6564  0007                     	;# 
  6565  0008                     	;# 
  6566  0009                     	;# 
  6567  000A                     	;# 
  6568  000B                     	;# 
  6569  000C                     	;# 
  6570  000D                     	;# 
  6571  000E                     	;# 
  6572  0012                     	;# 
  6573  0013                     	;# 
  6574  0014                     	;# 
  6575  0018                     	;# 
  6576  0019                     	;# 
  6577  001A                     	;# 
  6578  008C                     	;# 
  6579  008C                     	;# 
  6580  008D                     	;# 
  6581  008E                     	;# 
  6582  008E                     	;# 
  6583  008F                     	;# 
  6584  0090                     	;# 
  6585  0090                     	;# 
  6586  0091                     	;# 
  6587  0092                     	;# 
  6588  0092                     	;# 
  6589  0093                     	;# 
  6590  0094                     	;# 
  6591  0094                     	;# 
  6592  0095                     	;# 
  6593  0096                     	;# 
  6594  0096                     	;# 
  6595  0097                     	;# 
  6596  0098                     	;# 
  6597  0099                     	;# 
  6598  009A                     	;# 
  6599  009B                     	;# 
  6600  009B                     	;# 
  6601  009C                     	;# 
  6602  009D                     	;# 
  6603  009D                     	;# 
  6604  009E                     	;# 
  6605  009F                     	;# 
  6606  010C                     	;# 
  6607  010C                     	;# 
  6608  010D                     	;# 
  6609  010E                     	;# 
  6610  010F                     	;# 
  6611  010F                     	;# 
  6612  0110                     	;# 
  6613  0111                     	;# 
  6614  0112                     	;# 
  6615  0113                     	;# 
  6616  0114                     	;# 
  6617  0115                     	;# 
  6618  0116                     	;# 
  6619  0117                     	;# 
  6620  0118                     	;# 
  6621  0119                     	;# 
  6622  0119                     	;# 
  6623  0119                     	;# 
  6624  011A                     	;# 
  6625  011A                     	;# 
  6626  011A                     	;# 
  6627  011B                     	;# 
  6628  011B                     	;# 
  6629  011B                     	;# 
  6630  011B                     	;# 
  6631  011B                     	;# 
  6632  011C                     	;# 
  6633  011C                     	;# 
  6634  011C                     	;# 
  6635  011D                     	;# 
  6636  011D                     	;# 
  6637  011D                     	;# 
  6638  011E                     	;# 
  6639  011E                     	;# 
  6640  011E                     	;# 
  6641  011F                     	;# 
  6642  011F                     	;# 
  6643  011F                     	;# 
  6644  011F                     	;# 
  6645  011F                     	;# 
  6646  018C                     	;# 
  6647  018D                     	;# 
  6648  018E                     	;# 
  6649  018F                     	;# 
  6650  0190                     	;# 
  6651  0191                     	;# 
  6652  0192                     	;# 
  6653  0196                     	;# 
  6654  0197                     	;# 
  6655  0198                     	;# 
  6656  0199                     	;# 
  6657  019A                     	;# 
  6658  019B                     	;# 
  6659  019C                     	;# 
  6660  020C                     	;# 
  6661  020D                     	;# 
  6662  020E                     	;# 
  6663  020E                     	;# 
  6664  020F                     	;# 
  6665  020F                     	;# 
  6666  0210                     	;# 
  6667  0210                     	;# 
  6668  0211                     	;# 
  6669  0211                     	;# 
  6670  0212                     	;# 
  6671  0213                     	;# 
  6672  0214                     	;# 
  6673  0214                     	;# 
  6674  0215                     	;# 
  6675  0215                     	;# 
  6676  0216                     	;# 
  6677  0216                     	;# 
  6678  0217                     	;# 
  6679  0217                     	;# 
  6680  0218                     	;# 
  6681  0219                     	;# 
  6682  021A                     	;# 
  6683  021A                     	;# 
  6684  021B                     	;# 
  6685  021B                     	;# 
  6686  021C                     	;# 
  6687  021C                     	;# 
  6688  021D                     	;# 
  6689  021D                     	;# 
  6690  021E                     	;# 
  6691  021F                     	;# 
  6692  028C                     	;# 
  6693  028C                     	;# 
  6694  028D                     	;# 
  6695  028D                     	;# 
  6696  028E                     	;# 
  6697  028F                     	;# 
  6698  0290                     	;# 
  6699  0291                     	;# 
  6700  0292                     	;# 
  6701  0292                     	;# 
  6702  0293                     	;# 
  6703  0293                     	;# 
  6704  0294                     	;# 
  6705  0295                     	;# 
  6706  0296                     	;# 
  6707  0297                     	;# 
  6708  0298                     	;# 
  6709  0298                     	;# 
  6710  0299                     	;# 
  6711  0299                     	;# 
  6712  029A                     	;# 
  6713  029B                     	;# 
  6714  029C                     	;# 
  6715  029D                     	;# 
  6716  029F                     	;# 
  6717  030C                     	;# 
  6718  030C                     	;# 
  6719  030D                     	;# 
  6720  030E                     	;# 
  6721  030F                     	;# 
  6722  0310                     	;# 
  6723  0310                     	;# 
  6724  0311                     	;# 
  6725  0312                     	;# 
  6726  0313                     	;# 
  6727  0314                     	;# 
  6728  0314                     	;# 
  6729  0315                     	;# 
  6730  0316                     	;# 
  6731  0317                     	;# 
  6732  0318                     	;# 
  6733  0318                     	;# 
  6734  0319                     	;# 
  6735  031A                     	;# 
  6736  031B                     	;# 
  6737  038C                     	;# 
  6738  038C                     	;# 
  6739  038D                     	;# 
  6740  038E                     	;# 
  6741  0390                     	;# 
  6742  0390                     	;# 
  6743  0391                     	;# 
  6744  0392                     	;# 
  6745  048C                     	;# 
  6746  048C                     	;# 
  6747  048D                     	;# 
  6748  048E                     	;# 
  6749  048F                     	;# 
  6750  048F                     	;# 
  6751  0490                     	;# 
  6752  0491                     	;# 
  6753  0492                     	;# 
  6754  0492                     	;# 
  6755  0493                     	;# 
  6756  0494                     	;# 
  6757  0495                     	;# 
  6758  0495                     	;# 
  6759  0496                     	;# 
  6760  0497                     	;# 
  6761  0498                     	;# 
  6762  0499                     	;# 
  6763  049A                     	;# 
  6764  049B                     	;# 
  6765  049C                     	;# 
  6766  049D                     	;# 
  6767  058C                     	;# 
  6768  058C                     	;# 
  6769  058D                     	;# 
  6770  058E                     	;# 
  6771  058F                     	;# 
  6772  058F                     	;# 
  6773  0590                     	;# 
  6774  0591                     	;# 
  6775  0592                     	;# 
  6776  0593                     	;# 
  6777  059C                     	;# 
  6778  059C                     	;# 
  6779  059D                     	;# 
  6780  059D                     	;# 
  6781  059E                     	;# 
  6782  059F                     	;# 
  6783  060C                     	;# 
  6784  060C                     	;# 
  6785  060D                     	;# 
  6786  060D                     	;# 
  6787  060E                     	;# 
  6788  060F                     	;# 
  6789  0610                     	;# 
  6790  0611                     	;# 
  6791  0612                     	;# 
  6792  0613                     	;# 
  6793  0614                     	;# 
  6794  0616                     	;# 
  6795  0616                     	;# 
  6796  0617                     	;# 
  6797  0617                     	;# 
  6798  0618                     	;# 
  6799  0619                     	;# 
  6800  061A                     	;# 
  6801  061B                     	;# 
  6802  061C                     	;# 
  6803  061D                     	;# 
  6804  061E                     	;# 
  6805  070C                     	;# 
  6806  070D                     	;# 
  6807  070E                     	;# 
  6808  070F                     	;# 
  6809  0710                     	;# 
  6810  0711                     	;# 
  6811  0712                     	;# 
  6812  0713                     	;# 
  6813  0714                     	;# 
  6814  0716                     	;# 
  6815  0717                     	;# 
  6816  0718                     	;# 
  6817  0719                     	;# 
  6818  071A                     	;# 
  6819  071B                     	;# 
  6820  071C                     	;# 
  6821  071D                     	;# 
  6822  071E                     	;# 
  6823  0796                     	;# 
  6824  0797                     	;# 
  6825  0798                     	;# 
  6826  0799                     	;# 
  6827  079A                     	;# 
  6828  079B                     	;# 
  6829  079C                     	;# 
  6830  079D                     	;# 
  6831  080C                     	;# 
  6832  080D                     	;# 
  6833  080E                     	;# 
  6834  080F                     	;# 
  6835  0810                     	;# 
  6836  0811                     	;# 
  6837  0812                     	;# 
  6838  0813                     	;# 
  6839  0814                     	;# 
  6840  081A                     	;# 
  6841  081A                     	;# 
  6842  081B                     	;# 
  6843  081C                     	;# 
  6844  081C                     	;# 
  6845  081D                     	;# 
  6846  081E                     	;# 
  6847  081F                     	;# 
  6848  088C                     	;# 
  6849  088D                     	;# 
  6850  088E                     	;# 
  6851  088F                     	;# 
  6852  0890                     	;# 
  6853  0891                     	;# 
  6854  0892                     	;# 
  6855  0893                     	;# 
  6856  0895                     	;# 
  6857  0896                     	;# 
  6858  0897                     	;# 
  6859  0898                     	;# 
  6860  0899                     	;# 
  6861  089A                     	;# 
  6862  089B                     	;# 
  6863  090C                     	;# 
  6864  090E                     	;# 
  6865  090F                     	;# 
  6866  091F                     	;# 
  6867  098F                     	;# 
  6868  098F                     	;# 
  6869  0990                     	;# 
  6870  0991                     	;# 
  6871  0992                     	;# 
  6872  0993                     	;# 
  6873  0994                     	;# 
  6874  0995                     	;# 
  6875  0996                     	;# 
  6876  0997                     	;# 
  6877  1E0F                     	;# 
  6878  1E10                     	;# 
  6879  1E11                     	;# 
  6880  1E12                     	;# 
  6881  1E13                     	;# 
  6882  1E14                     	;# 
  6883  1E15                     	;# 
  6884  1E16                     	;# 
  6885  1E17                     	;# 
  6886  1E18                     	;# 
  6887  1E19                     	;# 
  6888  1E1A                     	;# 
  6889  1E1B                     	;# 
  6890  1E1C                     	;# 
  6891  1E1D                     	;# 
  6892  1E1E                     	;# 
  6893  1E1F                     	;# 
  6894  1E20                     	;# 
  6895  1E21                     	;# 
  6896  1E22                     	;# 
  6897  1E23                     	;# 
  6898  1E24                     	;# 
  6899  1E25                     	;# 
  6900  1E26                     	;# 
  6901  1E27                     	;# 
  6902  1E28                     	;# 
  6903  1E29                     	;# 
  6904  1E2A                     	;# 
  6905  1E2B                     	;# 
  6906  1E2C                     	;# 
  6907  1E2D                     	;# 
  6908  1E2E                     	;# 
  6909  1E2F                     	;# 
  6910  1E30                     	;# 
  6911  1E31                     	;# 
  6912  1E32                     	;# 
  6913  1E33                     	;# 
  6914  1E34                     	;# 
  6915  1E35                     	;# 
  6916  1E36                     	;# 
  6917  1E37                     	;# 
  6918  1E8F                     	;# 
  6919  1E90                     	;# 
  6920  1E91                     	;# 
  6921  1E92                     	;# 
  6922  1E93                     	;# 
  6923  1E94                     	;# 
  6924  1E95                     	;# 
  6925  1E96                     	;# 
  6926  1E97                     	;# 
  6927  1E9C                     	;# 
  6928  1E9D                     	;# 
  6929  1E9E                     	;# 
  6930  1EA1                     	;# 
  6931  1EA2                     	;# 
  6932  1EA3                     	;# 
  6933  1EA4                     	;# 
  6934  1EA9                     	;# 
  6935  1EAA                     	;# 
  6936  1EB1                     	;# 
  6937  1EB2                     	;# 
  6938  1EB8                     	;# 
  6939  1EB9                     	;# 
  6940  1EBA                     	;# 
  6941  1EBB                     	;# 
  6942  1EBC                     	;# 
  6943  1EBD                     	;# 
  6944  1EBE                     	;# 
  6945  1EC3                     	;# 
  6946  1EC5                     	;# 
  6947  1EC6                     	;# 
  6948  1EC7                     	;# 
  6949  1EC8                     	;# 
  6950  1EC9                     	;# 
  6951  1ECA                     	;# 
  6952  1ECB                     	;# 
  6953  1ECB                     	;# 
  6954  1ECB                     	;# 
  6955  1ECC                     	;# 
  6956  1ECC                     	;# 
  6957  1ECC                     	;# 
  6958  1F10                     	;# 
  6959  1F11                     	;# 
  6960  1F12                     	;# 
  6961  1F14                     	;# 
  6962  1F15                     	;# 
  6963  1F1C                     	;# 
  6964  1F1D                     	;# 
  6965  1F1E                     	;# 
  6966  1F1F                     	;# 
  6967  1F20                     	;# 
  6968  1F21                     	;# 
  6969  1F22                     	;# 
  6970  1F23                     	;# 
  6971  1F24                     	;# 
  6972  1F25                     	;# 
  6973  1F26                     	;# 
  6974  1F27                     	;# 
  6975  1F38                     	;# 
  6976  1F39                     	;# 
  6977  1F3A                     	;# 
  6978  1F3B                     	;# 
  6979  1F3C                     	;# 
  6980  1F3D                     	;# 
  6981  1F3E                     	;# 
  6982  1F3F                     	;# 
  6983  1F43                     	;# 
  6984  1F44                     	;# 
  6985  1F45                     	;# 
  6986  1F46                     	;# 
  6987  1F47                     	;# 
  6988  1F48                     	;# 
  6989  1F49                     	;# 
  6990  1F4A                     	;# 
  6991  1F4E                     	;# 
  6992  1F4F                     	;# 
  6993  1F50                     	;# 
  6994  1F51                     	;# 
  6995  1F52                     	;# 
  6996  1F53                     	;# 
  6997  1F54                     	;# 
  6998  1F55                     	;# 
  6999  1FE4                     	;# 
  7000  1FE5                     	;# 
  7001  1FE6                     	;# 
  7002  1FE7                     	;# 
  7003  1FE8                     	;# 
  7004  1FE8                     	;# 
  7005  1FE9                     	;# 
  7006  1FEA                     	;# 
  7007  1FEB                     	;# 
  7008  1FED                     	;# 
  7009  1FEE                     	;# 
  7010  1FEF                     	;# 
  7011  0000                     	;# 
  7012  0001                     	;# 
  7013  0002                     	;# 
  7014  0003                     	;# 
  7015  0004                     	;# 
  7016  0005                     	;# 
  7017  0006                     	;# 
  7018  0007                     	;# 
  7019  0008                     	;# 
  7020  0009                     	;# 
  7021  000A                     	;# 
  7022  000B                     	;# 
  7023  000C                     	;# 
  7024  000D                     	;# 
  7025  000E                     	;# 
  7026  0012                     	;# 
  7027  0013                     	;# 
  7028  0014                     	;# 
  7029  0018                     	;# 
  7030  0019                     	;# 
  7031  001A                     	;# 
  7032  008C                     	;# 
  7033  008C                     	;# 
  7034  008D                     	;# 
  7035  008E                     	;# 
  7036  008E                     	;# 
  7037  008F                     	;# 
  7038  0090                     	;# 
  7039  0090                     	;# 
  7040  0091                     	;# 
  7041  0092                     	;# 
  7042  0092                     	;# 
  7043  0093                     	;# 
  7044  0094                     	;# 
  7045  0094                     	;# 
  7046  0095                     	;# 
  7047  0096                     	;# 
  7048  0096                     	;# 
  7049  0097                     	;# 
  7050  0098                     	;# 
  7051  0099                     	;# 
  7052  009A                     	;# 
  7053  009B                     	;# 
  7054  009B                     	;# 
  7055  009C                     	;# 
  7056  009D                     	;# 
  7057  009D                     	;# 
  7058  009E                     	;# 
  7059  009F                     	;# 
  7060  010C                     	;# 
  7061  010C                     	;# 
  7062  010D                     	;# 
  7063  010E                     	;# 
  7064  010F                     	;# 
  7065  010F                     	;# 
  7066  0110                     	;# 
  7067  0111                     	;# 
  7068  0112                     	;# 
  7069  0113                     	;# 
  7070  0114                     	;# 
  7071  0115                     	;# 
  7072  0116                     	;# 
  7073  0117                     	;# 
  7074  0118                     	;# 
  7075  0119                     	;# 
  7076  0119                     	;# 
  7077  0119                     	;# 
  7078  011A                     	;# 
  7079  011A                     	;# 
  7080  011A                     	;# 
  7081  011B                     	;# 
  7082  011B                     	;# 
  7083  011B                     	;# 
  7084  011B                     	;# 
  7085  011B                     	;# 
  7086  011C                     	;# 
  7087  011C                     	;# 
  7088  011C                     	;# 
  7089  011D                     	;# 
  7090  011D                     	;# 
  7091  011D                     	;# 
  7092  011E                     	;# 
  7093  011E                     	;# 
  7094  011E                     	;# 
  7095  011F                     	;# 
  7096  011F                     	;# 
  7097  011F                     	;# 
  7098  011F                     	;# 
  7099  011F                     	;# 
  7100  018C                     	;# 
  7101  018D                     	;# 
  7102  018E                     	;# 
  7103  018F                     	;# 
  7104  0190                     	;# 
  7105  0191                     	;# 
  7106  0192                     	;# 
  7107  0196                     	;# 
  7108  0197                     	;# 
  7109  0198                     	;# 
  7110  0199                     	;# 
  7111  019A                     	;# 
  7112  019B                     	;# 
  7113  019C                     	;# 
  7114  020C                     	;# 
  7115  020D                     	;# 
  7116  020E                     	;# 
  7117  020E                     	;# 
  7118  020F                     	;# 
  7119  020F                     	;# 
  7120  0210                     	;# 
  7121  0210                     	;# 
  7122  0211                     	;# 
  7123  0211                     	;# 
  7124  0212                     	;# 
  7125  0213                     	;# 
  7126  0214                     	;# 
  7127  0214                     	;# 
  7128  0215                     	;# 
  7129  0215                     	;# 
  7130  0216                     	;# 
  7131  0216                     	;# 
  7132  0217                     	;# 
  7133  0217                     	;# 
  7134  0218                     	;# 
  7135  0219                     	;# 
  7136  021A                     	;# 
  7137  021A                     	;# 
  7138  021B                     	;# 
  7139  021B                     	;# 
  7140  021C                     	;# 
  7141  021C                     	;# 
  7142  021D                     	;# 
  7143  021D                     	;# 
  7144  021E                     	;# 
  7145  021F                     	;# 
  7146  028C                     	;# 
  7147  028C                     	;# 
  7148  028D                     	;# 
  7149  028D                     	;# 
  7150  028E                     	;# 
  7151  028F                     	;# 
  7152  0290                     	;# 
  7153  0291                     	;# 
  7154  0292                     	;# 
  7155  0292                     	;# 
  7156  0293                     	;# 
  7157  0293                     	;# 
  7158  0294                     	;# 
  7159  0295                     	;# 
  7160  0296                     	;# 
  7161  0297                     	;# 
  7162  0298                     	;# 
  7163  0298                     	;# 
  7164  0299                     	;# 
  7165  0299                     	;# 
  7166  029A                     	;# 
  7167  029B                     	;# 
  7168  029C                     	;# 
  7169  029D                     	;# 
  7170  029F                     	;# 
  7171  030C                     	;# 
  7172  030C                     	;# 
  7173  030D                     	;# 
  7174  030E                     	;# 
  7175  030F                     	;# 
  7176  0310                     	;# 
  7177  0310                     	;# 
  7178  0311                     	;# 
  7179  0312                     	;# 
  7180  0313                     	;# 
  7181  0314                     	;# 
  7182  0314                     	;# 
  7183  0315                     	;# 
  7184  0316                     	;# 
  7185  0317                     	;# 
  7186  0318                     	;# 
  7187  0318                     	;# 
  7188  0319                     	;# 
  7189  031A                     	;# 
  7190  031B                     	;# 
  7191  038C                     	;# 
  7192  038C                     	;# 
  7193  038D                     	;# 
  7194  038E                     	;# 
  7195  0390                     	;# 
  7196  0390                     	;# 
  7197  0391                     	;# 
  7198  0392                     	;# 
  7199  048C                     	;# 
  7200  048C                     	;# 
  7201  048D                     	;# 
  7202  048E                     	;# 
  7203  048F                     	;# 
  7204  048F                     	;# 
  7205  0490                     	;# 
  7206  0491                     	;# 
  7207  0492                     	;# 
  7208  0492                     	;# 
  7209  0493                     	;# 
  7210  0494                     	;# 
  7211  0495                     	;# 
  7212  0495                     	;# 
  7213  0496                     	;# 
  7214  0497                     	;# 
  7215  0498                     	;# 
  7216  0499                     	;# 
  7217  049A                     	;# 
  7218  049B                     	;# 
  7219  049C                     	;# 
  7220  049D                     	;# 
  7221  058C                     	;# 
  7222  058C                     	;# 
  7223  058D                     	;# 
  7224  058E                     	;# 
  7225  058F                     	;# 
  7226  058F                     	;# 
  7227  0590                     	;# 
  7228  0591                     	;# 
  7229  0592                     	;# 
  7230  0593                     	;# 
  7231  059C                     	;# 
  7232  059C                     	;# 
  7233  059D                     	;# 
  7234  059D                     	;# 
  7235  059E                     	;# 
  7236  059F                     	;# 
  7237  060C                     	;# 
  7238  060C                     	;# 
  7239  060D                     	;# 
  7240  060D                     	;# 
  7241  060E                     	;# 
  7242  060F                     	;# 
  7243  0610                     	;# 
  7244  0611                     	;# 
  7245  0612                     	;# 
  7246  0613                     	;# 
  7247  0614                     	;# 
  7248  0616                     	;# 
  7249  0616                     	;# 
  7250  0617                     	;# 
  7251  0617                     	;# 
  7252  0618                     	;# 
  7253  0619                     	;# 
  7254  061A                     	;# 
  7255  061B                     	;# 
  7256  061C                     	;# 
  7257  061D                     	;# 
  7258  061E                     	;# 
  7259  070C                     	;# 
  7260  070D                     	;# 
  7261  070E                     	;# 
  7262  070F                     	;# 
  7263  0710                     	;# 
  7264  0711                     	;# 
  7265  0712                     	;# 
  7266  0713                     	;# 
  7267  0714                     	;# 
  7268  0716                     	;# 
  7269  0717                     	;# 
  7270  0718                     	;# 
  7271  0719                     	;# 
  7272  071A                     	;# 
  7273  071B                     	;# 
  7274  071C                     	;# 
  7275  071D                     	;# 
  7276  071E                     	;# 
  7277  0796                     	;# 
  7278  0797                     	;# 
  7279  0798                     	;# 
  7280  0799                     	;# 
  7281  079A                     	;# 
  7282  079B                     	;# 
  7283  079C                     	;# 
  7284  079D                     	;# 
  7285  080C                     	;# 
  7286  080D                     	;# 
  7287  080E                     	;# 
  7288  080F                     	;# 
  7289  0810                     	;# 
  7290  0811                     	;# 
  7291  0812                     	;# 
  7292  0813                     	;# 
  7293  0814                     	;# 
  7294  081A                     	;# 
  7295  081A                     	;# 
  7296  081B                     	;# 
  7297  081C                     	;# 
  7298  081C                     	;# 
  7299  081D                     	;# 
  7300  081E                     	;# 
  7301  081F                     	;# 
  7302  088C                     	;# 
  7303  088D                     	;# 
  7304  088E                     	;# 
  7305  088F                     	;# 
  7306  0890                     	;# 
  7307  0891                     	;# 
  7308  0892                     	;# 
  7309  0893                     	;# 
  7310  0895                     	;# 
  7311  0896                     	;# 
  7312  0897                     	;# 
  7313  0898                     	;# 
  7314  0899                     	;# 
  7315  089A                     	;# 
  7316  089B                     	;# 
  7317  090C                     	;# 
  7318  090E                     	;# 
  7319  090F                     	;# 
  7320  091F                     	;# 
  7321  098F                     	;# 
  7322  098F                     	;# 
  7323  0990                     	;# 
  7324  0991                     	;# 
  7325  0992                     	;# 
  7326  0993                     	;# 
  7327  0994                     	;# 
  7328  0995                     	;# 
  7329  0996                     	;# 
  7330  0997                     	;# 
  7331  1E0F                     	;# 
  7332  1E10                     	;# 
  7333  1E11                     	;# 
  7334  1E12                     	;# 
  7335  1E13                     	;# 
  7336  1E14                     	;# 
  7337  1E15                     	;# 
  7338  1E16                     	;# 
  7339  1E17                     	;# 
  7340  1E18                     	;# 
  7341  1E19                     	;# 
  7342  1E1A                     	;# 
  7343  1E1B                     	;# 
  7344  1E1C                     	;# 
  7345  1E1D                     	;# 
  7346  1E1E                     	;# 
  7347  1E1F                     	;# 
  7348  1E20                     	;# 
  7349  1E21                     	;# 
  7350  1E22                     	;# 
  7351  1E23                     	;# 
  7352  1E24                     	;# 
  7353  1E25                     	;# 
  7354  1E26                     	;# 
  7355  1E27                     	;# 
  7356  1E28                     	;# 
  7357  1E29                     	;# 
  7358  1E2A                     	;# 
  7359  1E2B                     	;# 
  7360  1E2C                     	;# 
  7361  1E2D                     	;# 
  7362  1E2E                     	;# 
  7363  1E2F                     	;# 
  7364  1E30                     	;# 
  7365  1E31                     	;# 
  7366  1E32                     	;# 
  7367  1E33                     	;# 
  7368  1E34                     	;# 
  7369  1E35                     	;# 
  7370  1E36                     	;# 
  7371  1E37                     	;# 
  7372  1E8F                     	;# 
  7373  1E90                     	;# 
  7374  1E91                     	;# 
  7375  1E92                     	;# 
  7376  1E93                     	;# 
  7377  1E94                     	;# 
  7378  1E95                     	;# 
  7379  1E96                     	;# 
  7380  1E97                     	;# 
  7381  1E9C                     	;# 
  7382  1E9D                     	;# 
  7383  1E9E                     	;# 
  7384  1EA1                     	;# 
  7385  1EA2                     	;# 
  7386  1EA3                     	;# 
  7387  1EA4                     	;# 
  7388  1EA9                     	;# 
  7389  1EAA                     	;# 
  7390  1EB1                     	;# 
  7391  1EB2                     	;# 
  7392  1EB8                     	;# 
  7393  1EB9                     	;# 
  7394  1EBA                     	;# 
  7395  1EBB                     	;# 
  7396  1EBC                     	;# 
  7397  1EBD                     	;# 
  7398  1EBE                     	;# 
  7399  1EC3                     	;# 
  7400  1EC5                     	;# 
  7401  1EC6                     	;# 
  7402  1EC7                     	;# 
  7403  1EC8                     	;# 
  7404  1EC9                     	;# 
  7405  1ECA                     	;# 
  7406  1ECB                     	;# 
  7407  1ECB                     	;# 
  7408  1ECB                     	;# 
  7409  1ECC                     	;# 
  7410  1ECC                     	;# 
  7411  1ECC                     	;# 
  7412  1F10                     	;# 
  7413  1F11                     	;# 
  7414  1F12                     	;# 
  7415  1F14                     	;# 
  7416  1F15                     	;# 
  7417  1F1C                     	;# 
  7418  1F1D                     	;# 
  7419  1F1E                     	;# 
  7420  1F1F                     	;# 
  7421  1F20                     	;# 
  7422  1F21                     	;# 
  7423  1F22                     	;# 
  7424  1F23                     	;# 
  7425  1F24                     	;# 
  7426  1F25                     	;# 
  7427  1F26                     	;# 
  7428  1F27                     	;# 
  7429  1F38                     	;# 
  7430  1F39                     	;# 
  7431  1F3A                     	;# 
  7432  1F3B                     	;# 
  7433  1F3C                     	;# 
  7434  1F3D                     	;# 
  7435  1F3E                     	;# 
  7436  1F3F                     	;# 
  7437  1F43                     	;# 
  7438  1F44                     	;# 
  7439  1F45                     	;# 
  7440  1F46                     	;# 
  7441  1F47                     	;# 
  7442  1F48                     	;# 
  7443  1F49                     	;# 
  7444  1F4A                     	;# 
  7445  1F4E                     	;# 
  7446  1F4F                     	;# 
  7447  1F50                     	;# 
  7448  1F51                     	;# 
  7449  1F52                     	;# 
  7450  1F53                     	;# 
  7451  1F54                     	;# 
  7452  1F55                     	;# 
  7453  1FE4                     	;# 
  7454  1FE5                     	;# 
  7455  1FE6                     	;# 
  7456  1FE7                     	;# 
  7457  1FE8                     	;# 
  7458  1FE8                     	;# 
  7459  1FE9                     	;# 
  7460  1FEA                     	;# 
  7461  1FEB                     	;# 
  7462  1FED                     	;# 
  7463  1FEE                     	;# 
  7464  1FEF                     	;# 
  7465  0000                     	;# 
  7466  0001                     	;# 
  7467  0002                     	;# 
  7468  0003                     	;# 
  7469  0004                     	;# 
  7470  0005                     	;# 
  7471  0006                     	;# 
  7472  0007                     	;# 
  7473  0008                     	;# 
  7474  0009                     	;# 
  7475  000A                     	;# 
  7476  000B                     	;# 
  7477  000C                     	;# 
  7478  000D                     	;# 
  7479  000E                     	;# 
  7480  0012                     	;# 
  7481  0013                     	;# 
  7482  0014                     	;# 
  7483  0018                     	;# 
  7484  0019                     	;# 
  7485  001A                     	;# 
  7486  008C                     	;# 
  7487  008C                     	;# 
  7488  008D                     	;# 
  7489  008E                     	;# 
  7490  008E                     	;# 
  7491  008F                     	;# 
  7492  0090                     	;# 
  7493  0090                     	;# 
  7494  0091                     	;# 
  7495  0092                     	;# 
  7496  0092                     	;# 
  7497  0093                     	;# 
  7498  0094                     	;# 
  7499  0094                     	;# 
  7500  0095                     	;# 
  7501  0096                     	;# 
  7502  0096                     	;# 
  7503  0097                     	;# 
  7504  0098                     	;# 
  7505  0099                     	;# 
  7506  009A                     	;# 
  7507  009B                     	;# 
  7508  009B                     	;# 
  7509  009C                     	;# 
  7510  009D                     	;# 
  7511  009D                     	;# 
  7512  009E                     	;# 
  7513  009F                     	;# 
  7514  010C                     	;# 
  7515  010C                     	;# 
  7516  010D                     	;# 
  7517  010E                     	;# 
  7518  010F                     	;# 
  7519  010F                     	;# 
  7520  0110                     	;# 
  7521  0111                     	;# 
  7522  0112                     	;# 
  7523  0113                     	;# 
  7524  0114                     	;# 
  7525  0115                     	;# 
  7526  0116                     	;# 
  7527  0117                     	;# 
  7528  0118                     	;# 
  7529  0119                     	;# 
  7530  0119                     	;# 
  7531  0119                     	;# 
  7532  011A                     	;# 
  7533  011A                     	;# 
  7534  011A                     	;# 
  7535  011B                     	;# 
  7536  011B                     	;# 
  7537  011B                     	;# 
  7538  011B                     	;# 
  7539  011B                     	;# 
  7540  011C                     	;# 
  7541  011C                     	;# 
  7542  011C                     	;# 
  7543  011D                     	;# 
  7544  011D                     	;# 
  7545  011D                     	;# 
  7546  011E                     	;# 
  7547  011E                     	;# 
  7548  011E                     	;# 
  7549  011F                     	;# 
  7550  011F                     	;# 
  7551  011F                     	;# 
  7552  011F                     	;# 
  7553  011F                     	;# 
  7554  018C                     	;# 
  7555  018D                     	;# 
  7556  018E                     	;# 
  7557  018F                     	;# 
  7558  0190                     	;# 
  7559  0191                     	;# 
  7560  0192                     	;# 
  7561  0196                     	;# 
  7562  0197                     	;# 
  7563  0198                     	;# 
  7564  0199                     	;# 
  7565  019A                     	;# 
  7566  019B                     	;# 
  7567  019C                     	;# 
  7568  020C                     	;# 
  7569  020D                     	;# 
  7570  020E                     	;# 
  7571  020E                     	;# 
  7572  020F                     	;# 
  7573  020F                     	;# 
  7574  0210                     	;# 
  7575  0210                     	;# 
  7576  0211                     	;# 
  7577  0211                     	;# 
  7578  0212                     	;# 
  7579  0213                     	;# 
  7580  0214                     	;# 
  7581  0214                     	;# 
  7582  0215                     	;# 
  7583  0215                     	;# 
  7584  0216                     	;# 
  7585  0216                     	;# 
  7586  0217                     	;# 
  7587  0217                     	;# 
  7588  0218                     	;# 
  7589  0219                     	;# 
  7590  021A                     	;# 
  7591  021A                     	;# 
  7592  021B                     	;# 
  7593  021B                     	;# 
  7594  021C                     	;# 
  7595  021C                     	;# 
  7596  021D                     	;# 
  7597  021D                     	;# 
  7598  021E                     	;# 
  7599  021F                     	;# 
  7600  028C                     	;# 
  7601  028C                     	;# 
  7602  028D                     	;# 
  7603  028D                     	;# 
  7604  028E                     	;# 
  7605  028F                     	;# 
  7606  0290                     	;# 
  7607  0291                     	;# 
  7608  0292                     	;# 
  7609  0292                     	;# 
  7610  0293                     	;# 
  7611  0293                     	;# 
  7612  0294                     	;# 
  7613  0295                     	;# 
  7614  0296                     	;# 
  7615  0297                     	;# 
  7616  0298                     	;# 
  7617  0298                     	;# 
  7618  0299                     	;# 
  7619  0299                     	;# 
  7620  029A                     	;# 
  7621  029B                     	;# 
  7622  029C                     	;# 
  7623  029D                     	;# 
  7624  029F                     	;# 
  7625  030C                     	;# 
  7626  030C                     	;# 
  7627  030D                     	;# 
  7628  030E                     	;# 
  7629  030F                     	;# 
  7630  0310                     	;# 
  7631  0310                     	;# 
  7632  0311                     	;# 
  7633  0312                     	;# 
  7634  0313                     	;# 
  7635  0314                     	;# 
  7636  0314                     	;# 
  7637  0315                     	;# 
  7638  0316                     	;# 
  7639  0317                     	;# 
  7640  0318                     	;# 
  7641  0318                     	;# 
  7642  0319                     	;# 
  7643  031A                     	;# 
  7644  031B                     	;# 
  7645  038C                     	;# 
  7646  038C                     	;# 
  7647  038D                     	;# 
  7648  038E                     	;# 
  7649  0390                     	;# 
  7650  0390                     	;# 
  7651  0391                     	;# 
  7652  0392                     	;# 
  7653  048C                     	;# 
  7654  048C                     	;# 
  7655  048D                     	;# 
  7656  048E                     	;# 
  7657  048F                     	;# 
  7658  048F                     	;# 
  7659  0490                     	;# 
  7660  0491                     	;# 
  7661  0492                     	;# 
  7662  0492                     	;# 
  7663  0493                     	;# 
  7664  0494                     	;# 
  7665  0495                     	;# 
  7666  0495                     	;# 
  7667  0496                     	;# 
  7668  0497                     	;# 
  7669  0498                     	;# 
  7670  0499                     	;# 
  7671  049A                     	;# 
  7672  049B                     	;# 
  7673  049C                     	;# 
  7674  049D                     	;# 
  7675  058C                     	;# 
  7676  058C                     	;# 
  7677  058D                     	;# 
  7678  058E                     	;# 
  7679  058F                     	;# 
  7680  058F                     	;# 
  7681  0590                     	;# 
  7682  0591                     	;# 
  7683  0592                     	;# 
  7684  0593                     	;# 
  7685  059C                     	;# 
  7686  059C                     	;# 
  7687  059D                     	;# 
  7688  059D                     	;# 
  7689  059E                     	;# 
  7690  059F                     	;# 
  7691  060C                     	;# 
  7692  060C                     	;# 
  7693  060D                     	;# 
  7694  060D                     	;# 
  7695  060E                     	;# 
  7696  060F                     	;# 
  7697  0610                     	;# 
  7698  0611                     	;# 
  7699  0612                     	;# 
  7700  0613                     	;# 
  7701  0614                     	;# 
  7702  0616                     	;# 
  7703  0616                     	;# 
  7704  0617                     	;# 
  7705  0617                     	;# 
  7706  0618                     	;# 
  7707  0619                     	;# 
  7708  061A                     	;# 
  7709  061B                     	;# 
  7710  061C                     	;# 
  7711  061D                     	;# 
  7712  061E                     	;# 
  7713  070C                     	;# 
  7714  070D                     	;# 
  7715  070E                     	;# 
  7716  070F                     	;# 
  7717  0710                     	;# 
  7718  0711                     	;# 
  7719  0712                     	;# 
  7720  0713                     	;# 
  7721  0714                     	;# 
  7722  0716                     	;# 
  7723  0717                     	;# 
  7724  0718                     	;# 
  7725  0719                     	;# 
  7726  071A                     	;# 
  7727  071B                     	;# 
  7728  071C                     	;# 
  7729  071D                     	;# 
  7730  071E                     	;# 
  7731  0796                     	;# 
  7732  0797                     	;# 
  7733  0798                     	;# 
  7734  0799                     	;# 
  7735  079A                     	;# 
  7736  079B                     	;# 
  7737  079C                     	;# 
  7738  079D                     	;# 
  7739  080C                     	;# 
  7740  080D                     	;# 
  7741  080E                     	;# 
  7742  080F                     	;# 
  7743  0810                     	;# 
  7744  0811                     	;# 
  7745  0812                     	;# 
  7746  0813                     	;# 
  7747  0814                     	;# 
  7748  081A                     	;# 
  7749  081A                     	;# 
  7750  081B                     	;# 
  7751  081C                     	;# 
  7752  081C                     	;# 
  7753  081D                     	;# 
  7754  081E                     	;# 
  7755  081F                     	;# 
  7756  088C                     	;# 
  7757  088D                     	;# 
  7758  088E                     	;# 
  7759  088F                     	;# 
  7760  0890                     	;# 
  7761  0891                     	;# 
  7762  0892                     	;# 
  7763  0893                     	;# 
  7764  0895                     	;# 
  7765  0896                     	;# 
  7766  0897                     	;# 
  7767  0898                     	;# 
  7768  0899                     	;# 
  7769  089A                     	;# 
  7770  089B                     	;# 
  7771  090C                     	;# 
  7772  090E                     	;# 
  7773  090F                     	;# 
  7774  091F                     	;# 
  7775  098F                     	;# 
  7776  098F                     	;# 
  7777  0990                     	;# 
  7778  0991                     	;# 
  7779  0992                     	;# 
  7780  0993                     	;# 
  7781  0994                     	;# 
  7782  0995                     	;# 
  7783  0996                     	;# 
  7784  0997                     	;# 
  7785  1E0F                     	;# 
  7786  1E10                     	;# 
  7787  1E11                     	;# 
  7788  1E12                     	;# 
  7789  1E13                     	;# 
  7790  1E14                     	;# 
  7791  1E15                     	;# 
  7792  1E16                     	;# 
  7793  1E17                     	;# 
  7794  1E18                     	;# 
  7795  1E19                     	;# 
  7796  1E1A                     	;# 
  7797  1E1B                     	;# 
  7798  1E1C                     	;# 
  7799  1E1D                     	;# 
  7800  1E1E                     	;# 
  7801  1E1F                     	;# 
  7802  1E20                     	;# 
  7803  1E21                     	;# 
  7804  1E22                     	;# 
  7805  1E23                     	;# 
  7806  1E24                     	;# 
  7807  1E25                     	;# 
  7808  1E26                     	;# 
  7809  1E27                     	;# 
  7810  1E28                     	;# 
  7811  1E29                     	;# 
  7812  1E2A                     	;# 
  7813  1E2B                     	;# 
  7814  1E2C                     	;# 
  7815  1E2D                     	;# 
  7816  1E2E                     	;# 
  7817  1E2F                     	;# 
  7818  1E30                     	;# 
  7819  1E31                     	;# 
  7820  1E32                     	;# 
  7821  1E33                     	;# 
  7822  1E34                     	;# 
  7823  1E35                     	;# 
  7824  1E36                     	;# 
  7825  1E37                     	;# 
  7826  1E8F                     	;# 
  7827  1E90                     	;# 
  7828  1E91                     	;# 
  7829  1E92                     	;# 
  7830  1E93                     	;# 
  7831  1E94                     	;# 
  7832  1E95                     	;# 
  7833  1E96                     	;# 
  7834  1E97                     	;# 
  7835  1E9C                     	;# 
  7836  1E9D                     	;# 
  7837  1E9E                     	;# 
  7838  1EA1                     	;# 
  7839  1EA2                     	;# 
  7840  1EA3                     	;# 
  7841  1EA4                     	;# 
  7842  1EA9                     	;# 
  7843  1EAA                     	;# 
  7844  1EB1                     	;# 
  7845  1EB2                     	;# 
  7846  1EB8                     	;# 
  7847  1EB9                     	;# 
  7848  1EBA                     	;# 
  7849  1EBB                     	;# 
  7850  1EBC                     	;# 
  7851  1EBD                     	;# 
  7852  1EBE                     	;# 
  7853  1EC3                     	;# 
  7854  1EC5                     	;# 
  7855  1EC6                     	;# 
  7856  1EC7                     	;# 
  7857  1EC8                     	;# 
  7858  1EC9                     	;# 
  7859  1ECA                     	;# 
  7860  1ECB                     	;# 
  7861  1ECB                     	;# 
  7862  1ECB                     	;# 
  7863  1ECC                     	;# 
  7864  1ECC                     	;# 
  7865  1ECC                     	;# 
  7866  1F10                     	;# 
  7867  1F11                     	;# 
  7868  1F12                     	;# 
  7869  1F14                     	;# 
  7870  1F15                     	;# 
  7871  1F1C                     	;# 
  7872  1F1D                     	;# 
  7873  1F1E                     	;# 
  7874  1F1F                     	;# 
  7875  1F20                     	;# 
  7876  1F21                     	;# 
  7877  1F22                     	;# 
  7878  1F23                     	;# 
  7879  1F24                     	;# 
  7880  1F25                     	;# 
  7881  1F26                     	;# 
  7882  1F27                     	;# 
  7883  1F38                     	;# 
  7884  1F39                     	;# 
  7885  1F3A                     	;# 
  7886  1F3B                     	;# 
  7887  1F3C                     	;# 
  7888  1F3D                     	;# 
  7889  1F3E                     	;# 
  7890  1F3F                     	;# 
  7891  1F43                     	;# 
  7892  1F44                     	;# 
  7893  1F45                     	;# 
  7894  1F46                     	;# 
  7895  1F47                     	;# 
  7896  1F48                     	;# 
  7897  1F49                     	;# 
  7898  1F4A                     	;# 
  7899  1F4E                     	;# 
  7900  1F4F                     	;# 
  7901  1F50                     	;# 
  7902  1F51                     	;# 
  7903  1F52                     	;# 
  7904  1F53                     	;# 
  7905  1F54                     	;# 
  7906  1F55                     	;# 
  7907  1FE4                     	;# 
  7908  1FE5                     	;# 
  7909  1FE6                     	;# 
  7910  1FE7                     	;# 
  7911  1FE8                     	;# 
  7912  1FE8                     	;# 
  7913  1FE9                     	;# 
  7914  1FEA                     	;# 
  7915  1FEB                     	;# 
  7916  1FED                     	;# 
  7917  1FEE                     	;# 
  7918  1FEF                     	;# 
  7919  0000                     	;# 
  7920  0001                     	;# 
  7921  0002                     	;# 
  7922  0003                     	;# 
  7923  0004                     	;# 
  7924  0005                     	;# 
  7925  0006                     	;# 
  7926  0007                     	;# 
  7927  0008                     	;# 
  7928  0009                     	;# 
  7929  000A                     	;# 
  7930  000B                     	;# 
  7931  000C                     	;# 
  7932  000D                     	;# 
  7933  000E                     	;# 
  7934  0012                     	;# 
  7935  0013                     	;# 
  7936  0014                     	;# 
  7937  0018                     	;# 
  7938  0019                     	;# 
  7939  001A                     	;# 
  7940  008C                     	;# 
  7941  008C                     	;# 
  7942  008D                     	;# 
  7943  008E                     	;# 
  7944  008E                     	;# 
  7945  008F                     	;# 
  7946  0090                     	;# 
  7947  0090                     	;# 
  7948  0091                     	;# 
  7949  0092                     	;# 
  7950  0092                     	;# 
  7951  0093                     	;# 
  7952  0094                     	;# 
  7953  0094                     	;# 
  7954  0095                     	;# 
  7955  0096                     	;# 
  7956  0096                     	;# 
  7957  0097                     	;# 
  7958  0098                     	;# 
  7959  0099                     	;# 
  7960  009A                     	;# 
  7961  009B                     	;# 
  7962  009B                     	;# 
  7963  009C                     	;# 
  7964  009D                     	;# 
  7965  009D                     	;# 
  7966  009E                     	;# 
  7967  009F                     	;# 
  7968  010C                     	;# 
  7969  010C                     	;# 
  7970  010D                     	;# 
  7971  010E                     	;# 
  7972  010F                     	;# 
  7973  010F                     	;# 
  7974  0110                     	;# 
  7975  0111                     	;# 
  7976  0112                     	;# 
  7977  0113                     	;# 
  7978  0114                     	;# 
  7979  0115                     	;# 
  7980  0116                     	;# 
  7981  0117                     	;# 
  7982  0118                     	;# 
  7983  0119                     	;# 
  7984  0119                     	;# 
  7985  0119                     	;# 
  7986  011A                     	;# 
  7987  011A                     	;# 
  7988  011A                     	;# 
  7989  011B                     	;# 
  7990  011B                     	;# 
  7991  011B                     	;# 
  7992  011B                     	;# 
  7993  011B                     	;# 
  7994  011C                     	;# 
  7995  011C                     	;# 
  7996  011C                     	;# 
  7997  011D                     	;# 
  7998  011D                     	;# 
  7999  011D                     	;# 
  8000  011E                     	;# 
  8001  011E                     	;# 
  8002  011E                     	;# 
  8003  011F                     	;# 
  8004  011F                     	;# 
  8005  011F                     	;# 
  8006  011F                     	;# 
  8007  011F                     	;# 
  8008  018C                     	;# 
  8009  018D                     	;# 
  8010  018E                     	;# 
  8011  018F                     	;# 
  8012  0190                     	;# 
  8013  0191                     	;# 
  8014  0192                     	;# 
  8015  0196                     	;# 
  8016  0197                     	;# 
  8017  0198                     	;# 
  8018  0199                     	;# 
  8019  019A                     	;# 
  8020  019B                     	;# 
  8021  019C                     	;# 
  8022  020C                     	;# 
  8023  020D                     	;# 
  8024  020E                     	;# 
  8025  020E                     	;# 
  8026  020F                     	;# 
  8027  020F                     	;# 
  8028  0210                     	;# 
  8029  0210                     	;# 
  8030  0211                     	;# 
  8031  0211                     	;# 
  8032  0212                     	;# 
  8033  0213                     	;# 
  8034  0214                     	;# 
  8035  0214                     	;# 
  8036  0215                     	;# 
  8037  0215                     	;# 
  8038  0216                     	;# 
  8039  0216                     	;# 
  8040  0217                     	;# 
  8041  0217                     	;# 
  8042  0218                     	;# 
  8043  0219                     	;# 
  8044  021A                     	;# 
  8045  021A                     	;# 
  8046  021B                     	;# 
  8047  021B                     	;# 
  8048  021C                     	;# 
  8049  021C                     	;# 
  8050  021D                     	;# 
  8051  021D                     	;# 
  8052  021E                     	;# 
  8053  021F                     	;# 
  8054  028C                     	;# 
  8055  028C                     	;# 
  8056  028D                     	;# 
  8057  028D                     	;# 
  8058  028E                     	;# 
  8059  028F                     	;# 
  8060  0290                     	;# 
  8061  0291                     	;# 
  8062  0292                     	;# 
  8063  0292                     	;# 
  8064  0293                     	;# 
  8065  0293                     	;# 
  8066  0294                     	;# 
  8067  0295                     	;# 
  8068  0296                     	;# 
  8069  0297                     	;# 
  8070  0298                     	;# 
  8071  0298                     	;# 
  8072  0299                     	;# 
  8073  0299                     	;# 
  8074  029A                     	;# 
  8075  029B                     	;# 
  8076  029C                     	;# 
  8077  029D                     	;# 
  8078  029F                     	;# 
  8079  030C                     	;# 
  8080  030C                     	;# 
  8081  030D                     	;# 
  8082  030E                     	;# 
  8083  030F                     	;# 
  8084  0310                     	;# 
  8085  0310                     	;# 
  8086  0311                     	;# 
  8087  0312                     	;# 
  8088  0313                     	;# 
  8089  0314                     	;# 
  8090  0314                     	;# 
  8091  0315                     	;# 
  8092  0316                     	;# 
  8093  0317                     	;# 
  8094  0318                     	;# 
  8095  0318                     	;# 
  8096  0319                     	;# 
  8097  031A                     	;# 
  8098  031B                     	;# 
  8099  038C                     	;# 
  8100  038C                     	;# 
  8101  038D                     	;# 
  8102  038E                     	;# 
  8103  0390                     	;# 
  8104  0390                     	;# 
  8105  0391                     	;# 
  8106  0392                     	;# 
  8107  048C                     	;# 
  8108  048C                     	;# 
  8109  048D                     	;# 
  8110  048E                     	;# 
  8111  048F                     	;# 
  8112  048F                     	;# 
  8113  0490                     	;# 
  8114  0491                     	;# 
  8115  0492                     	;# 
  8116  0492                     	;# 
  8117  0493                     	;# 
  8118  0494                     	;# 
  8119  0495                     	;# 
  8120  0495                     	;# 
  8121  0496                     	;# 
  8122  0497                     	;# 
  8123  0498                     	;# 
  8124  0499                     	;# 
  8125  049A                     	;# 
  8126  049B                     	;# 
  8127  049C                     	;# 
  8128  049D                     	;# 
  8129  058C                     	;# 
  8130  058C                     	;# 
  8131  058D                     	;# 
  8132  058E                     	;# 
  8133  058F                     	;# 
  8134  058F                     	;# 
  8135  0590                     	;# 
  8136  0591                     	;# 
  8137  0592                     	;# 
  8138  0593                     	;# 
  8139  059C                     	;# 
  8140  059C                     	;# 
  8141  059D                     	;# 
  8142  059D                     	;# 
  8143  059E                     	;# 
  8144  059F                     	;# 
  8145  060C                     	;# 
  8146  060C                     	;# 
  8147  060D                     	;# 
  8148  060D                     	;# 
  8149  060E                     	;# 
  8150  060F                     	;# 
  8151  0610                     	;# 
  8152  0611                     	;# 
  8153  0612                     	;# 
  8154  0613                     	;# 
  8155  0614                     	;# 
  8156  0616                     	;# 
  8157  0616                     	;# 
  8158  0617                     	;# 
  8159  0617                     	;# 
  8160  0618                     	;# 
  8161  0619                     	;# 
  8162  061A                     	;# 
  8163  061B                     	;# 
  8164  061C                     	;# 
  8165  061D                     	;# 
  8166  061E                     	;# 
  8167  070C                     	;# 
  8168  070D                     	;# 
  8169  070E                     	;# 
  8170  070F                     	;# 
  8171  0710                     	;# 
  8172  0711                     	;# 
  8173  0712                     	;# 
  8174  0713                     	;# 
  8175  0714                     	;# 
  8176  0716                     	;# 
  8177  0717                     	;# 
  8178  0718                     	;# 
  8179  0719                     	;# 
  8180  071A                     	;# 
  8181  071B                     	;# 
  8182  071C                     	;# 
  8183  071D                     	;# 
  8184  071E                     	;# 
  8185  0796                     	;# 
  8186  0797                     	;# 
  8187  0798                     	;# 
  8188  0799                     	;# 
  8189  079A                     	;# 
  8190  079B                     	;# 
  8191  079C                     	;# 
  8192  079D                     	;# 
  8193  080C                     	;# 
  8194  080D                     	;# 
  8195  080E                     	;# 
  8196  080F                     	;# 
  8197  0810                     	;# 
  8198  0811                     	;# 
  8199  0812                     	;# 
  8200  0813                     	;# 
  8201  0814                     	;# 
  8202  081A                     	;# 
  8203  081A                     	;# 
  8204  081B                     	;# 
  8205  081C                     	;# 
  8206  081C                     	;# 
  8207  081D                     	;# 
  8208  081E                     	;# 
  8209  081F                     	;# 
  8210  088C                     	;# 
  8211  088D                     	;# 
  8212  088E                     	;# 
  8213  088F                     	;# 
  8214  0890                     	;# 
  8215  0891                     	;# 
  8216  0892                     	;# 
  8217  0893                     	;# 
  8218  0895                     	;# 
  8219  0896                     	;# 
  8220  0897                     	;# 
  8221  0898                     	;# 
  8222  0899                     	;# 
  8223  089A                     	;# 
  8224  089B                     	;# 
  8225  090C                     	;# 
  8226  090E                     	;# 
  8227  090F                     	;# 
  8228  091F                     	;# 
  8229  098F                     	;# 
  8230  098F                     	;# 
  8231  0990                     	;# 
  8232  0991                     	;# 
  8233  0992                     	;# 
  8234  0993                     	;# 
  8235  0994                     	;# 
  8236  0995                     	;# 
  8237  0996                     	;# 
  8238  0997                     	;# 
  8239  1E0F                     	;# 
  8240  1E10                     	;# 
  8241  1E11                     	;# 
  8242  1E12                     	;# 
  8243  1E13                     	;# 
  8244  1E14                     	;# 
  8245  1E15                     	;# 
  8246  1E16                     	;# 
  8247  1E17                     	;# 
  8248  1E18                     	;# 
  8249  1E19                     	;# 
  8250  1E1A                     	;# 
  8251  1E1B                     	;# 
  8252  1E1C                     	;# 
  8253  1E1D                     	;# 
  8254  1E1E                     	;# 
  8255  1E1F                     	;# 
  8256  1E20                     	;# 
  8257  1E21                     	;# 
  8258  1E22                     	;# 
  8259  1E23                     	;# 
  8260  1E24                     	;# 
  8261  1E25                     	;# 
  8262  1E26                     	;# 
  8263  1E27                     	;# 
  8264  1E28                     	;# 
  8265  1E29                     	;# 
  8266  1E2A                     	;# 
  8267  1E2B                     	;# 
  8268  1E2C                     	;# 
  8269  1E2D                     	;# 
  8270  1E2E                     	;# 
  8271  1E2F                     	;# 
  8272  1E30                     	;# 
  8273  1E31                     	;# 
  8274  1E32                     	;# 
  8275  1E33                     	;# 
  8276  1E34                     	;# 
  8277  1E35                     	;# 
  8278  1E36                     	;# 
  8279  1E37                     	;# 
  8280  1E8F                     	;# 
  8281  1E90                     	;# 
  8282  1E91                     	;# 
  8283  1E92                     	;# 
  8284  1E93                     	;# 
  8285  1E94                     	;# 
  8286  1E95                     	;# 
  8287  1E96                     	;# 
  8288  1E97                     	;# 
  8289  1E9C                     	;# 
  8290  1E9D                     	;# 
  8291  1E9E                     	;# 
  8292  1EA1                     	;# 
  8293  1EA2                     	;# 
  8294  1EA3                     	;# 
  8295  1EA4                     	;# 
  8296  1EA9                     	;# 
  8297  1EAA                     	;# 
  8298  1EB1                     	;# 
  8299  1EB2                     	;# 
  8300  1EB8                     	;# 
  8301  1EB9                     	;# 
  8302  1EBA                     	;# 
  8303  1EBB                     	;# 
  8304  1EBC                     	;# 
  8305  1EBD                     	;# 
  8306  1EBE                     	;# 
  8307  1EC3                     	;# 
  8308  1EC5                     	;# 
  8309  1EC6                     	;# 
  8310  1EC7                     	;# 
  8311  1EC8                     	;# 
  8312  1EC9                     	;# 
  8313  1ECA                     	;# 
  8314  1ECB                     	;# 
  8315  1ECB                     	;# 
  8316  1ECB                     	;# 
  8317  1ECC                     	;# 
  8318  1ECC                     	;# 
  8319  1ECC                     	;# 
  8320  1F10                     	;# 
  8321  1F11                     	;# 
  8322  1F12                     	;# 
  8323  1F14                     	;# 
  8324  1F15                     	;# 
  8325  1F1C                     	;# 
  8326  1F1D                     	;# 
  8327  1F1E                     	;# 
  8328  1F1F                     	;# 
  8329  1F20                     	;# 
  8330  1F21                     	;# 
  8331  1F22                     	;# 
  8332  1F23                     	;# 
  8333  1F24                     	;# 
  8334  1F25                     	;# 
  8335  1F26                     	;# 
  8336  1F27                     	;# 
  8337  1F38                     	;# 
  8338  1F39                     	;# 
  8339  1F3A                     	;# 
  8340  1F3B                     	;# 
  8341  1F3C                     	;# 
  8342  1F3D                     	;# 
  8343  1F3E                     	;# 
  8344  1F3F                     	;# 
  8345  1F43                     	;# 
  8346  1F44                     	;# 
  8347  1F45                     	;# 
  8348  1F46                     	;# 
  8349  1F47                     	;# 
  8350  1F48                     	;# 
  8351  1F49                     	;# 
  8352  1F4A                     	;# 
  8353  1F4E                     	;# 
  8354  1F4F                     	;# 
  8355  1F50                     	;# 
  8356  1F51                     	;# 
  8357  1F52                     	;# 
  8358  1F53                     	;# 
  8359  1F54                     	;# 
  8360  1F55                     	;# 
  8361  1FE4                     	;# 
  8362  1FE5                     	;# 
  8363  1FE6                     	;# 
  8364  1FE7                     	;# 
  8365  1FE8                     	;# 
  8366  1FE8                     	;# 
  8367  1FE9                     	;# 
  8368  1FEA                     	;# 
  8369  1FEB                     	;# 
  8370  1FED                     	;# 
  8371  1FEE                     	;# 
  8372  1FEF                     	;# 
  8373  0000                     	;# 
  8374  0001                     	;# 
  8375  0002                     	;# 
  8376  0003                     	;# 
  8377  0004                     	;# 
  8378  0005                     	;# 
  8379  0006                     	;# 
  8380  0007                     	;# 
  8381  0008                     	;# 
  8382  0009                     	;# 
  8383  000A                     	;# 
  8384  000B                     	;# 
  8385  000C                     	;# 
  8386  000D                     	;# 
  8387  000E                     	;# 
  8388  0012                     	;# 
  8389  0013                     	;# 
  8390  0014                     	;# 
  8391  0018                     	;# 
  8392  0019                     	;# 
  8393  001A                     	;# 
  8394  008C                     	;# 
  8395  008C                     	;# 
  8396  008D                     	;# 
  8397  008E                     	;# 
  8398  008E                     	;# 
  8399  008F                     	;# 
  8400  0090                     	;# 
  8401  0090                     	;# 
  8402  0091                     	;# 
  8403  0092                     	;# 
  8404  0092                     	;# 
  8405  0093                     	;# 
  8406  0094                     	;# 
  8407  0094                     	;# 
  8408  0095                     	;# 
  8409  0096                     	;# 
  8410  0096                     	;# 
  8411  0097                     	;# 
  8412  0098                     	;# 
  8413  0099                     	;# 
  8414  009A                     	;# 
  8415  009B                     	;# 
  8416  009B                     	;# 
  8417  009C                     	;# 
  8418  009D                     	;# 
  8419  009D                     	;# 
  8420  009E                     	;# 
  8421  009F                     	;# 
  8422  010C                     	;# 
  8423  010C                     	;# 
  8424  010D                     	;# 
  8425  010E                     	;# 
  8426  010F                     	;# 
  8427  010F                     	;# 
  8428  0110                     	;# 
  8429  0111                     	;# 
  8430  0112                     	;# 
  8431  0113                     	;# 
  8432  0114                     	;# 
  8433  0115                     	;# 
  8434  0116                     	;# 
  8435  0117                     	;# 
  8436  0118                     	;# 
  8437  0119                     	;# 
  8438  0119                     	;# 
  8439  0119                     	;# 
  8440  011A                     	;# 
  8441  011A                     	;# 
  8442  011A                     	;# 
  8443  011B                     	;# 
  8444  011B                     	;# 
  8445  011B                     	;# 
  8446  011B                     	;# 
  8447  011B                     	;# 
  8448  011C                     	;# 
  8449  011C                     	;# 
  8450  011C                     	;# 
  8451  011D                     	;# 
  8452  011D                     	;# 
  8453  011D                     	;# 
  8454  011E                     	;# 
  8455  011E                     	;# 
  8456  011E                     	;# 
  8457  011F                     	;# 
  8458  011F                     	;# 
  8459  011F                     	;# 
  8460  011F                     	;# 
  8461  011F                     	;# 
  8462  018C                     	;# 
  8463  018D                     	;# 
  8464  018E                     	;# 
  8465  018F                     	;# 
  8466  0190                     	;# 
  8467  0191                     	;# 
  8468  0192                     	;# 
  8469  0196                     	;# 
  8470  0197                     	;# 
  8471  0198                     	;# 
  8472  0199                     	;# 
  8473  019A                     	;# 
  8474  019B                     	;# 
  8475  019C                     	;# 
  8476  020C                     	;# 
  8477  020D                     	;# 
  8478  020E                     	;# 
  8479  020E                     	;# 
  8480  020F                     	;# 
  8481  020F                     	;# 
  8482  0210                     	;# 
  8483  0210                     	;# 
  8484  0211                     	;# 
  8485  0211                     	;# 
  8486  0212                     	;# 
  8487  0213                     	;# 
  8488  0214                     	;# 
  8489  0214                     	;# 
  8490  0215                     	;# 
  8491  0215                     	;# 
  8492  0216                     	;# 
  8493  0216                     	;# 
  8494  0217                     	;# 
  8495  0217                     	;# 
  8496  0218                     	;# 
  8497  0219                     	;# 
  8498  021A                     	;# 
  8499  021A                     	;# 
  8500  021B                     	;# 
  8501  021B                     	;# 
  8502  021C                     	;# 
  8503  021C                     	;# 
  8504  021D                     	;# 
  8505  021D                     	;# 
  8506  021E                     	;# 
  8507  021F                     	;# 
  8508  028C                     	;# 
  8509  028C                     	;# 
  8510  028D                     	;# 
  8511  028D                     	;# 
  8512  028E                     	;# 
  8513  028F                     	;# 
  8514  0290                     	;# 
  8515  0291                     	;# 
  8516  0292                     	;# 
  8517  0292                     	;# 
  8518  0293                     	;# 
  8519  0293                     	;# 
  8520  0294                     	;# 
  8521  0295                     	;# 
  8522  0296                     	;# 
  8523  0297                     	;# 
  8524  0298                     	;# 
  8525  0298                     	;# 
  8526  0299                     	;# 
  8527  0299                     	;# 
  8528  029A                     	;# 
  8529  029B                     	;# 
  8530  029C                     	;# 
  8531  029D                     	;# 
  8532  029F                     	;# 
  8533  030C                     	;# 
  8534  030C                     	;# 
  8535  030D                     	;# 
  8536  030E                     	;# 
  8537  030F                     	;# 
  8538  0310                     	;# 
  8539  0310                     	;# 
  8540  0311                     	;# 
  8541  0312                     	;# 
  8542  0313                     	;# 
  8543  0314                     	;# 
  8544  0314                     	;# 
  8545  0315                     	;# 
  8546  0316                     	;# 
  8547  0317                     	;# 
  8548  0318                     	;# 
  8549  0318                     	;# 
  8550  0319                     	;# 
  8551  031A                     	;# 
  8552  031B                     	;# 
  8553  038C                     	;# 
  8554  038C                     	;# 
  8555  038D                     	;# 
  8556  038E                     	;# 
  8557  0390                     	;# 
  8558  0390                     	;# 
  8559  0391                     	;# 
  8560  0392                     	;# 
  8561  048C                     	;# 
  8562  048C                     	;# 
  8563  048D                     	;# 
  8564  048E                     	;# 
  8565  048F                     	;# 
  8566  048F                     	;# 
  8567  0490                     	;# 
  8568  0491                     	;# 
  8569  0492                     	;# 
  8570  0492                     	;# 
  8571  0493                     	;# 
  8572  0494                     	;# 
  8573  0495                     	;# 
  8574  0495                     	;# 
  8575  0496                     	;# 
  8576  0497                     	;# 
  8577  0498                     	;# 
  8578  0499                     	;# 
  8579  049A                     	;# 
  8580  049B                     	;# 
  8581  049C                     	;# 
  8582  049D                     	;# 
  8583  058C                     	;# 
  8584  058C                     	;# 
  8585  058D                     	;# 
  8586  058E                     	;# 
  8587  058F                     	;# 
  8588  058F                     	;# 
  8589  0590                     	;# 
  8590  0591                     	;# 
  8591  0592                     	;# 
  8592  0593                     	;# 
  8593  059C                     	;# 
  8594  059C                     	;# 
  8595  059D                     	;# 
  8596  059D                     	;# 
  8597  059E                     	;# 
  8598  059F                     	;# 
  8599  060C                     	;# 
  8600  060C                     	;# 
  8601  060D                     	;# 
  8602  060D                     	;# 
  8603  060E                     	;# 
  8604  060F                     	;# 
  8605  0610                     	;# 
  8606  0611                     	;# 
  8607  0612                     	;# 
  8608  0613                     	;# 
  8609  0614                     	;# 
  8610  0616                     	;# 
  8611  0616                     	;# 
  8612  0617                     	;# 
  8613  0617                     	;# 
  8614  0618                     	;# 
  8615  0619                     	;# 
  8616  061A                     	;# 
  8617  061B                     	;# 
  8618  061C                     	;# 
  8619  061D                     	;# 
  8620  061E                     	;# 
  8621  070C                     	;# 
  8622  070D                     	;# 
  8623  070E                     	;# 
  8624  070F                     	;# 
  8625  0710                     	;# 
  8626  0711                     	;# 
  8627  0712                     	;# 
  8628  0713                     	;# 
  8629  0714                     	;# 
  8630  0716                     	;# 
  8631  0717                     	;# 
  8632  0718                     	;# 
  8633  0719                     	;# 
  8634  071A                     	;# 
  8635  071B                     	;# 
  8636  071C                     	;# 
  8637  071D                     	;# 
  8638  071E                     	;# 
  8639  0796                     	;# 
  8640  0797                     	;# 
  8641  0798                     	;# 
  8642  0799                     	;# 
  8643  079A                     	;# 
  8644  079B                     	;# 
  8645  079C                     	;# 
  8646  079D                     	;# 
  8647  080C                     	;# 
  8648  080D                     	;# 
  8649  080E                     	;# 
  8650  080F                     	;# 
  8651  0810                     	;# 
  8652  0811                     	;# 
  8653  0812                     	;# 
  8654  0813                     	;# 
  8655  0814                     	;# 
  8656  081A                     	;# 
  8657  081A                     	;# 
  8658  081B                     	;# 
  8659  081C                     	;# 
  8660  081C                     	;# 
  8661  081D                     	;# 
  8662  081E                     	;# 
  8663  081F                     	;# 
  8664  088C                     	;# 
  8665  088D                     	;# 
  8666  088E                     	;# 
  8667  088F                     	;# 
  8668  0890                     	;# 
  8669  0891                     	;# 
  8670  0892                     	;# 
  8671  0893                     	;# 
  8672  0895                     	;# 
  8673  0896                     	;# 
  8674  0897                     	;# 
  8675  0898                     	;# 
  8676  0899                     	;# 
  8677  089A                     	;# 
  8678  089B                     	;# 
  8679  090C                     	;# 
  8680  090E                     	;# 
  8681  090F                     	;# 
  8682  091F                     	;# 
  8683  098F                     	;# 
  8684  098F                     	;# 
  8685  0990                     	;# 
  8686  0991                     	;# 
  8687  0992                     	;# 
  8688  0993                     	;# 
  8689  0994                     	;# 
  8690  0995                     	;# 
  8691  0996                     	;# 
  8692  0997                     	;# 
  8693  1E0F                     	;# 
  8694  1E10                     	;# 
  8695  1E11                     	;# 
  8696  1E12                     	;# 
  8697  1E13                     	;# 
  8698  1E14                     	;# 
  8699  1E15                     	;# 
  8700  1E16                     	;# 
  8701  1E17                     	;# 
  8702  1E18                     	;# 
  8703  1E19                     	;# 
  8704  1E1A                     	;# 
  8705  1E1B                     	;# 
  8706  1E1C                     	;# 
  8707  1E1D                     	;# 
  8708  1E1E                     	;# 
  8709  1E1F                     	;# 
  8710  1E20                     	;# 
  8711  1E21                     	;# 
  8712  1E22                     	;# 
  8713  1E23                     	;# 
  8714  1E24                     	;# 
  8715  1E25                     	;# 
  8716  1E26                     	;# 
  8717  1E27                     	;# 
  8718  1E28                     	;# 
  8719  1E29                     	;# 
  8720  1E2A                     	;# 
  8721  1E2B                     	;# 
  8722  1E2C                     	;# 
  8723  1E2D                     	;# 
  8724  1E2E                     	;# 
  8725  1E2F                     	;# 
  8726  1E30                     	;# 
  8727  1E31                     	;# 
  8728  1E32                     	;# 
  8729  1E33                     	;# 
  8730  1E34                     	;# 
  8731  1E35                     	;# 
  8732  1E36                     	;# 
  8733  1E37                     	;# 
  8734  1E8F                     	;# 
  8735  1E90                     	;# 
  8736  1E91                     	;# 
  8737  1E92                     	;# 
  8738  1E93                     	;# 
  8739  1E94                     	;# 
  8740  1E95                     	;# 
  8741  1E96                     	;# 
  8742  1E97                     	;# 
  8743  1E9C                     	;# 
  8744  1E9D                     	;# 
  8745  1E9E                     	;# 
  8746  1EA1                     	;# 
  8747  1EA2                     	;# 
  8748  1EA3                     	;# 
  8749  1EA4                     	;# 
  8750  1EA9                     	;# 
  8751  1EAA                     	;# 
  8752  1EB1                     	;# 
  8753  1EB2                     	;# 
  8754  1EB8                     	;# 
  8755  1EB9                     	;# 
  8756  1EBA                     	;# 
  8757  1EBB                     	;# 
  8758  1EBC                     	;# 
  8759  1EBD                     	;# 
  8760  1EBE                     	;# 
  8761  1EC3                     	;# 
  8762  1EC5                     	;# 
  8763  1EC6                     	;# 
  8764  1EC7                     	;# 
  8765  1EC8                     	;# 
  8766  1EC9                     	;# 
  8767  1ECA                     	;# 
  8768  1ECB                     	;# 
  8769  1ECB                     	;# 
  8770  1ECB                     	;# 
  8771  1ECC                     	;# 
  8772  1ECC                     	;# 
  8773  1ECC                     	;# 
  8774  1F10                     	;# 
  8775  1F11                     	;# 
  8776  1F12                     	;# 
  8777  1F14                     	;# 
  8778  1F15                     	;# 
  8779  1F1C                     	;# 
  8780  1F1D                     	;# 
  8781  1F1E                     	;# 
  8782  1F1F                     	;# 
  8783  1F20                     	;# 
  8784  1F21                     	;# 
  8785  1F22                     	;# 
  8786  1F23                     	;# 
  8787  1F24                     	;# 
  8788  1F25                     	;# 
  8789  1F26                     	;# 
  8790  1F27                     	;# 
  8791  1F38                     	;# 
  8792  1F39                     	;# 
  8793  1F3A                     	;# 
  8794  1F3B                     	;# 
  8795  1F3C                     	;# 
  8796  1F3D                     	;# 
  8797  1F3E                     	;# 
  8798  1F3F                     	;# 
  8799  1F43                     	;# 
  8800  1F44                     	;# 
  8801  1F45                     	;# 
  8802  1F46                     	;# 
  8803  1F47                     	;# 
  8804  1F48                     	;# 
  8805  1F49                     	;# 
  8806  1F4A                     	;# 
  8807  1F4E                     	;# 
  8808  1F4F                     	;# 
  8809  1F50                     	;# 
  8810  1F51                     	;# 
  8811  1F52                     	;# 
  8812  1F53                     	;# 
  8813  1F54                     	;# 
  8814  1F55                     	;# 
  8815  1FE4                     	;# 
  8816  1FE5                     	;# 
  8817  1FE6                     	;# 
  8818  1FE7                     	;# 
  8819  1FE8                     	;# 
  8820  1FE8                     	;# 
  8821  1FE9                     	;# 
  8822  1FEA                     	;# 
  8823  1FEB                     	;# 
  8824  1FED                     	;# 
  8825  1FEE                     	;# 
  8826  1FEF                     	;# 
  8827  0000                     	;# 
  8828  0001                     	;# 
  8829  0002                     	;# 
  8830  0003                     	;# 
  8831  0004                     	;# 
  8832  0005                     	;# 
  8833  0006                     	;# 
  8834  0007                     	;# 
  8835  0008                     	;# 
  8836  0009                     	;# 
  8837  000A                     	;# 
  8838  000B                     	;# 
  8839  000C                     	;# 
  8840  000D                     	;# 
  8841  000E                     	;# 
  8842  0012                     	;# 
  8843  0013                     	;# 
  8844  0014                     	;# 
  8845  0018                     	;# 
  8846  0019                     	;# 
  8847  001A                     	;# 
  8848  008C                     	;# 
  8849  008C                     	;# 
  8850  008D                     	;# 
  8851  008E                     	;# 
  8852  008E                     	;# 
  8853  008F                     	;# 
  8854  0090                     	;# 
  8855  0090                     	;# 
  8856  0091                     	;# 
  8857  0092                     	;# 
  8858  0092                     	;# 
  8859  0093                     	;# 
  8860  0094                     	;# 
  8861  0094                     	;# 
  8862  0095                     	;# 
  8863  0096                     	;# 
  8864  0096                     	;# 
  8865  0097                     	;# 
  8866  0098                     	;# 
  8867  0099                     	;# 
  8868  009A                     	;# 
  8869  009B                     	;# 
  8870  009B                     	;# 
  8871  009C                     	;# 
  8872  009D                     	;# 
  8873  009D                     	;# 
  8874  009E                     	;# 
  8875  009F                     	;# 
  8876  010C                     	;# 
  8877  010C                     	;# 
  8878  010D                     	;# 
  8879  010E                     	;# 
  8880  010F                     	;# 
  8881  010F                     	;# 
  8882  0110                     	;# 
  8883  0111                     	;# 
  8884  0112                     	;# 
  8885  0113                     	;# 
  8886  0114                     	;# 
  8887  0115                     	;# 
  8888  0116                     	;# 
  8889  0117                     	;# 
  8890  0118                     	;# 
  8891  0119                     	;# 
  8892  0119                     	;# 
  8893  0119                     	;# 
  8894  011A                     	;# 
  8895  011A                     	;# 
  8896  011A                     	;# 
  8897  011B                     	;# 
  8898  011B                     	;# 
  8899  011B                     	;# 
  8900  011B                     	;# 
  8901  011B                     	;# 
  8902  011C                     	;# 
  8903  011C                     	;# 
  8904  011C                     	;# 
  8905  011D                     	;# 
  8906  011D                     	;# 
  8907  011D                     	;# 
  8908  011E                     	;# 
  8909  011E                     	;# 
  8910  011E                     	;# 
  8911  011F                     	;# 
  8912  011F                     	;# 
  8913  011F                     	;# 
  8914  011F                     	;# 
  8915  011F                     	;# 
  8916  018C                     	;# 
  8917  018D                     	;# 
  8918  018E                     	;# 
  8919  018F                     	;# 
  8920  0190                     	;# 
  8921  0191                     	;# 
  8922  0192                     	;# 
  8923  0196                     	;# 
  8924  0197                     	;# 
  8925  0198                     	;# 
  8926  0199                     	;# 
  8927  019A                     	;# 
  8928  019B                     	;# 
  8929  019C                     	;# 
  8930  020C                     	;# 
  8931  020D                     	;# 
  8932  020E                     	;# 
  8933  020E                     	;# 
  8934  020F                     	;# 
  8935  020F                     	;# 
  8936  0210                     	;# 
  8937  0210                     	;# 
  8938  0211                     	;# 
  8939  0211                     	;# 
  8940  0212                     	;# 
  8941  0213                     	;# 
  8942  0214                     	;# 
  8943  0214                     	;# 
  8944  0215                     	;# 
  8945  0215                     	;# 
  8946  0216                     	;# 
  8947  0216                     	;# 
  8948  0217                     	;# 
  8949  0217                     	;# 
  8950  0218                     	;# 
  8951  0219                     	;# 
  8952  021A                     	;# 
  8953  021A                     	;# 
  8954  021B                     	;# 
  8955  021B                     	;# 
  8956  021C                     	;# 
  8957  021C                     	;# 
  8958  021D                     	;# 
  8959  021D                     	;# 
  8960  021E                     	;# 
  8961  021F                     	;# 
  8962  028C                     	;# 
  8963  028C                     	;# 
  8964  028D                     	;# 
  8965  028D                     	;# 
  8966  028E                     	;# 
  8967  028F                     	;# 
  8968  0290                     	;# 
  8969  0291                     	;# 
  8970  0292                     	;# 
  8971  0292                     	;# 
  8972  0293                     	;# 
  8973  0293                     	;# 
  8974  0294                     	;# 
  8975  0295                     	;# 
  8976  0296                     	;# 
  8977  0297                     	;# 
  8978  0298                     	;# 
  8979  0298                     	;# 
  8980  0299                     	;# 
  8981  0299                     	;# 
  8982  029A                     	;# 
  8983  029B                     	;# 
  8984  029C                     	;# 
  8985  029D                     	;# 
  8986  029F                     	;# 
  8987  030C                     	;# 
  8988  030C                     	;# 
  8989  030D                     	;# 
  8990  030E                     	;# 
  8991  030F                     	;# 
  8992  0310                     	;# 
  8993  0310                     	;# 
  8994  0311                     	;# 
  8995  0312                     	;# 
  8996  0313                     	;# 
  8997  0314                     	;# 
  8998  0314                     	;# 
  8999  0315                     	;# 
  9000  0316                     	;# 
  9001  0317                     	;# 
  9002  0318                     	;# 
  9003  0318                     	;# 
  9004  0319                     	;# 
  9005  031A                     	;# 
  9006  031B                     	;# 
  9007  038C                     	;# 
  9008  038C                     	;# 
  9009  038D                     	;# 
  9010  038E                     	;# 
  9011  0390                     	;# 
  9012  0390                     	;# 
  9013  0391                     	;# 
  9014  0392                     	;# 
  9015  048C                     	;# 
  9016  048C                     	;# 
  9017  048D                     	;# 
  9018  048E                     	;# 
  9019  048F                     	;# 
  9020  048F                     	;# 
  9021  0490                     	;# 
  9022  0491                     	;# 
  9023  0492                     	;# 
  9024  0492                     	;# 
  9025  0493                     	;# 
  9026  0494                     	;# 
  9027  0495                     	;# 
  9028  0495                     	;# 
  9029  0496                     	;# 
  9030  0497                     	;# 
  9031  0498                     	;# 
  9032  0499                     	;# 
  9033  049A                     	;# 
  9034  049B                     	;# 
  9035  049C                     	;# 
  9036  049D                     	;# 
  9037  058C                     	;# 
  9038  058C                     	;# 
  9039  058D                     	;# 
  9040  058E                     	;# 
  9041  058F                     	;# 
  9042  058F                     	;# 
  9043  0590                     	;# 
  9044  0591                     	;# 
  9045  0592                     	;# 
  9046  0593                     	;# 
  9047  059C                     	;# 
  9048  059C                     	;# 
  9049  059D                     	;# 
  9050  059D                     	;# 
  9051  059E                     	;# 
  9052  059F                     	;# 
  9053  060C                     	;# 
  9054  060C                     	;# 
  9055  060D                     	;# 
  9056  060D                     	;# 
  9057  060E                     	;# 
  9058  060F                     	;# 
  9059  0610                     	;# 
  9060  0611                     	;# 
  9061  0612                     	;# 
  9062  0613                     	;# 
  9063  0614                     	;# 
  9064  0616                     	;# 
  9065  0616                     	;# 
  9066  0617                     	;# 
  9067  0617                     	;# 
  9068  0618                     	;# 
  9069  0619                     	;# 
  9070  061A                     	;# 
  9071  061B                     	;# 
  9072  061C                     	;# 
  9073  061D                     	;# 
  9074  061E                     	;# 
  9075  070C                     	;# 
  9076  070D                     	;# 
  9077  070E                     	;# 
  9078  070F                     	;# 
  9079  0710                     	;# 
  9080  0711                     	;# 
  9081  0712                     	;# 
  9082  0713                     	;# 
  9083  0714                     	;# 
  9084  0716                     	;# 
  9085  0717                     	;# 
  9086  0718                     	;# 
  9087  0719                     	;# 
  9088  071A                     	;# 
  9089  071B                     	;# 
  9090  071C                     	;# 
  9091  071D                     	;# 
  9092  071E                     	;# 
  9093  0796                     	;# 
  9094  0797                     	;# 
  9095  0798                     	;# 
  9096  0799                     	;# 
  9097  079A                     	;# 
  9098  079B                     	;# 
  9099  079C                     	;# 
  9100  079D                     	;# 
  9101  080C                     	;# 
  9102  080D                     	;# 
  9103  080E                     	;# 
  9104  080F                     	;# 
  9105  0810                     	;# 
  9106  0811                     	;# 
  9107  0812                     	;# 
  9108  0813                     	;# 
  9109  0814                     	;# 
  9110  081A                     	;# 
  9111  081A                     	;# 
  9112  081B                     	;# 
  9113  081C                     	;# 
  9114  081C                     	;# 
  9115  081D                     	;# 
  9116  081E                     	;# 
  9117  081F                     	;# 
  9118  088C                     	;# 
  9119  088D                     	;# 
  9120  088E                     	;# 
  9121  088F                     	;# 
  9122  0890                     	;# 
  9123  0891                     	;# 
  9124  0892                     	;# 
  9125  0893                     	;# 
  9126  0895                     	;# 
  9127  0896                     	;# 
  9128  0897                     	;# 
  9129  0898                     	;# 
  9130  0899                     	;# 
  9131  089A                     	;# 
  9132  089B                     	;# 
  9133  090C                     	;# 
  9134  090E                     	;# 
  9135  090F                     	;# 
  9136  091F                     	;# 
  9137  098F                     	;# 
  9138  098F                     	;# 
  9139  0990                     	;# 
  9140  0991                     	;# 
  9141  0992                     	;# 
  9142  0993                     	;# 
  9143  0994                     	;# 
  9144  0995                     	;# 
  9145  0996                     	;# 
  9146  0997                     	;# 
  9147  1E0F                     	;# 
  9148  1E10                     	;# 
  9149  1E11                     	;# 
  9150  1E12                     	;# 
  9151  1E13                     	;# 
  9152  1E14                     	;# 
  9153  1E15                     	;# 
  9154  1E16                     	;# 
  9155  1E17                     	;# 
  9156  1E18                     	;# 
  9157  1E19                     	;# 
  9158  1E1A                     	;# 
  9159  1E1B                     	;# 
  9160  1E1C                     	;# 
  9161  1E1D                     	;# 
  9162  1E1E                     	;# 
  9163  1E1F                     	;# 
  9164  1E20                     	;# 
  9165  1E21                     	;# 
  9166  1E22                     	;# 
  9167  1E23                     	;# 
  9168  1E24                     	;# 
  9169  1E25                     	;# 
  9170  1E26                     	;# 
  9171  1E27                     	;# 
  9172  1E28                     	;# 
  9173  1E29                     	;# 
  9174  1E2A                     	;# 
  9175  1E2B                     	;# 
  9176  1E2C                     	;# 
  9177  1E2D                     	;# 
  9178  1E2E                     	;# 
  9179  1E2F                     	;# 
  9180  1E30                     	;# 
  9181  1E31                     	;# 
  9182  1E32                     	;# 
  9183  1E33                     	;# 
  9184  1E34                     	;# 
  9185  1E35                     	;# 
  9186  1E36                     	;# 
  9187  1E37                     	;# 
  9188  1E8F                     	;# 
  9189  1E90                     	;# 
  9190  1E91                     	;# 
  9191  1E92                     	;# 
  9192  1E93                     	;# 
  9193  1E94                     	;# 
  9194  1E95                     	;# 
  9195  1E96                     	;# 
  9196  1E97                     	;# 
  9197  1E9C                     	;# 
  9198  1E9D                     	;# 
  9199  1E9E                     	;# 
  9200  1EA1                     	;# 
  9201  1EA2                     	;# 
  9202  1EA3                     	;# 
  9203  1EA4                     	;# 
  9204  1EA9                     	;# 
  9205  1EAA                     	;# 
  9206  1EB1                     	;# 
  9207  1EB2                     	;# 
  9208  1EB8                     	;# 
  9209  1EB9                     	;# 
  9210  1EBA                     	;# 
  9211  1EBB                     	;# 
  9212  1EBC                     	;# 
  9213  1EBD                     	;# 
  9214  1EBE                     	;# 
  9215  1EC3                     	;# 
  9216  1EC5                     	;# 
  9217  1EC6                     	;# 
  9218  1EC7                     	;# 
  9219  1EC8                     	;# 
  9220  1EC9                     	;# 
  9221  1ECA                     	;# 
  9222  1ECB                     	;# 
  9223  1ECB                     	;# 
  9224  1ECB                     	;# 
  9225  1ECC                     	;# 
  9226  1ECC                     	;# 
  9227  1ECC                     	;# 
  9228  1F10                     	;# 
  9229  1F11                     	;# 
  9230  1F12                     	;# 
  9231  1F14                     	;# 
  9232  1F15                     	;# 
  9233  1F1C                     	;# 
  9234  1F1D                     	;# 
  9235  1F1E                     	;# 
  9236  1F1F                     	;# 
  9237  1F20                     	;# 
  9238  1F21                     	;# 
  9239  1F22                     	;# 
  9240  1F23                     	;# 
  9241  1F24                     	;# 
  9242  1F25                     	;# 
  9243  1F26                     	;# 
  9244  1F27                     	;# 
  9245  1F38                     	;# 
  9246  1F39                     	;# 
  9247  1F3A                     	;# 
  9248  1F3B                     	;# 
  9249  1F3C                     	;# 
  9250  1F3D                     	;# 
  9251  1F3E                     	;# 
  9252  1F3F                     	;# 
  9253  1F43                     	;# 
  9254  1F44                     	;# 
  9255  1F45                     	;# 
  9256  1F46                     	;# 
  9257  1F47                     	;# 
  9258  1F48                     	;# 
  9259  1F49                     	;# 
  9260  1F4A                     	;# 
  9261  1F4E                     	;# 
  9262  1F4F                     	;# 
  9263  1F50                     	;# 
  9264  1F51                     	;# 
  9265  1F52                     	;# 
  9266  1F53                     	;# 
  9267  1F54                     	;# 
  9268  1F55                     	;# 
  9269  1FE4                     	;# 
  9270  1FE5                     	;# 
  9271  1FE6                     	;# 
  9272  1FE7                     	;# 
  9273  1FE8                     	;# 
  9274  1FE8                     	;# 
  9275  1FE9                     	;# 
  9276  1FEA                     	;# 
  9277  1FEB                     	;# 
  9278  1FED                     	;# 
  9279  1FEE                     	;# 
  9280  1FEF                     	;# 
  9281  0000                     	;# 
  9282  0001                     	;# 
  9283  0002                     	;# 
  9284  0003                     	;# 
  9285  0004                     	;# 
  9286  0005                     	;# 
  9287  0006                     	;# 
  9288  0007                     	;# 
  9289  0008                     	;# 
  9290  0009                     	;# 
  9291  000A                     	;# 
  9292  000B                     	;# 
  9293  000C                     	;# 
  9294  000D                     	;# 
  9295  000E                     	;# 
  9296  0012                     	;# 
  9297  0013                     	;# 
  9298  0014                     	;# 
  9299  0018                     	;# 
  9300  0019                     	;# 
  9301  001A                     	;# 
  9302  008C                     	;# 
  9303  008C                     	;# 
  9304  008D                     	;# 
  9305  008E                     	;# 
  9306  008E                     	;# 
  9307  008F                     	;# 
  9308  0090                     	;# 
  9309  0090                     	;# 
  9310  0091                     	;# 
  9311  0092                     	;# 
  9312  0092                     	;# 
  9313  0093                     	;# 
  9314  0094                     	;# 
  9315  0094                     	;# 
  9316  0095                     	;# 
  9317  0096                     	;# 
  9318  0096                     	;# 
  9319  0097                     	;# 
  9320  0098                     	;# 
  9321  0099                     	;# 
  9322  009A                     	;# 
  9323  009B                     	;# 
  9324  009B                     	;# 
  9325  009C                     	;# 
  9326  009D                     	;# 
  9327  009D                     	;# 
  9328  009E                     	;# 
  9329  009F                     	;# 
  9330  010C                     	;# 
  9331  010C                     	;# 
  9332  010D                     	;# 
  9333  010E                     	;# 
  9334  010F                     	;# 
  9335  010F                     	;# 
  9336  0110                     	;# 
  9337  0111                     	;# 
  9338  0112                     	;# 
  9339  0113                     	;# 
  9340  0114                     	;# 
  9341  0115                     	;# 
  9342  0116                     	;# 
  9343  0117                     	;# 
  9344  0118                     	;# 
  9345  0119                     	;# 
  9346  0119                     	;# 
  9347  0119                     	;# 
  9348  011A                     	;# 
  9349  011A                     	;# 
  9350  011A                     	;# 
  9351  011B                     	;# 
  9352  011B                     	;# 
  9353  011B                     	;# 
  9354  011B                     	;# 
  9355  011B                     	;# 
  9356  011C                     	;# 
  9357  011C                     	;# 
  9358  011C                     	;# 
  9359  011D                     	;# 
  9360  011D                     	;# 
  9361  011D                     	;# 
  9362  011E                     	;# 
  9363  011E                     	;# 
  9364  011E                     	;# 
  9365  011F                     	;# 
  9366  011F                     	;# 
  9367  011F                     	;# 
  9368  011F                     	;# 
  9369  011F                     	;# 
  9370  018C                     	;# 
  9371  018D                     	;# 
  9372  018E                     	;# 
  9373  018F                     	;# 
  9374  0190                     	;# 
  9375  0191                     	;# 
  9376  0192                     	;# 
  9377  0196                     	;# 
  9378  0197                     	;# 
  9379  0198                     	;# 
  9380  0199                     	;# 
  9381  019A                     	;# 
  9382  019B                     	;# 
  9383  019C                     	;# 
  9384  020C                     	;# 
  9385  020D                     	;# 
  9386  020E                     	;# 
  9387  020E                     	;# 
  9388  020F                     	;# 
  9389  020F                     	;# 
  9390  0210                     	;# 
  9391  0210                     	;# 
  9392  0211                     	;# 
  9393  0211                     	;# 
  9394  0212                     	;# 
  9395  0213                     	;# 
  9396  0214                     	;# 
  9397  0214                     	;# 
  9398  0215                     	;# 
  9399  0215                     	;# 
  9400  0216                     	;# 
  9401  0216                     	;# 
  9402  0217                     	;# 
  9403  0217                     	;# 
  9404  0218                     	;# 
  9405  0219                     	;# 
  9406  021A                     	;# 
  9407  021A                     	;# 
  9408  021B                     	;# 
  9409  021B                     	;# 
  9410  021C                     	;# 
  9411  021C                     	;# 
  9412  021D                     	;# 
  9413  021D                     	;# 
  9414  021E                     	;# 
  9415  021F                     	;# 
  9416  028C                     	;# 
  9417  028C                     	;# 
  9418  028D                     	;# 
  9419  028D                     	;# 
  9420  028E                     	;# 
  9421  028F                     	;# 
  9422  0290                     	;# 
  9423  0291                     	;# 
  9424  0292                     	;# 
  9425  0292                     	;# 
  9426  0293                     	;# 
  9427  0293                     	;# 
  9428  0294                     	;# 
  9429  0295                     	;# 
  9430  0296                     	;# 
  9431  0297                     	;# 
  9432  0298                     	;# 
  9433  0298                     	;# 
  9434  0299                     	;# 
  9435  0299                     	;# 
  9436  029A                     	;# 
  9437  029B                     	;# 
  9438  029C                     	;# 
  9439  029D                     	;# 
  9440  029F                     	;# 
  9441  030C                     	;# 
  9442  030C                     	;# 
  9443  030D                     	;# 
  9444  030E                     	;# 
  9445  030F                     	;# 
  9446  0310                     	;# 
  9447  0310                     	;# 
  9448  0311                     	;# 
  9449  0312                     	;# 
  9450  0313                     	;# 
  9451  0314                     	;# 
  9452  0314                     	;# 
  9453  0315                     	;# 
  9454  0316                     	;# 
  9455  0317                     	;# 
  9456  0318                     	;# 
  9457  0318                     	;# 
  9458  0319                     	;# 
  9459  031A                     	;# 
  9460  031B                     	;# 
  9461  038C                     	;# 
  9462  038C                     	;# 
  9463  038D                     	;# 
  9464  038E                     	;# 
  9465  0390                     	;# 
  9466  0390                     	;# 
  9467  0391                     	;# 
  9468  0392                     	;# 
  9469  048C                     	;# 
  9470  048C                     	;# 
  9471  048D                     	;# 
  9472  048E                     	;# 
  9473  048F                     	;# 
  9474  048F                     	;# 
  9475  0490                     	;# 
  9476  0491                     	;# 
  9477  0492                     	;# 
  9478  0492                     	;# 
  9479  0493                     	;# 
  9480  0494                     	;# 
  9481  0495                     	;# 
  9482  0495                     	;# 
  9483  0496                     	;# 
  9484  0497                     	;# 
  9485  0498                     	;# 
  9486  0499                     	;# 
  9487  049A                     	;# 
  9488  049B                     	;# 
  9489  049C                     	;# 
  9490  049D                     	;# 
  9491  058C                     	;# 
  9492  058C                     	;# 
  9493  058D                     	;# 
  9494  058E                     	;# 
  9495  058F                     	;# 
  9496  058F                     	;# 
  9497  0590                     	;# 
  9498  0591                     	;# 
  9499  0592                     	;# 
  9500  0593                     	;# 
  9501  059C                     	;# 
  9502  059C                     	;# 
  9503  059D                     	;# 
  9504  059D                     	;# 
  9505  059E                     	;# 
  9506  059F                     	;# 
  9507  060C                     	;# 
  9508  060C                     	;# 
  9509  060D                     	;# 
  9510  060D                     	;# 
  9511  060E                     	;# 
  9512  060F                     	;# 
  9513  0610                     	;# 
  9514  0611                     	;# 
  9515  0612                     	;# 
  9516  0613                     	;# 
  9517  0614                     	;# 
  9518  0616                     	;# 
  9519  0616                     	;# 
  9520  0617                     	;# 
  9521  0617                     	;# 
  9522  0618                     	;# 
  9523  0619                     	;# 
  9524  061A                     	;# 
  9525  061B                     	;# 
  9526  061C                     	;# 
  9527  061D                     	;# 
  9528  061E                     	;# 
  9529  070C                     	;# 
  9530  070D                     	;# 
  9531  070E                     	;# 
  9532  070F                     	;# 
  9533  0710                     	;# 
  9534  0711                     	;# 
  9535  0712                     	;# 
  9536  0713                     	;# 
  9537  0714                     	;# 
  9538  0716                     	;# 
  9539  0717                     	;# 
  9540  0718                     	;# 
  9541  0719                     	;# 
  9542  071A                     	;# 
  9543  071B                     	;# 
  9544  071C                     	;# 
  9545  071D                     	;# 
  9546  071E                     	;# 
  9547  0796                     	;# 
  9548  0797                     	;# 
  9549  0798                     	;# 
  9550  0799                     	;# 
  9551  079A                     	;# 
  9552  079B                     	;# 
  9553  079C                     	;# 
  9554  079D                     	;# 
  9555  080C                     	;# 
  9556  080D                     	;# 
  9557  080E                     	;# 
  9558  080F                     	;# 
  9559  0810                     	;# 
  9560  0811                     	;# 
  9561  0812                     	;# 
  9562  0813                     	;# 
  9563  0814                     	;# 
  9564  081A                     	;# 
  9565  081A                     	;# 
  9566  081B                     	;# 
  9567  081C                     	;# 
  9568  081C                     	;# 
  9569  081D                     	;# 
  9570  081E                     	;# 
  9571  081F                     	;# 
  9572  088C                     	;# 
  9573  088D                     	;# 
  9574  088E                     	;# 
  9575  088F                     	;# 
  9576  0890                     	;# 
  9577  0891                     	;# 
  9578  0892                     	;# 
  9579  0893                     	;# 
  9580  0895                     	;# 
  9581  0896                     	;# 
  9582  0897                     	;# 
  9583  0898                     	;# 
  9584  0899                     	;# 
  9585  089A                     	;# 
  9586  089B                     	;# 
  9587  090C                     	;# 
  9588  090E                     	;# 
  9589  090F                     	;# 
  9590  091F                     	;# 
  9591  098F                     	;# 
  9592  098F                     	;# 
  9593  0990                     	;# 
  9594  0991                     	;# 
  9595  0992                     	;# 
  9596  0993                     	;# 
  9597  0994                     	;# 
  9598  0995                     	;# 
  9599  0996                     	;# 
  9600  0997                     	;# 
  9601  1E0F                     	;# 
  9602  1E10                     	;# 
  9603  1E11                     	;# 
  9604  1E12                     	;# 
  9605  1E13                     	;# 
  9606  1E14                     	;# 
  9607  1E15                     	;# 
  9608  1E16                     	;# 
  9609  1E17                     	;# 
  9610  1E18                     	;# 
  9611  1E19                     	;# 
  9612  1E1A                     	;# 
  9613  1E1B                     	;# 
  9614  1E1C                     	;# 
  9615  1E1D                     	;# 
  9616  1E1E                     	;# 
  9617  1E1F                     	;# 
  9618  1E20                     	;# 
  9619  1E21                     	;# 
  9620  1E22                     	;# 
  9621  1E23                     	;# 
  9622  1E24                     	;# 
  9623  1E25                     	;# 
  9624  1E26                     	;# 
  9625  1E27                     	;# 
  9626  1E28                     	;# 
  9627  1E29                     	;# 
  9628  1E2A                     	;# 
  9629  1E2B                     	;# 
  9630  1E2C                     	;# 
  9631  1E2D                     	;# 
  9632  1E2E                     	;# 
  9633  1E2F                     	;# 
  9634  1E30                     	;# 
  9635  1E31                     	;# 
  9636  1E32                     	;# 
  9637  1E33                     	;# 
  9638  1E34                     	;# 
  9639  1E35                     	;# 
  9640  1E36                     	;# 
  9641  1E37                     	;# 
  9642  1E8F                     	;# 
  9643  1E90                     	;# 
  9644  1E91                     	;# 
  9645  1E92                     	;# 
  9646  1E93                     	;# 
  9647  1E94                     	;# 
  9648  1E95                     	;# 
  9649  1E96                     	;# 
  9650  1E97                     	;# 
  9651  1E9C                     	;# 
  9652  1E9D                     	;# 
  9653  1E9E                     	;# 
  9654  1EA1                     	;# 
  9655  1EA2                     	;# 
  9656  1EA3                     	;# 
  9657  1EA4                     	;# 
  9658  1EA9                     	;# 
  9659  1EAA                     	;# 
  9660  1EB1                     	;# 
  9661  1EB2                     	;# 
  9662  1EB8                     	;# 
  9663  1EB9                     	;# 
  9664  1EBA                     	;# 
  9665  1EBB                     	;# 
  9666  1EBC                     	;# 
  9667  1EBD                     	;# 
  9668  1EBE                     	;# 
  9669  1EC3                     	;# 
  9670  1EC5                     	;# 
  9671  1EC6                     	;# 
  9672  1EC7                     	;# 
  9673  1EC8                     	;# 
  9674  1EC9                     	;# 
  9675  1ECA                     	;# 
  9676  1ECB                     	;# 
  9677  1ECB                     	;# 
  9678  1ECB                     	;# 
  9679  1ECC                     	;# 
  9680  1ECC                     	;# 
  9681  1ECC                     	;# 
  9682  1F10                     	;# 
  9683  1F11                     	;# 
  9684  1F12                     	;# 
  9685  1F14                     	;# 
  9686  1F15                     	;# 
  9687  1F1C                     	;# 
  9688  1F1D                     	;# 
  9689  1F1E                     	;# 
  9690  1F1F                     	;# 
  9691  1F20                     	;# 
  9692  1F21                     	;# 
  9693  1F22                     	;# 
  9694  1F23                     	;# 
  9695  1F24                     	;# 
  9696  1F25                     	;# 
  9697  1F26                     	;# 
  9698  1F27                     	;# 
  9699  1F38                     	;# 
  9700  1F39                     	;# 
  9701  1F3A                     	;# 
  9702  1F3B                     	;# 
  9703  1F3C                     	;# 
  9704  1F3D                     	;# 
  9705  1F3E                     	;# 
  9706  1F3F                     	;# 
  9707  1F43                     	;# 
  9708  1F44                     	;# 
  9709  1F45                     	;# 
  9710  1F46                     	;# 
  9711  1F47                     	;# 
  9712  1F48                     	;# 
  9713  1F49                     	;# 
  9714  1F4A                     	;# 
  9715  1F4E                     	;# 
  9716  1F4F                     	;# 
  9717  1F50                     	;# 
  9718  1F51                     	;# 
  9719  1F52                     	;# 
  9720  1F53                     	;# 
  9721  1F54                     	;# 
  9722  1F55                     	;# 
  9723  1FE4                     	;# 
  9724  1FE5                     	;# 
  9725  1FE6                     	;# 
  9726  1FE7                     	;# 
  9727  1FE8                     	;# 
  9728  1FE8                     	;# 
  9729  1FE9                     	;# 
  9730  1FEA                     	;# 
  9731  1FEB                     	;# 
  9732  1FED                     	;# 
  9733  1FEE                     	;# 
  9734  1FEF                     	;_dmxArray
  9735                           
  9736                           	psect	idataBANK1
  9737  1EE3                     __pidataBANK1:	
  9738                           
  9739                           ;initializer for _threshold
  9740  1EE3  3490               	retlw	144
  9741  1EE4  3406               	retlw	6
  9742                           
  9743                           ;initializer for _incInterval
  9744  1EE5  3464               	retlw	100
  9745  1EE6  3400               	retlw	0
  9746                           
  9747                           ;initializer for _address
  9748  1EE7  3401               	retlw	1
  9749  1EE8  3400               	retlw	0
  9750                           
  9751                           ;initializer for _animationBrightness
  9752  1EE9  3405               	retlw	5
  9753                           
  9754                           ;initializer for _animationModeSelected
  9755  1EEA  3401               	retlw	1
  9756                           
  9757                           ;initializer for _startup
  9758  1EEB  3401               	retlw	1
  9759                           
  9760                           	psect	idataBANK2
  9761  1E6B                     __pidataBANK2:	
  9762                           
  9763                           ;initializer for _initial
  9764  1E6B  3401               	retlw	1
  9765  1E6C  3400               	retlw	0
  9766                           
  9767                           ;initializer for _delay
  9768  1E6D  340A               	retlw	10
  9769  1E6E  3400               	retlw	0
  9770                           
  9771                           ;initializer for _beatBrightness
  9772  1E6F  3405               	retlw	5
  9773                           
  9774                           	psect	stringtext1
  9775  1800                     __pstringtext1:	
  9776  1800                     _charTable:	
  9777  1800  3400               	retlw	0
  9778  1801  3482               	retlw	130
  9779  1802  3421               	retlw	33
  9780  1803  3400               	retlw	0
  9781  1804  3400               	retlw	0
  9782  1805  3400               	retlw	0
  9783  1806  3400               	retlw	0
  9784  1807  3402               	retlw	2
  9785  1808  3439               	retlw	57
  9786  1809  340F               	retlw	15
  9787  180A  3400               	retlw	0
  9788  180B  3400               	retlw	0
  9789  180C  3400               	retlw	0
  9790  180D  3440               	retlw	64
  9791  180E  3480               	retlw	128
  9792  180F  3400               	retlw	0
  9793  1810  343F               	retlw	63
  9794  1811  3406               	retlw	6
  9795  1812  345B               	retlw	91
  9796  1813  344F               	retlw	79
  9797  1814  3466               	retlw	102
  9798  1815  346D               	retlw	109
  9799  1816  347D               	retlw	125
  9800  1817  3407               	retlw	7
  9801  1818  347F               	retlw	127
  9802  1819  346F               	retlw	111
  9803  181A  3400               	retlw	0
  9804  181B  3400               	retlw	0
  9805  181C  3400               	retlw	0
  9806  181D  3448               	retlw	72
  9807  181E  3400               	retlw	0
  9808  181F  3453               	retlw	83
  9809  1820  3400               	retlw	0
  9810  1821  3477               	retlw	119
  9811  1822  347C               	retlw	124
  9812  1823  3439               	retlw	57
  9813  1824  345E               	retlw	94
  9814  1825  3479               	retlw	121
  9815  1826  3471               	retlw	113
  9816  1827  346F               	retlw	111
  9817  1828  3476               	retlw	118
  9818  1829  3406               	retlw	6
  9819  182A  341E               	retlw	30
  9820  182B  3400               	retlw	0
  9821  182C  3438               	retlw	56
  9822  182D  3400               	retlw	0
  9823  182E  3454               	retlw	84
  9824  182F  343F               	retlw	63
  9825  1830  3473               	retlw	115
  9826  1831  3467               	retlw	103
  9827  1832  3450               	retlw	80
  9828  1833  346D               	retlw	109
  9829  1834  3478               	retlw	120
  9830  1835  343E               	retlw	62
  9831  1836  3400               	retlw	0
  9832  1837  3400               	retlw	0
  9833  1838  3400               	retlw	0
  9834  1839  346E               	retlw	110
  9835  183A  3400               	retlw	0
  9836  183B  3439               	retlw	57
  9837  183C  3400               	retlw	0
  9838  183D  340F               	retlw	15
  9839  183E  3400               	retlw	0
  9840  183F  3408               	retlw	8
  9841  1840  3463               	retlw	99
  9842  1841  345F               	retlw	95
  9843  1842  347C               	retlw	124
  9844  1843  3458               	retlw	88
  9845  1844  345E               	retlw	94
  9846  1845  347B               	retlw	123
  9847  1846  3471               	retlw	113
  9848  1847  346F               	retlw	111
  9849  1848  3474               	retlw	116
  9850  1849  3402               	retlw	2
  9851  184A  341E               	retlw	30
  9852  184B  3400               	retlw	0
  9853  184C  3406               	retlw	6
  9854  184D  3400               	retlw	0
  9855  184E  3454               	retlw	84
  9856  184F  345C               	retlw	92
  9857  1850  3473               	retlw	115
  9858  1851  3467               	retlw	103
  9859  1852  3450               	retlw	80
  9860  1853  346D               	retlw	109
  9861  1854  3478               	retlw	120
  9862  1855  341C               	retlw	28
  9863  1856  3400               	retlw	0
  9864  1857  3400               	retlw	0
  9865  1858  3400               	retlw	0
  9866  1859  346E               	retlw	110
  9867  185A  3400               	retlw	0
  9868  185B  3439               	retlw	57
  9869  185C  3430               	retlw	48
  9870  185D  340F               	retlw	15
  9871  185E  3400               	retlw	0
  9872  185F  3400               	retlw	0
  9873  1860                     __end_of_charTable:	
  9874                           
  9875                           	psect	nvBANK2
  9876  016C                     __pnvBANK2:	
  9877  016C                     _ADCC_ADTI_InterruptHandler:	
  9878  016C                     	ds	2
  9879  016E                     _TMR0_InterruptHandler:	
  9880  016E                     	ds	2
  9881                           
  9882                           	psect	nvBANK3
  9883  01EE                     __pnvBANK3:	
  9884  01EE                     _EUSART1_RxDefaultInterruptHandler:	
  9885  01EE                     	ds	2
  9886                           
  9887                           	psect	nvBANK4
  9888  0264                     __pnvBANK4:	
  9889  0264                     _EUSART1_ErrorHandler:	
  9890  0264                     	ds	2
  9891  0266                     _EUSART1_OverrunErrorHandler:	
  9892  0266                     	ds	2
  9893  0268                     _EUSART1_FramingErrorHandler:	
  9894  0268                     	ds	2
  9895  0014                     _TRISCbits	set	20
  9896  0012                     _TRISAbits	set	18
  9897  000B                     _INTCONbits	set	11
  9898  0014                     _TRISC	set	20
  9899  0013                     _TRISB	set	19
  9900  0012                     _TRISA	set	18
  9901  001A                     _LATC	set	26
  9902  0019                     _LATB	set	25
  9903  0018                     _LATA	set	24
  9904  000C                     _PORTA	set	12
  9905  000E                     _PORTC	set	14
  9906  00D5                     _LATC5	set	213
  9907  0090                     _ADERRL	set	144
  9908  0091                     _ADERRH	set	145
  9909  009B                     _ADPREVL	set	155
  9910  009C                     _ADPREVH	set	156
  9911  0094                     _ADFLTRL	set	148
  9912  0095                     _ADFLTRH	set	149
  9913  0096                     _ADACCL	set	150
  9914  0097                     _ADACCH	set	151
  9915  0099                     _ADCNT	set	153
  9916  009D                     _ADRESL	set	157
  9917  009E                     _ADRESH	set	158
  9918  009F                     _ADPCH	set	159
  9919  009A                     _ADRPT	set	154
  9920  0098                     _ADACCU	set	152
  9921  0093                     _ADSTPTH	set	147
  9922  0092                     _ADSTPTL	set	146
  9923  008F                     _ADUTHH	set	143
  9924  008E                     _ADUTHL	set	142
  9925  008D                     _ADLTHH	set	141
  9926  008C                     _ADLTHL	set	140
  9927  0112                     _ADCON1bits	set	274
  9928  0115                     _ADSTATbits	set	277
  9929  0113                     _ADCON2bits	set	275
  9930  0114                     _ADCON3bits	set	276
  9931  0111                     _ADCON0bits	set	273
  9932  0111                     _ADCON0	set	273
  9933  0118                     _ADCLK	set	280
  9934  0117                     _ADACT	set	279
  9935  0116                     _ADREF	set	278
  9936  0115                     _ADSTAT	set	277
  9937  0114                     _ADCON3	set	276
  9938  0113                     _ADCON2	set	275
  9939  0112                     _ADCON1	set	274
  9940  0110                     _ADPREH	set	272
  9941  010F                     _ADPREL	set	271
  9942  010E                     _ADCAP	set	270
  9943  010D                     _ADACQH	set	269
  9944  010C                     _ADACQL	set	268
  9945  0119                     _RC1REG	set	281
  9946  011D                     _RC1STAbits	set	285
  9947  011A                     _TX1REG	set	282
  9948  011E                     _TX1STAbits	set	286
  9949  011C                     _SP1BRGH	set	284
  9950  011B                     _SP1BRGL	set	283
  9951  011E                     _TX1STA	set	286
  9952  011D                     _RC1STA	set	285
  9953  011F                     _BAUD1CON	set	287
  9954  018C                     _SSP1BUF	set	396
  9955  0191                     _SSP1CON2bits	set	401
  9956  0190                     _SSP1CON1bits	set	400
  9957  018D                     _SSP1ADD	set	397
  9958  0192                     _SSP1CON3	set	402
  9959  0190                     _SSP1CON1	set	400
  9960  018F                     _SSP1STAT	set	399
  9961  021E                     _CCPTMRS0bits	set	542
  9962  028D                     _PR2	set	653
  9963  028C                     _TMR2	set	652
  9964  028E                     _T2CONbits	set	654
  9965  0291                     _T2RSTbits	set	657
  9966  028F                     _T2HLTbits	set	655
  9967  028E                     _T2CON	set	654
  9968  028C                     _T2TMR	set	652
  9969  028D                     _T2PR	set	653
  9970  0291                     _T2RST	set	657
  9971  028F                     _T2HLT	set	655
  9972  0290                     _T2CLKCON	set	656
  9973  0312                     _CCP2CONbits	set	786
  9974  0310                     _CCPR2L	set	784
  9975  0311                     _CCPR2H	set	785
  9976  0312                     _CCP2CON	set	786
  9977  030E                     _CCP1CONbits	set	782
  9978  030C                     _CCPR1L	set	780
  9979  030D                     _CCPR1H	set	781
  9980  030E                     _CCP1CON	set	782
  9981  031A                     _CCP4CONbits	set	794
  9982  0318                     _CCPR4L	set	792
  9983  0319                     _CCPR4H	set	793
  9984  031A                     _CCP4CON	set	794
  9985  0316                     _CCP3CONbits	set	790
  9986  0314                     _CCPR3L	set	788
  9987  0315                     _CCPR3H	set	789
  9988  0316                     _CCP3CON	set	790
  9989  059E                     _T0CON0bits	set	1438
  9990  059E                     _T0CON0	set	1438
  9991  059C                     _TMR0L	set	1436
  9992  059D                     _TMR0H	set	1437
  9993  059F                     _T0CON1	set	1439
  9994  070D                     _PIR1bits	set	1805
  9995  0717                     _PIE1bits	set	1815
  9996  070C                     _PIR0bits	set	1804
  9997  0716                     _PIE0bits	set	1814
  9998  070F                     _PIR3bits	set	1807
  9999  0719                     _PIE3bits	set	1817
 10000  0710                     _PIR4bits	set	1808
 10001  079D                     _PMD7	set	1949
 10002  079C                     _PMD6	set	1948
 10003  079B                     _PMD5	set	1947
 10004  079A                     _PMD4	set	1946
 10005  0799                     _PMD3	set	1945
 10006  0798                     _PMD2	set	1944
 10007  0797                     _PMD1	set	1943
 10008  0796                     _PMD0	set	1942
 10009  0892                     _OSCTUNE	set	2194
 10010  0893                     _OSCFRQ	set	2195
 10011  0891                     _OSCEN	set	2193
 10012  088F                     _OSCCON3	set	2191
 10013  088D                     _OSCCON1	set	2189
 10014  1ECB                     _RX1DTPPS	set	7883
 10015  1EC6                     _SSP1DATPPS	set	7878
 10016  1EC5                     _SSP1CLKPPS	set	7877
 10017  1F4F                     _WPUCbits	set	8015
 10018  1F4E                     _ANSELCbits	set	8014
 10019  1F39                     _WPUAbits	set	7993
 10020  1F38                     _ANSELAbits	set	7992
 10021  1F27                     _RC7PPS	set	7975
 10022  1F26                     _RC6PPS	set	7974
 10023  1F15                     _RA5PPS	set	7957
 10024  1F24                     _RC4PPS	set	7972
 10025  1F23                     _RC3PPS	set	7971
 10026  1F14                     _RA4PPS	set	7956
 10027  1F51                     _SLRCONC	set	8017
 10028  1F46                     _SLRCONB	set	8006
 10029  1F3B                     _SLRCONA	set	7995
 10030  1F50                     _ODCONC	set	8016
 10031  1F45                     _ODCONB	set	8005
 10032  1F3A                     _ODCONA	set	7994
 10033  1F4F                     _WPUC	set	8015
 10034  1F39                     _WPUA	set	7993
 10035  1F44                     _WPUB	set	8004
 10036  1F38                     _ANSELA	set	7992
 10037  1F43                     _ANSELB	set	8003
 10038  1F4E                     _ANSELC	set	8014
 10039                           
 10040                           	psect	stringtext2
 10041  2000                     __pstringtext2:	
 10042  2000                     STR_16:	
 10043  2000  3425               	retlw	37	;'%'
 10044  2001  3463               	retlw	99	;'c'
 10045  2002  3425               	retlw	37	;'%'
 10046  2003  3463               	retlw	99	;'c'
 10047  2004  3425               	retlw	37	;'%'
 10048  2005  3463               	retlw	99	;'c'
 10049  2006  3425               	retlw	37	;'%'
 10050  2007  3463               	retlw	99	;'c'
 10051  2008  340D               	retlw	13
 10052  2009  3400               	retlw	0
 10053                           
 10054                           	psect	stringtext3
 10055  200A                     __pstringtext3:	
 10056  200A                     STR_17:	
 10057  200A  3425               	retlw	37	;'%'
 10058  200B  3463               	retlw	99	;'c'
 10059  200C  3425               	retlw	37	;'%'
 10060  200D  3463               	retlw	99	;'c'
 10061  200E  3425               	retlw	37	;'%'
 10062  200F  3463               	retlw	99	;'c'
 10063  2010  3420               	retlw	32	;' '
 10064  2011  340D               	retlw	13
 10065  2012  3400               	retlw	0
 10066                           
 10067                           	psect	stringtext4
 10068  2013                     __pstringtext4:	
 10069  2013                     STR_15:	
 10070  2013  3420               	retlw	32	;' '
 10071  2014  3425               	retlw	37	;'%'
 10072  2015  3463               	retlw	99	;'c'
 10073  2016  3425               	retlw	37	;'%'
 10074  2017  3463               	retlw	99	;'c'
 10075  2018  3425               	retlw	37	;'%'
 10076  2019  3463               	retlw	99	;'c'
 10077  201A  340D               	retlw	13
 10078  201B  3400               	retlw	0
 10079                           
 10080                           	psect	stringtext5
 10081  201C                     __pstringtext5:	
 10082  201C                     STR_12:	
 10083  201C  3448               	retlw	72	;'H'
 10084  201D  3445               	retlw	69	;'E'
 10085  201E  3459               	retlw	89	;'Y'
 10086  201F  3459               	retlw	89	;'Y'
 10087  2020  3459               	retlw	89	;'Y'
 10088  2021  3459               	retlw	89	;'Y'
 10089  2022  3459               	retlw	89	;'Y'
 10090  2023  3459               	retlw	89	;'Y'
 10091  2024  3400               	retlw	0
 10092                           
 10093                           	psect	stringtext6
 10094  2025                     __pstringtext6:	
 10095  2025                     STR_18:	
 10096  2025  3425               	retlw	37	;'%'
 10097  2026  3463               	retlw	99	;'c'
 10098  2027  3425               	retlw	37	;'%'
 10099  2028  3463               	retlw	99	;'c'
 10100  2029  3420               	retlw	32	;' '
 10101  202A  3420               	retlw	32	;' '
 10102  202B  340D               	retlw	13
 10103  202C  3400               	retlw	0
 10104                           
 10105                           	psect	stringtext7
 10106  202D                     __pstringtext7:	
 10107  202D                     STR_14:	
 10108  202D  3420               	retlw	32	;' '
 10109  202E  3420               	retlw	32	;' '
 10110  202F  3425               	retlw	37	;'%'
 10111  2030  3463               	retlw	99	;'c'
 10112  2031  3425               	retlw	37	;'%'
 10113  2032  3463               	retlw	99	;'c'
 10114  2033  340D               	retlw	13
 10115  2034  3400               	retlw	0
 10116                           
 10117                           	psect	stringtext8
 10118  2035                     __pstringtext8:	
 10119  2035                     STR_19:	
 10120  2035  3425               	retlw	37	;'%'
 10121  2036  3463               	retlw	99	;'c'
 10122  2037  3420               	retlw	32	;' '
 10123  2038  3420               	retlw	32	;' '
 10124  2039  3420               	retlw	32	;' '
 10125  203A  340D               	retlw	13
 10126  203B  3400               	retlw	0
 10127                           
 10128                           	psect	stringtext9
 10129  203C                     __pstringtext9:	
 10130  203C                     STR_13:	
 10131  203C  3420               	retlw	32	;' '
 10132  203D  3420               	retlw	32	;' '
 10133  203E  3420               	retlw	32	;' '
 10134  203F  3425               	retlw	37	;'%'
 10135  2040  3463               	retlw	99	;'c'
 10136  2041  340D               	retlw	13
 10137  2042  3400               	retlw	0
 10138                           
 10139                           	psect	stringtext10
 10140  2043                     __pstringtext10:	
 10141  2043                     STR_20:	
 10142  2043  3420               	retlw	32	;' '
 10143  2044  3420               	retlw	32	;' '
 10144  2045  3420               	retlw	32	;' '
 10145  2046  3420               	retlw	32	;' '
 10146  2047  340D               	retlw	13
 10147  2048  3400               	retlw	0
 10148                           
 10149                           	psect	stringtext11
 10150  2049                     __pstringtext11:	
 10151  2049                     STR_5:	
 10152  2049  3442               	retlw	66	;'B'
 10153  204A  3420               	retlw	32	;' '
 10154  204B  3420               	retlw	32	;' '
 10155  204C  3420               	retlw	32	;' '
 10156  204D  340D               	retlw	13
 10157  204E  3400               	retlw	0
 10158                           
 10159                           	psect	stringtext12
 10160  204F                     __pstringtext12:	
 10161  204F                     STR_7:	
 10162  204F  3443               	retlw	67	;'C'
 10163  2050  3420               	retlw	32	;' '
 10164  2051  3420               	retlw	32	;' '
 10165  2052  3420               	retlw	32	;' '
 10166  2053  340D               	retlw	13
 10167  2054  3400               	retlw	0
 10168                           
 10169                           	psect	stringtext13
 10170  2055                     __pstringtext13:	
 10171  2055                     STR_1:	
 10172  2055  3450               	retlw	80	;'P'
 10173  2056  3443               	retlw	67	;'C'
 10174  2057  3420               	retlw	32	;' '
 10175  2058  3420               	retlw	32	;' '
 10176  2059  340D               	retlw	13
 10177  205A  3400               	retlw	0
 10178                           
 10179                           	psect	stringtext14
 10180  205B                     __pstringtext14:	
 10181  205B                     STR_4:	
 10182  205B  344C               	retlw	76	;'L'
 10183  205C  3445               	retlw	69	;'E'
 10184  205D  3444               	retlw	68	;'D'
 10185  205E  3420               	retlw	32	;' '
 10186  205F  340D               	retlw	13
 10187  2060  3400               	retlw	0
 10188                           
 10189                           	psect	stringtext15
 10190  2061                     __pstringtext15:	
 10191  2061                     STR_3:	
 10192  2061  3441               	retlw	65	;'A'
 10193  2062  344E               	retlw	78	;'N'
 10194  2063  3449               	retlw	73	;'I'
 10195  2064  3420               	retlw	32	;' '
 10196  2065  340D               	retlw	13
 10197  2066  3400               	retlw	0
 10198                           
 10199                           	psect	stringtext16
 10200  2067                     __pstringtext16:	
 10201  2067                     STR_8:	
 10202  2067  3441               	retlw	65	;'A'
 10203  2068  344C               	retlw	76	;'L'
 10204  2069  344C               	retlw	76	;'L'
 10205  206A  3420               	retlw	32	;' '
 10206  206B  340D               	retlw	13
 10207  206C  3400               	retlw	0
 10208                           
 10209                           	psect	stringtext17
 10210  206D                     __pstringtext17:	
 10211  206D                     STR_6:	
 10212  206D  3446               	retlw	70	;'F'
 10213  206E  3441               	retlw	65	;'A'
 10214  206F  3444               	retlw	68	;'D'
 10215  2070  3445               	retlw	69	;'E'
 10216  2071  340D               	retlw	13
 10217  2072  3400               	retlw	0
 10218                           
 10219                           	psect	stringtext18
 10220  2073                     __pstringtext18:	
 10221  2073                     STR_2:	
 10222  2073  3442               	retlw	66	;'B'
 10223  2074  3445               	retlw	69	;'E'
 10224  2075  3441               	retlw	65	;'A'
 10225  2076  3454               	retlw	84	;'T'
 10226  2077  340D               	retlw	13
 10227  2078  3400               	retlw	0
 10228                           
 10229                           	psect	stringtext19
 10230  2079                     __pstringtext19:	
 10231  2079                     STR_10:	
 10232  2079  3420               	retlw	32	;' '
 10233  207A  3420               	retlw	32	;' '
 10234  207B  3420               	retlw	32	;' '
 10235  207C  3420               	retlw	32	;' '
 10236  207D  3400               	retlw	0
 10237                           
 10238                           	psect	stringtext20
 10239  207E                     __pstringtext20:	
 10240  207E                     STR_21:	
 10241  207E  3462               	retlw	98	;'b'
 10242  207F  342D               	retlw	45	;'-'
 10243  2080  340D               	retlw	13
 10244  2081  3400               	retlw	0
 10245                           
 10246                           	psect	stringtext21
 10247  2082                     __pstringtext21:	
 10248  2082                     STR_9:	
 10249  2082  3464               	retlw	100	;'d'
 10250  2083  340D               	retlw	13
 10251  2084  3400               	retlw	0
 10252                           
 10253                           	psect	stringtext22
 10254  0000                     __pstringtext22:	
 10255  2047                     
 10256                           ; #config settings
 10257  0000                     
 10258                           	psect	cinit
 10259  0032                     start_initialization:	
 10260  0032                     __initialization:		;BIGRAM
 10261                           
 10262                           ; Initialize objects allocated to BANK1
 10263  0032  30E3               	movlw	low __pidataBANK1
 10264  0033  0084               	movwf	4
 10265  0034  309E               	movlw	(high __pidataBANK1)| (0+128)
 10266  0035  0085               	movwf	5
 10267  0036  30E7               	movlw	low __pdataBANK1
 10268  0037  0086               	movwf	6
 10269  0038  3000               	movlw	high __pdataBANK1
 10270  0039  0087               	movwf	7
 10271  003A  3000               	movlw	0
 10272  003B  00FF               	movwf	btemp+1
 10273  003C  3009               	movlw	9
 10274  003D  319F  272F  3180   	fcall	init_ram
 10275                           
 10276                           ; Initialize objects allocated to BANK2
 10277  0040  306B               	movlw	low __pidataBANK2
 10278  0041  0084               	movwf	4
 10279  0042  309E               	movlw	(high __pidataBANK2)| (0+128)
 10280  0043  0085               	movwf	5
 10281  0044  3067               	movlw	low __pdataBANK2
 10282  0045  0086               	movwf	6
 10283  0046  3001               	movlw	high __pdataBANK2
 10284  0047  0087               	movwf	7
 10285  0048  3000               	movlw	0
 10286  0049  00FF               	movwf	btemp+1
 10287  004A  3005               	movlw	5
 10288  004B  319F  272F  3180   	fcall	init_ram
 10289                           
 10290                           ; Clear objects allocated to BIGRAM
 10291  004E  30EE               	movlw	low (0+9198)
 10292  004F  0084               	movwf	4
 10293  0050  3023               	movlw	high (0+9198)
 10294  0051  0085               	movwf	5
 10295  0052  3002               	movlw	2
 10296  0053  00FE               	movwf	btemp
 10297  0054  3004               	movlw	4
 10298  0055  00FF               	movwf	btemp+1
 10299  0056  319F  2723  3180   	fcall	clear_ram0
 10300                           
 10301                           ; Clear objects allocated to COMMON
 10302  0059  01F0               	clrf	__pbssCOMMON& (0+127)
 10303  005A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
 10304  005B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
 10305  005C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
 10306  005D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
 10307  005E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
 10308  005F  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
 10309                           
 10310                           ; Clear objects allocated to BANK1
 10311  0060  30A0               	movlw	low __pbssBANK1
 10312  0061  0084               	movwf	4
 10313  0062  3000               	movlw	high __pbssBANK1
 10314  0063  0085               	movwf	5
 10315  0064  3029               	movlw	41
 10316  0065  00FE               	movwf	btemp
 10317  0066  3000               	movlw	0
 10318  0067  00FF               	movwf	btemp+1
 10319  0068  319F  2723  3180   	fcall	clear_ram0
 10320                           
 10321                           ; Clear objects allocated to BANK2
 10322  006B  3020               	movlw	low __pbssBANK2
 10323  006C  0084               	movwf	4
 10324  006D  3001               	movlw	high __pbssBANK2
 10325  006E  0085               	movwf	5
 10326  006F  3047               	movlw	71
 10327  0070  00FE               	movwf	btemp
 10328  0071  3000               	movlw	0
 10329  0072  00FF               	movwf	btemp+1
 10330  0073  319F  2723  3180   	fcall	clear_ram0
 10331                           
 10332                           ; Clear objects allocated to BANK3
 10333  0076  30A0               	movlw	low __pbssBANK3
 10334  0077  0084               	movwf	4
 10335  0078  3001               	movlw	high __pbssBANK3
 10336  0079  0085               	movwf	5
 10337  007A  304E               	movlw	78
 10338  007B  00FE               	movwf	btemp
 10339  007C  3000               	movlw	0
 10340  007D  00FF               	movwf	btemp+1
 10341  007E  319F  2723  3180   	fcall	clear_ram0
 10342                           
 10343                           ; Clear objects allocated to BANK4
 10344  0081  3020               	movlw	low __pbssBANK4
 10345  0082  0084               	movwf	4
 10346  0083  3002               	movlw	high __pbssBANK4
 10347  0084  0085               	movwf	5
 10348  0085  3044               	movlw	68
 10349  0086  00FE               	movwf	btemp
 10350  0087  3000               	movlw	0
 10351  0088  00FF               	movwf	btemp+1
 10352  0089  319F  2723  3180   	fcall	clear_ram0
 10353                           
 10354                           ; Clear objects allocated to BANK5
 10355  008C  30A0               	movlw	low __pbssBANK5
 10356  008D  0084               	movwf	4
 10357  008E  3002               	movlw	high __pbssBANK5
 10358  008F  0085               	movwf	5
 10359  0090  303E               	movlw	62
 10360  0091  00FE               	movwf	btemp
 10361  0092  3000               	movlw	0
 10362  0093  00FF               	movwf	btemp+1
 10363  0094  319F  2723  3180   	fcall	clear_ram0
 10364                           
 10365                           ; Clear objects allocated to BANK6
 10366  0097  3020               	movlw	low __pbssBANK6
 10367  0098  0084               	movwf	4
 10368  0099  3003               	movlw	high __pbssBANK6
 10369  009A  0085               	movwf	5
 10370  009B  3020               	movlw	32
 10371  009C  00FE               	movwf	btemp
 10372  009D  3000               	movlw	0
 10373  009E  00FF               	movwf	btemp+1
 10374  009F  319F  2723         	fcall	clear_ram0
 10375  00A1                     end_of_initialization:	
 10376                           ;End of C runtime variable initialization code
 10377                           
 10378  00A1                     __end_of__initialization:	
 10379  00A1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10380  00A2  0140               	movlb	0
 10381  00A3  3194  2C53         	ljmp	_main	;jump to C main() function
 10382                           
 10383                           	psect	bssCOMMON
 10384  0070                     __pbssCOMMON:	
 10385  0070                     _animationBrightnessControl:	
 10386  0070                     	ds	1
 10387  0071                     _p_i2c1_current:	
 10388  0071                     	ds	1
 10389  0072                     _p_i2c1_trb_current:	
 10390  0072                     	ds	1
 10391  0073                     _eusart1RxTail:	
 10392  0073                     	ds	1
 10393  0074                     _eusart1RxHead:	
 10394  0074                     	ds	1
 10395  0075                     I2C1_ISR@i2c_address:	
 10396  0075                     	ds	2
 10397                           
 10398                           	psect	bssBANK1
 10399  00A0                     __pbssBANK1:	
 10400  00A0                     _i2c1_object:	
 10401  00A0                     	ds	5
 10402  00A5                     _manualColor:	
 10403  00A5                     	ds	4
 10404  00A9                     _width:	
 10405  00A9                     	ds	2
 10406  00AB                     _currentState:	
 10407  00AB                     	ds	2
 10408  00AD                     _lastIncTime:	
 10409  00AD                     	ds	2
 10410  00AF                     _currentMenu:	
 10411  00AF                     	ds	2
 10412  00B1                     _lastDetected:	
 10413  00B1                     	ds	1
 10414  00B2                     _thresholdExceeded:	
 10415  00B2                     	ds	1
 10416  00B3                     _detected:	
 10417  00B3                     	ds	1
 10418  00B4                     _position:	
 10419  00B4                     	ds	1
 10420  00B5                     _beatHold:	
 10421  00B5                     	ds	1
 10422  00B6                     _enterPressed:	
 10423  00B6                     	ds	1
 10424  00B7                     _menuPressed:	
 10425  00B7                     	ds	1
 10426  00B8                     _currentSelection:	
 10427  00B8                     	ds	1
 10428  00B9                     _menuSelected:	
 10429  00B9                     	ds	1
 10430  00BA                     _enterState:	
 10431  00BA                     	ds	1
 10432  00BB                     _menuState:	
 10433  00BB                     	ds	1
 10434  00BC                     _downState:	
 10435  00BC                     	ds	1
 10436  00BD                     _upState:	
 10437  00BD                     	ds	1
 10438  00BE                     _enter:	
 10439  00BE                     	ds	1
 10440  00BF                     _down:	
 10441  00BF                     	ds	1
 10442  00C0                     _up:	
 10443  00C0                     	ds	1
 10444  00C1                     _menu:	
 10445  00C1                     	ds	1
 10446  00C2                     I2C1_ISR@i2c_10bit_address_restart:	
 10447  00C2                     	ds	1
 10448  00C3                     I2C1_ISR@i2c_bytes_left:	
 10449  00C3                     	ds	1
 10450  00C4                     I2C1_ISR@pi2c_buf_ptr:	
 10451  00C4                     	ds	1
 10452  00C5                     _i2c1_trb_count:	
 10453  00C5                     	ds	1
 10454  00C6                     _i2c1_state:	
 10455  00C6                     	ds	1
 10456  00C7                     _eusart1RxLastError:	
 10457  00C7                     	ds	1
 10458  00C8                     _eusart1RxCount:	
 10459  00C8                     	ds	1
 10460                           
 10461                           	psect	dataBANK1
 10462  00E7                     __pdataBANK1:	
 10463  00E7                     _threshold:	
 10464  00E7                     	ds	2
 10465  00E9                     _incInterval:	
 10466  00E9                     	ds	2
 10467  00EB                     _address:	
 10468  00EB                     	ds	2
 10469  00ED                     _animationBrightness:	
 10470  00ED                     	ds	1
 10471  00EE                     _animationModeSelected:	
 10472  00EE                     	ds	1
 10473  00EF                     _startup:	
 10474  00EF                     	ds	1
 10475                           
 10476                           	psect	bssBANK2
 10477  0120                     __pbssBANK2:	
 10478  0120                     _eusart1RxStatusBuffer:	
 10479  0120                     	ds	8
 10480  0128                     _nout:	
 10481  0128                     	ds	2
 10482  012A                     _prec:	
 10483  012A                     	ds	2
 10484  012C                     _flags:	
 10485  012C                     	ds	2
 10486  012E                     _lastLedActiveTime:	
 10487  012E                     	ds	2
 10488  0130                     _arrayIndex:	
 10489  0130                     	ds	2
 10490  0132                     _thresholdCount:	
 10491  0132                     	ds	2
 10492  0134                     _lastRun:	
 10493  0134                     	ds	2
 10494  0136                     _bpm:	
 10495  0136                     	ds	2
 10496  0138                     _lastBeat:	
 10497  0138                     	ds	2
 10498  013A                     _lastActiveTime:	
 10499  013A                     	ds	2
 10500  013C                     _previousTask:	
 10501  013C                     	ds	2
 10502  013E                     _currentTime:	
 10503  013E                     	ds	2
 10504  0140                     _lastTime:	
 10505  0140                     	ds	2
 10506  0142                     _startTime:	
 10507  0142                     	ds	2
 10508  0144                     _tm1650_status:	
 10509  0144                     	ds	1
 10510  0145                     _colorModeSelected:	
 10511  0145                     	ds	1
 10512  0146                     _animation:	
 10513  0146                     	ds	10
 10514  0150                     _beat:	
 10515  0150                     	ds	10
 10516  015A                     _dmx:	
 10517  015A                     	ds	10
 10518  0164                     _i2c1_tr_queue:	
 10519  0164                     	ds	3
 10520                           
 10521                           	psect	dataBANK2
 10522  0167                     __pdataBANK2:	
 10523  0167                     _initial:	
 10524  0167                     	ds	2
 10525  0169                     _delay:	
 10526  0169                     	ds	2
 10527  016B                     _beatBrightness:	
 10528  016B                     	ds	1
 10529                           
 10530                           	psect	bssBANK3
 10531  01A0                     __pbssBANK3:	
 10532  01A0                     _manualRed:	
 10533  01A0                     	ds	10
 10534  01AA                     _animationBrightnessCtrl:	
 10535  01AA                     	ds	10
 10536  01B4                     _animationType:	
 10537  01B4                     	ds	10
 10538  01BE                     _beatFade:	
 10539  01BE                     	ds	10
 10540  01C8                     _beatStrobe:	
 10541  01C8                     	ds	10
 10542  01D2                     _dmx_task:	
 10543  01D2                     	ds	10
 10544  01DC                     _manual:	
 10545  01DC                     	ds	10
 10546  01E6                     I2C1_MasterRead@trBlock:	
 10547  01E6                     	ds	4
 10548  01EA                     I2C1_MasterWrite@trBlock:	
 10549  01EA                     	ds	4
 10550                           
 10551                           	psect	bssBANK4
 10552  0220                     __pbssBANK4:	
 10553  0220                     _eusart1RxBuffer:	
 10554  0220                     	ds	8
 10555  0228                     _manualWhite:	
 10556  0228                     	ds	10
 10557  0232                     _manualBlue:	
 10558  0232                     	ds	10
 10559  023C                     _manualGreen:	
 10560  023C                     	ds	10
 10561  0246                     _beatStrobeTask:	
 10562  0246                     	ds	10
 10563  0250                     _beatMixed:	
 10564  0250                     	ds	10
 10565  025A                     _beatCont:	
 10566  025A                     	ds	10
 10567                           
 10568                           	psect	bssBANK5
 10569  02A0                     __pbssBANK5:	
 10570  02A0                     _buttons:	
 10571  02A0                     	ds	32
 10572  02C0                     _beatMixedTask:	
 10573  02C0                     	ds	10
 10574  02CA                     _beatContTask:	
 10575  02CA                     	ds	10
 10576  02D4                     _beatFadeTask:	
 10577  02D4                     	ds	10
 10578                           
 10579                           	psect	bssBANK6
 10580  0320                     __pbssBANK6:	
 10581  0320                     _dbuf:	
 10582  0320                     	ds	32
 10583                           
 10584                           	psect	inittext
 10585  1F2F                     init_ram:	
 10586  1F2F  00FE               	movwf	126
 10587  1F30                     initloop:	
 10588  1F30  0012               	moviw fsr0++
 10589  1F31  001E               	movwi fsr1++
 10590  1F32  3001               	movlw	1
 10591  1F33  02FE               	subwf	126,f
 10592  1F34  3000               	movlw	0
 10593  1F35  3BFF               	subwfb	127,f
 10594  1F36  087F               	movf	127,w
 10595  1F37  047E               	iorwf	126,w
 10596  1F38  1903               	btfsc	3,2
 10597  1F39  3400               	retlw	0
 10598  1F3A  2F30               	goto	initloop
 10599                           
 10600                           	psect	clrtext
 10601  1F23                     clear_ram0:	
 10602                           ;	Called with FSR0 containing the base address, and
 10603                           ;	btemp/btemp+1 has the size to clear
 10604                           
 10605  1F23  0064               	clrwdt	;clear the watchdog before getting into this loop
 10606  1F24                     clrloop0:	
 10607  1F24  0180               	clrf	0	;clear RAM location pointed to by FSR
 10608  1F25  3101               	addfsr 0,1
 10609  1F26  3001               	movlw	1
 10610  1F27  02FE               	subwf	126,f
 10611  1F28  3000               	movlw	0
 10612  1F29  3BFF               	subwfb	127,f
 10613  1F2A  087F               	movf	127,w
 10614  1F2B  047E               	iorwf	126,w
 10615  1F2C  1903               	btfsc	3,2
 10616  1F2D  3400               	retlw	0	;all done for this memory range, return
 10617  1F2E  2F24               	goto	clrloop0	;have we reached the end yet?
 10618                           
 10619                           	psect	cstackBANK1
 10620  00C9                     __pcstackBANK1:	
 10621  00C9                     ?_printf:	
 10622  00C9                     ?_beatColorCreator:	
 10623                           ; 2 bytes @ 0x0
 10624                           
 10625  00C9                     beatColorCreator@inGreen:	
 10626                           ; 4 bytes @ 0x0
 10627                           
 10628  00C9                     printf@fmt:	
 10629                           ; 1 bytes @ 0x0
 10630                           
 10631                           
 10632                           ; 2 bytes @ 0x0
 10633  00C9                     	ds	1
 10634  00CA                     beatColorCreator@inBlue:	
 10635                           
 10636                           ; 1 bytes @ 0x1
 10637  00CA                     	ds	1
 10638  00CB                     beatColorCreator@inWhite:	
 10639                           
 10640                           ; 1 bytes @ 0x2
 10641  00CB                     	ds	2
 10642  00CD                     beatColorCreator@inRed:	
 10643                           
 10644                           ; 1 bytes @ 0x4
 10645  00CD                     	ds	1
 10646  00CE                     beatColorCreator@tempColor:	
 10647                           
 10648                           ; 4 bytes @ 0x5
 10649  00CE                     	ds	4
 10650  00D2                     ?_LED_setColor:	
 10651  00D2                     LED_setColor@input:	
 10652                           ; 1 bytes @ 0x9
 10653                           
 10654                           
 10655                           ; 4 bytes @ 0x9
 10656  00D2                     	ds	1
 10657  00D3                     ??_CONTROL_DMX:	
 10658                           
 10659                           ; 1 bytes @ 0xA
 10660  00D3                     	ds	3
 10661  00D6                     ??_LED_setColor:	
 10662                           
 10663                           ; 1 bytes @ 0xD
 10664  00D6                     	ds	4
 10665  00DA                     ??_LED_task_BEAT_STROBE:	
 10666  00DA                     ??_LED_task_DMX:	
 10667                           ; 1 bytes @ 0x11
 10668                           
 10669                           
 10670                           ; 1 bytes @ 0x11
 10671  00DA                     	ds	2
 10672  00DC                     ??_CONTROLLER_task:	
 10673                           
 10674                           ; 1 bytes @ 0x13
 10675  00DC                     	ds	3
 10676  00DF                     LED_task_DMX@dmx:	
 10677                           
 10678                           ; 4 bytes @ 0x16
 10679  00DF                     	ds	4
 10680  00E3                     ??_LED_task:	
 10681                           
 10682                           ; 1 bytes @ 0x1A
 10683  00E3                     	ds	2
 10684  00E5                     ??_main:	
 10685                           
 10686                           ; 1 bytes @ 0x1C
 10687  00E5                     	ds	2
 10688                           
 10689                           	psect	cstackCOMMON
 10690  0077                     __pcstackCOMMON:	
 10691  0077                     ?_PMD_Initialize:	
 10692  0077                     ?_PIN_MANAGER_Initialize:	
 10693                           ; 1 bytes @ 0x0
 10694                           
 10695  0077                     ?_OSCILLATOR_Initialize:	
 10696                           ; 1 bytes @ 0x0
 10697                           
 10698  0077                     ?_I2C1_Initialize:	
 10699                           ; 1 bytes @ 0x0
 10700                           
 10701  0077                     ?_PWM1_Initialize:	
 10702                           ; 1 bytes @ 0x0
 10703                           
 10704  0077                     ?_PWM2_Initialize:	
 10705                           ; 1 bytes @ 0x0
 10706                           
 10707  0077                     ?_ADCC_Initialize:	
 10708                           ; 1 bytes @ 0x0
 10709                           
 10710  0077                     ?_PWM4_Initialize:	
 10711                           ; 1 bytes @ 0x0
 10712                           
 10713  0077                     ?_PWM3_Initialize:	
 10714                           ; 1 bytes @ 0x0
 10715                           
 10716  0077                     ?_TMR2_Initialize:	
 10717                           ; 1 bytes @ 0x0
 10718                           
 10719  0077                     ?_TMR0_Initialize:	
 10720                           ; 1 bytes @ 0x0
 10721                           
 10722  0077                     ?_EUSART1_Initialize:	
 10723                           ; 1 bytes @ 0x0
 10724                           
 10725  0077                     ?_EUSART1_Receive_ISR:	
 10726                           ; 1 bytes @ 0x0
 10727                           
 10728  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
 10729                           ; 1 bytes @ 0x0
 10730                           
 10731  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
 10732                           ; 1 bytes @ 0x0
 10733                           
 10734  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10735                           ; 1 bytes @ 0x0
 10736                           
 10737  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10738                           ; 1 bytes @ 0x0
 10739                           
 10740  0077                     ?_EUSART1_DefaultErrorHandler:	
 10741                           ; 1 bytes @ 0x0
 10742                           
 10743  0077                     ?_EUSART1_RxDataHandler:	
 10744                           ; 1 bytes @ 0x0
 10745                           
 10746  0077                     ??_EUSART1_RxDataHandler:	
 10747                           ; 1 bytes @ 0x0
 10748                           
 10749  0077                     ?_TMR0_ISR:	
 10750                           ; 1 bytes @ 0x0
 10751                           
 10752  0077                     ??_TMR0_ISR:	
 10753                           ; 1 bytes @ 0x0
 10754                           
 10755  0077                     ?_I2C1_BusCollisionISR:	
 10756                           ; 1 bytes @ 0x0
 10757                           
 10758  0077                     ??_I2C1_BusCollisionISR:	
 10759                           ; 1 bytes @ 0x0
 10760                           
 10761  0077                     ?_I2C1_ISR:	
 10762                           ; 1 bytes @ 0x0
 10763                           
 10764  0077                     ?_ADCC_ThresholdISR:	
 10765                           ; 1 bytes @ 0x0
 10766                           
 10767  0077                     ??_ADCC_ThresholdISR:	
 10768                           ; 1 bytes @ 0x0
 10769                           
 10770  0077                     ?_TMR0_DefaultInterruptHandler:	
 10771                           ; 1 bytes @ 0x0
 10772                           
 10773  0077                     ??_TMR0_DefaultInterruptHandler:	
 10774                           ; 1 bytes @ 0x0
 10775                           
 10776  0077                     ?_I2C1_Stop:	
 10777                           ; 1 bytes @ 0x0
 10778                           
 10779  0077                     ??_I2C1_Stop:	
 10780                           ; 1 bytes @ 0x0
 10781                           
 10782  0077                     ?_I2C1_FunctionComplete:	
 10783                           ; 1 bytes @ 0x0
 10784                           
 10785  0077                     ??_I2C1_FunctionComplete:	
 10786                           ; 1 bytes @ 0x0
 10787                           
 10788  0077                     ?_ADCC_DefaultInterruptHandler:	
 10789                           ; 1 bytes @ 0x0
 10790                           
 10791  0077                     ??_ADCC_DefaultInterruptHandler:	
 10792                           ; 1 bytes @ 0x0
 10793                           
 10794  0077                     ?_CLOCK_init:	
 10795                           ; 1 bytes @ 0x0
 10796                           
 10797  0077                     ?_BUTTONS_init:	
 10798                           ; 1 bytes @ 0x0
 10799                           
 10800  0077                     ?_BEAT_init:	
 10801                           ; 1 bytes @ 0x0
 10802                           
 10803  0077                     ?_LED_init:	
 10804                           ; 1 bytes @ 0x0
 10805                           
 10806  0077                     ?_CONTROLLER_init:	
 10807                           ; 1 bytes @ 0x0
 10808                           
 10809  0077                     ?_TM1650_init:	
 10810                           ; 1 bytes @ 0x0
 10811                           
 10812  0077                     ?_DMX_init:	
 10813                           ; 1 bytes @ 0x0
 10814                           
 10815  0077                     ?_BUTTONS_task:	
 10816                           ; 1 bytes @ 0x0
 10817                           
 10818  0077                     ?_CONTROLLER_task:	
 10819                           ; 1 bytes @ 0x0
 10820                           
 10821  0077                     ?_BEAT_task:	
 10822                           ; 1 bytes @ 0x0
 10823                           
 10824  0077                     ?_LED_task:	
 10825                           ; 1 bytes @ 0x0
 10826                           
 10827  0077                     ?_GPIO_init:	
 10828                           ; 1 bytes @ 0x0
 10829                           
 10830  0077                     ?_CLOCK_timerCallback:	
 10831                           ; 1 bytes @ 0x0
 10832                           
 10833  0077                     ??_CLOCK_timerCallback:	
 10834                           ; 1 bytes @ 0x0
 10835                           
 10836  0077                     ?_CONTROL_DMX:	
 10837                           ; 1 bytes @ 0x0
 10838                           
 10839  0077                     ?_LED_task_ANIMATION:	
 10840                           ; 1 bytes @ 0x0
 10841                           
 10842  0077                     ?_LED_task_MANUAL:	
 10843                           ; 1 bytes @ 0x0
 10844                           
 10845  0077                     ?_LED_task_BEAT_STROBE:	
 10846                           ; 1 bytes @ 0x0
 10847                           
 10848  0077                     ?_DMX_getAddress:	
 10849                           ; 1 bytes @ 0x0
 10850                           
 10851  0077                     ?_address_inc:	
 10852                           ; 1 bytes @ 0x0
 10853                           
 10854  0077                     ?_address_dec:	
 10855                           ; 1 bytes @ 0x0
 10856                           
 10857  0077                     ?_DMX_interrupt:	
 10858                           ; 1 bytes @ 0x0
 10859                           
 10860  0077                     ??_DMX_interrupt:	
 10861                           ; 1 bytes @ 0x0
 10862                           
 10863  0077                     ?_LED_task_BEAT_FADE:	
 10864                           ; 1 bytes @ 0x0
 10865                           
 10866  0077                     ?_LED_task_BEAT_CONTINUOUS:	
 10867                           ; 1 bytes @ 0x0
 10868                           
 10869  0077                     ?_LED_task_BEAT_MIXED:	
 10870                           ; 1 bytes @ 0x0
 10871                           
 10872  0077                     ?_SYSTEM_Initialize:	
 10873                           ; 1 bytes @ 0x0
 10874                           
 10875  0077                     ?_INTERRUPT_InterruptManager:	
 10876                           ; 1 bytes @ 0x0
 10877                           
 10878  0077                     ?_I2C1_WaitForLastPacketToComplete:	
 10879                           ; 1 bytes @ 0x0
 10880                           
 10881  0077                     ?_ADCC_StartConversion:	
 10882                           ; 1 bytes @ 0x0
 10883                           
 10884  0077                     ?_main:	
 10885                           ; 1 bytes @ 0x0
 10886                           
 10887  0077                     ?_BUTTONS_isClicked:	
 10888                           ; 1 bytes @ 0x0
 10889                           
 10890  0077                     ?_BUTTONS_isHeld:	
 10891                           ; 1 bytes @ 0x0
 10892                           
 10893  0077                     ?_getMode:	
 10894                           ; 1 bytes @ 0x0
 10895                           
 10896  0077                     ?_getIsHold:	
 10897                           ; 1 bytes @ 0x0
 10898                           
 10899  0077                     ?_TM1650_enable:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902  0077                     ?_TM1650_fastPrintNum_2digit:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905  0077                     ?_putch:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908  0077                     ?_adcThresholdHandler:	
 10909                           ; 1 bytes @ 0x0
 10910                           
 10911  0077                     ??_adcThresholdHandler:	
 10912                           ; 1 bytes @ 0x0
 10913                           
 10914  0077                     ?_BEAT_detected:	
 10915                           ; 1 bytes @ 0x0
 10916                           
 10917  0077                     ?_LED_task_DMX:	
 10918                           ; 1 bytes @ 0x0
 10919                           
 10920                           
 10921                           ; 1 bytes @ 0x0
 10922  0077                     	ds	1
 10923  0078                     ??_EUSART1_Receive_ISR:	
 10924  0078                     ??_EUSART1_DefaultErrorHandler:	
 10925                           ; 1 bytes @ 0x1
 10926                           
 10927  0078                     I2C1_Stop@completion_code:	
 10928                           ; 1 bytes @ 0x1
 10929                           
 10930                           
 10931                           ; 1 bytes @ 0x1
 10932  0078                     	ds	1
 10933  0079                     ??_I2C1_ISR:	
 10934                           
 10935                           ; 1 bytes @ 0x2
 10936  0079                     	ds	4
 10937  007D                     DMX_interrupt@dummy:	
 10938                           
 10939                           ; 1 bytes @ 0x6
 10940  007D                     	ds	1
 10941  007E                     ??_INTERRUPT_InterruptManager:	
 10942                           
 10943                           	psect	cstackBANK0
 10944  0020                     __pcstackBANK0:	
 10945                           ; 1 bytes @ 0x7
 10946                           
 10947  0020                     ??_PMD_Initialize:	
 10948  0020                     ??_PIN_MANAGER_Initialize:	
 10949                           ; 1 bytes @ 0x0
 10950                           
 10951  0020                     ??_OSCILLATOR_Initialize:	
 10952                           ; 1 bytes @ 0x0
 10953                           
 10954  0020                     ??_I2C1_Initialize:	
 10955                           ; 1 bytes @ 0x0
 10956                           
 10957  0020                     ??_PWM1_Initialize:	
 10958                           ; 1 bytes @ 0x0
 10959                           
 10960  0020                     ??_PWM2_Initialize:	
 10961                           ; 1 bytes @ 0x0
 10962                           
 10963  0020                     ??_PWM4_Initialize:	
 10964                           ; 1 bytes @ 0x0
 10965                           
 10966  0020                     ??_PWM3_Initialize:	
 10967                           ; 1 bytes @ 0x0
 10968                           
 10969  0020                     ??_TMR2_Initialize:	
 10970                           ; 1 bytes @ 0x0
 10971                           
 10972  0020                     ?_EUSART1_SetRxInterruptHandler:	
 10973                           ; 1 bytes @ 0x0
 10974                           
 10975  0020                     ?_EUSART1_SetFramingErrorHandler:	
 10976                           ; 1 bytes @ 0x0
 10977                           
 10978  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 10979                           ; 1 bytes @ 0x0
 10980                           
 10981  0020                     ?_EUSART1_SetErrorHandler:	
 10982                           ; 1 bytes @ 0x0
 10983                           
 10984  0020                     ?_TMR0_SetInterruptHandler:	
 10985                           ; 1 bytes @ 0x0
 10986                           
 10987  0020                     ?_I2C1_MasterWriteTRBBuild:	
 10988                           ; 1 bytes @ 0x0
 10989                           
 10990  0020                     ?_I2C1_MasterTRBInsert:	
 10991                           ; 1 bytes @ 0x0
 10992                           
 10993  0020                     ?_ADCC_SetADTIInterruptHandler:	
 10994                           ; 1 bytes @ 0x0
 10995                           
 10996  0020                     ??_LED_init:	
 10997                           ; 1 bytes @ 0x0
 10998                           
 10999  0020                     ??_CONTROLLER_init:	
 11000                           ; 1 bytes @ 0x0
 11001                           
 11002  0020                     ??_GPIO_init:	
 11003                           ; 1 bytes @ 0x0
 11004                           
 11005  0020                     ??_LED_task_ANIMATION:	
 11006                           ; 1 bytes @ 0x0
 11007                           
 11008  0020                     ??_DMX_getAddress:	
 11009                           ; 1 bytes @ 0x0
 11010                           
 11011  0020                     ??_address_inc:	
 11012                           ; 1 bytes @ 0x0
 11013                           
 11014  0020                     ??_address_dec:	
 11015                           ; 1 bytes @ 0x0
 11016                           
 11017  0020                     ??_LED_task_BEAT_FADE:	
 11018                           ; 1 bytes @ 0x0
 11019                           
 11020  0020                     ??_LED_task_BEAT_CONTINUOUS:	
 11021                           ; 1 bytes @ 0x0
 11022                           
 11023  0020                     ??_LED_task_BEAT_MIXED:	
 11024                           ; 1 bytes @ 0x0
 11025                           
 11026  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 11027                           ; 1 bytes @ 0x0
 11028                           
 11029  0020                     ??_ADCC_StartConversion:	
 11030                           ; 1 bytes @ 0x0
 11031                           
 11032  0020                     ?_ADCC_SetUpperThreshold:	
 11033                           ; 1 bytes @ 0x0
 11034                           
 11035  0020                     ?_init:	
 11036                           ; 1 bytes @ 0x0
 11037                           
 11038  0020                     ??_BUTTONS_isClicked:	
 11039                           ; 1 bytes @ 0x0
 11040                           
 11041  0020                     ??_BUTTONS_isHeld:	
 11042                           ; 1 bytes @ 0x0
 11043                           
 11044  0020                     ??_getMode:	
 11045                           ; 1 bytes @ 0x0
 11046                           
 11047  0020                     ??_getIsHold:	
 11048                           ; 1 bytes @ 0x0
 11049                           
 11050  0020                     ??_BEAT_detected:	
 11051                           ; 1 bytes @ 0x0
 11052                           
 11053  0020                     ?_CLOCK_getTime:	
 11054                           ; 1 bytes @ 0x0
 11055                           
 11056  0020                     ?_strlen:	
 11057                           ; 2 bytes @ 0x0
 11058                           
 11059  0020                     ?__Umul8_16:	
 11060                           ; 2 bytes @ 0x0
 11061                           
 11062  0020                     ?___awdiv:	
 11063                           ; 2 bytes @ 0x0
 11064                           
 11065  0020                     ?___lwdiv:	
 11066                           ; 2 bytes @ 0x0
 11067                           
 11068  0020                     ?___xxtofl:	
 11069                           ; 2 bytes @ 0x0
 11070                           
 11071  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 11072                           ; 4 bytes @ 0x0
 11073                           
 11074  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 11075                           ; 1 bytes @ 0x0
 11076                           
 11077  0020                     ADCC_StartConversion@channel:	
 11078                           ; 1 bytes @ 0x0
 11079                           
 11080  0020                     BUTTONS_isClicked@button:	
 11081                           ; 1 bytes @ 0x0
 11082                           
 11083  0020                     BUTTONS_isHeld@button:	
 11084                           ; 1 bytes @ 0x0
 11085                           
 11086  0020                     __Umul8_16@multiplicand:	
 11087                           ; 1 bytes @ 0x0
 11088                           
 11089  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11090                           ; 1 bytes @ 0x0
 11091                           
 11092  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11093                           ; 2 bytes @ 0x0
 11094                           
 11095  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 11096                           ; 2 bytes @ 0x0
 11097                           
 11098  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11099                           ; 2 bytes @ 0x0
 11100                           
 11101  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11102                           ; 2 bytes @ 0x0
 11103                           
 11104  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 11105                           ; 2 bytes @ 0x0
 11106                           
 11107  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 11108                           ; 2 bytes @ 0x0
 11109                           
 11110  0020                     init@port:	
 11111                           ; 2 bytes @ 0x0
 11112                           
 11113  0020                     ___awdiv@divisor:	
 11114                           ; 2 bytes @ 0x0
 11115                           
 11116  0020                     ___lwdiv@divisor:	
 11117                           ; 2 bytes @ 0x0
 11118                           
 11119  0020                     strlen@s:	
 11120                           ; 2 bytes @ 0x0
 11121                           
 11122  0020                     ___xxtofl@val:	
 11123                           ; 2 bytes @ 0x0
 11124                           
 11125                           
 11126                           ; 4 bytes @ 0x0
 11127  0020                     	ds	1
 11128  0021                     I2C1_MasterTRBInsert@pflag:	
 11129  0021                     I2C1_MasterWriteTRBBuild@length:	
 11130                           ; 1 bytes @ 0x1
 11131                           
 11132                           
 11133                           ; 1 bytes @ 0x1
 11134  0021                     	ds	1
 11135  0022                     ??_ADCC_Initialize:	
 11136  0022                     ??_TMR0_Initialize:	
 11137                           ; 1 bytes @ 0x2
 11138                           
 11139  0022                     ??_EUSART1_Initialize:	
 11140                           ; 1 bytes @ 0x2
 11141                           
 11142  0022                     ??_EUSART1_SetRxInterruptHandler:	
 11143                           ; 1 bytes @ 0x2
 11144                           
 11145  0022                     ??_EUSART1_SetFramingErrorHandler:	
 11146                           ; 1 bytes @ 0x2
 11147                           
 11148  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 11149                           ; 1 bytes @ 0x2
 11150                           
 11151  0022                     ??_EUSART1_SetErrorHandler:	
 11152                           ; 1 bytes @ 0x2
 11153                           
 11154  0022                     ??_TMR0_SetInterruptHandler:	
 11155                           ; 1 bytes @ 0x2
 11156                           
 11157  0022                     ??_I2C1_MasterTRBInsert:	
 11158                           ; 1 bytes @ 0x2
 11159                           
 11160  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11161                           ; 1 bytes @ 0x2
 11162                           
 11163  0022                     ??_CLOCK_init:	
 11164                           ; 1 bytes @ 0x2
 11165                           
 11166  0022                     ??_BEAT_init:	
 11167                           ; 1 bytes @ 0x2
 11168                           
 11169  0022                     ??_CLOCK_getTime:	
 11170                           ; 1 bytes @ 0x2
 11171                           
 11172  0022                     ??_BUTTONS_task:	
 11173                           ; 1 bytes @ 0x2
 11174                           
 11175  0022                     ??_strlen:	
 11176                           ; 1 bytes @ 0x2
 11177                           
 11178  0022                     ??__Umul8_16:	
 11179                           ; 1 bytes @ 0x2
 11180                           
 11181  0022                     ??_SYSTEM_Initialize:	
 11182                           ; 1 bytes @ 0x2
 11183                           
 11184  0022                     ??_ADCC_SetUpperThreshold:	
 11185                           ; 1 bytes @ 0x2
 11186                           
 11187  0022                     init@pin:	
 11188                           ; 1 bytes @ 0x2
 11189                           
 11190  0022                     I2C1_MasterWriteTRBBuild@address:	
 11191                           ; 1 bytes @ 0x2
 11192                           
 11193  0022                     ___awdiv@dividend:	
 11194                           ; 2 bytes @ 0x2
 11195                           
 11196  0022                     ___lwdiv@dividend:	
 11197                           ; 2 bytes @ 0x2
 11198                           
 11199                           
 11200                           ; 2 bytes @ 0x2
 11201  0022                     	ds	1
 11202  0023                     ??_init:	
 11203  0023                     I2C1_MasterTRBInsert@count:	
 11204                           ; 1 bytes @ 0x3
 11205                           
 11206  0023                     strlen@a:	
 11207                           ; 1 bytes @ 0x3
 11208                           
 11209                           
 11210                           ; 2 bytes @ 0x3
 11211  0023                     	ds	1
 11212  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11213  0024                     ??___awdiv:	
 11214                           ; 1 bytes @ 0x4
 11215                           
 11216  0024                     ??___lwdiv:	
 11217                           ; 1 bytes @ 0x4
 11218                           
 11219  0024                     ??___xxtofl:	
 11220                           ; 1 bytes @ 0x4
 11221                           
 11222  0024                     init@btn:	
 11223                           ; 1 bytes @ 0x4
 11224                           
 11225  0024                     __Umul8_16@product:	
 11226                           ; 1 bytes @ 0x4
 11227                           
 11228                           
 11229                           ; 2 bytes @ 0x4
 11230  0024                     	ds	1
 11231  0025                     ??_BUTTONS_init:	
 11232  0025                     BUTTONS_task@i:	
 11233                           ; 1 bytes @ 0x5
 11234                           
 11235  0025                     ___awdiv@counter:	
 11236                           ; 1 bytes @ 0x5
 11237                           
 11238  0025                     ___lwdiv@counter:	
 11239                           ; 1 bytes @ 0x5
 11240                           
 11241                           
 11242                           ; 1 bytes @ 0x5
 11243  0025                     	ds	1
 11244  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11245  0026                     ___awdiv@sign:	
 11246                           ; 1 bytes @ 0x6
 11247                           
 11248  0026                     BUTTONS_task@time:	
 11249                           ; 1 bytes @ 0x6
 11250                           
 11251  0026                     ___lwdiv@quotient:	
 11252                           ; 2 bytes @ 0x6
 11253                           
 11254  0026                     __Umul8_16@word_mpld:	
 11255                           ; 2 bytes @ 0x6
 11256                           
 11257                           
 11258                           ; 2 bytes @ 0x6
 11259  0026                     	ds	1
 11260  0027                     ?_I2C1_MasterWrite:	
 11261  0027                     I2C1_MasterWrite@length:	
 11262                           ; 1 bytes @ 0x7
 11263                           
 11264  0027                     ___awdiv@quotient:	
 11265                           ; 1 bytes @ 0x7
 11266                           
 11267                           
 11268                           ; 2 bytes @ 0x7
 11269  0027                     	ds	1
 11270  0028                     ??_BEAT_task:	
 11271  0028                     ?___lwmod:	
 11272                           ; 1 bytes @ 0x8
 11273                           
 11274  0028                     BUTTONS_task@btn:	
 11275                           ; 2 bytes @ 0x8
 11276                           
 11277  0028                     ___xxtofl@sign:	
 11278                           ; 1 bytes @ 0x8
 11279                           
 11280  0028                     __Umul8_16@multiplier:	
 11281                           ; 1 bytes @ 0x8
 11282                           
 11283  0028                     I2C1_MasterWrite@address:	
 11284                           ; 1 bytes @ 0x8
 11285                           
 11286  0028                     ___lwmod@divisor:	
 11287                           ; 2 bytes @ 0x8
 11288                           
 11289                           
 11290                           ; 2 bytes @ 0x8
 11291  0028                     	ds	1
 11292  0029                     ?___awmod:	
 11293  0029                     ___xxtofl@exp:	
 11294                           ; 2 bytes @ 0x9
 11295                           
 11296  0029                     ___awmod@divisor:	
 11297                           ; 1 bytes @ 0x9
 11298                           
 11299                           
 11300                           ; 2 bytes @ 0x9
 11301  0029                     	ds	1
 11302  002A                     I2C1_MasterWrite@pflag:	
 11303  002A                     BEAT_task@offset:	
 11304                           ; 1 bytes @ 0xA
 11305                           
 11306  002A                     ___lwmod@dividend:	
 11307                           ; 2 bytes @ 0xA
 11308                           
 11309  002A                     ___xxtofl@arg:	
 11310                           ; 2 bytes @ 0xA
 11311                           
 11312                           
 11313                           ; 4 bytes @ 0xA
 11314  002A                     	ds	1
 11315  002B                     ??_I2C1_MasterWrite:	
 11316  002B                     ___awmod@dividend:	
 11317                           ; 1 bytes @ 0xB
 11318                           
 11319                           
 11320                           ; 2 bytes @ 0xB
 11321  002B                     	ds	1
 11322  002C                     ??___lwmod:	
 11323                           
 11324                           ; 1 bytes @ 0xC
 11325  002C                     	ds	1
 11326  002D                     ??___awmod:	
 11327  002D                     I2C1_MasterWrite@pdata:	
 11328                           ; 1 bytes @ 0xD
 11329                           
 11330  002D                     ___lwmod@counter:	
 11331                           ; 1 bytes @ 0xD
 11332                           
 11333                           
 11334                           ; 1 bytes @ 0xD
 11335  002D                     	ds	1
 11336  002E                     ?_beatBrightnessCalculation:	
 11337  002E                     ?___fldiv:	
 11338                           ; 4 bytes @ 0xE
 11339                           
 11340  002E                     ___awmod@counter:	
 11341                           ; 4 bytes @ 0xE
 11342                           
 11343  002E                     ___fldiv@a:	
 11344                           ; 1 bytes @ 0xE
 11345                           
 11346                           
 11347                           ; 4 bytes @ 0xE
 11348  002E                     	ds	1
 11349  002F                     ___awmod@sign:	
 11350                           
 11351                           ; 1 bytes @ 0xF
 11352  002F                     	ds	1
 11353  0030                     ?_writeData:	
 11354  0030                     writeData@data:	
 11355                           ; 1 bytes @ 0x10
 11356                           
 11357                           
 11358                           ; 1 bytes @ 0x10
 11359  0030                     	ds	1
 11360  0031                     ??_writeData:	
 11361                           
 11362                           ; 1 bytes @ 0x11
 11363  0031                     	ds	1
 11364  0032                     ??_beatBrightnessCalculation:	
 11365  0032                     ___fldiv@b:	
 11366                           ; 1 bytes @ 0x12
 11367                           
 11368                           
 11369                           ; 4 bytes @ 0x12
 11370  0032                     	ds	2
 11371  0034                     writeData@address:	
 11372                           
 11373                           ; 1 bytes @ 0x14
 11374  0034                     	ds	1
 11375  0035                     writeData@status:	
 11376                           
 11377                           ; 1 bytes @ 0x15
 11378  0035                     	ds	1
 11379  0036                     ?_TM1650_fastPrintNum_3digit:	
 11380  0036                     ??_TM1650_enable:	
 11381                           ; 1 bytes @ 0x16
 11382                           
 11383  0036                     ?_TM1650_setDigit:	
 11384                           ; 1 bytes @ 0x16
 11385                           
 11386  0036                     ?_TM1650_fastPrintNum:	
 11387                           ; 1 bytes @ 0x16
 11388                           
 11389  0036                     ??_TM1650_fastPrintNum_2digit:	
 11390                           ; 1 bytes @ 0x16
 11391                           
 11392  0036                     ??___fldiv:	
 11393                           ; 1 bytes @ 0x16
 11394                           
 11395  0036                     TM1650_enable@enable:	
 11396                           ; 1 bytes @ 0x16
 11397                           
 11398  0036                     TM1650_setDigit@data:	
 11399                           ; 1 bytes @ 0x16
 11400                           
 11401  0036                     TM1650_fastPrintNum@num:	
 11402                           ; 1 bytes @ 0x16
 11403                           
 11404  0036                     TM1650_fastPrintNum_3digit@num:	
 11405                           ; 2 bytes @ 0x16
 11406                           
 11407                           
 11408                           ; 2 bytes @ 0x16
 11409  0036                     	ds	1
 11410  0037                     ??_TM1650_setDigit:	
 11411                           
 11412                           ; 1 bytes @ 0x17
 11413  0037                     	ds	1
 11414  0038                     ??_TM1650_fastPrintNum_3digit:	
 11415  0038                     ??_TM1650_fastPrintNum:	
 11416                           ; 1 bytes @ 0x18
 11417                           
 11418  0038                     TM1650_setDigit@digit:	
 11419                           ; 1 bytes @ 0x18
 11420                           
 11421                           
 11422                           ; 1 bytes @ 0x18
 11423  0038                     	ds	1
 11424  0039                     ??_DMX_init:	
 11425  0039                     ??_putch:	
 11426                           ; 1 bytes @ 0x19
 11427                           
 11428  0039                     TM1650_fastPrintNum_2digit@num:	
 11429                           ; 1 bytes @ 0x19
 11430                           
 11431                           
 11432                           ; 1 bytes @ 0x19
 11433  0039                     	ds	1
 11434  003A                     putch@n:	
 11435                           
 11436                           ; 1 bytes @ 0x1A
 11437  003A                     	ds	1
 11438  003B                     ?_fputc:	
 11439  003B                     fputc@c:	
 11440                           ; 2 bytes @ 0x1B
 11441                           
 11442  003B                     ___fldiv@rem:	
 11443                           ; 2 bytes @ 0x1B
 11444                           
 11445                           
 11446                           ; 4 bytes @ 0x1B
 11447  003B                     	ds	2
 11448  003D                     fputc@fp:	
 11449                           
 11450                           ; 1 bytes @ 0x1D
 11451  003D                     	ds	1
 11452  003E                     ??_fputc:	
 11453                           
 11454                           ; 1 bytes @ 0x1E
 11455  003E                     	ds	1
 11456  003F                     ___fldiv@sign:	
 11457                           
 11458                           ; 1 bytes @ 0x1F
 11459  003F                     	ds	1
 11460  0040                     ___fldiv@new_exp:	
 11461                           
 11462                           ; 2 bytes @ 0x20
 11463  0040                     	ds	2
 11464  0042                     ___fldiv@grs:	
 11465                           
 11466                           ; 4 bytes @ 0x22
 11467  0042                     	ds	1
 11468  0043                     ?_fputs:	
 11469  0043                     fputs@fp:	
 11470                           ; 2 bytes @ 0x23
 11471                           
 11472                           
 11473                           ; 1 bytes @ 0x23
 11474  0043                     	ds	1
 11475  0044                     ??_fputs:	
 11476                           
 11477                           ; 1 bytes @ 0x24
 11478  0044                     	ds	2
 11479  0046                     ___fldiv@bexp:	
 11480                           
 11481                           ; 1 bytes @ 0x26
 11482  0046                     	ds	1
 11483  0047                     ___fldiv@aexp:	
 11484  0047                     fputs@c:	
 11485                           ; 1 bytes @ 0x27
 11486                           
 11487                           
 11488                           ; 1 bytes @ 0x27
 11489  0047                     	ds	1
 11490  0048                     ?___flmul:	
 11491  0048                     fputs@i:	
 11492                           ; 4 bytes @ 0x28
 11493                           
 11494  0048                     ___flmul@b:	
 11495                           ; 2 bytes @ 0x28
 11496                           
 11497                           
 11498                           ; 4 bytes @ 0x28
 11499  0048                     	ds	2
 11500  004A                     fputs@s:	
 11501                           
 11502                           ; 1 bytes @ 0x2A
 11503  004A                     	ds	1
 11504  004B                     ?_pad:	
 11505  004B                     pad@buf:	
 11506                           ; 2 bytes @ 0x2B
 11507                           
 11508                           
 11509                           ; 1 bytes @ 0x2B
 11510  004B                     	ds	1
 11511  004C                     pad@p:	
 11512  004C                     ___flmul@a:	
 11513                           ; 2 bytes @ 0x2C
 11514                           
 11515                           
 11516                           ; 4 bytes @ 0x2C
 11517  004C                     	ds	2
 11518  004E                     ??_pad:	
 11519                           
 11520                           ; 1 bytes @ 0x2E
 11521  004E                     	ds	1
 11522  004F                     pad@i:	
 11523                           
 11524                           ; 2 bytes @ 0x2F
 11525  004F                     	ds	1
 11526  0050                     ??___flmul:	
 11527                           
 11528                           ; 1 bytes @ 0x30
 11529  0050                     	ds	1
 11530  0051                     pad@w:	
 11531                           
 11532                           ; 2 bytes @ 0x31
 11533  0051                     	ds	2
 11534  0053                     pad@fp:	
 11535                           
 11536                           ; 1 bytes @ 0x33
 11537  0053                     	ds	1
 11538  0054                     ?_ctoa:	
 11539  0054                     ctoa@c:	
 11540                           ; 2 bytes @ 0x34
 11541                           
 11542                           
 11543                           ; 1 bytes @ 0x34
 11544  0054                     	ds	1
 11545  0055                     ___flmul@sign:	
 11546                           
 11547                           ; 1 bytes @ 0x35
 11548  0055                     	ds	1
 11549  0056                     ??_ctoa:	
 11550  0056                     ___flmul@aexp:	
 11551                           ; 1 bytes @ 0x36
 11552                           
 11553                           
 11554                           ; 1 bytes @ 0x36
 11555  0056                     	ds	1
 11556  0057                     ctoa@w:	
 11557  0057                     ___flmul@grs:	
 11558                           ; 2 bytes @ 0x37
 11559                           
 11560                           
 11561                           ; 4 bytes @ 0x37
 11562  0057                     	ds	2
 11563  0059                     ctoa@fp:	
 11564                           
 11565                           ; 1 bytes @ 0x39
 11566  0059                     	ds	1
 11567  005A                     ?_vfpfcnvrt:	
 11568  005A                     vfpfcnvrt@fmt:	
 11569                           ; 2 bytes @ 0x3A
 11570                           
 11571                           
 11572                           ; 1 bytes @ 0x3A
 11573  005A                     	ds	1
 11574  005B                     vfpfcnvrt@ap:	
 11575  005B                     ___flmul@bexp:	
 11576                           ; 1 bytes @ 0x3B
 11577                           
 11578                           
 11579                           ; 1 bytes @ 0x3B
 11580  005B                     	ds	1
 11581  005C                     ??_vfpfcnvrt:	
 11582  005C                     ___flmul@prod:	
 11583                           ; 1 bytes @ 0x3C
 11584                           
 11585                           
 11586                           ; 4 bytes @ 0x3C
 11587  005C                     	ds	4
 11588  0060                     ___flmul@temp:	
 11589                           
 11590                           ; 2 bytes @ 0x40
 11591  0060                     	ds	1
 11592  0061                     vfpfcnvrt@c:	
 11593                           
 11594                           ; 1 bytes @ 0x41
 11595  0061                     	ds	1
 11596  0062                     ?___fltol:	
 11597  0062                     vfpfcnvrt@fp:	
 11598                           ; 4 bytes @ 0x42
 11599                           
 11600  0062                     ___fltol@f1:	
 11601                           ; 1 bytes @ 0x42
 11602                           
 11603                           
 11604                           ; 4 bytes @ 0x42
 11605  0062                     	ds	1
 11606  0063                     ?_vfprintf:	
 11607  0063                     vfprintf@fmt:	
 11608                           ; 2 bytes @ 0x43
 11609                           
 11610                           
 11611                           ; 2 bytes @ 0x43
 11612  0063                     	ds	2
 11613  0065                     vfprintf@ap:	
 11614                           
 11615                           ; 1 bytes @ 0x45
 11616  0065                     	ds	1
 11617  0066                     ??_vfprintf:	
 11618  0066                     ??___fltol:	
 11619                           ; 1 bytes @ 0x46
 11620                           
 11621                           
 11622                           ; 1 bytes @ 0x46
 11623  0066                     	ds	2
 11624  0068                     vfprintf@fp:	
 11625                           
 11626                           ; 1 bytes @ 0x48
 11627  0068                     	ds	1
 11628  0069                     vfprintf@cfmt:	
 11629                           
 11630                           ; 2 bytes @ 0x49
 11631  0069                     	ds	2
 11632  006B                     ??_printf:	
 11633  006B                     ___fltol@sign1:	
 11634                           ; 1 bytes @ 0x4B
 11635                           
 11636                           
 11637                           ; 1 bytes @ 0x4B
 11638  006B                     	ds	1
 11639  006C                     ___fltol@exp1:	
 11640                           
 11641                           ; 1 bytes @ 0x4C
 11642  006C                     	ds	1
 11643  006D                     ??_beatColorCreator:	
 11644  006D                     ?_PWM3_LoadDutyValue:	
 11645                           ; 1 bytes @ 0x4D
 11646                           
 11647  006D                     ?_PWM4_LoadDutyValue:	
 11648                           ; 1 bytes @ 0x4D
 11649                           
 11650  006D                     ?_PWM1_LoadDutyValue:	
 11651                           ; 1 bytes @ 0x4D
 11652                           
 11653  006D                     ?_PWM2_LoadDutyValue:	
 11654                           ; 1 bytes @ 0x4D
 11655                           
 11656  006D                     PWM3_LoadDutyValue@dutyValue:	
 11657                           ; 1 bytes @ 0x4D
 11658                           
 11659  006D                     PWM4_LoadDutyValue@dutyValue:	
 11660                           ; 2 bytes @ 0x4D
 11661                           
 11662  006D                     PWM1_LoadDutyValue@dutyValue:	
 11663                           ; 2 bytes @ 0x4D
 11664                           
 11665  006D                     PWM2_LoadDutyValue@dutyValue:	
 11666                           ; 2 bytes @ 0x4D
 11667                           
 11668                           
 11669                           ; 2 bytes @ 0x4D
 11670  006D                     	ds	1
 11671  006E                     printf@ap:	
 11672                           
 11673                           ; 1 bytes @ 0x4E
 11674  006E                     	ds	1
 11675  006F                     ??_TM1650_init:	
 11676  006F                     ??_LED_task_MANUAL:	
 11677                           ; 1 bytes @ 0x4F
 11678                           
 11679  006F                     ??_PWM3_LoadDutyValue:	
 11680                           ; 1 bytes @ 0x4F
 11681                           
 11682  006F                     ??_PWM4_LoadDutyValue:	
 11683                           ; 1 bytes @ 0x4F
 11684                           
 11685  006F                     ??_PWM1_LoadDutyValue:	
 11686                           ; 1 bytes @ 0x4F
 11687                           
 11688  006F                     ??_PWM2_LoadDutyValue:	
 11689                           ; 1 bytes @ 0x4F
 11690                           
 11691  006F                     LED_task_BEAT_STROBE@beatState:	
 11692                           ; 1 bytes @ 0x4F
 11693                           
 11694                           
 11695                           ; 1 bytes @ 0x4F
 11696  006F                     	ds	1
 11697                           
 11698                           	psect	maintext
 11699  1453                     __pmaintext:	
 11700 ;;
 11701 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11702 ;;
 11703 ;; *************** function _main *****************
 11704 ;; Defined at:
 11705 ;;		line 58 in file "main.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;		None
 11708 ;; Auto vars:     Size  Location     Type
 11709 ;;		None
 11710 ;; Return value:  Size  Location     Type
 11711 ;;                  1    wreg      void 
 11712 ;; Registers used:
 11713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11714 ;; Tracked objects:
 11715 ;;		On entry : B3F/0
 11716 ;;		On exit  : 0/0
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11721 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11722 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11723 ;;Total ram usage:        2 bytes
 11724 ;; Hardware stack levels required when called:   19
 11725 ;; This function calls:
 11726 ;;		_BEAT_init
 11727 ;;		_BEAT_task
 11728 ;;		_BUTTONS_init
 11729 ;;		_BUTTONS_task
 11730 ;;		_CLOCK_getTime
 11731 ;;		_CLOCK_init
 11732 ;;		_CONTROLLER_init
 11733 ;;		_CONTROLLER_task
 11734 ;;		_DMX_init
 11735 ;;		_LED_init
 11736 ;;		_LED_task
 11737 ;;		_SYSTEM_Initialize
 11738 ;;		_TM1650_init
 11739 ;; This function is called by:
 11740 ;;		Startup code after reset
 11741 ;; This function uses a non-reentrant model
 11742 ;;
 11743                           
 11744                           
 11745                           ;psect for function _main
 11746  1453                     _main:	
 11747                           
 11748                           ;main.c: 61:     SYSTEM_Initialize();
 11749                           
 11750                           ;incstack = 0
 11751 ;; hardware stack exceeded
 11752                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11753  1453  3191  21F4  3194   	fcall	_SYSTEM_Initialize
 11754                           
 11755                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11756  1456  3015               	movlw	21
 11757  1457  0141               	movlb	1	; select bank1
 11758  1458  00E6               	movwf	(??_main^(0+128)+1)
 11759  1459  304B               	movlw	75
 11760  145A  00E5               	movwf	??_main^(0+128)
 11761  145B  30BE               	movlw	190
 11762  145C                     u9027:	
 11763  145C  0B89               	decfsz	9,f
 11764  145D  2C5C               	goto	u9027
 11765  145E  0BE5               	decfsz	??_main^(0+128),f
 11766  145F  2C5C               	goto	u9027
 11767  1460  0BE6               	decfsz	(??_main^(0+128)+1),f
 11768  1461  2C5C               	goto	u9027
 11769  1462  0000               	nop
 11770                           
 11771                           ;main.c: 63:     CLOCK_init();
 11772  1463  319E  2670  3194   	fcall	_CLOCK_init
 11773                           
 11774                           ;main.c: 64:     BUTTONS_init();
 11775  1466  3194  24D8  3194   	fcall	_BUTTONS_init
 11776                           
 11777                           ;main.c: 65:     BEAT_init();
 11778  1469  3190  205B  3194   	fcall	_BEAT_init
 11779                           
 11780                           ;main.c: 66:     LED_init();
 11781  146C  319E  2678  3194   	fcall	_LED_init
 11782                           
 11783                           ;main.c: 67:     CONTROLLER_init();
 11784  146F  3182  22D1  3194   	fcall	_CONTROLLER_init
 11785                           
 11786                           ;main.c: 69:     (INTCONbits.GIE = 1);
 11787  1472  178B               	bsf	11,7	;volatile
 11788                           
 11789                           ;main.c: 70:     (INTCONbits.PEIE = 1);
 11790  1473  170B               	bsf	11,6	;volatile
 11791                           
 11792                           ;main.c: 72:     TM1650_init();
 11793  1474  3190  2007  3194   	fcall	_TM1650_init
 11794                           
 11795                           ;main.c: 73:     DMX_init();
 11796  1477  319F  27C5  3194   	fcall	_DMX_init
 11797                           
 11798                           ;main.c: 74:     startTime = CLOCK_getTime();
 11799  147A  319E  269B  3194   	fcall	_CLOCK_getTime
 11800  147D  0140               	movlb	0	; select bank0
 11801  147E  0821               	movf	?_CLOCK_getTime+1,w
 11802  147F  0142               	movlb	2	; select bank2
 11803  1480  00C3               	movwf	(_startTime+1)^(0+256)
 11804  1481  0140               	movlb	0	; select bank0
 11805  1482  0820               	movf	?_CLOCK_getTime,w
 11806  1483  0142               	movlb	2	; select bank2
 11807  1484  00C2               	movwf	_startTime^(0+256)
 11808  1485                     l8781:	
 11809                           
 11810                           ;main.c: 79:     {;main.c: 80:         BUTTONS_task();
 11811  1485  318D  25C0  3194   	fcall	_BUTTONS_task
 11812                           
 11813                           ;main.c: 81:         CONTROLLER_task();
 11814  1488  318B  23F7  3194   	fcall	_CONTROLLER_task
 11815                           
 11816                           ;main.c: 82:         BEAT_task();
 11817  148B  318B  2325  3194   	fcall	_BEAT_task
 11818                           
 11819                           ;main.c: 83:         LED_task();
 11820  148E  318A  226A  3194   	fcall	_LED_task
 11821  1491  2C85               	goto	l8781
 11822  1492                     __end_of_main:	
 11823                           
 11824                           	psect	text1
 11825  1007                     __ptext1:	
 11826 ;; *************** function _TM1650_init *****************
 11827 ;; Defined at:
 11828 ;;		line 51 in file "tm1650.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;		None
 11831 ;; Auto vars:     Size  Location     Type
 11832 ;;		None
 11833 ;; Return value:  Size  Location     Type
 11834 ;;                  1    wreg      void 
 11835 ;; Registers used:
 11836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11837 ;; Tracked objects:
 11838 ;;		On entry : 0/0
 11839 ;;		On exit  : 0/0
 11840 ;;		Unchanged: 0/0
 11841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11846 ;;Total ram usage:        0 bytes
 11847 ;; Hardware stack levels used:    1
 11848 ;; Hardware stack levels required when called:   17
 11849 ;; This function calls:
 11850 ;;		_TM1650_enable
 11851 ;;		_printf
 11852 ;; This function is called by:
 11853 ;;		_main
 11854 ;; This function uses a non-reentrant model
 11855 ;;
 11856                           
 11857                           
 11858                           ;psect for function _TM1650_init
 11859  1007                     _TM1650_init:	
 11860                           
 11861                           ;tm1650.c: 53:     TM1650_enable(1);
 11862                           
 11863                           ;incstack = 0
 11864 ;; hardware stack exceeded
 11865                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11866  1007  3001               	movlw	1
 11867  1008  3190  2030  3190   	fcall	_TM1650_enable
 11868                           
 11869                           ;tm1650.c: 54:     printf("    ");
 11870  100B  3079               	movlw	low (STR_10| (0+32768))
 11871  100C  0141               	movlb	1	; select bank1
 11872  100D  00C9               	movwf	printf@fmt^(0+128)
 11873  100E  30A0               	movlw	high (STR_10| (0+32768))
 11874  100F  00CA               	movwf	(printf@fmt^(0+128)+1)
 11875  1010  3190  201B  3190   	fcall	_printf
 11876                           
 11877                           ;tm1650.c: 55:     printf("\r");
 11878  1013  3047               	movlw	low ((STR_20+4)| (0+32768))
 11879  1014  0141               	movlb	1	; select bank1
 11880  1015  00C9               	movwf	printf@fmt^(0+128)
 11881  1016  30A0               	movlw	high ((STR_20+4)| (0+32768))
 11882  1017  00CA               	movwf	(printf@fmt^(0+128)+1)
 11883  1018  3190  201B         	fcall	_printf
 11884  101A  0008               	return
 11885  101B                     __end_of_TM1650_init:	
 11886                           
 11887                           	psect	text2
 11888  1030                     __ptext2:	
 11889 ;; *************** function _TM1650_enable *****************
 11890 ;; Defined at:
 11891 ;;		line 41 in file "tm1650.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;  enable          1    wreg     _Bool 
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;  enable          1   22[BANK0 ] _Bool 
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1    wreg      void 
 11898 ;; Registers used:
 11899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11909 ;;Total ram usage:        1 bytes
 11910 ;; Hardware stack levels used:    1
 11911 ;; Hardware stack levels required when called:    8
 11912 ;; This function calls:
 11913 ;;		_writeData
 11914 ;; This function is called by:
 11915 ;;		_TM1650_init
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           
 11920                           ;psect for function _TM1650_enable
 11921  1030                     _TM1650_enable:	
 11922                           
 11923                           ;incstack = 0
 11924                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11925                           ;TM1650_enable@enable stored from wreg
 11926  1030  0140               	movlb	0	; select bank0
 11927  1031  00B6               	movwf	TM1650_enable@enable
 11928                           
 11929                           ;tm1650.c: 42:     if(enable){
 11930  1032  0836               	movf	TM1650_enable@enable,w
 11931  1033  1903               	btfsc	3,2
 11932  1034  283E               	goto	l7995
 11933                           
 11934                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 11935  1035  01B0               	clrf	writeData@data
 11936  1036  0AB0               	incf	writeData@data,f
 11937  1037  3024               	movlw	36
 11938  1038  3190  20D8         	fcall	_writeData
 11939                           
 11940                           ;tm1650.c: 44:         tm1650_status = 1;
 11941  103A  0142               	movlb	2	; select bank2
 11942  103B  01C4               	clrf	_tm1650_status^(0+256)
 11943  103C  0AC4               	incf	_tm1650_status^(0+256),f
 11944                           
 11945                           ;tm1650.c: 45:     } else {
 11946  103D  0008               	return
 11947  103E                     l7995:	
 11948                           
 11949                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 11950  103E  01B0               	clrf	writeData@data
 11951  103F  3024               	movlw	36
 11952  1040  3190  20D8         	fcall	_writeData
 11953                           
 11954                           ;tm1650.c: 47:         tm1650_status = 0;
 11955  1042  0142               	movlb	2	; select bank2
 11956  1043  01C4               	clrf	_tm1650_status^(0+256)
 11957  1044  0008               	return
 11958  1045                     __end_of_TM1650_enable:	
 11959                           
 11960                           	psect	text3
 11961  11F4                     __ptext3:	
 11962 ;; *************** function _SYSTEM_Initialize *****************
 11963 ;; Defined at:
 11964 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;		None
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;		None
 11969 ;; Return value:  Size  Location     Type
 11970 ;;                  1    wreg      void 
 11971 ;; Registers used:
 11972 ;;		wreg, status,2, status,0, pclath, cstack
 11973 ;; Tracked objects:
 11974 ;;		On entry : 0/0
 11975 ;;		On exit  : 0/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11982 ;;Total ram usage:        0 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; Hardware stack levels required when called:    6
 11985 ;; This function calls:
 11986 ;;		_ADCC_Initialize
 11987 ;;		_EUSART1_Initialize
 11988 ;;		_I2C1_Initialize
 11989 ;;		_OSCILLATOR_Initialize
 11990 ;;		_PIN_MANAGER_Initialize
 11991 ;;		_PMD_Initialize
 11992 ;;		_PWM1_Initialize
 11993 ;;		_PWM2_Initialize
 11994 ;;		_PWM3_Initialize
 11995 ;;		_PWM4_Initialize
 11996 ;;		_TMR0_Initialize
 11997 ;;		_TMR2_Initialize
 11998 ;; This function is called by:
 11999 ;;		_main
 12000 ;; This function uses a non-reentrant model
 12001 ;;
 12002                           
 12003                           
 12004                           ;psect for function _SYSTEM_Initialize
 12005  11F4                     _SYSTEM_Initialize:	
 12006                           
 12007                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12008                           
 12009                           ;incstack = 0
 12010                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12011  11F4  319E  26EC  3191   	fcall	_PMD_Initialize
 12012                           
 12013                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12014  11F7  3193  237E  3191   	fcall	_PIN_MANAGER_Initialize
 12015                           
 12016                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12017  11FA  319E  26DA  3191   	fcall	_OSCILLATOR_Initialize
 12018                           
 12019                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 12020  11FD  3190  20BC  3191   	fcall	_I2C1_Initialize
 12021                           
 12022                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 12023  1200  319E  26F6  3191   	fcall	_PWM1_Initialize
 12024                           
 12025                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 12026  1203  319F  2701  3191   	fcall	_PWM2_Initialize
 12027                           
 12028                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 12029  1206  3192  223E  3191   	fcall	_ADCC_Initialize
 12030                           
 12031                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 12032  1209  3188  2000  3191   	fcall	_PWM4_Initialize
 12033                           
 12034                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 12035  120C  319F  270C  3191   	fcall	_PWM3_Initialize
 12036                           
 12037                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 12038  120F  319F  2755  3191   	fcall	_TMR2_Initialize
 12039                           
 12040                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 12041  1212  319F  27EC  3191   	fcall	_TMR0_Initialize
 12042                           
 12043                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 12044  1215  3193  234B         	fcall	_EUSART1_Initialize
 12045  1217  0008               	return
 12046  1218                     __end_of_SYSTEM_Initialize:	
 12047                           
 12048                           	psect	text4
 12049  1F55                     __ptext4:	
 12050 ;; *************** function _TMR2_Initialize *****************
 12051 ;; Defined at:
 12052 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;		None
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;		None
 12057 ;; Return value:  Size  Location     Type
 12058 ;;                  1    wreg      void 
 12059 ;; Registers used:
 12060 ;;		wreg, status,2
 12061 ;; Tracked objects:
 12062 ;;		On entry : 0/0
 12063 ;;		On exit  : 0/0
 12064 ;;		Unchanged: 0/0
 12065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12070 ;;Total ram usage:        0 bytes
 12071 ;; Hardware stack levels used:    1
 12072 ;; Hardware stack levels required when called:    4
 12073 ;; This function calls:
 12074 ;;		Nothing
 12075 ;; This function is called by:
 12076 ;;		_SYSTEM_Initialize
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           
 12081                           ;psect for function _TMR2_Initialize
 12082  1F55                     _TMR2_Initialize:	
 12083                           
 12084                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 12085                           
 12086                           ;incstack = 0
 12087                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12088  1F55  3001               	movlw	1
 12089  1F56  0145               	movlb	5	; select bank5
 12090  1F57  0090               	movwf	16	;volatile
 12091                           
 12092                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 12093  1F58  018F               	clrf	15	;volatile
 12094                           
 12095                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12096  1F59  0191               	clrf	17	;volatile
 12097                           
 12098                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 12099  1F5A  30FF               	movlw	255
 12100  1F5B  008D               	movwf	13	;volatile
 12101                           
 12102                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12103  1F5C  018C               	clrf	12	;volatile
 12104                           
 12105                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 12106  1F5D  014E               	movlb	14	; select bank14
 12107  1F5E  1090               	bcf	16,1	;volatile
 12108                           
 12109                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 12110  1F5F  30F0               	movlw	240
 12111  1F60  0145               	movlb	5	; select bank5
 12112  1F61  008E               	movwf	14	;volatile
 12113  1F62  0008               	return
 12114  1F63                     __end_of_TMR2_Initialize:	
 12115                           
 12116                           	psect	text5
 12117  1FEC                     __ptext5:	
 12118 ;; *************** function _TMR0_Initialize *****************
 12119 ;; Defined at:
 12120 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;		None
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;		None
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  1    wreg      void 
 12127 ;; Registers used:
 12128 ;;		wreg, status,2, status,0, pclath, cstack
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12138 ;;Total ram usage:        0 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:    5
 12141 ;; This function calls:
 12142 ;;		_TMR0_SetInterruptHandler
 12143 ;; This function is called by:
 12144 ;;		_SYSTEM_Initialize
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           
 12149                           ;psect for function _TMR0_Initialize
 12150  1FEC                     _TMR0_Initialize:	
 12151                           
 12152                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 12153                           
 12154                           ;incstack = 0
 12155                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12156  1FEC  3045               	movlw	69
 12157  1FED  014B               	movlb	11	; select bank11
 12158  1FEE  009F               	movwf	31	;volatile
 12159                           
 12160                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 12161  1FEF  30F9               	movlw	249
 12162  1FF0  009D               	movwf	29	;volatile
 12163                           
 12164                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12165  1FF1  019C               	clrf	28	;volatile
 12166                           
 12167                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12168  1FF2  014E               	movlb	14	; select bank14
 12169  1FF3  128C               	bcf	12,5	;volatile
 12170                           
 12171                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12172  1FF4  1696               	bsf	22,5	;volatile
 12173                           
 12174                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12175  1FF5  3052               	movlw	low _TMR0_DefaultInterruptHandler
 12176  1FF6  0140               	movlb	0	; select bank0
 12177  1FF7  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12178  1FF8  301E               	movlw	high _TMR0_DefaultInterruptHandler
 12179  1FF9  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12180  1FFA  319E  26A4         	fcall	_TMR0_SetInterruptHandler
 12181                           
 12182                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12183  1FFC  3080               	movlw	128
 12184  1FFD  014B               	movlb	11	; select bank11
 12185  1FFE  009E               	movwf	30	;volatile
 12186  1FFF  0008               	return
 12187  2000                     __end_of_TMR0_Initialize:	
 12188                           
 12189                           	psect	text6
 12190  0800                     __ptext6:	
 12191 ;; *************** function _PWM4_Initialize *****************
 12192 ;; Defined at:
 12193 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12194 ;; Parameters:    Size  Location     Type
 12195 ;;		None
 12196 ;; Auto vars:     Size  Location     Type
 12197 ;;		None
 12198 ;; Return value:  Size  Location     Type
 12199 ;;                  1    wreg      void 
 12200 ;; Registers used:
 12201 ;;		wreg, status,2, status,0
 12202 ;; Tracked objects:
 12203 ;;		On entry : 0/0
 12204 ;;		On exit  : 0/0
 12205 ;;		Unchanged: 0/0
 12206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12211 ;;Total ram usage:        0 bytes
 12212 ;; Hardware stack levels used:    1
 12213 ;; Hardware stack levels required when called:    4
 12214 ;; This function calls:
 12215 ;;		Nothing
 12216 ;; This function is called by:
 12217 ;;		_SYSTEM_Initialize
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           
 12222                           ;psect for function _PWM4_Initialize
 12223  0800                     _PWM4_Initialize:	
 12224                           
 12225                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12226                           
 12227                           ;incstack = 0
 12228                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12229  0800  308C               	movlw	140
 12230  0801  0146               	movlb	6	; select bank6
 12231  0802  009A               	movwf	26	;volatile
 12232                           
 12233                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12234  0803  0199               	clrf	25	;volatile
 12235                           
 12236                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12237  0804  0198               	clrf	24	;volatile
 12238                           
 12239                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12240  0805  0144               	movlb	4	; select bank4
 12241  0806  081E               	movf	30,w	;volatile
 12242  0807  393F               	andlw	-193
 12243  0808  3840               	iorlw	64
 12244  0809  009E               	movwf	30	;volatile
 12245  080A  0008               	return
 12246  080B                     __end_of_PWM4_Initialize:	
 12247                           
 12248                           	psect	text7
 12249  1F0C                     __ptext7:	
 12250 ;; *************** function _PWM3_Initialize *****************
 12251 ;; Defined at:
 12252 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;		None
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;		None
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  1    wreg      void 
 12259 ;; Registers used:
 12260 ;;		wreg, status,2, status,0
 12261 ;; Tracked objects:
 12262 ;;		On entry : 0/0
 12263 ;;		On exit  : 0/0
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12270 ;;Total ram usage:        0 bytes
 12271 ;; Hardware stack levels used:    1
 12272 ;; Hardware stack levels required when called:    4
 12273 ;; This function calls:
 12274 ;;		Nothing
 12275 ;; This function is called by:
 12276 ;;		_SYSTEM_Initialize
 12277 ;; This function uses a non-reentrant model
 12278 ;;
 12279                           
 12280                           
 12281                           ;psect for function _PWM3_Initialize
 12282  1F0C                     _PWM3_Initialize:	
 12283                           
 12284                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12285                           
 12286                           ;incstack = 0
 12287                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12288  1F0C  308C               	movlw	140
 12289  1F0D  0146               	movlb	6	; select bank6
 12290  1F0E  0096               	movwf	22	;volatile
 12291                           
 12292                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12293  1F0F  0195               	clrf	21	;volatile
 12294                           
 12295                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12296  1F10  0194               	clrf	20	;volatile
 12297                           
 12298                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12299  1F11  0144               	movlb	4	; select bank4
 12300  1F12  081E               	movf	30,w	;volatile
 12301  1F13  39CF               	andlw	-49
 12302  1F14  3810               	iorlw	16
 12303  1F15  009E               	movwf	30	;volatile
 12304  1F16  0008               	return
 12305  1F17                     __end_of_PWM3_Initialize:	
 12306                           
 12307                           	psect	text8
 12308  1F01                     __ptext8:	
 12309 ;; *************** function _PWM2_Initialize *****************
 12310 ;; Defined at:
 12311 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;		None
 12314 ;; Auto vars:     Size  Location     Type
 12315 ;;		None
 12316 ;; Return value:  Size  Location     Type
 12317 ;;                  1    wreg      void 
 12318 ;; Registers used:
 12319 ;;		wreg, status,2, status,0
 12320 ;; Tracked objects:
 12321 ;;		On entry : 0/0
 12322 ;;		On exit  : 0/0
 12323 ;;		Unchanged: 0/0
 12324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12329 ;;Total ram usage:        0 bytes
 12330 ;; Hardware stack levels used:    1
 12331 ;; Hardware stack levels required when called:    4
 12332 ;; This function calls:
 12333 ;;		Nothing
 12334 ;; This function is called by:
 12335 ;;		_SYSTEM_Initialize
 12336 ;; This function uses a non-reentrant model
 12337 ;;
 12338                           
 12339                           
 12340                           ;psect for function _PWM2_Initialize
 12341  1F01                     _PWM2_Initialize:	
 12342                           
 12343                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12344                           
 12345                           ;incstack = 0
 12346                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12347  1F01  308C               	movlw	140
 12348  1F02  0146               	movlb	6	; select bank6
 12349  1F03  0092               	movwf	18	;volatile
 12350                           
 12351                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12352  1F04  0191               	clrf	17	;volatile
 12353                           
 12354                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12355  1F05  0190               	clrf	16	;volatile
 12356                           
 12357                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12358  1F06  0144               	movlb	4	; select bank4
 12359  1F07  081E               	movf	30,w	;volatile
 12360  1F08  39F3               	andlw	-13
 12361  1F09  3804               	iorlw	4
 12362  1F0A  009E               	movwf	30	;volatile
 12363  1F0B  0008               	return
 12364  1F0C                     __end_of_PWM2_Initialize:	
 12365                           
 12366                           	psect	text9
 12367  1EF6                     __ptext9:	
 12368 ;; *************** function _PWM1_Initialize *****************
 12369 ;; Defined at:
 12370 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;		None
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;		None
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      void 
 12377 ;; Registers used:
 12378 ;;		wreg, status,2, status,0
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12388 ;;Total ram usage:        0 bytes
 12389 ;; Hardware stack levels used:    1
 12390 ;; Hardware stack levels required when called:    4
 12391 ;; This function calls:
 12392 ;;		Nothing
 12393 ;; This function is called by:
 12394 ;;		_SYSTEM_Initialize
 12395 ;; This function uses a non-reentrant model
 12396 ;;
 12397                           
 12398                           
 12399                           ;psect for function _PWM1_Initialize
 12400  1EF6                     _PWM1_Initialize:	
 12401                           
 12402                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12403                           
 12404                           ;incstack = 0
 12405                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12406  1EF6  308C               	movlw	140
 12407  1EF7  0146               	movlb	6	; select bank6
 12408  1EF8  008E               	movwf	14	;volatile
 12409                           
 12410                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12411  1EF9  018D               	clrf	13	;volatile
 12412                           
 12413                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12414  1EFA  018C               	clrf	12	;volatile
 12415                           
 12416                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12417  1EFB  0144               	movlb	4	; select bank4
 12418  1EFC  081E               	movf	30,w	;volatile
 12419  1EFD  39FC               	andlw	-4
 12420  1EFE  3801               	iorlw	1
 12421  1EFF  009E               	movwf	30	;volatile
 12422  1F00  0008               	return
 12423  1F01                     __end_of_PWM1_Initialize:	
 12424                           
 12425                           	psect	text10
 12426  1EEC                     __ptext10:	
 12427 ;; *************** function _PMD_Initialize *****************
 12428 ;; Defined at:
 12429 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12430 ;; Parameters:    Size  Location     Type
 12431 ;;		None
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;		None
 12434 ;; Return value:  Size  Location     Type
 12435 ;;                  1    wreg      void 
 12436 ;; Registers used:
 12437 ;;		status,2
 12438 ;; Tracked objects:
 12439 ;;		On entry : 0/0
 12440 ;;		On exit  : 0/0
 12441 ;;		Unchanged: 0/0
 12442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12447 ;;Total ram usage:        0 bytes
 12448 ;; Hardware stack levels used:    1
 12449 ;; Hardware stack levels required when called:    4
 12450 ;; This function calls:
 12451 ;;		Nothing
 12452 ;; This function is called by:
 12453 ;;		_SYSTEM_Initialize
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           
 12458                           ;psect for function _PMD_Initialize
 12459  1EEC                     _PMD_Initialize:	
 12460                           
 12461                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12462                           
 12463                           ;incstack = 0
 12464                           ; Regs used in _PMD_Initialize: [status,2]
 12465  1EEC  014F               	movlb	15	; select bank15
 12466  1EED  0196               	clrf	22	;volatile
 12467                           
 12468                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12469  1EEE  0197               	clrf	23	;volatile
 12470                           
 12471                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12472  1EEF  0198               	clrf	24	;volatile
 12473                           
 12474                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12475  1EF0  0199               	clrf	25	;volatile
 12476                           
 12477                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12478  1EF1  019A               	clrf	26	;volatile
 12479                           
 12480                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12481  1EF2  019B               	clrf	27	;volatile
 12482                           
 12483                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12484  1EF3  019C               	clrf	28	;volatile
 12485                           
 12486                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12487  1EF4  019D               	clrf	29	;volatile
 12488  1EF5  0008               	return
 12489  1EF6                     __end_of_PMD_Initialize:	
 12490                           
 12491                           	psect	text11
 12492  137E                     __ptext11:	
 12493 ;; *************** function _PIN_MANAGER_Initialize *****************
 12494 ;; Defined at:
 12495 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12496 ;; Parameters:    Size  Location     Type
 12497 ;;		None
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;		None
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  1    wreg      void 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12513 ;;Total ram usage:        0 bytes
 12514 ;; Hardware stack levels used:    1
 12515 ;; Hardware stack levels required when called:    4
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_SYSTEM_Initialize
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           
 12524                           ;psect for function _PIN_MANAGER_Initialize
 12525  137E                     _PIN_MANAGER_Initialize:	
 12526                           
 12527                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12528                           
 12529                           ;incstack = 0
 12530                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12531  137E  0140               	movlb	0	; select bank0
 12532  137F  0198               	clrf	24	;volatile
 12533                           
 12534                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12535  1380  0199               	clrf	25	;volatile
 12536                           
 12537                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12538  1381  019A               	clrf	26	;volatile
 12539                           
 12540                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12541  1382  303F               	movlw	63
 12542  1383  0092               	movwf	18	;volatile
 12543                           
 12544                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12545  1384  30F0               	movlw	240
 12546  1385  0093               	movwf	19	;volatile
 12547                           
 12548                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x26;
 12549  1386  3026               	movlw	38
 12550  1387  0094               	movwf	20	;volatile
 12551                           
 12552                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12553  1388  30FF               	movlw	255
 12554  1389  017E               	movlb	62	; select bank62
 12555  138A  00CE               	movwf	78	;volatile
 12556                           
 12557                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12558  138B  30E0               	movlw	224
 12559  138C  00C3               	movwf	67	;volatile
 12560                           
 12561                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12562  138D  3007               	movlw	7
 12563  138E  00B8               	movwf	56	;volatile
 12564                           
 12565                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12566  138F  01C4               	clrf	68	;volatile
 12567                           
 12568                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12569  1390  01B9               	clrf	57	;volatile
 12570                           
 12571                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12572  1391  01CF               	clrf	79	;volatile
 12573                           
 12574                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12575  1392  01BA               	clrf	58	;volatile
 12576                           
 12577                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12578  1393  01C5               	clrf	69	;volatile
 12579                           
 12580                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12581  1394  01D0               	clrf	80	;volatile
 12582                           
 12583                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12584  1395  3037               	movlw	55
 12585  1396  00BB               	movwf	59	;volatile
 12586                           
 12587                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12588  1397  30F0               	movlw	240
 12589  1398  00C6               	movwf	70	;volatile
 12590                           
 12591                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12592  1399  30FF               	movlw	255
 12593  139A  00D1               	movwf	81	;volatile
 12594                           
 12595                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12596  139B  3005               	movlw	5
 12597  139C  017D               	movlb	61	; select bank61
 12598  139D  00C5               	movwf	69	;volatile
 12599                           
 12600                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12601  139E  3014               	movlw	20
 12602  139F  017E               	movlb	62	; select bank62
 12603  13A0  0094               	movwf	20	;volatile
 12604                           
 12605                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12606  13A1  300B               	movlw	11
 12607  13A2  00A3               	movwf	35	;volatile
 12608                           
 12609                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12610  13A3  300C               	movlw	12
 12611  13A4  00A4               	movwf	36	;volatile
 12612                           
 12613                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12614  13A5  3013               	movlw	19
 12615  13A6  0095               	movwf	21	;volatile
 12616                           
 12617                           ;mcc_generated_files/pin_manager.c: 111:     RC6PPS = 0x0A;
 12618  13A7  300A               	movlw	10
 12619  13A8  00A6               	movwf	38	;volatile
 12620                           
 12621                           ;mcc_generated_files/pin_manager.c: 112:     RC7PPS = 0x09;
 12622  13A9  3009               	movlw	9
 12623  13AA  00A7               	movwf	39	;volatile
 12624                           
 12625                           ;mcc_generated_files/pin_manager.c: 113:     SSP1DATPPS = 0x04;
 12626  13AB  3004               	movlw	4
 12627  13AC  017D               	movlb	61	; select bank61
 12628  13AD  00C6               	movwf	70	;volatile
 12629                           
 12630                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0C;
 12631  13AE  300C               	movlw	12
 12632  13AF  00CB               	movwf	75	;volatile
 12633  13B0  0008               	return
 12634  13B1                     __end_of_PIN_MANAGER_Initialize:	
 12635                           
 12636                           	psect	text12
 12637  1EDA                     __ptext12:	
 12638 ;; *************** function _OSCILLATOR_Initialize *****************
 12639 ;; Defined at:
 12640 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;		None
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;		None
 12645 ;; Return value:  Size  Location     Type
 12646 ;;                  1    wreg      void 
 12647 ;; Registers used:
 12648 ;;		wreg, status,2
 12649 ;; Tracked objects:
 12650 ;;		On entry : 0/0
 12651 ;;		On exit  : 0/0
 12652 ;;		Unchanged: 0/0
 12653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12658 ;;Total ram usage:        0 bytes
 12659 ;; Hardware stack levels used:    1
 12660 ;; Hardware stack levels required when called:    4
 12661 ;; This function calls:
 12662 ;;		Nothing
 12663 ;; This function is called by:
 12664 ;;		_SYSTEM_Initialize
 12665 ;; This function uses a non-reentrant model
 12666 ;;
 12667                           
 12668                           
 12669                           ;psect for function _OSCILLATOR_Initialize
 12670  1EDA                     _OSCILLATOR_Initialize:	
 12671                           
 12672                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12673                           
 12674                           ;incstack = 0
 12675                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12676  1EDA  3060               	movlw	96
 12677  1EDB  0151               	movlb	17	; select bank17
 12678  1EDC  008D               	movwf	13	;volatile
 12679                           
 12680                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12681  1EDD  018F               	clrf	15	;volatile
 12682                           
 12683                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12684  1EDE  0191               	clrf	17	;volatile
 12685                           
 12686                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12687  1EDF  3006               	movlw	6
 12688  1EE0  0093               	movwf	19	;volatile
 12689                           
 12690                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12691  1EE1  0192               	clrf	18	;volatile
 12692  1EE2  0008               	return
 12693  1EE3                     __end_of_OSCILLATOR_Initialize:	
 12694                           
 12695                           	psect	text13
 12696  10BC                     __ptext13:	
 12697 ;; *************** function _I2C1_Initialize *****************
 12698 ;; Defined at:
 12699 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12700 ;; Parameters:    Size  Location     Type
 12701 ;;		None
 12702 ;; Auto vars:     Size  Location     Type
 12703 ;;		None
 12704 ;; Return value:  Size  Location     Type
 12705 ;;                  1    wreg      void 
 12706 ;; Registers used:
 12707 ;;		wreg, status,2
 12708 ;; Tracked objects:
 12709 ;;		On entry : 0/0
 12710 ;;		On exit  : 0/0
 12711 ;;		Unchanged: 0/0
 12712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12715 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12716 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12717 ;;Total ram usage:        1 bytes
 12718 ;; Hardware stack levels used:    1
 12719 ;; Hardware stack levels required when called:    4
 12720 ;; This function calls:
 12721 ;;		Nothing
 12722 ;; This function is called by:
 12723 ;;		_SYSTEM_Initialize
 12724 ;; This function uses a non-reentrant model
 12725 ;;
 12726                           
 12727                           
 12728                           ;psect for function _I2C1_Initialize
 12729  10BC                     _I2C1_Initialize:	
 12730                           
 12731                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12732                           
 12733                           ;incstack = 0
 12734                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12735  10BC  3064               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12736  10BD  0140               	movlb	0	; select bank0
 12737  10BE  00A0               	movwf	??_I2C1_Initialize
 12738  10BF  0820               	movf	??_I2C1_Initialize,w
 12739  10C0  0141               	movlb	1	; select bank1
 12740  10C1  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12741                           
 12742                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12743  10C2  3064               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12744  10C3  0140               	movlb	0	; select bank0
 12745  10C4  00A0               	movwf	??_I2C1_Initialize
 12746  10C5  0820               	movf	??_I2C1_Initialize,w
 12747  10C6  0141               	movlb	1	; select bank1
 12748  10C7  00A0               	movwf	_i2c1_object^(0+128)
 12749                           
 12750                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12751  10C8  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12752                           
 12753                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12754  10C9  1022               	bcf	(_i2c1_object^(0+128)+2),0
 12755                           
 12756                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12757  10CA  01A4               	clrf	(_i2c1_object^(0+128)+4)
 12758                           
 12759                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12760  10CB  0143               	movlb	3	; select bank3
 12761  10CC  018F               	clrf	15	;volatile
 12762                           
 12763                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12764  10CD  3028               	movlw	40
 12765  10CE  0090               	movwf	16	;volatile
 12766                           
 12767                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12768  10CF  0192               	clrf	18	;volatile
 12769                           
 12770                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12771  10D0  304F               	movlw	79
 12772  10D1  008D               	movwf	13	;volatile
 12773                           
 12774                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12775  10D2  014E               	movlb	14	; select bank14
 12776  10D3  100F               	bcf	15,0	;volatile
 12777                           
 12778                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12779  10D4  108F               	bcf	15,1	;volatile
 12780                           
 12781                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12782  10D5  1419               	bsf	25,0	;volatile
 12783                           
 12784                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12785  10D6  1499               	bsf	25,1	;volatile
 12786  10D7  0008               	return
 12787  10D8                     __end_of_I2C1_Initialize:	
 12788                           
 12789                           	psect	text14
 12790  134B                     __ptext14:	
 12791 ;; *************** function _EUSART1_Initialize *****************
 12792 ;; Defined at:
 12793 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12794 ;; Parameters:    Size  Location     Type
 12795 ;;		None
 12796 ;; Auto vars:     Size  Location     Type
 12797 ;;		None
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  1    wreg      void 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0, pclath, cstack
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12811 ;;Total ram usage:        0 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:    5
 12814 ;; This function calls:
 12815 ;;		_EUSART1_SetErrorHandler
 12816 ;;		_EUSART1_SetFramingErrorHandler
 12817 ;;		_EUSART1_SetOverrunErrorHandler
 12818 ;;		_EUSART1_SetRxInterruptHandler
 12819 ;; This function is called by:
 12820 ;;		_SYSTEM_Initialize
 12821 ;; This function uses a non-reentrant model
 12822 ;;
 12823                           
 12824                           
 12825                           ;psect for function _EUSART1_Initialize
 12826  134B                     _EUSART1_Initialize:	
 12827                           
 12828                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12829                           
 12830                           ;incstack = 0
 12831                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12832  134B  014E               	movlb	14	; select bank14
 12833  134C  1299               	bcf	25,5	;volatile
 12834                           
 12835                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12836  134D  30E6               	movlw	low _EUSART1_Receive_ISR
 12837  134E  0140               	movlb	0	; select bank0
 12838  134F  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12839  1350  3013               	movlw	high _EUSART1_Receive_ISR
 12840  1351  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12841  1352  319E  26B6  3193   	fcall	_EUSART1_SetRxInterruptHandler
 12842                           
 12843                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12844  1355  3008               	movlw	8
 12845  1356  0142               	movlb	2	; select bank2
 12846  1357  009F               	movwf	31	;volatile
 12847                           
 12848                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12849  1358  3090               	movlw	144
 12850  1359  009D               	movwf	29	;volatile
 12851                           
 12852                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12853  135A  3004               	movlw	4
 12854  135B  009E               	movwf	30	;volatile
 12855                           
 12856                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12857  135C  301F               	movlw	31
 12858  135D  009B               	movwf	27	;volatile
 12859                           
 12860                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12861  135E  019C               	clrf	28	;volatile
 12862                           
 12863                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12864  135F  3051               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12865  1360  0140               	movlb	0	; select bank0
 12866  1361  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12867  1362  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12868  1363  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12869  1364  319E  26C8  3193   	fcall	_EUSART1_SetFramingErrorHandler
 12870                           
 12871                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12872  1367  30FC               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12873  1368  0140               	movlb	0	; select bank0
 12874  1369  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12875  136A  3007               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12876  136B  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12877  136C  319E  26D1  3193   	fcall	_EUSART1_SetOverrunErrorHandler
 12878                           
 12879                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12880  136F  3056               	movlw	low _EUSART1_DefaultErrorHandler
 12881  1370  0140               	movlb	0	; select bank0
 12882  1371  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12883  1372  301E               	movlw	high _EUSART1_DefaultErrorHandler
 12884  1373  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12885  1374  319E  26BF         	fcall	_EUSART1_SetErrorHandler
 12886                           
 12887                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12888  1376  0141               	movlb	1	; select bank1
 12889  1377  01C7               	clrf	_eusart1RxLastError^(0+128)	;volatile
 12890                           
 12891                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12892  1378  01F4               	clrf	_eusart1RxHead	;volatile
 12893                           
 12894                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12895  1379  01F3               	clrf	_eusart1RxTail	;volatile
 12896                           
 12897                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12898  137A  01C8               	clrf	_eusart1RxCount^(0+128)	;volatile
 12899                           
 12900                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12901  137B  014E               	movlb	14	; select bank14
 12902  137C  1699               	bsf	25,5	;volatile
 12903  137D  0008               	return
 12904  137E                     __end_of_EUSART1_Initialize:	
 12905                           
 12906                           	psect	text15
 12907  1ED1                     __ptext15:	
 12908 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12909 ;; Defined at:
 12910 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12913 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12914 ;; Auto vars:     Size  Location     Type
 12915 ;;		None
 12916 ;; Return value:  Size  Location     Type
 12917 ;;                  1    wreg      void 
 12918 ;; Registers used:
 12919 ;;		wreg
 12920 ;; Tracked objects:
 12921 ;;		On entry : 0/0
 12922 ;;		On exit  : 0/0
 12923 ;;		Unchanged: 0/0
 12924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12925 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12929 ;;Total ram usage:        2 bytes
 12930 ;; Hardware stack levels used:    1
 12931 ;; Hardware stack levels required when called:    4
 12932 ;; This function calls:
 12933 ;;		Nothing
 12934 ;; This function is called by:
 12935 ;;		_EUSART1_Initialize
 12936 ;; This function uses a non-reentrant model
 12937 ;;
 12938                           
 12939                           
 12940                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12941  1ED1                     _EUSART1_SetOverrunErrorHandler:	
 12942                           
 12943                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12944                           
 12945                           ;incstack = 0
 12946                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12947  1ED1  0140               	movlb	0	; select bank0
 12948  1ED2  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12949  1ED3  0144               	movlb	4	; select bank4
 12950  1ED4  00E7               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+512)
 12951  1ED5  0140               	movlb	0	; select bank0
 12952  1ED6  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12953  1ED7  0144               	movlb	4	; select bank4
 12954  1ED8  00E6               	movwf	_EUSART1_OverrunErrorHandler^(0+512)
 12955  1ED9  0008               	return
 12956  1EDA                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12957                           
 12958                           	psect	text16
 12959  1EC8                     __ptext16:	
 12960 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12961 ;; Defined at:
 12962 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12963 ;; Parameters:    Size  Location     Type
 12964 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12965 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;		None
 12968 ;; Return value:  Size  Location     Type
 12969 ;;                  1    wreg      void 
 12970 ;; Registers used:
 12971 ;;		wreg
 12972 ;; Tracked objects:
 12973 ;;		On entry : 0/0
 12974 ;;		On exit  : 0/0
 12975 ;;		Unchanged: 0/0
 12976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12980 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12981 ;;Total ram usage:        2 bytes
 12982 ;; Hardware stack levels used:    1
 12983 ;; Hardware stack levels required when called:    4
 12984 ;; This function calls:
 12985 ;;		Nothing
 12986 ;; This function is called by:
 12987 ;;		_EUSART1_Initialize
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           
 12992                           ;psect for function _EUSART1_SetFramingErrorHandler
 12993  1EC8                     _EUSART1_SetFramingErrorHandler:	
 12994                           
 12995                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12996                           
 12997                           ;incstack = 0
 12998                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12999  1EC8  0140               	movlb	0	; select bank0
 13000  1EC9  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13001  1ECA  0144               	movlb	4	; select bank4
 13002  1ECB  00E9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+512)
 13003  1ECC  0140               	movlb	0	; select bank0
 13004  1ECD  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13005  1ECE  0144               	movlb	4	; select bank4
 13006  1ECF  00E8               	movwf	_EUSART1_FramingErrorHandler^(0+512)
 13007  1ED0  0008               	return
 13008  1ED1                     __end_of_EUSART1_SetFramingErrorHandler:	
 13009                           
 13010                           	psect	text17
 13011  1EBF                     __ptext17:	
 13012 ;; *************** function _EUSART1_SetErrorHandler *****************
 13013 ;; Defined at:
 13014 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13017 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13018 ;; Auto vars:     Size  Location     Type
 13019 ;;		None
 13020 ;; Return value:  Size  Location     Type
 13021 ;;                  1    wreg      void 
 13022 ;; Registers used:
 13023 ;;		wreg
 13024 ;; Tracked objects:
 13025 ;;		On entry : 0/0
 13026 ;;		On exit  : 0/0
 13027 ;;		Unchanged: 0/0
 13028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13032 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13033 ;;Total ram usage:        2 bytes
 13034 ;; Hardware stack levels used:    1
 13035 ;; Hardware stack levels required when called:    4
 13036 ;; This function calls:
 13037 ;;		Nothing
 13038 ;; This function is called by:
 13039 ;;		_EUSART1_Initialize
 13040 ;; This function uses a non-reentrant model
 13041 ;;
 13042                           
 13043                           
 13044                           ;psect for function _EUSART1_SetErrorHandler
 13045  1EBF                     _EUSART1_SetErrorHandler:	
 13046                           
 13047                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 13048                           
 13049                           ;incstack = 0
 13050                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13051  1EBF  0140               	movlb	0	; select bank0
 13052  1EC0  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13053  1EC1  0144               	movlb	4	; select bank4
 13054  1EC2  00E5               	movwf	(_EUSART1_ErrorHandler+1)^(0+512)
 13055  1EC3  0140               	movlb	0	; select bank0
 13056  1EC4  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13057  1EC5  0144               	movlb	4	; select bank4
 13058  1EC6  00E4               	movwf	_EUSART1_ErrorHandler^(0+512)
 13059  1EC7  0008               	return
 13060  1EC8                     __end_of_EUSART1_SetErrorHandler:	
 13061                           
 13062                           	psect	text18
 13063  123E                     __ptext18:	
 13064 ;; *************** function _ADCC_Initialize *****************
 13065 ;; Defined at:
 13066 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13067 ;; Parameters:    Size  Location     Type
 13068 ;;		None
 13069 ;; Auto vars:     Size  Location     Type
 13070 ;;		None
 13071 ;; Return value:  Size  Location     Type
 13072 ;;                  1    wreg      void 
 13073 ;; Registers used:
 13074 ;;		wreg, status,2, status,0, pclath, cstack
 13075 ;; Tracked objects:
 13076 ;;		On entry : 0/0
 13077 ;;		On exit  : 0/0
 13078 ;;		Unchanged: 0/0
 13079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13084 ;;Total ram usage:        0 bytes
 13085 ;; Hardware stack levels used:    1
 13086 ;; Hardware stack levels required when called:    5
 13087 ;; This function calls:
 13088 ;;		_ADCC_SetADTIInterruptHandler
 13089 ;; This function is called by:
 13090 ;;		_SYSTEM_Initialize
 13091 ;; This function uses a non-reentrant model
 13092 ;;
 13093                           
 13094                           
 13095                           ;psect for function _ADCC_Initialize
 13096  123E                     _ADCC_Initialize:	
 13097                           
 13098                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13099                           
 13100                           ;incstack = 0
 13101                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13102  123E  0141               	movlb	1	; select bank1
 13103  123F  018C               	clrf	12	;volatile
 13104                           
 13105                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13106  1240  018D               	clrf	13	;volatile
 13107                           
 13108                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13109  1241  018E               	clrf	14	;volatile
 13110                           
 13111                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13112  1242  018F               	clrf	15	;volatile
 13113                           
 13114                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13115  1243  0192               	clrf	18	;volatile
 13116                           
 13117                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13118  1244  0193               	clrf	19	;volatile
 13119                           
 13120                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13121  1245  0198               	clrf	24	;volatile
 13122                           
 13123                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13124  1246  019A               	clrf	26	;volatile
 13125                           
 13126                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13127  1247  019F               	clrf	31	;volatile
 13128                           
 13129                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13130  1248  0142               	movlb	2	; select bank2
 13131  1249  018C               	clrf	12	;volatile
 13132                           
 13133                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13134  124A  018D               	clrf	13	;volatile
 13135                           
 13136                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13137  124B  018E               	clrf	14	;volatile
 13138                           
 13139                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13140  124C  018F               	clrf	15	;volatile
 13141                           
 13142                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13143  124D  0190               	clrf	16	;volatile
 13144                           
 13145                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13146  124E  0192               	clrf	18	;volatile
 13147                           
 13148                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 13149  124F  3054               	movlw	84
 13150  1250  0093               	movwf	19	;volatile
 13151                           
 13152                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 13153  1251  3056               	movlw	86
 13154  1252  0094               	movwf	20	;volatile
 13155                           
 13156                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13157  1253  0195               	clrf	21	;volatile
 13158                           
 13159                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 13160  1254  0196               	clrf	22	;volatile
 13161                           
 13162                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13163  1255  0197               	clrf	23	;volatile
 13164                           
 13165                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13166  1256  0198               	clrf	24	;volatile
 13167                           
 13168                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 13169  1257  30D4               	movlw	212
 13170  1258  0091               	movwf	17	;volatile
 13171                           
 13172                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 13173  1259  014E               	movlb	14	; select bank14
 13174  125A  108D               	bcf	13,1	;volatile
 13175                           
 13176                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 13177  125B  1497               	bsf	23,1	;volatile
 13178                           
 13179                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 13180  125C  3050               	movlw	low _ADCC_DefaultInterruptHandler
 13181  125D  0140               	movlb	0	; select bank0
 13182  125E  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13183  125F  301E               	movlw	high _ADCC_DefaultInterruptHandler
 13184  1260  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13185  1261  319E  2680         	fcall	_ADCC_SetADTIInterruptHandler
 13186  1263  0008               	return
 13187  1264                     __end_of_ADCC_Initialize:	
 13188                           
 13189                           	psect	text19
 13190  0A6A                     __ptext19:	
 13191 ;; *************** function _LED_task *****************
 13192 ;; Defined at:
 13193 ;;		line 56 in file "led.c"
 13194 ;; Parameters:    Size  Location     Type
 13195 ;;		None
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;		None
 13198 ;; Return value:  Size  Location     Type
 13199 ;;                  1    wreg      void 
 13200 ;; Registers used:
 13201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13202 ;; Tracked objects:
 13203 ;;		On entry : 0/0
 13204 ;;		On exit  : 0/0
 13205 ;;		Unchanged: 0/0
 13206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13209 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13210 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13211 ;;Total ram usage:        2 bytes
 13212 ;; Hardware stack levels used:    1
 13213 ;; Hardware stack levels required when called:   18
 13214 ;; This function calls:
 13215 ;;		_LED_setColor
 13216 ;;		_LED_task_ANIMATION
 13217 ;;		_LED_task_BEAT_CONTINUOUS
 13218 ;;		_LED_task_BEAT_FADE
 13219 ;;		_LED_task_BEAT_MIXED
 13220 ;;		_LED_task_BEAT_STROBE
 13221 ;;		_LED_task_DMX
 13222 ;;		_LED_task_MANUAL
 13223 ;;		_beatColorCreator
 13224 ;;		_getIsHold
 13225 ;;		_getMode
 13226 ;; This function is called by:
 13227 ;;		_main
 13228 ;; This function uses a non-reentrant model
 13229 ;;
 13230                           
 13231                           
 13232                           ;psect for function _LED_task
 13233  0A6A                     _LED_task:	
 13234                           
 13235                           ;led.c: 58:     switch(getMode()) {
 13236                           
 13237                           ;incstack = 0
 13238 ;; hardware stack exceeded
 13239                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13240  0A6A  2B02               	goto	l8703
 13241  0A6B                     l8667:	
 13242                           
 13243                           ;led.c: 60:             LED_task_DMX();
 13244  0A6B  3196  2620         	fcall	_LED_task_DMX
 13245                           
 13246                           ;led.c: 61:             break;
 13247  0A6D  0008               	return
 13248  0A6E                     l8669:	
 13249                           
 13250                           ;led.c: 64:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13251  0A6E  3180  2002  318A   	fcall	_getIsHold
 13252  0A71  3A00               	xorlw	0
 13253  0A72  1903               	skipnz
 13254  0A73  2A88               	goto	l8673
 13255  0A74  0141               	movlb	1	; select bank1
 13256  0A75  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 13257  0A76  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 13258  0A77  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 13259  0A78  3000               	movlw	0
 13260  0A79  3196  2683  318A   	fcall	_beatColorCreator
 13261  0A7C  0141               	movlb	1	; select bank1
 13262  0A7D  084C               	movf	(?_beatColorCreator+3)^(0+128),w
 13263  0A7E  00D5               	movwf	(LED_setColor@input+3)^(0+128)
 13264  0A7F  084B               	movf	(?_beatColorCreator+2)^(0+128),w
 13265  0A80  00D4               	movwf	(LED_setColor@input+2)^(0+128)
 13266  0A81  084A               	movf	(?_beatColorCreator+1)^(0+128),w
 13267  0A82  00D3               	movwf	(LED_setColor@input+1)^(0+128)
 13268  0A83  0849               	movf	?_beatColorCreator^(0+128),w
 13269  0A84  00D2               	movwf	LED_setColor@input^(0+128)
 13270  0A85  3185  25E3         	fcall	_LED_setColor
 13271  0A87  0008               	return
 13272  0A88                     l8673:	
 13273  0A88  318C  24D5         	fcall	_LED_task_BEAT_STROBE
 13274  0A8A  0008               	return
 13275  0A8B                     l8675:	
 13276                           
 13277                           ;led.c: 69:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13278  0A8B  3180  2002  318A   	fcall	_getIsHold
 13279  0A8E  3A00               	xorlw	0
 13280  0A8F  1903               	skipnz
 13281  0A90  2AA5               	goto	l8679
 13282  0A91  0141               	movlb	1	; select bank1
 13283  0A92  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 13284  0A93  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 13285  0A94  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 13286  0A95  3000               	movlw	0
 13287  0A96  3196  2683  318A   	fcall	_beatColorCreator
 13288  0A99  0141               	movlb	1	; select bank1
 13289  0A9A  084C               	movf	(?_beatColorCreator+3)^(0+128),w
 13290  0A9B  00D5               	movwf	(LED_setColor@input+3)^(0+128)
 13291  0A9C  084B               	movf	(?_beatColorCreator+2)^(0+128),w
 13292  0A9D  00D4               	movwf	(LED_setColor@input+2)^(0+128)
 13293  0A9E  084A               	movf	(?_beatColorCreator+1)^(0+128),w
 13294  0A9F  00D3               	movwf	(LED_setColor@input+1)^(0+128)
 13295  0AA0  0849               	movf	?_beatColorCreator^(0+128),w
 13296  0AA1  00D2               	movwf	LED_setColor@input^(0+128)
 13297  0AA2  3185  25E3         	fcall	_LED_setColor
 13298  0AA4  0008               	return
 13299  0AA5                     l8679:	
 13300  0AA5  319E  2655         	fcall	_LED_task_BEAT_FADE
 13301  0AA7  0008               	return
 13302  0AA8                     l8681:	
 13303                           
 13304                           ;led.c: 74:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13305  0AA8  3180  2002  318A   	fcall	_getIsHold
 13306  0AAB  3A00               	xorlw	0
 13307  0AAC  1903               	skipnz
 13308  0AAD  2AC2               	goto	l8685
 13309  0AAE  0141               	movlb	1	; select bank1
 13310  0AAF  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 13311  0AB0  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 13312  0AB1  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 13313  0AB2  3000               	movlw	0
 13314  0AB3  3196  2683  318A   	fcall	_beatColorCreator
 13315  0AB6  0141               	movlb	1	; select bank1
 13316  0AB7  084C               	movf	(?_beatColorCreator+3)^(0+128),w
 13317  0AB8  00D5               	movwf	(LED_setColor@input+3)^(0+128)
 13318  0AB9  084B               	movf	(?_beatColorCreator+2)^(0+128),w
 13319  0ABA  00D4               	movwf	(LED_setColor@input+2)^(0+128)
 13320  0ABB  084A               	movf	(?_beatColorCreator+1)^(0+128),w
 13321  0ABC  00D3               	movwf	(LED_setColor@input+1)^(0+128)
 13322  0ABD  0849               	movf	?_beatColorCreator^(0+128),w
 13323  0ABE  00D2               	movwf	LED_setColor@input^(0+128)
 13324  0ABF  3185  25E3         	fcall	_LED_setColor
 13325  0AC1  0008               	return
 13326  0AC2                     l8685:	
 13327  0AC2  319E  2654         	fcall	_LED_task_BEAT_CONTINUOUS
 13328  0AC4  0008               	return
 13329  0AC5                     l8687:	
 13330                           
 13331                           ;led.c: 79:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13332  0AC5  3180  2002  318A   	fcall	_getIsHold
 13333  0AC8  3A00               	xorlw	0
 13334  0AC9  1903               	skipnz
 13335  0ACA  2ADF               	goto	l8691
 13336  0ACB  0141               	movlb	1	; select bank1
 13337  0ACC  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 13338  0ACD  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 13339  0ACE  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 13340  0ACF  3000               	movlw	0
 13341  0AD0  3196  2683  318A   	fcall	_beatColorCreator
 13342  0AD3  0141               	movlb	1	; select bank1
 13343  0AD4  084C               	movf	(?_beatColorCreator+3)^(0+128),w
 13344  0AD5  00D5               	movwf	(LED_setColor@input+3)^(0+128)
 13345  0AD6  084B               	movf	(?_beatColorCreator+2)^(0+128),w
 13346  0AD7  00D4               	movwf	(LED_setColor@input+2)^(0+128)
 13347  0AD8  084A               	movf	(?_beatColorCreator+1)^(0+128),w
 13348  0AD9  00D3               	movwf	(LED_setColor@input+1)^(0+128)
 13349  0ADA  0849               	movf	?_beatColorCreator^(0+128),w
 13350  0ADB  00D2               	movwf	LED_setColor@input^(0+128)
 13351  0ADC  3185  25E3         	fcall	_LED_setColor
 13352  0ADE  0008               	return
 13353  0ADF                     l8691:	
 13354  0ADF  3190  2000         	fcall	_LED_task_BEAT_MIXED
 13355  0AE1  0008               	return
 13356  0AE2                     l8693:	
 13357                           
 13358                           ;led.c: 84:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13359  0AE2  3180  2002  318A   	fcall	_getIsHold
 13360  0AE5  3A00               	xorlw	0
 13361  0AE6  1903               	skipnz
 13362  0AE7  2AFC               	goto	l8697
 13363  0AE8  0141               	movlb	1	; select bank1
 13364  0AE9  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 13365  0AEA  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 13366  0AEB  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 13367  0AEC  3000               	movlw	0
 13368  0AED  3196  2683  318A   	fcall	_beatColorCreator
 13369  0AF0  0141               	movlb	1	; select bank1
 13370  0AF1  084C               	movf	(?_beatColorCreator+3)^(0+128),w
 13371  0AF2  00D5               	movwf	(LED_setColor@input+3)^(0+128)
 13372  0AF3  084B               	movf	(?_beatColorCreator+2)^(0+128),w
 13373  0AF4  00D4               	movwf	(LED_setColor@input+2)^(0+128)
 13374  0AF5  084A               	movf	(?_beatColorCreator+1)^(0+128),w
 13375  0AF6  00D3               	movwf	(LED_setColor@input+1)^(0+128)
 13376  0AF7  0849               	movf	?_beatColorCreator^(0+128),w
 13377  0AF8  00D2               	movwf	LED_setColor@input^(0+128)
 13378  0AF9  3185  25E3         	fcall	_LED_setColor
 13379  0AFB  0008               	return
 13380  0AFC                     l8697:	
 13381  0AFC  319E  2653         	fcall	_LED_task_ANIMATION
 13382  0AFE  0008               	return
 13383  0AFF                     l8699:	
 13384                           
 13385                           ;led.c: 89:             LED_task_MANUAL();
 13386  0AFF  319F  2717         	fcall	_LED_task_MANUAL
 13387                           
 13388                           ;led.c: 90:             break;
 13389  0B01  0008               	return
 13390  0B02                     l8703:	
 13391  0B02  319E  265F  318A   	fcall	_getMode
 13392  0B05  0141               	movlb	1	; select bank1
 13393  0B06  00E3               	movwf	??_LED_task^(0+128)
 13394  0B07  01E4               	clrf	(??_LED_task^(0+128)+1)
 13395                           
 13396                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13397                           ; Switch size 1, requested type "simple"
 13398                           ; Number of cases is 1, Range of values is 0 to 0
 13399                           ; switch strategies available:
 13400                           ; Name         Instructions Cycles
 13401                           ; simple_byte            4     3 (average)
 13402                           ; direct_byte            8     6 (fixed)
 13403                           ; jumptable            260     6 (fixed)
 13404                           ;	Chosen strategy is simple_byte
 13405  0B08  0864               	movf	(??_LED_task+1)^(0+128),w
 13406  0B09  3A00               	xorlw	0	; case 0
 13407  0B0A  1903               	skipnz
 13408  0B0B  2B0D               	goto	l9051
 13409  0B0C  2B24               	goto	l1403
 13410  0B0D                     l9051:	
 13411                           
 13412                           ; Switch size 1, requested type "simple"
 13413                           ; Number of cases is 7, Range of values is 0 to 6
 13414                           ; switch strategies available:
 13415                           ; Name         Instructions Cycles
 13416                           ; direct_byte           20     6 (fixed)
 13417                           ; simple_byte           22    12 (average)
 13418                           ; jumptable            260     6 (fixed)
 13419                           ;	Chosen strategy is simple_byte
 13420  0B0D  0863               	movf	??_LED_task^(0+128),w
 13421  0B0E  3A00               	xorlw	0	; case 0
 13422  0B0F  1903               	skipnz
 13423  0B10  2A6B               	goto	l8667
 13424  0B11  3A01               	xorlw	1	; case 1
 13425  0B12  1903               	skipnz
 13426  0B13  2A6E               	goto	l8669
 13427  0B14  3A03               	xorlw	3	; case 2
 13428  0B15  1903               	skipnz
 13429  0B16  2AE2               	goto	l8693
 13430  0B17  3A01               	xorlw	1	; case 3
 13431  0B18  1903               	skipnz
 13432  0B19  2AFF               	goto	l8699
 13433  0B1A  3A07               	xorlw	7	; case 4
 13434  0B1B  1903               	skipnz
 13435  0B1C  2A8B               	goto	l8675
 13436  0B1D  3A01               	xorlw	1	; case 5
 13437  0B1E  1903               	skipnz
 13438  0B1F  2AA8               	goto	l8681
 13439  0B20  3A03               	xorlw	3	; case 6
 13440  0B21  1903               	skipnz
 13441  0B22  2AC5               	goto	l8687
 13442  0B23  2B24               	goto	l1403
 13443  0B24                     l1403:	
 13444  0B24  0008               	return
 13445  0B25                     __end_of_LED_task:	
 13446                           
 13447                           	psect	text20
 13448  1E5F                     __ptext20:	
 13449 ;; *************** function _getMode *****************
 13450 ;; Defined at:
 13451 ;;		line 448 in file "controller.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;		None
 13454 ;; Auto vars:     Size  Location     Type
 13455 ;;		None
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  1    wreg      enum E11209
 13458 ;; Registers used:
 13459 ;;		wreg
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13469 ;;Total ram usage:        0 bytes
 13470 ;; Hardware stack levels used:    1
 13471 ;; Hardware stack levels required when called:    4
 13472 ;; This function calls:
 13473 ;;		Nothing
 13474 ;; This function is called by:
 13475 ;;		_LED_task
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           
 13480                           ;psect for function _getMode
 13481  1E5F                     _getMode:	
 13482                           
 13483                           ;controller.c: 449:     return currentSelection;
 13484                           
 13485                           ;incstack = 0
 13486                           ; Regs used in _getMode: [wreg]
 13487  1E5F  0141               	movlb	1	; select bank1
 13488  1E60  0838               	movf	_currentSelection^(0+128),w
 13489  1E61  0008               	return
 13490  1E62                     __end_of_getMode:	
 13491                           
 13492                           	psect	text21
 13493  0002                     __ptext21:	
 13494 ;; *************** function _getIsHold *****************
 13495 ;; Defined at:
 13496 ;;		line 542 in file "controller.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;		None
 13499 ;; Auto vars:     Size  Location     Type
 13500 ;;		None
 13501 ;; Return value:  Size  Location     Type
 13502 ;;                  1    wreg      _Bool 
 13503 ;; Registers used:
 13504 ;;		wreg
 13505 ;; Tracked objects:
 13506 ;;		On entry : 0/0
 13507 ;;		On exit  : 0/0
 13508 ;;		Unchanged: 0/0
 13509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13514 ;;Total ram usage:        0 bytes
 13515 ;; Hardware stack levels used:    1
 13516 ;; Hardware stack levels required when called:    4
 13517 ;; This function calls:
 13518 ;;		Nothing
 13519 ;; This function is called by:
 13520 ;;		_LED_task
 13521 ;; This function uses a non-reentrant model
 13522 ;;
 13523                           
 13524                           
 13525                           ;psect for function _getIsHold
 13526  0002                     _getIsHold:	
 13527                           
 13528                           ;controller.c: 543:     return 0;
 13529                           
 13530                           ;incstack = 0
 13531                           ; Regs used in _getIsHold: [wreg]
 13532  0002  3000               	movlw	0
 13533  0003  0008               	return
 13534  0004                     __end_of_getIsHold:	
 13535                           
 13536                           	psect	text22
 13537  1620                     __ptext22:	
 13538 ;; *************** function _LED_task_DMX *****************
 13539 ;; Defined at:
 13540 ;;		line 35 in file "led.c"
 13541 ;; Parameters:    Size  Location     Type
 13542 ;;		None
 13543 ;; Auto vars:     Size  Location     Type
 13544 ;;  dmx             4   22[BANK1 ] struct .
 13545 ;; Return value:  Size  Location     Type
 13546 ;;                  1    wreg      void 
 13547 ;; Registers used:
 13548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13549 ;; Tracked objects:
 13550 ;;		On entry : 0/0
 13551 ;;		On exit  : 0/0
 13552 ;;		Unchanged: 0/0
 13553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13555 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13556 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13557 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13558 ;;Total ram usage:        9 bytes
 13559 ;; Hardware stack levels used:    1
 13560 ;; Hardware stack levels required when called:    7
 13561 ;; This function calls:
 13562 ;;		_DMX_getAddress
 13563 ;;		_LED_setColor
 13564 ;; This function is called by:
 13565 ;;		_LED_task
 13566 ;; This function uses a non-reentrant model
 13567 ;;
 13568                           
 13569                           
 13570                           ;psect for function _LED_task_DMX
 13571  1620                     _LED_task_DMX:	
 13572                           
 13573                           ;led.c: 37:     color_t dmx;;led.c: 39:     dmx.red = dmxArray[DMX_getAddress()];
 13574                           
 13575                           ;incstack = 0
 13576                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13577  1620  319E  265C  3196   	fcall	_DMX_getAddress
 13578  1623  0141               	movlb	1	; select bank1
 13579  1624  00DA               	movwf	??_LED_task_DMX^(0+128)
 13580  1625  01DB               	clrf	(??_LED_task_DMX^(0+128)+1)
 13581  1626  35DA               	lslf	??_LED_task_DMX^(0+128),f
 13582  1627  0DDB               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13583  1628  30EE               	movlw	238
 13584  1629  00DC               	movwf	(??_LED_task_DMX+2)^(0+128)
 13585  162A  3023               	movlw	35
 13586  162B  00DD               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13587  162C  085A               	movf	??_LED_task_DMX^(0+128),w
 13588  162D  075C               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13589  162E  0086               	movwf	6
 13590  162F  085B               	movf	(??_LED_task_DMX+1)^(0+128),w
 13591  1630  3D5D               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13592  1631  0087               	movwf	7
 13593  1632  0801               	movf	1,w
 13594  1633  00DE               	movwf	(??_LED_task_DMX+4)^(0+128)
 13595  1634  085E               	movf	(??_LED_task_DMX+4)^(0+128),w
 13596  1635  00E0               	movwf	(LED_task_DMX@dmx^(0+128)+1)
 13597                           
 13598                           ;led.c: 40:     dmx.green = dmxArray[DMX_getAddress() + 1];
 13599  1636  319E  265C  3196   	fcall	_DMX_getAddress
 13600  1639  0141               	movlb	1	; select bank1
 13601  163A  00DA               	movwf	??_LED_task_DMX^(0+128)
 13602  163B  01DB               	clrf	(??_LED_task_DMX^(0+128)+1)
 13603  163C  35DA               	lslf	??_LED_task_DMX^(0+128),f
 13604  163D  0DDB               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13605  163E  30F0               	movlw	240
 13606  163F  00DC               	movwf	(??_LED_task_DMX+2)^(0+128)
 13607  1640  3023               	movlw	35
 13608  1641  00DD               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13609  1642  085A               	movf	??_LED_task_DMX^(0+128),w
 13610  1643  075C               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13611  1644  0086               	movwf	6
 13612  1645  085B               	movf	(??_LED_task_DMX+1)^(0+128),w
 13613  1646  3D5D               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13614  1647  0087               	movwf	7
 13615  1648  0801               	movf	1,w
 13616  1649  00DE               	movwf	(??_LED_task_DMX+4)^(0+128)
 13617  164A  085E               	movf	(??_LED_task_DMX+4)^(0+128),w
 13618  164B  00E1               	movwf	(LED_task_DMX@dmx^(0+128)+2)
 13619                           
 13620                           ;led.c: 41:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 13621  164C  319E  265C  3196   	fcall	_DMX_getAddress
 13622  164F  0141               	movlb	1	; select bank1
 13623  1650  00DA               	movwf	??_LED_task_DMX^(0+128)
 13624  1651  01DB               	clrf	(??_LED_task_DMX^(0+128)+1)
 13625  1652  35DA               	lslf	??_LED_task_DMX^(0+128),f
 13626  1653  0DDB               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13627  1654  30F2               	movlw	242
 13628  1655  00DC               	movwf	(??_LED_task_DMX+2)^(0+128)
 13629  1656  3023               	movlw	35
 13630  1657  00DD               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13631  1658  085A               	movf	??_LED_task_DMX^(0+128),w
 13632  1659  075C               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13633  165A  0086               	movwf	6
 13634  165B  085B               	movf	(??_LED_task_DMX+1)^(0+128),w
 13635  165C  3D5D               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13636  165D  0087               	movwf	7
 13637  165E  0801               	movf	1,w
 13638  165F  00DE               	movwf	(??_LED_task_DMX+4)^(0+128)
 13639  1660  085E               	movf	(??_LED_task_DMX+4)^(0+128),w
 13640  1661  00E2               	movwf	(LED_task_DMX@dmx^(0+128)+3)
 13641                           
 13642                           ;led.c: 42:     dmx.white = dmxArray[DMX_getAddress() + 3];
 13643  1662  319E  265C  3196   	fcall	_DMX_getAddress
 13644  1665  0141               	movlb	1	; select bank1
 13645  1666  00DA               	movwf	??_LED_task_DMX^(0+128)
 13646  1667  01DB               	clrf	(??_LED_task_DMX^(0+128)+1)
 13647  1668  35DA               	lslf	??_LED_task_DMX^(0+128),f
 13648  1669  0DDB               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13649  166A  30F4               	movlw	244
 13650  166B  00DC               	movwf	(??_LED_task_DMX+2)^(0+128)
 13651  166C  3023               	movlw	35
 13652  166D  00DD               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13653  166E  085A               	movf	??_LED_task_DMX^(0+128),w
 13654  166F  075C               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13655  1670  0086               	movwf	6
 13656  1671  085B               	movf	(??_LED_task_DMX+1)^(0+128),w
 13657  1672  3D5D               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13658  1673  0087               	movwf	7
 13659  1674  0801               	movf	1,w
 13660  1675  00DE               	movwf	(??_LED_task_DMX+4)^(0+128)
 13661  1676  085E               	movf	(??_LED_task_DMX+4)^(0+128),w
 13662  1677  00DF               	movwf	LED_task_DMX@dmx^(0+128)
 13663                           
 13664                           ;led.c: 44:     LED_setColor(dmx);
 13665  1678  0862               	movf	(LED_task_DMX@dmx+3)^(0+128),w
 13666  1679  00D5               	movwf	(LED_setColor@input+3)^(0+128)
 13667  167A  0861               	movf	(LED_task_DMX@dmx+2)^(0+128),w
 13668  167B  00D4               	movwf	(LED_setColor@input+2)^(0+128)
 13669  167C  0860               	movf	(LED_task_DMX@dmx+1)^(0+128),w
 13670  167D  00D3               	movwf	(LED_setColor@input+1)^(0+128)
 13671  167E  085F               	movf	LED_task_DMX@dmx^(0+128),w
 13672  167F  00D2               	movwf	LED_setColor@input^(0+128)
 13673  1680  3185  25E3         	fcall	_LED_setColor
 13674  1682  0008               	return
 13675  1683                     __end_of_LED_task_DMX:	
 13676                           
 13677                           	psect	text23
 13678  1000                     __ptext23:	
 13679 ;; *************** function _LED_task_BEAT_MIXED *****************
 13680 ;; Defined at:
 13681 ;;		line 218 in file "led.c"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;		None
 13684 ;; Auto vars:     Size  Location     Type
 13685 ;;		None
 13686 ;; Return value:  Size  Location     Type
 13687 ;;                  1    wreg      void 
 13688 ;; Registers used:
 13689 ;;		None
 13690 ;; Tracked objects:
 13691 ;;		On entry : 0/0
 13692 ;;		On exit  : 0/0
 13693 ;;		Unchanged: 0/0
 13694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13699 ;;Total ram usage:        0 bytes
 13700 ;; Hardware stack levels used:    1
 13701 ;; Hardware stack levels required when called:    4
 13702 ;; This function calls:
 13703 ;;		Nothing
 13704 ;; This function is called by:
 13705 ;;		_LED_task
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           
 13710                           ;psect for function _LED_task_BEAT_MIXED
 13711  1000                     _LED_task_BEAT_MIXED:	
 13712                           
 13713                           ;incstack = 0
 13714                           ; Regs used in _LED_task_BEAT_MIXED: []
 13715  1000  0008               	return
 13716  1001                     __end_of_LED_task_BEAT_MIXED:	
 13717                           
 13718                           	psect	text24
 13719  1E55                     __ptext24:	
 13720 ;; *************** function _LED_task_BEAT_FADE *****************
 13721 ;; Defined at:
 13722 ;;		line 206 in file "led.c"
 13723 ;; Parameters:    Size  Location     Type
 13724 ;;		None
 13725 ;; Auto vars:     Size  Location     Type
 13726 ;;		None
 13727 ;; Return value:  Size  Location     Type
 13728 ;;                  1    wreg      void 
 13729 ;; Registers used:
 13730 ;;		None
 13731 ;; Tracked objects:
 13732 ;;		On entry : 0/0
 13733 ;;		On exit  : 0/0
 13734 ;;		Unchanged: 0/0
 13735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13740 ;;Total ram usage:        0 bytes
 13741 ;; Hardware stack levels used:    1
 13742 ;; Hardware stack levels required when called:    4
 13743 ;; This function calls:
 13744 ;;		Nothing
 13745 ;; This function is called by:
 13746 ;;		_LED_task
 13747 ;; This function uses a non-reentrant model
 13748 ;;
 13749                           
 13750                           
 13751                           ;psect for function _LED_task_BEAT_FADE
 13752  1E55                     _LED_task_BEAT_FADE:	
 13753                           
 13754                           ;incstack = 0
 13755                           ; Regs used in _LED_task_BEAT_FADE: []
 13756  1E55  0008               	return
 13757  1E56                     __end_of_LED_task_BEAT_FADE:	
 13758                           
 13759                           	psect	text25
 13760  1E54                     __ptext25:	
 13761 ;; *************** function _LED_task_BEAT_CONTINUOUS *****************
 13762 ;; Defined at:
 13763 ;;		line 214 in file "led.c"
 13764 ;; Parameters:    Size  Location     Type
 13765 ;;		None
 13766 ;; Auto vars:     Size  Location     Type
 13767 ;;		None
 13768 ;; Return value:  Size  Location     Type
 13769 ;;                  1    wreg      void 
 13770 ;; Registers used:
 13771 ;;		None
 13772 ;; Tracked objects:
 13773 ;;		On entry : 0/0
 13774 ;;		On exit  : 0/0
 13775 ;;		Unchanged: 0/0
 13776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13781 ;;Total ram usage:        0 bytes
 13782 ;; Hardware stack levels used:    1
 13783 ;; Hardware stack levels required when called:    4
 13784 ;; This function calls:
 13785 ;;		Nothing
 13786 ;; This function is called by:
 13787 ;;		_LED_task
 13788 ;; This function uses a non-reentrant model
 13789 ;;
 13790                           
 13791                           
 13792                           ;psect for function _LED_task_BEAT_CONTINUOUS
 13793  1E54                     _LED_task_BEAT_CONTINUOUS:	
 13794                           
 13795                           ;incstack = 0
 13796                           ; Regs used in _LED_task_BEAT_CONTINUOUS: []
 13797  1E54  0008               	return
 13798  1E55                     __end_of_LED_task_BEAT_CONTINUOUS:	
 13799                           
 13800                           	psect	text26
 13801  1E78                     __ptext26:	
 13802 ;; *************** function _LED_init *****************
 13803 ;; Defined at:
 13804 ;;		line 48 in file "led.c"
 13805 ;; Parameters:    Size  Location     Type
 13806 ;;		None
 13807 ;; Auto vars:     Size  Location     Type
 13808 ;;		None
 13809 ;; Return value:  Size  Location     Type
 13810 ;;                  1    wreg      void 
 13811 ;; Registers used:
 13812 ;;		status,2
 13813 ;; Tracked objects:
 13814 ;;		On entry : 0/0
 13815 ;;		On exit  : 0/0
 13816 ;;		Unchanged: 0/0
 13817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13822 ;;Total ram usage:        0 bytes
 13823 ;; Hardware stack levels used:    1
 13824 ;; Hardware stack levels required when called:    4
 13825 ;; This function calls:
 13826 ;;		Nothing
 13827 ;; This function is called by:
 13828 ;;		_main
 13829 ;; This function uses a non-reentrant model
 13830 ;;
 13831                           
 13832                           
 13833                           ;psect for function _LED_init
 13834  1E78                     _LED_init:	
 13835                           
 13836                           ;led.c: 49:     manualColor.red = 0;
 13837                           
 13838                           ;incstack = 0
 13839                           ; Regs used in _LED_init: [status,2]
 13840  1E78  0141               	movlb	1	; select bank1
 13841  1E79  01A6               	clrf	(_manualColor^(0+128)+1)
 13842                           
 13843                           ;led.c: 50:     manualColor.green = 0;
 13844  1E7A  01A7               	clrf	(_manualColor^(0+128)+2)
 13845                           
 13846                           ;led.c: 51:     manualColor.blue = 0;
 13847  1E7B  01A8               	clrf	(_manualColor^(0+128)+3)
 13848                           
 13849                           ;led.c: 52:     manualColor.white = 0;
 13850  1E7C  01A5               	clrf	_manualColor^(0+128)
 13851                           
 13852                           ;led.c: 53:     TRISCbits.TRISC5 = 0;
 13853  1E7D  0140               	movlb	0	; select bank0
 13854  1E7E  1294               	bcf	20,5	;volatile
 13855  1E7F  0008               	return
 13856  1E80                     __end_of_LED_init:	
 13857                           
 13858                           	psect	text27
 13859  1FC5                     __ptext27:	
 13860 ;; *************** function _DMX_init *****************
 13861 ;; Defined at:
 13862 ;;		line 21 in file "dmx.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;		None
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;		None
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  1    wreg      void 
 13869 ;; Registers used:
 13870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13880 ;;Total ram usage:        0 bytes
 13881 ;; Hardware stack levels used:    1
 13882 ;; Hardware stack levels required when called:    9
 13883 ;; This function calls:
 13884 ;;		_EUSART1_SetRxInterruptHandler
 13885 ;;		_TM1650_fastPrintNum
 13886 ;; This function is called by:
 13887 ;;		_main
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           
 13891                           
 13892                           ;psect for function _DMX_init
 13893  1FC5                     _DMX_init:	
 13894                           
 13895                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 13896                           
 13897                           ;incstack = 0
 13898                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13899  1FC5  301A               	movlw	low _DMX_interrupt
 13900  1FC6  0140               	movlb	0	; select bank0
 13901  1FC7  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13902  1FC8  3013               	movlw	high _DMX_interrupt
 13903  1FC9  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13904  1FCA  319E  26B6  319F   	fcall	_EUSART1_SetRxInterruptHandler
 13905                           
 13906                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 13907  1FCD  0141               	movlb	1	; select bank1
 13908  1FCE  086C               	movf	(_address+1)^(0+128),w
 13909  1FCF  0140               	movlb	0	; select bank0
 13910  1FD0  00B7               	movwf	TM1650_fastPrintNum@num+1
 13911  1FD1  0141               	movlb	1	; select bank1
 13912  1FD2  086B               	movf	_address^(0+128),w
 13913  1FD3  0140               	movlb	0	; select bank0
 13914  1FD4  00B6               	movwf	TM1650_fastPrintNum@num
 13915  1FD5  3187  273A         	fcall	_TM1650_fastPrintNum
 13916  1FD7  0008               	return
 13917  1FD8                     __end_of_DMX_init:	
 13918                           
 13919                           	psect	text28
 13920  073A                     __ptext28:	
 13921 ;; *************** function _TM1650_fastPrintNum *****************
 13922 ;; Defined at:
 13923 ;;		line 101 in file "tm1650.c"
 13924 ;; Parameters:    Size  Location     Type
 13925 ;;  num             2   22[BANK0 ] unsigned short 
 13926 ;; Auto vars:     Size  Location     Type
 13927 ;;		None
 13928 ;; Return value:  Size  Location     Type
 13929 ;;                  1    wreg      void 
 13930 ;; Registers used:
 13931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13932 ;; Tracked objects:
 13933 ;;		On entry : 0/0
 13934 ;;		On exit  : 0/0
 13935 ;;		Unchanged: 0/0
 13936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13937 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13939 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13940 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13941 ;;Total ram usage:        3 bytes
 13942 ;; Hardware stack levels used:    1
 13943 ;; Hardware stack levels required when called:    8
 13944 ;; This function calls:
 13945 ;;		___lwdiv
 13946 ;;		___lwmod
 13947 ;;		_writeData
 13948 ;; This function is called by:
 13949 ;;		_DMX_init
 13950 ;; This function uses a non-reentrant model
 13951 ;;
 13952                           
 13953                           
 13954                           ;psect for function _TM1650_fastPrintNum
 13955  073A                     _TM1650_fastPrintNum:	
 13956                           
 13957                           ;tm1650.c: 103:     if(num > 9999){
 13958                           
 13959                           ;incstack = 0
 13960                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13961  073A  3027               	movlw	39
 13962  073B  0140               	movlb	0	; select bank0
 13963  073C  0237               	subwf	TM1650_fastPrintNum@num+1,w
 13964  073D  3010               	movlw	16
 13965  073E  1903               	skipnz
 13966  073F  0236               	subwf	TM1650_fastPrintNum@num,w
 13967  0740  1C03               	skipc
 13968  0741  2F65               	goto	l8005
 13969                           
 13970                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 13971  0742  3079               	movlw	121
 13972  0743  00B8               	movwf	??_TM1650_fastPrintNum
 13973  0744  0838               	movf	??_TM1650_fastPrintNum,w
 13974  0745  00B0               	movwf	writeData@data
 13975  0746  3034               	movlw	52
 13976  0747  3190  20D8  3187   	fcall	_writeData
 13977                           
 13978                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 13979  074A  3079               	movlw	121
 13980  074B  0140               	movlb	0	; select bank0
 13981  074C  00B8               	movwf	??_TM1650_fastPrintNum
 13982  074D  0838               	movf	??_TM1650_fastPrintNum,w
 13983  074E  00B0               	movwf	writeData@data
 13984  074F  3035               	movlw	53
 13985  0750  3190  20D8  3187   	fcall	_writeData
 13986                           
 13987                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 13988  0753  3079               	movlw	121
 13989  0754  0140               	movlb	0	; select bank0
 13990  0755  00B8               	movwf	??_TM1650_fastPrintNum
 13991  0756  0838               	movf	??_TM1650_fastPrintNum,w
 13992  0757  00B0               	movwf	writeData@data
 13993  0758  3036               	movlw	54
 13994  0759  3190  20D8  3187   	fcall	_writeData
 13995                           
 13996                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 13997  075C  3079               	movlw	121
 13998  075D  0140               	movlb	0	; select bank0
 13999  075E  00B8               	movwf	??_TM1650_fastPrintNum
 14000  075F  0838               	movf	??_TM1650_fastPrintNum,w
 14001  0760  00B0               	movwf	writeData@data
 14002  0761  3037               	movlw	55
 14003  0762  3190  20D8         	fcall	_writeData
 14004  0764  0008               	return
 14005  0765                     l8005:	
 14006                           
 14007                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 14008  0765  300A               	movlw	10
 14009  0766  00A8               	movwf	___lwmod@divisor
 14010  0767  3000               	movlw	0
 14011  0768  00A9               	movwf	___lwmod@divisor+1
 14012  0769  0837               	movf	TM1650_fastPrintNum@num+1,w
 14013  076A  00AB               	movwf	___lwmod@dividend+1
 14014  076B  0836               	movf	TM1650_fastPrintNum@num,w
 14015  076C  00AA               	movwf	___lwmod@dividend
 14016  076D  3192  228E  3187   	fcall	___lwmod
 14017  0770  0140               	movlb	0	; select bank0
 14018  0771  0829               	movf	?___lwmod+1,w
 14019  0772  0085               	movwf	5
 14020  0773  0828               	movf	?___lwmod,w
 14021  0774  0084               	movwf	4
 14022  0775  3010               	movlw	low ((_charTable+16)| (0+32768))
 14023  0776  0784               	addwf	4,f
 14024  0777  3098               	movlw	high ((_charTable+16)| (0+32768))
 14025  0778  3D85               	addwfc	5,f
 14026  0779  0800               	movf	0,w	;code access
 14027  077A  00B8               	movwf	??_TM1650_fastPrintNum
 14028  077B  0838               	movf	??_TM1650_fastPrintNum,w
 14029  077C  00B0               	movwf	writeData@data
 14030  077D  3037               	movlw	55
 14031  077E  3190  20D8  3187   	fcall	_writeData
 14032                           
 14033                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 14034  0781  300A               	movlw	10
 14035  0782  0140               	movlb	0	; select bank0
 14036  0783  00A8               	movwf	___lwmod@divisor
 14037  0784  3000               	movlw	0
 14038  0785  00A9               	movwf	___lwmod@divisor+1
 14039  0786  300A               	movlw	10
 14040  0787  00A0               	movwf	___lwdiv@divisor
 14041  0788  3000               	movlw	0
 14042  0789  00A1               	movwf	___lwdiv@divisor+1
 14043  078A  0837               	movf	TM1650_fastPrintNum@num+1,w
 14044  078B  00A3               	movwf	___lwdiv@dividend+1
 14045  078C  0836               	movf	TM1650_fastPrintNum@num,w
 14046  078D  00A2               	movwf	___lwdiv@dividend
 14047  078E  3193  23B1  3187   	fcall	___lwdiv
 14048  0791  0140               	movlb	0	; select bank0
 14049  0792  0821               	movf	?___lwdiv+1,w
 14050  0793  00AB               	movwf	___lwmod@dividend+1
 14051  0794  0820               	movf	?___lwdiv,w
 14052  0795  00AA               	movwf	___lwmod@dividend
 14053  0796  3192  228E  3187   	fcall	___lwmod
 14054  0799  0140               	movlb	0	; select bank0
 14055  079A  0829               	movf	?___lwmod+1,w
 14056  079B  0085               	movwf	5
 14057  079C  0828               	movf	?___lwmod,w
 14058  079D  0084               	movwf	4
 14059  079E  3010               	movlw	low ((_charTable+16)| (0+32768))
 14060  079F  0784               	addwf	4,f
 14061  07A0  3098               	movlw	high ((_charTable+16)| (0+32768))
 14062  07A1  3D85               	addwfc	5,f
 14063  07A2  0800               	movf	0,w	;code access
 14064  07A3  00B8               	movwf	??_TM1650_fastPrintNum
 14065  07A4  0838               	movf	??_TM1650_fastPrintNum,w
 14066  07A5  00B0               	movwf	writeData@data
 14067  07A6  3036               	movlw	54
 14068  07A7  3190  20D8  3187   	fcall	_writeData
 14069                           
 14070                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 14071  07AA  300A               	movlw	10
 14072  07AB  0140               	movlb	0	; select bank0
 14073  07AC  00A8               	movwf	___lwmod@divisor
 14074  07AD  3000               	movlw	0
 14075  07AE  00A9               	movwf	___lwmod@divisor+1
 14076  07AF  3064               	movlw	100
 14077  07B0  00A0               	movwf	___lwdiv@divisor
 14078  07B1  3000               	movlw	0
 14079  07B2  00A1               	movwf	___lwdiv@divisor+1
 14080  07B3  0837               	movf	TM1650_fastPrintNum@num+1,w
 14081  07B4  00A3               	movwf	___lwdiv@dividend+1
 14082  07B5  0836               	movf	TM1650_fastPrintNum@num,w
 14083  07B6  00A2               	movwf	___lwdiv@dividend
 14084  07B7  3193  23B1  3187   	fcall	___lwdiv
 14085  07BA  0140               	movlb	0	; select bank0
 14086  07BB  0821               	movf	?___lwdiv+1,w
 14087  07BC  00AB               	movwf	___lwmod@dividend+1
 14088  07BD  0820               	movf	?___lwdiv,w
 14089  07BE  00AA               	movwf	___lwmod@dividend
 14090  07BF  3192  228E  3187   	fcall	___lwmod
 14091  07C2  0140               	movlb	0	; select bank0
 14092  07C3  0829               	movf	?___lwmod+1,w
 14093  07C4  0085               	movwf	5
 14094  07C5  0828               	movf	?___lwmod,w
 14095  07C6  0084               	movwf	4
 14096  07C7  3010               	movlw	low ((_charTable+16)| (0+32768))
 14097  07C8  0784               	addwf	4,f
 14098  07C9  3098               	movlw	high ((_charTable+16)| (0+32768))
 14099  07CA  3D85               	addwfc	5,f
 14100  07CB  0800               	movf	0,w	;code access
 14101  07CC  00B8               	movwf	??_TM1650_fastPrintNum
 14102  07CD  0838               	movf	??_TM1650_fastPrintNum,w
 14103  07CE  00B0               	movwf	writeData@data
 14104  07CF  3035               	movlw	53
 14105  07D0  3190  20D8  3187   	fcall	_writeData
 14106                           
 14107                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 14108  07D3  300A               	movlw	10
 14109  07D4  0140               	movlb	0	; select bank0
 14110  07D5  00A8               	movwf	___lwmod@divisor
 14111  07D6  3000               	movlw	0
 14112  07D7  00A9               	movwf	___lwmod@divisor+1
 14113  07D8  30E8               	movlw	232
 14114  07D9  00A0               	movwf	___lwdiv@divisor
 14115  07DA  3003               	movlw	3
 14116  07DB  00A1               	movwf	___lwdiv@divisor+1
 14117  07DC  0837               	movf	TM1650_fastPrintNum@num+1,w
 14118  07DD  00A3               	movwf	___lwdiv@dividend+1
 14119  07DE  0836               	movf	TM1650_fastPrintNum@num,w
 14120  07DF  00A2               	movwf	___lwdiv@dividend
 14121  07E0  3193  23B1  3187   	fcall	___lwdiv
 14122  07E3  0140               	movlb	0	; select bank0
 14123  07E4  0821               	movf	?___lwdiv+1,w
 14124  07E5  00AB               	movwf	___lwmod@dividend+1
 14125  07E6  0820               	movf	?___lwdiv,w
 14126  07E7  00AA               	movwf	___lwmod@dividend
 14127  07E8  3192  228E  3187   	fcall	___lwmod
 14128  07EB  0140               	movlb	0	; select bank0
 14129  07EC  0829               	movf	?___lwmod+1,w
 14130  07ED  0085               	movwf	5
 14131  07EE  0828               	movf	?___lwmod,w
 14132  07EF  0084               	movwf	4
 14133  07F0  3010               	movlw	low ((_charTable+16)| (0+32768))
 14134  07F1  0784               	addwf	4,f
 14135  07F2  3098               	movlw	high ((_charTable+16)| (0+32768))
 14136  07F3  3D85               	addwfc	5,f
 14137  07F4  0800               	movf	0,w	;code access
 14138  07F5  00B8               	movwf	??_TM1650_fastPrintNum
 14139  07F6  0838               	movf	??_TM1650_fastPrintNum,w
 14140  07F7  00B0               	movwf	writeData@data
 14141  07F8  3034               	movlw	52
 14142  07F9  3190  20D8         	fcall	_writeData
 14143  07FB  0008               	return
 14144  07FC                     __end_of_TM1650_fastPrintNum:	
 14145                           
 14146                           	psect	text29
 14147  1EB6                     __ptext29:	
 14148 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 14149 ;; Defined at:
 14150 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 14153 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 14154 ;; Auto vars:     Size  Location     Type
 14155 ;;		None
 14156 ;; Return value:  Size  Location     Type
 14157 ;;                  1    wreg      void 
 14158 ;; Registers used:
 14159 ;;		wreg
 14160 ;; Tracked objects:
 14161 ;;		On entry : 0/0
 14162 ;;		On exit  : 0/0
 14163 ;;		Unchanged: 0/0
 14164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14168 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14169 ;;Total ram usage:        2 bytes
 14170 ;; Hardware stack levels used:    1
 14171 ;; Hardware stack levels required when called:    4
 14172 ;; This function calls:
 14173 ;;		Nothing
 14174 ;; This function is called by:
 14175 ;;		_EUSART1_Initialize
 14176 ;;		_DMX_init
 14177 ;; This function uses a non-reentrant model
 14178 ;;
 14179                           
 14180                           
 14181                           ;psect for function _EUSART1_SetRxInterruptHandler
 14182  1EB6                     _EUSART1_SetRxInterruptHandler:	
 14183                           
 14184                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 14185                           
 14186                           ;incstack = 0
 14187                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 14188  1EB6  0140               	movlb	0	; select bank0
 14189  1EB7  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 14190  1EB8  0143               	movlb	3	; select bank3
 14191  1EB9  00EF               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
 14192  1EBA  0140               	movlb	0	; select bank0
 14193  1EBB  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 14194  1EBC  0143               	movlb	3	; select bank3
 14195  1EBD  00EE               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
 14196  1EBE  0008               	return
 14197  1EBF                     __end_of_EUSART1_SetRxInterruptHandler:	
 14198                           
 14199                           	psect	text30
 14200  0BF7                     __ptext30:	
 14201 ;; *************** function _CONTROLLER_task *****************
 14202 ;; Defined at:
 14203 ;;		line 220 in file "controller.c"
 14204 ;; Parameters:    Size  Location     Type
 14205 ;;		None
 14206 ;; Auto vars:     Size  Location     Type
 14207 ;;		None
 14208 ;; Return value:  Size  Location     Type
 14209 ;;                  1    wreg      void 
 14210 ;; Registers used:
 14211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14212 ;; Tracked objects:
 14213 ;;		On entry : 0/0
 14214 ;;		On exit  : 0/0
 14215 ;;		Unchanged: 0/0
 14216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14219 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14220 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14221 ;;Total ram usage:        2 bytes
 14222 ;; Hardware stack levels used:    1
 14223 ;; Hardware stack levels required when called:   18
 14224 ;; This function calls:
 14225 ;;		_BUTTONS_isClicked
 14226 ;;		_CONTROL_DMX
 14227 ;;		_LED_task_ANIMATION
 14228 ;;		_LED_task_BEAT_STROBE
 14229 ;;		_LED_task_MANUAL
 14230 ;;		_printf
 14231 ;; This function is called by:
 14232 ;;		_main
 14233 ;; This function uses a non-reentrant model
 14234 ;;
 14235                           
 14236                           
 14237                           ;psect for function _CONTROLLER_task
 14238  0BF7                     _CONTROLLER_task:	
 14239                           
 14240                           ;controller.c: 222:     if(startup == 1){
 14241                           
 14242                           ;incstack = 0
 14243 ;; hardware stack exceeded
 14244                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14245  0BF7  0141               	movlb	1	; select bank1
 14246  0BF8  036F               	decf	_startup^(0+128),w
 14247  0BF9  1D03               	btfss	3,2
 14248  0BFA  2C00               	goto	l8555
 14249                           
 14250                           ;controller.c: 223:         currentMenu = &dmx;
 14251  0BFB  305A               	movlw	low _dmx
 14252  0BFC  00AF               	movwf	_currentMenu^(0+128)
 14253  0BFD  3001               	movlw	high _dmx
 14254  0BFE  00B0               	movwf	(_currentMenu+1)^(0+128)
 14255                           
 14256                           ;controller.c: 224:         startup = 0;
 14257  0BFF  01EF               	clrf	_startup^(0+128)
 14258  0C00                     l8555:	
 14259                           
 14260                           ;controller.c: 227:     upState = BUTTONS_isClicked(up);
 14261  0C00  0840               	movf	_up^(0+128),w
 14262  0C01  319F  27D8  318B   	fcall	_BUTTONS_isClicked
 14263  0C04  0141               	movlb	1	; select bank1
 14264  0C05  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14265  0C06  085C               	movf	??_CONTROLLER_task^(0+128),w
 14266  0C07  00BD               	movwf	_upState^(0+128)
 14267                           
 14268                           ;controller.c: 228:     downState = BUTTONS_isClicked(down);
 14269  0C08  083F               	movf	_down^(0+128),w
 14270  0C09  319F  27D8  318B   	fcall	_BUTTONS_isClicked
 14271  0C0C  0141               	movlb	1	; select bank1
 14272  0C0D  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14273  0C0E  085C               	movf	??_CONTROLLER_task^(0+128),w
 14274  0C0F  00BC               	movwf	_downState^(0+128)
 14275                           
 14276                           ;controller.c: 229:     menuState = BUTTONS_isClicked(menu);
 14277  0C10  0841               	movf	_menu^(0+128),w
 14278  0C11  319F  27D8  318B   	fcall	_BUTTONS_isClicked
 14279  0C14  0141               	movlb	1	; select bank1
 14280  0C15  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14281  0C16  085C               	movf	??_CONTROLLER_task^(0+128),w
 14282  0C17  00BB               	movwf	_menuState^(0+128)
 14283                           
 14284                           ;controller.c: 230:     enterState = BUTTONS_isClicked(enter);
 14285  0C18  083E               	movf	_enter^(0+128),w
 14286  0C19  319F  27D8  318B   	fcall	_BUTTONS_isClicked
 14287  0C1C  0141               	movlb	1	; select bank1
 14288  0C1D  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14289  0C1E  085C               	movf	??_CONTROLLER_task^(0+128),w
 14290  0C1F  00BA               	movwf	_enterState^(0+128)
 14291                           
 14292                           ;controller.c: 232:     if(menuState){
 14293  0C20  083B               	movf	_menuState^(0+128),w
 14294  0C21  1903               	btfsc	3,2
 14295  0C22  2C2C               	goto	l8567
 14296                           
 14297                           ;controller.c: 233:         currentMenu = currentMenu->parent;
 14298  0C23  082F               	movf	_currentMenu^(0+128),w
 14299  0C24  0086               	movwf	6
 14300  0C25  0830               	movf	(_currentMenu+1)^(0+128),w
 14301  0C26  0087               	movwf	7
 14302  0C27  3146               	addfsr 1,6
 14303  0C28  0801               	movf	1,w
 14304  0C29  00AF               	movwf	_currentMenu^(0+128)
 14305  0C2A  3001               	movlw	1
 14306  0C2B  2C68               	goto	L3
 14307  0C2C                     l8567:	
 14308                           ;controller.c: 234:     } else if(upState && currentMenu->nextItem != ((void*)0)){
 14309                           
 14310  0C2C  083D               	movf	_upState^(0+128),w
 14311  0C2D  1903               	btfsc	3,2
 14312  0C2E  2C3F               	goto	l8573
 14313  0C2F  082F               	movf	_currentMenu^(0+128),w
 14314  0C30  0086               	movwf	6
 14315  0C31  0830               	movf	(_currentMenu+1)^(0+128),w
 14316  0C32  0087               	movwf	7
 14317  0C33  0016               	moviw fsr1++
 14318  0C34  0401               	iorwf	1,w
 14319  0C35  1903               	btfsc	3,2
 14320  0C36  2C3F               	goto	l8573
 14321                           
 14322                           ;controller.c: 235:         currentMenu = currentMenu->nextItem;
 14323  0C37  082F               	movf	_currentMenu^(0+128),w
 14324  0C38  0086               	movwf	6
 14325  0C39  0830               	movf	(_currentMenu+1)^(0+128),w
 14326  0C3A  0087               	movwf	7
 14327  0C3B  3F40               	moviw [0]fsr1
 14328  0C3C  00AF               	movwf	_currentMenu^(0+128)
 14329  0C3D  3F41               	moviw [1]fsr1
 14330  0C3E  2C68               	goto	L3
 14331  0C3F                     l8573:	
 14332                           ;controller.c: 236:     } else if(downState && currentMenu->prevItem != ((void*)0)){
 14333                           
 14334  0C3F  083C               	movf	_downState^(0+128),w
 14335  0C40  1903               	btfsc	3,2
 14336  0C41  2C54               	goto	l8579
 14337  0C42  082F               	movf	_currentMenu^(0+128),w
 14338  0C43  0086               	movwf	6
 14339  0C44  0830               	movf	(_currentMenu+1)^(0+128),w
 14340  0C45  0087               	movwf	7
 14341  0C46  3142               	addfsr 1,2
 14342  0C47  0016               	moviw fsr1++
 14343  0C48  0401               	iorwf	1,w
 14344  0C49  1903               	btfsc	3,2
 14345  0C4A  2C54               	goto	l8579
 14346                           
 14347                           ;controller.c: 237:         currentMenu = currentMenu->prevItem;
 14348  0C4B  082F               	movf	_currentMenu^(0+128),w
 14349  0C4C  0086               	movwf	6
 14350  0C4D  0830               	movf	(_currentMenu+1)^(0+128),w
 14351  0C4E  0087               	movwf	7
 14352  0C4F  3142               	addfsr 1,2
 14353  0C50  3F40               	moviw [0]fsr1
 14354  0C51  00AF               	movwf	_currentMenu^(0+128)
 14355  0C52  3F41               	moviw [1]fsr1
 14356  0C53  2C68               	goto	L3
 14357  0C54                     l8579:	
 14358                           ;controller.c: 238:     } else if(enterState && currentMenu->config != ((void*)0)){
 14359                           
 14360  0C54  083A               	movf	_enterState^(0+128),w
 14361  0C55  1903               	btfsc	3,2
 14362  0C56  2CAD               	goto	l8605
 14363  0C57  082F               	movf	_currentMenu^(0+128),w
 14364  0C58  0086               	movwf	6
 14365  0C59  0830               	movf	(_currentMenu+1)^(0+128),w
 14366  0C5A  0087               	movwf	7
 14367  0C5B  3144               	addfsr 1,4
 14368  0C5C  0016               	moviw fsr1++
 14369  0C5D  0401               	iorwf	1,w
 14370  0C5E  1903               	btfsc	3,2
 14371  0C5F  2CAD               	goto	l8605
 14372                           
 14373                           ;controller.c: 239:         currentMenu = currentMenu->config;
 14374  0C60  082F               	movf	_currentMenu^(0+128),w
 14375  0C61  0086               	movwf	6
 14376  0C62  0830               	movf	(_currentMenu+1)^(0+128),w
 14377  0C63  0087               	movwf	7
 14378  0C64  3144               	addfsr 1,4
 14379  0C65  3F40               	moviw [0]fsr1
 14380  0C66  00AF               	movwf	_currentMenu^(0+128)
 14381  0C67  3F41               	moviw [1]fsr1
 14382  0C68                     L3:	
 14383  0C68  00B0               	movwf	(_currentMenu+1)^(0+128)
 14384                           
 14385                           ;controller.c: 242:     switch(currentMenu->name){
 14386  0C69  2CAD               	goto	l8605
 14387  0C6A                     l8585:	
 14388                           
 14389                           ;controller.c: 244:             printf("PC  \r");
 14390  0C6A  3055               	movlw	low (STR_1| (0+32768))
 14391  0C6B  00C9               	movwf	printf@fmt^(0+128)
 14392  0C6C  30A0               	movlw	high (STR_1| (0+32768))
 14393  0C6D  00CA               	movwf	(printf@fmt^(0+128)+1)
 14394  0C6E  3190  201B         	fcall	_printf
 14395                           
 14396                           ;controller.c: 245:             break;
 14397  0C70  0008               	return
 14398  0C71                     l8587:	
 14399                           
 14400                           ;controller.c: 248:             printf("BEAT\r");
 14401  0C71  3073               	movlw	low (STR_2| (0+32768))
 14402  0C72  00C9               	movwf	printf@fmt^(0+128)
 14403  0C73  30A0               	movlw	high (STR_2| (0+32768))
 14404  0C74  00CA               	movwf	(printf@fmt^(0+128)+1)
 14405  0C75  3190  201B         	fcall	_printf
 14406                           
 14407                           ;controller.c: 249:             break;
 14408  0C77  0008               	return
 14409  0C78                     l8589:	
 14410                           
 14411                           ;controller.c: 252:             printf("ANI \r");
 14412  0C78  3061               	movlw	low (STR_3| (0+32768))
 14413  0C79  00C9               	movwf	printf@fmt^(0+128)
 14414  0C7A  30A0               	movlw	high (STR_3| (0+32768))
 14415  0C7B  00CA               	movwf	(printf@fmt^(0+128)+1)
 14416  0C7C  3190  201B         	fcall	_printf
 14417                           
 14418                           ;controller.c: 253:             break;
 14419  0C7E  0008               	return
 14420  0C7F                     l8591:	
 14421                           
 14422                           ;controller.c: 256:             printf("LED \r");
 14423  0C7F  305B               	movlw	low (STR_4| (0+32768))
 14424  0C80  00C9               	movwf	printf@fmt^(0+128)
 14425  0C81  30A0               	movlw	high (STR_4| (0+32768))
 14426  0C82  00CA               	movwf	(printf@fmt^(0+128)+1)
 14427  0C83  3190  201B         	fcall	_printf
 14428                           
 14429                           ;controller.c: 257:             break;
 14430  0C85  0008               	return
 14431  0C86                     l8593:	
 14432                           
 14433                           ;controller.c: 260:             printf("B   \r");
 14434  0C86  3049               	movlw	low (STR_5| (0+32768))
 14435  0C87  00C9               	movwf	printf@fmt^(0+128)
 14436  0C88  30A0               	movlw	high (STR_5| (0+32768))
 14437  0C89  00CA               	movwf	(printf@fmt^(0+128)+1)
 14438  0C8A  3190  201B         	fcall	_printf
 14439                           
 14440                           ;controller.c: 261:             break;
 14441  0C8C  0008               	return
 14442  0C8D                     l8595:	
 14443                           
 14444                           ;controller.c: 264:             printf("FADE\r");
 14445  0C8D  306D               	movlw	low (STR_6| (0+32768))
 14446  0C8E  00C9               	movwf	printf@fmt^(0+128)
 14447  0C8F  30A0               	movlw	high (STR_6| (0+32768))
 14448  0C90  00CA               	movwf	(printf@fmt^(0+128)+1)
 14449  0C91  3190  201B         	fcall	_printf
 14450                           
 14451                           ;controller.c: 265:             break;
 14452  0C93  0008               	return
 14453  0C94                     l8597:	
 14454                           
 14455                           ;controller.c: 268:             printf("C   \r");
 14456  0C94  304F               	movlw	low (STR_7| (0+32768))
 14457  0C95  00C9               	movwf	printf@fmt^(0+128)
 14458  0C96  30A0               	movlw	high (STR_7| (0+32768))
 14459  0C97  00CA               	movwf	(printf@fmt^(0+128)+1)
 14460  0C98  3190  201B         	fcall	_printf
 14461                           
 14462                           ;controller.c: 269:             break;
 14463  0C9A  0008               	return
 14464  0C9B                     l8599:	
 14465                           
 14466                           ;controller.c: 272:             printf("ALL \r");
 14467  0C9B  3067               	movlw	low (STR_8| (0+32768))
 14468  0C9C  00C9               	movwf	printf@fmt^(0+128)
 14469  0C9D  30A0               	movlw	high (STR_8| (0+32768))
 14470  0C9E  00CA               	movwf	(printf@fmt^(0+128)+1)
 14471  0C9F  3190  201B         	fcall	_printf
 14472                           
 14473                           ;controller.c: 273:             break;
 14474  0CA1  0008               	return
 14475  0CA2                     l8601:	
 14476                           
 14477                           ;controller.c: 276:             currentMenu->task();
 14478  0CA2  082F               	movf	_currentMenu^(0+128),w
 14479  0CA3  0086               	movwf	6
 14480  0CA4  0830               	movf	(_currentMenu+1)^(0+128),w
 14481  0CA5  0087               	movwf	7
 14482  0CA6  3148               	addfsr 1,8
 14483  0CA7  3F41               	moviw [1]fsr1
 14484  0CA8  008A               	movwf	10
 14485  0CA9  3F40               	moviw [0]fsr1
 14486  0CAA  000A               	callw
 14487  0CAB  318B               	pagesel	$
 14488                           
 14489                           ;controller.c: 277:             break;
 14490  0CAC  0008               	return
 14491  0CAD                     l8605:	
 14492  0CAD  082F               	movf	_currentMenu^(0+128),w
 14493  0CAE  0086               	movwf	6
 14494  0CAF  0830               	movf	(_currentMenu+1)^(0+128),w
 14495  0CB0  0087               	movwf	7
 14496  0CB1  3147               	addfsr 1,7
 14497  0CB2  0801               	movf	1,w
 14498  0CB3  00DC               	movwf	??_CONTROLLER_task^(0+128)
 14499  0CB4  01DD               	clrf	(??_CONTROLLER_task^(0+128)+1)
 14500                           
 14501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14502                           ; Switch size 1, requested type "simple"
 14503                           ; Number of cases is 1, Range of values is 0 to 0
 14504                           ; switch strategies available:
 14505                           ; Name         Instructions Cycles
 14506                           ; simple_byte            4     3 (average)
 14507                           ; direct_byte            8     6 (fixed)
 14508                           ; jumptable            260     6 (fixed)
 14509                           ;	Chosen strategy is simple_byte
 14510  0CB5  085D               	movf	(??_CONTROLLER_task+1)^(0+128),w
 14511  0CB6  3A00               	xorlw	0	; case 0
 14512  0CB7  1903               	skipnz
 14513  0CB8  2CBA               	goto	l9053
 14514  0CB9  2CA2               	goto	l8601
 14515  0CBA                     l9053:	
 14516                           
 14517                           ; Switch size 1, requested type "simple"
 14518                           ; Number of cases is 8, Range of values is 0 to 8
 14519                           ; switch strategies available:
 14520                           ; Name         Instructions Cycles
 14521                           ; direct_byte           24     6 (fixed)
 14522                           ; simple_byte           25    13 (average)
 14523                           ; jumptable            260     6 (fixed)
 14524                           ;	Chosen strategy is simple_byte
 14525  0CBA  085C               	movf	??_CONTROLLER_task^(0+128),w
 14526  0CBB  3A00               	xorlw	0	; case 0
 14527  0CBC  1903               	skipnz
 14528  0CBD  2C6A               	goto	l8585
 14529  0CBE  3A01               	xorlw	1	; case 1
 14530  0CBF  1903               	skipnz
 14531  0CC0  2C71               	goto	l8587
 14532  0CC1  3A03               	xorlw	3	; case 2
 14533  0CC2  1903               	skipnz
 14534  0CC3  2C78               	goto	l8589
 14535  0CC4  3A01               	xorlw	1	; case 3
 14536  0CC5  1903               	skipnz
 14537  0CC6  2C7F               	goto	l8591
 14538  0CC7  3A06               	xorlw	6	; case 5
 14539  0CC8  1903               	skipnz
 14540  0CC9  2C86               	goto	l8593
 14541  0CCA  3A03               	xorlw	3	; case 6
 14542  0CCB  1903               	skipnz
 14543  0CCC  2C8D               	goto	l8595
 14544  0CCD  3A01               	xorlw	1	; case 7
 14545  0CCE  1903               	skipnz
 14546  0CCF  2C94               	goto	l8597
 14547  0CD0  3A0F               	xorlw	15	; case 8
 14548  0CD1  1903               	skipnz
 14549  0CD2  2C9B               	goto	l8599
 14550  0CD3  2CA2               	goto	l8601
 14551  0CD4  0008               	return
 14552  0CD5                     __end_of_CONTROLLER_task:	
 14553                           
 14554                           	psect	text31
 14555  0CD5                     __ptext31:	
 14556 ;; *************** function _LED_task_BEAT_STROBE *****************
 14557 ;; Defined at:
 14558 ;;		line 99 in file "led.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;		None
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;  beatState       1   79[BANK0 ] _Bool 
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  1    wreg      void 
 14565 ;; Registers used:
 14566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14567 ;; Tracked objects:
 14568 ;;		On entry : 0/0
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14574 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14575 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14576 ;;Total ram usage:        3 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:   17
 14579 ;; This function calls:
 14580 ;;		_BEAT_detected
 14581 ;;		_CLOCK_getTime
 14582 ;;		_LED_setColor
 14583 ;;		_TM1650_fastPrintNum_2digit
 14584 ;;		_beatColorCreator
 14585 ;;		_printf
 14586 ;; This function is called by:
 14587 ;;		_CONTROLLER_init
 14588 ;;		_LED_task
 14589 ;;		_CONTROLLER_task
 14590 ;; This function uses a non-reentrant model
 14591 ;;
 14592                           
 14593                           
 14594                           ;psect for function _LED_task_BEAT_STROBE
 14595  0CD5                     _LED_task_BEAT_STROBE:	
 14596                           
 14597                           ;led.c: 101:     printf("b-\r");
 14598                           
 14599                           ;incstack = 0
 14600 ;; hardware stack exceeded
 14601                           ; Regs used in _LED_task_BEAT_STROBE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14602  0CD5  307E               	movlw	low (STR_21| (0+32768))
 14603  0CD6  0141               	movlb	1	; select bank1
 14604  0CD7  00C9               	movwf	printf@fmt^(0+128)
 14605  0CD8  30A0               	movlw	high (STR_21| (0+32768))
 14606  0CD9  00CA               	movwf	(printf@fmt^(0+128)+1)
 14607  0CDA  3190  201B  318C   	fcall	_printf
 14608                           
 14609                           ;led.c: 102:     TM1650_fastPrintNum_2digit(beatBrightness);
 14610  0CDD  3005               	movlw	5
 14611  0CDE  3196  26F6  318C   	fcall	_TM1650_fastPrintNum_2digit
 14612                           
 14613                           ;led.c: 104:     if(CLOCK_getTime() - lastLedActiveTime < 50){
 14614  0CE1  319E  269B  318C   	fcall	_CLOCK_getTime
 14615  0CE4  0142               	movlb	2	; select bank2
 14616  0CE5  082E               	movf	_lastLedActiveTime^(0+256),w
 14617  0CE6  0140               	movlb	0	; select bank0
 14618  0CE7  0220               	subwf	?_CLOCK_getTime,w
 14619  0CE8  0141               	movlb	1	; select bank1
 14620  0CE9  00DA               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 14621  0CEA  0142               	movlb	2	; select bank2
 14622  0CEB  082F               	movf	(_lastLedActiveTime+1)^(0+256),w
 14623  0CEC  0140               	movlb	0	; select bank0
 14624  0CED  3B21               	subwfb	?_CLOCK_getTime+1,w
 14625  0CEE  0141               	movlb	1	; select bank1
 14626  0CEF  00DB               	movwf	(??_LED_task_BEAT_STROBE+1)^(0+128)
 14627  0CF0  3000               	movlw	0
 14628  0CF1  025B               	subwf	(??_LED_task_BEAT_STROBE+1)^(0+128),w
 14629  0CF2  3032               	movlw	50
 14630  0CF3  1903               	skipnz
 14631  0CF4  025A               	subwf	??_LED_task_BEAT_STROBE^(0+128),w
 14632  0CF5  1C03               	btfss	3,0
 14633  0CF6  0008               	return
 14634                           
 14635                           ;led.c: 108:     lastLedActiveTime = CLOCK_getTime();
 14636  0CF7  319E  269B  318C   	fcall	_CLOCK_getTime
 14637  0CFA  0140               	movlb	0	; select bank0
 14638  0CFB  0821               	movf	?_CLOCK_getTime+1,w
 14639  0CFC  0142               	movlb	2	; select bank2
 14640  0CFD  00AF               	movwf	(_lastLedActiveTime+1)^(0+256)
 14641  0CFE  0140               	movlb	0	; select bank0
 14642  0CFF  0820               	movf	?_CLOCK_getTime,w
 14643  0D00  0142               	movlb	2	; select bank2
 14644  0D01  00AE               	movwf	_lastLedActiveTime^(0+256)
 14645                           
 14646                           ;led.c: 110:     LATC5 = 0;
 14647  0D02  0140               	movlb	0	; select bank0
 14648  0D03  129A               	bcf	26,5	;volatile
 14649                           
 14650                           ;led.c: 111:     _Bool beatState = BEAT_detected();
 14651  0D04  319E  26AD  318C   	fcall	_BEAT_detected
 14652  0D07  0141               	movlb	1	; select bank1
 14653  0D08  00DA               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 14654  0D09  085A               	movf	??_LED_task_BEAT_STROBE^(0+128),w
 14655  0D0A  0140               	movlb	0	; select bank0
 14656  0D0B  00EF               	movwf	LED_task_BEAT_STROBE@beatState
 14657                           
 14658                           ;led.c: 113:     if (beatState) {
 14659  0D0C  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 14660  0D0D  1D03               	btfss	3,2
 14661                           
 14662                           ;led.c: 114:         LATC5 = 1;
 14663  0D0E  169A               	bsf	26,5	;volatile
 14664                           
 14665                           ;led.c: 117:      if(!beatState){
 14666  0D0F  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 14667  0D10  1D03               	btfss	3,2
 14668  0D11  2D26               	goto	l8033
 14669                           
 14670                           ;led.c: 118:          LED_setColor(beatColorCreator(0,0,0,0));
 14671  0D12  0141               	movlb	1	; select bank1
 14672  0D13  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14673  0D14  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 14674  0D15  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 14675  0D16  3000               	movlw	0
 14676  0D17  3196  2683  318C   	fcall	_beatColorCreator
 14677  0D1A  0141               	movlb	1	; select bank1
 14678  0D1B  084C               	movf	(?_beatColorCreator+3)^(0+128),w
 14679  0D1C  00D5               	movwf	(LED_setColor@input+3)^(0+128)
 14680  0D1D  084B               	movf	(?_beatColorCreator+2)^(0+128),w
 14681  0D1E  00D4               	movwf	(LED_setColor@input+2)^(0+128)
 14682  0D1F  084A               	movf	(?_beatColorCreator+1)^(0+128),w
 14683  0D20  00D3               	movwf	(LED_setColor@input+1)^(0+128)
 14684  0D21  0849               	movf	?_beatColorCreator^(0+128),w
 14685  0D22  00D2               	movwf	LED_setColor@input^(0+128)
 14686  0D23  3185  25E3         	fcall	_LED_setColor
 14687                           
 14688                           ;led.c: 119:     } else if (currentState == 1){
 14689  0D25  0008               	return
 14690  0D26                     l8033:	
 14691  0D26  0141               	movlb	1	; select bank1
 14692  0D27  032B               	decf	_currentState^(0+128),w
 14693  0D28  042C               	iorwf	(_currentState+1)^(0+128),w
 14694  0D29  1D03               	btfss	3,2
 14695  0D2A  2D69               	goto	l8039
 14696                           
 14697                           ;led.c: 120:         LED_setColor(beatColorCreator(0,0,0,1));
 14698  0D2B  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14699  0D2C  2D51               	goto	L4
 14700  0D2D                     l8053:	
 14701                           ;led.c: 126:          LED_setColor(beatColorCreator(0,1,1,0));
 14702                           
 14703                           ;led.c: 123:          LED_setColor(beatColorCreator(0,1,0,1));
 14704                           
 14705                           
 14706                           ;led.c: 129:          LED_setColor(beatColorCreator(1,0,1,1));
 14707  0D2D  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14708  0D2E  2D49               	goto	L16
 14709  0D2F                     l8059:	
 14710                           
 14711                           ;led.c: 132:         LED_setColor(beatColorCreator(0,1,1,0));
 14712  0D2F  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14713  0D30  0AC9               	incf	beatColorCreator@inGreen^(0+128),f
 14714  0D31  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 14715  0D32  0ACA               	incf	beatColorCreator@inBlue^(0+128),f
 14716  0D33  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 14717  0D34  2D54               	goto	L5
 14718  0D35                     l8065:	
 14719                           
 14720                           ;led.c: 135:         LED_setColor(beatColorCreator(1,1,1,0));
 14721  0D35  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14722  0D36  0AC9               	incf	beatColorCreator@inGreen^(0+128),f
 14723  0D37  2D40               	goto	L13
 14724  0D38                     l8071:	
 14725                           
 14726                           ;led.c: 138:         LED_setColor(beatColorCreator(1,1,0,1));
 14727  0D38  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14728  0D39  0AC9               	incf	beatColorCreator@inGreen^(0+128),f
 14729  0D3A  2D45               	goto	L15
 14730  0D3B                     l8083:	
 14731                           ;led.c: 141:          LED_setColor(beatColorCreator(0,1,0,1));
 14732                           
 14733                           
 14734                           ;led.c: 144:          LED_setColor(beatColorCreator(0,0,1,1));
 14735  0D3B  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14736  0D3C  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 14737  0D3D  0ACA               	incf	beatColorCreator@inBlue^(0+128),f
 14738  0D3E  2D52               	goto	L12
 14739  0D3F                     l8089:	
 14740                           
 14741                           ;led.c: 147:          LED_setColor(beatColorCreator(1,0,1,0));
 14742  0D3F  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14743  0D40                     L13:	
 14744  0D40  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 14745  0D41  0ACA               	incf	beatColorCreator@inBlue^(0+128),f
 14746  0D42  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 14747  0D43  2D4D               	goto	L11
 14748  0D44                     l8095:	
 14749                           
 14750                           ;led.c: 150:         LED_setColor(beatColorCreator(1,0,0,1));
 14751  0D44  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14752  0D45                     L15:	
 14753  0D45  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 14754  0D46  2D4B               	goto	L14
 14755  0D47                     l8101:	
 14756                           
 14757                           ;led.c: 153:         LED_setColor(beatColorCreator(1,1,1,1));
 14758  0D47  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14759  0D48  0AC9               	incf	beatColorCreator@inGreen^(0+128),f
 14760  0D49                     L16:	
 14761  0D49  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 14762  0D4A  0ACA               	incf	beatColorCreator@inBlue^(0+128),f
 14763  0D4B                     L14:	
 14764  0D4B  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 14765  0D4C  0ACB               	incf	beatColorCreator@inWhite^(0+128),f
 14766  0D4D                     L11:	
 14767  0D4D  3001               	movlw	1
 14768  0D4E  2D55               	goto	L6
 14769  0D4F                     l8107:	
 14770                           
 14771                           ;led.c: 156:         LED_setColor(beatColorCreator(0,1,0,1));
 14772  0D4F  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14773  0D50  0AC9               	incf	beatColorCreator@inGreen^(0+128),f
 14774  0D51                     L4:	
 14775  0D51  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 14776  0D52                     L12:	
 14777  0D52  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 14778  0D53  0ACB               	incf	beatColorCreator@inWhite^(0+128),f
 14779  0D54                     L5:	
 14780  0D54  3000               	movlw	0
 14781  0D55                     L6:	
 14782  0D55  3196  2683  318C   	fcall	_beatColorCreator
 14783  0D58  0141               	movlb	1	; select bank1
 14784  0D59  084C               	movf	(?_beatColorCreator+3)^(0+128),w
 14785  0D5A  00D5               	movwf	(LED_setColor@input+3)^(0+128)
 14786  0D5B  084B               	movf	(?_beatColorCreator+2)^(0+128),w
 14787  0D5C  00D4               	movwf	(LED_setColor@input+2)^(0+128)
 14788  0D5D  084A               	movf	(?_beatColorCreator+1)^(0+128),w
 14789  0D5E  00D3               	movwf	(LED_setColor@input+1)^(0+128)
 14790  0D5F  0849               	movf	?_beatColorCreator^(0+128),w
 14791  0D60  00D2               	movwf	LED_setColor@input^(0+128)
 14792  0D61  3185  25E3         	fcall	_LED_setColor
 14793                           
 14794                           ;led.c: 121:         currentState++;
 14795  0D63  3001               	movlw	1
 14796  0D64  0141               	movlb	1	; select bank1
 14797  0D65  07AB               	addwf	_currentState^(0+128),f
 14798  0D66  3000               	movlw	0
 14799  0D67  3DAC               	addwfc	(_currentState+1)^(0+128),f
 14800                           
 14801                           ;led.c: 122:     } else if(currentState == 2){
 14802  0D68  0008               	return
 14803  0D69                     l8039:	
 14804  0D69  3002               	movlw	2
 14805  0D6A  062B               	xorwf	_currentState^(0+128),w
 14806  0D6B  042C               	iorwf	(_currentState+1)^(0+128),w
 14807  0D6C  1903               	btfsc	3,2
 14808  0D6D  2D4F               	goto	l8107
 14809  0D6E  3003               	movlw	3
 14810  0D6F  062B               	xorwf	_currentState^(0+128),w
 14811  0D70  042C               	iorwf	(_currentState+1)^(0+128),w
 14812  0D71  1903               	btfsc	3,2
 14813  0D72  2D2F               	goto	l8059
 14814  0D73  3004               	movlw	4
 14815  0D74  062B               	xorwf	_currentState^(0+128),w
 14816  0D75  042C               	iorwf	(_currentState+1)^(0+128),w
 14817  0D76  1903               	btfsc	3,2
 14818  0D77  2D2D               	goto	l8053
 14819  0D78  3005               	movlw	5
 14820  0D79  062B               	xorwf	_currentState^(0+128),w
 14821  0D7A  042C               	iorwf	(_currentState+1)^(0+128),w
 14822  0D7B  1903               	btfsc	3,2
 14823  0D7C  2D2F               	goto	l8059
 14824  0D7D  3006               	movlw	6
 14825  0D7E  062B               	xorwf	_currentState^(0+128),w
 14826  0D7F  042C               	iorwf	(_currentState+1)^(0+128),w
 14827  0D80  1903               	btfsc	3,2
 14828  0D81  2D35               	goto	l8065
 14829  0D82  3008               	movlw	8
 14830  0D83  062B               	xorwf	_currentState^(0+128),w
 14831  0D84  042C               	iorwf	(_currentState+1)^(0+128),w
 14832  0D85  1903               	btfsc	3,2
 14833  0D86  2D38               	goto	l8071
 14834  0D87  3009               	movlw	9
 14835  0D88  062B               	xorwf	_currentState^(0+128),w
 14836  0D89  042C               	iorwf	(_currentState+1)^(0+128),w
 14837  0D8A  1903               	btfsc	3,2
 14838  0D8B  2D4F               	goto	l8107
 14839  0D8C  300A               	movlw	10
 14840  0D8D  062B               	xorwf	_currentState^(0+128),w
 14841  0D8E  042C               	iorwf	(_currentState+1)^(0+128),w
 14842  0D8F  1903               	btfsc	3,2
 14843  0D90  2D3B               	goto	l8083
 14844  0D91  300B               	movlw	11
 14845  0D92  062B               	xorwf	_currentState^(0+128),w
 14846  0D93  042C               	iorwf	(_currentState+1)^(0+128),w
 14847  0D94  1903               	btfsc	3,2
 14848  0D95  2D3F               	goto	l8089
 14849  0D96  300C               	movlw	12
 14850  0D97  062B               	xorwf	_currentState^(0+128),w
 14851  0D98  042C               	iorwf	(_currentState+1)^(0+128),w
 14852  0D99  1903               	btfsc	3,2
 14853  0D9A  2D44               	goto	l8095
 14854  0D9B  300D               	movlw	13
 14855  0D9C  062B               	xorwf	_currentState^(0+128),w
 14856  0D9D  042C               	iorwf	(_currentState+1)^(0+128),w
 14857  0D9E  1903               	btfsc	3,2
 14858  0D9F  2D47               	goto	l8101
 14859  0DA0  300E               	movlw	14
 14860  0DA1  062B               	xorwf	_currentState^(0+128),w
 14861  0DA2  042C               	iorwf	(_currentState+1)^(0+128),w
 14862  0DA3  1903               	btfsc	3,2
 14863  0DA4  2D4F               	goto	l8107
 14864                           
 14865                           ;led.c: 159:         LED_setColor(beatColorCreator(0,1,1,1));
 14866  0DA5  01C9               	clrf	beatColorCreator@inGreen^(0+128)
 14867  0DA6  0AC9               	incf	beatColorCreator@inGreen^(0+128),f
 14868  0DA7  01CA               	clrf	beatColorCreator@inBlue^(0+128)
 14869  0DA8  0ACA               	incf	beatColorCreator@inBlue^(0+128),f
 14870  0DA9  01CB               	clrf	beatColorCreator@inWhite^(0+128)
 14871  0DAA  0ACB               	incf	beatColorCreator@inWhite^(0+128),f
 14872  0DAB  3000               	movlw	0
 14873  0DAC  3196  2683  318C   	fcall	_beatColorCreator
 14874  0DAF  0141               	movlb	1	; select bank1
 14875  0DB0  084C               	movf	(?_beatColorCreator+3)^(0+128),w
 14876  0DB1  00D5               	movwf	(LED_setColor@input+3)^(0+128)
 14877  0DB2  084B               	movf	(?_beatColorCreator+2)^(0+128),w
 14878  0DB3  00D4               	movwf	(LED_setColor@input+2)^(0+128)
 14879  0DB4  084A               	movf	(?_beatColorCreator+1)^(0+128),w
 14880  0DB5  00D3               	movwf	(LED_setColor@input+1)^(0+128)
 14881  0DB6  0849               	movf	?_beatColorCreator^(0+128),w
 14882  0DB7  00D2               	movwf	LED_setColor@input^(0+128)
 14883  0DB8  3185  25E3         	fcall	_LED_setColor
 14884                           
 14885                           ;led.c: 160:         currentState = 1;
 14886  0DBA  3001               	movlw	1
 14887  0DBB  0141               	movlb	1	; select bank1
 14888  0DBC  00AB               	movwf	_currentState^(0+128)
 14889  0DBD  3000               	movlw	0
 14890  0DBE  00AC               	movwf	(_currentState^(0+128)+1)
 14891  0DBF  0008               	return
 14892  0DC0                     __end_of_LED_task_BEAT_STROBE:	
 14893                           
 14894                           	psect	text32
 14895  1E53                     __ptext32:	
 14896 ;; *************** function _LED_task_ANIMATION *****************
 14897 ;; Defined at:
 14898 ;;		line 210 in file "led.c"
 14899 ;; Parameters:    Size  Location     Type
 14900 ;;		None
 14901 ;; Auto vars:     Size  Location     Type
 14902 ;;		None
 14903 ;; Return value:  Size  Location     Type
 14904 ;;                  1    wreg      void 
 14905 ;; Registers used:
 14906 ;;		None
 14907 ;; Tracked objects:
 14908 ;;		On entry : 0/0
 14909 ;;		On exit  : 0/0
 14910 ;;		Unchanged: 0/0
 14911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14916 ;;Total ram usage:        0 bytes
 14917 ;; Hardware stack levels used:    1
 14918 ;; Hardware stack levels required when called:    4
 14919 ;; This function calls:
 14920 ;;		Nothing
 14921 ;; This function is called by:
 14922 ;;		_CONTROLLER_init
 14923 ;;		_LED_task
 14924 ;;		_CONTROLLER_task
 14925 ;; This function uses a non-reentrant model
 14926 ;;
 14927                           
 14928                           
 14929                           ;psect for function _LED_task_ANIMATION
 14930  1E53                     _LED_task_ANIMATION:	
 14931                           
 14932                           ;incstack = 0
 14933                           ; Regs used in _LED_task_ANIMATION: []
 14934  1E53  0008               	return
 14935  1E54                     __end_of_LED_task_ANIMATION:	
 14936                           
 14937                           	psect	text33
 14938  09B3                     __ptext33:	
 14939 ;; *************** function _CONTROL_DMX *****************
 14940 ;; Defined at:
 14941 ;;		line 452 in file "controller.c"
 14942 ;; Parameters:    Size  Location     Type
 14943 ;;		None
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;		None
 14946 ;; Return value:  Size  Location     Type
 14947 ;;                  1    wreg      void 
 14948 ;; Registers used:
 14949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14950 ;; Tracked objects:
 14951 ;;		On entry : 0/0
 14952 ;;		On exit  : 0/0
 14953 ;;		Unchanged: 0/0
 14954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14957 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14958 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14959 ;;Total ram usage:        2 bytes
 14960 ;; Hardware stack levels used:    1
 14961 ;; Hardware stack levels required when called:   17
 14962 ;; This function calls:
 14963 ;;		_BUTTONS_isHeld
 14964 ;;		_CLOCK_getTime
 14965 ;;		_DMX_getAddress
 14966 ;;		_TM1650_fastPrintNum_3digit
 14967 ;;		_address_dec
 14968 ;;		_address_inc
 14969 ;;		_printf
 14970 ;; This function is called by:
 14971 ;;		_CONTROLLER_init
 14972 ;;		_CONTROLLER_task
 14973 ;; This function uses a non-reentrant model
 14974 ;;
 14975                           
 14976                           
 14977                           ;psect for function _CONTROL_DMX
 14978  09B3                     _CONTROL_DMX:	
 14979                           
 14980                           ;controller.c: 454:     printf("d\r");
 14981                           
 14982                           ;incstack = 0
 14983 ;; hardware stack exceeded
 14984                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14985  09B3  3082               	movlw	low (STR_9| (0+32768))
 14986  09B4  0141               	movlb	1	; select bank1
 14987  09B5  00C9               	movwf	printf@fmt^(0+128)
 14988  09B6  30A0               	movlw	high (STR_9| (0+32768))
 14989  09B7  00CA               	movwf	(printf@fmt^(0+128)+1)
 14990  09B8  3190  201B  3189   	fcall	_printf
 14991                           
 14992                           ;controller.c: 455:     TM1650_fastPrintNum_3digit(DMX_getAddress());
 14993  09BB  319E  265C  3189   	fcall	_DMX_getAddress
 14994  09BE  0141               	movlb	1	; select bank1
 14995  09BF  00D3               	movwf	??_CONTROL_DMX^(0+128)
 14996  09C0  01D4               	clrf	(??_CONTROL_DMX^(0+128)+1)
 14997  09C1  0853               	movf	??_CONTROL_DMX^(0+128),w
 14998  09C2  0140               	movlb	0	; select bank0
 14999  09C3  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 15000  09C4  0141               	movlb	1	; select bank1
 15001  09C5  0854               	movf	(??_CONTROL_DMX+1)^(0+128),w
 15002  09C6  0140               	movlb	0	; select bank0
 15003  09C7  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 15004  09C8  3188  2071  3189   	fcall	_TM1650_fastPrintNum_3digit
 15005                           
 15006                           ;controller.c: 457:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 15007  09CB  0141               	movlb	1	; select bank1
 15008  09CC  0840               	movf	_up^(0+128),w
 15009  09CD  319F  2763  3189   	fcall	_BUTTONS_isHeld
 15010  09D0  3A00               	xorlw	0
 15011  09D1  1903               	skipnz
 15012  09D2  2A22               	goto	l7949
 15013  09D3  319E  269B  3189   	fcall	_CLOCK_getTime
 15014  09D6  0141               	movlb	1	; select bank1
 15015  09D7  082D               	movf	_lastIncTime^(0+128),w
 15016  09D8  0140               	movlb	0	; select bank0
 15017  09D9  0220               	subwf	?_CLOCK_getTime,w
 15018  09DA  0141               	movlb	1	; select bank1
 15019  09DB  00D3               	movwf	??_CONTROL_DMX^(0+128)
 15020  09DC  082E               	movf	(_lastIncTime+1)^(0+128),w
 15021  09DD  0140               	movlb	0	; select bank0
 15022  09DE  3B21               	subwfb	?_CLOCK_getTime+1,w
 15023  09DF  0141               	movlb	1	; select bank1
 15024  09E0  00D4               	movwf	(??_CONTROL_DMX+1)^(0+128)
 15025  09E1  0854               	movf	(??_CONTROL_DMX+1)^(0+128),w
 15026  09E2  026A               	subwf	(_incInterval+1)^(0+128),w
 15027  09E3  1D03               	skipz
 15028  09E4  29E7               	goto	u7795
 15029  09E5  0853               	movf	??_CONTROL_DMX^(0+128),w
 15030  09E6  0269               	subwf	_incInterval^(0+128),w
 15031  09E7                     u7795:	
 15032  09E7  1803               	skipnc
 15033  09E8  2A22               	goto	l7949
 15034                           
 15035                           ;controller.c: 458:         address_inc();
 15036  09E9  319F  2781  3189   	fcall	_address_inc
 15037  09EC  2A06               	goto	L17
 15038  09ED                     l7951:	
 15039                           ;controller.c: 460:         if(incInterval > 20){
 15040                           
 15041                           ;controller.c: 459:         lastIncTime = CLOCK_getTime();
 15042                           
 15043  09ED  319E  269B  3189   	fcall	_CLOCK_getTime
 15044  09F0  0141               	movlb	1	; select bank1
 15045  09F1  082D               	movf	_lastIncTime^(0+128),w
 15046  09F2  0140               	movlb	0	; select bank0
 15047  09F3  0220               	subwf	?_CLOCK_getTime,w
 15048  09F4  0141               	movlb	1	; select bank1
 15049  09F5  00D3               	movwf	??_CONTROL_DMX^(0+128)
 15050  09F6  082E               	movf	(_lastIncTime+1)^(0+128),w
 15051  09F7  0140               	movlb	0	; select bank0
 15052  09F8  3B21               	subwfb	?_CLOCK_getTime+1,w
 15053  09F9  0141               	movlb	1	; select bank1
 15054  09FA  00D4               	movwf	(??_CONTROL_DMX+1)^(0+128)
 15055  09FB  0854               	movf	(??_CONTROL_DMX+1)^(0+128),w
 15056  09FC  026A               	subwf	(_incInterval+1)^(0+128),w
 15057  09FD  1D03               	skipz
 15058  09FE  2A01               	goto	u7825
 15059  09FF  0853               	movf	??_CONTROL_DMX^(0+128),w
 15060  0A00  0269               	subwf	_incInterval^(0+128),w
 15061  0A01                     u7825:	
 15062  0A01  1803               	skipnc
 15063  0A02  2A2A               	goto	l7961
 15064                           
 15065                           ;controller.c: 464:         address_dec();
 15066  0A03  319F  2772  3189   	fcall	_address_dec
 15067  0A06                     L17:	
 15068                           
 15069                           ;controller.c: 465:         lastIncTime = CLOCK_getTime();
 15070  0A06  319E  269B  3189   	fcall	_CLOCK_getTime
 15071  0A09  0140               	movlb	0	; select bank0
 15072  0A0A  0821               	movf	?_CLOCK_getTime+1,w
 15073  0A0B  0141               	movlb	1	; select bank1
 15074  0A0C  00AE               	movwf	(_lastIncTime+1)^(0+128)
 15075  0A0D  0140               	movlb	0	; select bank0
 15076  0A0E  0820               	movf	?_CLOCK_getTime,w
 15077  0A0F  0141               	movlb	1	; select bank1
 15078  0A10  00AD               	movwf	_lastIncTime^(0+128)
 15079                           
 15080                           ;controller.c: 466:         if(incInterval > 20){
 15081  0A11  086A               	movf	(_incInterval+1)^(0+128),w
 15082  0A12  3A80               	xorlw	128
 15083  0A13  00D3               	movwf	??_CONTROL_DMX^(0+128)
 15084  0A14  3080               	movlw	128
 15085  0A15  0253               	subwf	??_CONTROL_DMX^(0+128),w
 15086  0A16  1D03               	skipz
 15087  0A17  2A1A               	goto	u7835
 15088  0A18  3015               	movlw	21
 15089  0A19  0269               	subwf	_incInterval^(0+128),w
 15090  0A1A                     u7835:	
 15091  0A1A  1C03               	skipc
 15092  0A1B  0008               	return
 15093                           
 15094                           ;controller.c: 461:             incInterval-=1;
 15095  0A1C  30FF               	movlw	255
 15096  0A1D  0141               	movlb	1	; select bank1
 15097  0A1E  07E9               	addwf	_incInterval^(0+128),f
 15098  0A1F  30FF               	movlw	255
 15099  0A20  3DEA               	addwfc	(_incInterval+1)^(0+128),f
 15100  0A21  0008               	return
 15101  0A22                     l7949:	
 15102  0A22  0141               	movlb	1	; select bank1
 15103  0A23  083F               	movf	_down^(0+128),w
 15104  0A24  319F  2763  3189   	fcall	_BUTTONS_isHeld
 15105  0A27  3A00               	xorlw	0
 15106  0A28  1D03               	btfss	3,2
 15107  0A29  29ED               	goto	l7951
 15108  0A2A                     l7961:	
 15109  0A2A  0141               	movlb	1	; select bank1
 15110  0A2B  083E               	movf	_enter^(0+128),w
 15111  0A2C  319F  2763  3189   	fcall	_BUTTONS_isHeld
 15112  0A2F  3A00               	xorlw	0
 15113  0A30  1903               	skipnz
 15114  0A31  2A38               	goto	l7965
 15115                           
 15116                           ;controller.c: 470:         address = 1;
 15117  0A32  3001               	movlw	1
 15118  0A33  0141               	movlb	1	; select bank1
 15119  0A34  00EB               	movwf	_address^(0+128)
 15120  0A35  3000               	movlw	0
 15121  0A36  00EC               	movwf	(_address^(0+128)+1)
 15122                           
 15123                           ;controller.c: 471:     } else if (upState) {
 15124  0A37  0008               	return
 15125  0A38                     l7965:	
 15126  0A38  0141               	movlb	1	; select bank1
 15127  0A39  083D               	movf	_upState^(0+128),w
 15128  0A3A  1903               	btfsc	3,2
 15129  0A3B  2A4A               	goto	l7971
 15130                           
 15131                           ;controller.c: 472:         address_inc();
 15132  0A3C  319F  2781  3189   	fcall	_address_inc
 15133                           
 15134                           ;controller.c: 473:         lastActiveTime = CLOCK_getTime();
 15135  0A3F  319E  269B         	fcall	_CLOCK_getTime
 15136  0A41  0140               	movlb	0	; select bank0
 15137  0A42  0821               	movf	?_CLOCK_getTime+1,w
 15138  0A43  0142               	movlb	2	; select bank2
 15139  0A44  00BB               	movwf	(_lastActiveTime+1)^(0+256)
 15140  0A45  0140               	movlb	0	; select bank0
 15141  0A46  0820               	movf	?_CLOCK_getTime,w
 15142  0A47  0142               	movlb	2	; select bank2
 15143  0A48  00BA               	movwf	_lastActiveTime^(0+256)
 15144                           
 15145                           ;controller.c: 474:     } else if (downState) {
 15146  0A49  0008               	return
 15147  0A4A                     l7971:	
 15148  0A4A  083C               	movf	_downState^(0+128),w
 15149  0A4B  1903               	btfsc	3,2
 15150  0A4C  2A50               	goto	l7975
 15151                           
 15152                           ;controller.c: 475:         address_dec();
 15153  0A4D  319F  2772         	fcall	_address_dec
 15154                           
 15155                           ;controller.c: 476:     } else if((!upState || !downState) && !(BUTTONS_isHeld(down) || 
      +                          BUTTONS_isHeld(up))){
 15156  0A4F  0008               	return
 15157  0A50                     l7975:	
 15158  0A50  083D               	movf	_upState^(0+128),w
 15159  0A51  1D03               	btfss	3,2
 15160  0A52  083C               	movf	_downState^(0+128),w
 15161  0A53  1D03               	btfss	3,2
 15162  0A54  0008               	return
 15163  0A55  083F               	movf	_down^(0+128),w
 15164  0A56  319F  2763  3189   	fcall	_BUTTONS_isHeld
 15165  0A59  3A00               	xorlw	0
 15166  0A5A  1D03               	skipz
 15167  0A5B  0008               	return
 15168  0A5C  0141               	movlb	1	; select bank1
 15169  0A5D  0840               	movf	_up^(0+128),w
 15170  0A5E  319F  2763  3189   	fcall	_BUTTONS_isHeld
 15171  0A61  3A00               	xorlw	0
 15172  0A62  1D03               	skipz
 15173  0A63  0008               	return
 15174                           
 15175                           ;controller.c: 477:         incInterval = 100;
 15176  0A64  3064               	movlw	100
 15177  0A65  0141               	movlb	1	; select bank1
 15178  0A66  00E9               	movwf	_incInterval^(0+128)
 15179  0A67  3000               	movlw	0
 15180  0A68  00EA               	movwf	(_incInterval^(0+128)+1)
 15181                           
 15182                           ;controller.c: 478:     } else {
 15183  0A69  0008               	return
 15184  0A6A                     __end_of_CONTROL_DMX:	
 15185                           
 15186                           	psect	text34
 15187  1F17                     __ptext34:	
 15188 ;; *************** function _LED_task_MANUAL *****************
 15189 ;; Defined at:
 15190 ;;		line 95 in file "led.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;		None
 15193 ;; Auto vars:     Size  Location     Type
 15194 ;;		None
 15195 ;; Return value:  Size  Location     Type
 15196 ;;                  1    wreg      void 
 15197 ;; Registers used:
 15198 ;;		wreg, status,2, status,0, pclath, cstack
 15199 ;; Tracked objects:
 15200 ;;		On entry : 0/0
 15201 ;;		On exit  : 0/0
 15202 ;;		Unchanged: 0/0
 15203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15208 ;;Total ram usage:        0 bytes
 15209 ;; Hardware stack levels used:    1
 15210 ;; Hardware stack levels required when called:    7
 15211 ;; This function calls:
 15212 ;;		_LED_setColor
 15213 ;; This function is called by:
 15214 ;;		_CONTROLLER_init
 15215 ;;		_LED_task
 15216 ;;		_CONTROLLER_task
 15217 ;; This function uses a non-reentrant model
 15218 ;;
 15219                           
 15220                           
 15221                           ;psect for function _LED_task_MANUAL
 15222  1F17                     _LED_task_MANUAL:	
 15223                           
 15224                           ;led.c: 96:     LED_setColor(manualColor);
 15225                           
 15226                           ;incstack = 0
 15227                           ; Regs used in _LED_task_MANUAL: [wreg+status,2+status,0+pclath+cstack]
 15228  1F17  0141               	movlb	1	; select bank1
 15229  1F18  0828               	movf	(_manualColor+3)^(0+128),w
 15230  1F19  00D5               	movwf	(LED_setColor@input+3)^(0+128)
 15231  1F1A  0827               	movf	(_manualColor+2)^(0+128),w
 15232  1F1B  00D4               	movwf	(LED_setColor@input+2)^(0+128)
 15233  1F1C  0826               	movf	(_manualColor+1)^(0+128),w
 15234  1F1D  00D3               	movwf	(LED_setColor@input+1)^(0+128)
 15235  1F1E  0825               	movf	_manualColor^(0+128),w
 15236  1F1F  00D2               	movwf	LED_setColor@input^(0+128)
 15237  1F20  3185  25E3         	fcall	_LED_setColor
 15238  1F22  0008               	return
 15239  1F23                     __end_of_LED_task_MANUAL:	
 15240                           
 15241                           	psect	text35
 15242  1683                     __ptext35:	
 15243 ;; *************** function _beatColorCreator *****************
 15244 ;; Defined at:
 15245 ;;		line 180 in file "led.c"
 15246 ;; Parameters:    Size  Location     Type
 15247 ;;  inRed           1    wreg     _Bool 
 15248 ;;  inGreen         1    0[BANK1 ] _Bool 
 15249 ;;  inBlue          1    1[BANK1 ] _Bool 
 15250 ;;  inWhite         1    2[BANK1 ] _Bool 
 15251 ;; Auto vars:     Size  Location     Type
 15252 ;;  inRed           1    4[BANK1 ] _Bool 
 15253 ;;  tempColor       4    5[BANK1 ] struct .
 15254 ;; Return value:  Size  Location     Type
 15255 ;;                  4    0[BANK1 ] struct .
 15256 ;; Registers used:
 15257 ;;		wreg, status,2, status,0, pclath, cstack
 15258 ;; Tracked objects:
 15259 ;;		On entry : 0/0
 15260 ;;		On exit  : 0/0
 15261 ;;		Unchanged: 0/0
 15262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15263 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15264 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15266 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15267 ;;Total ram usage:       10 bytes
 15268 ;; Hardware stack levels used:    1
 15269 ;; Hardware stack levels required when called:    6
 15270 ;; This function calls:
 15271 ;;		___fltol
 15272 ;;		_beatBrightnessCalculation
 15273 ;; This function is called by:
 15274 ;;		_LED_task
 15275 ;;		_LED_task_BEAT_STROBE
 15276 ;; This function uses a non-reentrant model
 15277 ;;
 15278                           
 15279                           
 15280                           ;psect for function _beatColorCreator
 15281  1683                     _beatColorCreator:	
 15282                           
 15283                           ;incstack = 0
 15284                           ; Regs used in _beatColorCreator: [wreg+status,2+status,0+pclath+cstack]
 15285                           ;beatColorCreator@inRed stored from wreg
 15286  1683  0141               	movlb	1	; select bank1
 15287  1684  00CD               	movwf	beatColorCreator@inRed^(0+128)
 15288                           
 15289                           ;led.c: 181:     color_t tempColor;;led.c: 183:     if(inRed)
 15290  1685  084D               	movf	beatColorCreator@inRed^(0+128),w
 15291  1686  1903               	btfsc	3,2
 15292  1687  2E9E               	goto	l7717
 15293                           
 15294                           ;led.c: 184:         tempColor.red = beatBrightnessCalculation();
 15295  1688  3190  2045  3196   	fcall	_beatBrightnessCalculation
 15296  168B  0140               	movlb	0	; select bank0
 15297  168C  0831               	movf	?_beatBrightnessCalculation+3,w
 15298  168D  00E5               	movwf	___fltol@f1+3
 15299  168E  0830               	movf	?_beatBrightnessCalculation+2,w
 15300  168F  00E4               	movwf	___fltol@f1+2
 15301  1690  082F               	movf	?_beatBrightnessCalculation+1,w
 15302  1691  00E3               	movwf	___fltol@f1+1
 15303  1692  082E               	movf	?_beatBrightnessCalculation,w
 15304  1693  00E2               	movwf	___fltol@f1
 15305  1694  3188  200B  3196   	fcall	___fltol
 15306  1697  0140               	movlb	0	; select bank0
 15307  1698  0862               	movf	?___fltol,w
 15308  1699  00ED               	movwf	??_beatColorCreator
 15309  169A  086D               	movf	??_beatColorCreator,w
 15310  169B  0141               	movlb	1	; select bank1
 15311  169C  00CF               	movwf	(beatColorCreator@tempColor^(0+128)+1)
 15312  169D  2E9F               	goto	l7719
 15313  169E                     l7717:	
 15314                           
 15315                           ;led.c: 186:         tempColor.red = 0;
 15316  169E  01CF               	clrf	(beatColorCreator@tempColor^(0+128)+1)
 15317  169F                     l7719:	
 15318                           
 15319                           ;led.c: 188:     if(inBlue)
 15320  169F  084A               	movf	beatColorCreator@inBlue^(0+128),w
 15321  16A0  1903               	btfsc	3,2
 15322  16A1  2EB8               	goto	l7723
 15323                           
 15324                           ;led.c: 189:         tempColor.blue = beatBrightnessCalculation();
 15325  16A2  3190  2045  3196   	fcall	_beatBrightnessCalculation
 15326  16A5  0140               	movlb	0	; select bank0
 15327  16A6  0831               	movf	?_beatBrightnessCalculation+3,w
 15328  16A7  00E5               	movwf	___fltol@f1+3
 15329  16A8  0830               	movf	?_beatBrightnessCalculation+2,w
 15330  16A9  00E4               	movwf	___fltol@f1+2
 15331  16AA  082F               	movf	?_beatBrightnessCalculation+1,w
 15332  16AB  00E3               	movwf	___fltol@f1+1
 15333  16AC  082E               	movf	?_beatBrightnessCalculation,w
 15334  16AD  00E2               	movwf	___fltol@f1
 15335  16AE  3188  200B  3196   	fcall	___fltol
 15336  16B1  0140               	movlb	0	; select bank0
 15337  16B2  0862               	movf	?___fltol,w
 15338  16B3  00ED               	movwf	??_beatColorCreator
 15339  16B4  086D               	movf	??_beatColorCreator,w
 15340  16B5  0141               	movlb	1	; select bank1
 15341  16B6  00D1               	movwf	(beatColorCreator@tempColor^(0+128)+3)
 15342  16B7  2EB9               	goto	l7725
 15343  16B8                     l7723:	
 15344                           
 15345                           ;led.c: 191:         tempColor.blue = 0;
 15346  16B8  01D1               	clrf	(beatColorCreator@tempColor^(0+128)+3)
 15347  16B9                     l7725:	
 15348                           
 15349                           ;led.c: 193:     if(inGreen)
 15350  16B9  0849               	movf	beatColorCreator@inGreen^(0+128),w
 15351  16BA  1903               	btfsc	3,2
 15352  16BB  2ED2               	goto	l7729
 15353                           
 15354                           ;led.c: 194:         tempColor.green = beatBrightnessCalculation();
 15355  16BC  3190  2045  3196   	fcall	_beatBrightnessCalculation
 15356  16BF  0140               	movlb	0	; select bank0
 15357  16C0  0831               	movf	?_beatBrightnessCalculation+3,w
 15358  16C1  00E5               	movwf	___fltol@f1+3
 15359  16C2  0830               	movf	?_beatBrightnessCalculation+2,w
 15360  16C3  00E4               	movwf	___fltol@f1+2
 15361  16C4  082F               	movf	?_beatBrightnessCalculation+1,w
 15362  16C5  00E3               	movwf	___fltol@f1+1
 15363  16C6  082E               	movf	?_beatBrightnessCalculation,w
 15364  16C7  00E2               	movwf	___fltol@f1
 15365  16C8  3188  200B  3196   	fcall	___fltol
 15366  16CB  0140               	movlb	0	; select bank0
 15367  16CC  0862               	movf	?___fltol,w
 15368  16CD  00ED               	movwf	??_beatColorCreator
 15369  16CE  086D               	movf	??_beatColorCreator,w
 15370  16CF  0141               	movlb	1	; select bank1
 15371  16D0  00D0               	movwf	(beatColorCreator@tempColor^(0+128)+2)
 15372  16D1  2ED3               	goto	l7731
 15373  16D2                     l7729:	
 15374                           
 15375                           ;led.c: 196:         tempColor.green = 0;
 15376  16D2  01D0               	clrf	(beatColorCreator@tempColor^(0+128)+2)
 15377  16D3                     l7731:	
 15378                           
 15379                           ;led.c: 198:     if(inWhite)
 15380  16D3  084B               	movf	beatColorCreator@inWhite^(0+128),w
 15381  16D4  1903               	btfsc	3,2
 15382  16D5  2EEC               	goto	l7735
 15383                           
 15384                           ;led.c: 199:         tempColor.white = beatBrightnessCalculation();
 15385  16D6  3190  2045  3196   	fcall	_beatBrightnessCalculation
 15386  16D9  0140               	movlb	0	; select bank0
 15387  16DA  0831               	movf	?_beatBrightnessCalculation+3,w
 15388  16DB  00E5               	movwf	___fltol@f1+3
 15389  16DC  0830               	movf	?_beatBrightnessCalculation+2,w
 15390  16DD  00E4               	movwf	___fltol@f1+2
 15391  16DE  082F               	movf	?_beatBrightnessCalculation+1,w
 15392  16DF  00E3               	movwf	___fltol@f1+1
 15393  16E0  082E               	movf	?_beatBrightnessCalculation,w
 15394  16E1  00E2               	movwf	___fltol@f1
 15395  16E2  3188  200B  3196   	fcall	___fltol
 15396  16E5  0140               	movlb	0	; select bank0
 15397  16E6  0862               	movf	?___fltol,w
 15398  16E7  00ED               	movwf	??_beatColorCreator
 15399  16E8  086D               	movf	??_beatColorCreator,w
 15400  16E9  0141               	movlb	1	; select bank1
 15401  16EA  00CE               	movwf	beatColorCreator@tempColor^(0+128)
 15402  16EB  2EED               	goto	l7737
 15403  16EC                     l7735:	
 15404                           
 15405                           ;led.c: 201:         tempColor.white = 0;
 15406  16EC  01CE               	clrf	beatColorCreator@tempColor^(0+128)
 15407  16ED                     l7737:	
 15408                           
 15409                           ;led.c: 203:     return tempColor;
 15410  16ED  0851               	movf	(beatColorCreator@tempColor+3)^(0+128),w
 15411  16EE  00CC               	movwf	(?_beatColorCreator+3)^(0+128)
 15412  16EF  0850               	movf	(beatColorCreator@tempColor+2)^(0+128),w
 15413  16F0  00CB               	movwf	(?_beatColorCreator+2)^(0+128)
 15414  16F1  084F               	movf	(beatColorCreator@tempColor+1)^(0+128),w
 15415  16F2  00CA               	movwf	(?_beatColorCreator+1)^(0+128)
 15416  16F3  084E               	movf	beatColorCreator@tempColor^(0+128),w
 15417  16F4  00C9               	movwf	?_beatColorCreator^(0+128)
 15418  16F5  0008               	return
 15419  16F6                     __end_of_beatColorCreator:	
 15420                           
 15421                           	psect	text36
 15422  1045                     __ptext36:	
 15423 ;; *************** function _beatBrightnessCalculation *****************
 15424 ;; Defined at:
 15425 ;;		line 165 in file "led.c"
 15426 ;; Parameters:    Size  Location     Type
 15427 ;;		None
 15428 ;; Auto vars:     Size  Location     Type
 15429 ;;  temp            1    0        unsigned char 
 15430 ;; Return value:  Size  Location     Type
 15431 ;;                  4   14[BANK0 ] float 
 15432 ;; Registers used:
 15433 ;;		wreg, status,2, status,0, pclath, cstack
 15434 ;; Tracked objects:
 15435 ;;		On entry : 0/0
 15436 ;;		On exit  : 0/0
 15437 ;;		Unchanged: 0/0
 15438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15442 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15443 ;;Total ram usage:        5 bytes
 15444 ;; Hardware stack levels used:    1
 15445 ;; Hardware stack levels required when called:    5
 15446 ;; This function calls:
 15447 ;;		___xxtofl
 15448 ;; This function is called by:
 15449 ;;		_beatColorCreator
 15450 ;; This function uses a non-reentrant model
 15451 ;;
 15452                           
 15453                           
 15454                           ;psect for function _beatBrightnessCalculation
 15455  1045                     _beatBrightnessCalculation:	
 15456                           
 15457                           ;led.c: 167:     return temp;
 15458                           
 15459                           ;incstack = 0
 15460                           ; Regs used in _beatBrightnessCalculation: [wreg+status,2+status,0+pclath+cstack]
 15461  1045  3000               	movlw	0
 15462  1046  0140               	movlb	0	; select bank0
 15463  1047  00A3               	movwf	___xxtofl@val+3
 15464  1048  3000               	movlw	0
 15465  1049  00A2               	movwf	___xxtofl@val+2
 15466  104A  3000               	movlw	0
 15467  104B  00A1               	movwf	___xxtofl@val+1
 15468  104C  308D               	movlw	141
 15469  104D  00A0               	movwf	___xxtofl@val
 15470  104E  3000               	movlw	0
 15471  104F  3197  276A         	fcall	___xxtofl
 15472  1051  0140               	movlb	0	; select bank0
 15473  1052  0823               	movf	?___xxtofl+3,w
 15474  1053  00B1               	movwf	?_beatBrightnessCalculation+3
 15475  1054  0822               	movf	?___xxtofl+2,w
 15476  1055  00B0               	movwf	?_beatBrightnessCalculation+2
 15477  1056  0821               	movf	?___xxtofl+1,w
 15478  1057  00AF               	movwf	?_beatBrightnessCalculation+1
 15479  1058  0820               	movf	?___xxtofl,w
 15480  1059  00AE               	movwf	?_beatBrightnessCalculation
 15481  105A  0008               	return
 15482  105B                     __end_of_beatBrightnessCalculation:	
 15483                           
 15484                           	psect	text37
 15485  16F6                     __ptext37:	
 15486 ;; *************** function _TM1650_fastPrintNum_2digit *****************
 15487 ;; Defined at:
 15488 ;;		line 136 in file "tm1650.c"
 15489 ;; Parameters:    Size  Location     Type
 15490 ;;  num             1    wreg     unsigned char 
 15491 ;; Auto vars:     Size  Location     Type
 15492 ;;  num             1   25[BANK0 ] unsigned char 
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  1    wreg      void 
 15495 ;; Registers used:
 15496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15497 ;; Tracked objects:
 15498 ;;		On entry : 0/0
 15499 ;;		On exit  : 0/0
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15504 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15505 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15506 ;;Total ram usage:        4 bytes
 15507 ;; Hardware stack levels used:    1
 15508 ;; Hardware stack levels required when called:    8
 15509 ;; This function calls:
 15510 ;;		___awdiv
 15511 ;;		___awmod
 15512 ;;		_writeData
 15513 ;; This function is called by:
 15514 ;;		_LED_task_BEAT_STROBE
 15515 ;; This function uses a non-reentrant model
 15516 ;;
 15517                           
 15518                           
 15519                           ;psect for function _TM1650_fastPrintNum_2digit
 15520  16F6                     _TM1650_fastPrintNum_2digit:	
 15521                           
 15522                           ;incstack = 0
 15523                           ; Regs used in _TM1650_fastPrintNum_2digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15524                           ;TM1650_fastPrintNum_2digit@num stored from wreg
 15525  16F6  0140               	movlb	0	; select bank0
 15526  16F7  00B9               	movwf	TM1650_fastPrintNum_2digit@num
 15527                           
 15528                           ;tm1650.c: 138:     if(num > 99){
 15529  16F8  3064               	movlw	100
 15530  16F9  0239               	subwf	TM1650_fastPrintNum_2digit@num,w
 15531  16FA  1C03               	skipc
 15532  16FB  2F1F               	goto	l7695
 15533                           
 15534                           ;tm1650.c: 139:         writeData(0x34, 0x79);
 15535  16FC  3079               	movlw	121
 15536  16FD  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 15537  16FE  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 15538  16FF  00B0               	movwf	writeData@data
 15539  1700  3034               	movlw	52
 15540  1701  3190  20D8  3196   	fcall	_writeData
 15541                           
 15542                           ;tm1650.c: 140:         writeData(0x35, 0x79);
 15543  1704  3079               	movlw	121
 15544  1705  0140               	movlb	0	; select bank0
 15545  1706  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 15546  1707  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 15547  1708  00B0               	movwf	writeData@data
 15548  1709  3035               	movlw	53
 15549  170A  3190  20D8  3196   	fcall	_writeData
 15550                           
 15551                           ;tm1650.c: 141:         writeData(0x36, 0x79);
 15552  170D  3079               	movlw	121
 15553  170E  0140               	movlb	0	; select bank0
 15554  170F  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 15555  1710  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 15556  1711  00B0               	movwf	writeData@data
 15557  1712  3036               	movlw	54
 15558  1713  3190  20D8  3196   	fcall	_writeData
 15559                           
 15560                           ;tm1650.c: 142:         writeData(0x37, 0x79);
 15561  1716  3079               	movlw	121
 15562  1717  0140               	movlb	0	; select bank0
 15563  1718  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 15564  1719  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 15565  171A  00B0               	movwf	writeData@data
 15566  171B  3037               	movlw	55
 15567  171C  3190  20D8         	fcall	_writeData
 15568  171E  0008               	return
 15569  171F                     l7695:	
 15570                           
 15571                           ;tm1650.c: 146:     writeData(0x37, charTable[(num % 10) + 16]);
 15572  171F  300A               	movlw	10
 15573  1720  00A9               	movwf	___awmod@divisor
 15574  1721  3000               	movlw	0
 15575  1722  00AA               	movwf	___awmod@divisor+1
 15576  1723  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 15577  1724  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 15578  1725  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 15579  1726  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 15580  1727  00AB               	movwf	___awmod@dividend
 15581  1728  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 15582  1729  00AC               	movwf	___awmod@dividend+1
 15583  172A  3194  2492  3196   	fcall	___awmod
 15584  172D  0140               	movlb	0	; select bank0
 15585  172E  082A               	movf	?___awmod+1,w
 15586  172F  0085               	movwf	5
 15587  1730  0829               	movf	?___awmod,w
 15588  1731  0084               	movwf	4
 15589  1732  3010               	movlw	low ((_charTable+16)| (0+32768))
 15590  1733  0784               	addwf	4,f
 15591  1734  3098               	movlw	high ((_charTable+16)| (0+32768))
 15592  1735  3D85               	addwfc	5,f
 15593  1736  0800               	movf	0,w	;code access
 15594  1737  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 15595  1738  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 15596  1739  00B0               	movwf	writeData@data
 15597  173A  3037               	movlw	55
 15598  173B  3190  20D8  3196   	fcall	_writeData
 15599                           
 15600                           ;tm1650.c: 147:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 15601  173E  300A               	movlw	10
 15602  173F  0140               	movlb	0	; select bank0
 15603  1740  00A9               	movwf	___awmod@divisor
 15604  1741  3000               	movlw	0
 15605  1742  00AA               	movwf	___awmod@divisor+1
 15606  1743  300A               	movlw	10
 15607  1744  00A0               	movwf	___awdiv@divisor
 15608  1745  3000               	movlw	0
 15609  1746  00A1               	movwf	___awdiv@divisor+1
 15610  1747  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 15611  1748  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 15612  1749  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 15613  174A  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 15614  174B  00A2               	movwf	___awdiv@dividend
 15615  174C  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 15616  174D  00A3               	movwf	___awdiv@dividend+1
 15617  174E  3195  2526  3196   	fcall	___awdiv
 15618  1751  0140               	movlb	0	; select bank0
 15619  1752  0821               	movf	?___awdiv+1,w
 15620  1753  00AC               	movwf	___awmod@dividend+1
 15621  1754  0820               	movf	?___awdiv,w
 15622  1755  00AB               	movwf	___awmod@dividend
 15623  1756  3194  2492  3196   	fcall	___awmod
 15624  1759  0140               	movlb	0	; select bank0
 15625  175A  082A               	movf	?___awmod+1,w
 15626  175B  0085               	movwf	5
 15627  175C  0829               	movf	?___awmod,w
 15628  175D  0084               	movwf	4
 15629  175E  3010               	movlw	low ((_charTable+16)| (0+32768))
 15630  175F  0784               	addwf	4,f
 15631  1760  3098               	movlw	high ((_charTable+16)| (0+32768))
 15632  1761  3D85               	addwfc	5,f
 15633  1762  0800               	movf	0,w	;code access
 15634  1763  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 15635  1764  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 15636  1765  00B0               	movwf	writeData@data
 15637  1766  3036               	movlw	54
 15638  1767  3190  20D8         	fcall	_writeData
 15639  1769  0008               	return
 15640  176A                     __end_of_TM1650_fastPrintNum_2digit:	
 15641                           
 15642                           	psect	text38
 15643  1492                     __ptext38:	
 15644 ;; *************** function ___awmod *****************
 15645 ;; Defined at:
 15646 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 15647 ;; Parameters:    Size  Location     Type
 15648 ;;  divisor         2    9[BANK0 ] int 
 15649 ;;  dividend        2   11[BANK0 ] int 
 15650 ;; Auto vars:     Size  Location     Type
 15651 ;;  sign            1   15[BANK0 ] unsigned char 
 15652 ;;  counter         1   14[BANK0 ] unsigned char 
 15653 ;; Return value:  Size  Location     Type
 15654 ;;                  2    9[BANK0 ] int 
 15655 ;; Registers used:
 15656 ;;		wreg, status,2, status,0
 15657 ;; Tracked objects:
 15658 ;;		On entry : 0/0
 15659 ;;		On exit  : 0/0
 15660 ;;		Unchanged: 0/0
 15661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15662 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15663 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15665 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15666 ;;Total ram usage:        7 bytes
 15667 ;; Hardware stack levels used:    1
 15668 ;; Hardware stack levels required when called:    4
 15669 ;; This function calls:
 15670 ;;		Nothing
 15671 ;; This function is called by:
 15672 ;;		_TM1650_fastPrintNum_2digit
 15673 ;; This function uses a non-reentrant model
 15674 ;;
 15675                           
 15676                           
 15677                           ;psect for function ___awmod
 15678  1492                     ___awmod:	
 15679                           
 15680                           ;incstack = 0
 15681                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 15682  1492  0140               	movlb	0	; select bank0
 15683  1493  01AF               	clrf	___awmod@sign
 15684  1494  1FAC               	btfss	___awmod@dividend+1,7
 15685  1495  2C9D               	goto	l7229
 15686  1496  09AB               	comf	___awmod@dividend,f
 15687  1497  09AC               	comf	___awmod@dividend+1,f
 15688  1498  0AAB               	incf	___awmod@dividend,f
 15689  1499  1903               	skipnz
 15690  149A  0AAC               	incf	___awmod@dividend+1,f
 15691  149B  01AF               	clrf	___awmod@sign
 15692  149C  0AAF               	incf	___awmod@sign,f
 15693  149D                     l7229:	
 15694  149D  1FAA               	btfss	___awmod@divisor+1,7
 15695  149E  2CA4               	goto	l7233
 15696  149F  09A9               	comf	___awmod@divisor,f
 15697  14A0  09AA               	comf	___awmod@divisor+1,f
 15698  14A1  0AA9               	incf	___awmod@divisor,f
 15699  14A2  1903               	skipnz
 15700  14A3  0AAA               	incf	___awmod@divisor+1,f
 15701  14A4                     l7233:	
 15702  14A4  0829               	movf	___awmod@divisor,w
 15703  14A5  042A               	iorwf	___awmod@divisor+1,w
 15704  14A6  1903               	btfsc	3,2
 15705  14A7  2CCB               	goto	l7251
 15706  14A8  01AE               	clrf	___awmod@counter
 15707  14A9  0AAE               	incf	___awmod@counter,f
 15708  14AA                     l7241:	
 15709  14AA  1BAA               	btfsc	___awmod@divisor+1,7
 15710  14AB  2CB6               	goto	l7243
 15711  14AC  3001               	movlw	1
 15712  14AD                     u6795:	
 15713  14AD  35A9               	lslf	___awmod@divisor,f
 15714  14AE  0DAA               	rlf	___awmod@divisor+1,f
 15715  14AF  0B89               	decfsz	9,f
 15716  14B0  2CAD               	goto	u6795
 15717  14B1  3001               	movlw	1
 15718  14B2  00AD               	movwf	??___awmod
 15719  14B3  082D               	movf	??___awmod,w
 15720  14B4  07AE               	addwf	___awmod@counter,f
 15721  14B5  2CAA               	goto	l7241
 15722  14B6                     l7243:	
 15723  14B6  082A               	movf	___awmod@divisor+1,w
 15724  14B7  022C               	subwf	___awmod@dividend+1,w
 15725  14B8  1D03               	skipz
 15726  14B9  2CBC               	goto	u6815
 15727  14BA  0829               	movf	___awmod@divisor,w
 15728  14BB  022B               	subwf	___awmod@dividend,w
 15729  14BC                     u6815:	
 15730  14BC  1C03               	skipc
 15731  14BD  2CC2               	goto	l7247
 15732  14BE  0829               	movf	___awmod@divisor,w
 15733  14BF  02AB               	subwf	___awmod@dividend,f
 15734  14C0  082A               	movf	___awmod@divisor+1,w
 15735  14C1  3BAC               	subwfb	___awmod@dividend+1,f
 15736  14C2                     l7247:	
 15737  14C2  3001               	movlw	1
 15738  14C3                     u6825:	
 15739  14C3  36AA               	lsrf	___awmod@divisor+1,f
 15740  14C4  0CA9               	rrf	___awmod@divisor,f
 15741  14C5  0B89               	decfsz	9,f
 15742  14C6  2CC3               	goto	u6825
 15743  14C7  3001               	movlw	1
 15744  14C8  02AE               	subwf	___awmod@counter,f
 15745  14C9  1D03               	btfss	3,2
 15746  14CA  2CB6               	goto	l7243
 15747  14CB                     l7251:	
 15748  14CB  082F               	movf	___awmod@sign,w
 15749  14CC  1903               	btfsc	3,2
 15750  14CD  2CD3               	goto	l7255
 15751  14CE  09AB               	comf	___awmod@dividend,f
 15752  14CF  09AC               	comf	___awmod@dividend+1,f
 15753  14D0  0AAB               	incf	___awmod@dividend,f
 15754  14D1  1903               	skipnz
 15755  14D2  0AAC               	incf	___awmod@dividend+1,f
 15756  14D3                     l7255:	
 15757  14D3  082C               	movf	___awmod@dividend+1,w
 15758  14D4  00AA               	movwf	?___awmod+1
 15759  14D5  082B               	movf	___awmod@dividend,w
 15760  14D6  00A9               	movwf	?___awmod
 15761  14D7  0008               	return
 15762  14D8                     __end_of___awmod:	
 15763                           
 15764                           	psect	text39
 15765  1526                     __ptext39:	
 15766 ;; *************** function ___awdiv *****************
 15767 ;; Defined at:
 15768 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 15769 ;; Parameters:    Size  Location     Type
 15770 ;;  divisor         2    0[BANK0 ] int 
 15771 ;;  dividend        2    2[BANK0 ] int 
 15772 ;; Auto vars:     Size  Location     Type
 15773 ;;  quotient        2    7[BANK0 ] int 
 15774 ;;  sign            1    6[BANK0 ] unsigned char 
 15775 ;;  counter         1    5[BANK0 ] unsigned char 
 15776 ;; Return value:  Size  Location     Type
 15777 ;;                  2    0[BANK0 ] int 
 15778 ;; Registers used:
 15779 ;;		wreg, status,2, status,0
 15780 ;; Tracked objects:
 15781 ;;		On entry : 0/0
 15782 ;;		On exit  : 0/0
 15783 ;;		Unchanged: 0/0
 15784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15785 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15786 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15788 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15789 ;;Total ram usage:        9 bytes
 15790 ;; Hardware stack levels used:    1
 15791 ;; Hardware stack levels required when called:    4
 15792 ;; This function calls:
 15793 ;;		Nothing
 15794 ;; This function is called by:
 15795 ;;		_TM1650_fastPrintNum_2digit
 15796 ;; This function uses a non-reentrant model
 15797 ;;
 15798                           
 15799                           
 15800                           ;psect for function ___awdiv
 15801  1526                     ___awdiv:	
 15802                           
 15803                           ;incstack = 0
 15804                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 15805  1526  0140               	movlb	0	; select bank0
 15806  1527  01A6               	clrf	___awdiv@sign
 15807  1528  1FA1               	btfss	___awdiv@divisor+1,7
 15808  1529  2D31               	goto	l7185
 15809  152A  09A0               	comf	___awdiv@divisor,f
 15810  152B  09A1               	comf	___awdiv@divisor+1,f
 15811  152C  0AA0               	incf	___awdiv@divisor,f
 15812  152D  1903               	skipnz
 15813  152E  0AA1               	incf	___awdiv@divisor+1,f
 15814  152F  01A6               	clrf	___awdiv@sign
 15815  1530  0AA6               	incf	___awdiv@sign,f
 15816  1531                     l7185:	
 15817  1531  1FA3               	btfss	___awdiv@dividend+1,7
 15818  1532  2D3C               	goto	l7191
 15819  1533  09A2               	comf	___awdiv@dividend,f
 15820  1534  09A3               	comf	___awdiv@dividend+1,f
 15821  1535  0AA2               	incf	___awdiv@dividend,f
 15822  1536  1903               	skipnz
 15823  1537  0AA3               	incf	___awdiv@dividend+1,f
 15824  1538  3001               	movlw	1
 15825  1539  00A4               	movwf	??___awdiv
 15826  153A  0824               	movf	??___awdiv,w
 15827  153B  06A6               	xorwf	___awdiv@sign,f
 15828  153C                     l7191:	
 15829  153C  01A7               	clrf	___awdiv@quotient
 15830  153D  01A8               	clrf	___awdiv@quotient+1
 15831  153E  0820               	movf	___awdiv@divisor,w
 15832  153F  0421               	iorwf	___awdiv@divisor+1,w
 15833  1540  1903               	btfsc	3,2
 15834  1541  2D6B               	goto	l7213
 15835  1542  01A5               	clrf	___awdiv@counter
 15836  1543  0AA5               	incf	___awdiv@counter,f
 15837  1544                     l7201:	
 15838  1544  1BA1               	btfsc	___awdiv@divisor+1,7
 15839  1545  2D50               	goto	l7203
 15840  1546  3001               	movlw	1
 15841  1547                     u6695:	
 15842  1547  35A0               	lslf	___awdiv@divisor,f
 15843  1548  0DA1               	rlf	___awdiv@divisor+1,f
 15844  1549  0B89               	decfsz	9,f
 15845  154A  2D47               	goto	u6695
 15846  154B  3001               	movlw	1
 15847  154C  00A4               	movwf	??___awdiv
 15848  154D  0824               	movf	??___awdiv,w
 15849  154E  07A5               	addwf	___awdiv@counter,f
 15850  154F  2D44               	goto	l7201
 15851  1550                     l7203:	
 15852  1550  3001               	movlw	1
 15853  1551                     u6715:	
 15854  1551  35A7               	lslf	___awdiv@quotient,f
 15855  1552  0DA8               	rlf	___awdiv@quotient+1,f
 15856  1553  0B89               	decfsz	9,f
 15857  1554  2D51               	goto	u6715
 15858  1555  0821               	movf	___awdiv@divisor+1,w
 15859  1556  0223               	subwf	___awdiv@dividend+1,w
 15860  1557  1D03               	skipz
 15861  1558  2D5B               	goto	u6725
 15862  1559  0820               	movf	___awdiv@divisor,w
 15863  155A  0222               	subwf	___awdiv@dividend,w
 15864  155B                     u6725:	
 15865  155B  1C03               	skipc
 15866  155C  2D62               	goto	l7209
 15867  155D  0820               	movf	___awdiv@divisor,w
 15868  155E  02A2               	subwf	___awdiv@dividend,f
 15869  155F  0821               	movf	___awdiv@divisor+1,w
 15870  1560  3BA3               	subwfb	___awdiv@dividend+1,f
 15871  1561  1427               	bsf	___awdiv@quotient,0
 15872  1562                     l7209:	
 15873  1562  3001               	movlw	1
 15874  1563                     u6735:	
 15875  1563  36A1               	lsrf	___awdiv@divisor+1,f
 15876  1564  0CA0               	rrf	___awdiv@divisor,f
 15877  1565  0B89               	decfsz	9,f
 15878  1566  2D63               	goto	u6735
 15879  1567  3001               	movlw	1
 15880  1568  02A5               	subwf	___awdiv@counter,f
 15881  1569  1D03               	btfss	3,2
 15882  156A  2D50               	goto	l7203
 15883  156B                     l7213:	
 15884  156B  0826               	movf	___awdiv@sign,w
 15885  156C  1903               	btfsc	3,2
 15886  156D  2D73               	goto	l7217
 15887  156E  09A7               	comf	___awdiv@quotient,f
 15888  156F  09A8               	comf	___awdiv@quotient+1,f
 15889  1570  0AA7               	incf	___awdiv@quotient,f
 15890  1571  1903               	skipnz
 15891  1572  0AA8               	incf	___awdiv@quotient+1,f
 15892  1573                     l7217:	
 15893  1573  0828               	movf	___awdiv@quotient+1,w
 15894  1574  00A1               	movwf	?___awdiv+1
 15895  1575  0827               	movf	___awdiv@quotient,w
 15896  1576  00A0               	movwf	?___awdiv
 15897  1577  0008               	return
 15898  1578                     __end_of___awdiv:	
 15899                           
 15900                           	psect	text40
 15901  05E3                     __ptext40:	
 15902 ;; *************** function _LED_setColor *****************
 15903 ;; Defined at:
 15904 ;;		line 26 in file "led.c"
 15905 ;; Parameters:    Size  Location     Type
 15906 ;;  input           4    9[BANK1 ] struct .
 15907 ;; Auto vars:     Size  Location     Type
 15908 ;;		None
 15909 ;; Return value:  Size  Location     Type
 15910 ;;                  1    wreg      void 
 15911 ;; Registers used:
 15912 ;;		wreg, status,2, status,0, pclath, cstack
 15913 ;; Tracked objects:
 15914 ;;		On entry : 0/0
 15915 ;;		On exit  : 0/0
 15916 ;;		Unchanged: 0/0
 15917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15918 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15920 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15921 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15922 ;;Total ram usage:        8 bytes
 15923 ;; Hardware stack levels used:    1
 15924 ;; Hardware stack levels required when called:    6
 15925 ;; This function calls:
 15926 ;;		_PWM1_LoadDutyValue
 15927 ;;		_PWM2_LoadDutyValue
 15928 ;;		_PWM3_LoadDutyValue
 15929 ;;		_PWM4_LoadDutyValue
 15930 ;;		___fldiv
 15931 ;;		___flmul
 15932 ;;		___fltol
 15933 ;;		___xxtofl
 15934 ;; This function is called by:
 15935 ;;		_LED_task_DMX
 15936 ;;		_LED_task
 15937 ;;		_LED_task_MANUAL
 15938 ;;		_LED_task_BEAT_STROBE
 15939 ;; This function uses a non-reentrant model
 15940 ;;
 15941                           
 15942                           
 15943                           ;psect for function _LED_setColor
 15944  05E3                     _LED_setColor:	
 15945                           
 15946                           ;led.c: 27:     if(!startup){
 15947                           
 15948                           ;incstack = 0
 15949                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 15950  05E3  0141               	movlb	1	; select bank1
 15951  05E4  086F               	movf	_startup^(0+128),w
 15952  05E5  1D03               	btfss	3,2
 15953  05E6  0008               	return
 15954                           
 15955                           ;led.c: 28:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 127 );
 15956  05E7  0853               	movf	(LED_setColor@input^(0+128)+1),w
 15957  05E8  00D6               	movwf	??_LED_setColor^(0+128)
 15958  05E9  01D7               	clrf	(??_LED_setColor^(0+128)+1)
 15959  05EA  01D8               	clrf	(??_LED_setColor^(0+128)+2)
 15960  05EB  01D9               	clrf	(??_LED_setColor^(0+128)+3)
 15961  05EC  0859               	movf	(??_LED_setColor+3)^(0+128),w
 15962  05ED  0140               	movlb	0	; select bank0
 15963  05EE  00A3               	movwf	___xxtofl@val+3
 15964  05EF  0141               	movlb	1	; select bank1
 15965  05F0  0858               	movf	(??_LED_setColor+2)^(0+128),w
 15966  05F1  0140               	movlb	0	; select bank0
 15967  05F2  00A2               	movwf	___xxtofl@val+2
 15968  05F3  0141               	movlb	1	; select bank1
 15969  05F4  0857               	movf	(??_LED_setColor+1)^(0+128),w
 15970  05F5  0140               	movlb	0	; select bank0
 15971  05F6  00A1               	movwf	___xxtofl@val+1
 15972  05F7  0141               	movlb	1	; select bank1
 15973  05F8  0856               	movf	??_LED_setColor^(0+128),w
 15974  05F9  0140               	movlb	0	; select bank0
 15975  05FA  00A0               	movwf	___xxtofl@val
 15976  05FB  3001               	movlw	1
 15977  05FC  3197  276A  3185   	fcall	___xxtofl
 15978  05FF  0140               	movlb	0	; select bank0
 15979  0600  0823               	movf	?___xxtofl+3,w
 15980  0601  00B5               	movwf	___fldiv@b+3
 15981  0602  0822               	movf	?___xxtofl+2,w
 15982  0603  00B4               	movwf	___fldiv@b+2
 15983  0604  0821               	movf	?___xxtofl+1,w
 15984  0605  00B3               	movwf	___fldiv@b+1
 15985  0606  0820               	movf	?___xxtofl,w
 15986  0607  00B2               	movwf	___fldiv@b
 15987  0608  3043               	movlw	67
 15988  0609  00B1               	movwf	___fldiv@a+3
 15989  060A  307F               	movlw	127
 15990  060B  00B0               	movwf	___fldiv@a+2
 15991  060C  3000               	movlw	0
 15992  060D  00AF               	movwf	___fldiv@a+1
 15993  060E  3000               	movlw	0
 15994  060F  00AE               	movwf	___fldiv@a
 15995  0610  3184  2469  3185   	fcall	___fldiv
 15996  0613  0140               	movlb	0	; select bank0
 15997  0614  0831               	movf	?___fldiv+3,w
 15998  0615  00CF               	movwf	___flmul@a+3
 15999  0616  0830               	movf	?___fldiv+2,w
 16000  0617  00CE               	movwf	___flmul@a+2
 16001  0618  082F               	movf	?___fldiv+1,w
 16002  0619  00CD               	movwf	___flmul@a+1
 16003  061A  082E               	movf	?___fldiv,w
 16004  061B  00CC               	movwf	___flmul@a
 16005  061C  3042               	movlw	66
 16006  061D  00CB               	movwf	___flmul@b+3
 16007  061E  30FE               	movlw	254
 16008  061F  00CA               	movwf	___flmul@b+2
 16009  0620  3000               	movlw	0
 16010  0621  00C9               	movwf	___flmul@b+1
 16011  0622  3000               	movlw	0
 16012  0623  00C8               	movwf	___flmul@b
 16013  0624  3180  20A5  3185   	fcall	___flmul
 16014  0627  0140               	movlb	0	; select bank0
 16015  0628  084B               	movf	?___flmul+3,w
 16016  0629  00E5               	movwf	___fltol@f1+3
 16017  062A  084A               	movf	?___flmul+2,w
 16018  062B  00E4               	movwf	___fltol@f1+2
 16019  062C  0849               	movf	?___flmul+1,w
 16020  062D  00E3               	movwf	___fltol@f1+1
 16021  062E  0848               	movf	?___flmul,w
 16022  062F  00E2               	movwf	___fltol@f1
 16023  0630  3188  200B  3185   	fcall	___fltol
 16024  0633  0140               	movlb	0	; select bank0
 16025  0634  0863               	movf	?___fltol+1,w
 16026  0635  00EE               	movwf	PWM1_LoadDutyValue@dutyValue+1
 16027  0636  0862               	movf	?___fltol,w
 16028  0637  00ED               	movwf	PWM1_LoadDutyValue@dutyValue
 16029  0638  3190  20F5  3185   	fcall	_PWM1_LoadDutyValue
 16030                           
 16031                           ;led.c: 29:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 127 );
 16032  063B  0141               	movlb	1	; select bank1
 16033  063C  0854               	movf	(LED_setColor@input^(0+128)+2),w
 16034  063D  00D6               	movwf	??_LED_setColor^(0+128)
 16035  063E  01D7               	clrf	(??_LED_setColor^(0+128)+1)
 16036  063F  01D8               	clrf	(??_LED_setColor^(0+128)+2)
 16037  0640  01D9               	clrf	(??_LED_setColor^(0+128)+3)
 16038  0641  0859               	movf	(??_LED_setColor+3)^(0+128),w
 16039  0642  0140               	movlb	0	; select bank0
 16040  0643  00A3               	movwf	___xxtofl@val+3
 16041  0644  0141               	movlb	1	; select bank1
 16042  0645  0858               	movf	(??_LED_setColor+2)^(0+128),w
 16043  0646  0140               	movlb	0	; select bank0
 16044  0647  00A2               	movwf	___xxtofl@val+2
 16045  0648  0141               	movlb	1	; select bank1
 16046  0649  0857               	movf	(??_LED_setColor+1)^(0+128),w
 16047  064A  0140               	movlb	0	; select bank0
 16048  064B  00A1               	movwf	___xxtofl@val+1
 16049  064C  0141               	movlb	1	; select bank1
 16050  064D  0856               	movf	??_LED_setColor^(0+128),w
 16051  064E  0140               	movlb	0	; select bank0
 16052  064F  00A0               	movwf	___xxtofl@val
 16053  0650  3001               	movlw	1
 16054  0651  3197  276A  3185   	fcall	___xxtofl
 16055  0654  0140               	movlb	0	; select bank0
 16056  0655  0823               	movf	?___xxtofl+3,w
 16057  0656  00B5               	movwf	___fldiv@b+3
 16058  0657  0822               	movf	?___xxtofl+2,w
 16059  0658  00B4               	movwf	___fldiv@b+2
 16060  0659  0821               	movf	?___xxtofl+1,w
 16061  065A  00B3               	movwf	___fldiv@b+1
 16062  065B  0820               	movf	?___xxtofl,w
 16063  065C  00B2               	movwf	___fldiv@b
 16064  065D  3043               	movlw	67
 16065  065E  00B1               	movwf	___fldiv@a+3
 16066  065F  307F               	movlw	127
 16067  0660  00B0               	movwf	___fldiv@a+2
 16068  0661  3000               	movlw	0
 16069  0662  00AF               	movwf	___fldiv@a+1
 16070  0663  3000               	movlw	0
 16071  0664  00AE               	movwf	___fldiv@a
 16072  0665  3184  2469  3185   	fcall	___fldiv
 16073  0668  0140               	movlb	0	; select bank0
 16074  0669  0831               	movf	?___fldiv+3,w
 16075  066A  00CF               	movwf	___flmul@a+3
 16076  066B  0830               	movf	?___fldiv+2,w
 16077  066C  00CE               	movwf	___flmul@a+2
 16078  066D  082F               	movf	?___fldiv+1,w
 16079  066E  00CD               	movwf	___flmul@a+1
 16080  066F  082E               	movf	?___fldiv,w
 16081  0670  00CC               	movwf	___flmul@a
 16082  0671  3042               	movlw	66
 16083  0672  00CB               	movwf	___flmul@b+3
 16084  0673  30FE               	movlw	254
 16085  0674  00CA               	movwf	___flmul@b+2
 16086  0675  3000               	movlw	0
 16087  0676  00C9               	movwf	___flmul@b+1
 16088  0677  3000               	movlw	0
 16089  0678  00C8               	movwf	___flmul@b
 16090  0679  3180  20A5  3185   	fcall	___flmul
 16091  067C  0140               	movlb	0	; select bank0
 16092  067D  084B               	movf	?___flmul+3,w
 16093  067E  00E5               	movwf	___fltol@f1+3
 16094  067F  084A               	movf	?___flmul+2,w
 16095  0680  00E4               	movwf	___fltol@f1+2
 16096  0681  0849               	movf	?___flmul+1,w
 16097  0682  00E3               	movwf	___fltol@f1+1
 16098  0683  0848               	movf	?___flmul,w
 16099  0684  00E2               	movwf	___fltol@f1
 16100  0685  3188  200B  3185   	fcall	___fltol
 16101  0688  0140               	movlb	0	; select bank0
 16102  0689  0863               	movf	?___fltol+1,w
 16103  068A  00EE               	movwf	PWM2_LoadDutyValue@dutyValue+1
 16104  068B  0862               	movf	?___fltol,w
 16105  068C  00ED               	movwf	PWM2_LoadDutyValue@dutyValue
 16106  068D  3191  2113  3185   	fcall	_PWM2_LoadDutyValue
 16107                           
 16108                           ;led.c: 30:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 127 );
 16109  0690  0141               	movlb	1	; select bank1
 16110  0691  0855               	movf	(LED_setColor@input^(0+128)+3),w
 16111  0692  00D6               	movwf	??_LED_setColor^(0+128)
 16112  0693  01D7               	clrf	(??_LED_setColor^(0+128)+1)
 16113  0694  01D8               	clrf	(??_LED_setColor^(0+128)+2)
 16114  0695  01D9               	clrf	(??_LED_setColor^(0+128)+3)
 16115  0696  0859               	movf	(??_LED_setColor+3)^(0+128),w
 16116  0697  0140               	movlb	0	; select bank0
 16117  0698  00A3               	movwf	___xxtofl@val+3
 16118  0699  0141               	movlb	1	; select bank1
 16119  069A  0858               	movf	(??_LED_setColor+2)^(0+128),w
 16120  069B  0140               	movlb	0	; select bank0
 16121  069C  00A2               	movwf	___xxtofl@val+2
 16122  069D  0141               	movlb	1	; select bank1
 16123  069E  0857               	movf	(??_LED_setColor+1)^(0+128),w
 16124  069F  0140               	movlb	0	; select bank0
 16125  06A0  00A1               	movwf	___xxtofl@val+1
 16126  06A1  0141               	movlb	1	; select bank1
 16127  06A2  0856               	movf	??_LED_setColor^(0+128),w
 16128  06A3  0140               	movlb	0	; select bank0
 16129  06A4  00A0               	movwf	___xxtofl@val
 16130  06A5  3001               	movlw	1
 16131  06A6  3197  276A  3185   	fcall	___xxtofl
 16132  06A9  0140               	movlb	0	; select bank0
 16133  06AA  0823               	movf	?___xxtofl+3,w
 16134  06AB  00B5               	movwf	___fldiv@b+3
 16135  06AC  0822               	movf	?___xxtofl+2,w
 16136  06AD  00B4               	movwf	___fldiv@b+2
 16137  06AE  0821               	movf	?___xxtofl+1,w
 16138  06AF  00B3               	movwf	___fldiv@b+1
 16139  06B0  0820               	movf	?___xxtofl,w
 16140  06B1  00B2               	movwf	___fldiv@b
 16141  06B2  3043               	movlw	67
 16142  06B3  00B1               	movwf	___fldiv@a+3
 16143  06B4  307F               	movlw	127
 16144  06B5  00B0               	movwf	___fldiv@a+2
 16145  06B6  3000               	movlw	0
 16146  06B7  00AF               	movwf	___fldiv@a+1
 16147  06B8  3000               	movlw	0
 16148  06B9  00AE               	movwf	___fldiv@a
 16149  06BA  3184  2469  3185   	fcall	___fldiv
 16150  06BD  0140               	movlb	0	; select bank0
 16151  06BE  0831               	movf	?___fldiv+3,w
 16152  06BF  00CF               	movwf	___flmul@a+3
 16153  06C0  0830               	movf	?___fldiv+2,w
 16154  06C1  00CE               	movwf	___flmul@a+2
 16155  06C2  082F               	movf	?___fldiv+1,w
 16156  06C3  00CD               	movwf	___flmul@a+1
 16157  06C4  082E               	movf	?___fldiv,w
 16158  06C5  00CC               	movwf	___flmul@a
 16159  06C6  3042               	movlw	66
 16160  06C7  00CB               	movwf	___flmul@b+3
 16161  06C8  30FE               	movlw	254
 16162  06C9  00CA               	movwf	___flmul@b+2
 16163  06CA  3000               	movlw	0
 16164  06CB  00C9               	movwf	___flmul@b+1
 16165  06CC  3000               	movlw	0
 16166  06CD  00C8               	movwf	___flmul@b
 16167  06CE  3180  20A5  3185   	fcall	___flmul
 16168  06D1  0140               	movlb	0	; select bank0
 16169  06D2  084B               	movf	?___flmul+3,w
 16170  06D3  00E5               	movwf	___fltol@f1+3
 16171  06D4  084A               	movf	?___flmul+2,w
 16172  06D5  00E4               	movwf	___fltol@f1+2
 16173  06D6  0849               	movf	?___flmul+1,w
 16174  06D7  00E3               	movwf	___fltol@f1+1
 16175  06D8  0848               	movf	?___flmul,w
 16176  06D9  00E2               	movwf	___fltol@f1
 16177  06DA  3188  200B  3185   	fcall	___fltol
 16178  06DD  0140               	movlb	0	; select bank0
 16179  06DE  0863               	movf	?___fltol+1,w
 16180  06DF  00EE               	movwf	PWM3_LoadDutyValue@dutyValue+1
 16181  06E0  0862               	movf	?___fltol,w
 16182  06E1  00ED               	movwf	PWM3_LoadDutyValue@dutyValue
 16183  06E2  3191  2131  3185   	fcall	_PWM3_LoadDutyValue
 16184                           
 16185                           ;led.c: 31:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 127 );
 16186  06E5  0141               	movlb	1	; select bank1
 16187  06E6  0852               	movf	LED_setColor@input^(0+128),w
 16188  06E7  00D6               	movwf	??_LED_setColor^(0+128)
 16189  06E8  01D7               	clrf	(??_LED_setColor^(0+128)+1)
 16190  06E9  01D8               	clrf	(??_LED_setColor^(0+128)+2)
 16191  06EA  01D9               	clrf	(??_LED_setColor^(0+128)+3)
 16192  06EB  0859               	movf	(??_LED_setColor+3)^(0+128),w
 16193  06EC  0140               	movlb	0	; select bank0
 16194  06ED  00A3               	movwf	___xxtofl@val+3
 16195  06EE  0141               	movlb	1	; select bank1
 16196  06EF  0858               	movf	(??_LED_setColor+2)^(0+128),w
 16197  06F0  0140               	movlb	0	; select bank0
 16198  06F1  00A2               	movwf	___xxtofl@val+2
 16199  06F2  0141               	movlb	1	; select bank1
 16200  06F3  0857               	movf	(??_LED_setColor+1)^(0+128),w
 16201  06F4  0140               	movlb	0	; select bank0
 16202  06F5  00A1               	movwf	___xxtofl@val+1
 16203  06F6  0141               	movlb	1	; select bank1
 16204  06F7  0856               	movf	??_LED_setColor^(0+128),w
 16205  06F8  0140               	movlb	0	; select bank0
 16206  06F9  00A0               	movwf	___xxtofl@val
 16207  06FA  3001               	movlw	1
 16208  06FB  3197  276A  3185   	fcall	___xxtofl
 16209  06FE  0140               	movlb	0	; select bank0
 16210  06FF  0823               	movf	?___xxtofl+3,w
 16211  0700  00B5               	movwf	___fldiv@b+3
 16212  0701  0822               	movf	?___xxtofl+2,w
 16213  0702  00B4               	movwf	___fldiv@b+2
 16214  0703  0821               	movf	?___xxtofl+1,w
 16215  0704  00B3               	movwf	___fldiv@b+1
 16216  0705  0820               	movf	?___xxtofl,w
 16217  0706  00B2               	movwf	___fldiv@b
 16218  0707  3043               	movlw	67
 16219  0708  00B1               	movwf	___fldiv@a+3
 16220  0709  307F               	movlw	127
 16221  070A  00B0               	movwf	___fldiv@a+2
 16222  070B  3000               	movlw	0
 16223  070C  00AF               	movwf	___fldiv@a+1
 16224  070D  3000               	movlw	0
 16225  070E  00AE               	movwf	___fldiv@a
 16226  070F  3184  2469  3185   	fcall	___fldiv
 16227  0712  0140               	movlb	0	; select bank0
 16228  0713  0831               	movf	?___fldiv+3,w
 16229  0714  00CF               	movwf	___flmul@a+3
 16230  0715  0830               	movf	?___fldiv+2,w
 16231  0716  00CE               	movwf	___flmul@a+2
 16232  0717  082F               	movf	?___fldiv+1,w
 16233  0718  00CD               	movwf	___flmul@a+1
 16234  0719  082E               	movf	?___fldiv,w
 16235  071A  00CC               	movwf	___flmul@a
 16236  071B  3042               	movlw	66
 16237  071C  00CB               	movwf	___flmul@b+3
 16238  071D  30FE               	movlw	254
 16239  071E  00CA               	movwf	___flmul@b+2
 16240  071F  3000               	movlw	0
 16241  0720  00C9               	movwf	___flmul@b+1
 16242  0721  3000               	movlw	0
 16243  0722  00C8               	movwf	___flmul@b
 16244  0723  3180  20A5  3185   	fcall	___flmul
 16245  0726  0140               	movlb	0	; select bank0
 16246  0727  084B               	movf	?___flmul+3,w
 16247  0728  00E5               	movwf	___fltol@f1+3
 16248  0729  084A               	movf	?___flmul+2,w
 16249  072A  00E4               	movwf	___fltol@f1+2
 16250  072B  0849               	movf	?___flmul+1,w
 16251  072C  00E3               	movwf	___fltol@f1+1
 16252  072D  0848               	movf	?___flmul,w
 16253  072E  00E2               	movwf	___fltol@f1
 16254  072F  3188  200B  3185   	fcall	___fltol
 16255  0732  0140               	movlb	0	; select bank0
 16256  0733  0863               	movf	?___fltol+1,w
 16257  0734  00EE               	movwf	PWM4_LoadDutyValue@dutyValue+1
 16258  0735  0862               	movf	?___fltol,w
 16259  0736  00ED               	movwf	PWM4_LoadDutyValue@dutyValue
 16260  0737  3191  214F         	fcall	_PWM4_LoadDutyValue
 16261  0739  0008               	return
 16262  073A                     __end_of_LED_setColor:	
 16263                           
 16264                           	psect	text41
 16265  176A                     __ptext41:	
 16266 ;; *************** function ___xxtofl *****************
 16267 ;; Defined at:
 16268 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 16269 ;; Parameters:    Size  Location     Type
 16270 ;;  sign            1    wreg     unsigned char 
 16271 ;;  val             4    0[BANK0 ] long 
 16272 ;; Auto vars:     Size  Location     Type
 16273 ;;  sign            1    8[BANK0 ] unsigned char 
 16274 ;;  arg             4   10[BANK0 ] unsigned long 
 16275 ;;  exp             1    9[BANK0 ] unsigned char 
 16276 ;; Return value:  Size  Location     Type
 16277 ;;                  4    0[BANK0 ] unsigned char 
 16278 ;; Registers used:
 16279 ;;		wreg, status,2, status,0
 16280 ;; Tracked objects:
 16281 ;;		On entry : 0/0
 16282 ;;		On exit  : 0/0
 16283 ;;		Unchanged: 0/0
 16284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16286 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16288 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16289 ;;Total ram usage:       14 bytes
 16290 ;; Hardware stack levels used:    1
 16291 ;; Hardware stack levels required when called:    4
 16292 ;; This function calls:
 16293 ;;		Nothing
 16294 ;; This function is called by:
 16295 ;;		_LED_setColor
 16296 ;;		_beatBrightnessCalculation
 16297 ;; This function uses a non-reentrant model
 16298 ;;
 16299                           
 16300                           
 16301                           ;psect for function ___xxtofl
 16302  176A                     ___xxtofl:	
 16303                           
 16304                           ;incstack = 0
 16305                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 16306                           ;___xxtofl@sign stored from wreg
 16307  176A  0140               	movlb	0	; select bank0
 16308  176B  00A8               	movwf	___xxtofl@sign
 16309  176C  0828               	movf	___xxtofl@sign,w
 16310  176D  1D03               	btfss	3,2
 16311  176E  1FA3               	btfss	___xxtofl@val+3,7
 16312  176F  2F80               	goto	l7057
 16313  1770  0920               	comf	___xxtofl@val,w
 16314  1771  00AA               	movwf	___xxtofl@arg
 16315  1772  0921               	comf	___xxtofl@val+1,w
 16316  1773  00AB               	movwf	___xxtofl@arg+1
 16317  1774  0922               	comf	___xxtofl@val+2,w
 16318  1775  00AC               	movwf	___xxtofl@arg+2
 16319  1776  0923               	comf	___xxtofl@val+3,w
 16320  1777  00AD               	movwf	___xxtofl@arg+3
 16321  1778  0AAA               	incf	___xxtofl@arg,f
 16322  1779  1903               	skipnz
 16323  177A  0AAB               	incf	___xxtofl@arg+1,f
 16324  177B  1903               	skipnz
 16325  177C  0AAC               	incf	___xxtofl@arg+2,f
 16326  177D  1903               	skipnz
 16327  177E  0AAD               	incf	___xxtofl@arg+3,f
 16328  177F  2F88               	goto	l2139
 16329  1780                     l7057:	
 16330  1780  0823               	movf	___xxtofl@val+3,w
 16331  1781  00AD               	movwf	___xxtofl@arg+3
 16332  1782  0822               	movf	___xxtofl@val+2,w
 16333  1783  00AC               	movwf	___xxtofl@arg+2
 16334  1784  0821               	movf	___xxtofl@val+1,w
 16335  1785  00AB               	movwf	___xxtofl@arg+1
 16336  1786  0820               	movf	___xxtofl@val,w
 16337  1787  00AA               	movwf	___xxtofl@arg
 16338  1788                     l2139:	
 16339  1788  0823               	movf	___xxtofl@val+3,w
 16340  1789  0422               	iorwf	___xxtofl@val+2,w
 16341  178A  0421               	iorwf	___xxtofl@val+1,w
 16342  178B  0420               	iorwf	___xxtofl@val,w
 16343  178C  1D03               	skipz
 16344  178D  2F97               	goto	l7063
 16345  178E  3000               	movlw	0
 16346  178F  00A3               	movwf	?___xxtofl+3
 16347  1790  3000               	movlw	0
 16348  1791  00A2               	movwf	?___xxtofl+2
 16349  1792  3000               	movlw	0
 16350  1793  00A1               	movwf	?___xxtofl+1
 16351  1794  3000               	movlw	0
 16352  1795  00A0               	movwf	?___xxtofl
 16353  1796  0008               	return
 16354  1797                     l7063:	
 16355  1797  3096               	movlw	150
 16356  1798  00A4               	movwf	??___xxtofl
 16357  1799  0824               	movf	??___xxtofl,w
 16358  179A  00A9               	movwf	___xxtofl@exp
 16359  179B                     l7067:	
 16360  179B  30FE               	movlw	254
 16361  179C  052D               	andwf	___xxtofl@arg+3,w
 16362  179D  1903               	btfsc	3,2
 16363  179E  2FBE               	goto	l2145
 16364  179F  3001               	movlw	1
 16365  17A0  00A4               	movwf	??___xxtofl
 16366  17A1  0824               	movf	??___xxtofl,w
 16367  17A2  07A9               	addwf	___xxtofl@exp,f
 16368  17A3  3001               	movlw	1
 16369  17A4                     u6425:	
 16370  17A4  36AD               	lsrf	___xxtofl@arg+3,f
 16371  17A5  0CAC               	rrf	___xxtofl@arg+2,f
 16372  17A6  0CAB               	rrf	___xxtofl@arg+1,f
 16373  17A7  0CAA               	rrf	___xxtofl@arg,f
 16374  17A8  0B89               	decfsz	9,f
 16375  17A9  2FA4               	goto	u6425
 16376  17AA  2F9B               	goto	l7067
 16377  17AB                     l7069:	
 16378  17AB  3001               	movlw	1
 16379  17AC  00A4               	movwf	??___xxtofl
 16380  17AD  0824               	movf	??___xxtofl,w
 16381  17AE  07A9               	addwf	___xxtofl@exp,f
 16382  17AF  3001               	movlw	1
 16383  17B0  07AA               	addwf	___xxtofl@arg,f
 16384  17B1  3000               	movlw	0
 16385  17B2  3DAB               	addwfc	___xxtofl@arg+1,f
 16386  17B3  3000               	movlw	0
 16387  17B4  3DAC               	addwfc	___xxtofl@arg+2,f
 16388  17B5  3000               	movlw	0
 16389  17B6  3DAD               	addwfc	___xxtofl@arg+3,f
 16390  17B7  3001               	movlw	1
 16391  17B8                     u6445:	
 16392  17B8  36AD               	lsrf	___xxtofl@arg+3,f
 16393  17B9  0CAC               	rrf	___xxtofl@arg+2,f
 16394  17BA  0CAB               	rrf	___xxtofl@arg+1,f
 16395  17BB  0CAA               	rrf	___xxtofl@arg,f
 16396  17BC  0B89               	decfsz	9,f
 16397  17BD  2FB8               	goto	u6445
 16398  17BE                     l2145:	
 16399  17BE  30FF               	movlw	255
 16400  17BF  052D               	andwf	___xxtofl@arg+3,w
 16401  17C0  1903               	btfsc	3,2
 16402  17C1  2FD0               	goto	l7077
 16403  17C2  2FAB               	goto	l7069
 16404  17C3                     l7079:	
 16405  17C3  3002               	movlw	2
 16406  17C4  0229               	subwf	___xxtofl@exp,w
 16407  17C5  1C03               	btfss	3,0
 16408  17C6  2FD2               	goto	l2152
 16409  17C7  3001               	movlw	1
 16410  17C8  02A9               	subwf	___xxtofl@exp,f
 16411  17C9  3001               	movlw	1
 16412  17CA                     u6465:	
 16413  17CA  35AA               	lslf	___xxtofl@arg,f
 16414  17CB  0DAB               	rlf	___xxtofl@arg+1,f
 16415  17CC  0DAC               	rlf	___xxtofl@arg+2,f
 16416  17CD  0DAD               	rlf	___xxtofl@arg+3,f
 16417  17CE  0B89               	decfsz	9,f
 16418  17CF  2FCA               	goto	u6465
 16419  17D0                     l7077:	
 16420  17D0  1FAC               	btfss	___xxtofl@arg+2,7
 16421  17D1  2FC3               	goto	l7079
 16422  17D2                     l2152:	
 16423  17D2  1829               	btfsc	___xxtofl@exp,0
 16424  17D3  2FDC               	goto	l2153
 16425  17D4  30FF               	movlw	255
 16426  17D5  05AA               	andwf	___xxtofl@arg,f
 16427  17D6  30FF               	movlw	255
 16428  17D7  05AB               	andwf	___xxtofl@arg+1,f
 16429  17D8  307F               	movlw	127
 16430  17D9  05AC               	andwf	___xxtofl@arg+2,f
 16431  17DA  30FF               	movlw	255
 16432  17DB  05AD               	andwf	___xxtofl@arg+3,f
 16433  17DC                     l2153:	
 16434  17DC  1003               	clrc
 16435  17DD  0CA9               	rrf	___xxtofl@exp,f
 16436  17DE  0829               	movf	___xxtofl@exp,w
 16437  17DF  00A4               	movwf	??___xxtofl
 16438  17E0  01A5               	clrf	??___xxtofl+1
 16439  17E1  01A6               	clrf	??___xxtofl+2
 16440  17E2  01A7               	clrf	??___xxtofl+3
 16441  17E3  3018               	movlw	24
 16442  17E4                     u6505:	
 16443  17E4  35A4               	lslf	??___xxtofl,f
 16444  17E5  0DA5               	rlf	??___xxtofl+1,f
 16445  17E6  0DA6               	rlf	??___xxtofl+2,f
 16446  17E7  0DA7               	rlf	??___xxtofl+3,f
 16447  17E8  0B89               	decfsz	9,f
 16448  17E9  2FE4               	goto	u6505
 16449  17EA  0824               	movf	??___xxtofl,w
 16450  17EB  04AA               	iorwf	___xxtofl@arg,f
 16451  17EC  0825               	movf	??___xxtofl+1,w
 16452  17ED  04AB               	iorwf	___xxtofl@arg+1,f
 16453  17EE  0826               	movf	??___xxtofl+2,w
 16454  17EF  04AC               	iorwf	___xxtofl@arg+2,f
 16455  17F0  0827               	movf	??___xxtofl+3,w
 16456  17F1  04AD               	iorwf	___xxtofl@arg+3,f
 16457  17F2  0828               	movf	___xxtofl@sign,w
 16458  17F3  1D03               	btfss	3,2
 16459  17F4  1FA3               	btfss	___xxtofl@val+3,7
 16460  17F5  2FF7               	goto	l7091
 16461  17F6  17AD               	bsf	___xxtofl@arg+3,7
 16462  17F7                     l7091:	
 16463  17F7  082D               	movf	___xxtofl@arg+3,w
 16464  17F8  00A3               	movwf	?___xxtofl+3
 16465  17F9  082C               	movf	___xxtofl@arg+2,w
 16466  17FA  00A2               	movwf	?___xxtofl+2
 16467  17FB  082B               	movf	___xxtofl@arg+1,w
 16468  17FC  00A1               	movwf	?___xxtofl+1
 16469  17FD  082A               	movf	___xxtofl@arg,w
 16470  17FE  00A0               	movwf	?___xxtofl
 16471  17FF  0008               	return
 16472  1800                     __end_of___xxtofl:	
 16473                           
 16474                           	psect	text42
 16475  080B                     __ptext42:	
 16476 ;; *************** function ___fltol *****************
 16477 ;; Defined at:
 16478 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 16479 ;; Parameters:    Size  Location     Type
 16480 ;;  f1              4   66[BANK0 ] unsigned char 
 16481 ;; Auto vars:     Size  Location     Type
 16482 ;;  exp1            1   76[BANK0 ] unsigned char 
 16483 ;;  sign1           1   75[BANK0 ] unsigned char 
 16484 ;; Return value:  Size  Location     Type
 16485 ;;                  4   66[BANK0 ] long 
 16486 ;; Registers used:
 16487 ;;		wreg, status,2, status,0
 16488 ;; Tracked objects:
 16489 ;;		On entry : 0/0
 16490 ;;		On exit  : 0/0
 16491 ;;		Unchanged: 0/0
 16492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16493 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16494 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16495 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16496 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16497 ;;Total ram usage:       11 bytes
 16498 ;; Hardware stack levels used:    1
 16499 ;; Hardware stack levels required when called:    4
 16500 ;; This function calls:
 16501 ;;		Nothing
 16502 ;; This function is called by:
 16503 ;;		_LED_setColor
 16504 ;;		_beatBrightnessCalculation
 16505 ;;		_beatColorCreator
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           
 16510                           ;psect for function ___fltol
 16511  080B                     ___fltol:	
 16512                           
 16513                           ;incstack = 0
 16514                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 16515  080B  1003               	clrc
 16516  080C  0140               	movlb	0	; select bank0
 16517  080D  0D64               	rlf	___fltol@f1+2,w
 16518  080E  0D65               	rlf	___fltol@f1+3,w
 16519  080F  00E6               	movwf	??___fltol
 16520  0810  0866               	movf	??___fltol,w
 16521  0811  00EC               	movwf	___fltol@exp1
 16522  0812  086C               	movf	___fltol@exp1,w
 16523  0813  1D03               	btfss	3,2
 16524  0814  281E               	goto	l7265
 16525  0815                     l7261:	
 16526  0815  3000               	movlw	0
 16527  0816  00E5               	movwf	?___fltol+3
 16528  0817  3000               	movlw	0
 16529  0818  00E4               	movwf	?___fltol+2
 16530  0819  3000               	movlw	0
 16531  081A  00E3               	movwf	?___fltol+1
 16532  081B  3000               	movlw	0
 16533  081C  00E2               	movwf	?___fltol
 16534  081D  0008               	return
 16535  081E                     l7265:	
 16536  081E  0862               	movf	___fltol@f1,w
 16537  081F  00E6               	movwf	??___fltol
 16538  0820  0863               	movf	___fltol@f1+1,w
 16539  0821  00E7               	movwf	??___fltol+1
 16540  0822  0864               	movf	___fltol@f1+2,w
 16541  0823  00E8               	movwf	??___fltol+2
 16542  0824  0865               	movf	___fltol@f1+3,w
 16543  0825  00E9               	movwf	??___fltol+3
 16544  0826  301F               	movlw	31
 16545  0827                     u6865:	
 16546  0827  36E9               	lsrf	??___fltol+3,f
 16547  0828  0CE8               	rrf	??___fltol+2,f
 16548  0829  0CE7               	rrf	??___fltol+1,f
 16549  082A  0CE6               	rrf	??___fltol,f
 16550  082B  0B89               	decfsz	9,f
 16551  082C  2827               	goto	u6865
 16552  082D  0866               	movf	??___fltol,w
 16553  082E  00EA               	movwf	??___fltol+4
 16554  082F  086A               	movf	??___fltol+4,w
 16555  0830  00EB               	movwf	___fltol@sign1
 16556  0831  17E4               	bsf	___fltol@f1+2,7
 16557  0832  30FF               	movlw	255
 16558  0833  05E2               	andwf	___fltol@f1,f
 16559  0834  30FF               	movlw	255
 16560  0835  05E3               	andwf	___fltol@f1+1,f
 16561  0836  30FF               	movlw	255
 16562  0837  05E4               	andwf	___fltol@f1+2,f
 16563  0838  3000               	movlw	0
 16564  0839  05E5               	andwf	___fltol@f1+3,f
 16565  083A  3096               	movlw	150
 16566  083B  02EC               	subwf	___fltol@exp1,f
 16567  083C  1FEC               	btfss	___fltol@exp1,7
 16568  083D  2851               	goto	l7283
 16569  083E  086C               	movf	___fltol@exp1,w
 16570  083F  3A80               	xorlw	128
 16571  0840  3E97               	addlw	151
 16572  0841  1C03               	btfss	3,0
 16573  0842  2815               	goto	l7261
 16574  0843                     l7281:	
 16575  0843  3001               	movlw	1
 16576  0844                     u6895:	
 16577  0844  36E5               	lsrf	___fltol@f1+3,f
 16578  0845  0CE4               	rrf	___fltol@f1+2,f
 16579  0846  0CE3               	rrf	___fltol@f1+1,f
 16580  0847  0CE2               	rrf	___fltol@f1,f
 16581  0848  0B89               	decfsz	9,f
 16582  0849  2844               	goto	u6895
 16583  084A  3001               	movlw	1
 16584  084B  00E6               	movwf	??___fltol
 16585  084C  0866               	movf	??___fltol,w
 16586  084D  07EC               	addwf	___fltol@exp1,f
 16587  084E  1903               	btfsc	3,2
 16588  084F  2862               	goto	l7291
 16589  0850  2843               	goto	l7281
 16590  0851                     l7283:	
 16591  0851  3020               	movlw	32
 16592  0852  026C               	subwf	___fltol@exp1,w
 16593  0853  1803               	btfsc	3,0
 16594  0854  2815               	goto	l7261
 16595  0855                     l1905:	
 16596  0855  086C               	movf	___fltol@exp1,w
 16597  0856  1903               	btfsc	3,2
 16598  0857  2862               	goto	l7291
 16599  0858  3001               	movlw	1
 16600  0859                     u6925:	
 16601  0859  35E2               	lslf	___fltol@f1,f
 16602  085A  0DE3               	rlf	___fltol@f1+1,f
 16603  085B  0DE4               	rlf	___fltol@f1+2,f
 16604  085C  0DE5               	rlf	___fltol@f1+3,f
 16605  085D  0B89               	decfsz	9,f
 16606  085E  2859               	goto	u6925
 16607  085F  3001               	movlw	1
 16608  0860  02EC               	subwf	___fltol@exp1,f
 16609  0861  2855               	goto	l1905
 16610  0862                     l7291:	
 16611  0862  086B               	movf	___fltol@sign1,w
 16612  0863  1903               	btfsc	3,2
 16613  0864  0008               	return
 16614  0865  09E2               	comf	___fltol@f1,f
 16615  0866  09E3               	comf	___fltol@f1+1,f
 16616  0867  09E4               	comf	___fltol@f1+2,f
 16617  0868  09E5               	comf	___fltol@f1+3,f
 16618  0869  0AE2               	incf	___fltol@f1,f
 16619  086A  1903               	skipnz
 16620  086B  0AE3               	incf	___fltol@f1+1,f
 16621  086C  1903               	skipnz
 16622  086D  0AE4               	incf	___fltol@f1+2,f
 16623  086E  1903               	skipnz
 16624  086F  0AE5               	incf	___fltol@f1+3,f
 16625  0870  0008               	return
 16626  0871                     __end_of___fltol:	
 16627                           
 16628                           	psect	text43
 16629  00A5                     __ptext43:	
 16630 ;; *************** function ___flmul *****************
 16631 ;; Defined at:
 16632 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 16633 ;; Parameters:    Size  Location     Type
 16634 ;;  b               4   40[BANK0 ] long 
 16635 ;;  a               4   44[BANK0 ] long 
 16636 ;; Auto vars:     Size  Location     Type
 16637 ;;  prod            4   60[BANK0 ] struct .
 16638 ;;  grs             4   55[BANK0 ] unsigned long 
 16639 ;;  temp            2   64[BANK0 ] struct .
 16640 ;;  bexp            1   59[BANK0 ] unsigned char 
 16641 ;;  aexp            1   54[BANK0 ] unsigned char 
 16642 ;;  sign            1   53[BANK0 ] unsigned char 
 16643 ;; Return value:  Size  Location     Type
 16644 ;;                  4   40[BANK0 ] unsigned char 
 16645 ;; Registers used:
 16646 ;;		wreg, status,2, status,0, pclath, cstack
 16647 ;; Tracked objects:
 16648 ;;		On entry : 0/0
 16649 ;;		On exit  : 0/0
 16650 ;;		Unchanged: 0/0
 16651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16652 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16653 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16654 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16655 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16656 ;;Total ram usage:       26 bytes
 16657 ;; Hardware stack levels used:    1
 16658 ;; Hardware stack levels required when called:    5
 16659 ;; This function calls:
 16660 ;;		__Umul8_16
 16661 ;; This function is called by:
 16662 ;;		_LED_setColor
 16663 ;;		_beatBrightnessCalculation
 16664 ;; This function uses a non-reentrant model
 16665 ;;
 16666                           
 16667                           
 16668                           ;psect for function ___flmul
 16669  00A5                     ___flmul:	
 16670                           
 16671                           ;incstack = 0
 16672                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16673  00A5  0140               	movlb	0	; select bank0
 16674  00A6  084B               	movf	___flmul@b+3,w
 16675  00A7  3980               	andlw	128
 16676  00A8  00D0               	movwf	??___flmul
 16677  00A9  0850               	movf	??___flmul,w
 16678  00AA  00D5               	movwf	___flmul@sign
 16679  00AB  354B               	lslf	___flmul@b+3,w
 16680  00AC  00D0               	movwf	??___flmul
 16681  00AD  0850               	movf	??___flmul,w
 16682  00AE  00DB               	movwf	___flmul@bexp
 16683  00AF  1BCA               	btfsc	___flmul@b+2,7
 16684  00B0  145B               	bsf	___flmul@bexp,0
 16685  00B1  085B               	movf	___flmul@bexp,w
 16686  00B2  1903               	btfsc	3,2
 16687  00B3  28C1               	goto	l7499
 16688  00B4  0A5B               	incf	___flmul@bexp,w
 16689  00B5  1D03               	btfss	3,2
 16690  00B6  28BF               	goto	l7497
 16691  00B7  3000               	movlw	0
 16692  00B8  00CB               	movwf	___flmul@b+3
 16693  00B9  3000               	movlw	0
 16694  00BA  00CA               	movwf	___flmul@b+2
 16695  00BB  3000               	movlw	0
 16696  00BC  00C9               	movwf	___flmul@b+1
 16697  00BD  3000               	movlw	0
 16698  00BE  00C8               	movwf	___flmul@b
 16699  00BF                     l7497:	
 16700  00BF  17CA               	bsf	___flmul@b+2,7
 16701  00C0  28C9               	goto	l7501
 16702  00C1                     l7499:	
 16703  00C1  3000               	movlw	0
 16704  00C2  00CB               	movwf	___flmul@b+3
 16705  00C3  3000               	movlw	0
 16706  00C4  00CA               	movwf	___flmul@b+2
 16707  00C5  3000               	movlw	0
 16708  00C6  00C9               	movwf	___flmul@b+1
 16709  00C7  3000               	movlw	0
 16710  00C8  00C8               	movwf	___flmul@b
 16711  00C9                     l7501:	
 16712  00C9  084F               	movf	___flmul@a+3,w
 16713  00CA  3980               	andlw	128
 16714  00CB  00D0               	movwf	??___flmul
 16715  00CC  0850               	movf	??___flmul,w
 16716  00CD  06D5               	xorwf	___flmul@sign,f
 16717  00CE  354F               	lslf	___flmul@a+3,w
 16718  00CF  00D0               	movwf	??___flmul
 16719  00D0  0850               	movf	??___flmul,w
 16720  00D1  00D6               	movwf	___flmul@aexp
 16721  00D2  1BCE               	btfsc	___flmul@a+2,7
 16722  00D3  1456               	bsf	___flmul@aexp,0
 16723  00D4  0856               	movf	___flmul@aexp,w
 16724  00D5  1903               	btfsc	3,2
 16725  00D6  28E4               	goto	l7517
 16726  00D7  0A56               	incf	___flmul@aexp,w
 16727  00D8  1D03               	btfss	3,2
 16728  00D9  28E2               	goto	l7515
 16729  00DA  3000               	movlw	0
 16730  00DB  00CF               	movwf	___flmul@a+3
 16731  00DC  3000               	movlw	0
 16732  00DD  00CE               	movwf	___flmul@a+2
 16733  00DE  3000               	movlw	0
 16734  00DF  00CD               	movwf	___flmul@a+1
 16735  00E0  3000               	movlw	0
 16736  00E1  00CC               	movwf	___flmul@a
 16737  00E2                     l7515:	
 16738  00E2  17CE               	bsf	___flmul@a+2,7
 16739  00E3  28EC               	goto	l7519
 16740  00E4                     l7517:	
 16741  00E4  3000               	movlw	0
 16742  00E5  00CF               	movwf	___flmul@a+3
 16743  00E6  3000               	movlw	0
 16744  00E7  00CE               	movwf	___flmul@a+2
 16745  00E8  3000               	movlw	0
 16746  00E9  00CD               	movwf	___flmul@a+1
 16747  00EA  3000               	movlw	0
 16748  00EB  00CC               	movwf	___flmul@a
 16749  00EC                     l7519:	
 16750  00EC  0856               	movf	___flmul@aexp,w
 16751  00ED  1D03               	btfss	3,2
 16752  00EE  085B               	movf	___flmul@bexp,w
 16753  00EF  1D03               	btfss	3,2
 16754  00F0  28FA               	goto	l7527
 16755  00F1  3000               	movlw	0
 16756  00F2  00CB               	movwf	?___flmul+3
 16757  00F3  3000               	movlw	0
 16758  00F4  00CA               	movwf	?___flmul+2
 16759  00F5  3000               	movlw	0
 16760  00F6  00C9               	movwf	?___flmul+1
 16761  00F7  3000               	movlw	0
 16762  00F8  00C8               	movwf	?___flmul
 16763  00F9  0008               	return
 16764  00FA                     l7527:	
 16765  00FA  0848               	movf	___flmul@b,w
 16766  00FB  00D0               	movwf	??___flmul
 16767  00FC  0850               	movf	??___flmul,w
 16768  00FD  00A0               	movwf	__Umul8_16@multiplicand
 16769  00FE  084E               	movf	___flmul@a+2,w
 16770  00FF  3191  218D  3180   	fcall	__Umul8_16
 16771  0102  0140               	movlb	0	; select bank0
 16772  0103  0821               	movf	?__Umul8_16+1,w
 16773  0104  00E1               	movwf	___flmul@temp+1
 16774  0105  0820               	movf	?__Umul8_16,w
 16775  0106  00E0               	movwf	___flmul@temp
 16776  0107  0860               	movf	___flmul@temp,w
 16777  0108  00D0               	movwf	??___flmul
 16778  0109  01D1               	clrf	??___flmul+1
 16779  010A  01D2               	clrf	??___flmul+2
 16780  010B  01D3               	clrf	??___flmul+3
 16781  010C  0853               	movf	??___flmul+3,w
 16782  010D  00DA               	movwf	___flmul@grs+3
 16783  010E  0852               	movf	??___flmul+2,w
 16784  010F  00D9               	movwf	___flmul@grs+2
 16785  0110  0851               	movf	??___flmul+1,w
 16786  0111  00D8               	movwf	___flmul@grs+1
 16787  0112  0850               	movf	??___flmul,w
 16788  0113  00D7               	movwf	___flmul@grs
 16789  0114  0861               	movf	___flmul@temp+1,w
 16790  0115  00D0               	movwf	??___flmul
 16791  0116  01D1               	clrf	??___flmul+1
 16792  0117  01D2               	clrf	??___flmul+2
 16793  0118  01D3               	clrf	??___flmul+3
 16794  0119  0853               	movf	??___flmul+3,w
 16795  011A  00DF               	movwf	___flmul@prod+3
 16796  011B  0852               	movf	??___flmul+2,w
 16797  011C  00DE               	movwf	___flmul@prod+2
 16798  011D  0851               	movf	??___flmul+1,w
 16799  011E  00DD               	movwf	___flmul@prod+1
 16800  011F  0850               	movf	??___flmul,w
 16801  0120  00DC               	movwf	___flmul@prod
 16802  0121  0849               	movf	___flmul@b+1,w
 16803  0122  00D0               	movwf	??___flmul
 16804  0123  0850               	movf	??___flmul,w
 16805  0124  00A0               	movwf	__Umul8_16@multiplicand
 16806  0125  084D               	movf	___flmul@a+1,w
 16807  0126  3191  218D  3180   	fcall	__Umul8_16
 16808  0129  0140               	movlb	0	; select bank0
 16809  012A  0821               	movf	?__Umul8_16+1,w
 16810  012B  00E1               	movwf	___flmul@temp+1
 16811  012C  0820               	movf	?__Umul8_16,w
 16812  012D  00E0               	movwf	___flmul@temp
 16813  012E  0860               	movf	___flmul@temp,w
 16814  012F  00D0               	movwf	??___flmul
 16815  0130  01D1               	clrf	??___flmul+1
 16816  0131  01D2               	clrf	??___flmul+2
 16817  0132  01D3               	clrf	??___flmul+3
 16818  0133  0850               	movf	??___flmul,w
 16819  0134  07D7               	addwf	___flmul@grs,f
 16820  0135  0851               	movf	??___flmul+1,w
 16821  0136  3DD8               	addwfc	___flmul@grs+1,f
 16822  0137  0852               	movf	??___flmul+2,w
 16823  0138  3DD9               	addwfc	___flmul@grs+2,f
 16824  0139  0853               	movf	??___flmul+3,w
 16825  013A  3DDA               	addwfc	___flmul@grs+3,f
 16826  013B  0861               	movf	___flmul@temp+1,w
 16827  013C  00D0               	movwf	??___flmul
 16828  013D  01D1               	clrf	??___flmul+1
 16829  013E  01D2               	clrf	??___flmul+2
 16830  013F  01D3               	clrf	??___flmul+3
 16831  0140  0850               	movf	??___flmul,w
 16832  0141  07DC               	addwf	___flmul@prod,f
 16833  0142  0851               	movf	??___flmul+1,w
 16834  0143  3DDD               	addwfc	___flmul@prod+1,f
 16835  0144  0852               	movf	??___flmul+2,w
 16836  0145  3DDE               	addwfc	___flmul@prod+2,f
 16837  0146  0853               	movf	??___flmul+3,w
 16838  0147  3DDF               	addwfc	___flmul@prod+3,f
 16839  0148  084A               	movf	___flmul@b+2,w
 16840  0149  00D0               	movwf	??___flmul
 16841  014A  0850               	movf	??___flmul,w
 16842  014B  00A0               	movwf	__Umul8_16@multiplicand
 16843  014C  084C               	movf	___flmul@a,w
 16844  014D  3191  218D  3180   	fcall	__Umul8_16
 16845  0150  0140               	movlb	0	; select bank0
 16846  0151  0821               	movf	?__Umul8_16+1,w
 16847  0152  00E1               	movwf	___flmul@temp+1
 16848  0153  0820               	movf	?__Umul8_16,w
 16849  0154  00E0               	movwf	___flmul@temp
 16850  0155  0860               	movf	___flmul@temp,w
 16851  0156  00D0               	movwf	??___flmul
 16852  0157  01D1               	clrf	??___flmul+1
 16853  0158  01D2               	clrf	??___flmul+2
 16854  0159  01D3               	clrf	??___flmul+3
 16855  015A  0850               	movf	??___flmul,w
 16856  015B  07D7               	addwf	___flmul@grs,f
 16857  015C  0851               	movf	??___flmul+1,w
 16858  015D  3DD8               	addwfc	___flmul@grs+1,f
 16859  015E  0852               	movf	??___flmul+2,w
 16860  015F  3DD9               	addwfc	___flmul@grs+2,f
 16861  0160  0853               	movf	??___flmul+3,w
 16862  0161  3DDA               	addwfc	___flmul@grs+3,f
 16863  0162  0861               	movf	___flmul@temp+1,w
 16864  0163  00D0               	movwf	??___flmul
 16865  0164  01D1               	clrf	??___flmul+1
 16866  0165  01D2               	clrf	??___flmul+2
 16867  0166  01D3               	clrf	??___flmul+3
 16868  0167  0850               	movf	??___flmul,w
 16869  0168  07DC               	addwf	___flmul@prod,f
 16870  0169  0851               	movf	??___flmul+1,w
 16871  016A  3DDD               	addwfc	___flmul@prod+1,f
 16872  016B  0852               	movf	??___flmul+2,w
 16873  016C  3DDE               	addwfc	___flmul@prod+2,f
 16874  016D  0853               	movf	??___flmul+3,w
 16875  016E  3DDF               	addwfc	___flmul@prod+3,f
 16876  016F  3008               	movlw	8
 16877  0170                     u7455:	
 16878  0170  35D7               	lslf	___flmul@grs,f
 16879  0171  0DD8               	rlf	___flmul@grs+1,f
 16880  0172  0DD9               	rlf	___flmul@grs+2,f
 16881  0173  0DDA               	rlf	___flmul@grs+3,f
 16882  0174  0B89               	decfsz	9,f
 16883  0175  2970               	goto	u7455
 16884  0176  0849               	movf	___flmul@b+1,w
 16885  0177  00D0               	movwf	??___flmul
 16886  0178  0850               	movf	??___flmul,w
 16887  0179  00A0               	movwf	__Umul8_16@multiplicand
 16888  017A  084C               	movf	___flmul@a,w
 16889  017B  3191  218D  3180   	fcall	__Umul8_16
 16890  017E  0140               	movlb	0	; select bank0
 16891  017F  0821               	movf	?__Umul8_16+1,w
 16892  0180  00E1               	movwf	___flmul@temp+1
 16893  0181  0820               	movf	?__Umul8_16,w
 16894  0182  00E0               	movwf	___flmul@temp
 16895  0183  0860               	movf	___flmul@temp,w
 16896  0184  07D7               	addwf	___flmul@grs,f
 16897  0185  0861               	movf	___flmul@temp+1,w
 16898  0186  3DD8               	addwfc	___flmul@grs+1,f
 16899  0187  3000               	movlw	0
 16900  0188  3DD9               	addwfc	___flmul@grs+2,f
 16901  0189  3DDA               	addwfc	___flmul@grs+3,f
 16902  018A  0848               	movf	___flmul@b,w
 16903  018B  00D0               	movwf	??___flmul
 16904  018C  0850               	movf	??___flmul,w
 16905  018D  00A0               	movwf	__Umul8_16@multiplicand
 16906  018E  084D               	movf	___flmul@a+1,w
 16907  018F  3191  218D  3180   	fcall	__Umul8_16
 16908  0192  0140               	movlb	0	; select bank0
 16909  0193  0821               	movf	?__Umul8_16+1,w
 16910  0194  00E1               	movwf	___flmul@temp+1
 16911  0195  0820               	movf	?__Umul8_16,w
 16912  0196  00E0               	movwf	___flmul@temp
 16913  0197  0860               	movf	___flmul@temp,w
 16914  0198  07D7               	addwf	___flmul@grs,f
 16915  0199  0861               	movf	___flmul@temp+1,w
 16916  019A  3DD8               	addwfc	___flmul@grs+1,f
 16917  019B  3000               	movlw	0
 16918  019C  3DD9               	addwfc	___flmul@grs+2,f
 16919  019D  3DDA               	addwfc	___flmul@grs+3,f
 16920  019E  3008               	movlw	8
 16921  019F                     u7465:	
 16922  019F  35D7               	lslf	___flmul@grs,f
 16923  01A0  0DD8               	rlf	___flmul@grs+1,f
 16924  01A1  0DD9               	rlf	___flmul@grs+2,f
 16925  01A2  0DDA               	rlf	___flmul@grs+3,f
 16926  01A3  0B89               	decfsz	9,f
 16927  01A4  299F               	goto	u7465
 16928  01A5  0848               	movf	___flmul@b,w
 16929  01A6  00D0               	movwf	??___flmul
 16930  01A7  0850               	movf	??___flmul,w
 16931  01A8  00A0               	movwf	__Umul8_16@multiplicand
 16932  01A9  084C               	movf	___flmul@a,w
 16933  01AA  3191  218D  3180   	fcall	__Umul8_16
 16934  01AD  0140               	movlb	0	; select bank0
 16935  01AE  0821               	movf	?__Umul8_16+1,w
 16936  01AF  00E1               	movwf	___flmul@temp+1
 16937  01B0  0820               	movf	?__Umul8_16,w
 16938  01B1  00E0               	movwf	___flmul@temp
 16939  01B2  0860               	movf	___flmul@temp,w
 16940  01B3  07D7               	addwf	___flmul@grs,f
 16941  01B4  0861               	movf	___flmul@temp+1,w
 16942  01B5  3DD8               	addwfc	___flmul@grs+1,f
 16943  01B6  3000               	movlw	0
 16944  01B7  3DD9               	addwfc	___flmul@grs+2,f
 16945  01B8  3DDA               	addwfc	___flmul@grs+3,f
 16946  01B9  0849               	movf	___flmul@b+1,w
 16947  01BA  00D0               	movwf	??___flmul
 16948  01BB  0850               	movf	??___flmul,w
 16949  01BC  00A0               	movwf	__Umul8_16@multiplicand
 16950  01BD  084E               	movf	___flmul@a+2,w
 16951  01BE  3191  218D  3180   	fcall	__Umul8_16
 16952  01C1  0140               	movlb	0	; select bank0
 16953  01C2  0821               	movf	?__Umul8_16+1,w
 16954  01C3  00E1               	movwf	___flmul@temp+1
 16955  01C4  0820               	movf	?__Umul8_16,w
 16956  01C5  00E0               	movwf	___flmul@temp
 16957  01C6  0860               	movf	___flmul@temp,w
 16958  01C7  07DC               	addwf	___flmul@prod,f
 16959  01C8  0861               	movf	___flmul@temp+1,w
 16960  01C9  3DDD               	addwfc	___flmul@prod+1,f
 16961  01CA  3000               	movlw	0
 16962  01CB  3DDE               	addwfc	___flmul@prod+2,f
 16963  01CC  3DDF               	addwfc	___flmul@prod+3,f
 16964  01CD  084A               	movf	___flmul@b+2,w
 16965  01CE  00D0               	movwf	??___flmul
 16966  01CF  0850               	movf	??___flmul,w
 16967  01D0  00A0               	movwf	__Umul8_16@multiplicand
 16968  01D1  084D               	movf	___flmul@a+1,w
 16969  01D2  3191  218D  3180   	fcall	__Umul8_16
 16970  01D5  0140               	movlb	0	; select bank0
 16971  01D6  0821               	movf	?__Umul8_16+1,w
 16972  01D7  00E1               	movwf	___flmul@temp+1
 16973  01D8  0820               	movf	?__Umul8_16,w
 16974  01D9  00E0               	movwf	___flmul@temp
 16975  01DA  0860               	movf	___flmul@temp,w
 16976  01DB  07DC               	addwf	___flmul@prod,f
 16977  01DC  0861               	movf	___flmul@temp+1,w
 16978  01DD  3DDD               	addwfc	___flmul@prod+1,f
 16979  01DE  3000               	movlw	0
 16980  01DF  3DDE               	addwfc	___flmul@prod+2,f
 16981  01E0  3DDF               	addwfc	___flmul@prod+3,f
 16982  01E1  084A               	movf	___flmul@b+2,w
 16983  01E2  00D0               	movwf	??___flmul
 16984  01E3  0850               	movf	??___flmul,w
 16985  01E4  00A0               	movwf	__Umul8_16@multiplicand
 16986  01E5  084E               	movf	___flmul@a+2,w
 16987  01E6  3191  218D  3180   	fcall	__Umul8_16
 16988  01E9  0140               	movlb	0	; select bank0
 16989  01EA  0821               	movf	?__Umul8_16+1,w
 16990  01EB  00E1               	movwf	___flmul@temp+1
 16991  01EC  0820               	movf	?__Umul8_16,w
 16992  01ED  00E0               	movwf	___flmul@temp
 16993  01EE  0860               	movf	___flmul@temp,w
 16994  01EF  00D0               	movwf	??___flmul
 16995  01F0  0861               	movf	___flmul@temp+1,w
 16996  01F1  00D1               	movwf	??___flmul+1
 16997  01F2  01D2               	clrf	??___flmul+2
 16998  01F3  01D3               	clrf	??___flmul+3
 16999  01F4  3008               	movlw	8
 17000  01F5                     u7475:	
 17001  01F5  35D0               	lslf	??___flmul,f
 17002  01F6  0DD1               	rlf	??___flmul+1,f
 17003  01F7  0DD2               	rlf	??___flmul+2,f
 17004  01F8  0DD3               	rlf	??___flmul+3,f
 17005  01F9  0B89               	decfsz	9,f
 17006  01FA  29F5               	goto	u7475
 17007  01FB  0850               	movf	??___flmul,w
 17008  01FC  07DC               	addwf	___flmul@prod,f
 17009  01FD  0851               	movf	??___flmul+1,w
 17010  01FE  3DDD               	addwfc	___flmul@prod+1,f
 17011  01FF  0852               	movf	??___flmul+2,w
 17012  0200  3DDE               	addwfc	___flmul@prod+2,f
 17013  0201  0853               	movf	??___flmul+3,w
 17014  0202  3DDF               	addwfc	___flmul@prod+3,f
 17015  0203  0857               	movf	___flmul@grs,w
 17016  0204  00D0               	movwf	??___flmul
 17017  0205  0858               	movf	___flmul@grs+1,w
 17018  0206  00D1               	movwf	??___flmul+1
 17019  0207  0859               	movf	___flmul@grs+2,w
 17020  0208  00D2               	movwf	??___flmul+2
 17021  0209  085A               	movf	___flmul@grs+3,w
 17022  020A  00D3               	movwf	??___flmul+3
 17023  020B  3018               	movlw	24
 17024  020C                     u7485:	
 17025  020C  36D3               	lsrf	??___flmul+3,f
 17026  020D  0CD2               	rrf	??___flmul+2,f
 17027  020E  0CD1               	rrf	??___flmul+1,f
 17028  020F  0CD0               	rrf	??___flmul,f
 17029  0210  0B89               	decfsz	9,f
 17030  0211  2A0C               	goto	u7485
 17031  0212  0850               	movf	??___flmul,w
 17032  0213  07DC               	addwf	___flmul@prod,f
 17033  0214  0851               	movf	??___flmul+1,w
 17034  0215  3DDD               	addwfc	___flmul@prod+1,f
 17035  0216  0852               	movf	??___flmul+2,w
 17036  0217  3DDE               	addwfc	___flmul@prod+2,f
 17037  0218  0853               	movf	??___flmul+3,w
 17038  0219  3DDF               	addwfc	___flmul@prod+3,f
 17039  021A  3008               	movlw	8
 17040  021B                     u7495:	
 17041  021B  35D7               	lslf	___flmul@grs,f
 17042  021C  0DD8               	rlf	___flmul@grs+1,f
 17043  021D  0DD9               	rlf	___flmul@grs+2,f
 17044  021E  0DDA               	rlf	___flmul@grs+3,f
 17045  021F  0B89               	decfsz	9,f
 17046  0220  2A1B               	goto	u7495
 17047  0221  085B               	movf	___flmul@bexp,w
 17048  0222  0756               	addwf	___flmul@aexp,w
 17049  0223  00D0               	movwf	??___flmul
 17050  0224  01D1               	clrf	??___flmul+1
 17051  0225  0DD1               	rlf	??___flmul+1,f
 17052  0226  0850               	movf	??___flmul,w
 17053  0227  3E82               	addlw	130
 17054  0228  00E0               	movwf	___flmul@temp
 17055  0229  30FF               	movlw	255
 17056  022A  3D51               	addwfc	??___flmul+1,w
 17057  022B  00E1               	movwf	___flmul@temp+1
 17058  022C                     l7579:	
 17059  022C  1BDE               	btfsc	___flmul@prod+2,7
 17060  022D  2A43               	goto	l7581
 17061  022E  3001               	movlw	1
 17062  022F                     u7505:	
 17063  022F  35DC               	lslf	___flmul@prod,f
 17064  0230  0DDD               	rlf	___flmul@prod+1,f
 17065  0231  0DDE               	rlf	___flmul@prod+2,f
 17066  0232  0DDF               	rlf	___flmul@prod+3,f
 17067  0233  0B89               	decfsz	9,f
 17068  0234  2A2F               	goto	u7505
 17069  0235  1BDA               	btfsc	___flmul@grs+3,7
 17070  0236  145C               	bsf	___flmul@prod,0
 17071  0237  3001               	movlw	1
 17072  0238                     u7525:	
 17073  0238  35D7               	lslf	___flmul@grs,f
 17074  0239  0DD8               	rlf	___flmul@grs+1,f
 17075  023A  0DD9               	rlf	___flmul@grs+2,f
 17076  023B  0DDA               	rlf	___flmul@grs+3,f
 17077  023C  0B89               	decfsz	9,f
 17078  023D  2A38               	goto	u7525
 17079  023E  30FF               	movlw	255
 17080  023F  07E0               	addwf	___flmul@temp,f
 17081  0240  30FF               	movlw	255
 17082  0241  3DE1               	addwfc	___flmul@temp+1,f
 17083  0242  2A2C               	goto	l7579
 17084  0243                     l7581:	
 17085  0243  01D6               	clrf	___flmul@aexp
 17086  0244  1FDA               	btfss	___flmul@grs+3,7
 17087  0245  2A5C               	goto	l7591
 17088  0246  30FF               	movlw	255
 17089  0247  0557               	andwf	___flmul@grs,w
 17090  0248  00D0               	movwf	??___flmul
 17091  0249  30FF               	movlw	255
 17092  024A  0558               	andwf	___flmul@grs+1,w
 17093  024B  00D1               	movwf	??___flmul+1
 17094  024C  30FF               	movlw	255
 17095  024D  0559               	andwf	___flmul@grs+2,w
 17096  024E  00D2               	movwf	??___flmul+2
 17097  024F  307F               	movlw	127
 17098  0250  055A               	andwf	___flmul@grs+3,w
 17099  0251  00D3               	movwf	??___flmul+3
 17100  0252  0853               	movf	??___flmul+3,w
 17101  0253  0452               	iorwf	??___flmul+2,w
 17102  0254  0451               	iorwf	??___flmul+1,w
 17103  0255  0450               	iorwf	??___flmul,w
 17104  0256  1903               	skipnz
 17105  0257  185C               	btfsc	___flmul@prod,0
 17106  0258  2A5A               	goto	l7587
 17107  0259  2A5C               	goto	l7591
 17108  025A                     l7587:	
 17109  025A  01D6               	clrf	___flmul@aexp
 17110  025B  0AD6               	incf	___flmul@aexp,f
 17111  025C                     l7591:	
 17112  025C  0856               	movf	___flmul@aexp,w
 17113  025D  1903               	btfsc	3,2
 17114  025E  2A85               	goto	l7601
 17115  025F  3001               	movlw	1
 17116  0260  07DC               	addwf	___flmul@prod,f
 17117  0261  3000               	movlw	0
 17118  0262  3DDD               	addwfc	___flmul@prod+1,f
 17119  0263  3000               	movlw	0
 17120  0264  3DDE               	addwfc	___flmul@prod+2,f
 17121  0265  3000               	movlw	0
 17122  0266  3DDF               	addwfc	___flmul@prod+3,f
 17123  0267  1C5F               	btfss	___flmul@prod+3,0
 17124  0268  2A85               	goto	l7601
 17125  0269  085C               	movf	___flmul@prod,w
 17126  026A  00D0               	movwf	??___flmul
 17127  026B  085D               	movf	___flmul@prod+1,w
 17128  026C  00D1               	movwf	??___flmul+1
 17129  026D  085E               	movf	___flmul@prod+2,w
 17130  026E  00D2               	movwf	??___flmul+2
 17131  026F  085F               	movf	___flmul@prod+3,w
 17132  0270  00D3               	movwf	??___flmul+3
 17133  0271  3001               	movlw	1
 17134  0272  00D4               	movwf	??___flmul+4
 17135  0273                     u7595:	
 17136  0273  37D3               	asrf	??___flmul+3,f
 17137  0274  0CD2               	rrf	??___flmul+2,f
 17138  0275  0CD1               	rrf	??___flmul+1,f
 17139  0276  0CD0               	rrf	??___flmul,f
 17140  0277  0BD4               	decfsz	??___flmul+4,f
 17141  0278  2A73               	goto	u7595
 17142  0279  0853               	movf	??___flmul+3,w
 17143  027A  00DF               	movwf	___flmul@prod+3
 17144  027B  0852               	movf	??___flmul+2,w
 17145  027C  00DE               	movwf	___flmul@prod+2
 17146  027D  0851               	movf	??___flmul+1,w
 17147  027E  00DD               	movwf	___flmul@prod+1
 17148  027F  0850               	movf	??___flmul,w
 17149  0280  00DC               	movwf	___flmul@prod
 17150  0281  3001               	movlw	1
 17151  0282  07E0               	addwf	___flmul@temp,f
 17152  0283  3000               	movlw	0
 17153  0284  3DE1               	addwfc	___flmul@temp+1,f
 17154  0285                     l7601:	
 17155  0285  0861               	movf	___flmul@temp+1,w
 17156  0286  3A80               	xorlw	128
 17157  0287  00D0               	movwf	??___flmul
 17158  0288  3080               	movlw	128
 17159  0289  0250               	subwf	??___flmul,w
 17160  028A  1D03               	skipz
 17161  028B  2A8E               	goto	u7605
 17162  028C  30FF               	movlw	255
 17163  028D  0260               	subwf	___flmul@temp,w
 17164  028E                     u7605:	
 17165  028E  1C03               	skipc
 17166  028F  2A9A               	goto	l7605
 17167  0290  307F               	movlw	127
 17168  0291  0140               	movlb	0	; select bank0
 17169  0292  00DF               	movwf	___flmul@prod+3
 17170  0293  3080               	movlw	128
 17171  0294  00DE               	movwf	___flmul@prod+2
 17172  0295  3000               	movlw	0
 17173  0296  00DD               	movwf	___flmul@prod+1
 17174  0297  3000               	movlw	0
 17175  0298  00DC               	movwf	___flmul@prod
 17176  0299  2AC4               	goto	l2113
 17177  029A                     l7605:	
 17178  029A  0140               	movlb	0	; select bank0
 17179  029B  0861               	movf	___flmul@temp+1,w
 17180  029C  3A80               	xorlw	128
 17181  029D  00D0               	movwf	??___flmul
 17182  029E  3080               	movlw	128
 17183  029F  0250               	subwf	??___flmul,w
 17184  02A0  1D03               	skipz
 17185  02A1  2AA4               	goto	u7615
 17186  02A2  3001               	movlw	1
 17187  02A3  0260               	subwf	___flmul@temp,w
 17188  02A4                     u7615:	
 17189  02A4  1803               	skipnc
 17190  02A5  2AB1               	goto	l7611
 17191  02A6  3000               	movlw	0
 17192  02A7  0140               	movlb	0	; select bank0
 17193  02A8  00DF               	movwf	___flmul@prod+3
 17194  02A9  3000               	movlw	0
 17195  02AA  00DE               	movwf	___flmul@prod+2
 17196  02AB  3000               	movlw	0
 17197  02AC  00DD               	movwf	___flmul@prod+1
 17198  02AD  3000               	movlw	0
 17199  02AE  00DC               	movwf	___flmul@prod
 17200  02AF  01D5               	clrf	___flmul@sign
 17201  02B0  2AC4               	goto	l2113
 17202  02B1                     l7611:	
 17203  02B1  0140               	movlb	0	; select bank0
 17204  02B2  0860               	movf	___flmul@temp,w
 17205  02B3  00D0               	movwf	??___flmul
 17206  02B4  0850               	movf	??___flmul,w
 17207  02B5  00DB               	movwf	___flmul@bexp
 17208  02B6  30FF               	movlw	255
 17209  02B7  05DC               	andwf	___flmul@prod,f
 17210  02B8  30FF               	movlw	255
 17211  02B9  05DD               	andwf	___flmul@prod+1,f
 17212  02BA  307F               	movlw	127
 17213  02BB  05DE               	andwf	___flmul@prod+2,f
 17214  02BC  3000               	movlw	0
 17215  02BD  05DF               	andwf	___flmul@prod+3,f
 17216  02BE  185B               	btfsc	___flmul@bexp,0
 17217  02BF  17DE               	bsf	___flmul@prod+2,7
 17218  02C0  365B               	lsrf	___flmul@bexp,w
 17219  02C1  00D0               	movwf	??___flmul
 17220  02C2  0850               	movf	??___flmul,w
 17221  02C3  00DF               	movwf	___flmul@prod+3
 17222  02C4                     l2113:	
 17223  02C4  0855               	movf	___flmul@sign,w
 17224  02C5  00D0               	movwf	??___flmul
 17225  02C6  0850               	movf	??___flmul,w
 17226  02C7  04DF               	iorwf	___flmul@prod+3,f
 17227  02C8  085F               	movf	___flmul@prod+3,w
 17228  02C9  00CB               	movwf	?___flmul+3
 17229  02CA  085E               	movf	___flmul@prod+2,w
 17230  02CB  00CA               	movwf	?___flmul+2
 17231  02CC  085D               	movf	___flmul@prod+1,w
 17232  02CD  00C9               	movwf	?___flmul+1
 17233  02CE  085C               	movf	___flmul@prod,w
 17234  02CF  00C8               	movwf	?___flmul
 17235  02D0  0008               	return
 17236  02D1                     __end_of___flmul:	
 17237                           
 17238                           	psect	text44
 17239  118D                     __ptext44:	
 17240 ;; *************** function __Umul8_16 *****************
 17241 ;; Defined at:
 17242 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 17243 ;; Parameters:    Size  Location     Type
 17244 ;;  multiplier      1    wreg     unsigned char 
 17245 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 17246 ;; Auto vars:     Size  Location     Type
 17247 ;;  multiplier      1    8[BANK0 ] unsigned char 
 17248 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 17249 ;;  product         2    4[BANK0 ] unsigned int 
 17250 ;; Return value:  Size  Location     Type
 17251 ;;                  2    0[BANK0 ] unsigned int 
 17252 ;; Registers used:
 17253 ;;		wreg, status,2, status,0
 17254 ;; Tracked objects:
 17255 ;;		On entry : 0/0
 17256 ;;		On exit  : 0/0
 17257 ;;		Unchanged: 0/0
 17258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17259 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17260 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17262 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17263 ;;Total ram usage:        9 bytes
 17264 ;; Hardware stack levels used:    1
 17265 ;; Hardware stack levels required when called:    4
 17266 ;; This function calls:
 17267 ;;		Nothing
 17268 ;; This function is called by:
 17269 ;;		___flmul
 17270 ;; This function uses a non-reentrant model
 17271 ;;
 17272                           
 17273                           
 17274                           ;psect for function __Umul8_16
 17275  118D                     __Umul8_16:	
 17276                           
 17277                           ;incstack = 0
 17278                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 17279                           ;__Umul8_16@multiplier stored from wreg
 17280  118D  0140               	movlb	0	; select bank0
 17281  118E  00A8               	movwf	__Umul8_16@multiplier
 17282  118F  01A4               	clrf	__Umul8_16@product
 17283  1190  01A5               	clrf	__Umul8_16@product+1
 17284  1191  0820               	movf	__Umul8_16@multiplicand,w
 17285  1192  00A2               	movwf	??__Umul8_16
 17286  1193  01A3               	clrf	??__Umul8_16+1
 17287  1194  0822               	movf	??__Umul8_16,w
 17288  1195  00A6               	movwf	__Umul8_16@word_mpld
 17289  1196  0823               	movf	??__Umul8_16+1,w
 17290  1197  00A7               	movwf	__Umul8_16@word_mpld+1
 17291  1198                     l7041:	
 17292  1198  1C28               	btfss	__Umul8_16@multiplier,0
 17293  1199  299E               	goto	l2191
 17294  119A  0826               	movf	__Umul8_16@word_mpld,w
 17295  119B  07A4               	addwf	__Umul8_16@product,f
 17296  119C  0827               	movf	__Umul8_16@word_mpld+1,w
 17297  119D  3DA5               	addwfc	__Umul8_16@product+1,f
 17298  119E                     l2191:	
 17299  119E  3001               	movlw	1
 17300  119F                     u6375:	
 17301  119F  35A6               	lslf	__Umul8_16@word_mpld,f
 17302  11A0  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 17303  11A1  0B89               	decfsz	9,f
 17304  11A2  299F               	goto	u6375
 17305  11A3  1003               	clrc
 17306  11A4  0CA8               	rrf	__Umul8_16@multiplier,f
 17307  11A5  0828               	movf	__Umul8_16@multiplier,w
 17308  11A6  1D03               	btfss	3,2
 17309  11A7  2998               	goto	l7041
 17310  11A8  0825               	movf	__Umul8_16@product+1,w
 17311  11A9  00A1               	movwf	?__Umul8_16+1
 17312  11AA  0824               	movf	__Umul8_16@product,w
 17313  11AB  00A0               	movwf	?__Umul8_16
 17314  11AC  0008               	return
 17315  11AD                     __end_of__Umul8_16:	
 17316                           
 17317                           	psect	text45
 17318  0469                     __ptext45:	
 17319 ;; *************** function ___fldiv *****************
 17320 ;; Defined at:
 17321 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 17322 ;; Parameters:    Size  Location     Type
 17323 ;;  a               4   14[BANK0 ] unsigned int 
 17324 ;;  b               4   18[BANK0 ] unsigned int 
 17325 ;; Auto vars:     Size  Location     Type
 17326 ;;  grs             4   34[BANK0 ] unsigned long 
 17327 ;;  rem             4   27[BANK0 ] unsigned long 
 17328 ;;  new_exp         2   32[BANK0 ] int 
 17329 ;;  aexp            1   39[BANK0 ] unsigned char 
 17330 ;;  bexp            1   38[BANK0 ] unsigned char 
 17331 ;;  sign            1   31[BANK0 ] unsigned char 
 17332 ;; Return value:  Size  Location     Type
 17333 ;;                  4   14[BANK0 ] unsigned char 
 17334 ;; Registers used:
 17335 ;;		wreg, status,2, status,0
 17336 ;; Tracked objects:
 17337 ;;		On entry : 0/0
 17338 ;;		On exit  : 0/0
 17339 ;;		Unchanged: 0/0
 17340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17341 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17342 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17343 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17344 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17345 ;;Total ram usage:       26 bytes
 17346 ;; Hardware stack levels used:    1
 17347 ;; Hardware stack levels required when called:    4
 17348 ;; This function calls:
 17349 ;;		Nothing
 17350 ;; This function is called by:
 17351 ;;		_LED_setColor
 17352 ;;		_beatBrightnessCalculation
 17353 ;; This function uses a non-reentrant model
 17354 ;;
 17355                           
 17356                           
 17357                           ;psect for function ___fldiv
 17358  0469                     ___fldiv:	
 17359                           
 17360                           ;incstack = 0
 17361                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 17362  0469  0140               	movlb	0	; select bank0
 17363  046A  0835               	movf	___fldiv@b+3,w
 17364  046B  3980               	andlw	128
 17365  046C  00B6               	movwf	??___fldiv
 17366  046D  0836               	movf	??___fldiv,w
 17367  046E  00BF               	movwf	___fldiv@sign
 17368  046F  3535               	lslf	___fldiv@b+3,w
 17369  0470  00B6               	movwf	??___fldiv
 17370  0471  0836               	movf	??___fldiv,w
 17371  0472  00C6               	movwf	___fldiv@bexp
 17372  0473  1BB4               	btfsc	___fldiv@b+2,7
 17373  0474  1446               	bsf	___fldiv@bexp,0
 17374  0475  0846               	movf	___fldiv@bexp,w
 17375  0476  1903               	btfsc	3,2
 17376  0477  2C86               	goto	l7361
 17377  0478  0A46               	incf	___fldiv@bexp,w
 17378  0479  1D03               	btfss	3,2
 17379  047A  2C83               	goto	l7357
 17380  047B  3000               	movlw	0
 17381  047C  00B5               	movwf	___fldiv@b+3
 17382  047D  3000               	movlw	0
 17383  047E  00B4               	movwf	___fldiv@b+2
 17384  047F  3000               	movlw	0
 17385  0480  00B3               	movwf	___fldiv@b+1
 17386  0481  3000               	movlw	0
 17387  0482  00B2               	movwf	___fldiv@b
 17388  0483                     l7357:	
 17389  0483  17B4               	bsf	___fldiv@b+2,7
 17390  0484  01B5               	clrf	___fldiv@b+3
 17391  0485  2C8E               	goto	l7363
 17392  0486                     l7361:	
 17393  0486  3000               	movlw	0
 17394  0487  00B5               	movwf	___fldiv@b+3
 17395  0488  3000               	movlw	0
 17396  0489  00B4               	movwf	___fldiv@b+2
 17397  048A  3000               	movlw	0
 17398  048B  00B3               	movwf	___fldiv@b+1
 17399  048C  3000               	movlw	0
 17400  048D  00B2               	movwf	___fldiv@b
 17401  048E                     l7363:	
 17402  048E  0831               	movf	___fldiv@a+3,w
 17403  048F  3980               	andlw	128
 17404  0490  00B6               	movwf	??___fldiv
 17405  0491  0836               	movf	??___fldiv,w
 17406  0492  06BF               	xorwf	___fldiv@sign,f
 17407  0493  3531               	lslf	___fldiv@a+3,w
 17408  0494  00B6               	movwf	??___fldiv
 17409  0495  0836               	movf	??___fldiv,w
 17410  0496  00C7               	movwf	___fldiv@aexp
 17411  0497  1BB0               	btfsc	___fldiv@a+2,7
 17412  0498  1447               	bsf	___fldiv@aexp,0
 17413  0499  0847               	movf	___fldiv@aexp,w
 17414  049A  1903               	btfsc	3,2
 17415  049B  2CAA               	goto	l7381
 17416  049C  0A47               	incf	___fldiv@aexp,w
 17417  049D  1D03               	btfss	3,2
 17418  049E  2CA7               	goto	l7377
 17419  049F  3000               	movlw	0
 17420  04A0  00B1               	movwf	___fldiv@a+3
 17421  04A1  3000               	movlw	0
 17422  04A2  00B0               	movwf	___fldiv@a+2
 17423  04A3  3000               	movlw	0
 17424  04A4  00AF               	movwf	___fldiv@a+1
 17425  04A5  3000               	movlw	0
 17426  04A6  00AE               	movwf	___fldiv@a
 17427  04A7                     l7377:	
 17428  04A7  17B0               	bsf	___fldiv@a+2,7
 17429  04A8  01B1               	clrf	___fldiv@a+3
 17430  04A9  2CB2               	goto	l2061
 17431  04AA                     l7381:	
 17432  04AA  3000               	movlw	0
 17433  04AB  00B1               	movwf	___fldiv@a+3
 17434  04AC  3000               	movlw	0
 17435  04AD  00B0               	movwf	___fldiv@a+2
 17436  04AE  3000               	movlw	0
 17437  04AF  00AF               	movwf	___fldiv@a+1
 17438  04B0  3000               	movlw	0
 17439  04B1  00AE               	movwf	___fldiv@a
 17440  04B2                     l2061:	
 17441  04B2  0831               	movf	___fldiv@a+3,w
 17442  04B3  0430               	iorwf	___fldiv@a+2,w
 17443  04B4  042F               	iorwf	___fldiv@a+1,w
 17444  04B5  042E               	iorwf	___fldiv@a,w
 17445  04B6  1D03               	skipz
 17446  04B7  2CD1               	goto	l7391
 17447  04B8  3000               	movlw	0
 17448  04B9  00B5               	movwf	___fldiv@b+3
 17449  04BA  3000               	movlw	0
 17450  04BB  00B4               	movwf	___fldiv@b+2
 17451  04BC  3000               	movlw	0
 17452  04BD  00B3               	movwf	___fldiv@b+1
 17453  04BE  3000               	movlw	0
 17454  04BF  00B2               	movwf	___fldiv@b
 17455  04C0  3080               	movlw	128
 17456  04C1  04B4               	iorwf	___fldiv@b+2,f
 17457  04C2  307F               	movlw	127
 17458  04C3  04B5               	iorwf	___fldiv@b+3,f
 17459  04C4                     L18:	
 17460  04C4  083F               	movf	___fldiv@sign,w
 17461  04C5  00B6               	movwf	??___fldiv
 17462  04C6  0836               	movf	??___fldiv,w
 17463  04C7  04B5               	iorwf	___fldiv@b+3,f
 17464  04C8  0835               	movf	___fldiv@b+3,w
 17465  04C9  00B1               	movwf	?___fldiv+3
 17466  04CA  0834               	movf	___fldiv@b+2,w
 17467  04CB  00B0               	movwf	?___fldiv+2
 17468  04CC  0833               	movf	___fldiv@b+1,w
 17469  04CD  00AF               	movwf	?___fldiv+1
 17470  04CE  0832               	movf	___fldiv@b,w
 17471  04CF  00AE               	movwf	?___fldiv
 17472  04D0  0008               	return
 17473  04D1                     l7391:	
 17474  04D1  0846               	movf	___fldiv@bexp,w
 17475  04D2  1D03               	btfss	3,2
 17476  04D3  2CDD               	goto	l7397
 17477  04D4  3000               	movlw	0
 17478  04D5  00B1               	movwf	?___fldiv+3
 17479  04D6  3000               	movlw	0
 17480  04D7  00B0               	movwf	?___fldiv+2
 17481  04D8  3000               	movlw	0
 17482  04D9  00AF               	movwf	?___fldiv+1
 17483  04DA  3000               	movlw	0
 17484  04DB  00AE               	movwf	?___fldiv
 17485  04DC  0008               	return
 17486  04DD                     l7397:	
 17487  04DD  0846               	movf	___fldiv@bexp,w
 17488  04DE  00B6               	movwf	??___fldiv
 17489  04DF  01B7               	clrf	??___fldiv+1
 17490  04E0  0837               	movf	??___fldiv+1,w
 17491  04E1  00B9               	movwf	??___fldiv+3
 17492  04E2  0847               	movf	___fldiv@aexp,w
 17493  04E3  0236               	subwf	??___fldiv,w
 17494  04E4  00B8               	movwf	??___fldiv+2
 17495  04E5  1C03               	skipc
 17496  04E6  03B9               	decf	??___fldiv+3,f
 17497  04E7  0838               	movf	??___fldiv+2,w
 17498  04E8  3E7F               	addlw	127
 17499  04E9  00C0               	movwf	___fldiv@new_exp
 17500  04EA  3000               	movlw	0
 17501  04EB  3D39               	addwfc	??___fldiv+3,w
 17502  04EC  00C1               	movwf	___fldiv@new_exp+1
 17503  04ED  0835               	movf	___fldiv@b+3,w
 17504  04EE  00BE               	movwf	___fldiv@rem+3
 17505  04EF  0834               	movf	___fldiv@b+2,w
 17506  04F0  00BD               	movwf	___fldiv@rem+2
 17507  04F1  0833               	movf	___fldiv@b+1,w
 17508  04F2  00BC               	movwf	___fldiv@rem+1
 17509  04F3  0832               	movf	___fldiv@b,w
 17510  04F4  00BB               	movwf	___fldiv@rem
 17511  04F5  3000               	movlw	0
 17512  04F6  00B5               	movwf	___fldiv@b+3
 17513  04F7  3000               	movlw	0
 17514  04F8  00B4               	movwf	___fldiv@b+2
 17515  04F9  3000               	movlw	0
 17516  04FA  00B3               	movwf	___fldiv@b+1
 17517  04FB  3000               	movlw	0
 17518  04FC  00B2               	movwf	___fldiv@b
 17519  04FD  3000               	movlw	0
 17520  04FE  00C5               	movwf	___fldiv@grs+3
 17521  04FF  3000               	movlw	0
 17522  0500  00C4               	movwf	___fldiv@grs+2
 17523  0501  3000               	movlw	0
 17524  0502  00C3               	movwf	___fldiv@grs+1
 17525  0503  3000               	movlw	0
 17526  0504  00C2               	movwf	___fldiv@grs
 17527  0505  01C7               	clrf	___fldiv@aexp
 17528  0506                     l7425:	
 17529  0506  301A               	movlw	26
 17530  0507  0247               	subwf	___fldiv@aexp,w
 17531  0508  1803               	btfsc	3,0
 17532  0509  2D42               	goto	l7427
 17533  050A  0847               	movf	___fldiv@aexp,w
 17534  050B  1903               	btfsc	3,2
 17535  050C  2D24               	goto	l7417
 17536  050D  3001               	movlw	1
 17537  050E                     u7175:	
 17538  050E  35BB               	lslf	___fldiv@rem,f
 17539  050F  0DBC               	rlf	___fldiv@rem+1,f
 17540  0510  0DBD               	rlf	___fldiv@rem+2,f
 17541  0511  0DBE               	rlf	___fldiv@rem+3,f
 17542  0512  0B89               	decfsz	9,f
 17543  0513  2D0E               	goto	u7175
 17544  0514  3001               	movlw	1
 17545  0515                     u7185:	
 17546  0515  35B2               	lslf	___fldiv@b,f
 17547  0516  0DB3               	rlf	___fldiv@b+1,f
 17548  0517  0DB4               	rlf	___fldiv@b+2,f
 17549  0518  0DB5               	rlf	___fldiv@b+3,f
 17550  0519  0B89               	decfsz	9,f
 17551  051A  2D15               	goto	u7185
 17552  051B  1BC5               	btfsc	___fldiv@grs+3,7
 17553  051C  1432               	bsf	___fldiv@b,0
 17554  051D  3001               	movlw	1
 17555  051E                     u7205:	
 17556  051E  35C2               	lslf	___fldiv@grs,f
 17557  051F  0DC3               	rlf	___fldiv@grs+1,f
 17558  0520  0DC4               	rlf	___fldiv@grs+2,f
 17559  0521  0DC5               	rlf	___fldiv@grs+3,f
 17560  0522  0B89               	decfsz	9,f
 17561  0523  2D1E               	goto	u7205
 17562  0524                     l7417:	
 17563  0524  0831               	movf	___fldiv@a+3,w
 17564  0525  023E               	subwf	___fldiv@rem+3,w
 17565  0526  1D03               	skipz
 17566  0527  2D32               	goto	u7215
 17567  0528  0830               	movf	___fldiv@a+2,w
 17568  0529  023D               	subwf	___fldiv@rem+2,w
 17569  052A  1D03               	skipz
 17570  052B  2D32               	goto	u7215
 17571  052C  082F               	movf	___fldiv@a+1,w
 17572  052D  023C               	subwf	___fldiv@rem+1,w
 17573  052E  1D03               	skipz
 17574  052F  2D32               	goto	u7215
 17575  0530  082E               	movf	___fldiv@a,w
 17576  0531  023B               	subwf	___fldiv@rem,w
 17577  0532                     u7215:	
 17578  0532  1C03               	skipc
 17579  0533  2D3D               	goto	l7423
 17580  0534  1745               	bsf	___fldiv@grs+3,6
 17581  0535  082E               	movf	___fldiv@a,w
 17582  0536  02BB               	subwf	___fldiv@rem,f
 17583  0537  082F               	movf	___fldiv@a+1,w
 17584  0538  3BBC               	subwfb	___fldiv@rem+1,f
 17585  0539  0830               	movf	___fldiv@a+2,w
 17586  053A  3BBD               	subwfb	___fldiv@rem+2,f
 17587  053B  0831               	movf	___fldiv@a+3,w
 17588  053C  3BBE               	subwfb	___fldiv@rem+3,f
 17589  053D                     l7423:	
 17590  053D  3001               	movlw	1
 17591  053E  00B6               	movwf	??___fldiv
 17592  053F  0836               	movf	??___fldiv,w
 17593  0540  07C7               	addwf	___fldiv@aexp,f
 17594  0541  2D06               	goto	l7425
 17595  0542                     l7427:	
 17596  0542  083E               	movf	___fldiv@rem+3,w
 17597  0543  043D               	iorwf	___fldiv@rem+2,w
 17598  0544  043C               	iorwf	___fldiv@rem+1,w
 17599  0545  043B               	iorwf	___fldiv@rem,w
 17600  0546  1D03               	btfss	3,2
 17601  0547  1442               	bsf	___fldiv@grs,0
 17602  0548                     l7441:	
 17603  0548  1BB4               	btfsc	___fldiv@b+2,7
 17604  0549  2D5F               	goto	l7443
 17605  054A  3001               	movlw	1
 17606  054B                     u7245:	
 17607  054B  35B2               	lslf	___fldiv@b,f
 17608  054C  0DB3               	rlf	___fldiv@b+1,f
 17609  054D  0DB4               	rlf	___fldiv@b+2,f
 17610  054E  0DB5               	rlf	___fldiv@b+3,f
 17611  054F  0B89               	decfsz	9,f
 17612  0550  2D4B               	goto	u7245
 17613  0551  1BC5               	btfsc	___fldiv@grs+3,7
 17614  0552  1432               	bsf	___fldiv@b,0
 17615  0553  3001               	movlw	1
 17616  0554                     u7265:	
 17617  0554  35C2               	lslf	___fldiv@grs,f
 17618  0555  0DC3               	rlf	___fldiv@grs+1,f
 17619  0556  0DC4               	rlf	___fldiv@grs+2,f
 17620  0557  0DC5               	rlf	___fldiv@grs+3,f
 17621  0558  0B89               	decfsz	9,f
 17622  0559  2D54               	goto	u7265
 17623  055A  30FF               	movlw	255
 17624  055B  07C0               	addwf	___fldiv@new_exp,f
 17625  055C  30FF               	movlw	255
 17626  055D  3DC1               	addwfc	___fldiv@new_exp+1,f
 17627  055E  2D48               	goto	l7441
 17628  055F                     l7443:	
 17629  055F  01C7               	clrf	___fldiv@aexp
 17630  0560  1FC5               	btfss	___fldiv@grs+3,7
 17631  0561  2D78               	goto	l7453
 17632  0562  30FF               	movlw	255
 17633  0563  0542               	andwf	___fldiv@grs,w
 17634  0564  00B6               	movwf	??___fldiv
 17635  0565  30FF               	movlw	255
 17636  0566  0543               	andwf	___fldiv@grs+1,w
 17637  0567  00B7               	movwf	??___fldiv+1
 17638  0568  30FF               	movlw	255
 17639  0569  0544               	andwf	___fldiv@grs+2,w
 17640  056A  00B8               	movwf	??___fldiv+2
 17641  056B  307F               	movlw	127
 17642  056C  0545               	andwf	___fldiv@grs+3,w
 17643  056D  00B9               	movwf	??___fldiv+3
 17644  056E  0839               	movf	??___fldiv+3,w
 17645  056F  0438               	iorwf	??___fldiv+2,w
 17646  0570  0437               	iorwf	??___fldiv+1,w
 17647  0571  0436               	iorwf	??___fldiv,w
 17648  0572  1903               	skipnz
 17649  0573  1832               	btfsc	___fldiv@b,0
 17650  0574  2D76               	goto	l7449
 17651  0575  2D78               	goto	l7453
 17652  0576                     l7449:	
 17653  0576  01C7               	clrf	___fldiv@aexp
 17654  0577  0AC7               	incf	___fldiv@aexp,f
 17655  0578                     l7453:	
 17656  0578  0847               	movf	___fldiv@aexp,w
 17657  0579  1903               	btfsc	3,2
 17658  057A  2DA1               	goto	l7463
 17659  057B  3001               	movlw	1
 17660  057C  07B2               	addwf	___fldiv@b,f
 17661  057D  3000               	movlw	0
 17662  057E  3DB3               	addwfc	___fldiv@b+1,f
 17663  057F  3000               	movlw	0
 17664  0580  3DB4               	addwfc	___fldiv@b+2,f
 17665  0581  3000               	movlw	0
 17666  0582  3DB5               	addwfc	___fldiv@b+3,f
 17667  0583  1C35               	btfss	___fldiv@b+3,0
 17668  0584  2DA1               	goto	l7463
 17669  0585  0832               	movf	___fldiv@b,w
 17670  0586  00B6               	movwf	??___fldiv
 17671  0587  0833               	movf	___fldiv@b+1,w
 17672  0588  00B7               	movwf	??___fldiv+1
 17673  0589  0834               	movf	___fldiv@b+2,w
 17674  058A  00B8               	movwf	??___fldiv+2
 17675  058B  0835               	movf	___fldiv@b+3,w
 17676  058C  00B9               	movwf	??___fldiv+3
 17677  058D  3001               	movlw	1
 17678  058E  00BA               	movwf	??___fldiv+4
 17679  058F                     u7335:	
 17680  058F  37B9               	asrf	??___fldiv+3,f
 17681  0590  0CB8               	rrf	??___fldiv+2,f
 17682  0591  0CB7               	rrf	??___fldiv+1,f
 17683  0592  0CB6               	rrf	??___fldiv,f
 17684  0593  0BBA               	decfsz	??___fldiv+4,f
 17685  0594  2D8F               	goto	u7335
 17686  0595  0839               	movf	??___fldiv+3,w
 17687  0596  00B5               	movwf	___fldiv@b+3
 17688  0597  0838               	movf	??___fldiv+2,w
 17689  0598  00B4               	movwf	___fldiv@b+2
 17690  0599  0837               	movf	??___fldiv+1,w
 17691  059A  00B3               	movwf	___fldiv@b+1
 17692  059B  0836               	movf	??___fldiv,w
 17693  059C  00B2               	movwf	___fldiv@b
 17694  059D  3001               	movlw	1
 17695  059E  07C0               	addwf	___fldiv@new_exp,f
 17696  059F  3000               	movlw	0
 17697  05A0  3DC1               	addwfc	___fldiv@new_exp+1,f
 17698  05A1                     l7463:	
 17699  05A1  0841               	movf	___fldiv@new_exp+1,w
 17700  05A2  3A80               	xorlw	128
 17701  05A3  00B6               	movwf	??___fldiv
 17702  05A4  3080               	movlw	128
 17703  05A5  0236               	subwf	??___fldiv,w
 17704  05A6  1D03               	skipz
 17705  05A7  2DAA               	goto	u7345
 17706  05A8  30FF               	movlw	255
 17707  05A9  0240               	subwf	___fldiv@new_exp,w
 17708  05AA                     u7345:	
 17709  05AA  1C03               	skipc
 17710  05AB  2DB9               	goto	l2082
 17711  05AC  30FF               	movlw	255
 17712  05AD  0140               	movlb	0	; select bank0
 17713  05AE  00C0               	movwf	___fldiv@new_exp
 17714  05AF  3000               	movlw	0
 17715  05B0  00C1               	movwf	___fldiv@new_exp+1
 17716  05B1  3000               	movlw	0
 17717  05B2  00B5               	movwf	___fldiv@b+3
 17718  05B3  3000               	movlw	0
 17719  05B4  00B4               	movwf	___fldiv@b+2
 17720  05B5  3000               	movlw	0
 17721  05B6  00B3               	movwf	___fldiv@b+1
 17722  05B7  3000               	movlw	0
 17723  05B8  00B2               	movwf	___fldiv@b
 17724  05B9                     l2082:	
 17725  05B9  0140               	movlb	0	; select bank0
 17726  05BA  0841               	movf	___fldiv@new_exp+1,w
 17727  05BB  3A80               	xorlw	128
 17728  05BC  00B6               	movwf	??___fldiv
 17729  05BD  3080               	movlw	128
 17730  05BE  0236               	subwf	??___fldiv,w
 17731  05BF  1D03               	skipz
 17732  05C0  2DC3               	goto	u7355
 17733  05C1  3001               	movlw	1
 17734  05C2  0240               	subwf	___fldiv@new_exp,w
 17735  05C3                     u7355:	
 17736  05C3  1803               	skipnc
 17737  05C4  2DD1               	goto	l2083
 17738  05C5  0140               	movlb	0	; select bank0
 17739  05C6  01C0               	clrf	___fldiv@new_exp
 17740  05C7  01C1               	clrf	___fldiv@new_exp+1
 17741  05C8  3000               	movlw	0
 17742  05C9  00B5               	movwf	___fldiv@b+3
 17743  05CA  3000               	movlw	0
 17744  05CB  00B4               	movwf	___fldiv@b+2
 17745  05CC  3000               	movlw	0
 17746  05CD  00B3               	movwf	___fldiv@b+1
 17747  05CE  3000               	movlw	0
 17748  05CF  00B2               	movwf	___fldiv@b
 17749  05D0  01BF               	clrf	___fldiv@sign
 17750  05D1                     l2083:	
 17751  05D1  0140               	movlb	0	; select bank0
 17752  05D2  0840               	movf	___fldiv@new_exp,w
 17753  05D3  00B6               	movwf	??___fldiv
 17754  05D4  0836               	movf	??___fldiv,w
 17755  05D5  00C6               	movwf	___fldiv@bexp
 17756  05D6  1C46               	btfss	___fldiv@bexp,0
 17757  05D7  2DDA               	goto	l7477
 17758  05D8  17B4               	bsf	___fldiv@b+2,7
 17759  05D9  2DDE               	goto	l2085
 17760  05DA                     l7477:	
 17761  05DA  307F               	movlw	127
 17762  05DB  00B6               	movwf	??___fldiv
 17763  05DC  0836               	movf	??___fldiv,w
 17764  05DD  05B4               	andwf	___fldiv@b+2,f
 17765  05DE                     l2085:	
 17766  05DE  3646               	lsrf	___fldiv@bexp,w
 17767  05DF  00B6               	movwf	??___fldiv
 17768  05E0  0836               	movf	??___fldiv,w
 17769  05E1  00B5               	movwf	___fldiv@b+3
 17770  05E2  2CC4               	goto	L18
 17771  05E3                     __end_of___fldiv:	
 17772                           
 17773                           	psect	text46
 17774  114F                     __ptext46:	
 17775 ;; *************** function _PWM4_LoadDutyValue *****************
 17776 ;; Defined at:
 17777 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;		None
 17782 ;; Return value:  Size  Location     Type
 17783 ;;                  1    wreg      void 
 17784 ;; Registers used:
 17785 ;;		wreg, status,2
 17786 ;; Tracked objects:
 17787 ;;		On entry : 0/0
 17788 ;;		On exit  : 0/0
 17789 ;;		Unchanged: 0/0
 17790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17794 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17795 ;;Total ram usage:        2 bytes
 17796 ;; Hardware stack levels used:    1
 17797 ;; Hardware stack levels required when called:    4
 17798 ;; This function calls:
 17799 ;;		Nothing
 17800 ;; This function is called by:
 17801 ;;		_LED_setColor
 17802 ;; This function uses a non-reentrant model
 17803 ;;
 17804                           
 17805                           
 17806                           ;psect for function _PWM4_LoadDutyValue
 17807  114F                     _PWM4_LoadDutyValue:	
 17808                           
 17809                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 127){
 17810                           
 17811                           ;incstack = 0
 17812                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 17813  114F  3000               	movlw	0
 17814  1150  0140               	movlb	0	; select bank0
 17815  1151  026E               	subwf	PWM4_LoadDutyValue@dutyValue+1,w
 17816  1152  3080               	movlw	128
 17817  1153  1903               	skipnz
 17818  1154  026D               	subwf	PWM4_LoadDutyValue@dutyValue,w
 17819  1155  1803               	skipnc
 17820  1156  0008               	return
 17821                           
 17822                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 17823  1157  30FF               	movlw	255
 17824  1158  05ED               	andwf	PWM4_LoadDutyValue@dutyValue,f
 17825  1159  3003               	movlw	3
 17826  115A  05EE               	andwf	PWM4_LoadDutyValue@dutyValue+1,f
 17827                           
 17828                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 17829  115B  0146               	movlb	6	; select bank6
 17830  115C  1E1A               	btfss	26,4	;volatile
 17831  115D  2964               	goto	l7119
 17832                           
 17833                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 17834  115E  3006               	movlw	6
 17835  115F  0140               	movlb	0	; select bank0
 17836  1160                     u6585:	
 17837  1160  35ED               	lslf	PWM4_LoadDutyValue@dutyValue,f
 17838  1161  0DEE               	rlf	PWM4_LoadDutyValue@dutyValue+1,f
 17839  1162  0B89               	decfsz	9,f
 17840  1163  2960               	goto	u6585
 17841  1164                     l7119:	
 17842                           
 17843                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 17844  1164  0140               	movlb	0	; select bank0
 17845  1165  086E               	movf	PWM4_LoadDutyValue@dutyValue+1,w
 17846  1166  0146               	movlb	6	; select bank6
 17847  1167  0099               	movwf	25	;volatile
 17848                           
 17849                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 17850  1168  0140               	movlb	0	; select bank0
 17851  1169  086D               	movf	PWM4_LoadDutyValue@dutyValue,w
 17852  116A  0146               	movlb	6	; select bank6
 17853  116B  0098               	movwf	24	;volatile
 17854                           
 17855                           ;mcc_generated_files/pwm4.c: 93:         }
 17856  116C  0008               	return
 17857  116D                     __end_of_PWM4_LoadDutyValue:	
 17858                           
 17859                           	psect	text47
 17860  1131                     __ptext47:	
 17861 ;; *************** function _PWM3_LoadDutyValue *****************
 17862 ;; Defined at:
 17863 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 17864 ;; Parameters:    Size  Location     Type
 17865 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 17866 ;; Auto vars:     Size  Location     Type
 17867 ;;		None
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  1    wreg      void 
 17870 ;; Registers used:
 17871 ;;		wreg, status,2
 17872 ;; Tracked objects:
 17873 ;;		On entry : 0/0
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17877 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17881 ;;Total ram usage:        2 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; Hardware stack levels required when called:    4
 17884 ;; This function calls:
 17885 ;;		Nothing
 17886 ;; This function is called by:
 17887 ;;		_LED_setColor
 17888 ;; This function uses a non-reentrant model
 17889 ;;
 17890                           
 17891                           
 17892                           ;psect for function _PWM3_LoadDutyValue
 17893  1131                     _PWM3_LoadDutyValue:	
 17894                           
 17895                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 127){
 17896                           
 17897                           ;incstack = 0
 17898                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 17899  1131  3000               	movlw	0
 17900  1132  0140               	movlb	0	; select bank0
 17901  1133  026E               	subwf	PWM3_LoadDutyValue@dutyValue+1,w
 17902  1134  3080               	movlw	128
 17903  1135  1903               	skipnz
 17904  1136  026D               	subwf	PWM3_LoadDutyValue@dutyValue,w
 17905  1137  1803               	skipnc
 17906  1138  0008               	return
 17907                           
 17908                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 17909  1139  30FF               	movlw	255
 17910  113A  05ED               	andwf	PWM3_LoadDutyValue@dutyValue,f
 17911  113B  3003               	movlw	3
 17912  113C  05EE               	andwf	PWM3_LoadDutyValue@dutyValue+1,f
 17913                           
 17914                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 17915  113D  0146               	movlb	6	; select bank6
 17916  113E  1E16               	btfss	22,4	;volatile
 17917  113F  2946               	goto	l7103
 17918                           
 17919                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 17920  1140  3006               	movlw	6
 17921  1141  0140               	movlb	0	; select bank0
 17922  1142                     u6555:	
 17923  1142  35ED               	lslf	PWM3_LoadDutyValue@dutyValue,f
 17924  1143  0DEE               	rlf	PWM3_LoadDutyValue@dutyValue+1,f
 17925  1144  0B89               	decfsz	9,f
 17926  1145  2942               	goto	u6555
 17927  1146                     l7103:	
 17928                           
 17929                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 17930  1146  0140               	movlb	0	; select bank0
 17931  1147  086E               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 17932  1148  0146               	movlb	6	; select bank6
 17933  1149  0095               	movwf	21	;volatile
 17934                           
 17935                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 17936  114A  0140               	movlb	0	; select bank0
 17937  114B  086D               	movf	PWM3_LoadDutyValue@dutyValue,w
 17938  114C  0146               	movlb	6	; select bank6
 17939  114D  0094               	movwf	20	;volatile
 17940                           
 17941                           ;mcc_generated_files/pwm3.c: 93:         }
 17942  114E  0008               	return
 17943  114F                     __end_of_PWM3_LoadDutyValue:	
 17944                           
 17945                           	psect	text48
 17946  1113                     __ptext48:	
 17947 ;; *************** function _PWM2_LoadDutyValue *****************
 17948 ;; Defined at:
 17949 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 17950 ;; Parameters:    Size  Location     Type
 17951 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 17952 ;; Auto vars:     Size  Location     Type
 17953 ;;		None
 17954 ;; Return value:  Size  Location     Type
 17955 ;;                  1    wreg      void 
 17956 ;; Registers used:
 17957 ;;		wreg, status,2
 17958 ;; Tracked objects:
 17959 ;;		On entry : 0/0
 17960 ;;		On exit  : 0/0
 17961 ;;		Unchanged: 0/0
 17962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17963 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17967 ;;Total ram usage:        2 bytes
 17968 ;; Hardware stack levels used:    1
 17969 ;; Hardware stack levels required when called:    4
 17970 ;; This function calls:
 17971 ;;		Nothing
 17972 ;; This function is called by:
 17973 ;;		_LED_setColor
 17974 ;; This function uses a non-reentrant model
 17975 ;;
 17976                           
 17977                           
 17978                           ;psect for function _PWM2_LoadDutyValue
 17979  1113                     _PWM2_LoadDutyValue:	
 17980                           
 17981                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 127){
 17982                           
 17983                           ;incstack = 0
 17984                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 17985  1113  3000               	movlw	0
 17986  1114  0140               	movlb	0	; select bank0
 17987  1115  026E               	subwf	PWM2_LoadDutyValue@dutyValue+1,w
 17988  1116  3080               	movlw	128
 17989  1117  1903               	skipnz
 17990  1118  026D               	subwf	PWM2_LoadDutyValue@dutyValue,w
 17991  1119  1803               	skipnc
 17992  111A  0008               	return
 17993                           
 17994                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 17995  111B  30FF               	movlw	255
 17996  111C  05ED               	andwf	PWM2_LoadDutyValue@dutyValue,f
 17997  111D  3003               	movlw	3
 17998  111E  05EE               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 17999                           
 18000                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 18001  111F  0146               	movlb	6	; select bank6
 18002  1120  1E12               	btfss	18,4	;volatile
 18003  1121  2928               	goto	l7151
 18004                           
 18005                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 18006  1122  3006               	movlw	6
 18007  1123  0140               	movlb	0	; select bank0
 18008  1124                     u6645:	
 18009  1124  35ED               	lslf	PWM2_LoadDutyValue@dutyValue,f
 18010  1125  0DEE               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 18011  1126  0B89               	decfsz	9,f
 18012  1127  2924               	goto	u6645
 18013  1128                     l7151:	
 18014                           
 18015                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 18016  1128  0140               	movlb	0	; select bank0
 18017  1129  086E               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 18018  112A  0146               	movlb	6	; select bank6
 18019  112B  0091               	movwf	17	;volatile
 18020                           
 18021                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 18022  112C  0140               	movlb	0	; select bank0
 18023  112D  086D               	movf	PWM2_LoadDutyValue@dutyValue,w
 18024  112E  0146               	movlb	6	; select bank6
 18025  112F  0090               	movwf	16	;volatile
 18026                           
 18027                           ;mcc_generated_files/pwm2.c: 93:         }
 18028  1130  0008               	return
 18029  1131                     __end_of_PWM2_LoadDutyValue:	
 18030                           
 18031                           	psect	text49
 18032  10F5                     __ptext49:	
 18033 ;; *************** function _PWM1_LoadDutyValue *****************
 18034 ;; Defined at:
 18035 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 18036 ;; Parameters:    Size  Location     Type
 18037 ;;  dutyValue       2   77[BANK0 ] unsigned short 
 18038 ;; Auto vars:     Size  Location     Type
 18039 ;;		None
 18040 ;; Return value:  Size  Location     Type
 18041 ;;                  1    wreg      void 
 18042 ;; Registers used:
 18043 ;;		wreg, status,2
 18044 ;; Tracked objects:
 18045 ;;		On entry : 0/0
 18046 ;;		On exit  : 0/0
 18047 ;;		Unchanged: 0/0
 18048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18053 ;;Total ram usage:        2 bytes
 18054 ;; Hardware stack levels used:    1
 18055 ;; Hardware stack levels required when called:    4
 18056 ;; This function calls:
 18057 ;;		Nothing
 18058 ;; This function is called by:
 18059 ;;		_LED_setColor
 18060 ;; This function uses a non-reentrant model
 18061 ;;
 18062                           
 18063                           
 18064                           ;psect for function _PWM1_LoadDutyValue
 18065  10F5                     _PWM1_LoadDutyValue:	
 18066                           
 18067                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 127){
 18068                           
 18069                           ;incstack = 0
 18070                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 18071  10F5  3000               	movlw	0
 18072  10F6  0140               	movlb	0	; select bank0
 18073  10F7  026E               	subwf	PWM1_LoadDutyValue@dutyValue+1,w
 18074  10F8  3080               	movlw	128
 18075  10F9  1903               	skipnz
 18076  10FA  026D               	subwf	PWM1_LoadDutyValue@dutyValue,w
 18077  10FB  1803               	skipnc
 18078  10FC  0008               	return
 18079                           
 18080                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 18081  10FD  30FF               	movlw	255
 18082  10FE  05ED               	andwf	PWM1_LoadDutyValue@dutyValue,f
 18083  10FF  3003               	movlw	3
 18084  1100  05EE               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 18085                           
 18086                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 18087  1101  0146               	movlb	6	; select bank6
 18088  1102  1E0E               	btfss	14,4	;volatile
 18089  1103  290A               	goto	l7135
 18090                           
 18091                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 18092  1104  3006               	movlw	6
 18093  1105  0140               	movlb	0	; select bank0
 18094  1106                     u6615:	
 18095  1106  35ED               	lslf	PWM1_LoadDutyValue@dutyValue,f
 18096  1107  0DEE               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 18097  1108  0B89               	decfsz	9,f
 18098  1109  2906               	goto	u6615
 18099  110A                     l7135:	
 18100                           
 18101                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 18102  110A  0140               	movlb	0	; select bank0
 18103  110B  086E               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 18104  110C  0146               	movlb	6	; select bank6
 18105  110D  008D               	movwf	13	;volatile
 18106                           
 18107                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 18108  110E  0140               	movlb	0	; select bank0
 18109  110F  086D               	movf	PWM1_LoadDutyValue@dutyValue,w
 18110  1110  0146               	movlb	6	; select bank6
 18111  1111  008C               	movwf	12	;volatile
 18112                           
 18113                           ;mcc_generated_files/pwm1.c: 93:         }
 18114  1112  0008               	return
 18115  1113                     __end_of_PWM1_LoadDutyValue:	
 18116                           
 18117                           	psect	text50
 18118  1EAD                     __ptext50:	
 18119 ;; *************** function _BEAT_detected *****************
 18120 ;; Defined at:
 18121 ;;		line 49 in file "beat.c"
 18122 ;; Parameters:    Size  Location     Type
 18123 ;;		None
 18124 ;; Auto vars:     Size  Location     Type
 18125 ;;		None
 18126 ;; Return value:  Size  Location     Type
 18127 ;;                  1    wreg      _Bool 
 18128 ;; Registers used:
 18129 ;;		wreg, status,2, status,0
 18130 ;; Tracked objects:
 18131 ;;		On entry : 0/0
 18132 ;;		On exit  : 0/0
 18133 ;;		Unchanged: 0/0
 18134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18139 ;;Total ram usage:        0 bytes
 18140 ;; Hardware stack levels used:    1
 18141 ;; Hardware stack levels required when called:    4
 18142 ;; This function calls:
 18143 ;;		Nothing
 18144 ;; This function is called by:
 18145 ;;		_LED_task_BEAT_STROBE
 18146 ;; This function uses a non-reentrant model
 18147 ;;
 18148                           
 18149                           
 18150                           ;psect for function _BEAT_detected
 18151  1EAD                     _BEAT_detected:	
 18152                           
 18153                           ;beat.c: 50:     if (detected) {
 18154                           
 18155                           ;incstack = 0
 18156                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 18157  1EAD  0141               	movlb	1	; select bank1
 18158  1EAE  0833               	movf	_detected^(0+128),w
 18159  1EAF  1903               	btfsc	3,2
 18160  1EB0  2EB4               	goto	l7705
 18161                           
 18162                           ;beat.c: 51:         detected = 0;
 18163  1EB1  01B3               	clrf	_detected^(0+128)
 18164                           
 18165                           ;beat.c: 52:         return 1;
 18166  1EB2  3001               	movlw	1
 18167  1EB3  0008               	return
 18168  1EB4                     l7705:	
 18169                           
 18170                           ;beat.c: 55:     return 0;
 18171  1EB4  3000               	movlw	0
 18172  1EB5  0008               	return
 18173  1EB6                     __end_of_BEAT_detected:	
 18174                           
 18175                           	psect	text51
 18176  101B                     __ptext51:	
 18177 ;; *************** function _printf *****************
 18178 ;; Defined at:
 18179 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
 18180 ;; Parameters:    Size  Location     Type
 18181 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 18182 ;;		 -> STR_21(4), STR_20(6), STR_19(7), STR_18(8), 
 18183 ;;		 -> STR_17(9), STR_16(10), STR_15(9), STR_14(8), 
 18184 ;;		 -> STR_13(7), STR_11(2), STR_10(5), STR_9(3), 
 18185 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_5(6), 
 18186 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(6), 
 18187 ;; Auto vars:     Size  Location     Type
 18188 ;;  ret             2    0        int 
 18189 ;;  ap              1   78[BANK0 ] PTR void [1]
 18190 ;;		 -> ?_printf(2), 
 18191 ;; Return value:  Size  Location     Type
 18192 ;;                  2    0[BANK1 ] int 
 18193 ;; Registers used:
 18194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18195 ;; Tracked objects:
 18196 ;;		On entry : 0/0
 18197 ;;		On exit  : 0/0
 18198 ;;		Unchanged: 0/0
 18199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18200 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18201 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18202 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18203 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18204 ;;Total ram usage:       14 bytes
 18205 ;; Hardware stack levels used:    1
 18206 ;; Hardware stack levels required when called:   16
 18207 ;; This function calls:
 18208 ;;		_vfprintf
 18209 ;; This function is called by:
 18210 ;;		_CONTROLLER_task
 18211 ;;		_CONTROL_DMX
 18212 ;;		_TM1650_init
 18213 ;;		_LED_task_BEAT_STROBE
 18214 ;;		_TM1650_scrollPrint
 18215 ;; This function uses a non-reentrant model
 18216 ;;
 18217                           
 18218                           
 18219                           ;psect for function _printf
 18220  101B                     _printf:	
 18221                           
 18222                           ;incstack = 0
 18223 ;; hardware stack exceeded
 18224                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18225  101B  30CB               	movlw	(low ((?_printf| 0+2)))& (0+255)
 18226  101C  0140               	movlb	0	; select bank0
 18227  101D  00EB               	movwf	??_printf
 18228  101E  086B               	movf	??_printf,w
 18229  101F  00EE               	movwf	printf@ap
 18230  1020  0141               	movlb	1	; select bank1
 18231  1021  084A               	movf	(printf@fmt+1)^(0+128),w
 18232  1022  0140               	movlb	0	; select bank0
 18233  1023  00E4               	movwf	vfprintf@fmt+1
 18234  1024  0141               	movlb	1	; select bank1
 18235  1025  0849               	movf	printf@fmt^(0+128),w
 18236  1026  0140               	movlb	0	; select bank0
 18237  1027  00E3               	movwf	vfprintf@fmt
 18238  1028  306E               	movlw	(low (printf@ap| 0))& (0+255)
 18239  1029  00EB               	movwf	??_printf
 18240  102A  086B               	movf	??_printf,w
 18241  102B  00E5               	movwf	vfprintf@ap
 18242  102C  3000               	movlw	0
 18243  102D  3192  22BB         	fcall	_vfprintf
 18244  102F  0008               	return
 18245  1030                     __end_of_printf:	
 18246                           
 18247                           	psect	text52
 18248  12BB                     __ptext52:	
 18249 ;; *************** function _vfprintf *****************
 18250 ;; Defined at:
 18251 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 18252 ;; Parameters:    Size  Location     Type
 18253 ;;  fp              1    wreg     PTR struct _IO_FILE
 18254 ;;		 -> NULL(0), 
 18255 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
 18256 ;;		 -> STR_21(4), STR_20(6), STR_19(7), STR_18(8), 
 18257 ;;		 -> STR_17(9), STR_16(10), STR_15(9), STR_14(8), 
 18258 ;;		 -> STR_13(7), STR_11(2), STR_10(5), STR_9(3), 
 18259 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_5(6), 
 18260 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(6), 
 18261 ;;  ap              1   69[BANK0 ] PTR PTR void 
 18262 ;;		 -> printf@ap(1), 
 18263 ;; Auto vars:     Size  Location     Type
 18264 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
 18265 ;;		 -> NULL(0), 
 18266 ;;  cfmt            2   73[BANK0 ] PTR unsigned char 
 18267 ;;		 -> STR_21(4), STR_20(6), STR_19(7), STR_18(8), 
 18268 ;;		 -> STR_17(9), STR_16(10), STR_15(9), STR_14(8), 
 18269 ;;		 -> STR_13(7), STR_11(2), STR_10(5), STR_9(3), 
 18270 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_5(6), 
 18271 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(6), 
 18272 ;; Return value:  Size  Location     Type
 18273 ;;                  2   67[BANK0 ] int 
 18274 ;; Registers used:
 18275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18276 ;; Tracked objects:
 18277 ;;		On entry : 0/0
 18278 ;;		On exit  : 0/0
 18279 ;;		Unchanged: 0/0
 18280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18281 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18282 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18283 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18284 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18285 ;;Total ram usage:        8 bytes
 18286 ;; Hardware stack levels used:    1
 18287 ;; Hardware stack levels required when called:   15
 18288 ;; This function calls:
 18289 ;;		_vfpfcnvrt
 18290 ;; This function is called by:
 18291 ;;		_printf
 18292 ;; This function uses a non-reentrant model
 18293 ;;
 18294                           
 18295                           
 18296                           ;psect for function _vfprintf
 18297  12BB                     _vfprintf:	
 18298                           
 18299                           ;incstack = 0
 18300 ;; hardware stack exceeded
 18301                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18302                           ;vfprintf@fp stored from wreg
 18303  12BB  0140               	movlb	0	; select bank0
 18304  12BC  00E8               	movwf	vfprintf@fp
 18305                           
 18306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 18307  12BD  0864               	movf	vfprintf@fmt+1,w
 18308  12BE  00EA               	movwf	vfprintf@cfmt+1
 18309  12BF  0863               	movf	vfprintf@fmt,w
 18310  12C0  00E9               	movwf	vfprintf@cfmt
 18311                           
 18312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 18313  12C1  0142               	movlb	2	; select bank2
 18314  12C2  01A8               	clrf	_nout^(0+256)
 18315  12C3  01A9               	clrf	(_nout+1)^(0+256)
 18316  12C4                     l7171:	
 18317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 18318                           
 18319                           
 18320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 18321  12C4  0140               	movlb	0	; select bank0
 18322  12C5  0869               	movf	vfprintf@cfmt,w
 18323  12C6  0084               	movwf	4
 18324  12C7  086A               	movf	vfprintf@cfmt+1,w
 18325  12C8  0085               	movwf	5
 18326  12C9  0012               	moviw fsr0++
 18327  12CA  1903               	btfsc	3,2
 18328  12CB  2AE1               	goto	l7173
 18329                           
 18330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 18331  12CC  3069               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 18332  12CD  00E6               	movwf	??_vfprintf
 18333  12CE  0866               	movf	??_vfprintf,w
 18334  12CF  00DA               	movwf	vfpfcnvrt@fmt
 18335  12D0  0865               	movf	vfprintf@ap,w
 18336  12D1  00E7               	movwf	??_vfprintf+1
 18337  12D2  0867               	movf	??_vfprintf+1,w
 18338  12D3  00DB               	movwf	vfpfcnvrt@ap
 18339  12D4  0868               	movf	vfprintf@fp,w
 18340  12D5  3189  210A  3192   	fcall	_vfpfcnvrt
 18341  12D8  0140               	movlb	0	; select bank0
 18342  12D9  085A               	movf	?_vfpfcnvrt,w
 18343  12DA  0142               	movlb	2	; select bank2
 18344  12DB  07A8               	addwf	_nout^(0+256),f
 18345  12DC  0140               	movlb	0	; select bank0
 18346  12DD  085B               	movf	?_vfpfcnvrt+1,w
 18347  12DE  0142               	movlb	2	; select bank2
 18348  12DF  3DA9               	addwfc	(_nout+1)^(0+256),f
 18349  12E0  2AC4               	goto	l7171
 18350  12E1                     l7173:	
 18351                           
 18352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 18353  12E1  0142               	movlb	2	; select bank2
 18354  12E2  0829               	movf	(_nout+1)^(0+256),w
 18355  12E3  0140               	movlb	0	; select bank0
 18356  12E4  00E4               	movwf	?_vfprintf+1
 18357  12E5  0142               	movlb	2	; select bank2
 18358  12E6  0828               	movf	_nout^(0+256),w
 18359  12E7  0140               	movlb	0	; select bank0
 18360  12E8  00E3               	movwf	?_vfprintf
 18361  12E9  0008               	return
 18362  12EA                     __end_of_vfprintf:	
 18363                           
 18364                           	psect	text53
 18365  090A                     __ptext53:	
 18366 ;; *************** function _vfpfcnvrt *****************
 18367 ;; Defined at:
 18368 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 18369 ;; Parameters:    Size  Location     Type
 18370 ;;  fp              1    wreg     PTR struct _IO_FILE
 18371 ;;		 -> NULL(0), 
 18372 ;;  fmt             1   58[BANK0 ] PTR PTR unsigned char 
 18373 ;;		 -> vfprintf@cfmt(2), 
 18374 ;;  ap              1   59[BANK0 ] PTR PTR void 
 18375 ;;		 -> printf@ap(1), 
 18376 ;; Auto vars:     Size  Location     Type
 18377 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
 18378 ;;		 -> NULL(0), 
 18379 ;;  llu             8    0        unsigned long long 
 18380 ;;  ll              8    0        long long 
 18381 ;;  f               4    0        long long 
 18382 ;;  ct              3    0        unsigned char [3]
 18383 ;;  vp              2    0        PTR void 
 18384 ;;  i               2    0        int 
 18385 ;;  done            2    0        int 
 18386 ;;  cp              2    0        PTR unsigned char 
 18387 ;;  c               1   65[BANK0 ] unsigned char 
 18388 ;; Return value:  Size  Location     Type
 18389 ;;                  2   58[BANK0 ] int 
 18390 ;; Registers used:
 18391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18392 ;; Tracked objects:
 18393 ;;		On entry : 0/0
 18394 ;;		On exit  : 0/0
 18395 ;;		Unchanged: 0/0
 18396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18398 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18399 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18400 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18401 ;;Total ram usage:        9 bytes
 18402 ;; Hardware stack levels used:    1
 18403 ;; Hardware stack levels required when called:   14
 18404 ;; This function calls:
 18405 ;;		_ctoa
 18406 ;;		_fputc
 18407 ;; This function is called by:
 18408 ;;		_vfprintf
 18409 ;; This function uses a non-reentrant model
 18410 ;;
 18411                           
 18412                           
 18413                           ;psect for function _vfpfcnvrt
 18414  090A                     _vfpfcnvrt:	
 18415                           
 18416                           ;incstack = 0
 18417 ;; hardware stack exceeded
 18418                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18419                           ;vfpfcnvrt@fp stored from wreg
 18420  090A  0140               	movlb	0	; select bank0
 18421  090B  00E2               	movwf	vfpfcnvrt@fp
 18422                           
 18423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 18424  090C  085A               	movf	vfpfcnvrt@fmt,w
 18425  090D  0086               	movwf	6
 18426  090E  0187               	clrf	7
 18427  090F  3F40               	moviw [0]fsr1
 18428  0910  00DC               	movwf	??_vfpfcnvrt
 18429  0911  3F41               	moviw [1]fsr1
 18430  0912  00DD               	movwf	??_vfpfcnvrt+1
 18431  0913  085C               	movf	??_vfpfcnvrt,w
 18432  0914  0084               	movwf	4
 18433  0915  085D               	movf	??_vfpfcnvrt+1,w
 18434  0916  0085               	movwf	5
 18435  0917  0012               	moviw fsr0++
 18436  0918  3A25               	xorlw	37
 18437  0919  1D03               	btfss	3,2
 18438  091A  2990               	goto	l7029
 18439                           
 18440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 18441  091B  085A               	movf	vfpfcnvrt@fmt,w
 18442  091C  0086               	movwf	6
 18443  091D  0187               	clrf	7
 18444  091E  3001               	movlw	1
 18445  091F  0781               	addwf	1,f
 18446  0920  3141               	addfsr 1,1
 18447  0921  1803               	skipnc
 18448  0922  0A81               	incf	1,f
 18449                           
 18450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 18451  0923  0141               	movlb	1	; select bank1
 18452  0924  01A9               	clrf	_width^(0+128)
 18453  0925  01AA               	clrf	(_width+1)^(0+128)
 18454  0926  0142               	movlb	2	; select bank2
 18455  0927  01AC               	clrf	_flags^(0+256)
 18456  0928  01AD               	clrf	(_flags+1)^(0+256)
 18457                           
 18458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 18459  0929  30FF               	movlw	255
 18460  092A  00AA               	movwf	_prec^(0+256)
 18461  092B  30FF               	movlw	255
 18462  092C  00AB               	movwf	(_prec^(0+256)+1)
 18463                           
 18464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 18465  092D  0140               	movlb	0	; select bank0
 18466  092E  085A               	movf	vfpfcnvrt@fmt,w
 18467  092F  0086               	movwf	6
 18468  0930  0187               	clrf	7
 18469  0931  3F40               	moviw [0]fsr1
 18470  0932  00DC               	movwf	??_vfpfcnvrt
 18471  0933  3F41               	moviw [1]fsr1
 18472  0934  00DD               	movwf	??_vfpfcnvrt+1
 18473  0935  085C               	movf	??_vfpfcnvrt,w
 18474  0936  0084               	movwf	4
 18475  0937  085D               	movf	??_vfpfcnvrt+1,w
 18476  0938  0085               	movwf	5
 18477  0939  0012               	moviw fsr0++
 18478  093A  3A63               	xorlw	99
 18479  093B  1D03               	btfss	3,2
 18480  093C  295E               	goto	l7013
 18481                           
 18482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 18483  093D  085A               	movf	vfpfcnvrt@fmt,w
 18484  093E  0086               	movwf	6
 18485  093F  0187               	clrf	7
 18486  0940  3001               	movlw	1
 18487  0941  0781               	addwf	1,f
 18488  0942  3141               	addfsr 1,1
 18489  0943  1803               	skipnc
 18490  0944  0A81               	incf	1,f
 18491                           
 18492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 18493  0945  085B               	movf	vfpfcnvrt@ap,w
 18494  0946  0086               	movwf	6
 18495  0947  0187               	clrf	7
 18496  0948  0801               	movf	1,w
 18497  0949  0084               	movwf	4
 18498  094A  0185               	clrf	5
 18499  094B  3002               	movlw	2
 18500  094C  0781               	addwf	1,f
 18501  094D  0800               	movf	0,w
 18502  094E  00DC               	movwf	??_vfpfcnvrt
 18503  094F  085C               	movf	??_vfpfcnvrt,w
 18504  0950  00E1               	movwf	vfpfcnvrt@c
 18505                           
 18506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 18507  0951  0861               	movf	vfpfcnvrt@c,w
 18508  0952  00DC               	movwf	??_vfpfcnvrt
 18509  0953  085C               	movf	??_vfpfcnvrt,w
 18510  0954  00D4               	movwf	ctoa@c
 18511  0955  0862               	movf	vfpfcnvrt@fp,w
 18512  0956  3192  22EA         	fcall	_ctoa
 18513  0958  0140               	movlb	0	; select bank0
 18514  0959  0855               	movf	?_ctoa+1,w
 18515  095A  00DB               	movwf	?_vfpfcnvrt+1
 18516  095B  0854               	movf	?_ctoa,w
 18517  095C  00DA               	movwf	?_vfpfcnvrt
 18518  095D  0008               	return
 18519  095E                     l7013:	
 18520                           
 18521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 18522  095E  085A               	movf	vfpfcnvrt@fmt,w
 18523  095F  0086               	movwf	6
 18524  0960  0187               	clrf	7
 18525  0961  3F40               	moviw [0]fsr1
 18526  0962  00DC               	movwf	??_vfpfcnvrt
 18527  0963  3F41               	moviw [1]fsr1
 18528  0964  00DD               	movwf	??_vfpfcnvrt+1
 18529  0965  085C               	movf	??_vfpfcnvrt,w
 18530  0966  0084               	movwf	4
 18531  0967  085D               	movf	??_vfpfcnvrt+1,w
 18532  0968  0085               	movwf	5
 18533  0969  0012               	moviw fsr0++
 18534  096A  3A25               	xorlw	37
 18535  096B  1D03               	btfss	3,2
 18536  096C  2985               	goto	l7023
 18537                           
 18538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 18539  096D  085A               	movf	vfpfcnvrt@fmt,w
 18540  096E  0086               	movwf	6
 18541  096F  0187               	clrf	7
 18542  0970  3001               	movlw	1
 18543  0971  0781               	addwf	1,f
 18544  0972  3141               	addfsr 1,1
 18545  0973  1803               	skipnc
 18546  0974  0A81               	incf	1,f
 18547                           
 18548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 18549  0975  3025               	movlw	37
 18550  0976  00BB               	movwf	fputc@c
 18551  0977  3000               	movlw	0
 18552  0978  00BC               	movwf	fputc@c+1
 18553  0979  0862               	movf	vfpfcnvrt@fp,w
 18554  097A  00DC               	movwf	??_vfpfcnvrt
 18555  097B  085C               	movf	??_vfpfcnvrt,w
 18556  097C  00BD               	movwf	fputc@fp
 18557  097D  3194  241C         	fcall	_fputc
 18558  097F                     l7019:	
 18559                           
 18560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 18561  097F  3001               	movlw	1
 18562  0980  0140               	movlb	0	; select bank0
 18563  0981  00DA               	movwf	?_vfpfcnvrt
 18564  0982  3000               	movlw	0
 18565  0983  00DB               	movwf	?_vfpfcnvrt+1
 18566  0984  0008               	return
 18567  0985                     l7023:	
 18568                           
 18569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 18570  0985  085A               	movf	vfpfcnvrt@fmt,w
 18571  0986  0086               	movwf	6
 18572  0987  0187               	clrf	7
 18573  0988  3001               	movlw	1
 18574  0989  0781               	addwf	1,f
 18575  098A  3141               	addfsr 1,1
 18576  098B  1803               	skipnc
 18577  098C  0A81               	incf	1,f
 18578                           
 18579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 18580  098D  01DA               	clrf	?_vfpfcnvrt
 18581  098E  01DB               	clrf	?_vfpfcnvrt+1
 18582  098F  0008               	return
 18583  0990                     l7029:	
 18584                           
 18585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 18586  0990  085A               	movf	vfpfcnvrt@fmt,w
 18587  0991  0086               	movwf	6
 18588  0992  0187               	clrf	7
 18589  0993  3F40               	moviw [0]fsr1
 18590  0994  00DC               	movwf	??_vfpfcnvrt
 18591  0995  3F41               	moviw [1]fsr1
 18592  0996  00DD               	movwf	??_vfpfcnvrt+1
 18593  0997  085C               	movf	??_vfpfcnvrt,w
 18594  0998  0084               	movwf	4
 18595  0999  085D               	movf	??_vfpfcnvrt+1,w
 18596  099A  0085               	movwf	5
 18597  099B  0800               	movf	0,w	;code access
 18598  099C  00DE               	movwf	??_vfpfcnvrt+2
 18599  099D  01DF               	clrf	??_vfpfcnvrt+3
 18600  099E  085E               	movf	??_vfpfcnvrt+2,w
 18601  099F  00BB               	movwf	fputc@c
 18602  09A0  085F               	movf	??_vfpfcnvrt+3,w
 18603  09A1  00BC               	movwf	fputc@c+1
 18604  09A2  0862               	movf	vfpfcnvrt@fp,w
 18605  09A3  00E0               	movwf	??_vfpfcnvrt+4
 18606  09A4  0860               	movf	??_vfpfcnvrt+4,w
 18607  09A5  00BD               	movwf	fputc@fp
 18608  09A6  3194  241C  3189   	fcall	_fputc
 18609                           
 18610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 18611  09A9  0140               	movlb	0	; select bank0
 18612  09AA  085A               	movf	vfpfcnvrt@fmt,w
 18613  09AB  0086               	movwf	6
 18614  09AC  0187               	clrf	7
 18615  09AD  3001               	movlw	1
 18616  09AE  0781               	addwf	1,f
 18617  09AF  3141               	addfsr 1,1
 18618  09B0  1803               	skipnc
 18619  09B1  0A81               	incf	1,f
 18620  09B2  297F               	goto	l7019
 18621  09B3                     __end_of_vfpfcnvrt:	
 18622                           
 18623                           	psect	text54
 18624  12EA                     __ptext54:	
 18625 ;; *************** function _ctoa *****************
 18626 ;; Defined at:
 18627 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 18628 ;; Parameters:    Size  Location     Type
 18629 ;;  fp              1    wreg     PTR struct _IO_FILE
 18630 ;;		 -> NULL(0), 
 18631 ;;  c               1   52[BANK0 ] unsigned char 
 18632 ;; Auto vars:     Size  Location     Type
 18633 ;;  fp              1   57[BANK0 ] PTR struct _IO_FILE
 18634 ;;		 -> NULL(0), 
 18635 ;;  w               2   55[BANK0 ] int 
 18636 ;;  l               2    0        int 
 18637 ;; Return value:  Size  Location     Type
 18638 ;;                  2   52[BANK0 ] int 
 18639 ;; Registers used:
 18640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18641 ;; Tracked objects:
 18642 ;;		On entry : 0/0
 18643 ;;		On exit  : 0/0
 18644 ;;		Unchanged: 0/0
 18645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18647 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18648 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18649 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18650 ;;Total ram usage:        6 bytes
 18651 ;; Hardware stack levels used:    1
 18652 ;; Hardware stack levels required when called:   13
 18653 ;; This function calls:
 18654 ;;		_pad
 18655 ;; This function is called by:
 18656 ;;		_vfpfcnvrt
 18657 ;; This function uses a non-reentrant model
 18658 ;;
 18659                           
 18660                           
 18661                           ;psect for function _ctoa
 18662  12EA                     _ctoa:	
 18663                           
 18664                           ;incstack = 0
 18665 ;; hardware stack exceeded
 18666                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18667                           ;ctoa@fp stored from wreg
 18668  12EA  0140               	movlb	0	; select bank0
 18669  12EB  00D9               	movwf	ctoa@fp
 18670                           
 18671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 18672  12EC  0141               	movlb	1	; select bank1
 18673  12ED  0829               	movf	_width^(0+128),w
 18674  12EE  042A               	iorwf	(_width+1)^(0+128),w
 18675  12EF  1D03               	btfss	3,2
 18676  12F0  2AF9               	goto	l6985
 18677  12F1  082A               	movf	(_width+1)^(0+128),w
 18678  12F2  0140               	movlb	0	; select bank0
 18679  12F3  00D8               	movwf	ctoa@w+1
 18680  12F4  0141               	movlb	1	; select bank1
 18681  12F5  0829               	movf	_width^(0+128),w
 18682  12F6  0140               	movlb	0	; select bank0
 18683  12F7  00D7               	movwf	ctoa@w
 18684  12F8  2B02               	goto	l6987
 18685  12F9                     l6985:	
 18686  12F9  0829               	movf	_width^(0+128),w
 18687  12FA  3EFF               	addlw	255
 18688  12FB  0140               	movlb	0	; select bank0
 18689  12FC  00D7               	movwf	ctoa@w
 18690  12FD  30FF               	movlw	255
 18691  12FE  0141               	movlb	1	; select bank1
 18692  12FF  3D2A               	addwfc	(_width+1)^(0+128),w
 18693  1300  0140               	movlb	0	; select bank0
 18694  1301  00D8               	movwf	ctoa@w+1
 18695  1302                     l6987:	
 18696                           
 18697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 18698  1302  0854               	movf	ctoa@c,w
 18699  1303  00D6               	movwf	??_ctoa
 18700  1304  0856               	movf	??_ctoa,w
 18701  1305  0146               	movlb	6	; select bank6
 18702  1306  00A0               	movwf	_dbuf^(0+768)
 18703                           
 18704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 18705  1307  01A1               	clrf	(_dbuf^(0+768)+1)
 18706                           
 18707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 18708  1308  3020               	movlw	(low (_dbuf| (0+768)))& (0+255)
 18709  1309  0140               	movlb	0	; select bank0
 18710  130A  00D6               	movwf	??_ctoa
 18711  130B  0856               	movf	??_ctoa,w
 18712  130C  00CB               	movwf	pad@buf
 18713  130D  0858               	movf	ctoa@w+1,w
 18714  130E  00CD               	movwf	pad@p+1
 18715  130F  0857               	movf	ctoa@w,w
 18716  1310  00CC               	movwf	pad@p
 18717  1311  0859               	movf	ctoa@fp,w
 18718  1312  3195  2578         	fcall	_pad
 18719  1314  0140               	movlb	0	; select bank0
 18720  1315  084C               	movf	?_pad+1,w
 18721  1316  00D5               	movwf	?_ctoa+1
 18722  1317  084B               	movf	?_pad,w
 18723  1318  00D4               	movwf	?_ctoa
 18724  1319  0008               	return
 18725  131A                     __end_of_ctoa:	
 18726                           
 18727                           	psect	text55
 18728  1578                     __ptext55:	
 18729 ;; *************** function _pad *****************
 18730 ;; Defined at:
 18731 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 18732 ;; Parameters:    Size  Location     Type
 18733 ;;  fp              1    wreg     PTR struct _IO_FILE
 18734 ;;		 -> NULL(0), 
 18735 ;;  buf             1   43[BANK0 ] PTR unsigned char 
 18736 ;;		 -> dbuf(32), 
 18737 ;;  p               2   44[BANK0 ] int 
 18738 ;; Auto vars:     Size  Location     Type
 18739 ;;  fp              1   51[BANK0 ] PTR struct _IO_FILE
 18740 ;;		 -> NULL(0), 
 18741 ;;  w               2   49[BANK0 ] int 
 18742 ;;  i               2   47[BANK0 ] int 
 18743 ;; Return value:  Size  Location     Type
 18744 ;;                  2   43[BANK0 ] int 
 18745 ;; Registers used:
 18746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18747 ;; Tracked objects:
 18748 ;;		On entry : 0/0
 18749 ;;		On exit  : 0/0
 18750 ;;		Unchanged: 0/0
 18751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18752 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18753 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18755 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18756 ;;Total ram usage:        9 bytes
 18757 ;; Hardware stack levels used:    1
 18758 ;; Hardware stack levels required when called:   12
 18759 ;; This function calls:
 18760 ;;		_fputc
 18761 ;;		_fputs
 18762 ;;		_strlen
 18763 ;; This function is called by:
 18764 ;;		_ctoa
 18765 ;; This function uses a non-reentrant model
 18766 ;;
 18767                           
 18768                           
 18769                           ;psect for function _pad
 18770  1578                     _pad:	
 18771                           
 18772                           ;incstack = 0
 18773 ;; hardware stack exceeded
 18774                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18775                           ;pad@fp stored from wreg
 18776  1578  0140               	movlb	0	; select bank0
 18777  1579  00D3               	movwf	pad@fp
 18778                           
 18779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 18780  157A  0142               	movlb	2	; select bank2
 18781  157B  1C2C               	btfss	_flags^(0+256),0
 18782  157C  2D86               	goto	l6963
 18783                           
 18784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 18785  157D  0140               	movlb	0	; select bank0
 18786  157E  0853               	movf	pad@fp,w
 18787  157F  00CE               	movwf	??_pad
 18788  1580  084E               	movf	??_pad,w
 18789  1581  00C3               	movwf	fputs@fp
 18790  1582  084B               	movf	pad@buf,w
 18791  1583  3192  2218  3195   	fcall	_fputs
 18792  1586                     l6963:	
 18793                           
 18794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 18795  1586  0140               	movlb	0	; select bank0
 18796  1587  1BCD               	btfsc	pad@p+1,7
 18797  1588  2D8E               	goto	l6967
 18798  1589  084D               	movf	pad@p+1,w
 18799  158A  00D2               	movwf	pad@w+1
 18800  158B  084C               	movf	pad@p,w
 18801  158C  00D1               	movwf	pad@w
 18802  158D  2D90               	goto	l1676
 18803  158E                     l6967:	
 18804  158E  01D1               	clrf	pad@w
 18805  158F  01D2               	clrf	pad@w+1
 18806  1590                     l1676:	
 18807                           
 18808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 18809  1590  01CF               	clrf	pad@i
 18810  1591  01D0               	clrf	pad@i+1
 18811  1592                     l6973:	
 18812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 18813                           
 18814                           
 18815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 18816  1592  0850               	movf	pad@i+1,w
 18817  1593  3A80               	xorlw	128
 18818  1594  00CE               	movwf	??_pad
 18819  1595  0852               	movf	pad@w+1,w
 18820  1596  3A80               	xorlw	128
 18821  1597  024E               	subwf	??_pad,w
 18822  1598  1D03               	skipz
 18823  1599  2D9C               	goto	u6305
 18824  159A  0851               	movf	pad@w,w
 18825  159B  024F               	subwf	pad@i,w
 18826  159C                     u6305:	
 18827  159C  1803               	btfsc	3,0
 18828  159D  2DB0               	goto	l1679
 18829                           
 18830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 18831  159E  3020               	movlw	32
 18832  159F  0140               	movlb	0	; select bank0
 18833  15A0  00BB               	movwf	fputc@c
 18834  15A1  3000               	movlw	0
 18835  15A2  00BC               	movwf	fputc@c+1
 18836  15A3  0853               	movf	pad@fp,w
 18837  15A4  00CE               	movwf	??_pad
 18838  15A5  084E               	movf	??_pad,w
 18839  15A6  00BD               	movwf	fputc@fp
 18840  15A7  3194  241C  3195   	fcall	_fputc
 18841                           
 18842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 18843  15AA  3001               	movlw	1
 18844  15AB  0140               	movlb	0	; select bank0
 18845  15AC  07CF               	addwf	pad@i,f
 18846  15AD  3000               	movlw	0
 18847  15AE  3DD0               	addwfc	pad@i+1,f
 18848  15AF  2D92               	goto	l6973
 18849  15B0                     l1679:	
 18850                           
 18851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 18852  15B0  0142               	movlb	2	; select bank2
 18853  15B1  182C               	btfsc	_flags^(0+256),0
 18854  15B2  2DBC               	goto	l6977
 18855                           
 18856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 18857  15B3  0140               	movlb	0	; select bank0
 18858  15B4  0853               	movf	pad@fp,w
 18859  15B5  00CE               	movwf	??_pad
 18860  15B6  084E               	movf	??_pad,w
 18861  15B7  00C3               	movwf	fputs@fp
 18862  15B8  084B               	movf	pad@buf,w
 18863  15B9  3192  2218  3195   	fcall	_fputs
 18864  15BC                     l6977:	
 18865                           
 18866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 18867  15BC  0140               	movlb	0	; select bank0
 18868  15BD  084B               	movf	pad@buf,w
 18869  15BE  00A0               	movwf	strlen@s
 18870  15BF  3003               	movlw	3
 18871  15C0  00A1               	movwf	strlen@s+1
 18872  15C1  3190  208A         	fcall	_strlen
 18873  15C3  0140               	movlb	0	; select bank0
 18874  15C4  0851               	movf	pad@w,w
 18875  15C5  0720               	addwf	?_strlen,w
 18876  15C6  00CB               	movwf	?_pad
 18877  15C7  0852               	movf	pad@w+1,w
 18878  15C8  3D21               	addwfc	?_strlen+1,w
 18879  15C9  00CC               	movwf	?_pad+1
 18880  15CA  0008               	return
 18881  15CB                     __end_of_pad:	
 18882                           
 18883                           	psect	text56
 18884  108A                     __ptext56:	
 18885 ;; *************** function _strlen *****************
 18886 ;; Defined at:
 18887 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 18888 ;; Parameters:    Size  Location     Type
 18889 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 18890 ;;		 -> dbuf(32), STR_12(9), 
 18891 ;; Auto vars:     Size  Location     Type
 18892 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 18893 ;;		 -> dbuf(32), STR_12(9), 
 18894 ;; Return value:  Size  Location     Type
 18895 ;;                  2    0[BANK0 ] unsigned int 
 18896 ;; Registers used:
 18897 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18898 ;; Tracked objects:
 18899 ;;		On entry : 0/0
 18900 ;;		On exit  : 0/0
 18901 ;;		Unchanged: 0/0
 18902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18904 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18906 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18907 ;;Total ram usage:        5 bytes
 18908 ;; Hardware stack levels used:    1
 18909 ;; Hardware stack levels required when called:    4
 18910 ;; This function calls:
 18911 ;;		Nothing
 18912 ;; This function is called by:
 18913 ;;		_pad
 18914 ;;		_TM1650_scrollPrint
 18915 ;; This function uses a non-reentrant model
 18916 ;;
 18917                           
 18918                           
 18919                           ;psect for function _strlen
 18920  108A                     _strlen:	
 18921                           
 18922                           ;incstack = 0
 18923                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 18924  108A  0140               	movlb	0	; select bank0
 18925  108B  0821               	movf	strlen@s+1,w
 18926  108C  00A4               	movwf	strlen@a+1
 18927  108D  0820               	movf	strlen@s,w
 18928  108E  00A3               	movwf	strlen@a
 18929  108F                     l6945:	
 18930  108F  0820               	movf	strlen@s,w
 18931  1090  0084               	movwf	4
 18932  1091  0821               	movf	strlen@s+1,w
 18933  1092  0085               	movwf	5
 18934  1093  0012               	moviw fsr0++
 18935  1094  1903               	btfsc	3,2
 18936  1095  289B               	goto	l6947
 18937  1096  3001               	movlw	1
 18938  1097  07A0               	addwf	strlen@s,f
 18939  1098  3000               	movlw	0
 18940  1099  3DA1               	addwfc	strlen@s+1,f
 18941  109A  288F               	goto	l6945
 18942  109B                     l6947:	
 18943  109B  0823               	movf	strlen@a,w
 18944  109C  0220               	subwf	strlen@s,w
 18945  109D  00A0               	movwf	?_strlen
 18946  109E  0824               	movf	strlen@a+1,w
 18947  109F  3B21               	subwfb	strlen@s+1,w
 18948  10A0  00A1               	movwf	?_strlen+1
 18949  10A1  0008               	return
 18950  10A2                     __end_of_strlen:	
 18951                           
 18952                           	psect	text57
 18953  1218                     __ptext57:	
 18954 ;; *************** function _fputs *****************
 18955 ;; Defined at:
 18956 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 18957 ;; Parameters:    Size  Location     Type
 18958 ;;  s               1    wreg     PTR const unsigned char 
 18959 ;;		 -> dbuf(32), 
 18960 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
 18961 ;;		 -> NULL(0), 
 18962 ;; Auto vars:     Size  Location     Type
 18963 ;;  s               1   42[BANK0 ] PTR const unsigned char 
 18964 ;;		 -> dbuf(32), 
 18965 ;;  i               2   40[BANK0 ] int 
 18966 ;;  c               1   39[BANK0 ] unsigned char 
 18967 ;; Return value:  Size  Location     Type
 18968 ;;                  2   35[BANK0 ] int 
 18969 ;; Registers used:
 18970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18971 ;; Tracked objects:
 18972 ;;		On entry : 0/0
 18973 ;;		On exit  : 0/0
 18974 ;;		Unchanged: 0/0
 18975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18976 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18977 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18978 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18979 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18980 ;;Total ram usage:        8 bytes
 18981 ;; Hardware stack levels used:    1
 18982 ;; Hardware stack levels required when called:   11
 18983 ;; This function calls:
 18984 ;;		_fputc
 18985 ;; This function is called by:
 18986 ;;		_pad
 18987 ;; This function uses a non-reentrant model
 18988 ;;
 18989                           
 18990                           
 18991                           ;psect for function _fputs
 18992  1218                     _fputs:	
 18993                           
 18994                           ;incstack = 0
 18995 ;; hardware stack exceeded
 18996                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18997                           ;fputs@s stored from wreg
 18998  1218  0140               	movlb	0	; select bank0
 18999  1219  00CA               	movwf	fputs@s
 19000  121A  01C8               	clrf	fputs@i
 19001  121B  01C9               	clrf	fputs@i+1
 19002  121C                     l6957:	
 19003  121C  0848               	movf	fputs@i,w
 19004  121D  074A               	addwf	fputs@s,w
 19005  121E  00C4               	movwf	??_fputs
 19006  121F  0844               	movf	??_fputs,w
 19007  1220  0086               	movwf	6
 19008  1221  3003               	movlw	3	; select bank6/7
 19009  1222  0087               	movwf	7
 19010  1223  0801               	movf	1,w
 19011  1224  00C5               	movwf	??_fputs+1
 19012  1225  0845               	movf	??_fputs+1,w
 19013  1226  00C7               	movwf	fputs@c
 19014  1227  0847               	movf	fputs@c,w
 19015  1228  1903               	btfsc	3,2
 19016  1229  0008               	return
 19017  122A  0847               	movf	fputs@c,w
 19018  122B  00C4               	movwf	??_fputs
 19019  122C  01C5               	clrf	??_fputs+1
 19020  122D  0844               	movf	??_fputs,w
 19021  122E  00BB               	movwf	fputc@c
 19022  122F  0845               	movf	??_fputs+1,w
 19023  1230  00BC               	movwf	fputc@c+1
 19024  1231  0843               	movf	fputs@fp,w
 19025  1232  00C6               	movwf	??_fputs+2
 19026  1233  0846               	movf	??_fputs+2,w
 19027  1234  00BD               	movwf	fputc@fp
 19028  1235  3194  241C  3192   	fcall	_fputc
 19029  1238  3001               	movlw	1
 19030  1239  0140               	movlb	0	; select bank0
 19031  123A  07C8               	addwf	fputs@i,f
 19032  123B  3000               	movlw	0
 19033  123C  3DC9               	addwfc	fputs@i+1,f
 19034  123D  2A1C               	goto	l6957
 19035  123E                     __end_of_fputs:	
 19036                           
 19037                           	psect	text58
 19038  141C                     __ptext58:	
 19039 ;; *************** function _fputc *****************
 19040 ;; Defined at:
 19041 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 19042 ;; Parameters:    Size  Location     Type
 19043 ;;  c               2   27[BANK0 ] int 
 19044 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
 19045 ;;		 -> NULL(0), 
 19046 ;; Auto vars:     Size  Location     Type
 19047 ;;		None
 19048 ;; Return value:  Size  Location     Type
 19049 ;;                  2   27[BANK0 ] int 
 19050 ;; Registers used:
 19051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19052 ;; Tracked objects:
 19053 ;;		On entry : 0/0
 19054 ;;		On exit  : 0/0
 19055 ;;		Unchanged: 0/0
 19056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19057 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19059 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19060 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19061 ;;Total ram usage:        8 bytes
 19062 ;; Hardware stack levels used:    1
 19063 ;; Hardware stack levels required when called:   10
 19064 ;; This function calls:
 19065 ;;		_putch
 19066 ;; This function is called by:
 19067 ;;		_pad
 19068 ;;		_vfpfcnvrt
 19069 ;;		_fputs
 19070 ;; This function uses a non-reentrant model
 19071 ;;
 19072                           
 19073                           
 19074                           ;psect for function _fputc
 19075  141C                     _fputc:	
 19076                           
 19077                           ;incstack = 0
 19078                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19079  141C  0140               	movlb	0	; select bank0
 19080  141D  083D               	movf	fputc@fp,w
 19081  141E  1D03               	btfss	3,2
 19082  141F  083D               	movf	fputc@fp,w
 19083  1420  1D03               	btfss	3,2
 19084  1421  2C26               	goto	l6933
 19085  1422  083B               	movf	fputc@c,w
 19086  1423  3191  21D0         	fcall	_putch
 19087  1425  0008               	return
 19088  1426                     l6933:	
 19089  1426  083D               	movf	fputc@fp,w
 19090  1427  3E03               	addlw	3
 19091  1428  0086               	movwf	6
 19092  1429  0187               	clrf	7
 19093  142A  0016               	moviw fsr1++
 19094  142B  0401               	iorwf	1,w
 19095  142C  1903               	btfsc	3,2
 19096  142D  2C49               	goto	l6937
 19097  142E  083D               	movf	fputc@fp,w
 19098  142F  3E03               	addlw	3
 19099  1430  0086               	movwf	6
 19100  1431  0187               	clrf	7
 19101  1432  3F40               	moviw [0]fsr1
 19102  1433  00BE               	movwf	??_fputc
 19103  1434  3F41               	moviw [1]fsr1
 19104  1435  00BF               	movwf	??_fputc+1
 19105  1436  0A3D               	incf	fputc@fp,w
 19106  1437  0086               	movwf	6
 19107  1438  0187               	clrf	7
 19108  1439  3F40               	moviw [0]fsr1
 19109  143A  00C0               	movwf	??_fputc+2
 19110  143B  3F41               	moviw [1]fsr1
 19111  143C  00C1               	movwf	??_fputc+3
 19112  143D  0841               	movf	??_fputc+3,w
 19113  143E  3A80               	xorlw	128
 19114  143F  00C2               	movwf	??_fputc+4
 19115  1440  083F               	movf	??_fputc+1,w
 19116  1441  3A80               	xorlw	128
 19117  1442  0242               	subwf	??_fputc+4,w
 19118  1443  1D03               	skipz
 19119  1444  2C47               	goto	u6255
 19120  1445  083E               	movf	??_fputc,w
 19121  1446  0240               	subwf	??_fputc+2,w
 19122  1447                     u6255:	
 19123  1447  1803               	skipnc
 19124  1448  0008               	return
 19125  1449                     l6937:	
 19126  1449  0140               	movlb	0	; select bank0
 19127  144A  0A3D               	incf	fputc@fp,w
 19128  144B  0086               	movwf	6
 19129  144C  0187               	clrf	7
 19130  144D  3001               	movlw	1
 19131  144E  0781               	addwf	1,f
 19132  144F  3141               	addfsr 1,1
 19133  1450  1803               	skipnc
 19134  1451  0A81               	incf	1,f
 19135  1452  0008               	return
 19136  1453                     __end_of_fputc:	
 19137                           
 19138                           	psect	text59
 19139  11D0                     __ptext59:	
 19140 ;; *************** function _putch *****************
 19141 ;; Defined at:
 19142 ;;		line 166 in file "tm1650.c"
 19143 ;; Parameters:    Size  Location     Type
 19144 ;;  n               1    wreg     unsigned char 
 19145 ;; Auto vars:     Size  Location     Type
 19146 ;;  n               1   26[BANK0 ] unsigned char 
 19147 ;; Return value:  Size  Location     Type
 19148 ;;                  1    wreg      void 
 19149 ;; Registers used:
 19150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19151 ;; Tracked objects:
 19152 ;;		On entry : 0/0
 19153 ;;		On exit  : 0/0
 19154 ;;		Unchanged: 0/0
 19155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19157 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19158 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19159 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19160 ;;Total ram usage:        2 bytes
 19161 ;; Hardware stack levels used:    1
 19162 ;; Hardware stack levels required when called:    9
 19163 ;; This function calls:
 19164 ;;		_TM1650_setDigit
 19165 ;; This function is called by:
 19166 ;;		_fputc
 19167 ;; This function uses a non-reentrant model
 19168 ;;
 19169                           
 19170                           
 19171                           ;psect for function _putch
 19172  11D0                     _putch:	
 19173                           
 19174                           ;incstack = 0
 19175                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19176                           ;putch@n stored from wreg
 19177  11D0  0140               	movlb	0	; select bank0
 19178  11D1  00BA               	movwf	putch@n
 19179                           
 19180                           ;tm1650.c: 168:     if(position > 3 || n == '\r' || n == '\0')
 19181  11D2  3004               	movlw	4
 19182  11D3  0141               	movlb	1	; select bank1
 19183  11D4  0234               	subwf	_position^(0+128),w
 19184  11D5  1803               	skipnc
 19185  11D6  29DE               	goto	l6919
 19186  11D7  300D               	movlw	13
 19187  11D8  0140               	movlb	0	; select bank0
 19188  11D9  063A               	xorwf	putch@n,w
 19189  11DA  1D03               	btfss	3,2
 19190  11DB  083A               	movf	putch@n,w
 19191  11DC  1D03               	btfss	3,2
 19192  11DD  29E0               	goto	l6921
 19193  11DE                     l6919:	
 19194                           
 19195                           ;tm1650.c: 169:         position = 0;
 19196  11DE  0141               	movlb	1	; select bank1
 19197  11DF  01B4               	clrf	_position^(0+128)
 19198  11E0                     l6921:	
 19199                           
 19200                           ;tm1650.c: 171:     if(n != '\r'){
 19201  11E0  300D               	movlw	13
 19202  11E1  0140               	movlb	0	; select bank0
 19203  11E2  063A               	xorwf	putch@n,w
 19204  11E3  1903               	btfsc	3,2
 19205  11E4  0008               	return
 19206                           
 19207                           ;tm1650.c: 172:         TM1650_setDigit(position, n);
 19208  11E5  083A               	movf	putch@n,w
 19209  11E6  00B9               	movwf	??_putch
 19210  11E7  0839               	movf	??_putch,w
 19211  11E8  00B6               	movwf	TM1650_setDigit@data
 19212  11E9  0141               	movlb	1	; select bank1
 19213  11EA  0834               	movf	_position^(0+128),w
 19214  11EB  319F  27B3         	fcall	_TM1650_setDigit
 19215                           
 19216                           ;tm1650.c: 173:         position++;
 19217  11ED  3001               	movlw	1
 19218  11EE  0140               	movlb	0	; select bank0
 19219  11EF  00B9               	movwf	??_putch
 19220  11F0  0839               	movf	??_putch,w
 19221  11F1  0141               	movlb	1	; select bank1
 19222  11F2  07B4               	addwf	_position^(0+128),f
 19223  11F3  0008               	return
 19224  11F4                     __end_of_putch:	
 19225                           
 19226                           	psect	text60
 19227  1FB3                     __ptext60:	
 19228 ;; *************** function _TM1650_setDigit *****************
 19229 ;; Defined at:
 19230 ;;		line 95 in file "tm1650.c"
 19231 ;; Parameters:    Size  Location     Type
 19232 ;;  digit           1    wreg     unsigned char 
 19233 ;;  data            1   22[BANK0 ] unsigned char 
 19234 ;; Auto vars:     Size  Location     Type
 19235 ;;  digit           1   24[BANK0 ] unsigned char 
 19236 ;; Return value:  Size  Location     Type
 19237 ;;                  1    wreg      void 
 19238 ;; Registers used:
 19239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19240 ;; Tracked objects:
 19241 ;;		On entry : 0/0
 19242 ;;		On exit  : 0/0
 19243 ;;		Unchanged: 0/0
 19244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19245 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19246 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19247 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19248 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19249 ;;Total ram usage:        3 bytes
 19250 ;; Hardware stack levels used:    1
 19251 ;; Hardware stack levels required when called:    8
 19252 ;; This function calls:
 19253 ;;		_writeData
 19254 ;; This function is called by:
 19255 ;;		_putch
 19256 ;; This function uses a non-reentrant model
 19257 ;;
 19258                           
 19259                           
 19260                           ;psect for function _TM1650_setDigit
 19261  1FB3                     _TM1650_setDigit:	
 19262                           
 19263                           ;incstack = 0
 19264                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19265                           ;TM1650_setDigit@digit stored from wreg
 19266  1FB3  0140               	movlb	0	; select bank0
 19267  1FB4  00B8               	movwf	TM1650_setDigit@digit
 19268                           
 19269                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 19270  1FB5  0836               	movf	TM1650_setDigit@data,w
 19271  1FB6  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 19272  1FB7  0084               	movwf	4
 19273  1FB8  3097               	movlw	high ((_charTable+65504)| (0+32768))
 19274  1FB9  1803               	skipnc
 19275  1FBA  3E01               	addlw	1
 19276  1FBB  0085               	movwf	5
 19277  1FBC  0800               	movf	0,w	;code access
 19278  1FBD  00B7               	movwf	??_TM1650_setDigit
 19279  1FBE  0837               	movf	??_TM1650_setDigit,w
 19280  1FBF  00B0               	movwf	writeData@data
 19281  1FC0  0838               	movf	TM1650_setDigit@digit,w
 19282  1FC1  3E34               	addlw	52
 19283  1FC2  3190  20D8         	fcall	_writeData
 19284  1FC4  0008               	return
 19285  1FC5                     __end_of_TM1650_setDigit:	
 19286                           
 19287                           	psect	text61
 19288  1F81                     __ptext61:	
 19289 ;; *************** function _address_inc *****************
 19290 ;; Defined at:
 19291 ;;		line 29 in file "dmx.c"
 19292 ;; Parameters:    Size  Location     Type
 19293 ;;		None
 19294 ;; Auto vars:     Size  Location     Type
 19295 ;;		None
 19296 ;; Return value:  Size  Location     Type
 19297 ;;                  1    wreg      void 
 19298 ;; Registers used:
 19299 ;;		wreg, status,2, status,0
 19300 ;; Tracked objects:
 19301 ;;		On entry : 0/0
 19302 ;;		On exit  : 0/0
 19303 ;;		Unchanged: 0/0
 19304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19309 ;;Total ram usage:        0 bytes
 19310 ;; Hardware stack levels used:    1
 19311 ;; Hardware stack levels required when called:    4
 19312 ;; This function calls:
 19313 ;;		Nothing
 19314 ;; This function is called by:
 19315 ;;		_CONTROL_DMX
 19316 ;; This function uses a non-reentrant model
 19317 ;;
 19318                           
 19319                           
 19320                           ;psect for function _address_inc
 19321  1F81                     _address_inc:	
 19322                           
 19323                           ;dmx.c: 31:     if(address == 512)
 19324                           
 19325                           ;incstack = 0
 19326                           ; Regs used in _address_inc: [wreg+status,2+status,0]
 19327  1F81  3002               	movlw	2
 19328  1F82  0141               	movlb	1	; select bank1
 19329  1F83  066C               	xorwf	(_address+1)^(0+128),w
 19330  1F84  046B               	iorwf	_address^(0+128),w
 19331  1F85  1D03               	btfss	3,2
 19332  1F86  2F8C               	goto	l7681
 19333                           
 19334                           ;dmx.c: 32:         address = 1;
 19335  1F87  3001               	movlw	1
 19336  1F88  00EB               	movwf	_address^(0+128)
 19337  1F89  3000               	movlw	0
 19338  1F8A  00EC               	movwf	(_address^(0+128)+1)
 19339  1F8B  0008               	return
 19340  1F8C                     l7681:	
 19341                           
 19342                           ;dmx.c: 34:         address++;
 19343  1F8C  3001               	movlw	1
 19344  1F8D  07EB               	addwf	_address^(0+128),f
 19345  1F8E  3000               	movlw	0
 19346  1F8F  3DEC               	addwfc	(_address+1)^(0+128),f
 19347  1F90  0008               	return
 19348  1F91                     __end_of_address_inc:	
 19349                           
 19350                           	psect	text62
 19351  1F72                     __ptext62:	
 19352 ;; *************** function _address_dec *****************
 19353 ;; Defined at:
 19354 ;;		line 43 in file "dmx.c"
 19355 ;; Parameters:    Size  Location     Type
 19356 ;;		None
 19357 ;; Auto vars:     Size  Location     Type
 19358 ;;		None
 19359 ;; Return value:  Size  Location     Type
 19360 ;;                  1    wreg      void 
 19361 ;; Registers used:
 19362 ;;		wreg, status,2, status,0
 19363 ;; Tracked objects:
 19364 ;;		On entry : 0/0
 19365 ;;		On exit  : 0/0
 19366 ;;		Unchanged: 0/0
 19367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19372 ;;Total ram usage:        0 bytes
 19373 ;; Hardware stack levels used:    1
 19374 ;; Hardware stack levels required when called:    4
 19375 ;; This function calls:
 19376 ;;		Nothing
 19377 ;; This function is called by:
 19378 ;;		_CONTROL_DMX
 19379 ;; This function uses a non-reentrant model
 19380 ;;
 19381                           
 19382                           
 19383                           ;psect for function _address_dec
 19384  1F72                     _address_dec:	
 19385                           
 19386                           ;dmx.c: 45:     if(address == 1)
 19387                           
 19388                           ;incstack = 0
 19389                           ; Regs used in _address_dec: [wreg+status,2+status,0]
 19390  1F72  0141               	movlb	1	; select bank1
 19391  1F73  036B               	decf	_address^(0+128),w
 19392  1F74  046C               	iorwf	(_address+1)^(0+128),w
 19393  1F75  1D03               	btfss	3,2
 19394  1F76  2F7C               	goto	l7687
 19395                           
 19396                           ;dmx.c: 46:         address = 512;
 19397  1F77  3000               	movlw	0
 19398  1F78  00EB               	movwf	_address^(0+128)
 19399  1F79  3002               	movlw	2
 19400  1F7A  00EC               	movwf	(_address^(0+128)+1)
 19401  1F7B  0008               	return
 19402  1F7C                     l7687:	
 19403                           
 19404                           ;dmx.c: 48:         address--;
 19405  1F7C  3001               	movlw	1
 19406  1F7D  02EB               	subwf	_address^(0+128),f
 19407  1F7E  3000               	movlw	0
 19408  1F7F  3BEC               	subwfb	(_address+1)^(0+128),f
 19409  1F80  0008               	return
 19410  1F81                     __end_of_address_dec:	
 19411                           
 19412                           	psect	text63
 19413  0871                     __ptext63:	
 19414 ;; *************** function _TM1650_fastPrintNum_3digit *****************
 19415 ;; Defined at:
 19416 ;;		line 120 in file "tm1650.c"
 19417 ;; Parameters:    Size  Location     Type
 19418 ;;  num             2   22[BANK0 ] unsigned short 
 19419 ;; Auto vars:     Size  Location     Type
 19420 ;;		None
 19421 ;; Return value:  Size  Location     Type
 19422 ;;                  1    wreg      void 
 19423 ;; Registers used:
 19424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19425 ;; Tracked objects:
 19426 ;;		On entry : 0/0
 19427 ;;		On exit  : 0/0
 19428 ;;		Unchanged: 0/0
 19429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19430 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19432 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19433 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19434 ;;Total ram usage:        3 bytes
 19435 ;; Hardware stack levels used:    1
 19436 ;; Hardware stack levels required when called:    8
 19437 ;; This function calls:
 19438 ;;		___lwdiv
 19439 ;;		___lwmod
 19440 ;;		_writeData
 19441 ;; This function is called by:
 19442 ;;		_CONTROL_DMX
 19443 ;; This function uses a non-reentrant model
 19444 ;;
 19445                           
 19446                           
 19447                           ;psect for function _TM1650_fastPrintNum_3digit
 19448  0871                     _TM1650_fastPrintNum_3digit:	
 19449                           
 19450                           ;tm1650.c: 122:     if(num > 999){
 19451                           
 19452                           ;incstack = 0
 19453                           ; Regs used in _TM1650_fastPrintNum_3digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19454  0871  3003               	movlw	3
 19455  0872  0140               	movlb	0	; select bank0
 19456  0873  0237               	subwf	TM1650_fastPrintNum_3digit@num+1,w
 19457  0874  30E8               	movlw	232
 19458  0875  1903               	skipnz
 19459  0876  0236               	subwf	TM1650_fastPrintNum_3digit@num,w
 19460  0877  1C03               	skipc
 19461  0878  289C               	goto	l7675
 19462                           
 19463                           ;tm1650.c: 123:         writeData(0x34, 0x79);
 19464  0879  3079               	movlw	121
 19465  087A  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19466  087B  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19467  087C  00B0               	movwf	writeData@data
 19468  087D  3034               	movlw	52
 19469  087E  3190  20D8  3188   	fcall	_writeData
 19470                           
 19471                           ;tm1650.c: 124:         writeData(0x35, 0x79);
 19472  0881  3079               	movlw	121
 19473  0882  0140               	movlb	0	; select bank0
 19474  0883  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19475  0884  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19476  0885  00B0               	movwf	writeData@data
 19477  0886  3035               	movlw	53
 19478  0887  3190  20D8  3188   	fcall	_writeData
 19479                           
 19480                           ;tm1650.c: 125:         writeData(0x36, 0x79);
 19481  088A  3079               	movlw	121
 19482  088B  0140               	movlb	0	; select bank0
 19483  088C  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19484  088D  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19485  088E  00B0               	movwf	writeData@data
 19486  088F  3036               	movlw	54
 19487  0890  3190  20D8  3188   	fcall	_writeData
 19488                           
 19489                           ;tm1650.c: 126:         writeData(0x37, 0x79);
 19490  0893  3079               	movlw	121
 19491  0894  0140               	movlb	0	; select bank0
 19492  0895  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19493  0896  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19494  0897  00B0               	movwf	writeData@data
 19495  0898  3037               	movlw	55
 19496  0899  3190  20D8         	fcall	_writeData
 19497  089B  0008               	return
 19498  089C                     l7675:	
 19499                           
 19500                           ;tm1650.c: 130:     writeData(0x37, charTable[(num % 10) + 16]);
 19501  089C  300A               	movlw	10
 19502  089D  00A8               	movwf	___lwmod@divisor
 19503  089E  3000               	movlw	0
 19504  089F  00A9               	movwf	___lwmod@divisor+1
 19505  08A0  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 19506  08A1  00AB               	movwf	___lwmod@dividend+1
 19507  08A2  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 19508  08A3  00AA               	movwf	___lwmod@dividend
 19509  08A4  3192  228E  3188   	fcall	___lwmod
 19510  08A7  0140               	movlb	0	; select bank0
 19511  08A8  0829               	movf	?___lwmod+1,w
 19512  08A9  0085               	movwf	5
 19513  08AA  0828               	movf	?___lwmod,w
 19514  08AB  0084               	movwf	4
 19515  08AC  3010               	movlw	low ((_charTable+16)| (0+32768))
 19516  08AD  0784               	addwf	4,f
 19517  08AE  3098               	movlw	high ((_charTable+16)| (0+32768))
 19518  08AF  3D85               	addwfc	5,f
 19519  08B0  0800               	movf	0,w	;code access
 19520  08B1  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19521  08B2  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19522  08B3  00B0               	movwf	writeData@data
 19523  08B4  3037               	movlw	55
 19524  08B5  3190  20D8  3188   	fcall	_writeData
 19525                           
 19526                           ;tm1650.c: 131:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 19527  08B8  300A               	movlw	10
 19528  08B9  0140               	movlb	0	; select bank0
 19529  08BA  00A8               	movwf	___lwmod@divisor
 19530  08BB  3000               	movlw	0
 19531  08BC  00A9               	movwf	___lwmod@divisor+1
 19532  08BD  300A               	movlw	10
 19533  08BE  00A0               	movwf	___lwdiv@divisor
 19534  08BF  3000               	movlw	0
 19535  08C0  00A1               	movwf	___lwdiv@divisor+1
 19536  08C1  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 19537  08C2  00A3               	movwf	___lwdiv@dividend+1
 19538  08C3  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 19539  08C4  00A2               	movwf	___lwdiv@dividend
 19540  08C5  3193  23B1  3188   	fcall	___lwdiv
 19541  08C8  0140               	movlb	0	; select bank0
 19542  08C9  0821               	movf	?___lwdiv+1,w
 19543  08CA  00AB               	movwf	___lwmod@dividend+1
 19544  08CB  0820               	movf	?___lwdiv,w
 19545  08CC  00AA               	movwf	___lwmod@dividend
 19546  08CD  3192  228E  3188   	fcall	___lwmod
 19547  08D0  0140               	movlb	0	; select bank0
 19548  08D1  0829               	movf	?___lwmod+1,w
 19549  08D2  0085               	movwf	5
 19550  08D3  0828               	movf	?___lwmod,w
 19551  08D4  0084               	movwf	4
 19552  08D5  3010               	movlw	low ((_charTable+16)| (0+32768))
 19553  08D6  0784               	addwf	4,f
 19554  08D7  3098               	movlw	high ((_charTable+16)| (0+32768))
 19555  08D8  3D85               	addwfc	5,f
 19556  08D9  0800               	movf	0,w	;code access
 19557  08DA  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19558  08DB  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19559  08DC  00B0               	movwf	writeData@data
 19560  08DD  3036               	movlw	54
 19561  08DE  3190  20D8  3188   	fcall	_writeData
 19562                           
 19563                           ;tm1650.c: 132:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 19564  08E1  300A               	movlw	10
 19565  08E2  0140               	movlb	0	; select bank0
 19566  08E3  00A8               	movwf	___lwmod@divisor
 19567  08E4  3000               	movlw	0
 19568  08E5  00A9               	movwf	___lwmod@divisor+1
 19569  08E6  3064               	movlw	100
 19570  08E7  00A0               	movwf	___lwdiv@divisor
 19571  08E8  3000               	movlw	0
 19572  08E9  00A1               	movwf	___lwdiv@divisor+1
 19573  08EA  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 19574  08EB  00A3               	movwf	___lwdiv@dividend+1
 19575  08EC  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 19576  08ED  00A2               	movwf	___lwdiv@dividend
 19577  08EE  3193  23B1  3188   	fcall	___lwdiv
 19578  08F1  0140               	movlb	0	; select bank0
 19579  08F2  0821               	movf	?___lwdiv+1,w
 19580  08F3  00AB               	movwf	___lwmod@dividend+1
 19581  08F4  0820               	movf	?___lwdiv,w
 19582  08F5  00AA               	movwf	___lwmod@dividend
 19583  08F6  3192  228E  3188   	fcall	___lwmod
 19584  08F9  0140               	movlb	0	; select bank0
 19585  08FA  0829               	movf	?___lwmod+1,w
 19586  08FB  0085               	movwf	5
 19587  08FC  0828               	movf	?___lwmod,w
 19588  08FD  0084               	movwf	4
 19589  08FE  3010               	movlw	low ((_charTable+16)| (0+32768))
 19590  08FF  0784               	addwf	4,f
 19591  0900  3098               	movlw	high ((_charTable+16)| (0+32768))
 19592  0901  3D85               	addwfc	5,f
 19593  0902  0800               	movf	0,w	;code access
 19594  0903  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19595  0904  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19596  0905  00B0               	movwf	writeData@data
 19597  0906  3035               	movlw	53
 19598  0907  3190  20D8         	fcall	_writeData
 19599  0909  0008               	return
 19600  090A                     __end_of_TM1650_fastPrintNum_3digit:	
 19601                           
 19602                           	psect	text64
 19603  10D8                     __ptext64:	
 19604 ;; *************** function _writeData *****************
 19605 ;; Defined at:
 19606 ;;		line 31 in file "tm1650.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;  address         1    wreg     unsigned char 
 19609 ;;  data            1   16[BANK0 ] unsigned char 
 19610 ;; Auto vars:     Size  Location     Type
 19611 ;;  address         1   20[BANK0 ] unsigned char 
 19612 ;;  status          1   21[BANK0 ] enum E11376
 19613 ;; Return value:  Size  Location     Type
 19614 ;;                  1    wreg      void 
 19615 ;; Registers used:
 19616 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19617 ;; Tracked objects:
 19618 ;;		On entry : 0/0
 19619 ;;		On exit  : 0/0
 19620 ;;		Unchanged: 0/0
 19621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19622 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19623 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19624 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19625 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19626 ;;Total ram usage:        6 bytes
 19627 ;; Hardware stack levels used:    1
 19628 ;; Hardware stack levels required when called:    7
 19629 ;; This function calls:
 19630 ;;		_I2C1_MasterWrite
 19631 ;; This function is called by:
 19632 ;;		_TM1650_enable
 19633 ;;		_TM1650_setDigit
 19634 ;;		_TM1650_fastPrintNum
 19635 ;;		_TM1650_fastPrintNum_3digit
 19636 ;;		_TM1650_fastPrintNum_2digit
 19637 ;;		_TM1650_brightness
 19638 ;;		_TM1650_fastPrintNum_1digit
 19639 ;; This function uses a non-reentrant model
 19640 ;;
 19641                           
 19642                           
 19643                           ;psect for function _writeData
 19644  10D8                     _writeData:	
 19645                           
 19646                           ;incstack = 0
 19647                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19648                           ;writeData@address stored from wreg
 19649  10D8  0140               	movlb	0	; select bank0
 19650  10D9  00B4               	movwf	writeData@address
 19651                           
 19652                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 19653  10DA  3002               	movlw	2
 19654  10DB  00B1               	movwf	??_writeData
 19655  10DC  0831               	movf	??_writeData,w
 19656  10DD  00B5               	movwf	writeData@status
 19657                           
 19658                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 19659  10DE  01A7               	clrf	I2C1_MasterWrite@length
 19660  10DF  0AA7               	incf	I2C1_MasterWrite@length,f
 19661  10E0  0834               	movf	writeData@address,w
 19662  10E1  00B1               	movwf	??_writeData
 19663  10E2  01B2               	clrf	??_writeData+1
 19664  10E3  0831               	movf	??_writeData,w
 19665  10E4  00A8               	movwf	I2C1_MasterWrite@address
 19666  10E5  0832               	movf	??_writeData+1,w
 19667  10E6  00A9               	movwf	I2C1_MasterWrite@address+1
 19668  10E7  3035               	movlw	(low (writeData@status| 0))& (0+255)
 19669  10E8  00B3               	movwf	??_writeData+2
 19670  10E9  0833               	movf	??_writeData+2,w
 19671  10EA  00AA               	movwf	I2C1_MasterWrite@pflag
 19672  10EB  3030               	movlw	(low (writeData@data| 0))& (0+255)
 19673  10EC  3192  2264  3190   	fcall	_I2C1_MasterWrite
 19674  10EF                     l6909:	
 19675                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 19676                           
 19677  10EF  3002               	movlw	2
 19678  10F0  0140               	movlb	0	; select bank0
 19679  10F1  0635               	xorwf	writeData@status,w
 19680  10F2  1D03               	btfss	3,2
 19681  10F3  0008               	return
 19682  10F4  28EF               	goto	l6909
 19683  10F5                     __end_of_writeData:	
 19684                           
 19685                           	psect	text65
 19686  1264                     __ptext65:	
 19687 ;; *************** function _I2C1_MasterWrite *****************
 19688 ;; Defined at:
 19689 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 19690 ;; Parameters:    Size  Location     Type
 19691 ;;  pdata           1    wreg     PTR unsigned char 
 19692 ;;		 -> writeData@data(1), 
 19693 ;;  length          1    7[BANK0 ] unsigned char 
 19694 ;;  address         2    8[BANK0 ] unsigned short 
 19695 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 19696 ;;		 -> writeData@status(1), 
 19697 ;; Auto vars:     Size  Location     Type
 19698 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 19699 ;;		 -> writeData@data(1), 
 19700 ;; Return value:  Size  Location     Type
 19701 ;;                  1    wreg      void 
 19702 ;; Registers used:
 19703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19704 ;; Tracked objects:
 19705 ;;		On entry : 0/0
 19706 ;;		On exit  : 0/0
 19707 ;;		Unchanged: 0/0
 19708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19709 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19711 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19712 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19713 ;;Total ram usage:        7 bytes
 19714 ;; Hardware stack levels used:    1
 19715 ;; Hardware stack levels required when called:    6
 19716 ;; This function calls:
 19717 ;;		_I2C1_MasterTRBInsert
 19718 ;;		_I2C1_MasterWriteTRBBuild
 19719 ;; This function is called by:
 19720 ;;		_writeData
 19721 ;; This function uses a non-reentrant model
 19722 ;;
 19723                           
 19724                           
 19725                           ;psect for function _I2C1_MasterWrite
 19726  1264                     _I2C1_MasterWrite:	
 19727                           
 19728                           ;incstack = 0
 19729                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19730                           ;I2C1_MasterWrite@pdata stored from wreg
 19731  1264  0140               	movlb	0	; select bank0
 19732  1265  00AD               	movwf	I2C1_MasterWrite@pdata
 19733                           
 19734                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 19735  1266  0141               	movlb	1	; select bank1
 19736  1267  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 19737  1268  2A87               	goto	l6903
 19738                           
 19739                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 19740  1269  0140               	movlb	0	; select bank0
 19741  126A  082D               	movf	I2C1_MasterWrite@pdata,w
 19742  126B  00AB               	movwf	??_I2C1_MasterWrite
 19743  126C  082B               	movf	??_I2C1_MasterWrite,w
 19744  126D  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 19745  126E  0827               	movf	I2C1_MasterWrite@length,w
 19746  126F  00AC               	movwf	??_I2C1_MasterWrite+1
 19747  1270  082C               	movf	??_I2C1_MasterWrite+1,w
 19748  1271  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 19749  1272  0829               	movf	I2C1_MasterWrite@address+1,w
 19750  1273  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 19751  1274  0828               	movf	I2C1_MasterWrite@address,w
 19752  1275  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 19753  1276  30EA               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 19754  1277  3191  21AD  3192   	fcall	_I2C1_MasterWriteTRBBuild
 19755                           
 19756                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 19757  127A  30EA               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 19758  127B  0140               	movlb	0	; select bank0
 19759  127C  00AB               	movwf	??_I2C1_MasterWrite
 19760  127D  082B               	movf	??_I2C1_MasterWrite,w
 19761  127E  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 19762  127F  082A               	movf	I2C1_MasterWrite@pflag,w
 19763  1280  00AC               	movwf	??_I2C1_MasterWrite+1
 19764  1281  082C               	movf	??_I2C1_MasterWrite+1,w
 19765  1282  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 19766  1283  3001               	movlw	1
 19767  1284  3195  25CB         	fcall	_I2C1_MasterTRBInsert
 19768                           
 19769                           ;mcc_generated_files/i2c1.c: 613:     }
 19770  1286  0008               	return
 19771  1287                     l6903:	
 19772                           
 19773                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 19774  1287  0140               	movlb	0	; select bank0
 19775  1288  082A               	movf	I2C1_MasterWrite@pflag,w
 19776  1289  0086               	movwf	6
 19777  128A  0187               	clrf	7
 19778  128B  0181               	clrf	1
 19779  128C  0A81               	incf	1,f
 19780  128D  0008               	return
 19781  128E                     __end_of_I2C1_MasterWrite:	
 19782                           
 19783                           	psect	text66
 19784  11AD                     __ptext66:	
 19785 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 19786 ;; Defined at:
 19787 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 19788 ;; Parameters:    Size  Location     Type
 19789 ;;  ptrb            1    wreg     PTR struct .
 19790 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 19791 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 19792 ;;		 -> writeData@data(1), 
 19793 ;;  length          1    1[BANK0 ] unsigned char 
 19794 ;;  address         2    2[BANK0 ] unsigned short 
 19795 ;; Auto vars:     Size  Location     Type
 19796 ;;  ptrb            1    6[BANK0 ] PTR struct .
 19797 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 19798 ;; Return value:  Size  Location     Type
 19799 ;;                  1    wreg      void 
 19800 ;; Registers used:
 19801 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19802 ;; Tracked objects:
 19803 ;;		On entry : 0/0
 19804 ;;		On exit  : 0/0
 19805 ;;		Unchanged: 0/0
 19806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19807 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19808 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19810 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19811 ;;Total ram usage:        7 bytes
 19812 ;; Hardware stack levels used:    1
 19813 ;; Hardware stack levels required when called:    4
 19814 ;; This function calls:
 19815 ;;		Nothing
 19816 ;; This function is called by:
 19817 ;;		_I2C1_MasterWrite
 19818 ;; This function uses a non-reentrant model
 19819 ;;
 19820                           
 19821                           
 19822                           ;psect for function _I2C1_MasterWriteTRBBuild
 19823  11AD                     _I2C1_MasterWriteTRBBuild:	
 19824                           
 19825                           ;incstack = 0
 19826                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 19827                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 19828  11AD  0140               	movlb	0	; select bank0
 19829  11AE  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 19830                           
 19831                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 19832  11AF  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 19833  11B0  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 19834  11B1  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 19835  11B2  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19836  11B3  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 19837  11B4  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 19838  11B5  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19839  11B6  0086               	movwf	6
 19840  11B7  3001               	movlw	1	; select bank2/3
 19841  11B8  0087               	movwf	7
 19842  11B9  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19843  11BA  3FC0               	movwi [0]fsr1
 19844  11BB  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 19845  11BC  3FC1               	movwi [1]fsr1
 19846                           
 19847                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 19848  11BD  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 19849  11BE  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19850  11BF  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19851  11C0  3E02               	addlw	2
 19852  11C1  0086               	movwf	6
 19853  11C2  3001               	movlw	1	; select bank2/3
 19854  11C3  0087               	movwf	7
 19855  11C4  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19856  11C5  0081               	movwf	1
 19857                           
 19858                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 19859  11C6  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 19860  11C7  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 19861  11C8  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 19862  11C9  3E03               	addlw	3
 19863  11CA  0086               	movwf	6
 19864  11CB  3001               	movlw	1	; select bank2/3
 19865  11CC  0087               	movwf	7
 19866  11CD  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 19867  11CE  0081               	movwf	1
 19868  11CF  0008               	return
 19869  11D0                     __end_of_I2C1_MasterWriteTRBBuild:	
 19870                           
 19871                           	psect	text67
 19872  15CB                     __ptext67:	
 19873 ;; *************** function _I2C1_MasterTRBInsert *****************
 19874 ;; Defined at:
 19875 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 19876 ;; Parameters:    Size  Location     Type
 19877 ;;  count           1    wreg     unsigned char 
 19878 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 19879 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 19880 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 19881 ;;		 -> writeData@status(1), 
 19882 ;; Auto vars:     Size  Location     Type
 19883 ;;  count           1    3[BANK0 ] unsigned char 
 19884 ;; Return value:  Size  Location     Type
 19885 ;;                  1    wreg      void 
 19886 ;; Registers used:
 19887 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19888 ;; Tracked objects:
 19889 ;;		On entry : 0/0
 19890 ;;		On exit  : 0/0
 19891 ;;		Unchanged: 0/0
 19892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19896 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19897 ;;Total ram usage:        4 bytes
 19898 ;; Hardware stack levels used:    1
 19899 ;; Hardware stack levels required when called:    5
 19900 ;; This function calls:
 19901 ;;		_I2C1_WaitForLastPacketToComplete
 19902 ;; This function is called by:
 19903 ;;		_I2C1_MasterWrite
 19904 ;;		_I2C1_MasterRead
 19905 ;; This function uses a non-reentrant model
 19906 ;;
 19907                           
 19908                           
 19909                           ;psect for function _I2C1_MasterTRBInsert
 19910  15CB                     _I2C1_MasterTRBInsert:	
 19911                           
 19912                           ;incstack = 0
 19913                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19914                           ;I2C1_MasterTRBInsert@count stored from wreg
 19915  15CB  0140               	movlb	0	; select bank0
 19916  15CC  00A3               	movwf	I2C1_MasterTRBInsert@count
 19917                           
 19918                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 19919  15CD  0141               	movlb	1	; select bank1
 19920  15CE  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 19921  15CF  2E0D               	goto	l6891
 19922                           
 19923                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 19924  15D0  3002               	movlw	2
 19925  15D1  0140               	movlb	0	; select bank0
 19926  15D2  00A2               	movwf	??_I2C1_MasterTRBInsert
 19927  15D3  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19928  15D4  0086               	movwf	6
 19929  15D5  0187               	clrf	7
 19930  15D6  0822               	movf	??_I2C1_MasterTRBInsert,w
 19931  15D7  0081               	movwf	1
 19932                           
 19933                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 19934  15D8  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 19935  15D9  00A2               	movwf	??_I2C1_MasterTRBInsert
 19936  15DA  0141               	movlb	1	; select bank1
 19937  15DB  0A20               	incf	_i2c1_object^(0+128),w
 19938  15DC  0086               	movwf	6
 19939  15DD  3001               	movlw	1	; select bank2/3
 19940  15DE  0087               	movwf	7
 19941  15DF  0140               	movlb	0	; select bank0
 19942  15E0  0822               	movf	??_I2C1_MasterTRBInsert,w
 19943  15E1  0081               	movwf	1
 19944                           
 19945                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 19946  15E2  0823               	movf	I2C1_MasterTRBInsert@count,w
 19947  15E3  00A2               	movwf	??_I2C1_MasterTRBInsert
 19948  15E4  0141               	movlb	1	; select bank1
 19949  15E5  0820               	movf	_i2c1_object^(0+128),w
 19950  15E6  0086               	movwf	6
 19951  15E7  3001               	movlw	1	; select bank2/3
 19952  15E8  0087               	movwf	7
 19953  15E9  0140               	movlb	0	; select bank0
 19954  15EA  0822               	movf	??_I2C1_MasterTRBInsert,w
 19955  15EB  0081               	movwf	1
 19956                           
 19957                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 19958  15EC  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 19959  15ED  00A2               	movwf	??_I2C1_MasterTRBInsert
 19960  15EE  0141               	movlb	1	; select bank1
 19961  15EF  0820               	movf	_i2c1_object^(0+128),w
 19962  15F0  3E02               	addlw	2
 19963  15F1  0086               	movwf	6
 19964  15F2  3001               	movlw	1	; select bank2/3
 19965  15F3  0087               	movwf	7
 19966  15F4  0140               	movlb	0	; select bank0
 19967  15F5  0822               	movf	??_I2C1_MasterTRBInsert,w
 19968  15F6  0081               	movwf	1
 19969                           
 19970                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 19971  15F7  3003               	movlw	3
 19972  15F8  00A2               	movwf	??_I2C1_MasterTRBInsert
 19973  15F9  0822               	movf	??_I2C1_MasterTRBInsert,w
 19974  15FA  0141               	movlb	1	; select bank1
 19975  15FB  07A0               	addwf	_i2c1_object^(0+128),f
 19976                           
 19977                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 19978  15FC  0820               	movf	_i2c1_object^(0+128),w
 19979  15FD  3A67               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 19980  15FE  1D03               	skipz
 19981  15FF  2E06               	goto	l6887
 19982                           
 19983                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 19984  1600  3064               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 19985  1601  0140               	movlb	0	; select bank0
 19986  1602  00A2               	movwf	??_I2C1_MasterTRBInsert
 19987  1603  0822               	movf	??_I2C1_MasterTRBInsert,w
 19988  1604  0141               	movlb	1	; select bank1
 19989  1605  00A0               	movwf	_i2c1_object^(0+128)
 19990  1606                     l6887:	
 19991                           
 19992                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 19993  1606  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 19994                           
 19995                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 19996  1607  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 19997  1608  0620               	xorwf	_i2c1_object^(0+128),w
 19998  1609  1D03               	skipz
 19999  160A  2E13               	goto	l6893
 20000                           
 20001                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 20002  160B  1422               	bsf	(_i2c1_object^(0+128)+2),0
 20003  160C  2E13               	goto	l6893
 20004  160D                     l6891:	
 20005                           
 20006                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20007  160D  0140               	movlb	0	; select bank0
 20008  160E  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20009  160F  0086               	movwf	6
 20010  1610  0187               	clrf	7
 20011  1611  0181               	clrf	1
 20012  1612  0A81               	incf	1,f
 20013  1613                     l6893:	
 20014                           
 20015                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 20016  1613  0140               	movlb	0	; select bank0
 20017  1614  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20018  1615  0086               	movwf	6
 20019  1616  0187               	clrf	7
 20020  1617  3002               	movlw	2
 20021  1618  0601               	xorwf	1,w
 20022  1619  1D03               	btfss	3,2
 20023  161A  0008               	return
 20024                           
 20025                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 20026  161B  319E  2666         	fcall	_I2C1_WaitForLastPacketToComplete
 20027                           
 20028                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 20029  161D  014E               	movlb	14	; select bank14
 20030  161E  140F               	bsf	15,0	;volatile
 20031  161F  0008               	return
 20032  1620                     __end_of_I2C1_MasterTRBInsert:	
 20033                           
 20034                           	psect	text68
 20035  1E66                     __ptext68:	
 20036 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 20037 ;; Defined at:
 20038 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 20039 ;; Parameters:    Size  Location     Type
 20040 ;;		None
 20041 ;; Auto vars:     Size  Location     Type
 20042 ;;		None
 20043 ;; Return value:  Size  Location     Type
 20044 ;;                  1    wreg      void 
 20045 ;; Registers used:
 20046 ;;		wreg, status,2, status,0
 20047 ;; Tracked objects:
 20048 ;;		On entry : 0/0
 20049 ;;		On exit  : 0/0
 20050 ;;		Unchanged: 0/0
 20051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20056 ;;Total ram usage:        0 bytes
 20057 ;; Hardware stack levels used:    1
 20058 ;; Hardware stack levels required when called:    4
 20059 ;; This function calls:
 20060 ;;		Nothing
 20061 ;; This function is called by:
 20062 ;;		_I2C1_MasterTRBInsert
 20063 ;; This function uses a non-reentrant model
 20064 ;;
 20065                           
 20066                           
 20067                           ;psect for function _I2C1_WaitForLastPacketToComplete
 20068  1E66                     _I2C1_WaitForLastPacketToComplete:	
 20069  1E66                     l6873:	
 20070                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 20071                           
 20072                           ;incstack = 0
 20073                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 20074                           
 20075                           
 20076                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 20077  1E66  0141               	movlb	1	; select bank1
 20078  1E67  0846               	movf	_i2c1_state^(0+128),w
 20079  1E68  1903               	btfsc	3,2
 20080  1E69  0008               	return
 20081  1E6A  2E66               	goto	l6873
 20082  1E6B                     __end_of_I2C1_WaitForLastPacketToComplete:	
 20083                           
 20084                           	psect	text69
 20085  128E                     __ptext69:	
 20086 ;; *************** function ___lwmod *****************
 20087 ;; Defined at:
 20088 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 20089 ;; Parameters:    Size  Location     Type
 20090 ;;  divisor         2    8[BANK0 ] unsigned int 
 20091 ;;  dividend        2   10[BANK0 ] unsigned int 
 20092 ;; Auto vars:     Size  Location     Type
 20093 ;;  counter         1   13[BANK0 ] unsigned char 
 20094 ;; Return value:  Size  Location     Type
 20095 ;;                  2    8[BANK0 ] unsigned int 
 20096 ;; Registers used:
 20097 ;;		wreg, status,2, status,0
 20098 ;; Tracked objects:
 20099 ;;		On entry : 0/0
 20100 ;;		On exit  : 0/0
 20101 ;;		Unchanged: 0/0
 20102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20103 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20106 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20107 ;;Total ram usage:        6 bytes
 20108 ;; Hardware stack levels used:    1
 20109 ;; Hardware stack levels required when called:    4
 20110 ;; This function calls:
 20111 ;;		Nothing
 20112 ;; This function is called by:
 20113 ;;		_TM1650_fastPrintNum
 20114 ;;		_TM1650_fastPrintNum_3digit
 20115 ;; This function uses a non-reentrant model
 20116 ;;
 20117                           
 20118                           
 20119                           ;psect for function ___lwmod
 20120  128E                     ___lwmod:	
 20121                           
 20122                           ;incstack = 0
 20123                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 20124  128E  0140               	movlb	0	; select bank0
 20125  128F  0828               	movf	___lwmod@divisor,w
 20126  1290  0429               	iorwf	___lwmod@divisor+1,w
 20127  1291  1903               	btfsc	3,2
 20128  1292  2AB6               	goto	l7339
 20129  1293  01AD               	clrf	___lwmod@counter
 20130  1294  0AAD               	incf	___lwmod@counter,f
 20131  1295                     l7329:	
 20132  1295  1BA9               	btfsc	___lwmod@divisor+1,7
 20133  1296  2AA1               	goto	l7331
 20134  1297  3001               	movlw	1
 20135  1298                     u7035:	
 20136  1298  35A8               	lslf	___lwmod@divisor,f
 20137  1299  0DA9               	rlf	___lwmod@divisor+1,f
 20138  129A  0B89               	decfsz	9,f
 20139  129B  2A98               	goto	u7035
 20140  129C  3001               	movlw	1
 20141  129D  00AC               	movwf	??___lwmod
 20142  129E  082C               	movf	??___lwmod,w
 20143  129F  07AD               	addwf	___lwmod@counter,f
 20144  12A0  2A95               	goto	l7329
 20145  12A1                     l7331:	
 20146  12A1  0829               	movf	___lwmod@divisor+1,w
 20147  12A2  022B               	subwf	___lwmod@dividend+1,w
 20148  12A3  1D03               	skipz
 20149  12A4  2AA7               	goto	u7055
 20150  12A5  0828               	movf	___lwmod@divisor,w
 20151  12A6  022A               	subwf	___lwmod@dividend,w
 20152  12A7                     u7055:	
 20153  12A7  1C03               	skipc
 20154  12A8  2AAD               	goto	l7335
 20155  12A9  0828               	movf	___lwmod@divisor,w
 20156  12AA  02AA               	subwf	___lwmod@dividend,f
 20157  12AB  0829               	movf	___lwmod@divisor+1,w
 20158  12AC  3BAB               	subwfb	___lwmod@dividend+1,f
 20159  12AD                     l7335:	
 20160  12AD  3001               	movlw	1
 20161  12AE                     u7065:	
 20162  12AE  36A9               	lsrf	___lwmod@divisor+1,f
 20163  12AF  0CA8               	rrf	___lwmod@divisor,f
 20164  12B0  0B89               	decfsz	9,f
 20165  12B1  2AAE               	goto	u7065
 20166  12B2  3001               	movlw	1
 20167  12B3  02AD               	subwf	___lwmod@counter,f
 20168  12B4  1D03               	btfss	3,2
 20169  12B5  2AA1               	goto	l7331
 20170  12B6                     l7339:	
 20171  12B6  082B               	movf	___lwmod@dividend+1,w
 20172  12B7  00A9               	movwf	?___lwmod+1
 20173  12B8  082A               	movf	___lwmod@dividend,w
 20174  12B9  00A8               	movwf	?___lwmod
 20175  12BA  0008               	return
 20176  12BB                     __end_of___lwmod:	
 20177                           
 20178                           	psect	text70
 20179  1E5C                     __ptext70:	
 20180 ;; *************** function _DMX_getAddress *****************
 20181 ;; Defined at:
 20182 ;;		line 73 in file "dmx.c"
 20183 ;; Parameters:    Size  Location     Type
 20184 ;;		None
 20185 ;; Auto vars:     Size  Location     Type
 20186 ;;		None
 20187 ;; Return value:  Size  Location     Type
 20188 ;;                  1    wreg      unsigned char 
 20189 ;; Registers used:
 20190 ;;		wreg
 20191 ;; Tracked objects:
 20192 ;;		On entry : 0/0
 20193 ;;		On exit  : 0/0
 20194 ;;		Unchanged: 0/0
 20195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20200 ;;Total ram usage:        0 bytes
 20201 ;; Hardware stack levels used:    1
 20202 ;; Hardware stack levels required when called:    4
 20203 ;; This function calls:
 20204 ;;		Nothing
 20205 ;; This function is called by:
 20206 ;;		_CONTROL_DMX
 20207 ;;		_LED_task_DMX
 20208 ;; This function uses a non-reentrant model
 20209 ;;
 20210                           
 20211                           
 20212                           ;psect for function _DMX_getAddress
 20213  1E5C                     _DMX_getAddress:	
 20214                           
 20215                           ;dmx.c: 74:     return address;
 20216                           
 20217                           ;incstack = 0
 20218                           ; Regs used in _DMX_getAddress: [wreg]
 20219  1E5C  0141               	movlb	1	; select bank1
 20220  1E5D  086B               	movf	_address^(0+128),w
 20221  1E5E  0008               	return
 20222  1E5F                     __end_of_DMX_getAddress:	
 20223                           
 20224                           	psect	text71
 20225  1F63                     __ptext71:	
 20226 ;; *************** function _BUTTONS_isHeld *****************
 20227 ;; Defined at:
 20228 ;;		line 106 in file "buttons.c"
 20229 ;; Parameters:    Size  Location     Type
 20230 ;;  button          1    wreg     PTR struct .
 20231 ;;		 -> buttons(32), NULL(0), 
 20232 ;; Auto vars:     Size  Location     Type
 20233 ;;  button          1    0[BANK0 ] PTR struct .
 20234 ;;		 -> buttons(32), NULL(0), 
 20235 ;; Return value:  Size  Location     Type
 20236 ;;                  1    wreg      _Bool 
 20237 ;; Registers used:
 20238 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20239 ;; Tracked objects:
 20240 ;;		On entry : 0/0
 20241 ;;		On exit  : 0/0
 20242 ;;		Unchanged: 0/0
 20243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20247 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20248 ;;Total ram usage:        1 bytes
 20249 ;; Hardware stack levels used:    1
 20250 ;; Hardware stack levels required when called:    4
 20251 ;; This function calls:
 20252 ;;		Nothing
 20253 ;; This function is called by:
 20254 ;;		_CONTROL_DMX
 20255 ;;		_CONTROL_MANUAL
 20256 ;; This function uses a non-reentrant model
 20257 ;;
 20258                           
 20259                           
 20260                           ;psect for function _BUTTONS_isHeld
 20261  1F63                     _BUTTONS_isHeld:	
 20262                           
 20263                           ;incstack = 0
 20264                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 20265                           ;BUTTONS_isHeld@button stored from wreg
 20266  1F63  0140               	movlb	0	; select bank0
 20267  1F64  00A0               	movwf	BUTTONS_isHeld@button
 20268                           
 20269                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 20270  1F65  0820               	movf	BUTTONS_isHeld@button,w
 20271  1F66  3E07               	addlw	7
 20272  1F67  0086               	movwf	6
 20273  1F68  3002               	movlw	2	; select bank4/5
 20274  1F69  0087               	movwf	7
 20275  1F6A  3003               	movlw	3
 20276  1F6B  0601               	xorwf	1,w
 20277  1F6C  1D03               	btfss	3,2
 20278  1F6D  2F70               	goto	l7655
 20279                           
 20280                           ;buttons.c: 108:         return 1;
 20281  1F6E  3001               	movlw	1
 20282  1F6F  0008               	return
 20283  1F70                     l7655:	
 20284                           
 20285                           ;buttons.c: 111:     return 0;
 20286  1F70  3000               	movlw	0
 20287  1F71  0008               	return
 20288  1F72                     __end_of_BUTTONS_isHeld:	
 20289                           
 20290                           	psect	text72
 20291  1FD8                     __ptext72:	
 20292 ;; *************** function _BUTTONS_isClicked *****************
 20293 ;; Defined at:
 20294 ;;		line 97 in file "buttons.c"
 20295 ;; Parameters:    Size  Location     Type
 20296 ;;  button          1    wreg     PTR struct .
 20297 ;;		 -> buttons(32), NULL(0), 
 20298 ;; Auto vars:     Size  Location     Type
 20299 ;;  button          1    0[BANK0 ] PTR struct .
 20300 ;;		 -> buttons(32), NULL(0), 
 20301 ;; Return value:  Size  Location     Type
 20302 ;;                  1    wreg      _Bool 
 20303 ;; Registers used:
 20304 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20305 ;; Tracked objects:
 20306 ;;		On entry : 0/0
 20307 ;;		On exit  : 0/0
 20308 ;;		Unchanged: 0/0
 20309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20313 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20314 ;;Total ram usage:        1 bytes
 20315 ;; Hardware stack levels used:    1
 20316 ;; Hardware stack levels required when called:    4
 20317 ;; This function calls:
 20318 ;;		Nothing
 20319 ;; This function is called by:
 20320 ;;		_CONTROLLER_task
 20321 ;; This function uses a non-reentrant model
 20322 ;;
 20323                           
 20324                           
 20325                           ;psect for function _BUTTONS_isClicked
 20326  1FD8                     _BUTTONS_isClicked:	
 20327                           
 20328                           ;incstack = 0
 20329                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 20330                           ;BUTTONS_isClicked@button stored from wreg
 20331  1FD8  0140               	movlb	0	; select bank0
 20332  1FD9  00A0               	movwf	BUTTONS_isClicked@button
 20333                           
 20334                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 20335  1FDA  0820               	movf	BUTTONS_isClicked@button,w
 20336  1FDB  3E07               	addlw	7
 20337  1FDC  0086               	movwf	6
 20338  1FDD  3002               	movlw	2	; select bank4/5
 20339  1FDE  0087               	movwf	7
 20340  1FDF  0301               	decf	1,w
 20341  1FE0  1D03               	btfss	3,2
 20342  1FE1  2FEA               	goto	l7925
 20343                           
 20344                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 20345  1FE2  0820               	movf	BUTTONS_isClicked@button,w
 20346  1FE3  3E07               	addlw	7
 20347  1FE4  0086               	movwf	6
 20348  1FE5  3002               	movlw	2	; select bank4/5
 20349  1FE6  0087               	movwf	7
 20350  1FE7  0181               	clrf	1
 20351                           
 20352                           ;buttons.c: 100:         return 1;
 20353  1FE8  3001               	movlw	1
 20354  1FE9  0008               	return
 20355  1FEA                     l7925:	
 20356                           
 20357                           ;buttons.c: 103:     return 0;
 20358  1FEA  3000               	movlw	0
 20359  1FEB  0008               	return
 20360  1FEC                     __end_of_BUTTONS_isClicked:	
 20361                           
 20362                           	psect	text73
 20363  02D1                     __ptext73:	
 20364 ;; *************** function _CONTROLLER_init *****************
 20365 ;; Defined at:
 20366 ;;		line 79 in file "controller.c"
 20367 ;; Parameters:    Size  Location     Type
 20368 ;;		None
 20369 ;; Auto vars:     Size  Location     Type
 20370 ;;		None
 20371 ;; Return value:  Size  Location     Type
 20372 ;;                  1    wreg      void 
 20373 ;; Registers used:
 20374 ;;		wreg, status,2, status,0
 20375 ;; Tracked objects:
 20376 ;;		On entry : 0/0
 20377 ;;		On exit  : 0/0
 20378 ;;		Unchanged: 0/0
 20379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20382 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20383 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20384 ;;Total ram usage:        1 bytes
 20385 ;; Hardware stack levels used:    1
 20386 ;; Hardware stack levels required when called:    4
 20387 ;; This function calls:
 20388 ;;		Nothing
 20389 ;; This function is called by:
 20390 ;;		_main
 20391 ;; This function uses a non-reentrant model
 20392 ;;
 20393                           
 20394                           
 20395                           ;psect for function _CONTROLLER_init
 20396  02D1                     _CONTROLLER_init:	
 20397                           
 20398                           ;controller.c: 82:     dmx.nextItem = &beat;
 20399                           
 20400                           ;incstack = 0
 20401                           ; Regs used in _CONTROLLER_init: [wreg+status,2+status,0]
 20402  02D1  3050               	movlw	low _beat
 20403  02D2  0142               	movlb	2	; select bank2
 20404  02D3  00DA               	movwf	_dmx^(0+256)
 20405  02D4  3001               	movlw	high _beat
 20406  02D5  00DB               	movwf	(_dmx+1)^(0+256)
 20407                           
 20408                           ;controller.c: 83:     dmx.prevItem = &manual;
 20409  02D6  30DC               	movlw	low _manual
 20410  02D7  00DC               	movwf	(low ((_dmx| (0+256)+2)))^0
 20411  02D8  3001               	movlw	high _manual
 20412  02D9  00DD               	movwf	((low ((_dmx| (0+256)+2))+1))^0
 20413                           
 20414                           ;controller.c: 84:     dmx.config = &dmx_task;
 20415  02DA  30D2               	movlw	low _dmx_task
 20416  02DB  00DE               	movwf	(low ((_dmx| (0+256)+4)))^0
 20417  02DC  3001               	movlw	high _dmx_task
 20418  02DD  00DF               	movwf	((low ((_dmx| (0+256)+4))+1))^0
 20419                           
 20420                           ;controller.c: 86:     dmx.name = DMX;
 20421  02DE  01E1               	clrf	(_dmx^(0+256)+7)
 20422                           
 20423                           ;controller.c: 87:     dmx.parent = &dmx;
 20424  02DF  305A               	movlw	(low (_dmx| (0+256)))& (0+255)
 20425  02E0  0140               	movlb	0	; select bank0
 20426  02E1  00A0               	movwf	??_CONTROLLER_init
 20427  02E2  0820               	movf	??_CONTROLLER_init,w
 20428  02E3  0142               	movlb	2	; select bank2
 20429  02E4  00E0               	movwf	(low ((_dmx| (0+256)+6)))^0
 20430                           
 20431                           ;controller.c: 89:     beat.nextItem = &animation;
 20432  02E5  3046               	movlw	low _animation
 20433  02E6  00D0               	movwf	_beat^(0+256)
 20434  02E7  3001               	movlw	high _animation
 20435  02E8  00D1               	movwf	(_beat+1)^(0+256)
 20436                           
 20437                           ;controller.c: 90:     beat.prevItem = &dmx;
 20438  02E9  305A               	movlw	low _dmx
 20439  02EA  00D2               	movwf	(low ((_beat| (0+256)+2)))^0
 20440  02EB  3001               	movlw	high _dmx
 20441  02EC  00D3               	movwf	((low ((_beat| (0+256)+2))+1))^0
 20442                           
 20443                           ;controller.c: 91:     beat.config = &beatStrobe;
 20444  02ED  30C8               	movlw	low _beatStrobe
 20445  02EE  00D4               	movwf	(low ((_beat| (0+256)+4)))^0
 20446  02EF  3001               	movlw	high _beatStrobe
 20447  02F0  00D5               	movwf	((low ((_beat| (0+256)+4))+1))^0
 20448                           
 20449                           ;controller.c: 93:     beat.name = BEAT;
 20450  02F1  01D7               	clrf	(_beat^(0+256)+7)
 20451  02F2  0AD7               	incf	(_beat^(0+256)+7),f
 20452                           
 20453                           ;controller.c: 94:     beat.parent = &beat;
 20454  02F3  3050               	movlw	(low (_beat| (0+256)))& (0+255)
 20455  02F4  0140               	movlb	0	; select bank0
 20456  02F5  00A0               	movwf	??_CONTROLLER_init
 20457  02F6  0820               	movf	??_CONTROLLER_init,w
 20458  02F7  0142               	movlb	2	; select bank2
 20459  02F8  00D6               	movwf	(low ((_beat| (0+256)+6)))^0
 20460                           
 20461                           ;controller.c: 96:     animation.nextItem = &manual;
 20462  02F9  30DC               	movlw	low _manual
 20463  02FA  00C6               	movwf	_animation^(0+256)
 20464  02FB  3001               	movlw	high _manual
 20465  02FC  00C7               	movwf	(_animation+1)^(0+256)
 20466                           
 20467                           ;controller.c: 97:     animation.prevItem = &beat;
 20468  02FD  3050               	movlw	low _beat
 20469  02FE  00C8               	movwf	(low ((_animation| (0+256)+2)))^0
 20470  02FF  3001               	movlw	high _beat
 20471  0300  00C9               	movwf	((low ((_animation| (0+256)+2))+1))^0
 20472                           
 20473                           ;controller.c: 98:     animation.config = &animationBrightnessCtrl;
 20474  0301  30AA               	movlw	low _animationBrightnessCtrl
 20475  0302  00CA               	movwf	(low ((_animation| (0+256)+4)))^0
 20476  0303  3001               	movlw	high _animationBrightnessCtrl
 20477  0304  00CB               	movwf	((low ((_animation| (0+256)+4))+1))^0
 20478                           
 20479                           ;controller.c: 100:     animation.name = ANIMATION;
 20480  0305  3002               	movlw	2
 20481  0306  0140               	movlb	0	; select bank0
 20482  0307  00A0               	movwf	??_CONTROLLER_init
 20483  0308  0820               	movf	??_CONTROLLER_init,w
 20484  0309  0142               	movlb	2	; select bank2
 20485  030A  00CD               	movwf	(_animation^(0+256)+7)
 20486                           
 20487                           ;controller.c: 101:     animation.parent = &animation;
 20488  030B  3046               	movlw	(low (_animation| (0+256)))& (0+255)
 20489  030C  0140               	movlb	0	; select bank0
 20490  030D  00A0               	movwf	??_CONTROLLER_init
 20491  030E  0820               	movf	??_CONTROLLER_init,w
 20492  030F  0142               	movlb	2	; select bank2
 20493  0310  00CC               	movwf	(low ((_animation| (0+256)+6)))^0
 20494                           
 20495                           ;controller.c: 103:     manual.nextItem = &dmx;
 20496  0311  305A               	movlw	low _dmx
 20497  0312  0143               	movlb	3	; select bank3
 20498  0313  00DC               	movwf	_manual^(0+384)
 20499  0314  3001               	movlw	high _dmx
 20500  0315  00DD               	movwf	(_manual+1)^(0+384)
 20501                           
 20502                           ;controller.c: 104:     manual.prevItem = &animation;
 20503  0316  3046               	movlw	low _animation
 20504  0317  00DE               	movwf	(low ((_manual| (0+256)+2)))^(0+128)
 20505  0318  3001               	movlw	high _animation
 20506  0319  00DF               	movwf	((low ((_manual| (0+256)+2))+1))^(0+128)
 20507                           
 20508                           ;controller.c: 105:     manual.config = &manualRed;
 20509  031A  30A0               	movlw	low _manualRed
 20510  031B  00E0               	movwf	(low ((_manual| (0+256)+4)))^(0+128)
 20511  031C  3001               	movlw	high _manualRed
 20512  031D  00E1               	movwf	((low ((_manual| (0+256)+4))+1))^(0+128)
 20513                           
 20514                           ;controller.c: 107:     manual.name = MANUAL;
 20515  031E  3003               	movlw	3
 20516  031F  0140               	movlb	0	; select bank0
 20517  0320  00A0               	movwf	??_CONTROLLER_init
 20518  0321  0820               	movf	??_CONTROLLER_init,w
 20519  0322  0143               	movlb	3	; select bank3
 20520  0323  00E3               	movwf	(_manual^(0+384)+7)
 20521                           
 20522                           ;controller.c: 108:     manual.parent = &manual;
 20523  0324  30DC               	movlw	(low (_manual| (0+256)))& (0+255)
 20524  0325  0140               	movlb	0	; select bank0
 20525  0326  00A0               	movwf	??_CONTROLLER_init
 20526  0327  0820               	movf	??_CONTROLLER_init,w
 20527  0328  0143               	movlb	3	; select bank3
 20528  0329  00E2               	movwf	(low ((_manual| (0+256)+6)))^(0+128)
 20529                           
 20530                           ;controller.c: 115:     dmx_task.nextItem = ((void*)0);
 20531  032A  01D2               	clrf	_dmx_task^(0+384)
 20532  032B  01D3               	clrf	(_dmx_task+1)^(0+384)
 20533                           
 20534                           ;controller.c: 116:     dmx_task.prevItem = ((void*)0);
 20535  032C  01D4               	clrf	(low ((_dmx_task| (0+256)+2)))^(0+128)
 20536  032D  01D5               	clrf	((low ((_dmx_task| (0+256)+2))+1))^(0+128)
 20537                           
 20538                           ;controller.c: 117:     dmx_task.config = ((void*)0);
 20539  032E  01D6               	clrf	(low ((_dmx_task| (0+256)+4)))^(0+128)
 20540  032F  01D7               	clrf	((low ((_dmx_task| (0+256)+4))+1))^(0+128)
 20541                           
 20542                           ;controller.c: 118:     dmx_task.task = CONTROL_DMX;
 20543  0330  30B3               	movlw	low _CONTROL_DMX
 20544  0331  00DA               	movwf	(low ((_dmx_task| (0+256)+8)))^(0+128)
 20545  0332  3009               	movlw	high _CONTROL_DMX
 20546  0333  00DB               	movwf	((low ((_dmx_task| (0+256)+8)))^(0+128)+1)
 20547                           
 20548                           ;controller.c: 119:     dmx_task.name = DMX_TASK;
 20549  0334  3004               	movlw	4
 20550  0335  0140               	movlb	0	; select bank0
 20551  0336  00A0               	movwf	??_CONTROLLER_init
 20552  0337  0820               	movf	??_CONTROLLER_init,w
 20553  0338  0143               	movlb	3	; select bank3
 20554  0339  00D9               	movwf	(_dmx_task^(0+384)+7)
 20555                           
 20556                           ;controller.c: 120:     dmx_task.parent = &dmx;
 20557  033A  305A               	movlw	(low (_dmx| (0+256)))& (0+255)
 20558  033B  0140               	movlb	0	; select bank0
 20559  033C  00A0               	movwf	??_CONTROLLER_init
 20560  033D  0820               	movf	??_CONTROLLER_init,w
 20561  033E  0143               	movlb	3	; select bank3
 20562  033F  00D8               	movwf	(low ((_dmx_task| (0+256)+6)))^(0+128)
 20563                           
 20564                           ;controller.c: 123:     beatStrobe.nextItem = &beatFade;
 20565  0340  30BE               	movlw	low _beatFade
 20566  0341  00C8               	movwf	_beatStrobe^(0+384)
 20567  0342  3001               	movlw	high _beatFade
 20568  0343  00C9               	movwf	(_beatStrobe+1)^(0+384)
 20569                           
 20570                           ;controller.c: 124:     beatStrobe.prevItem = &beatMixed;
 20571  0344  3050               	movlw	low _beatMixed
 20572  0345  00CA               	movwf	(low ((_beatStrobe| (0+256)+2)))^(0+128)
 20573  0346  3002               	movlw	high _beatMixed
 20574  0347  00CB               	movwf	((low ((_beatStrobe| (0+256)+2))+1))^(0+128)
 20575                           
 20576                           ;controller.c: 125:     beatStrobe.config = &beatStrobeTask;
 20577  0348  3046               	movlw	low _beatStrobeTask
 20578  0349  00CC               	movwf	(low ((_beatStrobe| (0+256)+4)))^(0+128)
 20579  034A  3002               	movlw	high _beatStrobeTask
 20580  034B  00CD               	movwf	((low ((_beatStrobe| (0+256)+4))+1))^(0+128)
 20581                           
 20582                           ;controller.c: 127:     beatStrobe.name = B_STROBE;
 20583  034C  3005               	movlw	5
 20584  034D  0140               	movlb	0	; select bank0
 20585  034E  00A0               	movwf	??_CONTROLLER_init
 20586  034F  0820               	movf	??_CONTROLLER_init,w
 20587  0350  0143               	movlb	3	; select bank3
 20588  0351  00CF               	movwf	(_beatStrobe^(0+384)+7)
 20589                           
 20590                           ;controller.c: 128:     beatStrobe.parent = &beat;
 20591  0352  3050               	movlw	(low (_beat| (0+256)))& (0+255)
 20592  0353  0140               	movlb	0	; select bank0
 20593  0354  00A0               	movwf	??_CONTROLLER_init
 20594  0355  0820               	movf	??_CONTROLLER_init,w
 20595  0356  0143               	movlb	3	; select bank3
 20596  0357  00CE               	movwf	(low ((_beatStrobe| (0+256)+6)))^(0+128)
 20597                           
 20598                           ;controller.c: 130:     beatFade.nextItem = &beatCont;
 20599  0358  305A               	movlw	low _beatCont
 20600  0359  00BE               	movwf	_beatFade^(0+384)
 20601  035A  3002               	movlw	high _beatCont
 20602  035B  00BF               	movwf	(_beatFade+1)^(0+384)
 20603                           
 20604                           ;controller.c: 131:     beatFade.prevItem = &beatStrobe;
 20605  035C  30C8               	movlw	low _beatStrobe
 20606  035D  00C0               	movwf	(low ((_beatFade| (0+256)+2)))^(0+128)
 20607  035E  3001               	movlw	high _beatStrobe
 20608  035F  00C1               	movwf	((low ((_beatFade| (0+256)+2))+1))^(0+128)
 20609                           
 20610                           ;controller.c: 132:     beatFade.config = &beatFadeTask;
 20611  0360  30D4               	movlw	low _beatFadeTask
 20612  0361  00C2               	movwf	(low ((_beatFade| (0+256)+4)))^(0+128)
 20613  0362  3002               	movlw	high _beatFadeTask
 20614  0363  00C3               	movwf	((low ((_beatFade| (0+256)+4))+1))^(0+128)
 20615                           
 20616                           ;controller.c: 134:     beatFade.name = B_FADE;
 20617  0364  3006               	movlw	6
 20618  0365  0140               	movlb	0	; select bank0
 20619  0366  00A0               	movwf	??_CONTROLLER_init
 20620  0367  0820               	movf	??_CONTROLLER_init,w
 20621  0368  0143               	movlb	3	; select bank3
 20622  0369  00C5               	movwf	(_beatFade^(0+384)+7)
 20623                           
 20624                           ;controller.c: 135:     beatFade.parent = &beat;
 20625  036A  3050               	movlw	(low (_beat| (0+256)))& (0+255)
 20626  036B  0140               	movlb	0	; select bank0
 20627  036C  00A0               	movwf	??_CONTROLLER_init
 20628  036D  0820               	movf	??_CONTROLLER_init,w
 20629  036E  0143               	movlb	3	; select bank3
 20630  036F  00C4               	movwf	(low ((_beatFade| (0+256)+6)))^(0+128)
 20631                           
 20632                           ;controller.c: 137:     beatCont.nextItem = &beatMixed;
 20633  0370  3050               	movlw	low _beatMixed
 20634  0371  0144               	movlb	4	; select bank4
 20635  0372  00DA               	movwf	_beatCont^(0+512)
 20636  0373  3002               	movlw	high _beatMixed
 20637  0374  00DB               	movwf	(_beatCont+1)^(0+512)
 20638                           
 20639                           ;controller.c: 138:     beatCont.prevItem = &beatFade;
 20640  0375  30BE               	movlw	low _beatFade
 20641  0376  00DC               	movwf	(low ((_beatCont| (0+512)+2)))^0
 20642  0377  3001               	movlw	high _beatFade
 20643  0378  00DD               	movwf	((low ((_beatCont| (0+512)+2))+1))^0
 20644                           
 20645                           ;controller.c: 139:     beatCont.config = &beatContTask;
 20646  0379  30CA               	movlw	low _beatContTask
 20647  037A  00DE               	movwf	(low ((_beatCont| (0+512)+4)))^0
 20648  037B  3002               	movlw	high _beatContTask
 20649  037C  00DF               	movwf	((low ((_beatCont| (0+512)+4))+1))^0
 20650                           
 20651                           ;controller.c: 141:     beatCont.name = B_CONT;
 20652  037D  3007               	movlw	7
 20653  037E  0140               	movlb	0	; select bank0
 20654  037F  00A0               	movwf	??_CONTROLLER_init
 20655  0380  0820               	movf	??_CONTROLLER_init,w
 20656  0381  0144               	movlb	4	; select bank4
 20657  0382  00E1               	movwf	(_beatCont^(0+512)+7)
 20658                           
 20659                           ;controller.c: 142:     beatCont.parent = &beat;
 20660  0383  3050               	movlw	(low (_beat| (0+256)))& (0+255)
 20661  0384  0140               	movlb	0	; select bank0
 20662  0385  00A0               	movwf	??_CONTROLLER_init
 20663  0386  0820               	movf	??_CONTROLLER_init,w
 20664  0387  0144               	movlb	4	; select bank4
 20665  0388  00E0               	movwf	(low ((_beatCont| (0+512)+6)))^0
 20666                           
 20667                           ;controller.c: 144:     beatMixed.nextItem = &beatStrobe;
 20668  0389  30C8               	movlw	low _beatStrobe
 20669  038A  00D0               	movwf	_beatMixed^(0+512)
 20670  038B  3001               	movlw	high _beatStrobe
 20671  038C  00D1               	movwf	(_beatMixed+1)^(0+512)
 20672                           
 20673                           ;controller.c: 145:     beatMixed.prevItem = &beatCont;
 20674  038D  305A               	movlw	low _beatCont
 20675  038E  00D2               	movwf	(low ((_beatMixed| (0+512)+2)))^0
 20676  038F  3002               	movlw	high _beatCont
 20677  0390  00D3               	movwf	((low ((_beatMixed| (0+512)+2))+1))^0
 20678                           
 20679                           ;controller.c: 146:     beatMixed.config = &beatMixedTask;
 20680  0391  30C0               	movlw	low _beatMixedTask
 20681  0392  00D4               	movwf	(low ((_beatMixed| (0+512)+4)))^0
 20682  0393  3002               	movlw	high _beatMixedTask
 20683  0394  00D5               	movwf	((low ((_beatMixed| (0+512)+4))+1))^0
 20684                           
 20685                           ;controller.c: 148:     beatMixed.name = B_MIXED;
 20686  0395  3008               	movlw	8
 20687  0396  0140               	movlb	0	; select bank0
 20688  0397  00A0               	movwf	??_CONTROLLER_init
 20689  0398  0820               	movf	??_CONTROLLER_init,w
 20690  0399  0144               	movlb	4	; select bank4
 20691  039A  00D7               	movwf	(_beatMixed^(0+512)+7)
 20692                           
 20693                           ;controller.c: 149:     beatMixed.parent = &beat;
 20694  039B  3050               	movlw	(low (_beat| (0+256)))& (0+255)
 20695  039C  0140               	movlb	0	; select bank0
 20696  039D  00A0               	movwf	??_CONTROLLER_init
 20697  039E  0820               	movf	??_CONTROLLER_init,w
 20698  039F  0144               	movlb	4	; select bank4
 20699  03A0  00D6               	movwf	(low ((_beatMixed| (0+512)+6)))^0
 20700                           
 20701                           ;controller.c: 153:     animationType.nextItem = &animationBrightnessCtrl;
 20702  03A1  30AA               	movlw	low _animationBrightnessCtrl
 20703  03A2  0143               	movlb	3	; select bank3
 20704  03A3  00B4               	movwf	_animationType^(0+384)
 20705  03A4  3001               	movlw	high _animationBrightnessCtrl
 20706  03A5  00B5               	movwf	(_animationType+1)^(0+384)
 20707                           
 20708                           ;controller.c: 154:     animationType.prevItem = &animationBrightnessCtrl;
 20709  03A6  30AA               	movlw	low _animationBrightnessCtrl
 20710  03A7  00B6               	movwf	(low ((_animationType| (0+256)+2)))^(0+128)
 20711  03A8  3001               	movlw	high _animationBrightnessCtrl
 20712  03A9  00B7               	movwf	((low ((_animationType| (0+256)+2))+1))^(0+128)
 20713                           
 20714                           ;controller.c: 155:     animationType.config = ((void*)0);
 20715  03AA  01B8               	clrf	(low ((_animationType| (0+256)+4)))^(0+128)
 20716  03AB  01B9               	clrf	((low ((_animationType| (0+256)+4))+1))^(0+128)
 20717                           
 20718                           ;controller.c: 156:     animationType.task = LED_task_ANIMATION;
 20719  03AC  3053               	movlw	low _LED_task_ANIMATION
 20720  03AD  00BC               	movwf	(low ((_animationType| (0+256)+8)))^(0+128)
 20721  03AE  301E               	movlw	high _LED_task_ANIMATION
 20722  03AF  00BD               	movwf	((low ((_animationType| (0+256)+8)))^(0+128)+1)
 20723                           
 20724                           ;controller.c: 157:     animationType.name = A_SELECTION;
 20725  03B0  3012               	movlw	18
 20726  03B1  0140               	movlb	0	; select bank0
 20727  03B2  00A0               	movwf	??_CONTROLLER_init
 20728  03B3  0820               	movf	??_CONTROLLER_init,w
 20729  03B4  0143               	movlb	3	; select bank3
 20730  03B5  00BB               	movwf	(_animationType^(0+384)+7)
 20731                           
 20732                           ;controller.c: 158:     animationType.parent = &animation;
 20733  03B6  3046               	movlw	(low (_animation| (0+256)))& (0+255)
 20734  03B7  0140               	movlb	0	; select bank0
 20735  03B8  00A0               	movwf	??_CONTROLLER_init
 20736  03B9  0820               	movf	??_CONTROLLER_init,w
 20737  03BA  0143               	movlb	3	; select bank3
 20738  03BB  00BA               	movwf	(low ((_animationType| (0+256)+6)))^(0+128)
 20739                           
 20740                           ;controller.c: 160:     animationBrightnessCtrl.nextItem = &animationType;
 20741  03BC  30B4               	movlw	low _animationType
 20742  03BD  00AA               	movwf	_animationBrightnessCtrl^(0+384)
 20743  03BE  3001               	movlw	high _animationType
 20744  03BF  00AB               	movwf	(_animationBrightnessCtrl+1)^(0+384)
 20745                           
 20746                           ;controller.c: 161:     animationBrightnessCtrl.prevItem = &animationType;
 20747  03C0  30B4               	movlw	low _animationType
 20748  03C1  00AC               	movwf	(low ((_animationBrightnessCtrl| (0+256)+2)))^(0+128)
 20749  03C2  3001               	movlw	high _animationType
 20750  03C3  00AD               	movwf	((low ((_animationBrightnessCtrl| (0+256)+2))+1))^(0+128)
 20751                           
 20752                           ;controller.c: 162:     animationBrightnessCtrl.config = ((void*)0);
 20753  03C4  01AE               	clrf	(low ((_animationBrightnessCtrl| (0+256)+4)))^(0+128)
 20754  03C5  01AF               	clrf	((low ((_animationBrightnessCtrl| (0+256)+4))+1))^(0+128)
 20755                           
 20756                           ;controller.c: 163:     animationBrightnessCtrl.task = LED_task_ANIMATION;
 20757  03C6  3053               	movlw	low _LED_task_ANIMATION
 20758  03C7  00B2               	movwf	(low ((_animationBrightnessCtrl| (0+256)+8)))^(0+128)
 20759  03C8  301E               	movlw	high _LED_task_ANIMATION
 20760  03C9  00B3               	movwf	((low ((_animationBrightnessCtrl| (0+256)+8)))^(0+128)+1)
 20761                           
 20762                           ;controller.c: 164:     animationBrightnessCtrl.name = A_BRIGHTNESS;
 20763  03CA  3011               	movlw	17
 20764  03CB  0140               	movlb	0	; select bank0
 20765  03CC  00A0               	movwf	??_CONTROLLER_init
 20766  03CD  0820               	movf	??_CONTROLLER_init,w
 20767  03CE  0143               	movlb	3	; select bank3
 20768  03CF  00B1               	movwf	(_animationBrightnessCtrl^(0+384)+7)
 20769                           
 20770                           ;controller.c: 165:     animationBrightnessCtrl.parent = &animation;
 20771  03D0  3046               	movlw	(low (_animation| (0+256)))& (0+255)
 20772  03D1  0140               	movlb	0	; select bank0
 20773  03D2  00A0               	movwf	??_CONTROLLER_init
 20774  03D3  0820               	movf	??_CONTROLLER_init,w
 20775  03D4  0143               	movlb	3	; select bank3
 20776  03D5  00B0               	movwf	(low ((_animationBrightnessCtrl| (0+256)+6)))^(0+128)
 20777                           
 20778                           ;controller.c: 169:     manualRed.nextItem = &manualGreen;
 20779  03D6  303C               	movlw	low _manualGreen
 20780  03D7  00A0               	movwf	_manualRed^(0+384)
 20781  03D8  3002               	movlw	high _manualGreen
 20782  03D9  00A1               	movwf	(_manualRed+1)^(0+384)
 20783                           
 20784                           ;controller.c: 170:     manualRed.prevItem = &manualWhite;
 20785  03DA  3028               	movlw	low _manualWhite
 20786  03DB  00A2               	movwf	(low ((_manualRed| (0+256)+2)))^(0+128)
 20787  03DC  3002               	movlw	high _manualWhite
 20788  03DD  00A3               	movwf	((low ((_manualRed| (0+256)+2))+1))^(0+128)
 20789                           
 20790                           ;controller.c: 171:     manualRed.config = ((void*)0);
 20791  03DE  01A4               	clrf	(low ((_manualRed| (0+256)+4)))^(0+128)
 20792  03DF  01A5               	clrf	((low ((_manualRed| (0+256)+4))+1))^(0+128)
 20793                           
 20794                           ;controller.c: 172:     manualRed.task = LED_task_MANUAL;
 20795  03E0  3017               	movlw	low _LED_task_MANUAL
 20796  03E1  00A8               	movwf	(low ((_manualRed| (0+256)+8)))^(0+128)
 20797  03E2  301F               	movlw	high _LED_task_MANUAL
 20798  03E3  00A9               	movwf	((low ((_manualRed| (0+256)+8)))^(0+128)+1)
 20799                           
 20800                           ;controller.c: 173:     manualRed.name = MANUAL_RED;
 20801  03E4  300D               	movlw	13
 20802  03E5  0140               	movlb	0	; select bank0
 20803  03E6  00A0               	movwf	??_CONTROLLER_init
 20804  03E7  0820               	movf	??_CONTROLLER_init,w
 20805  03E8  0143               	movlb	3	; select bank3
 20806  03E9  00A7               	movwf	(_manualRed^(0+384)+7)
 20807                           
 20808                           ;controller.c: 175:     manualGreen.nextItem = &manualBlue;
 20809  03EA  3032               	movlw	low _manualBlue
 20810  03EB  0144               	movlb	4	; select bank4
 20811  03EC  00BC               	movwf	_manualGreen^(0+512)
 20812  03ED  3002               	movlw	high _manualBlue
 20813  03EE  00BD               	movwf	(_manualGreen+1)^(0+512)
 20814                           
 20815                           ;controller.c: 176:     manualGreen.prevItem = &manualRed;
 20816  03EF  30A0               	movlw	low _manualRed
 20817  03F0  00BE               	movwf	(low ((_manualGreen| (0+512)+2)))^0
 20818  03F1  3001               	movlw	high _manualRed
 20819  03F2  00BF               	movwf	((low ((_manualGreen| (0+512)+2))+1))^0
 20820                           
 20821                           ;controller.c: 177:     manualGreen.config = ((void*)0);
 20822  03F3  01C0               	clrf	(low ((_manualGreen| (0+512)+4)))^0
 20823  03F4  01C1               	clrf	((low ((_manualGreen| (0+512)+4))+1))^0
 20824                           
 20825                           ;controller.c: 178:     manualGreen.task = LED_task_MANUAL;
 20826  03F5  3017               	movlw	low _LED_task_MANUAL
 20827  03F6  00C4               	movwf	(low ((_manualGreen| (0+512)+8)))^0
 20828  03F7  301F               	movlw	high _LED_task_MANUAL
 20829  03F8  00C5               	movwf	((low ((_manualGreen| (0+512)+8)))^0+1)
 20830                           
 20831                           ;controller.c: 179:     manualGreen.name = MANUAL_GREEN;
 20832  03F9  300E               	movlw	14
 20833  03FA  0140               	movlb	0	; select bank0
 20834  03FB  00A0               	movwf	??_CONTROLLER_init
 20835  03FC  0820               	movf	??_CONTROLLER_init,w
 20836  03FD  0144               	movlb	4	; select bank4
 20837  03FE  00C3               	movwf	(_manualGreen^(0+512)+7)
 20838                           
 20839                           ;controller.c: 181:     manualBlue.nextItem = &manualWhite;
 20840  03FF  3028               	movlw	low _manualWhite
 20841  0400  00B2               	movwf	_manualBlue^(0+512)
 20842  0401  3002               	movlw	high _manualWhite
 20843  0402  00B3               	movwf	(_manualBlue+1)^(0+512)
 20844                           
 20845                           ;controller.c: 182:     manualBlue.prevItem = &manualGreen;
 20846  0403  303C               	movlw	low _manualGreen
 20847  0404  00B4               	movwf	(low ((_manualBlue| (0+512)+2)))^0
 20848  0405  3002               	movlw	high _manualGreen
 20849  0406  00B5               	movwf	((low ((_manualBlue| (0+512)+2))+1))^0
 20850                           
 20851                           ;controller.c: 183:     manualBlue.config = ((void*)0);
 20852  0407  01B6               	clrf	(low ((_manualBlue| (0+512)+4)))^0
 20853  0408  01B7               	clrf	((low ((_manualBlue| (0+512)+4))+1))^0
 20854                           
 20855                           ;controller.c: 184:     manualBlue.task = LED_task_MANUAL;
 20856  0409  3017               	movlw	low _LED_task_MANUAL
 20857  040A  00BA               	movwf	(low ((_manualBlue| (0+512)+8)))^0
 20858  040B  301F               	movlw	high _LED_task_MANUAL
 20859  040C  00BB               	movwf	((low ((_manualBlue| (0+512)+8)))^0+1)
 20860                           
 20861                           ;controller.c: 185:     manualBlue.name = MANUAL_BLUE;
 20862  040D  300F               	movlw	15
 20863  040E  0140               	movlb	0	; select bank0
 20864  040F  00A0               	movwf	??_CONTROLLER_init
 20865  0410  0820               	movf	??_CONTROLLER_init,w
 20866  0411  0144               	movlb	4	; select bank4
 20867  0412  00B9               	movwf	(_manualBlue^(0+512)+7)
 20868                           
 20869                           ;controller.c: 187:     manualWhite.nextItem = &manualRed;
 20870  0413  30A0               	movlw	low _manualRed
 20871  0414  00A8               	movwf	_manualWhite^(0+512)
 20872  0415  3001               	movlw	high _manualRed
 20873  0416  00A9               	movwf	(_manualWhite+1)^(0+512)
 20874                           
 20875                           ;controller.c: 188:     manualWhite.prevItem = &manualBlue;
 20876  0417  3032               	movlw	low _manualBlue
 20877  0418  00AA               	movwf	(low ((_manualWhite| (0+512)+2)))^0
 20878  0419  3002               	movlw	high _manualBlue
 20879  041A  00AB               	movwf	((low ((_manualWhite| (0+512)+2))+1))^0
 20880                           
 20881                           ;controller.c: 189:     manualWhite.config = ((void*)0);
 20882  041B  01AC               	clrf	(low ((_manualWhite| (0+512)+4)))^0
 20883  041C  01AD               	clrf	((low ((_manualWhite| (0+512)+4))+1))^0
 20884                           
 20885                           ;controller.c: 190:     manualWhite.task = LED_task_MANUAL;
 20886  041D  3017               	movlw	low _LED_task_MANUAL
 20887  041E  00B0               	movwf	(low ((_manualWhite| (0+512)+8)))^0
 20888  041F  301F               	movlw	high _LED_task_MANUAL
 20889  0420  00B1               	movwf	((low ((_manualWhite| (0+512)+8)))^0+1)
 20890                           
 20891                           ;controller.c: 191:     manualWhite.name = MANUAL_WHITE;
 20892  0421  3010               	movlw	16
 20893  0422  0140               	movlb	0	; select bank0
 20894  0423  00A0               	movwf	??_CONTROLLER_init
 20895  0424  0820               	movf	??_CONTROLLER_init,w
 20896  0425  0144               	movlb	4	; select bank4
 20897  0426  00AF               	movwf	(_manualWhite^(0+512)+7)
 20898                           
 20899                           ;controller.c: 194:     beatStrobeTask.nextItem = ((void*)0);
 20900  0427  01C6               	clrf	_beatStrobeTask^(0+512)
 20901  0428  01C7               	clrf	(_beatStrobeTask+1)^(0+512)
 20902                           
 20903                           ;controller.c: 195:     beatStrobeTask.prevItem = ((void*)0);
 20904  0429  01C8               	clrf	(low ((_beatStrobeTask| (0+512)+2)))^0
 20905  042A  01C9               	clrf	((low ((_beatStrobeTask| (0+512)+2))+1))^0
 20906                           
 20907                           ;controller.c: 196:     beatStrobeTask.config = ((void*)0);
 20908  042B  01CA               	clrf	(low ((_beatStrobeTask| (0+512)+4)))^0
 20909  042C  01CB               	clrf	((low ((_beatStrobeTask| (0+512)+4))+1))^0
 20910                           
 20911                           ;controller.c: 197:     beatStrobeTask.task = LED_task_BEAT_STROBE;
 20912  042D  30D5               	movlw	low _LED_task_BEAT_STROBE
 20913  042E  00CE               	movwf	(low ((_beatStrobeTask| (0+512)+8)))^0
 20914  042F  300C               	movlw	high _LED_task_BEAT_STROBE
 20915  0430  00CF               	movwf	((low ((_beatStrobeTask| (0+512)+8)))^0+1)
 20916                           
 20917                           ;controller.c: 198:     beatStrobeTask.name = B_STROBE_TASK;
 20918  0431  3009               	movlw	9
 20919  0432  0140               	movlb	0	; select bank0
 20920  0433  00A0               	movwf	??_CONTROLLER_init
 20921  0434  0820               	movf	??_CONTROLLER_init,w
 20922  0435  0144               	movlb	4	; select bank4
 20923  0436  00CD               	movwf	(_beatStrobeTask^(0+512)+7)
 20924                           
 20925                           ;controller.c: 200:     beatFadeTask.nextItem = ((void*)0);
 20926  0437  0145               	movlb	5	; select bank5
 20927  0438  01D4               	clrf	_beatFadeTask^(0+640)
 20928  0439  01D5               	clrf	(_beatFadeTask+1)^(0+640)
 20929                           
 20930                           ;controller.c: 201:     beatFadeTask.prevItem = ((void*)0);
 20931  043A  01D6               	clrf	(low ((_beatFadeTask| (0+512)+2)))^(0+128)
 20932  043B  01D7               	clrf	((low ((_beatFadeTask| (0+512)+2))+1))^(0+128)
 20933                           
 20934                           ;controller.c: 202:     beatFadeTask.config = ((void*)0);
 20935  043C  01D8               	clrf	(low ((_beatFadeTask| (0+512)+4)))^(0+128)
 20936  043D  01D9               	clrf	((low ((_beatFadeTask| (0+512)+4))+1))^(0+128)
 20937                           
 20938                           ;controller.c: 203:     beatFadeTask.task = LED_task_BEAT_STROBE;
 20939  043E  30D5               	movlw	low _LED_task_BEAT_STROBE
 20940  043F  00DC               	movwf	(low ((_beatFadeTask| (0+512)+8)))^(0+128)
 20941  0440  300C               	movlw	high _LED_task_BEAT_STROBE
 20942  0441  00DD               	movwf	((low ((_beatFadeTask| (0+512)+8)))^(0+128)+1)
 20943                           
 20944                           ;controller.c: 204:     beatFadeTask.name = B_FADE_TASK;
 20945  0442  300A               	movlw	10
 20946  0443  0140               	movlb	0	; select bank0
 20947  0444  00A0               	movwf	??_CONTROLLER_init
 20948  0445  0820               	movf	??_CONTROLLER_init,w
 20949  0446  0145               	movlb	5	; select bank5
 20950  0447  00DB               	movwf	(_beatFadeTask^(0+640)+7)
 20951                           
 20952                           ;controller.c: 206:     beatContTask.nextItem = ((void*)0);
 20953  0448  01CA               	clrf	_beatContTask^(0+640)
 20954  0449  01CB               	clrf	(_beatContTask+1)^(0+640)
 20955                           
 20956                           ;controller.c: 207:     beatContTask.prevItem = ((void*)0);
 20957  044A  01CC               	clrf	(low ((_beatContTask| (0+512)+2)))^(0+128)
 20958  044B  01CD               	clrf	((low ((_beatContTask| (0+512)+2))+1))^(0+128)
 20959                           
 20960                           ;controller.c: 208:     beatContTask.config = ((void*)0);
 20961  044C  01CE               	clrf	(low ((_beatContTask| (0+512)+4)))^(0+128)
 20962  044D  01CF               	clrf	((low ((_beatContTask| (0+512)+4))+1))^(0+128)
 20963                           
 20964                           ;controller.c: 209:     beatContTask.task = LED_task_BEAT_STROBE;
 20965  044E  30D5               	movlw	low _LED_task_BEAT_STROBE
 20966  044F  00D2               	movwf	(low ((_beatContTask| (0+512)+8)))^(0+128)
 20967  0450  300C               	movlw	high _LED_task_BEAT_STROBE
 20968  0451  00D3               	movwf	((low ((_beatContTask| (0+512)+8)))^(0+128)+1)
 20969                           
 20970                           ;controller.c: 210:     beatContTask.name = B_CONT_TASK;
 20971  0452  300B               	movlw	11
 20972  0453  0140               	movlb	0	; select bank0
 20973  0454  00A0               	movwf	??_CONTROLLER_init
 20974  0455  0820               	movf	??_CONTROLLER_init,w
 20975  0456  0145               	movlb	5	; select bank5
 20976  0457  00D1               	movwf	(_beatContTask^(0+640)+7)
 20977                           
 20978                           ;controller.c: 212:     beatMixedTask.nextItem = ((void*)0);
 20979  0458  01C0               	clrf	_beatMixedTask^(0+640)
 20980  0459  01C1               	clrf	(_beatMixedTask+1)^(0+640)
 20981                           
 20982                           ;controller.c: 213:     beatMixedTask.prevItem = ((void*)0);
 20983  045A  01C2               	clrf	(low ((_beatMixedTask| (0+512)+2)))^(0+128)
 20984  045B  01C3               	clrf	((low ((_beatMixedTask| (0+512)+2))+1))^(0+128)
 20985                           
 20986                           ;controller.c: 214:     beatMixedTask.config = ((void*)0);
 20987  045C  01C4               	clrf	(low ((_beatMixedTask| (0+512)+4)))^(0+128)
 20988  045D  01C5               	clrf	((low ((_beatMixedTask| (0+512)+4))+1))^(0+128)
 20989                           
 20990                           ;controller.c: 215:     beatMixedTask.task = LED_task_BEAT_STROBE;
 20991  045E  30D5               	movlw	low _LED_task_BEAT_STROBE
 20992  045F  00C8               	movwf	(low ((_beatMixedTask| (0+512)+8)))^(0+128)
 20993  0460  300C               	movlw	high _LED_task_BEAT_STROBE
 20994  0461  00C9               	movwf	((low ((_beatMixedTask| (0+512)+8)))^(0+128)+1)
 20995                           
 20996                           ;controller.c: 216:     beatMixedTask.name = B_MIXED_TASK;
 20997  0462  300C               	movlw	12
 20998  0463  0140               	movlb	0	; select bank0
 20999  0464  00A0               	movwf	??_CONTROLLER_init
 21000  0465  0820               	movf	??_CONTROLLER_init,w
 21001  0466  0145               	movlb	5	; select bank5
 21002  0467  00C7               	movwf	(_beatMixedTask^(0+640)+7)
 21003  0468  0008               	return
 21004  0469                     __end_of_CONTROLLER_init:	
 21005                           
 21006                           	psect	text74
 21007  1E70                     __ptext74:	
 21008 ;; *************** function _CLOCK_init *****************
 21009 ;; Defined at:
 21010 ;;		line 8 in file "clock.c"
 21011 ;; Parameters:    Size  Location     Type
 21012 ;;		None
 21013 ;; Auto vars:     Size  Location     Type
 21014 ;;		None
 21015 ;; Return value:  Size  Location     Type
 21016 ;;                  1    wreg      void 
 21017 ;; Registers used:
 21018 ;;		wreg, status,2, status,0, pclath, cstack
 21019 ;; Tracked objects:
 21020 ;;		On entry : 0/0
 21021 ;;		On exit  : 0/0
 21022 ;;		Unchanged: 0/0
 21023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21028 ;;Total ram usage:        0 bytes
 21029 ;; Hardware stack levels used:    1
 21030 ;; Hardware stack levels required when called:    5
 21031 ;; This function calls:
 21032 ;;		_TMR0_SetInterruptHandler
 21033 ;; This function is called by:
 21034 ;;		_main
 21035 ;; This function uses a non-reentrant model
 21036 ;;
 21037                           
 21038                           
 21039                           ;psect for function _CLOCK_init
 21040  1E70                     _CLOCK_init:	
 21041                           
 21042                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 21043                           
 21044                           ;incstack = 0
 21045                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 21046  1E70  3001               	movlw	low _CLOCK_timerCallback
 21047  1E71  0140               	movlb	0	; select bank0
 21048  1E72  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 21049  1E73  3010               	movlw	high _CLOCK_timerCallback
 21050  1E74  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 21051  1E75  319E  26A4         	fcall	_TMR0_SetInterruptHandler
 21052  1E77  0008               	return
 21053  1E78                     __end_of_CLOCK_init:	
 21054                           
 21055                           	psect	text75
 21056  1EA4                     __ptext75:	
 21057 ;; *************** function _TMR0_SetInterruptHandler *****************
 21058 ;; Defined at:
 21059 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 21060 ;; Parameters:    Size  Location     Type
 21061 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 21062 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 21063 ;; Auto vars:     Size  Location     Type
 21064 ;;		None
 21065 ;; Return value:  Size  Location     Type
 21066 ;;                  1    wreg      void 
 21067 ;; Registers used:
 21068 ;;		wreg
 21069 ;; Tracked objects:
 21070 ;;		On entry : 0/0
 21071 ;;		On exit  : 0/0
 21072 ;;		Unchanged: 0/0
 21073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21077 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21078 ;;Total ram usage:        2 bytes
 21079 ;; Hardware stack levels used:    1
 21080 ;; Hardware stack levels required when called:    4
 21081 ;; This function calls:
 21082 ;;		Nothing
 21083 ;; This function is called by:
 21084 ;;		_TMR0_Initialize
 21085 ;;		_CLOCK_init
 21086 ;; This function uses a non-reentrant model
 21087 ;;
 21088                           
 21089                           
 21090                           ;psect for function _TMR0_SetInterruptHandler
 21091  1EA4                     _TMR0_SetInterruptHandler:	
 21092                           
 21093                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 21094                           
 21095                           ;incstack = 0
 21096                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 21097  1EA4  0140               	movlb	0	; select bank0
 21098  1EA5  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 21099  1EA6  0142               	movlb	2	; select bank2
 21100  1EA7  00EF               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 21101  1EA8  0140               	movlb	0	; select bank0
 21102  1EA9  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 21103  1EAA  0142               	movlb	2	; select bank2
 21104  1EAB  00EE               	movwf	_TMR0_InterruptHandler^(0+256)
 21105  1EAC  0008               	return
 21106  1EAD                     __end_of_TMR0_SetInterruptHandler:	
 21107                           
 21108                           	psect	text76
 21109  0DC0                     __ptext76:	
 21110 ;; *************** function _BUTTONS_task *****************
 21111 ;; Defined at:
 21112 ;;		line 56 in file "buttons.c"
 21113 ;; Parameters:    Size  Location     Type
 21114 ;;		None
 21115 ;; Auto vars:     Size  Location     Type
 21116 ;;  btn             1    8[BANK0 ] PTR struct .
 21117 ;;		 -> buttons(32), 
 21118 ;;  i               1    5[BANK0 ] unsigned char 
 21119 ;;  time            2    6[BANK0 ] unsigned short 
 21120 ;; Return value:  Size  Location     Type
 21121 ;;                  1    wreg      void 
 21122 ;; Registers used:
 21123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21124 ;; Tracked objects:
 21125 ;;		On entry : 0/0
 21126 ;;		On exit  : 0/0
 21127 ;;		Unchanged: 0/0
 21128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21130 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21131 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21132 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21133 ;;Total ram usage:        7 bytes
 21134 ;; Hardware stack levels used:    1
 21135 ;; Hardware stack levels required when called:    5
 21136 ;; This function calls:
 21137 ;;		_CLOCK_getTime
 21138 ;; This function is called by:
 21139 ;;		_main
 21140 ;; This function uses a non-reentrant model
 21141 ;;
 21142                           
 21143                           
 21144                           ;psect for function _BUTTONS_task
 21145  0DC0                     _BUTTONS_task:	
 21146                           
 21147                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 21148                           
 21149                           ;incstack = 0
 21150                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21151  0DC0  319E  269B  318D   	fcall	_CLOCK_getTime
 21152  0DC3  0140               	movlb	0	; select bank0
 21153  0DC4  0821               	movf	?_CLOCK_getTime+1,w
 21154  0DC5  00A7               	movwf	BUTTONS_task@time+1
 21155  0DC6  0820               	movf	?_CLOCK_getTime,w
 21156  0DC7  00A6               	movwf	BUTTONS_task@time
 21157                           
 21158                           ;buttons.c: 61:     if (time - lastTime < 10)
 21159  0DC8  0142               	movlb	2	; select bank2
 21160  0DC9  0840               	movf	_lastTime^(0+256),w
 21161  0DCA  0140               	movlb	0	; select bank0
 21162  0DCB  0226               	subwf	BUTTONS_task@time,w
 21163  0DCC  00A2               	movwf	??_BUTTONS_task
 21164  0DCD  0142               	movlb	2	; select bank2
 21165  0DCE  0841               	movf	(_lastTime+1)^(0+256),w
 21166  0DCF  0140               	movlb	0	; select bank0
 21167  0DD0  3B27               	subwfb	BUTTONS_task@time+1,w
 21168  0DD1  00A3               	movwf	??_BUTTONS_task+1
 21169  0DD2  3000               	movlw	0
 21170  0DD3  0223               	subwf	??_BUTTONS_task+1,w
 21171  0DD4  300A               	movlw	10
 21172  0DD5  1903               	skipnz
 21173  0DD6  0222               	subwf	??_BUTTONS_task,w
 21174  0DD7  1C03               	btfss	3,0
 21175  0DD8  0008               	return
 21176                           
 21177                           ;buttons.c: 64:     lastTime = time;
 21178  0DD9  0827               	movf	BUTTONS_task@time+1,w
 21179  0DDA  0142               	movlb	2	; select bank2
 21180  0DDB  00C1               	movwf	(_lastTime+1)^(0+256)
 21181  0DDC  0140               	movlb	0	; select bank0
 21182  0DDD  0826               	movf	BUTTONS_task@time,w
 21183  0DDE  0142               	movlb	2	; select bank2
 21184  0DDF  00C0               	movwf	_lastTime^(0+256)
 21185                           
 21186                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 21187  0DE0  0140               	movlb	0	; select bank0
 21188  0DE1  01A5               	clrf	BUTTONS_task@i
 21189  0DE2                     l8511:	
 21190                           
 21191                           ;buttons.c: 68:         button_t* btn = buttons + i;
 21192  0DE2  0825               	movf	BUTTONS_task@i,w
 21193  0DE3  00A2               	movwf	??_BUTTONS_task
 21194  0DE4  3002               	movlw	2
 21195  0DE5                     u8295:	
 21196  0DE5  35A2               	lslf	??_BUTTONS_task,f
 21197  0DE6  3EFF               	addlw	-1
 21198  0DE7  1D03               	skipz
 21199  0DE8  2DE5               	goto	u8295
 21200  0DE9  3522               	lslf	??_BUTTONS_task,w
 21201  0DEA  3EA0               	addlw	(low (_buttons| (0+512)))& (0+255)
 21202  0DEB  00A3               	movwf	??_BUTTONS_task+1
 21203  0DEC  0823               	movf	??_BUTTONS_task+1,w
 21204  0DED  00A8               	movwf	BUTTONS_task@btn
 21205                           
 21206                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 21207  0DEE  0828               	movf	BUTTONS_task@btn,w
 21208  0DEF  0086               	movwf	6
 21209  0DF0  3002               	movlw	2	; select bank4/5
 21210  0DF1  0087               	movwf	7
 21211  0DF2  3F40               	moviw [0]fsr1
 21212  0DF3  00A2               	movwf	??_BUTTONS_task
 21213  0DF4  3F41               	moviw [1]fsr1
 21214  0DF5  00A3               	movwf	??_BUTTONS_task+1
 21215  0DF6  0822               	movf	??_BUTTONS_task,w
 21216  0DF7  0086               	movwf	6
 21217  0DF8  0823               	movf	??_BUTTONS_task+1,w
 21218  0DF9  0087               	movwf	7
 21219  0DFA  3001               	movlw	1
 21220  0DFB  00A4               	movwf	??_BUTTONS_task+2
 21221  0DFC  0828               	movf	BUTTONS_task@btn,w
 21222  0DFD  3E02               	addlw	2
 21223  0DFE  0084               	movwf	4
 21224  0DFF  3002               	movlw	2	; select bank4/5
 21225  0E00  0085               	movwf	5
 21226  0E01  0A00               	incf	0,w
 21227  0E02  2E04               	goto	u8304
 21228  0E03                     u8305:	
 21229  0E03  35A4               	lslf	??_BUTTONS_task+2,f
 21230  0E04                     u8304:	
 21231  0E04  0B89               	decfsz	9,f
 21232  0E05  2E03               	goto	u8305
 21233  0E06  0824               	movf	??_BUTTONS_task+2,w
 21234  0E07  0501               	andwf	1,w
 21235  0E08  1D03               	btfss	3,2
 21236  0E09  2E23               	goto	l8519
 21237                           
 21238                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 21239  0E0A  0828               	movf	BUTTONS_task@btn,w
 21240  0E0B  3E03               	addlw	3
 21241  0E0C  0086               	movwf	6
 21242  0E0D  3002               	movlw	2	; select bank4/5
 21243  0E0E  0087               	movwf	7
 21244  0E0F  0181               	clrf	1
 21245  0E10  0A81               	incf	1,f
 21246                           
 21247                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 21248  0E11  0828               	movf	BUTTONS_task@btn,w
 21249  0E12  3E07               	addlw	7
 21250  0E13  0086               	movwf	6
 21251  0E14  3002               	movlw	2	; select bank4/5
 21252  0E15  0087               	movwf	7
 21253  0E16  0801               	movf	1,w
 21254  0E17  1D03               	btfss	3,2
 21255  0E18  2E29               	goto	l911
 21256                           
 21257                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 21258  0E19  0828               	movf	BUTTONS_task@btn,w
 21259  0E1A  3E05               	addlw	5
 21260  0E1B  0086               	movwf	6
 21261  0E1C  3002               	movlw	2	; select bank4/5
 21262  0E1D  0087               	movwf	7
 21263  0E1E  0826               	movf	BUTTONS_task@time,w
 21264  0E1F  3FC0               	movwi [0]fsr1
 21265  0E20  0827               	movf	BUTTONS_task@time+1,w
 21266  0E21  3FC1               	movwi [1]fsr1
 21267  0E22  2E29               	goto	l911
 21268  0E23                     l8519:	
 21269                           
 21270                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 21271  0E23  0828               	movf	BUTTONS_task@btn,w
 21272  0E24  3E03               	addlw	3
 21273  0E25  0086               	movwf	6
 21274  0E26  3002               	movlw	2	; select bank4/5
 21275  0E27  0087               	movwf	7
 21276  0E28  0181               	clrf	1
 21277  0E29                     l911:	
 21278                           ;buttons.c: 78:         }
 21279                           
 21280                           
 21281                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 21282  0E29  0828               	movf	BUTTONS_task@btn,w
 21283  0E2A  3E03               	addlw	3
 21284  0E2B  0086               	movwf	6
 21285  0E2C  3002               	movlw	2	; select bank4/5
 21286  0E2D  0087               	movwf	7
 21287  0E2E  0801               	movf	1,w
 21288  0E2F  1D03               	btfss	3,2
 21289  0E30  2E41               	goto	l8525
 21290  0E31  0828               	movf	BUTTONS_task@btn,w
 21291  0E32  3E04               	addlw	4
 21292  0E33  0086               	movwf	6
 21293  0E34  3002               	movlw	2	; select bank4/5
 21294  0E35  0087               	movwf	7
 21295  0E36  0301               	decf	1,w
 21296  0E37  1D03               	btfss	3,2
 21297  0E38  2E41               	goto	l8525
 21298                           
 21299                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 21300  0E39  0828               	movf	BUTTONS_task@btn,w
 21301  0E3A  3E07               	addlw	7
 21302  0E3B  0086               	movwf	6
 21303  0E3C  3002               	movlw	2	; select bank4/5
 21304  0E3D  0087               	movwf	7
 21305  0E3E  0181               	clrf	1
 21306  0E3F  0A81               	incf	1,f
 21307                           
 21308                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 21309  0E40  2E97               	goto	l913
 21310  0E41                     l8525:	
 21311  0E41  0828               	movf	BUTTONS_task@btn,w
 21312  0E42  3E03               	addlw	3
 21313  0E43  0086               	movwf	6
 21314  0E44  3002               	movlw	2	; select bank4/5
 21315  0E45  0087               	movwf	7
 21316  0E46  0301               	decf	1,w
 21317  0E47  1D03               	btfss	3,2
 21318  0E48  2E78               	goto	l8537
 21319  0E49  0828               	movf	BUTTONS_task@btn,w
 21320  0E4A  3E04               	addlw	4
 21321  0E4B  0086               	movwf	6
 21322  0E4C  3002               	movlw	2	; select bank4/5
 21323  0E4D  0087               	movwf	7
 21324  0E4E  0301               	decf	1,w
 21325  0E4F  1D03               	btfss	3,2
 21326  0E50  2E78               	goto	l8537
 21327                           
 21328                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 21329  0E51  0828               	movf	BUTTONS_task@btn,w
 21330  0E52  3E05               	addlw	5
 21331  0E53  0086               	movwf	6
 21332  0E54  3002               	movlw	2	; select bank4/5
 21333  0E55  0087               	movwf	7
 21334  0E56  3F40               	moviw [0]fsr1
 21335  0E57  0226               	subwf	BUTTONS_task@time,w
 21336  0E58  00A2               	movwf	??_BUTTONS_task
 21337  0E59  3F41               	moviw [1]fsr1
 21338  0E5A  3B27               	subwfb	BUTTONS_task@time+1,w
 21339  0E5B  00A3               	movwf	??_BUTTONS_task+1
 21340  0E5C  3000               	movlw	0
 21341  0E5D  0223               	subwf	??_BUTTONS_task+1,w
 21342  0E5E  30C9               	movlw	201
 21343  0E5F  1903               	skipnz
 21344  0E60  0222               	subwf	??_BUTTONS_task,w
 21345  0E61  1C03               	skipc
 21346  0E62  2E65               	goto	l8533
 21347                           
 21348                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 21349  0E63  3003               	movlw	3
 21350  0E64  2E6F               	goto	L19
 21351  0E65                     l8533:	
 21352                           ;buttons.c: 86:             } else if(btn->event != EVENT_HELD) {
 21353                           
 21354  0E65  0828               	movf	BUTTONS_task@btn,w
 21355  0E66  3E07               	addlw	7
 21356  0E67  0086               	movwf	6
 21357  0E68  3002               	movlw	2	; select bank4/5
 21358  0E69  0087               	movwf	7
 21359  0E6A  3003               	movlw	3
 21360  0E6B  0601               	xorwf	1,w
 21361  0E6C  1903               	btfsc	3,2
 21362  0E6D  2E97               	goto	l913
 21363                           
 21364                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 21365  0E6E  3002               	movlw	2
 21366  0E6F                     L19:	
 21367  0E6F  00A2               	movwf	??_BUTTONS_task
 21368  0E70  0828               	movf	BUTTONS_task@btn,w
 21369  0E71  3E07               	addlw	7
 21370  0E72  0086               	movwf	6
 21371  0E73  3002               	movlw	2	; select bank4/5
 21372  0E74  0087               	movwf	7
 21373  0E75  0822               	movf	??_BUTTONS_task,w
 21374  0E76  0081               	movwf	1
 21375  0E77  2E97               	goto	l913
 21376  0E78                     l8537:	
 21377  0E78  0828               	movf	BUTTONS_task@btn,w
 21378  0E79  3E03               	addlw	3
 21379  0E7A  0086               	movwf	6
 21380  0E7B  3002               	movlw	2	; select bank4/5
 21381  0E7C  0087               	movwf	7
 21382  0E7D  0801               	movf	1,w
 21383  0E7E  1D03               	btfss	3,2
 21384  0E7F  2E97               	goto	l913
 21385  0E80  0828               	movf	BUTTONS_task@btn,w
 21386  0E81  3E04               	addlw	4
 21387  0E82  0086               	movwf	6
 21388  0E83  3002               	movlw	2	; select bank4/5
 21389  0E84  0087               	movwf	7
 21390  0E85  0301               	decf	1,w
 21391  0E86  1D03               	btfss	3,2
 21392  0E87  2E97               	goto	l913
 21393  0E88  0828               	movf	BUTTONS_task@btn,w
 21394  0E89  3E07               	addlw	7
 21395  0E8A  0086               	movwf	6
 21396  0E8B  3002               	movlw	2	; select bank4/5
 21397  0E8C  0087               	movwf	7
 21398  0E8D  3003               	movlw	3
 21399  0E8E  0601               	xorwf	1,w
 21400  0E8F  1D03               	btfss	3,2
 21401  0E90  2E97               	goto	l913
 21402                           
 21403                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 21404  0E91  0828               	movf	BUTTONS_task@btn,w
 21405  0E92  3E07               	addlw	7
 21406  0E93  0086               	movwf	6
 21407  0E94  3002               	movlw	2	; select bank4/5
 21408  0E95  0087               	movwf	7
 21409  0E96  0181               	clrf	1
 21410  0E97                     l913:	
 21411                           
 21412                           ;buttons.c: 93:         btn->lastState = btn->state;
 21413  0E97  0828               	movf	BUTTONS_task@btn,w
 21414  0E98  3E03               	addlw	3
 21415  0E99  0086               	movwf	6
 21416  0E9A  3002               	movlw	2	; select bank4/5
 21417  0E9B  0087               	movwf	7
 21418  0E9C  0801               	movf	1,w
 21419  0E9D  00A2               	movwf	??_BUTTONS_task
 21420  0E9E  0828               	movf	BUTTONS_task@btn,w
 21421  0E9F  3E04               	addlw	4
 21422  0EA0  0086               	movwf	6
 21423  0EA1  3002               	movlw	2	; select bank4/5
 21424  0EA2  0087               	movwf	7
 21425  0EA3  0822               	movf	??_BUTTONS_task,w
 21426  0EA4  0081               	movwf	1
 21427                           
 21428                           ;buttons.c: 94:     }
 21429  0EA5  3001               	movlw	1
 21430  0EA6  00A2               	movwf	??_BUTTONS_task
 21431  0EA7  0822               	movf	??_BUTTONS_task,w
 21432  0EA8  07A5               	addwf	BUTTONS_task@i,f
 21433  0EA9  3004               	movlw	4
 21434  0EAA  0225               	subwf	BUTTONS_task@i,w
 21435  0EAB  1803               	btfsc	3,0
 21436  0EAC  0008               	return
 21437  0EAD  2DE2               	goto	l8511
 21438  0EAE                     __end_of_BUTTONS_task:	
 21439                           
 21440                           	psect	text77
 21441  14D8                     __ptext77:	
 21442 ;; *************** function _BUTTONS_init *****************
 21443 ;; Defined at:
 21444 ;;		line 23 in file "buttons.c"
 21445 ;; Parameters:    Size  Location     Type
 21446 ;;		None
 21447 ;; Auto vars:     Size  Location     Type
 21448 ;;		None
 21449 ;; Return value:  Size  Location     Type
 21450 ;;                  1    wreg      void 
 21451 ;; Registers used:
 21452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21453 ;; Tracked objects:
 21454 ;;		On entry : 0/0
 21455 ;;		On exit  : 0/0
 21456 ;;		Unchanged: 0/0
 21457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21460 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21461 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21462 ;;Total ram usage:        1 bytes
 21463 ;; Hardware stack levels used:    1
 21464 ;; Hardware stack levels required when called:    5
 21465 ;; This function calls:
 21466 ;;		_GPIO_init
 21467 ;;		_init
 21468 ;; This function is called by:
 21469 ;;		_main
 21470 ;; This function uses a non-reentrant model
 21471 ;;
 21472                           
 21473                           
 21474                           ;psect for function _BUTTONS_init
 21475  14D8                     _BUTTONS_init:	
 21476                           
 21477                           ;buttons.c: 24:     menu = &buttons[0];
 21478                           
 21479                           ;incstack = 0
 21480                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21481  14D8  30A0               	movlw	(low (_buttons| (0+512)))& (0+255)
 21482  14D9  0140               	movlb	0	; select bank0
 21483  14DA  00A5               	movwf	??_BUTTONS_init
 21484  14DB  0825               	movf	??_BUTTONS_init,w
 21485  14DC  0141               	movlb	1	; select bank1
 21486  14DD  00C1               	movwf	_menu^(0+128)
 21487                           
 21488                           ;buttons.c: 25:     up = &buttons[1];
 21489  14DE  30A8               	movlw	(low ((_buttons| (0+512)+8)))& (0+255)
 21490  14DF  0140               	movlb	0	; select bank0
 21491  14E0  00A5               	movwf	??_BUTTONS_init
 21492  14E1  0825               	movf	??_BUTTONS_init,w
 21493  14E2  0141               	movlb	1	; select bank1
 21494  14E3  00C0               	movwf	_up^(0+128)
 21495                           
 21496                           ;buttons.c: 26:     down = &buttons[2];
 21497  14E4  30B0               	movlw	(low ((_buttons| (0+512)+16)))& (0+255)
 21498  14E5  0140               	movlb	0	; select bank0
 21499  14E6  00A5               	movwf	??_BUTTONS_init
 21500  14E7  0825               	movf	??_BUTTONS_init,w
 21501  14E8  0141               	movlb	1	; select bank1
 21502  14E9  00BF               	movwf	_down^(0+128)
 21503                           
 21504                           ;buttons.c: 27:     enter = &buttons[3];
 21505  14EA  30B8               	movlw	(low ((_buttons| (0+512)+24)))& (0+255)
 21506  14EB  0140               	movlb	0	; select bank0
 21507  14EC  00A5               	movwf	??_BUTTONS_init
 21508  14ED  0825               	movf	??_BUTTONS_init,w
 21509  14EE  0141               	movlb	1	; select bank1
 21510  14EF  00BE               	movwf	_enter^(0+128)
 21511                           
 21512                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 21513  14F0  300E               	movlw	14
 21514  14F1  0140               	movlb	0	; select bank0
 21515  14F2  00A0               	movwf	init@port
 21516  14F3  3000               	movlw	0
 21517  14F4  00A1               	movwf	init@port+1
 21518  14F5  3002               	movlw	2
 21519  14F6  00A5               	movwf	??_BUTTONS_init
 21520  14F7  0825               	movf	??_BUTTONS_init,w
 21521  14F8  00A2               	movwf	init@pin
 21522  14F9  0141               	movlb	1	; select bank1
 21523  14FA  0841               	movf	_menu^(0+128),w
 21524  14FB  3191  216D  3194   	fcall	_init
 21525                           
 21526                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 21527  14FE  300C               	movlw	12
 21528  14FF  0140               	movlb	0	; select bank0
 21529  1500  00A0               	movwf	init@port
 21530  1501  3000               	movlw	0
 21531  1502  00A1               	movwf	init@port+1
 21532  1503  3002               	movlw	2
 21533  1504  00A5               	movwf	??_BUTTONS_init
 21534  1505  0825               	movf	??_BUTTONS_init,w
 21535  1506  00A2               	movwf	init@pin
 21536  1507  0141               	movlb	1	; select bank1
 21537  1508  083E               	movf	_enter^(0+128),w
 21538  1509  3191  216D  3194   	fcall	_init
 21539                           
 21540                           ;buttons.c: 31:     init(down, &PORTC, 0);
 21541  150C  300E               	movlw	14
 21542  150D  0140               	movlb	0	; select bank0
 21543  150E  00A0               	movwf	init@port
 21544  150F  3000               	movlw	0
 21545  1510  00A1               	movwf	init@port+1
 21546  1511  01A2               	clrf	init@pin
 21547  1512  0141               	movlb	1	; select bank1
 21548  1513  083F               	movf	_down^(0+128),w
 21549  1514  3191  216D  3194   	fcall	_init
 21550                           
 21551                           ;buttons.c: 32:     init(up, &PORTC, 1);
 21552  1517  300E               	movlw	14
 21553  1518  0140               	movlb	0	; select bank0
 21554  1519  00A0               	movwf	init@port
 21555  151A  3000               	movlw	0
 21556  151B  00A1               	movwf	init@port+1
 21557  151C  01A2               	clrf	init@pin
 21558  151D  0AA2               	incf	init@pin,f
 21559  151E  0141               	movlb	1	; select bank1
 21560  151F  0840               	movf	_up^(0+128),w
 21561  1520  3191  216D  3194   	fcall	_init
 21562                           
 21563                           ;buttons.c: 34:     GPIO_init();
 21564  1523  319F  27A2         	fcall	_GPIO_init
 21565  1525  0008               	return
 21566  1526                     __end_of_BUTTONS_init:	
 21567                           
 21568                           	psect	text78
 21569  116D                     __ptext78:	
 21570 ;; *************** function _init *****************
 21571 ;; Defined at:
 21572 ;;		line 16 in file "buttons.c"
 21573 ;; Parameters:    Size  Location     Type
 21574 ;;  btn             1    wreg     PTR struct .
 21575 ;;		 -> buttons(32), NULL(0), 
 21576 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 21577 ;;		 -> PORTA(1), PORTC(1), 
 21578 ;;  pin             1    2[BANK0 ] unsigned char 
 21579 ;; Auto vars:     Size  Location     Type
 21580 ;;  btn             1    4[BANK0 ] PTR struct .
 21581 ;;		 -> buttons(32), NULL(0), 
 21582 ;; Return value:  Size  Location     Type
 21583 ;;                  1    wreg      void 
 21584 ;; Registers used:
 21585 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21586 ;; Tracked objects:
 21587 ;;		On entry : 0/0
 21588 ;;		On exit  : 0/0
 21589 ;;		Unchanged: 0/0
 21590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21591 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21592 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21593 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21594 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21595 ;;Total ram usage:        5 bytes
 21596 ;; Hardware stack levels used:    1
 21597 ;; Hardware stack levels required when called:    4
 21598 ;; This function calls:
 21599 ;;		Nothing
 21600 ;; This function is called by:
 21601 ;;		_BUTTONS_init
 21602 ;; This function uses a non-reentrant model
 21603 ;;
 21604                           
 21605                           
 21606                           ;psect for function _init
 21607  116D                     _init:	
 21608                           
 21609                           ;incstack = 0
 21610                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 21611                           ;init@btn stored from wreg
 21612  116D  0140               	movlb	0	; select bank0
 21613  116E  00A4               	movwf	init@btn
 21614                           
 21615                           ;buttons.c: 17:     btn->port = port;
 21616  116F  0824               	movf	init@btn,w
 21617  1170  0086               	movwf	6
 21618  1171  3002               	movlw	2	; select bank4/5
 21619  1172  0087               	movwf	7
 21620  1173  0820               	movf	init@port,w
 21621  1174  3FC0               	movwi [0]fsr1
 21622  1175  0821               	movf	init@port+1,w
 21623  1176  3FC1               	movwi [1]fsr1
 21624                           
 21625                           ;buttons.c: 18:     btn->pin = pin;
 21626  1177  0822               	movf	init@pin,w
 21627  1178  00A3               	movwf	??_init
 21628  1179  0824               	movf	init@btn,w
 21629  117A  3E02               	addlw	2
 21630  117B  0086               	movwf	6
 21631  117C  3002               	movlw	2	; select bank4/5
 21632  117D  0087               	movwf	7
 21633  117E  0823               	movf	??_init,w
 21634  117F  0081               	movwf	1
 21635                           
 21636                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 21637  1180  0824               	movf	init@btn,w
 21638  1181  3E03               	addlw	3
 21639  1182  0086               	movwf	6
 21640  1183  3002               	movlw	2	; select bank4/5
 21641  1184  0087               	movwf	7
 21642  1185  0181               	clrf	1
 21643                           
 21644                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 21645  1186  0824               	movf	init@btn,w
 21646  1187  3E07               	addlw	7
 21647  1188  0086               	movwf	6
 21648  1189  3002               	movlw	2	; select bank4/5
 21649  118A  0087               	movwf	7
 21650  118B  0181               	clrf	1
 21651  118C  0008               	return
 21652  118D                     __end_of_init:	
 21653                           
 21654                           	psect	text79
 21655  1FA2                     __ptext79:	
 21656 ;; *************** function _GPIO_init *****************
 21657 ;; Defined at:
 21658 ;;		line 38 in file "buttons.c"
 21659 ;; Parameters:    Size  Location     Type
 21660 ;;		None
 21661 ;; Auto vars:     Size  Location     Type
 21662 ;;		None
 21663 ;; Return value:  Size  Location     Type
 21664 ;;                  1    wreg      void 
 21665 ;; Registers used:
 21666 ;;		None
 21667 ;; Tracked objects:
 21668 ;;		On entry : 0/0
 21669 ;;		On exit  : 0/0
 21670 ;;		Unchanged: 0/0
 21671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21676 ;;Total ram usage:        0 bytes
 21677 ;; Hardware stack levels used:    1
 21678 ;; Hardware stack levels required when called:    4
 21679 ;; This function calls:
 21680 ;;		Nothing
 21681 ;; This function is called by:
 21682 ;;		_BUTTONS_init
 21683 ;; This function uses a non-reentrant model
 21684 ;;
 21685                           
 21686                           
 21687                           ;psect for function _GPIO_init
 21688  1FA2                     _GPIO_init:	
 21689                           
 21690                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 21691                           
 21692                           ;incstack = 0
 21693                           ; Regs used in _GPIO_init: []
 21694  1FA2  0140               	movlb	0	; select bank0
 21695  1FA3  1512               	bsf	18,2	;volatile
 21696                           
 21697                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 21698  1FA4  017E               	movlb	62	; select bank62
 21699  1FA5  1138               	bcf	56,2	;volatile
 21700                           
 21701                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 21702  1FA6  1539               	bsf	57,2	;volatile
 21703                           
 21704                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 21705  1FA7  0140               	movlb	0	; select bank0
 21706  1FA8  1414               	bsf	20,0	;volatile
 21707                           
 21708                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 21709  1FA9  1494               	bsf	20,1	;volatile
 21710                           
 21711                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 21712  1FAA  1514               	bsf	20,2	;volatile
 21713                           
 21714                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 21715  1FAB  017E               	movlb	62	; select bank62
 21716  1FAC  104E               	bcf	78,0	;volatile
 21717                           
 21718                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 21719  1FAD  10CE               	bcf	78,1	;volatile
 21720                           
 21721                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 21722  1FAE  114E               	bcf	78,2	;volatile
 21723                           
 21724                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 21725  1FAF  144F               	bsf	79,0	;volatile
 21726                           
 21727                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 21728  1FB0  14CF               	bsf	79,1	;volatile
 21729                           
 21730                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 21731  1FB1  154F               	bsf	79,2	;volatile
 21732  1FB2  0008               	return
 21733  1FB3                     __end_of_GPIO_init:	
 21734                           
 21735                           	psect	text80
 21736  0B25                     __ptext80:	
 21737 ;; *************** function _BEAT_task *****************
 21738 ;; Defined at:
 21739 ;;		line 65 in file "beat.c"
 21740 ;; Parameters:    Size  Location     Type
 21741 ;;		None
 21742 ;; Auto vars:     Size  Location     Type
 21743 ;;  offset          2   10[BANK0 ] unsigned short 
 21744 ;; Return value:  Size  Location     Type
 21745 ;;                  1    wreg      void 
 21746 ;; Registers used:
 21747 ;;		wreg, status,2, status,0, pclath, cstack
 21748 ;; Tracked objects:
 21749 ;;		On entry : 0/0
 21750 ;;		On exit  : 0/0
 21751 ;;		Unchanged: 0/0
 21752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21754 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21755 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21756 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21757 ;;Total ram usage:        4 bytes
 21758 ;; Hardware stack levels used:    1
 21759 ;; Hardware stack levels required when called:    5
 21760 ;; This function calls:
 21761 ;;		_ADCC_SetUpperThreshold
 21762 ;;		_CLOCK_getTime
 21763 ;;		___lwdiv
 21764 ;; This function is called by:
 21765 ;;		_main
 21766 ;; This function uses a non-reentrant model
 21767 ;;
 21768                           
 21769                           
 21770                           ;psect for function _BEAT_task
 21771  0B25                     _BEAT_task:	
 21772                           
 21773                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 21774                           
 21775                           ;incstack = 0
 21776                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 21777  0B25  319E  269B  318B   	fcall	_CLOCK_getTime
 21778  0B28  0142               	movlb	2	; select bank2
 21779  0B29  0834               	movf	_lastRun^(0+256),w
 21780  0B2A  0140               	movlb	0	; select bank0
 21781  0B2B  0220               	subwf	?_CLOCK_getTime,w
 21782  0B2C  00A8               	movwf	??_BEAT_task
 21783  0B2D  0142               	movlb	2	; select bank2
 21784  0B2E  0835               	movf	(_lastRun+1)^(0+256),w
 21785  0B2F  0140               	movlb	0	; select bank0
 21786  0B30  3B21               	subwfb	?_CLOCK_getTime+1,w
 21787  0B31  00A9               	movwf	??_BEAT_task+1
 21788  0B32  0142               	movlb	2	; select bank2
 21789  0B33  086A               	movf	(_delay+1)^(0+256),w
 21790  0B34  0140               	movlb	0	; select bank0
 21791  0B35  0229               	subwf	??_BEAT_task+1,w
 21792  0B36  1D03               	skipz
 21793  0B37  2B3C               	goto	u8515
 21794  0B38  0142               	movlb	2	; select bank2
 21795  0B39  0869               	movf	_delay^(0+256),w
 21796  0B3A  0140               	movlb	0	; select bank0
 21797  0B3B  0228               	subwf	??_BEAT_task,w
 21798  0B3C                     u8515:	
 21799  0B3C  1C03               	btfss	3,0
 21800  0B3D  0008               	return
 21801                           
 21802                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 21803  0B3E  319E  269B  318B   	fcall	_CLOCK_getTime
 21804  0B41  0140               	movlb	0	; select bank0
 21805  0B42  0821               	movf	?_CLOCK_getTime+1,w
 21806  0B43  0142               	movlb	2	; select bank2
 21807  0B44  00B5               	movwf	(_lastRun+1)^(0+256)
 21808  0B45  0140               	movlb	0	; select bank0
 21809  0B46  0820               	movf	?_CLOCK_getTime,w
 21810  0B47  0142               	movlb	2	; select bank2
 21811  0B48  00B4               	movwf	_lastRun^(0+256)
 21812                           
 21813                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 21814  0B49  0141               	movlb	1	; select bank1
 21815  0B4A  0332               	decf	_thresholdExceeded^(0+128),w
 21816  0B4B  1D03               	btfss	3,2
 21817  0B4C  2B53               	goto	l8623
 21818                           
 21819                           ;beat.c: 77:         thresholdCount++;
 21820  0B4D  3001               	movlw	1
 21821  0B4E  0142               	movlb	2	; select bank2
 21822  0B4F  07B2               	addwf	_thresholdCount^(0+256),f
 21823  0B50  3000               	movlw	0
 21824  0B51  3DB3               	addwfc	(_thresholdCount+1)^(0+256),f
 21825                           
 21826                           ;beat.c: 78:     } else {
 21827  0B52  2B5A               	goto	l8627
 21828  0B53                     l8623:	
 21829                           
 21830                           ;beat.c: 80:         thresholdCount = 0;
 21831  0B53  0142               	movlb	2	; select bank2
 21832  0B54  01B2               	clrf	_thresholdCount^(0+256)
 21833  0B55  01B3               	clrf	(_thresholdCount+1)^(0+256)
 21834                           
 21835                           ;beat.c: 81:         delay = 30;
 21836  0B56  301E               	movlw	30
 21837  0B57  00E9               	movwf	_delay^(0+256)
 21838  0B58  3000               	movlw	0
 21839  0B59  00EA               	movwf	(_delay^(0+256)+1)
 21840  0B5A                     l8627:	
 21841                           
 21842                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 21843  0B5A  0141               	movlb	1	; select bank1
 21844  0B5B  0332               	decf	_thresholdExceeded^(0+128),w
 21845  0B5C  1D03               	btfss	3,2
 21846  0B5D  2BA1               	goto	l8645
 21847  0B5E  0831               	movf	_lastDetected^(0+128),w
 21848  0B5F  1D03               	btfss	3,2
 21849  0B60  2BA1               	goto	l8645
 21850                           
 21851                           ;beat.c: 89:         detected = 1;
 21852  0B61  01B3               	clrf	_detected^(0+128)
 21853  0B62  0AB3               	incf	_detected^(0+128),f
 21854                           
 21855                           ;beat.c: 92:         delay = 50;
 21856  0B63  3032               	movlw	50
 21857  0B64  0142               	movlb	2	; select bank2
 21858  0B65  00E9               	movwf	_delay^(0+256)
 21859  0B66  3000               	movlw	0
 21860  0B67  00EA               	movwf	(_delay^(0+256)+1)
 21861                           
 21862                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 21863  0B68  319E  269B  318B   	fcall	_CLOCK_getTime
 21864  0B6B  0142               	movlb	2	; select bank2
 21865  0B6C  0838               	movf	_lastBeat^(0+256),w
 21866  0B6D  0140               	movlb	0	; select bank0
 21867  0B6E  0220               	subwf	?_CLOCK_getTime,w
 21868  0B6F  00AA               	movwf	BEAT_task@offset
 21869  0B70  0142               	movlb	2	; select bank2
 21870  0B71  0839               	movf	(_lastBeat+1)^(0+256),w
 21871  0B72  0140               	movlb	0	; select bank0
 21872  0B73  3B21               	subwfb	?_CLOCK_getTime+1,w
 21873  0B74  00AB               	movwf	BEAT_task@offset+1
 21874                           
 21875                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 21876  0B75  319E  269B  318B   	fcall	_CLOCK_getTime
 21877  0B78  0140               	movlb	0	; select bank0
 21878  0B79  0821               	movf	?_CLOCK_getTime+1,w
 21879  0B7A  0142               	movlb	2	; select bank2
 21880  0B7B  00B9               	movwf	(_lastBeat+1)^(0+256)
 21881  0B7C  0140               	movlb	0	; select bank0
 21882  0B7D  0820               	movf	?_CLOCK_getTime,w
 21883  0B7E  0142               	movlb	2	; select bank2
 21884  0B7F  00B8               	movwf	_lastBeat^(0+256)
 21885                           
 21886                           ;beat.c: 99:         if (offset < 150)
 21887  0B80  3000               	movlw	0
 21888  0B81  0140               	movlb	0	; select bank0
 21889  0B82  022B               	subwf	BEAT_task@offset+1,w
 21890  0B83  3096               	movlw	150
 21891  0B84  1903               	skipnz
 21892  0B85  022A               	subwf	BEAT_task@offset,w
 21893  0B86  1803               	skipnc
 21894  0B87  2B8E               	goto	l8643
 21895                           
 21896                           ;beat.c: 100:             bpm = 400;
 21897  0B88  3090               	movlw	144
 21898  0B89  0142               	movlb	2	; select bank2
 21899  0B8A  00B6               	movwf	_bpm^(0+256)
 21900  0B8B  3001               	movlw	1
 21901  0B8C  00B7               	movwf	(_bpm^(0+256)+1)
 21902  0B8D  2BA1               	goto	l8645
 21903  0B8E                     l8643:	
 21904                           
 21905                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 21906  0B8E  082B               	movf	BEAT_task@offset+1,w
 21907  0B8F  00A1               	movwf	___lwdiv@divisor+1
 21908  0B90  082A               	movf	BEAT_task@offset,w
 21909  0B91  00A0               	movwf	___lwdiv@divisor
 21910  0B92  3060               	movlw	96
 21911  0B93  00A2               	movwf	___lwdiv@dividend
 21912  0B94  30EA               	movlw	234
 21913  0B95  00A3               	movwf	___lwdiv@dividend+1
 21914  0B96  3193  23B1  318B   	fcall	___lwdiv
 21915  0B99  0140               	movlb	0	; select bank0
 21916  0B9A  0821               	movf	?___lwdiv+1,w
 21917  0B9B  0142               	movlb	2	; select bank2
 21918  0B9C  00B7               	movwf	(_bpm+1)^(0+256)
 21919  0B9D  0140               	movlb	0	; select bank0
 21920  0B9E  0820               	movf	?___lwdiv,w
 21921  0B9F  0142               	movlb	2	; select bank2
 21922  0BA0  00B6               	movwf	_bpm^(0+256)
 21923  0BA1                     l8645:	
 21924                           
 21925                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 21926  0BA1  0141               	movlb	1	; select bank1
 21927  0BA2  0832               	movf	_thresholdExceeded^(0+128),w
 21928  0BA3  0140               	movlb	0	; select bank0
 21929  0BA4  00A8               	movwf	??_BEAT_task
 21930  0BA5  0828               	movf	??_BEAT_task,w
 21931  0BA6  0141               	movlb	1	; select bank1
 21932  0BA7  00B1               	movwf	_lastDetected^(0+128)
 21933                           
 21934                           ;beat.c: 109:     thresholdExceeded = 0;
 21935  0BA8  01B2               	clrf	_thresholdExceeded^(0+128)
 21936                           
 21937                           ;beat.c: 111:     if (thresholdCount > 3) {
 21938  0BA9  0142               	movlb	2	; select bank2
 21939  0BAA  0833               	movf	(_thresholdCount+1)^(0+256),w
 21940  0BAB  3A80               	xorlw	128
 21941  0BAC  0140               	movlb	0	; select bank0
 21942  0BAD  00A8               	movwf	??_BEAT_task
 21943  0BAE  3080               	movlw	128
 21944  0BAF  0228               	subwf	??_BEAT_task,w
 21945  0BB0  1D03               	skipz
 21946  0BB1  2BB5               	goto	u8565
 21947  0BB2  3004               	movlw	4
 21948  0BB3  0142               	movlb	2	; select bank2
 21949  0BB4  0232               	subwf	_thresholdCount^(0+256),w
 21950  0BB5                     u8565:	
 21951  0BB5  1C03               	skipc
 21952  0BB6  2BD4               	goto	l8659
 21953                           
 21954                           ;beat.c: 112:         threshold += 1;
 21955  0BB7  3001               	movlw	1
 21956  0BB8  0141               	movlb	1	; select bank1
 21957  0BB9  07E7               	addwf	_threshold^(0+128),f
 21958  0BBA  3000               	movlw	0
 21959  0BBB  3DE8               	addwfc	(_threshold+1)^(0+128),f
 21960                           
 21961                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 21962  0BBC  0868               	movf	(_threshold+1)^(0+128),w
 21963  0BBD  0140               	movlb	0	; select bank0
 21964  0BBE  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 21965  0BBF  0141               	movlb	1	; select bank1
 21966  0BC0  0867               	movf	_threshold^(0+128),w
 21967  0BC1  0140               	movlb	0	; select bank0
 21968  0BC2  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 21969  0BC3  319E  2689  318B   	fcall	_ADCC_SetUpperThreshold
 21970                           
 21971                           ;beat.c: 114:         thresholdCount = 0;
 21972  0BC6  0142               	movlb	2	; select bank2
 21973  0BC7  01B2               	clrf	_thresholdCount^(0+256)
 21974  0BC8  01B3               	clrf	(_thresholdCount+1)^(0+256)
 21975                           
 21976                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 21977  0BC9  319E  269B         	fcall	_CLOCK_getTime
 21978  0BCB  0140               	movlb	0	; select bank0
 21979  0BCC  0821               	movf	?_CLOCK_getTime+1,w
 21980  0BCD  0142               	movlb	2	; select bank2
 21981  0BCE  00B9               	movwf	(_lastBeat+1)^(0+256)
 21982  0BCF  0140               	movlb	0	; select bank0
 21983  0BD0  0820               	movf	?_CLOCK_getTime,w
 21984  0BD1  0142               	movlb	2	; select bank2
 21985  0BD2  00B8               	movwf	_lastBeat^(0+256)
 21986                           
 21987                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 21988  0BD3  0008               	return
 21989  0BD4                     l8659:	
 21990  0BD4  319E  269B  318B   	fcall	_CLOCK_getTime
 21991  0BD7  0142               	movlb	2	; select bank2
 21992  0BD8  0838               	movf	_lastBeat^(0+256),w
 21993  0BD9  0140               	movlb	0	; select bank0
 21994  0BDA  0220               	subwf	?_CLOCK_getTime,w
 21995  0BDB  00A8               	movwf	??_BEAT_task
 21996  0BDC  0142               	movlb	2	; select bank2
 21997  0BDD  0839               	movf	(_lastBeat+1)^(0+256),w
 21998  0BDE  0140               	movlb	0	; select bank0
 21999  0BDF  3B21               	subwfb	?_CLOCK_getTime+1,w
 22000  0BE0  00A9               	movwf	??_BEAT_task+1
 22001  0BE1  3003               	movlw	3
 22002  0BE2  0229               	subwf	??_BEAT_task+1,w
 22003  0BE3  30E9               	movlw	233
 22004  0BE4  1903               	skipnz
 22005  0BE5  0228               	subwf	??_BEAT_task,w
 22006  0BE6  1C03               	skipc
 22007  0BE7  0008               	return
 22008                           
 22009                           ;beat.c: 119:         threshold -= 1;
 22010  0BE8  3001               	movlw	1
 22011  0BE9  0141               	movlb	1	; select bank1
 22012  0BEA  02E7               	subwf	_threshold^(0+128),f
 22013  0BEB  3000               	movlw	0
 22014  0BEC  3BE8               	subwfb	(_threshold+1)^(0+128),f
 22015                           
 22016                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 22017  0BED  0868               	movf	(_threshold+1)^(0+128),w
 22018  0BEE  0140               	movlb	0	; select bank0
 22019  0BEF  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22020  0BF0  0141               	movlb	1	; select bank1
 22021  0BF1  0867               	movf	_threshold^(0+128),w
 22022  0BF2  0140               	movlb	0	; select bank0
 22023  0BF3  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22024  0BF4  319E  2689         	fcall	_ADCC_SetUpperThreshold
 22025  0BF6  0008               	return
 22026  0BF7                     __end_of_BEAT_task:	
 22027                           
 22028                           	psect	text81
 22029  13B1                     __ptext81:	
 22030 ;; *************** function ___lwdiv *****************
 22031 ;; Defined at:
 22032 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 22033 ;; Parameters:    Size  Location     Type
 22034 ;;  divisor         2    0[BANK0 ] unsigned int 
 22035 ;;  dividend        2    2[BANK0 ] unsigned int 
 22036 ;; Auto vars:     Size  Location     Type
 22037 ;;  quotient        2    6[BANK0 ] unsigned int 
 22038 ;;  counter         1    5[BANK0 ] unsigned char 
 22039 ;; Return value:  Size  Location     Type
 22040 ;;                  2    0[BANK0 ] unsigned int 
 22041 ;; Registers used:
 22042 ;;		wreg, status,2, status,0
 22043 ;; Tracked objects:
 22044 ;;		On entry : 0/0
 22045 ;;		On exit  : 0/0
 22046 ;;		Unchanged: 0/0
 22047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22048 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22049 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22050 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22051 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22052 ;;Total ram usage:        8 bytes
 22053 ;; Hardware stack levels used:    1
 22054 ;; Hardware stack levels required when called:    4
 22055 ;; This function calls:
 22056 ;;		Nothing
 22057 ;; This function is called by:
 22058 ;;		_TM1650_fastPrintNum
 22059 ;;		_TM1650_fastPrintNum_3digit
 22060 ;;		_BEAT_task
 22061 ;; This function uses a non-reentrant model
 22062 ;;
 22063                           
 22064                           
 22065                           ;psect for function ___lwdiv
 22066  13B1                     ___lwdiv:	
 22067                           
 22068                           ;incstack = 0
 22069                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 22070  13B1  0140               	movlb	0	; select bank0
 22071  13B2  01A6               	clrf	___lwdiv@quotient
 22072  13B3  01A7               	clrf	___lwdiv@quotient+1
 22073  13B4  0820               	movf	___lwdiv@divisor,w
 22074  13B5  0421               	iorwf	___lwdiv@divisor+1,w
 22075  13B6  1903               	btfsc	3,2
 22076  13B7  2BE1               	goto	l7317
 22077  13B8  01A5               	clrf	___lwdiv@counter
 22078  13B9  0AA5               	incf	___lwdiv@counter,f
 22079  13BA                     l7305:	
 22080  13BA  1BA1               	btfsc	___lwdiv@divisor+1,7
 22081  13BB  2BC6               	goto	l7307
 22082  13BC  3001               	movlw	1
 22083  13BD                     u6965:	
 22084  13BD  35A0               	lslf	___lwdiv@divisor,f
 22085  13BE  0DA1               	rlf	___lwdiv@divisor+1,f
 22086  13BF  0B89               	decfsz	9,f
 22087  13C0  2BBD               	goto	u6965
 22088  13C1  3001               	movlw	1
 22089  13C2  00A4               	movwf	??___lwdiv
 22090  13C3  0824               	movf	??___lwdiv,w
 22091  13C4  07A5               	addwf	___lwdiv@counter,f
 22092  13C5  2BBA               	goto	l7305
 22093  13C6                     l7307:	
 22094  13C6  3001               	movlw	1
 22095  13C7                     u6985:	
 22096  13C7  35A6               	lslf	___lwdiv@quotient,f
 22097  13C8  0DA7               	rlf	___lwdiv@quotient+1,f
 22098  13C9  0B89               	decfsz	9,f
 22099  13CA  2BC7               	goto	u6985
 22100  13CB  0821               	movf	___lwdiv@divisor+1,w
 22101  13CC  0223               	subwf	___lwdiv@dividend+1,w
 22102  13CD  1D03               	skipz
 22103  13CE  2BD1               	goto	u6995
 22104  13CF  0820               	movf	___lwdiv@divisor,w
 22105  13D0  0222               	subwf	___lwdiv@dividend,w
 22106  13D1                     u6995:	
 22107  13D1  1C03               	skipc
 22108  13D2  2BD8               	goto	l7313
 22109  13D3  0820               	movf	___lwdiv@divisor,w
 22110  13D4  02A2               	subwf	___lwdiv@dividend,f
 22111  13D5  0821               	movf	___lwdiv@divisor+1,w
 22112  13D6  3BA3               	subwfb	___lwdiv@dividend+1,f
 22113  13D7  1426               	bsf	___lwdiv@quotient,0
 22114  13D8                     l7313:	
 22115  13D8  3001               	movlw	1
 22116  13D9                     u7005:	
 22117  13D9  36A1               	lsrf	___lwdiv@divisor+1,f
 22118  13DA  0CA0               	rrf	___lwdiv@divisor,f
 22119  13DB  0B89               	decfsz	9,f
 22120  13DC  2BD9               	goto	u7005
 22121  13DD  3001               	movlw	1
 22122  13DE  02A5               	subwf	___lwdiv@counter,f
 22123  13DF  1D03               	btfss	3,2
 22124  13E0  2BC6               	goto	l7307
 22125  13E1                     l7317:	
 22126  13E1  0827               	movf	___lwdiv@quotient+1,w
 22127  13E2  00A1               	movwf	?___lwdiv+1
 22128  13E3  0826               	movf	___lwdiv@quotient,w
 22129  13E4  00A0               	movwf	?___lwdiv
 22130  13E5  0008               	return
 22131  13E6                     __end_of___lwdiv:	
 22132                           
 22133                           	psect	text82
 22134  1E9B                     __ptext82:	
 22135 ;; *************** function _CLOCK_getTime *****************
 22136 ;; Defined at:
 22137 ;;		line 16 in file "clock.c"
 22138 ;; Parameters:    Size  Location     Type
 22139 ;;		None
 22140 ;; Auto vars:     Size  Location     Type
 22141 ;;		None
 22142 ;; Return value:  Size  Location     Type
 22143 ;;                  2    0[BANK0 ] unsigned short 
 22144 ;; Registers used:
 22145 ;;		wreg
 22146 ;; Tracked objects:
 22147 ;;		On entry : 0/0
 22148 ;;		On exit  : 0/0
 22149 ;;		Unchanged: 0/0
 22150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22151 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22154 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22155 ;;Total ram usage:        2 bytes
 22156 ;; Hardware stack levels used:    1
 22157 ;; Hardware stack levels required when called:    4
 22158 ;; This function calls:
 22159 ;;		Nothing
 22160 ;; This function is called by:
 22161 ;;		_main
 22162 ;;		_BUTTONS_task
 22163 ;;		_CONTROL_DMX
 22164 ;;		_BEAT_task
 22165 ;;		_LED_task_BEAT_STROBE
 22166 ;;		_CONTROL_MANUAL
 22167 ;; This function uses a non-reentrant model
 22168 ;;
 22169                           
 22170                           
 22171                           ;psect for function _CLOCK_getTime
 22172  1E9B                     _CLOCK_getTime:	
 22173                           
 22174                           ;clock.c: 17:     return currentTime;
 22175                           
 22176                           ;incstack = 0
 22177                           ; Regs used in _CLOCK_getTime: [wreg]
 22178  1E9B  0142               	movlb	2	; select bank2
 22179  1E9C  083F               	movf	(_currentTime+1)^(0+256),w
 22180  1E9D  0140               	movlb	0	; select bank0
 22181  1E9E  00A1               	movwf	?_CLOCK_getTime+1
 22182  1E9F  0142               	movlb	2	; select bank2
 22183  1EA0  083E               	movf	_currentTime^(0+256),w
 22184  1EA1  0140               	movlb	0	; select bank0
 22185  1EA2  00A0               	movwf	?_CLOCK_getTime
 22186  1EA3  0008               	return
 22187  1EA4                     __end_of_CLOCK_getTime:	
 22188                           
 22189                           	psect	text83
 22190  105B                     __ptext83:	
 22191 ;; *************** function _BEAT_init *****************
 22192 ;; Defined at:
 22193 ;;		line 39 in file "beat.c"
 22194 ;; Parameters:    Size  Location     Type
 22195 ;;		None
 22196 ;; Auto vars:     Size  Location     Type
 22197 ;;		None
 22198 ;; Return value:  Size  Location     Type
 22199 ;;                  1    wreg      void 
 22200 ;; Registers used:
 22201 ;;		wreg, status,2, status,0, pclath, cstack
 22202 ;; Tracked objects:
 22203 ;;		On entry : 0/0
 22204 ;;		On exit  : 0/0
 22205 ;;		Unchanged: 0/0
 22206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22211 ;;Total ram usage:        0 bytes
 22212 ;; Hardware stack levels used:    1
 22213 ;; Hardware stack levels required when called:    5
 22214 ;; This function calls:
 22215 ;;		_ADCC_SetADTIInterruptHandler
 22216 ;;		_ADCC_SetUpperThreshold
 22217 ;;		_ADCC_StartConversion
 22218 ;; This function is called by:
 22219 ;;		_main
 22220 ;; This function uses a non-reentrant model
 22221 ;;
 22222                           
 22223                           
 22224                           ;psect for function _BEAT_init
 22225  105B                     _BEAT_init:	
 22226                           
 22227                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 22228                           
 22229                           ;incstack = 0
 22230                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 22231  105B  0141               	movlb	1	; select bank1
 22232  105C  0868               	movf	(_threshold+1)^(0+128),w
 22233  105D  0140               	movlb	0	; select bank0
 22234  105E  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22235  105F  0141               	movlb	1	; select bank1
 22236  1060  0867               	movf	_threshold^(0+128),w
 22237  1061  0140               	movlb	0	; select bank0
 22238  1062  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22239  1063  319E  2689  3190   	fcall	_ADCC_SetUpperThreshold
 22240                           
 22241                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 22242  1066  3062               	movlw	low _adcThresholdHandler
 22243  1067  0140               	movlb	0	; select bank0
 22244  1068  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 22245  1069  301E               	movlw	high _adcThresholdHandler
 22246  106A  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 22247  106B  319E  2680  3190   	fcall	_ADCC_SetADTIInterruptHandler
 22248                           
 22249                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 22250  106E  300F               	movlw	15
 22251  106F  319E  2692         	fcall	_ADCC_StartConversion
 22252  1071  0008               	return
 22253  1072                     __end_of_BEAT_init:	
 22254                           
 22255                           	psect	text84
 22256  1E92                     __ptext84:	
 22257 ;; *************** function _ADCC_StartConversion *****************
 22258 ;; Defined at:
 22259 ;;		line 121 in file "mcc_generated_files/adcc.c"
 22260 ;; Parameters:    Size  Location     Type
 22261 ;;  channel         1    wreg     enum E10867
 22262 ;; Auto vars:     Size  Location     Type
 22263 ;;  channel         1    0[BANK0 ] enum E10867
 22264 ;; Return value:  Size  Location     Type
 22265 ;;                  1    wreg      void 
 22266 ;; Registers used:
 22267 ;;		wreg
 22268 ;; Tracked objects:
 22269 ;;		On entry : 0/0
 22270 ;;		On exit  : 0/0
 22271 ;;		Unchanged: 0/0
 22272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22277 ;;Total ram usage:        1 bytes
 22278 ;; Hardware stack levels used:    1
 22279 ;; Hardware stack levels required when called:    4
 22280 ;; This function calls:
 22281 ;;		Nothing
 22282 ;; This function is called by:
 22283 ;;		_BEAT_init
 22284 ;; This function uses a non-reentrant model
 22285 ;;
 22286                           
 22287                           
 22288                           ;psect for function _ADCC_StartConversion
 22289  1E92                     _ADCC_StartConversion:	
 22290                           
 22291                           ;incstack = 0
 22292                           ; Regs used in _ADCC_StartConversion: [wreg]
 22293                           ;ADCC_StartConversion@channel stored from wreg
 22294  1E92  0140               	movlb	0	; select bank0
 22295  1E93  00A0               	movwf	ADCC_StartConversion@channel
 22296                           
 22297                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 22298  1E94  0820               	movf	ADCC_StartConversion@channel,w
 22299  1E95  0141               	movlb	1	; select bank1
 22300  1E96  009F               	movwf	31	;volatile
 22301                           
 22302                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 22303  1E97  0142               	movlb	2	; select bank2
 22304  1E98  1791               	bsf	17,7	;volatile
 22305                           
 22306                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 22307  1E99  1411               	bsf	17,0	;volatile
 22308  1E9A  0008               	return
 22309  1E9B                     __end_of_ADCC_StartConversion:	
 22310                           
 22311                           	psect	text85
 22312  1E89                     __ptext85:	
 22313 ;; *************** function _ADCC_SetUpperThreshold *****************
 22314 ;; Defined at:
 22315 ;;		line 251 in file "mcc_generated_files/adcc.c"
 22316 ;; Parameters:    Size  Location     Type
 22317 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 22318 ;; Auto vars:     Size  Location     Type
 22319 ;;		None
 22320 ;; Return value:  Size  Location     Type
 22321 ;;                  1    wreg      void 
 22322 ;; Registers used:
 22323 ;;		wreg, status,2
 22324 ;; Tracked objects:
 22325 ;;		On entry : 0/0
 22326 ;;		On exit  : 0/0
 22327 ;;		Unchanged: 0/0
 22328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22332 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22333 ;;Total ram usage:        2 bytes
 22334 ;; Hardware stack levels used:    1
 22335 ;; Hardware stack levels required when called:    4
 22336 ;; This function calls:
 22337 ;;		Nothing
 22338 ;; This function is called by:
 22339 ;;		_BEAT_init
 22340 ;;		_BEAT_task
 22341 ;; This function uses a non-reentrant model
 22342 ;;
 22343                           
 22344                           
 22345                           ;psect for function _ADCC_SetUpperThreshold
 22346  1E89                     _ADCC_SetUpperThreshold:	
 22347                           
 22348                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 22349                           
 22350                           ;incstack = 0
 22351                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 22352  1E89  0140               	movlb	0	; select bank0
 22353  1E8A  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 22354  1E8B  0141               	movlb	1	; select bank1
 22355  1E8C  008F               	movwf	15	;volatile
 22356                           
 22357                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 22358  1E8D  0140               	movlb	0	; select bank0
 22359  1E8E  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 22360  1E8F  0141               	movlb	1	; select bank1
 22361  1E90  008E               	movwf	14	;volatile
 22362  1E91  0008               	return
 22363  1E92                     __end_of_ADCC_SetUpperThreshold:	
 22364                           
 22365                           	psect	text86
 22366  1E80                     __ptext86:	
 22367 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 22368 ;; Defined at:
 22369 ;;		line 317 in file "mcc_generated_files/adcc.c"
 22370 ;; Parameters:    Size  Location     Type
 22371 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 22372 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 22373 ;; Auto vars:     Size  Location     Type
 22374 ;;		None
 22375 ;; Return value:  Size  Location     Type
 22376 ;;                  1    wreg      void 
 22377 ;; Registers used:
 22378 ;;		wreg
 22379 ;; Tracked objects:
 22380 ;;		On entry : 0/0
 22381 ;;		On exit  : 0/0
 22382 ;;		Unchanged: 0/0
 22383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22384 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22388 ;;Total ram usage:        2 bytes
 22389 ;; Hardware stack levels used:    1
 22390 ;; Hardware stack levels required when called:    4
 22391 ;; This function calls:
 22392 ;;		Nothing
 22393 ;; This function is called by:
 22394 ;;		_ADCC_Initialize
 22395 ;;		_BEAT_init
 22396 ;; This function uses a non-reentrant model
 22397 ;;
 22398                           
 22399                           
 22400                           ;psect for function _ADCC_SetADTIInterruptHandler
 22401  1E80                     _ADCC_SetADTIInterruptHandler:	
 22402                           
 22403                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 22404                           
 22405                           ;incstack = 0
 22406                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 22407  1E80  0140               	movlb	0	; select bank0
 22408  1E81  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 22409  1E82  0142               	movlb	2	; select bank2
 22410  1E83  00ED               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 22411  1E84  0140               	movlb	0	; select bank0
 22412  1E85  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 22413  1E86  0142               	movlb	2	; select bank2
 22414  1E87  00EC               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 22415  1E88  0008               	return
 22416  1E89                     __end_of_ADCC_SetADTIInterruptHandler:	
 22417                           
 22418                           	psect	intentry
 22419  0004                     __pintentry:	
 22420 ;; *************** function _INTERRUPT_InterruptManager *****************
 22421 ;; Defined at:
 22422 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22423 ;; Parameters:    Size  Location     Type
 22424 ;;		None
 22425 ;; Auto vars:     Size  Location     Type
 22426 ;;		None
 22427 ;; Return value:  Size  Location     Type
 22428 ;;                  1    wreg      void 
 22429 ;; Registers used:
 22430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22431 ;; Tracked objects:
 22432 ;;		On entry : 0/0
 22433 ;;		On exit  : 0/0
 22434 ;;		Unchanged: 0/0
 22435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22440 ;;Total ram usage:        0 bytes
 22441 ;; Hardware stack levels used:    1
 22442 ;; Hardware stack levels required when called:    3
 22443 ;; This function calls:
 22444 ;;		Absolute function
 22445 ;;		_ADCC_ThresholdISR
 22446 ;;		_DMX_interrupt
 22447 ;;		_EUSART1_Receive_ISR
 22448 ;;		_I2C1_BusCollisionISR
 22449 ;;		_I2C1_ISR
 22450 ;;		_TMR0_ISR
 22451 ;; This function is called by:
 22452 ;;		Interrupt level 1
 22453 ;; This function uses a non-reentrant model
 22454 ;;
 22455                           
 22456  0004                     _INTERRUPT_InterruptManager:	
 22457                           
 22458                           ;incstack = 0
 22459 ;; hardware stack exceeded
 22460  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 22461                           
 22462                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22463  0005  3180               	pagesel	$
 22464                           
 22465                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 22466  0006  014E               	movlb	14	; select bank14
 22467  0007  1A96               	btfsc	22,5	;volatile
 22468  0008  1E8C               	btfss	12,5	;volatile
 22469  0009  280E               	goto	i1l427
 22470                           
 22471                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 22472  000A  319F  2748  3180   	fcall	_TMR0_ISR
 22473                           
 22474                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 22475  000D  282E               	goto	i1l439
 22476  000E                     i1l427:	
 22477                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 22478                           
 22479  000E  1F0B               	btfss	11,6	;volatile
 22480  000F  282E               	goto	i1l439
 22481                           
 22482                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 22483  0010  1899               	btfsc	25,1	;volatile
 22484  0011  1C8F               	btfss	15,1	;volatile
 22485  0012  2817               	goto	i1l430
 22486                           
 22487                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 22488  0013  319E  2659  3180   	fcall	_I2C1_BusCollisionISR
 22489                           
 22490                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 22491  0016  282E               	goto	i1l439
 22492  0017                     i1l430:	
 22493                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 22494                           
 22495  0017  1819               	btfsc	25,0	;volatile
 22496  0018  1C0F               	btfss	15,0	;volatile
 22497  0019  281E               	goto	i1l432
 22498                           
 22499                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 22500  001A  318E  26AE  3180   	fcall	_I2C1_ISR
 22501                           
 22502                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 22503  001D  282E               	goto	i1l439
 22504  001E                     i1l432:	
 22505                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 22506                           
 22507  001E  1897               	btfsc	23,1	;volatile
 22508  001F  1C8D               	btfss	13,1	;volatile
 22509  0020  2825               	goto	i1l434
 22510                           
 22511                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 22512  0021  319F  273B  3180   	fcall	_ADCC_ThresholdISR
 22513                           
 22514                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 22515  0024  282E               	goto	i1l439
 22516  0025                     i1l434:	
 22517                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 22518                           
 22519  0025  1A99               	btfsc	25,5	;volatile
 22520  0026  1E8F               	btfss	15,5	;volatile
 22521  0027  282E               	goto	i1l439
 22522                           
 22523                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 22524  0028  0143               	movlb	3	; select bank3
 22525  0029  086F               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 22526  002A  008A               	movwf	10
 22527  002B  086E               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 22528  002C  000A               	callw
 22529  002D  3180               	pagesel	$
 22530  002E                     i1l439:	
 22531                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 22532                           
 22533  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 22534  002F  0009               	retfie
 22535  0030                     __end_of_INTERRUPT_InterruptManager:	
 22536                           
 22537                           	psect	text88
 22538  1F48                     __ptext88:	
 22539 ;; *************** function _TMR0_ISR *****************
 22540 ;; Defined at:
 22541 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 22542 ;; Parameters:    Size  Location     Type
 22543 ;;		None
 22544 ;; Auto vars:     Size  Location     Type
 22545 ;;		None
 22546 ;; Return value:  Size  Location     Type
 22547 ;;                  1    wreg      void 
 22548 ;; Registers used:
 22549 ;;		wreg, status,2, status,0, pclath, cstack
 22550 ;; Tracked objects:
 22551 ;;		On entry : 0/0
 22552 ;;		On exit  : 0/0
 22553 ;;		Unchanged: 0/0
 22554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22559 ;;Total ram usage:        0 bytes
 22560 ;; Hardware stack levels used:    1
 22561 ;; Hardware stack levels required when called:    1
 22562 ;; This function calls:
 22563 ;;		Absolute function
 22564 ;;		_CLOCK_timerCallback
 22565 ;;		_TMR0_DefaultInterruptHandler
 22566 ;; This function is called by:
 22567 ;;		_INTERRUPT_InterruptManager
 22568 ;; This function uses a non-reentrant model
 22569 ;;
 22570                           
 22571                           
 22572                           ;psect for function _TMR0_ISR
 22573  1F48                     _TMR0_ISR:	
 22574                           
 22575                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 22576                           
 22577                           ;incstack = 0
 22578 ;; hardware stack exceeded
 22579                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 22580  1F48  014E               	movlb	14	; select bank14
 22581  1F49  128C               	bcf	12,5	;volatile
 22582                           
 22583                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 22584  1F4A  0142               	movlb	2	; select bank2
 22585  1F4B  086E               	movf	_TMR0_InterruptHandler^(0+256),w
 22586  1F4C  046F               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 22587  1F4D  1903               	btfsc	3,2
 22588  1F4E  0008               	return
 22589                           
 22590                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 22591  1F4F  086F               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 22592  1F50  008A               	movwf	10
 22593  1F51  086E               	movf	_TMR0_InterruptHandler^(0+256),w
 22594  1F52  000A               	callw
 22595  1F53  319F               	pagesel	$
 22596  1F54  0008               	return
 22597  1F55                     __end_of_TMR0_ISR:	
 22598                           
 22599                           	psect	text89
 22600  1001                     __ptext89:	
 22601 ;; *************** function _CLOCK_timerCallback *****************
 22602 ;; Defined at:
 22603 ;;		line 20 in file "clock.c"
 22604 ;; Parameters:    Size  Location     Type
 22605 ;;		None
 22606 ;; Auto vars:     Size  Location     Type
 22607 ;;		None
 22608 ;; Return value:  Size  Location     Type
 22609 ;;                  1    wreg      void 
 22610 ;; Registers used:
 22611 ;;		wreg
 22612 ;; Tracked objects:
 22613 ;;		On entry : 0/0
 22614 ;;		On exit  : 0/0
 22615 ;;		Unchanged: 0/0
 22616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22621 ;;Total ram usage:        0 bytes
 22622 ;; Hardware stack levels used:    1
 22623 ;; This function calls:
 22624 ;;		Nothing
 22625 ;; This function is called by:
 22626 ;;		_CLOCK_init
 22627 ;;		_TMR0_ISR
 22628 ;; This function uses a non-reentrant model
 22629 ;;
 22630                           
 22631                           
 22632                           ;psect for function _CLOCK_timerCallback
 22633  1001                     _CLOCK_timerCallback:	
 22634                           
 22635                           ;clock.c: 21:     currentTime++;
 22636                           
 22637                           ;incstack = 0
 22638 ;; hardware stack exceeded
 22639                           ; Regs used in _CLOCK_timerCallback: [wreg]
 22640  1001  3001               	movlw	1
 22641  1002  0142               	movlb	2	; select bank2
 22642  1003  07BE               	addwf	_currentTime^(0+256),f
 22643  1004  3000               	movlw	0
 22644  1005  3DBF               	addwfc	(_currentTime+1)^(0+256),f
 22645  1006  0008               	return
 22646  1007                     __end_of_CLOCK_timerCallback:	
 22647                           
 22648                           	psect	text90
 22649  1E52                     __ptext90:	
 22650 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 22651 ;; Defined at:
 22652 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 22653 ;; Parameters:    Size  Location     Type
 22654 ;;		None
 22655 ;; Auto vars:     Size  Location     Type
 22656 ;;		None
 22657 ;; Return value:  Size  Location     Type
 22658 ;;                  1    wreg      void 
 22659 ;; Registers used:
 22660 ;;		None
 22661 ;; Tracked objects:
 22662 ;;		On entry : 0/0
 22663 ;;		On exit  : 0/0
 22664 ;;		Unchanged: 0/0
 22665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22670 ;;Total ram usage:        0 bytes
 22671 ;; Hardware stack levels used:    1
 22672 ;; This function calls:
 22673 ;;		Nothing
 22674 ;; This function is called by:
 22675 ;;		_TMR0_Initialize
 22676 ;;		_TMR0_ISR
 22677 ;; This function uses a non-reentrant model
 22678 ;;
 22679                           
 22680                           
 22681                           ;psect for function _TMR0_DefaultInterruptHandler
 22682  1E52                     _TMR0_DefaultInterruptHandler:	
 22683                           
 22684                           ;incstack = 0
 22685 ;; hardware stack exceeded
 22686                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 22687  1E52  0008               	return
 22688  1E53                     __end_of_TMR0_DefaultInterruptHandler:	
 22689                           
 22690                           	psect	text91
 22691  0EAE                     __ptext91:	
 22692 ;; *************** function _I2C1_ISR *****************
 22693 ;; Defined at:
 22694 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 22695 ;; Parameters:    Size  Location     Type
 22696 ;;		None
 22697 ;; Auto vars:     Size  Location     Type
 22698 ;;		None
 22699 ;; Return value:  Size  Location     Type
 22700 ;;                  1    wreg      void 
 22701 ;; Registers used:
 22702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22703 ;; Tracked objects:
 22704 ;;		On entry : 0/0
 22705 ;;		On exit  : 0/0
 22706 ;;		Unchanged: 0/0
 22707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22710 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22712 ;;Total ram usage:        4 bytes
 22713 ;; Hardware stack levels used:    1
 22714 ;; Hardware stack levels required when called:    1
 22715 ;; This function calls:
 22716 ;;		_I2C1_FunctionComplete
 22717 ;;		_I2C1_Stop
 22718 ;; This function is called by:
 22719 ;;		_INTERRUPT_InterruptManager
 22720 ;; This function uses a non-reentrant model
 22721 ;;
 22722                           
 22723                           
 22724                           ;psect for function _I2C1_ISR
 22725  0EAE                     _I2C1_ISR:	
 22726                           
 22727                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 22728                           
 22729                           ;incstack = 0
 22730 ;; hardware stack exceeded
 22731                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22732  0EAE  014E               	movlb	14	; select bank14
 22733  0EAF  100F               	bcf	15,0	;volatile
 22734                           
 22735                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 22736  0EB0  0143               	movlb	3	; select bank3
 22737  0EB1  1F90               	btfss	16,7	;volatile
 22738  0EB2  2FD3               	goto	i1l8305
 22739                           
 22740                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 22741  0EB3  1390               	bcf	16,7	;volatile
 22742                           
 22743                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 22744  0EB4  0141               	movlb	1	; select bank1
 22745  0EB5  01C6               	clrf	_i2c1_state^(0+128)
 22746                           
 22747                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 22748  0EB6  0871               	movf	_p_i2c1_current,w
 22749  0EB7  3E02               	addlw	2
 22750  0EB8  0086               	movwf	6
 22751  0EB9  3001               	movlw	1	; select bank2/3
 22752  0EBA  0087               	movwf	7
 22753  0EBB  0801               	movf	1,w
 22754  0EBC  0086               	movwf	6
 22755  0EBD  0187               	clrf	7
 22756  0EBE  0181               	clrf	1
 22757  0EBF  0A81               	incf	1,f
 22758                           
 22759                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 22760  0EC0  01F1               	clrf	_p_i2c1_current
 22761  0EC1  0008               	return
 22762  0EC2                     i1l547:	
 22763                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 22764                           
 22765                           
 22766                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 22767  0EC2  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 22768  0EC3  0008               	return
 22769                           
 22770                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 22771  0EC4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22772  0EC5  00F9               	movwf	??_I2C1_ISR
 22773  0EC6  0879               	movf	??_I2C1_ISR,w
 22774  0EC7  00F1               	movwf	_p_i2c1_current
 22775                           
 22776                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 22777  0EC8  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22778  0EC9  0086               	movwf	6
 22779  0ECA  3001               	movlw	1	; select bank2/3
 22780  0ECB  0087               	movwf	7
 22781  0ECC  0801               	movf	1,w
 22782  0ECD  00F9               	movwf	??_I2C1_ISR
 22783  0ECE  0879               	movf	??_I2C1_ISR,w
 22784  0ECF  00C5               	movwf	_i2c1_trb_count^(0+128)
 22785                           
 22786                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 22787  0ED0  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22788  0ED1  0086               	movwf	6
 22789  0ED2  3001               	movlw	1	; select bank2/3
 22790  0ED3  0087               	movwf	7
 22791  0ED4  3001               	movlw	1	; select bank2/3
 22792  0ED5  3F41               	moviw [1]fsr1
 22793  0ED6  00F2               	movwf	_p_i2c1_trb_current
 22794                           
 22795                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 22796  0ED7  3003               	movlw	3
 22797  0ED8  00F9               	movwf	??_I2C1_ISR
 22798  0ED9  0879               	movf	??_I2C1_ISR,w
 22799  0EDA  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 22800                           
 22801                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 22802  0EDB  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22803  0EDC  3A67               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 22804  0EDD  1D03               	skipz
 22805  0EDE  2EE3               	goto	i1l8193
 22806                           
 22807                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 22808  0EDF  3064               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 22809  0EE0  00F9               	movwf	??_I2C1_ISR
 22810  0EE1  0879               	movf	??_I2C1_ISR,w
 22811  0EE2  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 22812  0EE3                     i1l8193:	
 22813                           
 22814                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 22815  0EE3  1022               	bcf	(_i2c1_object^(0+128)+2),0
 22816                           
 22817                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 22818  0EE4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22819  0EE5  0620               	xorwf	_i2c1_object^(0+128),w
 22820  0EE6  1903               	btfsc	3,2
 22821                           
 22822                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 22823  0EE7  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 22824                           
 22825                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 22826                           
 22827                           ;mcc_generated_files/i2c1.c: 290:                 }
 22828  0EE8  0143               	movlb	3	; select bank3
 22829  0EE9  1411               	bsf	17,0	;volatile
 22830  0EEA                     i1l8197:	
 22831                           
 22832                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 22833  0EEA  3002               	movlw	2
 22834  0EEB  00F9               	movwf	??_I2C1_ISR
 22835  0EEC  0879               	movf	??_I2C1_ISR,w
 22836  0EED  0141               	movlb	1	; select bank1
 22837  0EEE  00C6               	movwf	_i2c1_state^(0+128)
 22838  0EEF  0008               	return
 22839  0EF0                     i1l552:	
 22840                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 22841                           
 22842  0EF0  2F7C               	goto	i1l573
 22843  0EF1                     i1l553:	
 22844                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 22845                           
 22846                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 22847                           
 22848                           
 22849                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 22850  0EF1  0143               	movlb	3	; select bank3
 22851  0EF2  1F11               	btfss	17,6	;volatile
 22852  0EF3  2EFD               	goto	i1l8205
 22853                           
 22854                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 22855  0EF4  3001               	movlw	1
 22856  0EF5  00F9               	movwf	??_I2C1_ISR
 22857  0EF6  0879               	movf	??_I2C1_ISR,w
 22858  0EF7  0141               	movlb	1	; select bank1
 22859  0EF8  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22860                           
 22861                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 22862  0EF9  3004               	movlw	4
 22863  0EFA  3190  20A2         	fcall	_I2C1_Stop
 22864                           
 22865                           ;mcc_generated_files/i2c1.c: 319:             }
 22866  0EFC  0008               	return
 22867  0EFD                     i1l8205:	
 22868                           
 22869                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 22870  0EFD  0876               	movf	I2C1_ISR@i2c_address+1,w
 22871  0EFE  00FA               	movwf	??_I2C1_ISR+1
 22872  0EFF  0875               	movf	I2C1_ISR@i2c_address,w
 22873  0F00  00F9               	movwf	??_I2C1_ISR
 22874  0F01  36FA               	lsrf	??_I2C1_ISR+1,f
 22875  0F02  0CF9               	rrf	??_I2C1_ISR,f
 22876  0F03  0879               	movf	??_I2C1_ISR,w
 22877  0F04  008C               	movwf	12	;volatile
 22878                           
 22879                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 22880  0F05  1C75               	btfss	I2C1_ISR@i2c_address,0
 22881  0F06  2F0D               	goto	i1l8211
 22882                           
 22883                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 22884  0F07  300B               	movlw	11
 22885  0F08  00F9               	movwf	??_I2C1_ISR
 22886  0F09  0879               	movf	??_I2C1_ISR,w
 22887  0F0A  0141               	movlb	1	; select bank1
 22888  0F0B  00C6               	movwf	_i2c1_state^(0+128)
 22889                           
 22890                           ;mcc_generated_files/i2c1.c: 331:                 }
 22891  0F0C  0008               	return
 22892  0F0D                     i1l8211:	
 22893                           
 22894                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 22895  0F0D  3003               	movlw	3
 22896  0F0E  00F9               	movwf	??_I2C1_ISR
 22897  0F0F  0879               	movf	??_I2C1_ISR,w
 22898  0F10  0141               	movlb	1	; select bank1
 22899  0F11  00C6               	movwf	_i2c1_state^(0+128)
 22900  0F12  0008               	return
 22901  0F13                     i1l558:	
 22902                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 22903                           
 22904                           
 22905                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 22906  0F13  0143               	movlb	3	; select bank3
 22907  0F14  1F11               	btfss	17,6	;volatile
 22908  0F15  2F1F               	goto	i1l559
 22909                           
 22910                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 22911  0F16  3001               	movlw	1
 22912  0F17  00F9               	movwf	??_I2C1_ISR
 22913  0F18  0879               	movf	??_I2C1_ISR,w
 22914  0F19  0141               	movlb	1	; select bank1
 22915  0F1A  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22916                           
 22917                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 22918  0F1B  3004               	movlw	4
 22919  0F1C  3190  20A2         	fcall	_I2C1_Stop
 22920                           
 22921                           ;mcc_generated_files/i2c1.c: 347:             }
 22922  0F1E  0008               	return
 22923  0F1F                     i1l559:	
 22924                           ;mcc_generated_files/i2c1.c: 348:             else
 22925                           
 22926                           
 22927                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 22928  0F1F  1491               	bsf	17,1	;volatile
 22929                           
 22930                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 22931  0F20  0876               	movf	I2C1_ISR@i2c_address+1,w
 22932  0F21  00FA               	movwf	??_I2C1_ISR+1
 22933  0F22  0875               	movf	I2C1_ISR@i2c_address,w
 22934  0F23  00F9               	movwf	??_I2C1_ISR
 22935  0F24  087A               	movf	??_I2C1_ISR+1,w
 22936  0F25  00F9               	movwf	??_I2C1_ISR
 22937  0F26  01FA               	clrf	??_I2C1_ISR+1
 22938  0F27  3006               	movlw	6
 22939  0F28  0579               	andwf	??_I2C1_ISR,w
 22940  0F29  00FB               	movwf	??_I2C1_ISR+2
 22941  0F2A  3000               	movlw	0
 22942  0F2B  057A               	andwf	??_I2C1_ISR+1,w
 22943  0F2C  00FC               	movwf	??_I2C1_ISR+3
 22944  0F2D  30F0               	movlw	240
 22945  0F2E  047B               	iorwf	??_I2C1_ISR+2,w
 22946  0F2F  00F5               	movwf	I2C1_ISR@i2c_address
 22947  0F30  3000               	movlw	0
 22948  0F31  047C               	iorwf	??_I2C1_ISR+3,w
 22949  0F32  00F6               	movwf	I2C1_ISR@i2c_address+1
 22950                           
 22951                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 22952  0F33  1475               	bsf	I2C1_ISR@i2c_address,0
 22953                           
 22954                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 22955  0F34  0141               	movlb	1	; select bank1
 22956  0F35  01C2               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 22957  0F36  0AC2               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 22958  0F37  2EEA               	goto	i1l8197
 22959  0F38                     i1l8225:	
 22960                           
 22961                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 22962  0F38  0342               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 22963  0F39  1903               	btfsc	3,2
 22964  0F3A  2F51               	goto	i1l8245
 22965                           
 22966                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 22967  0F3B  0872               	movf	_p_i2c1_trb_current,w
 22968  0F3C  0086               	movwf	6
 22969  0F3D  3001               	movlw	1	; select bank2/3
 22970  0F3E  0087               	movwf	7
 22971  0F3F  3F40               	moviw [0]fsr1
 22972  0F40  00F5               	movwf	I2C1_ISR@i2c_address
 22973  0F41  3F41               	moviw [1]fsr1
 22974  0F42  00F6               	movwf	I2C1_ISR@i2c_address+1
 22975                           
 22976                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 22977  0F43  0872               	movf	_p_i2c1_trb_current,w
 22978  0F44  0086               	movwf	6
 22979  0F45  3001               	movlw	1	; select bank2/3
 22980  0F46  0087               	movwf	7
 22981  0F47  3001               	movlw	1	; select bank2/3
 22982  0F48  3F43               	moviw [3]fsr1
 22983  0F49  00C4               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 22984                           
 22985                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 22986  0F4A  0872               	movf	_p_i2c1_trb_current,w
 22987  0F4B  0086               	movwf	6
 22988  0F4C  3001               	movlw	1	; select bank2/3
 22989  0F4D  0087               	movwf	7
 22990  0F4E  3001               	movlw	1	; select bank2/3
 22991  0F4F  3F42               	moviw [2]fsr1
 22992  0F50  00C3               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 22993  0F51                     i1l8245:	
 22994                           
 22995                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 22996  0F51  0875               	movf	I2C1_ISR@i2c_address,w
 22997  0F52  0143               	movlb	3	; select bank3
 22998  0F53  008C               	movwf	12	;volatile
 22999                           
 23000                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 23001  0F54  1C75               	btfss	I2C1_ISR@i2c_address,0
 23002  0F55  2F0D               	goto	i1l8211
 23003                           
 23004                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 23005  0F56  3005               	movlw	5
 23006  0F57  00F9               	movwf	??_I2C1_ISR
 23007  0F58  0879               	movf	??_I2C1_ISR,w
 23008  0F59  0141               	movlb	1	; select bank1
 23009  0F5A  00C6               	movwf	_i2c1_state^(0+128)
 23010                           
 23011                           ;mcc_generated_files/i2c1.c: 419:                 }
 23012  0F5B  0008               	return
 23013  0F5C                     i1l569:	
 23014                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 23015                           
 23016                           
 23017                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 23018  0F5C  0143               	movlb	3	; select bank3
 23019  0F5D  1F11               	btfss	17,6	;volatile
 23020  0F5E  2F6A               	goto	i1l8259
 23021                           
 23022                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 23023  0F5F  3001               	movlw	1
 23024  0F60  00F9               	movwf	??_I2C1_ISR
 23025  0F61  0879               	movf	??_I2C1_ISR,w
 23026  0F62  0141               	movlb	1	; select bank1
 23027  0F63  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23028                           
 23029                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 23030  0F64  0143               	movlb	3	; select bank3
 23031  0F65  1311               	bcf	17,6	;volatile
 23032                           
 23033                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 23034  0F66  3005               	movlw	5
 23035  0F67  3190  20A2         	fcall	_I2C1_Stop
 23036                           
 23037                           ;mcc_generated_files/i2c1.c: 442:             }
 23038  0F69  0008               	return
 23039  0F6A                     i1l8259:	
 23040                           
 23041                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 23042  0F6A  3001               	movlw	1
 23043  0F6B  0141               	movlb	1	; select bank1
 23044  0F6C  02C3               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 23045  0F6D  0A43               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 23046  0F6E  1D03               	btfss	3,2
 23047  0F6F  2F7F               	goto	i1l8267
 23048                           
 23049                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 23050  0F70  3004               	movlw	4
 23051  0F71  00F9               	movwf	??_I2C1_ISR
 23052  0F72  0879               	movf	??_I2C1_ISR,w
 23053  0F73  07F2               	addwf	_p_i2c1_trb_current,f
 23054                           
 23055                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 23056  0F74  3001               	movlw	1
 23057  0F75  02C5               	subwf	_i2c1_trb_count^(0+128),f
 23058  0F76  1D03               	btfss	3,2
 23059  0F77  2F7C               	goto	i1l573
 23060                           
 23061                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 23062  0F78  3000               	movlw	0
 23063  0F79  3190  20A2         	fcall	_I2C1_Stop
 23064                           
 23065                           ;mcc_generated_files/i2c1.c: 457:                     }
 23066  0F7B  0008               	return
 23067  0F7C                     i1l573:	
 23068                           ;mcc_generated_files/i2c1.c: 458:                     else
 23069                           
 23070                           
 23071                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 23072  0F7C  0143               	movlb	3	; select bank3
 23073  0F7D  1491               	bsf	17,1	;volatile
 23074  0F7E  2EEA               	goto	i1l8197
 23075  0F7F                     i1l8267:	
 23076                           
 23077                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 23078  0F7F  0844               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 23079  0F80  0086               	movwf	6
 23080  0F81  0187               	clrf	7
 23081  0F82  0801               	movf	1,w
 23082  0F83  0143               	movlb	3	; select bank3
 23083  0F84  008C               	movwf	12	;volatile
 23084  0F85  3001               	movlw	1
 23085  0F86  00F9               	movwf	??_I2C1_ISR
 23086  0F87  0879               	movf	??_I2C1_ISR,w
 23087  0F88  0141               	movlb	1	; select bank1
 23088  0F89  07C4               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 23089  0F8A  0008               	return
 23090  0F8B                     i1l576:	
 23091                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 23092                           
 23093                           
 23094                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 23095  0F8B  0143               	movlb	3	; select bank3
 23096  0F8C  1F11               	btfss	17,6	;volatile
 23097  0F8D  2F99               	goto	i1l577
 23098                           
 23099                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 23100  0F8E  3001               	movlw	1
 23101  0F8F  00F9               	movwf	??_I2C1_ISR
 23102  0F90  0879               	movf	??_I2C1_ISR,w
 23103  0F91  0141               	movlb	1	; select bank1
 23104  0F92  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23105                           
 23106                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 23107  0F93  3004               	movlw	4
 23108  0F94  3190  20A2         	fcall	_I2C1_Stop
 23109                           
 23110                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 23111  0F96  0143               	movlb	3	; select bank3
 23112  0F97  1311               	bcf	17,6	;volatile
 23113                           
 23114                           ;mcc_generated_files/i2c1.c: 495:             }
 23115  0F98  0008               	return
 23116  0F99                     i1l577:	
 23117                           ;mcc_generated_files/i2c1.c: 496:             else
 23118                           
 23119                           
 23120                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 23121  0F99  1591               	bsf	17,3	;volatile
 23122                           
 23123                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 23124  0F9A  3008               	movlw	8
 23125  0F9B  00F9               	movwf	??_I2C1_ISR
 23126  0F9C  0879               	movf	??_I2C1_ISR,w
 23127  0F9D  0141               	movlb	1	; select bank1
 23128  0F9E  00C6               	movwf	_i2c1_state^(0+128)
 23129  0F9F  0008               	return
 23130  0FA0                     i1l8279:	
 23131                           
 23132                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 23133  0FA0  3008               	movlw	8
 23134  0FA1  00F9               	movwf	??_I2C1_ISR
 23135  0FA2  0879               	movf	??_I2C1_ISR,w
 23136  0FA3  00C6               	movwf	_i2c1_state^(0+128)
 23137                           
 23138                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 23139  0FA4  0143               	movlb	3	; select bank3
 23140  0FA5  1591               	bsf	17,3	;volatile
 23141                           
 23142                           ;mcc_generated_files/i2c1.c: 513:             break;
 23143  0FA6  0008               	return
 23144  0FA7                     i1l8283:	
 23145                           
 23146                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 23147  0FA7  0143               	movlb	3	; select bank3
 23148  0FA8  080C               	movf	12,w	;volatile
 23149  0FA9  00F9               	movwf	??_I2C1_ISR
 23150  0FAA  0141               	movlb	1	; select bank1
 23151  0FAB  0844               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 23152  0FAC  0086               	movwf	6
 23153  0FAD  0187               	clrf	7
 23154  0FAE  0879               	movf	??_I2C1_ISR,w
 23155  0FAF  0081               	movwf	1
 23156  0FB0  3001               	movlw	1
 23157  0FB1  00F9               	movwf	??_I2C1_ISR
 23158  0FB2  0879               	movf	??_I2C1_ISR,w
 23159  0FB3  07C4               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 23160                           
 23161                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 23162  0FB4  3001               	movlw	1
 23163  0FB5  02C3               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 23164  0FB6  1903               	btfsc	3,2
 23165  0FB7  2FC0               	goto	i1l581
 23166                           
 23167                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 23168  0FB8  0143               	movlb	3	; select bank3
 23169  0FB9  1291               	bcf	17,5	;volatile
 23170                           
 23171                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 23172  0FBA  3006               	movlw	6
 23173  0FBB  00F9               	movwf	??_I2C1_ISR
 23174  0FBC  0879               	movf	??_I2C1_ISR,w
 23175  0FBD  0141               	movlb	1	; select bank1
 23176  0FBE  00C6               	movwf	_i2c1_state^(0+128)
 23177                           
 23178                           ;mcc_generated_files/i2c1.c: 532:             }
 23179  0FBF  2FC4               	goto	i1l8295
 23180  0FC0                     i1l581:	
 23181                           ;mcc_generated_files/i2c1.c: 533:             else
 23182                           
 23183                           
 23184                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 23185  0FC0  0143               	movlb	3	; select bank3
 23186  0FC1  1691               	bsf	17,5	;volatile
 23187                           
 23188                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 23189  0FC2  319F  2791         	fcall	_I2C1_FunctionComplete
 23190  0FC4                     i1l8295:	
 23191                           
 23192                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 23193  0FC4  0143               	movlb	3	; select bank3
 23194  0FC5  1611               	bsf	17,4	;volatile
 23195                           
 23196                           ;mcc_generated_files/i2c1.c: 545:             break;
 23197  0FC6  0008               	return
 23198  0FC7                     i1l8297:	
 23199                           
 23200                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 23201  0FC7  3000               	movlw	0
 23202  0FC8  3190  20A2         	fcall	_I2C1_Stop
 23203                           
 23204                           ;mcc_generated_files/i2c1.c: 552:             break;
 23205  0FCA  0008               	return
 23206  0FCB                     i1l8299:	
 23207                           
 23208                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 23209  0FCB  3001               	movlw	1
 23210  0FCC  00F9               	movwf	??_I2C1_ISR
 23211  0FCD  0879               	movf	??_I2C1_ISR,w
 23212  0FCE  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23213                           
 23214                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 23215  0FCF  3006               	movlw	6
 23216  0FD0  3190  20A2         	fcall	_I2C1_Stop
 23217                           
 23218                           ;mcc_generated_files/i2c1.c: 560:             break;
 23219  0FD2  0008               	return
 23220  0FD3                     i1l8305:	
 23221  0FD3  0141               	movlb	1	; select bank1
 23222  0FD4  0846               	movf	_i2c1_state^(0+128),w
 23223  0FD5  00F9               	movwf	??_I2C1_ISR
 23224  0FD6  01FA               	clrf	??_I2C1_ISR+1
 23225                           
 23226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23227                           ; Switch size 1, requested type "simple"
 23228                           ; Number of cases is 1, Range of values is 0 to 0
 23229                           ; switch strategies available:
 23230                           ; Name         Instructions Cycles
 23231                           ; simple_byte            4     3 (average)
 23232                           ; direct_byte            8     6 (fixed)
 23233                           ; jumptable            260     6 (fixed)
 23234                           ;	Chosen strategy is simple_byte
 23235  0FD7  087A               	movf	??_I2C1_ISR+1,w
 23236  0FD8  3A00               	xorlw	0	; case 0
 23237  0FD9  1903               	skipnz
 23238  0FDA  2FDC               	goto	i1l9055
 23239  0FDB  2FCB               	goto	i1l8299
 23240  0FDC                     i1l9055:	
 23241                           
 23242                           ; Switch size 1, requested type "simple"
 23243                           ; Number of cases is 11, Range of values is 0 to 11
 23244                           ; switch strategies available:
 23245                           ; Name         Instructions Cycles
 23246                           ; direct_byte           30     6 (fixed)
 23247                           ; simple_byte           34    18 (average)
 23248                           ; jumptable            260     6 (fixed)
 23249                           ;	Chosen strategy is simple_byte
 23250  0FDC  0879               	movf	??_I2C1_ISR,w
 23251  0FDD  3A00               	xorlw	0	; case 0
 23252  0FDE  1903               	skipnz
 23253  0FDF  2EC2               	goto	i1l547
 23254  0FE0  3A01               	xorlw	1	; case 1
 23255  0FE1  1903               	skipnz
 23256  0FE2  2EF0               	goto	i1l552
 23257  0FE3  3A03               	xorlw	3	; case 2
 23258  0FE4  1903               	skipnz
 23259  0FE5  2F38               	goto	i1l8225
 23260  0FE6  3A01               	xorlw	1	; case 3
 23261  0FE7  1903               	skipnz
 23262  0FE8  2F5C               	goto	i1l569
 23263  0FE9  3A07               	xorlw	7	; case 4
 23264  0FEA  1903               	skipnz
 23265  0FEB  2FC7               	goto	i1l8297
 23266  0FEC  3A01               	xorlw	1	; case 5
 23267  0FED  1903               	skipnz
 23268  0FEE  2F8B               	goto	i1l576
 23269  0FEF  3A03               	xorlw	3	; case 6
 23270  0FF0  1903               	skipnz
 23271  0FF1  2FA0               	goto	i1l8279
 23272  0FF2  3A01               	xorlw	1	; case 7
 23273  0FF3  1903               	skipnz
 23274  0FF4  2FC7               	goto	i1l8297
 23275  0FF5  3A0F               	xorlw	15	; case 8
 23276  0FF6  1903               	skipnz
 23277  0FF7  2FA7               	goto	i1l8283
 23278  0FF8  3A02               	xorlw	2	; case 10
 23279  0FF9  1903               	skipnz
 23280  0FFA  2EF1               	goto	i1l553
 23281  0FFB  3A01               	xorlw	1	; case 11
 23282  0FFC  1903               	skipnz
 23283  0FFD  2F13               	goto	i1l558
 23284  0FFE  2FCB               	goto	i1l8299
 23285  0FFF  0008               	return
 23286  1000                     __end_of_I2C1_ISR:	
 23287                           
 23288                           	psect	text92
 23289  10A2                     __ptext92:	
 23290 ;; *************** function _I2C1_Stop *****************
 23291 ;; Defined at:
 23292 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 23293 ;; Parameters:    Size  Location     Type
 23294 ;;  completion_c    1    wreg     enum E10866
 23295 ;; Auto vars:     Size  Location     Type
 23296 ;;  completion_c    1    1[COMMON] enum E10866
 23297 ;; Return value:  Size  Location     Type
 23298 ;;                  1    wreg      void 
 23299 ;; Registers used:
 23300 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23301 ;; Tracked objects:
 23302 ;;		On entry : 0/0
 23303 ;;		On exit  : 0/0
 23304 ;;		Unchanged: 0/0
 23305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23310 ;;Total ram usage:        2 bytes
 23311 ;; Hardware stack levels used:    1
 23312 ;; This function calls:
 23313 ;;		Nothing
 23314 ;; This function is called by:
 23315 ;;		_I2C1_ISR
 23316 ;; This function uses a non-reentrant model
 23317 ;;
 23318                           
 23319                           
 23320                           ;psect for function _I2C1_Stop
 23321  10A2                     _I2C1_Stop:	
 23322                           
 23323                           ;incstack = 0
 23324 ;; hardware stack exceeded
 23325                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 23326                           ;I2C1_Stop@completion_code stored from wreg
 23327  10A2  00F8               	movwf	I2C1_Stop@completion_code
 23328                           
 23329                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 23330  10A3  0143               	movlb	3	; select bank3
 23331  10A4  1511               	bsf	17,2	;volatile
 23332                           
 23333                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 23334  10A5  0871               	movf	_p_i2c1_current,w
 23335  10A6  3E02               	addlw	2
 23336  10A7  0086               	movwf	6
 23337  10A8  3001               	movlw	1	; select bank2/3
 23338  10A9  0087               	movwf	7
 23339  10AA  0801               	movf	1,w
 23340  10AB  1903               	btfsc	3,2
 23341  10AC  28B9               	goto	i1l7891
 23342                           
 23343                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 23344  10AD  0878               	movf	I2C1_Stop@completion_code,w
 23345  10AE  00F7               	movwf	??_I2C1_Stop
 23346  10AF  0871               	movf	_p_i2c1_current,w
 23347  10B0  3E02               	addlw	2
 23348  10B1  0086               	movwf	6
 23349  10B2  3001               	movlw	1	; select bank2/3
 23350  10B3  0087               	movwf	7
 23351  10B4  0801               	movf	1,w
 23352  10B5  0086               	movwf	6
 23353  10B6  0187               	clrf	7
 23354  10B7  0877               	movf	??_I2C1_Stop,w
 23355  10B8  0081               	movwf	1
 23356  10B9                     i1l7891:	
 23357                           
 23358                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 23359  10B9  0141               	movlb	1	; select bank1
 23360  10BA  01C6               	clrf	_i2c1_state^(0+128)
 23361  10BB  0008               	return
 23362  10BC                     __end_of_I2C1_Stop:	
 23363                           
 23364                           	psect	text93
 23365  1F91                     __ptext93:	
 23366 ;; *************** function _I2C1_FunctionComplete *****************
 23367 ;; Defined at:
 23368 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 23369 ;; Parameters:    Size  Location     Type
 23370 ;;		None
 23371 ;; Auto vars:     Size  Location     Type
 23372 ;;		None
 23373 ;; Return value:  Size  Location     Type
 23374 ;;                  1    wreg      void 
 23375 ;; Registers used:
 23376 ;;		wreg, status,2, status,0
 23377 ;; Tracked objects:
 23378 ;;		On entry : 0/0
 23379 ;;		On exit  : 0/0
 23380 ;;		Unchanged: 0/0
 23381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23385 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23386 ;;Total ram usage:        1 bytes
 23387 ;; Hardware stack levels used:    1
 23388 ;; This function calls:
 23389 ;;		Nothing
 23390 ;; This function is called by:
 23391 ;;		_I2C1_ISR
 23392 ;; This function uses a non-reentrant model
 23393 ;;
 23394                           
 23395                           
 23396                           ;psect for function _I2C1_FunctionComplete
 23397  1F91                     _I2C1_FunctionComplete:	
 23398                           
 23399                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 23400                           
 23401                           ;incstack = 0
 23402 ;; hardware stack exceeded
 23403                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 23404  1F91  3004               	movlw	4
 23405  1F92  00F7               	movwf	??_I2C1_FunctionComplete
 23406  1F93  0877               	movf	??_I2C1_FunctionComplete,w
 23407  1F94  07F2               	addwf	_p_i2c1_trb_current,f
 23408                           
 23409                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 23410  1F95  3001               	movlw	1
 23411  1F96  0141               	movlb	1	; select bank1
 23412  1F97  02C5               	subwf	_i2c1_trb_count^(0+128),f
 23413  1F98  1D03               	btfss	3,2
 23414  1F99  2F9F               	goto	i1l588
 23415                           
 23416                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 23417  1F9A  3004               	movlw	4
 23418  1F9B  00F7               	movwf	??_I2C1_FunctionComplete
 23419  1F9C  0877               	movf	??_I2C1_FunctionComplete,w
 23420  1F9D  00C6               	movwf	_i2c1_state^(0+128)
 23421                           
 23422                           ;mcc_generated_files/i2c1.c: 575:     }
 23423  1F9E  0008               	return
 23424  1F9F                     i1l588:	
 23425                           ;mcc_generated_files/i2c1.c: 576:     else
 23426                           
 23427                           
 23428                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 23429  1F9F  01C6               	clrf	_i2c1_state^(0+128)
 23430  1FA0  0AC6               	incf	_i2c1_state^(0+128),f
 23431  1FA1  0008               	return
 23432  1FA2                     __end_of_I2C1_FunctionComplete:	
 23433                           
 23434                           	psect	text94
 23435  1E59                     __ptext94:	
 23436 ;; *************** function _I2C1_BusCollisionISR *****************
 23437 ;; Defined at:
 23438 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 23439 ;; Parameters:    Size  Location     Type
 23440 ;;		None
 23441 ;; Auto vars:     Size  Location     Type
 23442 ;;		None
 23443 ;; Return value:  Size  Location     Type
 23444 ;;                  1    wreg      void 
 23445 ;; Registers used:
 23446 ;;		None
 23447 ;; Tracked objects:
 23448 ;;		On entry : 0/0
 23449 ;;		On exit  : 0/0
 23450 ;;		Unchanged: 0/0
 23451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23456 ;;Total ram usage:        0 bytes
 23457 ;; Hardware stack levels used:    1
 23458 ;; This function calls:
 23459 ;;		Nothing
 23460 ;; This function is called by:
 23461 ;;		_INTERRUPT_InterruptManager
 23462 ;; This function uses a non-reentrant model
 23463 ;;
 23464                           
 23465                           
 23466                           ;psect for function _I2C1_BusCollisionISR
 23467  1E59                     _I2C1_BusCollisionISR:	
 23468                           
 23469                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 23470                           
 23471                           ;incstack = 0
 23472 ;; hardware stack exceeded
 23473                           ; Regs used in _I2C1_BusCollisionISR: []
 23474  1E59  014E               	movlb	14	; select bank14
 23475  1E5A  108F               	bcf	15,1	;volatile
 23476  1E5B  0008               	return
 23477  1E5C                     __end_of_I2C1_BusCollisionISR:	
 23478                           
 23479                           	psect	text95
 23480  131A                     __ptext95:	
 23481 ;; *************** function _DMX_interrupt *****************
 23482 ;; Defined at:
 23483 ;;		line 54 in file "dmx.c"
 23484 ;; Parameters:    Size  Location     Type
 23485 ;;		None
 23486 ;; Auto vars:     Size  Location     Type
 23487 ;;  dummy           1    6[COMMON] volatile unsigned char 
 23488 ;; Return value:  Size  Location     Type
 23489 ;;                  1    wreg      void 
 23490 ;; Registers used:
 23491 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23492 ;; Tracked objects:
 23493 ;;		On entry : 0/0
 23494 ;;		On exit  : 0/0
 23495 ;;		Unchanged: 0/0
 23496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23499 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23500 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23501 ;;Total ram usage:        7 bytes
 23502 ;; Hardware stack levels used:    1
 23503 ;; This function calls:
 23504 ;;		Nothing
 23505 ;; This function is called by:
 23506 ;;		_DMX_init
 23507 ;;		_INTERRUPT_InterruptManager
 23508 ;; This function uses a non-reentrant model
 23509 ;;
 23510                           
 23511                           
 23512                           ;psect for function _DMX_interrupt
 23513  131A                     _DMX_interrupt:	
 23514                           
 23515                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 23516                           
 23517                           ;incstack = 0
 23518 ;; hardware stack exceeded
 23519                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 23520  131A  0142               	movlb	2	; select bank2
 23521  131B  1C9D               	btfss	29,1	;volatile
 23522  131C  2B1F               	goto	i1l8715
 23523                           
 23524                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 23525  131D  121D               	bcf	29,4	;volatile
 23526                           
 23527                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 23528  131E  161D               	bsf	29,4	;volatile
 23529  131F                     i1l8715:	
 23530                           
 23531                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 23532  131F  0867               	movf	_initial^(0+256),w
 23533  1320  0468               	iorwf	(_initial+1)^(0+256),w
 23534  1321  1903               	btfsc	3,2
 23535  1322  191D               	btfsc	29,2	;volatile
 23536  1323  2B40               	goto	i1l8723
 23537                           
 23538                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 23539  1324  0819               	movf	25,w	;volatile
 23540  1325  00F7               	movwf	??_DMX_interrupt
 23541  1326  01F8               	clrf	??_DMX_interrupt+1
 23542  1327  0831               	movf	(_arrayIndex+1)^(0+256),w
 23543  1328  00FA               	movwf	??_DMX_interrupt+3
 23544  1329  0830               	movf	_arrayIndex^(0+256),w
 23545  132A  00F9               	movwf	??_DMX_interrupt+2
 23546  132B  35F9               	lslf	??_DMX_interrupt+2,f
 23547  132C  0DFA               	rlf	??_DMX_interrupt+3,f
 23548  132D  30EE               	movlw	238
 23549  132E  00FB               	movwf	??_DMX_interrupt+4
 23550  132F  3023               	movlw	35
 23551  1330  00FC               	movwf	??_DMX_interrupt+5
 23552  1331  0879               	movf	??_DMX_interrupt+2,w
 23553  1332  077B               	addwf	??_DMX_interrupt+4,w
 23554  1333  0086               	movwf	6
 23555  1334  087A               	movf	??_DMX_interrupt+3,w
 23556  1335  3D7C               	addwfc	??_DMX_interrupt+5,w
 23557  1336  0087               	movwf	7
 23558  1337  0877               	movf	??_DMX_interrupt,w
 23559  1338  3FC0               	movwi [0]fsr1
 23560  1339  0878               	movf	??_DMX_interrupt+1,w
 23561  133A  3FC1               	movwi [1]fsr1
 23562                           
 23563                           ;dmx.c: 63:         arrayIndex += 1;
 23564  133B  3001               	movlw	1
 23565  133C  07B0               	addwf	_arrayIndex^(0+256),f
 23566  133D  3000               	movlw	0
 23567  133E  3DB1               	addwfc	(_arrayIndex+1)^(0+256),f
 23568                           
 23569                           ;dmx.c: 64:     } else {
 23570  133F  2B48               	goto	i1l8727
 23571  1340                     i1l8723:	
 23572                           
 23573                           ;dmx.c: 65:         arrayIndex = 0;
 23574  1340  01B0               	clrf	_arrayIndex^(0+256)
 23575  1341  01B1               	clrf	(_arrayIndex+1)^(0+256)
 23576                           
 23577                           ;dmx.c: 66:         initial = 0;
 23578  1342  01E7               	clrf	_initial^(0+256)
 23579  1343  01E8               	clrf	(_initial+1)^(0+256)
 23580                           
 23581                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 23582  1344  0819               	movf	25,w	;volatile
 23583  1345  00F7               	movwf	??_DMX_interrupt
 23584  1346  0877               	movf	??_DMX_interrupt,w
 23585  1347  00FD               	movwf	DMX_interrupt@dummy	;volatile
 23586  1348                     i1l8727:	
 23587                           
 23588                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 23589  1348  014E               	movlb	14	; select bank14
 23590  1349  128F               	bcf	15,5	;volatile
 23591  134A  0008               	return
 23592  134B                     __end_of_DMX_interrupt:	
 23593                           
 23594                           	psect	text96
 23595  13E6                     __ptext96:	
 23596 ;; *************** function _EUSART1_Receive_ISR *****************
 23597 ;; Defined at:
 23598 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 23599 ;; Parameters:    Size  Location     Type
 23600 ;;		None
 23601 ;; Auto vars:     Size  Location     Type
 23602 ;;		None
 23603 ;; Return value:  Size  Location     Type
 23604 ;;                  1    wreg      void 
 23605 ;; Registers used:
 23606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23607 ;; Tracked objects:
 23608 ;;		On entry : 0/0
 23609 ;;		On exit  : 0/0
 23610 ;;		Unchanged: 0/0
 23611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23616 ;;Total ram usage:        0 bytes
 23617 ;; Hardware stack levels used:    1
 23618 ;; Hardware stack levels required when called:    2
 23619 ;; This function calls:
 23620 ;;		Absolute function
 23621 ;;		_EUSART1_DefaultErrorHandler
 23622 ;;		_EUSART1_DefaultFramingErrorHandler
 23623 ;;		_EUSART1_DefaultOverrunErrorHandler
 23624 ;;		_EUSART1_RxDataHandler
 23625 ;; This function is called by:
 23626 ;;		_EUSART1_Initialize
 23627 ;;		_INTERRUPT_InterruptManager
 23628 ;; This function uses a non-reentrant model
 23629 ;;
 23630                           
 23631                           
 23632                           ;psect for function _EUSART1_Receive_ISR
 23633  13E6                     _EUSART1_Receive_ISR:	
 23634                           
 23635                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 23636                           
 23637                           ;incstack = 0
 23638 ;; hardware stack exceeded
 23639                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23640  13E6  0874               	movf	_eusart1RxHead,w	;volatile
 23641  13E7  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23642  13E8  0086               	movwf	6
 23643  13E9  3001               	movlw	1	; select bank2/3
 23644  13EA  0087               	movwf	7
 23645  13EB  0181               	clrf	1
 23646                           
 23647                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 23648  13EC  0142               	movlb	2	; select bank2
 23649  13ED  1D1D               	btfss	29,2	;volatile
 23650  13EE  2BFB               	goto	i1l8149
 23651                           
 23652                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 23653  13EF  0874               	movf	_eusart1RxHead,w	;volatile
 23654  13F0  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23655  13F1  0086               	movwf	6
 23656  13F2  3001               	movlw	1	; select bank2/3
 23657  13F3  0087               	movwf	7
 23658  13F4  1481               	bsf	1,1
 23659                           
 23660                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 23661  13F5  0144               	movlb	4	; select bank4
 23662  13F6  0869               	movf	(_EUSART1_FramingErrorHandler+1)^(0+512),w
 23663  13F7  008A               	movwf	10
 23664  13F8  0868               	movf	_EUSART1_FramingErrorHandler^(0+512),w
 23665  13F9  000A               	callw
 23666  13FA  3193               	pagesel	$
 23667  13FB                     i1l8149:	
 23668                           
 23669                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 23670  13FB  0142               	movlb	2	; select bank2
 23671  13FC  1C9D               	btfss	29,1	;volatile
 23672  13FD  2C0A               	goto	i1l8155
 23673                           
 23674                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 23675  13FE  0874               	movf	_eusart1RxHead,w	;volatile
 23676  13FF  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23677  1400  0086               	movwf	6
 23678  1401  3001               	movlw	1	; select bank2/3
 23679  1402  0087               	movwf	7
 23680  1403  1501               	bsf	1,2
 23681                           
 23682                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 23683  1404  0144               	movlb	4	; select bank4
 23684  1405  0867               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+512),w
 23685  1406  008A               	movwf	10
 23686  1407  0866               	movf	_EUSART1_OverrunErrorHandler^(0+512),w
 23687  1408  000A               	callw
 23688  1409  3193               	pagesel	$
 23689  140A                     i1l8155:	
 23690                           
 23691                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 23692  140A  0874               	movf	_eusart1RxHead,w	;volatile
 23693  140B  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23694  140C  0086               	movwf	6
 23695  140D  3001               	movlw	1	; select bank2/3
 23696  140E  0087               	movwf	7
 23697  140F  0801               	movf	1,w
 23698  1410  1903               	btfsc	3,2
 23699  1411  2C19               	goto	i1l8159
 23700                           
 23701                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 23702  1412  0144               	movlb	4	; select bank4
 23703  1413  0865               	movf	(_EUSART1_ErrorHandler+1)^(0+512),w
 23704  1414  008A               	movwf	10
 23705  1415  0864               	movf	_EUSART1_ErrorHandler^(0+512),w
 23706  1416  000A               	callw
 23707  1417  3193               	pagesel	$
 23708                           
 23709                           ;mcc_generated_files/eusart1.c: 188:     } else {
 23710  1418  0008               	return
 23711  1419                     i1l8159:	
 23712                           
 23713                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 23714  1419  3190  2072         	fcall	_EUSART1_RxDataHandler
 23715  141B  0008               	return
 23716  141C                     __end_of_EUSART1_Receive_ISR:	
 23717                           
 23718                           	psect	text97
 23719  07FC                     __ptext97:	
 23720 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 23721 ;; Defined at:
 23722 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 23723 ;; Parameters:    Size  Location     Type
 23724 ;;		None
 23725 ;; Auto vars:     Size  Location     Type
 23726 ;;		None
 23727 ;; Return value:  Size  Location     Type
 23728 ;;                  1    wreg      void 
 23729 ;; Registers used:
 23730 ;;		None
 23731 ;; Tracked objects:
 23732 ;;		On entry : 0/0
 23733 ;;		On exit  : 0/0
 23734 ;;		Unchanged: 0/0
 23735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23740 ;;Total ram usage:        0 bytes
 23741 ;; Hardware stack levels used:    1
 23742 ;; This function calls:
 23743 ;;		Nothing
 23744 ;; This function is called by:
 23745 ;;		_EUSART1_Initialize
 23746 ;;		_EUSART1_Receive_ISR
 23747 ;; This function uses a non-reentrant model
 23748 ;;
 23749                           
 23750                           
 23751                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 23752  07FC                     _EUSART1_DefaultOverrunErrorHandler:	
 23753                           
 23754                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 23755                           
 23756                           ;incstack = 0
 23757 ;; hardware stack exceeded
 23758                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 23759  07FC  0142               	movlb	2	; select bank2
 23760  07FD  121D               	bcf	29,4	;volatile
 23761                           
 23762                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 23763  07FE  161D               	bsf	29,4	;volatile
 23764  07FF  0008               	return
 23765  0800                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 23766                           
 23767                           	psect	text98
 23768  1E51                     __ptext98:	
 23769 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 23770 ;; Defined at:
 23771 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 23772 ;; Parameters:    Size  Location     Type
 23773 ;;		None
 23774 ;; Auto vars:     Size  Location     Type
 23775 ;;		None
 23776 ;; Return value:  Size  Location     Type
 23777 ;;                  1    wreg      void 
 23778 ;; Registers used:
 23779 ;;		None
 23780 ;; Tracked objects:
 23781 ;;		On entry : 0/0
 23782 ;;		On exit  : 0/0
 23783 ;;		Unchanged: 0/0
 23784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23789 ;;Total ram usage:        0 bytes
 23790 ;; Hardware stack levels used:    1
 23791 ;; This function calls:
 23792 ;;		Nothing
 23793 ;; This function is called by:
 23794 ;;		_EUSART1_Initialize
 23795 ;;		_EUSART1_Receive_ISR
 23796 ;; This function uses a non-reentrant model
 23797 ;;
 23798                           
 23799                           
 23800                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 23801  1E51                     _EUSART1_DefaultFramingErrorHandler:	
 23802                           
 23803                           ;incstack = 0
 23804 ;; hardware stack exceeded
 23805                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 23806  1E51  0008               	return
 23807  1E52                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 23808                           
 23809                           	psect	text99
 23810  1E56                     __ptext99:	
 23811 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 23812 ;; Defined at:
 23813 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 23814 ;; Parameters:    Size  Location     Type
 23815 ;;		None
 23816 ;; Auto vars:     Size  Location     Type
 23817 ;;		None
 23818 ;; Return value:  Size  Location     Type
 23819 ;;                  1    wreg      void 
 23820 ;; Registers used:
 23821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23822 ;; Tracked objects:
 23823 ;;		On entry : 0/0
 23824 ;;		On exit  : 0/0
 23825 ;;		Unchanged: 0/0
 23826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23831 ;;Total ram usage:        0 bytes
 23832 ;; Hardware stack levels used:    1
 23833 ;; Hardware stack levels required when called:    1
 23834 ;; This function calls:
 23835 ;;		_EUSART1_RxDataHandler
 23836 ;; This function is called by:
 23837 ;;		_EUSART1_Initialize
 23838 ;;		_EUSART1_Receive_ISR
 23839 ;; This function uses a non-reentrant model
 23840 ;;
 23841                           
 23842                           
 23843                           ;psect for function _EUSART1_DefaultErrorHandler
 23844  1E56                     _EUSART1_DefaultErrorHandler:	
 23845                           
 23846                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 23847                           
 23848                           ;incstack = 0
 23849 ;; hardware stack exceeded
 23850                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 23851  1E56  3190  2072         	fcall	_EUSART1_RxDataHandler
 23852  1E58  0008               	return
 23853  1E59                     __end_of_EUSART1_DefaultErrorHandler:	
 23854                           
 23855                           	psect	text100
 23856  1072                     __ptext100:	
 23857 ;; *************** function _EUSART1_RxDataHandler *****************
 23858 ;; Defined at:
 23859 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 23860 ;; Parameters:    Size  Location     Type
 23861 ;;		None
 23862 ;; Auto vars:     Size  Location     Type
 23863 ;;		None
 23864 ;; Return value:  Size  Location     Type
 23865 ;;                  1    wreg      void 
 23866 ;; Registers used:
 23867 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23868 ;; Tracked objects:
 23869 ;;		On entry : 0/0
 23870 ;;		On exit  : 0/0
 23871 ;;		Unchanged: 0/0
 23872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23877 ;;Total ram usage:        1 bytes
 23878 ;; Hardware stack levels used:    1
 23879 ;; This function calls:
 23880 ;;		Nothing
 23881 ;; This function is called by:
 23882 ;;		_EUSART1_Receive_ISR
 23883 ;;		_EUSART1_DefaultErrorHandler
 23884 ;; This function uses a non-reentrant model
 23885 ;;
 23886                           
 23887                           
 23888                           ;psect for function _EUSART1_RxDataHandler
 23889  1072                     _EUSART1_RxDataHandler:	
 23890                           
 23891                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 23892                           
 23893                           ;incstack = 0
 23894 ;; hardware stack exceeded
 23895                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 23896  1072  0142               	movlb	2	; select bank2
 23897  1073  0819               	movf	25,w	;volatile
 23898  1074  00F7               	movwf	??_EUSART1_RxDataHandler
 23899  1075  0874               	movf	_eusart1RxHead,w
 23900  1076  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 23901  1077  0086               	movwf	6
 23902  1078  3002               	movlw	2	; select bank4/5
 23903  1079  0087               	movwf	7
 23904  107A  0877               	movf	??_EUSART1_RxDataHandler,w
 23905  107B  0081               	movwf	1
 23906  107C  3001               	movlw	1
 23907  107D  00F7               	movwf	??_EUSART1_RxDataHandler
 23908  107E  0877               	movf	??_EUSART1_RxDataHandler,w
 23909  107F  07F4               	addwf	_eusart1RxHead,f	;volatile
 23910                           
 23911                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 23912  1080  3008               	movlw	8
 23913  1081  0274               	subwf	_eusart1RxHead,w	;volatile
 23914  1082  1803               	btfsc	3,0
 23915                           
 23916                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 23917  1083  01F4               	clrf	_eusart1RxHead	;volatile
 23918                           
 23919                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 23920  1084  3001               	movlw	1
 23921  1085  00F7               	movwf	??_EUSART1_RxDataHandler
 23922  1086  0877               	movf	??_EUSART1_RxDataHandler,w
 23923  1087  0141               	movlb	1	; select bank1
 23924  1088  07C8               	addwf	_eusart1RxCount^(0+128),f	;volatile
 23925  1089  0008               	return
 23926  108A                     __end_of_EUSART1_RxDataHandler:	
 23927                           
 23928                           	psect	text101
 23929  1F3B                     __ptext101:	
 23930 ;; *************** function _ADCC_ThresholdISR *****************
 23931 ;; Defined at:
 23932 ;;		line 308 in file "mcc_generated_files/adcc.c"
 23933 ;; Parameters:    Size  Location     Type
 23934 ;;		None
 23935 ;; Auto vars:     Size  Location     Type
 23936 ;;		None
 23937 ;; Return value:  Size  Location     Type
 23938 ;;                  1    wreg      void 
 23939 ;; Registers used:
 23940 ;;		wreg, status,2, status,0, pclath, cstack
 23941 ;; Tracked objects:
 23942 ;;		On entry : 0/0
 23943 ;;		On exit  : 0/0
 23944 ;;		Unchanged: 0/0
 23945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23950 ;;Total ram usage:        0 bytes
 23951 ;; Hardware stack levels used:    1
 23952 ;; Hardware stack levels required when called:    1
 23953 ;; This function calls:
 23954 ;;		Absolute function
 23955 ;;		_ADCC_DefaultInterruptHandler
 23956 ;;		_adcThresholdHandler
 23957 ;; This function is called by:
 23958 ;;		_INTERRUPT_InterruptManager
 23959 ;; This function uses a non-reentrant model
 23960 ;;
 23961                           
 23962                           
 23963                           ;psect for function _ADCC_ThresholdISR
 23964  1F3B                     _ADCC_ThresholdISR:	
 23965                           
 23966                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 23967                           
 23968                           ;incstack = 0
 23969 ;; hardware stack exceeded
 23970                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 23971  1F3B  014E               	movlb	14	; select bank14
 23972  1F3C  108D               	bcf	13,1	;volatile
 23973                           
 23974                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 23975  1F3D  0142               	movlb	2	; select bank2
 23976  1F3E  086C               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 23977  1F3F  046D               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 23978  1F40  1903               	btfsc	3,2
 23979  1F41  0008               	return
 23980                           
 23981                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 23982  1F42  086D               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 23983  1F43  008A               	movwf	10
 23984  1F44  086C               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 23985  1F45  000A               	callw
 23986  1F46  319F               	pagesel	$
 23987  1F47  0008               	return
 23988  1F48                     __end_of_ADCC_ThresholdISR:	
 23989                           
 23990                           	psect	text102
 23991  1E50                     __ptext102:	
 23992 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 23993 ;; Defined at:
 23994 ;;		line 320 in file "mcc_generated_files/adcc.c"
 23995 ;; Parameters:    Size  Location     Type
 23996 ;;		None
 23997 ;; Auto vars:     Size  Location     Type
 23998 ;;		None
 23999 ;; Return value:  Size  Location     Type
 24000 ;;                  1    wreg      void 
 24001 ;; Registers used:
 24002 ;;		None
 24003 ;; Tracked objects:
 24004 ;;		On entry : 0/0
 24005 ;;		On exit  : 0/0
 24006 ;;		Unchanged: 0/0
 24007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24012 ;;Total ram usage:        0 bytes
 24013 ;; Hardware stack levels used:    1
 24014 ;; This function calls:
 24015 ;;		Nothing
 24016 ;; This function is called by:
 24017 ;;		_ADCC_Initialize
 24018 ;;		_ADCC_ThresholdISR
 24019 ;; This function uses a non-reentrant model
 24020 ;;
 24021                           
 24022                           
 24023                           ;psect for function _ADCC_DefaultInterruptHandler
 24024  1E50                     _ADCC_DefaultInterruptHandler:	
 24025                           
 24026                           ;incstack = 0
 24027 ;; hardware stack exceeded
 24028                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 24029  1E50  0008               	return
 24030  1E51                     __end_of_ADCC_DefaultInterruptHandler:	
 24031                           
 24032                           	psect	text103
 24033  1E62                     __ptext103:	
 24034 ;; *************** function _adcThresholdHandler *****************
 24035 ;; Defined at:
 24036 ;;		line 35 in file "beat.c"
 24037 ;; Parameters:    Size  Location     Type
 24038 ;;		None
 24039 ;; Auto vars:     Size  Location     Type
 24040 ;;		None
 24041 ;; Return value:  Size  Location     Type
 24042 ;;                  1    wreg      void 
 24043 ;; Registers used:
 24044 ;;		None
 24045 ;; Tracked objects:
 24046 ;;		On entry : 0/0
 24047 ;;		On exit  : 0/0
 24048 ;;		Unchanged: 0/0
 24049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24054 ;;Total ram usage:        0 bytes
 24055 ;; Hardware stack levels used:    1
 24056 ;; This function calls:
 24057 ;;		Nothing
 24058 ;; This function is called by:
 24059 ;;		_BEAT_init
 24060 ;;		_ADCC_ThresholdISR
 24061 ;; This function uses a non-reentrant model
 24062 ;;
 24063                           
 24064                           
 24065                           ;psect for function _adcThresholdHandler
 24066  1E62                     _adcThresholdHandler:	
 24067                           
 24068                           ;beat.c: 36:     thresholdExceeded = 1;
 24069                           
 24070                           ;incstack = 0
 24071 ;; hardware stack exceeded
 24072                           ; Regs used in _adcThresholdHandler: []
 24073  1E62  0141               	movlb	1	; select bank1
 24074  1E63  01B2               	clrf	_thresholdExceeded^(0+128)
 24075  1E64  0AB2               	incf	_thresholdExceeded^(0+128),f
 24076  1E65  0008               	return
 24077  1E66                     __end_of_adcThresholdHandler:	
 24078  007E                     btemp	set	126	;btemp
 24079  007E                     int$flags	set	126
 24080  007E                     wtemp0	set	126


Data Sizes:
    Strings     133
    Constant    96
    Data        14
    BSS         359
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     30      80
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            80      0      74
    BANK5            80      0      62
    BANK6            80      0      32
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    previousTask	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK6[32]), STR_12(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK6[32]), STR_12(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_21(CODE[4]), STR_20(CODE[6]), STR_19(CODE[7]), STR_18(CODE[8]), 
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[9]), STR_14(CODE[8]), 
		 -> STR_13(CODE[7]), STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[3]), 
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK6[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S3570_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_21(CODE[4]), STR_20(CODE[6]), STR_19(CODE[7]), STR_18(CODE[8]), 
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[9]), STR_14(CODE[8]), 
		 -> STR_13(CODE[7]), STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[3]), 
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_21(CODE[4]), STR_20(CODE[6]), STR_19(CODE[7]), STR_18(CODE[8]), 
		 -> STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[9]), STR_14(CODE[8]), 
		 -> STR_13(CODE[7]), STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[3]), 
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK6[32]), 

    currentMenu.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    currentMenu.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    currentMenu.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    currentMenu.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    currentMenu.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    currentMenu	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatCont(BANK4[10]), 
		 -> beatStrobeTask(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), dmx_task(BANK3[10]), 
		 -> manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualWhite.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualWhite.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualWhite.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualWhite.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualWhite.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualWhite.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualWhite.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualWhite.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualWhite.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualWhite.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualBlue.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualBlue.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualBlue.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualBlue.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualBlue.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualBlue.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualBlue.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualBlue.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualBlue.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualBlue.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualGreen.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualGreen.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualGreen.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualGreen.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualGreen.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualGreen.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualGreen.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualGreen.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualGreen.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualGreen.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualRed.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualRed.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualRed.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualRed.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualRed.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualRed.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualRed.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualRed.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualRed.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualRed.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animationBrightnessCtrl.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animationBrightnessCtrl.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animationBrightnessCtrl.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationType.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animationType.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animationType.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationType.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationType.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animationType.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animationType.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationType.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationType.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animationType.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animationType.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationType.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixed.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatMixed.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatMixed.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixed.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixed.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatMixed.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatMixed.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixed.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixed.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatMixed.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatMixed.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixed.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixed.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatMixed.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatMixed.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixed.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatCont.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatCont.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatCont.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatCont.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatCont.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatCont.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatCont.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatCont.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatCont.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatCont.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatCont.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatCont.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatCont.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatCont.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatCont.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatCont.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFade.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatFade.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatFade.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFade.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFade.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatFade.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatFade.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFade.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFade.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatFade.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatFade.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFade.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFade.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatFade.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatFade.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFade.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobe.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatStrobe.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatStrobe.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobe.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobe.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatStrobe.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatStrobe.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobe.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobe.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatStrobe.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatStrobe.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobe.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobe.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatStrobe.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatStrobe.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobe.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx_task.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx_task.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    dmx_task.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    dmx_task.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx_task.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manual.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manual.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manual.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manual.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manual.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manual.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manual.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manual.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manual.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manual.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manual.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manual.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manual.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manual.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manual.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manual.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animation.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animation.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animation.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animation.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animation.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animation.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animation.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animation.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animation.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animation.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animation.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animation.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animation.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animation.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animation.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animation.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beat.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beat.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beat.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beat.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beat.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beat.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beat.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beat.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beat.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beat.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beat.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beat.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beat.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beat.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beat.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beat.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    dmx.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    dmx.parent.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx.parent.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    dmx.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    dmx.config.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx.config.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    dmx.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    dmx.prevItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx.prevItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    dmx.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    dmx.nextItem.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx.nextItem.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualWhite.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualWhite.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualWhite.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualWhite.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualWhite.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualBlue.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualBlue.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualBlue.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualBlue.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualBlue.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualGreen.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualGreen.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualGreen.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualGreen.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualGreen.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualRed.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manualRed.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manualRed.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manualRed.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manualRed.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationBrightnessCtrl.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animationBrightnessCtrl.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationType.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animationType.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animationType.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animationType.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animationType.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixedTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixedTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatMixedTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixedTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatContTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatContTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatContTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatContTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatContTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFadeTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFadeTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatFadeTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFadeTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobeTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobeTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatStrobeTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobeTask.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixed.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatMixed.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatMixed.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatMixed.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatMixed.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatCont.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatCont.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatCont.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatCont.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatCont.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFade.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatFade.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatFade.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatFade.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatFade.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobe.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beatStrobe.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beatStrobe.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beatStrobe.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beatStrobe.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx_task.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx_task.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    dmx_task.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    dmx_task.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx_task.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manual.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    manual.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    manual.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    manual.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    manual.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animation.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    animation.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    animation.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    animation.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    animation.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beat.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    beat.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    beat.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    beat.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    beat.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    S2244menuItem$task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    dmx.task	PTR FTN()void  size(2) Largest target is 1
		 -> LED_task_BEAT_STROBE(), LED_task_MANUAL(), LED_task_ANIMATION(), CONTROL_DMX(), 

    S2244menuItem$parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    dmx.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK2[10]), manual(BANK3[10]), beat(BANK2[10]), dmx(BANK2[10]), 

    S2244menuItem$config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    dmx.config	PTR struct menuItem size(2) Largest target is 11
		 -> beatMixedTask(BANK5[10]), beatContTask(BANK5[10]), beatFadeTask(BANK5[10]), beatStrobeTask(BANK4[10]), 
		 -> manualRed(BANK3[10]), animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), dmx_task(BANK3[10]), 
		 -> NULL(NULL[0]), 

    S2244menuItem$prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx.prevItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    S2244menuItem$nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    dmx.nextItem	PTR struct menuItem size(2) Largest target is 11
		 -> manualBlue(BANK4[10]), manualWhite(BANK4[10]), manualGreen(BANK4[10]), animationType(BANK3[10]), 
		 -> beatCont(BANK4[10]), beatMixed(BANK4[10]), beatFade(BANK3[10]), manualRed(BANK3[10]), 
		 -> animationBrightnessCtrl(BANK3[10]), beatStrobe(BANK3[10]), animation(BANK2[10]), manual(BANK3[10]), 
		 -> beat(BANK2[10]), dmx(BANK2[10]), NULL(NULL[0]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    S1997$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    S1139$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S1162$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S1162$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_printf
    _TM1650_enable->_writeData
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_LED_task_BEAT_STROBE
    _DMX_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _CONTROLLER_task->_LED_task_BEAT_STROBE
    _LED_task_BEAT_STROBE->_printf
    _beatColorCreator->___fltol
    _beatBrightnessCalculation->___xxtofl
    _TM1650_fastPrintNum_2digit->_writeData
    ___awmod->___awdiv
    _LED_setColor->_PWM1_LoadDutyValue
    _LED_setColor->_PWM2_LoadDutyValue
    _LED_setColor->_PWM3_LoadDutyValue
    _LED_setColor->_PWM4_LoadDutyValue
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _CONTROL_DMX->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_fastPrintNum_3digit->_writeData
    _writeData->___awmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _TM1650_init->_printf
    _LED_task->_LED_task_DMX
    _LED_task_DMX->_LED_setColor
    _CONTROLLER_task->_LED_task_BEAT_STROBE
    _LED_task_MANUAL->_LED_setColor
    _LED_task_BEAT_STROBE->_LED_setColor
    _LED_setColor->_beatColorCreator
    _CONTROL_DMX->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  242458
                                             28 BANK1      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   26399
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    4420
                                             22 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0   91425
                                             26 BANK1      2     2      0
                       _LED_setColor
                 _LED_task_ANIMATION
           _LED_task_BEAT_CONTINUOUS
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
                       _LED_task_DMX
                    _LED_task_MANUAL
                   _beatColorCreator
                          _getIsHold
                            _getMode
 ---------------------------------------------------------------------------------
 (2) _getMode                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getIsHold                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_DMX                                         9     9      0   11997
                                             17 BANK1      9     9      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_MIXED                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_FADE                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_CONTINUOUS                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    7658
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    7447
                                             22 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      2     2      0  111547
                                             19 BANK1      2     2      0
                  _BUTTONS_isClicked
                        _CONTROL_DMX *
                 _LED_task_ANIMATION *
               _LED_task_BEAT_STROBE *
                    _LED_task_MANUAL *
                             _printf
 ---------------------------------------------------------------------------------
 (2) _LED_task_MANUAL                                      0     0      0   11852
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_STROBE                                 3     3      0   47760
                                             79 BANK0      1     1      0
                                             17 BANK1      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
         _TM1650_fastPrintNum_2digit
                   _beatColorCreator
                             _printf
 ---------------------------------------------------------------------------------
 (2) _beatColorCreator                                    10     6      4    7964
                                             77 BANK0      1     1      0
                                              0 BANK1      9     5      4
                            ___fltol
          _beatBrightnessCalculation
 ---------------------------------------------------------------------------------
 (3) _beatBrightnessCalculation                            5     1      4    1036
                                             14 BANK0      5     1      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum_2digit                           4     4      0    5900
                                             22 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                          _writeData
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     793
                                              9 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     625
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         8     4      4   11852
                                              9 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _beatColorCreator (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1002
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4    1133
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
          _beatBrightnessCalculation (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4045
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    2555
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2     251
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2     251
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     251
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     251
                                             77 BANK0      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0   29750
                                             10 BANK1      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                     _DMX_getAddress
         _TM1650_fastPrintNum_3digit
                        _address_dec
                        _address_inc
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   21979
                                             75 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   20098
                                             67 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   19663
                                             58 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2   13382
                                             52 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3   13138
                                             43 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     940
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    6001
                                             35 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    5609
                                             27 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    4665
                                             25 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    4541
                                             22 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum_3digit                           3     1      2    7416
                                             22 BANK0      3     1      2
                     _DMX_getAddress (ARG)
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    4389
                                             16 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1492
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     355
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     880
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1718
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1321
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      34
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      31
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      31
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       3
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CONTROL_DMX *
       _BUTTONS_isHeld
       _CLOCK_getTime
       _DMX_getAddress
       _TM1650_fastPrintNum_3digit
         _DMX_getAddress (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
         _writeData (ARG)
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _address_dec
       _address_inc
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _LED_task_ANIMATION *
     _LED_task_BEAT_STROBE *
       _BEAT_detected
       _CLOCK_getTime
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           _beatBrightnessCalculation
             ___xxtofl
       _TM1650_fastPrintNum_2digit
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _beatColorCreator
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         _beatBrightnessCalculation
           ___xxtofl
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _LED_task_MANUAL *
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           _beatBrightnessCalculation
             ___xxtofl
     _printf *
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_init
   _LED_task
     _LED_setColor
       _PWM1_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         ___xxtofl (ARG)
       _PWM2_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         ___xxtofl (ARG)
       _PWM3_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         ___xxtofl (ARG)
       _PWM4_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _beatBrightnessCalculation (ARG)
           ___xxtofl
       ___xxtofl
       _beatColorCreator (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         _beatBrightnessCalculation
           ___xxtofl
     _LED_task_ANIMATION
     _LED_task_BEAT_CONTINUOUS
     _LED_task_BEAT_FADE
     _LED_task_BEAT_MIXED
     _LED_task_BEAT_STROBE
       _BEAT_detected
       _CLOCK_getTime
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           _beatBrightnessCalculation
             ___xxtofl
       _TM1650_fastPrintNum_2digit
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _beatColorCreator
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         _beatBrightnessCalculation
           ___xxtofl
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _LED_task_DMX
       _DMX_getAddress
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           _beatBrightnessCalculation
             ___xxtofl
     _LED_task_MANUAL
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _beatBrightnessCalculation (ARG)
             ___xxtofl
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _beatBrightnessCalculation (ARG)
               ___xxtofl
           _beatBrightnessCalculation
             ___xxtofl
     _beatColorCreator
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _beatBrightnessCalculation (ARG)
           ___xxtofl
       _beatBrightnessCalculation
         ___xxtofl
     _getIsHold
     _getMode
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     1F6       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1E      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      4A      14       92.5%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      3E      16       77.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      20      18       40.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     1F6      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 17:33:38 2019

                       __end_of_LED_task_MANUAL 1F23                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0077                                    ___awdiv@sign 0026  
                                            _up 00C0                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00D2                             __Umul8_16@word_mpld 0026  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 1E62  
                                           l911 0E29                                             l913 0E97  
                                           _PR2 028D                                             _bpm 0136  
                                           _dmx 015A                                             _pad 1578  
                       __size_of_PMD_Initialize 000A                                    ___awmod@sign 002F  
                               _TMR2_Initialize 1F55                                 _PWM4_Initialize 0800  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  ___flmul@aexp 0056                                    ___flmul@bexp 005B  
                            _LED_task_BEAT_FADE 1E55                                    ___flmul@sign 0055  
                                  ___flmul@temp 0060                                    ___flmul@prod 005C  
                                 __CFG_BBEN$OFF 0000                             _animationBrightness 00ED  
                              __end_of_I2C1_ISR 1000                                    ___fltol@exp1 006C  
                                          l2113 02C4                                            l1403 0B24  
                                          l2061 04B2                                            l2152 17D2  
                                          l2153 17DC                                            l2145 17BE  
                                          l2082 05B9                                            l2083 05D1  
                                          l2139 1788                                            l2085 05DE  
                                          l2191 119E                                            l1905 0855  
                                          l1676 1590                            _ADCC_StartConversion 1E92  
                                          l1679 15B0                                            l7013 095E  
                                          ?_pad 004B                                            l7023 0985  
                                          l7103 1146                                            l7041 1198  
                                          l7201 1544                                            l7019 097F  
                                          l7203 1550                                            l7029 0990  
                                          l7213 156B                                            l8101 0D47  
                                          l8005 0765                                            l7135 110A  
                                          l7151 1128                                            l7119 1164  
                                          l7063 1797                                            l7313 13D8  
                                          l7305 13BA                                            l7057 1780  
                                          l7217 1573                                            l7209 1562  
                                          l7241 14AA                                            l7233 14A4  
                                          l8033 0D26                                            l7307 13C6  
                                          l7331 12A1                                            l7171 12C4  
                                          l7091 17F7                                            l7067 179B  
                                          l7243 14B6                                            l7251 14CB  
                                          l8107 0D4F                                            l7317 13E1  
                                          l7173 12E1                                            l7501 00C9  
                                          l7261 0815                                            l7077 17D0  
                                          l7069 17AB                                            l7229 149D  
                                          l8053 0D2D                                            l7335 12AD  
                                          l7423 053D                                            l7079 17C3  
                                          l7191 153C                                            l7255 14D3  
                                          l7247 14C2                                            l8071 0D38  
                                          l8039 0D69                                            l7329 1295  
                                          l7441 0548                                            l7417 0524  
                                          l7425 0506                                            l7361 0486  
                                          l7601 0285                                            l7281 0843  
                                          l7265 081E                                            l7185 1531  
                                          l8065 0D35                                            l7339 12B6  
                                          l7443 055F                                            l7427 0542  
                                          l7363 048E                                            l7611 02B1  
                                          l7515 00E2                                            l7291 0862  
                                          l7283 0851                                            l8083 0D3B  
                                          l8059 0D2F                                            l9051 0B0D  
                                          l7453 0578                                            l7381 04AA  
                                          l7357 0483                                            l7605 029A  
                                          l7517 00E4                                            l9053 0CBA  
                                          l8511 0DE2                                            l6903 1287  
                                          l7463 05A1                                            l7391 04D1  
                                          l7527 00FA                                            l7519 00EC  
                                          l8095 0D44                                            l6921 11E0  
                                          l7705 1EB4                                            l7449 0576  
                                          l7377 04A7                                            l8089 0D3F  
                                          l8601 0CA2                                            l7731 16D3  
                                          l7723 16B8                                            l8533 0E65  
                                          l8525 0E41                                            l6909 10EF  
                                          l6933 1426                                            l7477 05DA  
                                          l7397 04DD                                            l7581 0243  
                                          l7725 16B9                                            l7717 169E  
                                          l8605 0CAD                                            l8623 0B53  
                                          l8519 0E23                                            l7655 1F70  
                                          l6919 11DE                                            l7591 025C  
                                          l7735 16EC                                            l7719 169F  
                                          l8703 0B02                                            l8537 0E78  
                                          l6873 1E66                                            l7681 1F8C  
                                          l6937 1449                                            l6945 108F  
                                          l7497 00BF                                            l7737 16ED  
                                          l7729 16D2                                            l8643 0B8E  
                                          l8627 0B5A                                            l6891 160D  
                                          l7675 089C                                            l6947 109B  
                                          l6963 1586                                            l7587 025A  
                                          l7579 022C                                            l7499 00C1  
                                          l8555 0C00                                            l8645 0BA1  
                                          l7925 1FEA                                            l6893 1613  
                                          l6957 121C                                            l6973 1592  
                                          l8573 0C3F                                            l6887 1606  
                                          l7687 1F7C                                            l6967 158E  
                                          l7695 171F                                            l7951 09ED  
                                          l8591 0C7F                                            l8567 0C2C  
                                          l6977 15BC                                            l6985 12F9  
                                          l7961 0A2A                                            l8593 0C86  
                                          l8585 0C6A                                            l8681 0AA8  
                                          l8673 0A88                                            l8659 0BD4  
                                          l6987 1302                                            l7971 0A4A  
                                          l8595 0C8D                                            l8587 0C71  
                                          l8579 0C54                                            l8691 0ADF  
                                          l8675 0A8B                                            l8667 0A6B  
                                          l7965 0A38                                            l7949 0A22  
                                          l8597 0C94                                            l8589 0C78  
                                          l8693 0AE2                                            l8685 0AC2  
                                          l8669 0A6E                                            l8781 1485  
                                          l7975 0A50                                            l8599 0C9B  
                                          l8687 0AC5                                            l8679 0AA5  
                                          l8697 0AFC                                            l8699 0AFF  
                                          l7995 103E                                  ?_TM1650_enable 0077  
                                          STR_1 2055                                            STR_2 2073  
                                          STR_3 2061                                            STR_4 205B  
                                          STR_5 2049                                            STR_6 206D  
                                          STR_7 204F                                            STR_8 2067  
                                          STR_9 2082                         __end_of_PWM1_Initialize 1F01  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            _T2PR 028D  
                                          _PMD0 0796                                            u7005 13D9  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u6305 159C                                            _PMD5 079B  
                                          _PMD6 079C                                            u7035 1298  
                                          _PMD7 079D                                            u7205 051E  
                                          u7055 12A7                                            u6255 1447  
                                          u7215 0532                                            u7065 12AE  
                                          u6505 17E4                                            u6425 17A4  
                                          u7245 054B                                            u6445 17B8  
                                          u6615 1106                                            u7335 058F  
                                          u7175 050E                                            u6375 119F  
                                          u8304 0E04                                            u8305 0E03  
                                          u7345 05AA                                            u7265 0554  
                                          u7185 0515                                            u7505 022F  
                                          u6465 17CA                                            u6555 1142  
                                          u7355 05C3                                            u6715 1551  
                                          u9027 145C                                            u6645 1124  
                                          u7605 028E                                            u7525 0238  
                                          u6725 155B                                            u7615 02A4  
                                          u7455 0170                                            u6735 1563  
                                          u6815 14BC                                            u6585 1160  
                                          u7465 019F                                            u6825 14C3  
                                          u8515 0B3C                                            u7475 01F5  
                                          u7485 020C                                            u6925 0859  
                    ?_beatBrightnessCalculation 002E                                            u8295 0DE5  
                                          u7495 021B                                            u6695 1547  
                                          u6865 0827                                            u7825 0A01  
                                          u7595 0273                                            u6795 14AD  
                                          u7835 0A1A                                            u6965 13BD  
                                          u8565 0BB5                                            u6895 0844  
                                          u6985 13C7                                            u6995 13D1  
                                          u7795 09E7                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                              _LED_task_ANIMATION 1E53  
                                 __CFG_FCMEN$ON 0000                             ?_LED_task_BEAT_FADE 0077  
                                 ?_BUTTONS_init 0077                                   ?_BUTTONS_task 0077  
                                          _beat 0150                                            _dbuf 0320  
                          ?_adcThresholdHandler 0077                                            _ctoa 12EA  
                                          _main 1453                                            _down 00BF  
                                          _init 116D                                            _menu 00C1  
                                          _prec 012A                                            _nout 0128  
                                          pad@i 004F                                            pad@p 004C  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 0051                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                                          start 0030                                 ___fldiv@new_exp 0040  
                       __end_of_TM1650_setDigit 1FC5                             ?_LED_task_ANIMATION 0077  
                            __size_of_GPIO_init 0011                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                          __size_of_address_dec 000F                            __size_of_address_inc 0010  
                I2C1_MasterWriteTRBBuild@length 0021                             _LED_task_BEAT_MIXED 1000  
                                _BUTTONS_isHeld 1F63                                           ??_pad 004E  
                       __end_of_PWM2_Initialize 1F0C                         __end_of_TMR0_Initialize 2000  
                                    _i2c1_state 00C6                  ??_TMR0_DefaultInterruptHandler 0077  
                __size_of_OSCILLATOR_Initialize 0009                            ??_LED_task_BEAT_FADE 0020  
                     I2C1_MasterTRBInsert@count 0023                   __end_of_OSCILLATOR_Initialize 1EE3  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 0120  
                              __end_of_LED_init 1E80                                   ___fltol@sign1 006B  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_ctoa 0054                                __end_of_LED_task 0B25  
                                         ?_main 0077                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 05E3  
                                         _ADREF 0116                                 __end_of___awdiv 1578  
                             __end_of_I2C1_Stop 10BC                                           STR_10 2079  
                                         STR_11 2047                                           STR_20 2043  
                                         STR_12 201C                                           STR_21 207E  
                                         STR_13 203C                                           STR_14 202D  
                                         STR_15 2013                                           STR_16 2000  
                                         STR_17 200A                                   __CFG_WDTE$OFF 0000  
                                         STR_18 2025                                           STR_19 2035  
                               __end_of___awmod 14D8                                __end_of_DMX_init 1FD8  
                                         _ADRPT 009A                                 __end_of___flmul 02D1  
                               __end_of___fltol 0871                                 ___awdiv@divisor 0020  
                                         _T2CON 028E                                           _LATC5 00D5  
                                         _T2HLT 028F                                 __end_of___lwdiv 13E6  
                    _ADCC_ADTI_InterruptHandler 016C                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l430 0017  
                                         i1l432 001E                                 __end_of___lwmod 12BB  
                                         i1l434 0025                                           i1l427 000E  
                                         i1l439 002E                                           i1l552 0EF0  
                                         i1l553 0EF1                                           i1l547 0EC2  
                                         i1l581 0FC0                                           i1l573 0F7C  
                                         i1l558 0F13                                           i1l559 0F1F  
                                         i1l576 0F8B                                           i1l577 0F99  
                                         i1l569 0F5C                                           i1l588 1F9F  
                               ___awdiv@counter 0025                                           _OSCEN 0891  
                                  vfpfcnvrt@fmt 005A                              _PWM4_LoadDutyValue 114F  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
              __end_of_LED_task_BEAT_CONTINUOUS 1E55                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1E5C  
                          ??_LED_task_ANIMATION 0020                       ?_TMR0_SetInterruptHandler 0020  
                               __end_of_getMode 1E62                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 1F55                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                                         _delay 0169                            ?_LED_task_BEAT_MIXED 0077  
                                         _flags 012C                                           _enter 00BE  
                         ?_ADCC_StartConversion 0077                                           _fputc 141C  
                                         _fputs 1218                             ?_PWM4_LoadDutyValue 006D  
                     __size_of_beatColorCreator 0073                                           pad@fp 0053  
                                         _width 00A9                                           ctoa@c 0054  
                                         _putch 11D0                                           ctoa@w 0057  
                       __end_of_PWM3_Initialize 1F17                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0077                               __end_of_BEAT_init 1072  
                             __end_of_BEAT_task 0BF7                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 1E52  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0077  
           ?_EUSART1_DefaultFramingErrorHandler 0077              _EUSART1_DefaultFramingErrorHandler 1E51  
                                  _beatFadeTask 02D4                 I2C1_MasterWriteTRBBuild@address 0022  
                        __end_of_BUTTONS_isHeld 1F72                                 __initialization 0032  
                          TM1650_setDigit@digit 0038                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                                ?_LED_task_MANUAL 0077  
                                  __end_of_ctoa 131A                      __end_of_EUSART1_Initialize 137E  
                                  __end_of_main 1492                                    __end_of_init 118D  
                               _CONTROLLER_init 02D1                                 _CONTROLLER_task 0BF7  
                          ??_PWM4_LoadDutyValue 006F                                   ?_LED_setColor 00D2  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
                                 ?_LED_task_DMX 0077                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 1EA4                                    _beatContTask 02CA  
                       __end_of_PWM4_Initialize 080B                         __end_of_TMR2_Initialize 1F63  
                   ?_INTERRUPT_InterruptManager 0077                            _LED_task_BEAT_STROBE 0CD5  
                                   _i2c1_object 00A0                                          ??_ctoa 0056  
                                        ??_main 00E5                                          ??_init 0023  
                             __end_of_GPIO_init 1FB3                           ??_LED_task_BEAT_MIXED 0020  
                               ??_TM1650_enable 0036                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                          __size_of_CONTROL_DMX 00B7                                          ?_fputc 003B  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0043                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR3H 0315  
                                        _CCPR1L 030C                                          _CCPR4H 0319  
                                        _CCPR2L 0310                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                ___awdiv@dividend 0022  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        ?_putch 0077                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RC4PPS 1F24  
                              ?_PWM1_Initialize 0077                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                __CFG_WDTCCS$SC 0000                                          i1l8211 0F0D  
                                        i1l8205 0EFD                                          i1l8225 0F38  
                                        i1l8305 0FD3                                          i1l8155 140A  
                                        i1l8149 13FB                                          i1l8245 0F51  
                                        i1l8159 1419                                          i1l9055 0FDC  
                                        i1l8193 0EE3                                          i1l8283 0FA7  
                                        i1l8267 0F7F                                          i1l8259 0F6A  
                                        i1l8197 0EEA                                          i1l8295 0FC4  
                                        i1l8279 0FA0                                          i1l8297 0FC7  
                                        i1l8723 1340                                          i1l8715 131F  
                                        i1l8299 0FCB                                          i1l8727 1348  
                                        i1l7891 10B9                                          _OSCFRQ 0893  
                        __size_of_DMX_interrupt 0031                                          _TX1REG 011A  
                                        _TX1STA 011E                                __end_of___xxtofl 1800  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0036                                 ?_BUTTONS_isHeld 0077  
                            ??_I2C1_MasterWrite 002B                                    _CCPTMRS0bits 021E  
                                  vfprintf@cfmt 0069                                  _p_i2c1_current 0071  
                                ??_LED_setColor 00D6                     __size_of_PWM3_LoadDutyValue 001E  
                                ??_LED_task_DMX 00DA                     __end_of_TM1650_fastPrintNum 07FC  
                             _ADCC_ThresholdISR 1F3B                                       ??___fldiv 0036  
                                     ??___awdiv 0024                                  __CFG_STVREN$ON 0000  
                                     ??___awmod 002D                                       ??___flmul 0050  
                                     ??___fltol 0066                                       ??___lwdiv 0024  
                  ??_TM1650_fastPrintNum_2digit 0036                                       ??___lwmod 002C  
                  ??_TM1650_fastPrintNum_3digit 0038                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                          _manual 01DC  
                              ?_TMR0_Initialize 0077                                ?_PWM2_Initialize 0077  
                            ?_ADCC_ThresholdISR 0077                           ?_LED_task_BEAT_STROBE 0077  
                                     ?_I2C1_ISR 0077                                ___awdiv@quotient 0027  
                               ___awmod@divisor 0029                                 ___awmod@counter 002E  
                                     ??_getMode 0020                                          _printf 101B  
                        __size_of_BEAT_detected 0009                                          pad@buf 004B  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                        ctoa@fp 0059                                  _lastActiveTime 013A  
                                        _strlen 108A                            __size_of_TM1650_init 0014  
                 TM1650_fastPrintNum_2digit@num 0039                                 _ADCC_Initialize 123E  
                                        fputc@c 003B                                  _PMD_Initialize 1EEC  
                                        fputs@c 0047                                    ??_CLOCK_init 0022  
                                        fputs@i 0048                                          fputs@s 004A  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0077  
                 TM1650_fastPrintNum_3digit@num 0036                          ??_ADCC_StartConversion 0020  
                                        putch@n 003A                                __end_of_vfprintf 12EA  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 1E89  
                 I2C1_MasterWriteTRBBuild@pdata 0020                        _LED_task_BEAT_CONTINUOUS 1E54  
                                 _tm1650_status 0144                                 _eusart1RxBuffer 0220  
                       beatColorCreator@inGreen 00C9                                ?_PWM3_Initialize 0077  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 11F4                                    ___xxtofl@val 0020  
                       beatColorCreator@inWhite 00CB                         __end_of__initialization 00A1  
                       __end_of_CONTROLLER_init 0469                         __end_of_CONTROLLER_task 0CD5  
                            ?_SYSTEM_Initialize 0077             __size_of_TM1650_fastPrintNum_2digit 0074  
           __size_of_TM1650_fastPrintNum_3digit 0099                      __end_of_PWM2_LoadDutyValue 1131  
                                     ?_LED_init 0077                                       ?_LED_task 0077  
                                    ___fltol@f1 0062                                       ?_DMX_init 0077  
                                _i2c1_trb_count 00C5                     PWM1_LoadDutyValue@dutyValue 006D  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 1F48  
                       __size_of_DMX_getAddress 0003                   __end_of_EUSART1_RxDataHandler 108A  
                         _I2C1_FunctionComplete 1F91                            _I2C1_BusCollisionISR 1E59  
                                __pcstackCOMMON 0077                              __end_of_CLOCK_init 1E78  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK1 1EE3  
                                  __pidataBANK2 1E6B                             ??_SYSTEM_Initialize 0022  
                                     ?_TMR0_ISR 0077                                   __end_of_fputc 1453  
                                 __end_of_fputs 123E                                   __end_of_putch 11F4  
                            _PWM1_LoadDutyValue 10F5                                      ??_I2C1_ISR 0079  
                              ?_TMR2_Initialize 0077                                ?_PWM4_Initialize 0077  
                                 _DMX_interrupt 131A                            __end_of_BUTTONS_init 1526  
                        __end_of_PMD_Initialize 1EF6                            __end_of_BUTTONS_task 0EAE  
                   PWM4_LoadDutyValue@dutyValue 006D                              __size_of_getIsHold 0002  
                           ?_PWM1_LoadDutyValue 006D                                      _beatStrobe 01C8  
                   __end_of_EUSART1_Receive_ISR 141C                               _thresholdExceeded 00B2  
                   ADCC_StartConversion@channel 0020                               LED_setColor@input 00D2  
                                       ??_fputc 003E                       __end_of_SYSTEM_Initialize 1218  
                                       ??_fputs 0044                                _beatColorCreator 1683  
                                       ??_putch 0039                                   _eusart1RxHead 0074  
                                 _eusart1RxTail 0073                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                    __pbssBANK4 0220                                      __pbssBANK5 02A0  
                                    __pbssBANK6 0320                 ??_EUSART1_SetRxInterruptHandler 0022  
                   ??_beatBrightnessCalculation 0032                                   _BEAT_detected 1EAD  
                                 _beatMixedTask 02C0                                      ??_LED_init 0020  
                                    ??_LED_task 00E3                                      ??_DMX_init 0039  
                          ??_PWM1_LoadDutyValue 006F                               __end_of__Umul8_16 11AD  
                         ?_I2C1_BusCollisionISR 0077                 __end_of_EUSART1_SetErrorHandler 1EC8  
                                    __pmaintext 1453                __end_of_TMR0_SetInterruptHandler 1EAD  
                                    ??_TMR0_ISR 0077                                 __CFG_PPS1WAY$ON 0000  
                              writeData@address 0034                         __end_of_ADCC_Initialize 1264  
                        ??_LED_task_BEAT_STROBE 00DA                                      __pintentry 0004  
                               _I2C1_Initialize 10BC                                         _CCP1CON 030E  
                                       _CCP2CON 0312                                         _CCP3CON 0316  
                                       _CCP4CON 031A                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                  ?_DMX_interrupt 0077  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 1E89  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 1E80  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               __CFG_ZCDDIS$OFF 0000                                         ?_printf 00C9  
                               ?_PMD_Initialize 0077                           _animationModeSelected 00EE  
                                       ?_strlen 0020          __end_of_EUSART1_SetFramingErrorHandler 1ED1  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 1EC8  
                                     ?___xxtofl 0020                    ?_EUSART1_DefaultErrorHandler 0077  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                            __size_of_vfpfcnvrt 00A9                                       _I2C1_Stop 10A2  
                                    _arrayIndex 0130                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 073A  
                             _colorModeSelected 0145                               __end_of_charTable 1860  
                           _CLOCK_timerCallback 1001                            __end_of_LED_task_DMX 1683  
                                ?_BEAT_detected 0077                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                               __end_of_getIsHold 0004  
                                 ??_address_dec 0020                                ?_CONTROLLER_init 0077  
                                 ??_address_inc 0020                                ?_CONTROLLER_task 0077  
                                    _enterState 00BA                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0077                                       _BEAT_init 105B  
                 __size_of_I2C1_MasterTRBInsert 0055                                       _BEAT_task 0B25  
                    __size_of_ADCC_ThresholdISR 000D                                      _manualBlue 0232  
                            _p_i2c1_trb_current 0072              __end_of_TM1650_fastPrintNum_2digit 176A  
                    _TM1650_fastPrintNum_2digit 16F6              __end_of_TM1650_fastPrintNum_3digit 090A  
                    _TM1650_fastPrintNum_3digit 0871                                         ___fldiv 0469  
                                       ___awdiv 1526                            ?_CLOCK_timerCallback 0077  
                                       ___awmod 1492                                         ___flmul 00A5  
                                       ___fltol 080B                                         ___lwdiv 13B1  
                                       ___lwmod 128E                                       ?_vfprintf 0063  
                     _beatBrightnessCalculation 1045                                         _address 00EB  
                    _animationBrightnessControl 0070                     __size_of_LED_task_BEAT_FADE 0001  
                                       _getMode 1E5F                                         __ptext1 1007  
                                       __ptext2 1030                                         __ptext3 11F4  
                                       __ptext4 1F55                                         __ptext5 1FEC  
                                       __ptext6 0800                                         __ptext7 1F0C  
                                       __ptext8 1F01                                         __ptext9 1EF6  
                               __size_of_printf 0015                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strlen 0018  
                                       _lastRun 0134                           _OSCILLATOR_Initialize 1EDA  
                                     _T2CONbits 028E                                    __size_of_pad 0053  
                                       _initial 0167                                         _buttons 02A0  
                                    ??___xxtofl 0024                                ___awmod@dividend 002B  
                            _EUSART1_Initialize 134B                        ??_PIN_MANAGER_Initialize 0020  
                                     _T2HLTbits 028F                                 __CFG_WRTSAF$OFF 0000  
                   __size_of_LED_task_ANIMATION 0001                                      ?_I2C1_Stop 0077  
                   __end_of_adcThresholdHandler 1E66                                         _upState 00BD  
                 ??_EUSART1_DefaultErrorHandler 0078                                         _startup 00EF  
                    __size_of_SYSTEM_Initialize 0024                   LED_task_BEAT_STROBE@beatState 006F  
                          I2C1_ISR@pi2c_buf_ptr 00C4                                         clrloop0 1F24  
                              _currentSelection 00B8                            end_of_initialization 00A1  
                                     _T2RSTbits 0291                                       _GPIO_init 1FA2  
                           ?_EUSART1_Initialize 0077                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                                       fputc@fp 003D                                         init_ram 1F2F  
                   _EUSART1_OverrunErrorHandler 0266                                         fputs@fp 0043  
                                       initloop 1F30                          ??_I2C1_BusCollisionISR 0077  
                       __end_of_I2C1_Initialize 10D8                                  _DMX_getAddress 1E5C  
         __end_of_EUSART1_SetRxInterruptHandler 1EBF          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 1EB6                                      ?_BEAT_init 0077  
                                    ?_BEAT_task 0077                               __end_of_vfpfcnvrt 09B3  
                         __size_of_BUTTONS_init 004E                           __size_of_BUTTONS_task 00EE  
                         ??_CLOCK_timerCallback 0077                                 ??_DMX_interrupt 0077  
                           __end_of_address_dec 1F81                     __size_of_PWM4_LoadDutyValue 001E  
                           __end_of_address_inc 1F91                                ?_ADCC_Initialize 0077  
                                    ??_vfprintf 0066                            ??_EUSART1_Initialize 0022  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0023  
                                       strlen@s 0020                        _TMR0_SetInterruptHandler 1EA4  
                   __end_of_LED_task_BEAT_MIXED 1001                      ??_LED_task_BEAT_CONTINUOUS 0020  
                     __size_of_I2C1_MasterWrite 002A                               __size_of_I2C1_ISR 0152  
                      __size_of_LED_task_MANUAL 000C                               __end_of_writeData 10F5  
                       ?_ADCC_SetUpperThreshold 0020                                   ??_CONTROL_DMX 00D3  
                                 ___xxtofl@sign 0028                                       _TRISAbits 0012  
                                     _TRISCbits 0014                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 1045               I2C1_ISR@i2c_10bit_address_restart 00C2  
                                    ?_GPIO_init 0077                          __size_of_CLOCK_getTime 0009  
                                   ___flmul@grs 0057                                    _BUTTONS_init 14D8  
                                  _BUTTONS_task 0DC0                          __end_of_DMX_getAddress 1E5F  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028                      __end_of_PWM3_LoadDutyValue 114F  
          __size_of_EUSART1_DefaultErrorHandler 0003                        __size_of_PWM1_Initialize 000B  
                             __size_of_LED_init 0008                               __size_of_LED_task 00BB  
                             __size_of_DMX_init 0013                        __end_of_beatColorCreator 16F6  
                ??_ADCC_DefaultInterruptHandler 0077                                   ??_TM1650_init 006F  
                                   vfpfcnvrt@ap 005B                                     vfpfcnvrt@fp 0062  
                       I2C1_MasterWrite@trBlock 01EA                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0078                              _PWM2_LoadDutyValue 1113  
                      __size_of_TM1650_setDigit 0012                          ?_OSCILLATOR_Initialize 0077  
                __end_of_ADCC_SetUpperThreshold 1E92                    __size_of_TM1650_fastPrintNum 00C2  
                                __end_of_printf 1030                           __size_of_LED_setColor 0157  
                                __end_of_strlen 10A2                                    _lastDetected 00B1  
                         __size_of_LED_task_DMX 0063                             start_initialization 0032  
                                  _enterPressed 00B6                                     ??_I2C1_Stop 0077  
                      __size_of_PWM2_Initialize 000B                        __size_of_TMR0_Initialize 0014  
                           ?_PWM2_LoadDutyValue 006D                 __size_of_PIN_MANAGER_Initialize 0033  
                           TM1650_setDigit@data 0036                                     __end_of_pad 15CB  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020                                  _beatBrightness 016B  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 1FD8  
                           __end_of_CONTROL_DMX 0A6A                         _animationBrightnessCtrl 01AA  
                               ?_DMX_getAddress 0077                              ?_BUTTONS_isClicked 0077  
                                   _address_dec 1F72                                     _address_inc 1F81  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0077  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                          ??_PWM2_LoadDutyValue 006F                        __size_of_PWM3_Initialize 000B  
                                   vfprintf@fmt 0063                     PWM2_LoadDutyValue@dutyValue 006D  
                           ??_BUTTONS_isClicked 0020                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 1072                                    _LED_setColor 05E3  
                ?_EUSART1_SetRxInterruptHandler 0020                                       __Umul8_16 118D  
                                   __pdataBANK1 00E7                                     __pdataBANK2 0167  
                                  _LED_task_DMX 1620                                   _CLOCK_getTime 1E9B  
                                      ??_printf 006B                                        ??_strlen 0022  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 00C8  
                        beatColorCreator@inBlue 00CA                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 23EE  
                           __end_of_TM1650_init 101B                                       ___flmul@a 004C  
                                     ___flmul@b 0048                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 01EE                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00C9  
            __size_of_beatBrightnessCalculation 0016                        __size_of_PWM4_Initialize 000B  
                      __size_of_TMR2_Initialize 000E                                   _i2c1_tr_queue 0164  
                             __size_of___xxtofl 0096                       __end_of_BUTTONS_isClicked 1FEC  
                     beatColorCreator@tempColor 00CE                               ??_LED_task_MANUAL 006F  
                                     _beatMixed 0250                                     ??_GPIO_init 0020  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0077                    __size_of_EUSART1_Receive_ISR 0036  
                                  _menuSelected 00B9                                    _currentState 00AB  
                                     _charTable 1800                           _TMR0_InterruptHandler 016E  
                                     __pnvBANK2 016C                                       __pnvBANK3 01EE  
                                     __pnvBANK4 0264                     __size_of_PWM1_LoadDutyValue 001E  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 137E  
                                     _getIsHold 0002                                       _animation 0146  
                   ?_TM1650_fastPrintNum_2digit 0077                                        ?___fldiv 002E  
                   ?_TM1650_fastPrintNum_3digit 0036                                        ?___awdiv 0020  
                                     __ptext100 1072                                       __ptext101 1F3B  
                                     __ptext102 1E50                                       __ptext103 1E62  
                                      ?___awmod 0029                                        ?___flmul 0048  
                                      ?___fltol 0062                                      ?__Umul8_16 0020  
                                      ?___lwdiv 0020                                        ?___lwmod 0028  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0EAE  
                 __size_of_LED_task_BEAT_STROBE 00EB                               ??_PWM1_Initialize 0020  
                  ??_INTERRUPT_InterruptManager 007E                                 writeData@status 0035  
                                      ?_getMode 0077                               __size_of_vfprintf 002F  
                              _I2C1_MasterWrite 1264                                        _BAUD1CON 011F  
                  __end_of_I2C1_MasterTRBInsert 1620      __end_of_EUSART1_DefaultOverrunErrorHandler 0800  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0077  
           ?_EUSART1_DefaultOverrunErrorHandler 0077              _EUSART1_DefaultOverrunErrorHandler 07FC  
                          _EUSART1_ErrorHandler 0264                                       _downState 00BC  
                                   _CONTROL_DMX 09B3                         _EUSART1_SetErrorHandler 1EBF  
                                     _manualRed 01A0                               ??_TM1650_setDigit 0037  
                              ___lwdiv@quotient 0026               __end_of_beatBrightnessCalculation 105B  
                                __size_of_fputc 0037                                        _T2CLKCON 0290  
                                     _menuState 00BB                                  __size_of_fputs 0026  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 1E6B  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0077                _I2C1_WaitForLastPacketToComplete 1E66  
                        I2C1_MasterRead@trBlock 01E6                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 1F23  
                                      _PIE0bits 0716                                        _LED_init 1E78  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                      _LED_task 0A6A                                        _DMX_init 1FC5  
           __size_of_INTERRUPT_InterruptManager 002C                      ??_TMR0_SetInterruptHandler 0022  
                                      _PIR0bits 070C                                     _incInterval 00E9  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                                      _PIR4bits 0710                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0077                                      ?_getIsHold 0077  
                             __CFG_BBSIZE$BB512 0000                                   _animationType 01B4  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 1F48                      __end_of_LED_task_BEAT_FADE 1E56  
                                      _SSP1STAT 018F                                  _beatStrobeTask 0246  
                      __size_of_CONTROLLER_init 0198                        __size_of_CONTROLLER_task 00DE  
                                   _TM1650_init 1007                                       _threshold 00E7  
                                     _vfpfcnvrt 090A                               ??_PWM3_Initialize 0020  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                                     _startTime 0142                      __end_of_LED_task_ANIMATION 1E54  
                            DMX_interrupt@dummy 007D                                        _WPUAbits 1F39  
                                      _WPUCbits 1F4F                                       _writeData 10D8  
                    __size_of_BUTTONS_isClicked 0014                                      vfpfcnvrt@c 0061  
                                   _lastIncTime 00AD                               ??_TMR2_Initialize 0020  
                             ??_PWM4_Initialize 0020                    __size_of_adcThresholdHandler 0004  
                   __end_of_CLOCK_timerCallback 1007                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 073A                                      _ADSTATbits 0115  
                    __end_of_PWM4_LoadDutyValue 116D                   __size_of_I2C1_BusCollisionISR 0003  
                                    vfprintf@ap 0065                                      vfprintf@fp 0068  
                                   _manualColor 00A5                                     _manualGreen 023C  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 00C3  
                                   _manualWhite 0228                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fldiv 017A  
                              __size_of___awdiv 0052                               ?_beatColorCreator 00C9  
                         beatColorCreator@inRed 00CD                                __size_of___awmod 0046  
                              __size_of___flmul 022C                                __size_of___fltol 0066  
                         __end_of_DMX_interrupt 134B                     __size_of_EUSART1_Initialize 0033  
                                    ?_vfpfcnvrt 005A                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                __end_of_I2C1_MasterWriteTRBBuild 11D0  
                            ??_beatColorCreator 006D                                        _beatFade 01BE  
                            _PWM3_LoadDutyValue 1131                                        _beatCont 025A  
                                    _ANSELAbits 1F38                                        _beatHold 00B5  
                                    _ANSELCbits 1F4E                                __size_of_getMode 0003  
                          ?_TM1650_fastPrintNum 0036                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                             TM1650_enable@enable 0036  
           __end_of_EUSART1_DefaultErrorHandler 1E59                     _EUSART1_DefaultErrorHandler 1E56  
                                   _currentMenu 00AF                                     _currentTime 013E  
                                    _CLOCK_init 1E70                                        ___xxtofl 176A  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                                   _menuPressed 00B7                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0075                                 ___lwdiv@counter 0025  
                                      _detected 00B3                                      ?_writeData 0030  
                                      __ptext10 1EEC                                        __ptext11 137E  
                                      __ptext20 1E5F                                        __ptext12 1EDA  
                                      __ptext21 0002                                        __ptext13 10BC  
                                      __ptext30 0BF7                                        __ptext22 1620  
                                      __ptext14 134B                                        __ptext31 0CD5  
                                      __ptext23 1000                                        __ptext15 1ED1  
                                      __ptext40 05E3                                        __ptext32 1E53  
                                      __ptext24 1E55                                        __ptext16 1EC8  
                                      __ptext41 176A                                        __ptext33 09B3  
                                      __ptext25 1E54                                        __ptext17 1EBF  
                                      __ptext50 1EAD                                        __ptext42 080B  
                                      __ptext34 1F17                                        __ptext26 1E78  
                                      __ptext18 123E                                        __ptext51 101B  
                                      __ptext43 00A5                                        __ptext35 1683  
                                      __ptext27 1FC5                                        __ptext19 0A6A  
                                      __ptext60 1FB3                                        __ptext52 12BB  
                                      __ptext44 118D                                        __ptext36 1045  
                                      __ptext28 073A                                        __ptext61 1F81  
                                      __ptext53 090A                                        __ptext45 0469  
                                      __ptext37 16F6                                        __ptext29 1EB6  
                                      __ptext70 1E5C                                        __ptext62 1F72  
                                      __ptext54 12EA                                        __ptext46 114F  
                                      __ptext38 1492                                        __ptext71 1F63  
                                      __ptext63 0871                                        __ptext55 1578  
                                      __ptext47 1131                                        __ptext39 1526  
                                      __ptext80 0B25                                        __ptext72 1FD8  
                                      __ptext64 10D8                                        __ptext56 108A  
                                      __ptext48 1113                                        __ptext81 13B1  
                                      __ptext73 02D1                                        __ptext65 1264  
                                      __ptext57 1218                                        __ptext49 10F5  
                                      __ptext90 1E52                                        __ptext82 1E9B  
                                      __ptext74 1E70                                        __ptext66 11AD  
                                      __ptext58 141C                             ?_PWM3_LoadDutyValue 006D  
                                      __ptext91 0EAE                                        __ptext83 105B  
                                      __ptext75 1EA4                                        __ptext67 15CB  
                                      __ptext59 11D0                                        __ptext92 10A2  
                                      __ptext84 1E92                                        __ptext76 0DC0  
                                      __ptext68 1E66                                        __ptext93 1F91  
                                      __ptext85 1E89                                        __ptext77 14D8  
                                      __ptext69 128E                                        __ptext94 1E59  
                                      __ptext86 1E80                                        __ptext78 116D  
                                      __ptext95 131A                                        __ptext79 1FA2  
                                      __ptext96 13E6                                        __ptext88 1F48  
                                      __ptext97 07FC                                        __ptext89 1001  
                                      __ptext98 1E51                                        __ptext99 1E56  
                  __size_of_LED_task_BEAT_MIXED 0001                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _dmxArray 23EE  
                              ??_DMX_getAddress 0020                            BUTTONS_isHeld@button 0020  
                         __end_of_BEAT_detected 1EB6                                        _dmx_task 01D2  
                                      _lastBeat 0138                                        _lastTime 0140  
             __size_of_LED_task_BEAT_CONTINUOUS 0001                                 LED_task_DMX@dmx 00DF  
                     ?_LED_task_BEAT_CONTINUOUS 0077                                   __size_of_ctoa 0030  
                                 __size_of_main 003F                                   __size_of_init 0020  
                                  ?_address_dec 0077            __end_of_TMR0_DefaultInterruptHandler 1E53  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 1E52  
                                  ?_address_inc 0077                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 15CB                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                                     ??_getIsHold 0020  
                          ??_PWM3_LoadDutyValue 006F                    __end_of_ADCC_StartConversion 1E9B  
                                      int$flags 007E                                        _position 00B4  
                       __size_of_BUTTONS_isHeld 000F                                        _vfprintf 12BB  
            __end_of_INTERRUPT_InterruptManager 0030                      _INTERRUPT_InterruptManager 0004  
                                     printf@fmt 00C9                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 0268                             _EUSART1_Receive_ISR 13E6  
                               _LED_task_MANUAL 1F17                           ??_TM1650_fastPrintNum 0038  
                                    _INTCONbits 000B                               ??_CONTROLLER_init 0020  
                             ??_CONTROLLER_task 00DC                                        init@port 0020  
                                __pstringtext10 2043                                  __pstringtext11 2049  
                                __pstringtext20 207E                                  __pstringtext12 204F  
                                __pstringtext21 2082                                  __pstringtext13 2055  
                                __pstringtext22 0000                                  __pstringtext14 205B  
                                __pstringtext15 2061                                  __pstringtext16 2067  
                                __pstringtext17 206D                                  __pstringtext18 2073  
                                __pstringtext19 2079            __end_of_ADCC_DefaultInterruptHandler 1E51  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 1E50  
                                      intlevel1 0000                                  _thresholdCount 0132  
                          ?_EUSART1_Receive_ISR 0077                                   writeData@data 0030  
                              ___lwmod@dividend 002A                         ?_PIN_MANAGER_Initialize 0077  
                      __end_of_I2C1_MasterWrite 128E                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 1EDA  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 1ED1  
                 __end_of_I2C1_FunctionComplete 1FA2                           ?_I2C1_MasterTRBInsert 0020  
                               _PWM1_Initialize 1EF6                   ?_TMR0_DefaultInterruptHandler 0077  
                   __size_of_PWM2_LoadDutyValue 001E                          TM1650_fastPrintNum@num 0036  
                             _lastLedActiveTime 012E                                        printf@ap 006E  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                     PWM3_LoadDutyValue@dutyValue 006D  
                               _TM1650_setDigit 1FB3                                     ??_vfpfcnvrt 005C  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 00C7  
                                 __pstringtext1 1800                                   __pstringtext2 2000  
                                 __pstringtext3 200A                                   __pstringtext4 2013  
                                 __pstringtext5 201C                                   __pstringtext6 2025  
                                 __pstringtext7 202D                                   __pstringtext8 2035  
                                 __pstringtext9 203C                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0028                                     ?_CLOCK_init 0077  
                               _TMR0_Initialize 1FEC                                 _PWM2_Initialize 1F01  
                               ___lwmod@counter 002D                                    ?_CONTROL_DMX 0077  
                                  _previousTask 013C                        _I2C1_MasterWriteTRBBuild 11AD  
                                   ??_writeData 0031                                      _TX1STAbits 011E  
                  __end_of_LED_task_BEAT_STROBE 0DC0                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0078                  __end_of_PIN_MANAGER_Initialize 13B1  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 1030  
                            __size_of_I2C1_Stop 001A                   ?_ADCC_DefaultInterruptHandler 0077  
                    __end_of_PWM1_LoadDutyValue 1113                            __Umul8_16@multiplier 0028  
                       ??_EUSART1_RxDataHandler 0077                                 _PWM3_Initialize 1F0C  
                             __Umul8_16@product 0024  
