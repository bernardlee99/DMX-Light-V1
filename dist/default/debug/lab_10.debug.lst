

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 29 12:35:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	stringtext12,global,class=STRCODE,delta=2
    20                           	psect	stringtext13,global,class=STRCODE,delta=2
    21                           	psect	stringtext14,global,class=STRCODE,delta=2
    22                           	psect	stringtext15,global,class=STRCODE,delta=2
    23                           	psect	stringtext16,global,class=STRCODE,delta=2
    24                           	psect	stringtext17,global,class=STRCODE,delta=2
    25                           	psect	stringtext18,global,class=STRCODE,delta=2
    26                           	psect	stringtext19,global,class=STRCODE,delta=2
    27                           	psect	stringtext20,global,class=STRCODE,delta=2
    28                           	psect	stringtext21,global,class=STRCODE,delta=2
    29                           	psect	stringtext22,global,class=STRCODE,delta=2
    30                           	psect	cinit,global,class=CODE,merge=1,delta=2
    31                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    32                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    36                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    38                           	psect	clrtext,global,class=CODE,delta=2
    39                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    40                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    41                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    42                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    43                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    44                           	psect	text1,local,class=CODE,merge=1,delta=2
    45                           	psect	text2,local,class=CODE,merge=1,delta=2
    46                           	psect	text3,local,class=CODE,merge=1,delta=2
    47                           	psect	text4,local,class=CODE,merge=1,delta=2
    48                           	psect	text5,local,class=CODE,merge=1,delta=2
    49                           	psect	text6,local,class=CODE,merge=1,delta=2
    50                           	psect	text7,local,class=CODE,merge=1,delta=2
    51                           	psect	text8,local,class=CODE,merge=1,delta=2
    52                           	psect	text9,local,class=CODE,merge=1,delta=2
    53                           	psect	text10,local,class=CODE,merge=1,delta=2
    54                           	psect	text11,local,class=CODE,merge=1,delta=2
    55                           	psect	text12,local,class=CODE,merge=1,delta=2
    56                           	psect	text13,local,class=CODE,merge=1,delta=2
    57                           	psect	text14,local,class=CODE,merge=1,delta=2
    58                           	psect	text15,local,class=CODE,merge=1,delta=2
    59                           	psect	text16,local,class=CODE,merge=1,delta=2
    60                           	psect	text17,local,class=CODE,merge=1,delta=2
    61                           	psect	text18,local,class=CODE,merge=1,delta=2
    62                           	psect	text19,local,class=CODE,merge=1,delta=2
    63                           	psect	text20,local,class=CODE,merge=1,delta=2
    64                           	psect	text21,local,class=CODE,merge=1,delta=2
    65                           	psect	text22,local,class=CODE,merge=1,delta=2
    66                           	psect	text23,local,class=CODE,merge=1,delta=2
    67                           	psect	text24,local,class=CODE,merge=1,delta=2
    68                           	psect	text25,local,class=CODE,merge=1,delta=2
    69                           	psect	text26,local,class=CODE,merge=1,delta=2
    70                           	psect	text27,local,class=CODE,merge=1,delta=2
    71                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text33,local,class=CODE,merge=1,delta=2
    77                           	psect	text34,local,class=CODE,merge=1,delta=2
    78                           	psect	text35,local,class=CODE,merge=1,delta=2
    79                           	psect	text36,local,class=CODE,merge=1,delta=2
    80                           	psect	text37,local,class=CODE,merge=1,delta=2
    81                           	psect	text38,local,class=CODE,merge=1,delta=2
    82                           	psect	text39,local,class=CODE,merge=1,delta=2
    83                           	psect	text40,local,class=CODE,merge=1,delta=2
    84                           	psect	text41,local,class=CODE,merge=1,delta=2
    85                           	psect	text42,local,class=CODE,merge=1,delta=2
    86                           	psect	text43,local,class=CODE,merge=1,delta=2
    87                           	psect	text44,local,class=CODE,merge=1,delta=2
    88                           	psect	text45,local,class=CODE,merge=1,delta=2
    89                           	psect	text46,local,class=CODE,merge=1,delta=2
    90                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text48,local,class=CODE,merge=1,delta=2
    92                           	psect	text49,local,class=CODE,merge=1,delta=2
    93                           	psect	text50,local,class=CODE,merge=1,delta=2
    94                           	psect	text51,local,class=CODE,merge=1,delta=2
    95                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text54,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text55,local,class=CODE,merge=1,delta=2
    99                           	psect	text56,local,class=CODE,merge=1,delta=2
   100                           	psect	text57,local,class=CODE,merge=1,delta=2
   101                           	psect	text58,local,class=CODE,merge=1,delta=2
   102                           	psect	text59,local,class=CODE,merge=1,delta=2
   103                           	psect	text60,local,class=CODE,merge=1,delta=2
   104                           	psect	text61,local,class=CODE,merge=1,delta=2
   105                           	psect	text62,local,class=CODE,merge=1,delta=2
   106                           	psect	text63,local,class=CODE,merge=1,delta=2
   107                           	psect	text64,local,class=CODE,merge=1,delta=2
   108                           	psect	text65,local,class=CODE,merge=1,delta=2
   109                           	psect	text66,local,class=CODE,merge=1,delta=2
   110                           	psect	text67,local,class=CODE,merge=1,delta=2
   111                           	psect	text68,local,class=CODE,merge=1,delta=2
   112                           	psect	text69,local,class=CODE,merge=1,delta=2
   113                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
   115                           	psect	text72,local,class=CODE,merge=1,delta=2
   116                           	psect	text73,local,class=CODE,merge=1,delta=2
   117                           	psect	text74,local,class=CODE,merge=1,delta=2
   118                           	psect	text75,local,class=CODE,merge=1,delta=2
   119                           	psect	text76,local,class=CODE,merge=1,delta=2
   120                           	psect	text77,local,class=CODE,merge=1,delta=2
   121                           	psect	text78,local,class=CODE,merge=1,delta=2
   122                           	psect	text79,local,class=CODE,merge=1,delta=2
   123                           	psect	text80,local,class=CODE,merge=1,delta=2
   124                           	psect	text81,local,class=CODE,merge=1,delta=2
   125                           	psect	text82,local,class=CODE,merge=1,delta=2,group=1
   126                           	psect	text83,local,class=CODE,merge=1,delta=2
   127                           	psect	text84,local,class=CODE,merge=1,delta=2
   128                           	psect	text85,local,class=CODE,merge=1,delta=2
   129                           	psect	text86,local,class=CODE,merge=1,delta=2
   130                           	psect	text87,local,class=CODE,merge=1,delta=2
   131                           	psect	intentry,global,class=CODE,delta=2
   132                           	psect	text89,local,class=CODE,merge=1,delta=2
   133                           	psect	text90,local,class=CODE,merge=1,delta=2
   134                           	psect	text91,local,class=CODE,merge=1,delta=2
   135                           	psect	text92,local,class=CODE,merge=1,delta=2
   136                           	psect	text93,local,class=CODE,merge=1,delta=2
   137                           	psect	text94,local,class=CODE,merge=1,delta=2
   138                           	psect	text95,local,class=CODE,merge=1,delta=2
   139                           	psect	text96,local,class=CODE,merge=1,delta=2
   140                           	psect	text97,local,class=CODE,merge=1,delta=2
   141                           	psect	text98,local,class=CODE,merge=1,delta=2
   142                           	psect	text99,local,class=CODE,merge=1,delta=2
   143                           	psect	text100,local,class=CODE,merge=1,delta=2
   144                           	psect	text101,local,class=CODE,merge=1,delta=2
   145                           	psect	text102,local,class=CODE,merge=1,delta=2
   146                           	psect	text103,local,class=CODE,merge=1,delta=2
   147                           	psect	text104,local,class=CODE,merge=1,delta=2
   148                           	dabs	1,0xCA0,32
   149                           	dabs	1,0xC20,80
   150                           	dabs	1,0xBA0,80
   151                           	dabs	1,0xB20,80
   152                           	dabs	1,0xAA0,80
   153                           	dabs	1,0xA20,80
   154                           	dabs	1,0x9A0,80
   155                           	dabs	1,0x920,80
   156                           	dabs	1,0x8A0,80
   157                           	dabs	1,0x820,80
   158                           	dabs	1,0x7A0,80
   159                           	dabs	1,0x720,80
   160                           	dabs	1,0x6A0,80
   161                           	dabs	1,0x64E,34
   162                           	dabs	1,0x23EE,0,_dmxArray
   163                           	dabs	1,0x7E,2
   164  0000                     
   165                           ; Version 2.05
   166                           ; Generated 20/12/2018 GMT
   167                           ; 
   168                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   169                           ; All rights reserved.
   170                           ; 
   171                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   172                           ; 
   173                           ; Redistribution and use in source and binary forms, with or without modification, are
   174                           ; permitted provided that the following conditions are met:
   175                           ; 
   176                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   177                           ;        conditions and the following disclaimer.
   178                           ; 
   179                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   180                           ;        of conditions and the following disclaimer in the documentation and/or other
   181                           ;        materials provided with the distribution.
   182                           ; 
   183                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   184                           ;        software without specific prior written permission.
   185                           ; 
   186                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   187                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   188                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   189                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   190                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   191                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   192                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   193                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   194                           ; 
   195                           ; 
   196                           ; Code-generator required, PIC16F18446 Definitions
   197                           ; 
   198                           ; SFR Addresses
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0008                     	;# 
   208  0009                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  0012                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  008C                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  008E                     	;# 
   225  008F                     	;# 
   226  0090                     	;# 
   227  0090                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0094                     	;# 
   233  0094                     	;# 
   234  0095                     	;# 
   235  0096                     	;# 
   236  0096                     	;# 
   237  0097                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010C                     	;# 
   250  010D                     	;# 
   251  010E                     	;# 
   252  010F                     	;# 
   253  010F                     	;# 
   254  0110                     	;# 
   255  0111                     	;# 
   256  0112                     	;# 
   257  0113                     	;# 
   258  0114                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  0119                     	;# 
   265  0119                     	;# 
   266  011A                     	;# 
   267  011A                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011B                     	;# 
   271  011B                     	;# 
   272  011B                     	;# 
   273  011B                     	;# 
   274  011C                     	;# 
   275  011C                     	;# 
   276  011C                     	;# 
   277  011D                     	;# 
   278  011D                     	;# 
   279  011D                     	;# 
   280  011E                     	;# 
   281  011E                     	;# 
   282  011E                     	;# 
   283  011F                     	;# 
   284  011F                     	;# 
   285  011F                     	;# 
   286  011F                     	;# 
   287  011F                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  018E                     	;# 
   291  018F                     	;# 
   292  0190                     	;# 
   293  0191                     	;# 
   294  0192                     	;# 
   295  0196                     	;# 
   296  0197                     	;# 
   297  0198                     	;# 
   298  0199                     	;# 
   299  019A                     	;# 
   300  019B                     	;# 
   301  019C                     	;# 
   302  020C                     	;# 
   303  020D                     	;# 
   304  020E                     	;# 
   305  020E                     	;# 
   306  020F                     	;# 
   307  020F                     	;# 
   308  0210                     	;# 
   309  0210                     	;# 
   310  0211                     	;# 
   311  0211                     	;# 
   312  0212                     	;# 
   313  0213                     	;# 
   314  0214                     	;# 
   315  0214                     	;# 
   316  0215                     	;# 
   317  0215                     	;# 
   318  0216                     	;# 
   319  0216                     	;# 
   320  0217                     	;# 
   321  0217                     	;# 
   322  0218                     	;# 
   323  0219                     	;# 
   324  021A                     	;# 
   325  021A                     	;# 
   326  021B                     	;# 
   327  021B                     	;# 
   328  021C                     	;# 
   329  021C                     	;# 
   330  021D                     	;# 
   331  021D                     	;# 
   332  021E                     	;# 
   333  021F                     	;# 
   334  028C                     	;# 
   335  028C                     	;# 
   336  028D                     	;# 
   337  028D                     	;# 
   338  028E                     	;# 
   339  028F                     	;# 
   340  0290                     	;# 
   341  0291                     	;# 
   342  0292                     	;# 
   343  0292                     	;# 
   344  0293                     	;# 
   345  0293                     	;# 
   346  0294                     	;# 
   347  0295                     	;# 
   348  0296                     	;# 
   349  0297                     	;# 
   350  0298                     	;# 
   351  0298                     	;# 
   352  0299                     	;# 
   353  0299                     	;# 
   354  029A                     	;# 
   355  029B                     	;# 
   356  029C                     	;# 
   357  029D                     	;# 
   358  029F                     	;# 
   359  030C                     	;# 
   360  030C                     	;# 
   361  030D                     	;# 
   362  030E                     	;# 
   363  030F                     	;# 
   364  0310                     	;# 
   365  0310                     	;# 
   366  0311                     	;# 
   367  0312                     	;# 
   368  0313                     	;# 
   369  0314                     	;# 
   370  0314                     	;# 
   371  0315                     	;# 
   372  0316                     	;# 
   373  0317                     	;# 
   374  0318                     	;# 
   375  0318                     	;# 
   376  0319                     	;# 
   377  031A                     	;# 
   378  031B                     	;# 
   379  038C                     	;# 
   380  038C                     	;# 
   381  038D                     	;# 
   382  038E                     	;# 
   383  0390                     	;# 
   384  0390                     	;# 
   385  0391                     	;# 
   386  0392                     	;# 
   387  048C                     	;# 
   388  048C                     	;# 
   389  048D                     	;# 
   390  048E                     	;# 
   391  048F                     	;# 
   392  048F                     	;# 
   393  0490                     	;# 
   394  0491                     	;# 
   395  0492                     	;# 
   396  0492                     	;# 
   397  0493                     	;# 
   398  0494                     	;# 
   399  0495                     	;# 
   400  0495                     	;# 
   401  0496                     	;# 
   402  0497                     	;# 
   403  0498                     	;# 
   404  0499                     	;# 
   405  049A                     	;# 
   406  049B                     	;# 
   407  049C                     	;# 
   408  049D                     	;# 
   409  058C                     	;# 
   410  058C                     	;# 
   411  058D                     	;# 
   412  058E                     	;# 
   413  058F                     	;# 
   414  058F                     	;# 
   415  0590                     	;# 
   416  0591                     	;# 
   417  0592                     	;# 
   418  0593                     	;# 
   419  059C                     	;# 
   420  059C                     	;# 
   421  059D                     	;# 
   422  059D                     	;# 
   423  059E                     	;# 
   424  059F                     	;# 
   425  060C                     	;# 
   426  060C                     	;# 
   427  060D                     	;# 
   428  060D                     	;# 
   429  060E                     	;# 
   430  060F                     	;# 
   431  0610                     	;# 
   432  0611                     	;# 
   433  0612                     	;# 
   434  0613                     	;# 
   435  0614                     	;# 
   436  0616                     	;# 
   437  0616                     	;# 
   438  0617                     	;# 
   439  0617                     	;# 
   440  0618                     	;# 
   441  0619                     	;# 
   442  061A                     	;# 
   443  061B                     	;# 
   444  061C                     	;# 
   445  061D                     	;# 
   446  061E                     	;# 
   447  070C                     	;# 
   448  070D                     	;# 
   449  070E                     	;# 
   450  070F                     	;# 
   451  0710                     	;# 
   452  0711                     	;# 
   453  0712                     	;# 
   454  0713                     	;# 
   455  0714                     	;# 
   456  0716                     	;# 
   457  0717                     	;# 
   458  0718                     	;# 
   459  0719                     	;# 
   460  071A                     	;# 
   461  071B                     	;# 
   462  071C                     	;# 
   463  071D                     	;# 
   464  071E                     	;# 
   465  0796                     	;# 
   466  0797                     	;# 
   467  0798                     	;# 
   468  0799                     	;# 
   469  079A                     	;# 
   470  079B                     	;# 
   471  079C                     	;# 
   472  079D                     	;# 
   473  080C                     	;# 
   474  080D                     	;# 
   475  080E                     	;# 
   476  080F                     	;# 
   477  0810                     	;# 
   478  0811                     	;# 
   479  0812                     	;# 
   480  0813                     	;# 
   481  0814                     	;# 
   482  081A                     	;# 
   483  081A                     	;# 
   484  081B                     	;# 
   485  081C                     	;# 
   486  081C                     	;# 
   487  081D                     	;# 
   488  081E                     	;# 
   489  081F                     	;# 
   490  088C                     	;# 
   491  088D                     	;# 
   492  088E                     	;# 
   493  088F                     	;# 
   494  0890                     	;# 
   495  0891                     	;# 
   496  0892                     	;# 
   497  0893                     	;# 
   498  0895                     	;# 
   499  0896                     	;# 
   500  0897                     	;# 
   501  0898                     	;# 
   502  0899                     	;# 
   503  089A                     	;# 
   504  089B                     	;# 
   505  090C                     	;# 
   506  090E                     	;# 
   507  090F                     	;# 
   508  091F                     	;# 
   509  098F                     	;# 
   510  098F                     	;# 
   511  0990                     	;# 
   512  0991                     	;# 
   513  0992                     	;# 
   514  0993                     	;# 
   515  0994                     	;# 
   516  0995                     	;# 
   517  0996                     	;# 
   518  0997                     	;# 
   519  1E0F                     	;# 
   520  1E10                     	;# 
   521  1E11                     	;# 
   522  1E12                     	;# 
   523  1E13                     	;# 
   524  1E14                     	;# 
   525  1E15                     	;# 
   526  1E16                     	;# 
   527  1E17                     	;# 
   528  1E18                     	;# 
   529  1E19                     	;# 
   530  1E1A                     	;# 
   531  1E1B                     	;# 
   532  1E1C                     	;# 
   533  1E1D                     	;# 
   534  1E1E                     	;# 
   535  1E1F                     	;# 
   536  1E20                     	;# 
   537  1E21                     	;# 
   538  1E22                     	;# 
   539  1E23                     	;# 
   540  1E24                     	;# 
   541  1E25                     	;# 
   542  1E26                     	;# 
   543  1E27                     	;# 
   544  1E28                     	;# 
   545  1E29                     	;# 
   546  1E2A                     	;# 
   547  1E2B                     	;# 
   548  1E2C                     	;# 
   549  1E2D                     	;# 
   550  1E2E                     	;# 
   551  1E2F                     	;# 
   552  1E30                     	;# 
   553  1E31                     	;# 
   554  1E32                     	;# 
   555  1E33                     	;# 
   556  1E34                     	;# 
   557  1E35                     	;# 
   558  1E36                     	;# 
   559  1E37                     	;# 
   560  1E8F                     	;# 
   561  1E90                     	;# 
   562  1E91                     	;# 
   563  1E92                     	;# 
   564  1E93                     	;# 
   565  1E94                     	;# 
   566  1E95                     	;# 
   567  1E96                     	;# 
   568  1E97                     	;# 
   569  1E9C                     	;# 
   570  1E9D                     	;# 
   571  1E9E                     	;# 
   572  1EA1                     	;# 
   573  1EA2                     	;# 
   574  1EA3                     	;# 
   575  1EA4                     	;# 
   576  1EA9                     	;# 
   577  1EAA                     	;# 
   578  1EB1                     	;# 
   579  1EB2                     	;# 
   580  1EB8                     	;# 
   581  1EB9                     	;# 
   582  1EBA                     	;# 
   583  1EBB                     	;# 
   584  1EBC                     	;# 
   585  1EBD                     	;# 
   586  1EBE                     	;# 
   587  1EC3                     	;# 
   588  1EC5                     	;# 
   589  1EC6                     	;# 
   590  1EC7                     	;# 
   591  1EC8                     	;# 
   592  1EC9                     	;# 
   593  1ECA                     	;# 
   594  1ECB                     	;# 
   595  1ECB                     	;# 
   596  1ECB                     	;# 
   597  1ECC                     	;# 
   598  1ECC                     	;# 
   599  1ECC                     	;# 
   600  1F10                     	;# 
   601  1F11                     	;# 
   602  1F12                     	;# 
   603  1F14                     	;# 
   604  1F15                     	;# 
   605  1F1C                     	;# 
   606  1F1D                     	;# 
   607  1F1E                     	;# 
   608  1F1F                     	;# 
   609  1F20                     	;# 
   610  1F21                     	;# 
   611  1F22                     	;# 
   612  1F23                     	;# 
   613  1F24                     	;# 
   614  1F25                     	;# 
   615  1F26                     	;# 
   616  1F27                     	;# 
   617  1F38                     	;# 
   618  1F39                     	;# 
   619  1F3A                     	;# 
   620  1F3B                     	;# 
   621  1F3C                     	;# 
   622  1F3D                     	;# 
   623  1F3E                     	;# 
   624  1F3F                     	;# 
   625  1F43                     	;# 
   626  1F44                     	;# 
   627  1F45                     	;# 
   628  1F46                     	;# 
   629  1F47                     	;# 
   630  1F48                     	;# 
   631  1F49                     	;# 
   632  1F4A                     	;# 
   633  1F4E                     	;# 
   634  1F4F                     	;# 
   635  1F50                     	;# 
   636  1F51                     	;# 
   637  1F52                     	;# 
   638  1F53                     	;# 
   639  1F54                     	;# 
   640  1F55                     	;# 
   641  1FE4                     	;# 
   642  1FE5                     	;# 
   643  1FE6                     	;# 
   644  1FE7                     	;# 
   645  1FE8                     	;# 
   646  1FE8                     	;# 
   647  1FE9                     	;# 
   648  1FEA                     	;# 
   649  1FEB                     	;# 
   650  1FED                     	;# 
   651  1FEE                     	;# 
   652  1FEF                     	;# 
   653  0000                     	;# 
   654  0001                     	;# 
   655  0002                     	;# 
   656  0003                     	;# 
   657  0004                     	;# 
   658  0005                     	;# 
   659  0006                     	;# 
   660  0007                     	;# 
   661  0008                     	;# 
   662  0009                     	;# 
   663  000A                     	;# 
   664  000B                     	;# 
   665  000C                     	;# 
   666  000D                     	;# 
   667  000E                     	;# 
   668  0012                     	;# 
   669  0013                     	;# 
   670  0014                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  008C                     	;# 
   675  008C                     	;# 
   676  008D                     	;# 
   677  008E                     	;# 
   678  008E                     	;# 
   679  008F                     	;# 
   680  0090                     	;# 
   681  0090                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0092                     	;# 
   685  0093                     	;# 
   686  0094                     	;# 
   687  0094                     	;# 
   688  0095                     	;# 
   689  0096                     	;# 
   690  0096                     	;# 
   691  0097                     	;# 
   692  0098                     	;# 
   693  0099                     	;# 
   694  009A                     	;# 
   695  009B                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009D                     	;# 
   700  009E                     	;# 
   701  009F                     	;# 
   702  010C                     	;# 
   703  010C                     	;# 
   704  010D                     	;# 
   705  010E                     	;# 
   706  010F                     	;# 
   707  010F                     	;# 
   708  0110                     	;# 
   709  0111                     	;# 
   710  0112                     	;# 
   711  0113                     	;# 
   712  0114                     	;# 
   713  0115                     	;# 
   714  0116                     	;# 
   715  0117                     	;# 
   716  0118                     	;# 
   717  0119                     	;# 
   718  0119                     	;# 
   719  0119                     	;# 
   720  011A                     	;# 
   721  011A                     	;# 
   722  011A                     	;# 
   723  011B                     	;# 
   724  011B                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011B                     	;# 
   728  011C                     	;# 
   729  011C                     	;# 
   730  011C                     	;# 
   731  011D                     	;# 
   732  011D                     	;# 
   733  011D                     	;# 
   734  011E                     	;# 
   735  011E                     	;# 
   736  011E                     	;# 
   737  011F                     	;# 
   738  011F                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  011F                     	;# 
   742  018C                     	;# 
   743  018D                     	;# 
   744  018E                     	;# 
   745  018F                     	;# 
   746  0190                     	;# 
   747  0191                     	;# 
   748  0192                     	;# 
   749  0196                     	;# 
   750  0197                     	;# 
   751  0198                     	;# 
   752  0199                     	;# 
   753  019A                     	;# 
   754  019B                     	;# 
   755  019C                     	;# 
   756  020C                     	;# 
   757  020D                     	;# 
   758  020E                     	;# 
   759  020E                     	;# 
   760  020F                     	;# 
   761  020F                     	;# 
   762  0210                     	;# 
   763  0210                     	;# 
   764  0211                     	;# 
   765  0211                     	;# 
   766  0212                     	;# 
   767  0213                     	;# 
   768  0214                     	;# 
   769  0214                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0216                     	;# 
   773  0216                     	;# 
   774  0217                     	;# 
   775  0217                     	;# 
   776  0218                     	;# 
   777  0219                     	;# 
   778  021A                     	;# 
   779  021A                     	;# 
   780  021B                     	;# 
   781  021B                     	;# 
   782  021C                     	;# 
   783  021C                     	;# 
   784  021D                     	;# 
   785  021D                     	;# 
   786  021E                     	;# 
   787  021F                     	;# 
   788  028C                     	;# 
   789  028C                     	;# 
   790  028D                     	;# 
   791  028D                     	;# 
   792  028E                     	;# 
   793  028F                     	;# 
   794  0290                     	;# 
   795  0291                     	;# 
   796  0292                     	;# 
   797  0292                     	;# 
   798  0293                     	;# 
   799  0293                     	;# 
   800  0294                     	;# 
   801  0295                     	;# 
   802  0296                     	;# 
   803  0297                     	;# 
   804  0298                     	;# 
   805  0298                     	;# 
   806  0299                     	;# 
   807  0299                     	;# 
   808  029A                     	;# 
   809  029B                     	;# 
   810  029C                     	;# 
   811  029D                     	;# 
   812  029F                     	;# 
   813  030C                     	;# 
   814  030C                     	;# 
   815  030D                     	;# 
   816  030E                     	;# 
   817  030F                     	;# 
   818  0310                     	;# 
   819  0310                     	;# 
   820  0311                     	;# 
   821  0312                     	;# 
   822  0313                     	;# 
   823  0314                     	;# 
   824  0314                     	;# 
   825  0315                     	;# 
   826  0316                     	;# 
   827  0317                     	;# 
   828  0318                     	;# 
   829  0318                     	;# 
   830  0319                     	;# 
   831  031A                     	;# 
   832  031B                     	;# 
   833  038C                     	;# 
   834  038C                     	;# 
   835  038D                     	;# 
   836  038E                     	;# 
   837  0390                     	;# 
   838  0390                     	;# 
   839  0391                     	;# 
   840  0392                     	;# 
   841  048C                     	;# 
   842  048C                     	;# 
   843  048D                     	;# 
   844  048E                     	;# 
   845  048F                     	;# 
   846  048F                     	;# 
   847  0490                     	;# 
   848  0491                     	;# 
   849  0492                     	;# 
   850  0492                     	;# 
   851  0493                     	;# 
   852  0494                     	;# 
   853  0495                     	;# 
   854  0495                     	;# 
   855  0496                     	;# 
   856  0497                     	;# 
   857  0498                     	;# 
   858  0499                     	;# 
   859  049A                     	;# 
   860  049B                     	;# 
   861  049C                     	;# 
   862  049D                     	;# 
   863  058C                     	;# 
   864  058C                     	;# 
   865  058D                     	;# 
   866  058E                     	;# 
   867  058F                     	;# 
   868  058F                     	;# 
   869  0590                     	;# 
   870  0591                     	;# 
   871  0592                     	;# 
   872  0593                     	;# 
   873  059C                     	;# 
   874  059C                     	;# 
   875  059D                     	;# 
   876  059D                     	;# 
   877  059E                     	;# 
   878  059F                     	;# 
   879  060C                     	;# 
   880  060C                     	;# 
   881  060D                     	;# 
   882  060D                     	;# 
   883  060E                     	;# 
   884  060F                     	;# 
   885  0610                     	;# 
   886  0611                     	;# 
   887  0612                     	;# 
   888  0613                     	;# 
   889  0614                     	;# 
   890  0616                     	;# 
   891  0616                     	;# 
   892  0617                     	;# 
   893  0617                     	;# 
   894  0618                     	;# 
   895  0619                     	;# 
   896  061A                     	;# 
   897  061B                     	;# 
   898  061C                     	;# 
   899  061D                     	;# 
   900  061E                     	;# 
   901  070C                     	;# 
   902  070D                     	;# 
   903  070E                     	;# 
   904  070F                     	;# 
   905  0710                     	;# 
   906  0711                     	;# 
   907  0712                     	;# 
   908  0713                     	;# 
   909  0714                     	;# 
   910  0716                     	;# 
   911  0717                     	;# 
   912  0718                     	;# 
   913  0719                     	;# 
   914  071A                     	;# 
   915  071B                     	;# 
   916  071C                     	;# 
   917  071D                     	;# 
   918  071E                     	;# 
   919  0796                     	;# 
   920  0797                     	;# 
   921  0798                     	;# 
   922  0799                     	;# 
   923  079A                     	;# 
   924  079B                     	;# 
   925  079C                     	;# 
   926  079D                     	;# 
   927  080C                     	;# 
   928  080D                     	;# 
   929  080E                     	;# 
   930  080F                     	;# 
   931  0810                     	;# 
   932  0811                     	;# 
   933  0812                     	;# 
   934  0813                     	;# 
   935  0814                     	;# 
   936  081A                     	;# 
   937  081A                     	;# 
   938  081B                     	;# 
   939  081C                     	;# 
   940  081C                     	;# 
   941  081D                     	;# 
   942  081E                     	;# 
   943  081F                     	;# 
   944  088C                     	;# 
   945  088D                     	;# 
   946  088E                     	;# 
   947  088F                     	;# 
   948  0890                     	;# 
   949  0891                     	;# 
   950  0892                     	;# 
   951  0893                     	;# 
   952  0895                     	;# 
   953  0896                     	;# 
   954  0897                     	;# 
   955  0898                     	;# 
   956  0899                     	;# 
   957  089A                     	;# 
   958  089B                     	;# 
   959  090C                     	;# 
   960  090E                     	;# 
   961  090F                     	;# 
   962  091F                     	;# 
   963  098F                     	;# 
   964  098F                     	;# 
   965  0990                     	;# 
   966  0991                     	;# 
   967  0992                     	;# 
   968  0993                     	;# 
   969  0994                     	;# 
   970  0995                     	;# 
   971  0996                     	;# 
   972  0997                     	;# 
   973  1E0F                     	;# 
   974  1E10                     	;# 
   975  1E11                     	;# 
   976  1E12                     	;# 
   977  1E13                     	;# 
   978  1E14                     	;# 
   979  1E15                     	;# 
   980  1E16                     	;# 
   981  1E17                     	;# 
   982  1E18                     	;# 
   983  1E19                     	;# 
   984  1E1A                     	;# 
   985  1E1B                     	;# 
   986  1E1C                     	;# 
   987  1E1D                     	;# 
   988  1E1E                     	;# 
   989  1E1F                     	;# 
   990  1E20                     	;# 
   991  1E21                     	;# 
   992  1E22                     	;# 
   993  1E23                     	;# 
   994  1E24                     	;# 
   995  1E25                     	;# 
   996  1E26                     	;# 
   997  1E27                     	;# 
   998  1E28                     	;# 
   999  1E29                     	;# 
  1000  1E2A                     	;# 
  1001  1E2B                     	;# 
  1002  1E2C                     	;# 
  1003  1E2D                     	;# 
  1004  1E2E                     	;# 
  1005  1E2F                     	;# 
  1006  1E30                     	;# 
  1007  1E31                     	;# 
  1008  1E32                     	;# 
  1009  1E33                     	;# 
  1010  1E34                     	;# 
  1011  1E35                     	;# 
  1012  1E36                     	;# 
  1013  1E37                     	;# 
  1014  1E8F                     	;# 
  1015  1E90                     	;# 
  1016  1E91                     	;# 
  1017  1E92                     	;# 
  1018  1E93                     	;# 
  1019  1E94                     	;# 
  1020  1E95                     	;# 
  1021  1E96                     	;# 
  1022  1E97                     	;# 
  1023  1E9C                     	;# 
  1024  1E9D                     	;# 
  1025  1E9E                     	;# 
  1026  1EA1                     	;# 
  1027  1EA2                     	;# 
  1028  1EA3                     	;# 
  1029  1EA4                     	;# 
  1030  1EA9                     	;# 
  1031  1EAA                     	;# 
  1032  1EB1                     	;# 
  1033  1EB2                     	;# 
  1034  1EB8                     	;# 
  1035  1EB9                     	;# 
  1036  1EBA                     	;# 
  1037  1EBB                     	;# 
  1038  1EBC                     	;# 
  1039  1EBD                     	;# 
  1040  1EBE                     	;# 
  1041  1EC3                     	;# 
  1042  1EC5                     	;# 
  1043  1EC6                     	;# 
  1044  1EC7                     	;# 
  1045  1EC8                     	;# 
  1046  1EC9                     	;# 
  1047  1ECA                     	;# 
  1048  1ECB                     	;# 
  1049  1ECB                     	;# 
  1050  1ECB                     	;# 
  1051  1ECC                     	;# 
  1052  1ECC                     	;# 
  1053  1ECC                     	;# 
  1054  1F10                     	;# 
  1055  1F11                     	;# 
  1056  1F12                     	;# 
  1057  1F14                     	;# 
  1058  1F15                     	;# 
  1059  1F1C                     	;# 
  1060  1F1D                     	;# 
  1061  1F1E                     	;# 
  1062  1F1F                     	;# 
  1063  1F20                     	;# 
  1064  1F21                     	;# 
  1065  1F22                     	;# 
  1066  1F23                     	;# 
  1067  1F24                     	;# 
  1068  1F25                     	;# 
  1069  1F26                     	;# 
  1070  1F27                     	;# 
  1071  1F38                     	;# 
  1072  1F39                     	;# 
  1073  1F3A                     	;# 
  1074  1F3B                     	;# 
  1075  1F3C                     	;# 
  1076  1F3D                     	;# 
  1077  1F3E                     	;# 
  1078  1F3F                     	;# 
  1079  1F43                     	;# 
  1080  1F44                     	;# 
  1081  1F45                     	;# 
  1082  1F46                     	;# 
  1083  1F47                     	;# 
  1084  1F48                     	;# 
  1085  1F49                     	;# 
  1086  1F4A                     	;# 
  1087  1F4E                     	;# 
  1088  1F4F                     	;# 
  1089  1F50                     	;# 
  1090  1F51                     	;# 
  1091  1F52                     	;# 
  1092  1F53                     	;# 
  1093  1F54                     	;# 
  1094  1F55                     	;# 
  1095  1FE4                     	;# 
  1096  1FE5                     	;# 
  1097  1FE6                     	;# 
  1098  1FE7                     	;# 
  1099  1FE8                     	;# 
  1100  1FE8                     	;# 
  1101  1FE9                     	;# 
  1102  1FEA                     	;# 
  1103  1FEB                     	;# 
  1104  1FED                     	;# 
  1105  1FEE                     	;# 
  1106  1FEF                     	;# 
  1107  0000                     	;# 
  1108  0001                     	;# 
  1109  0002                     	;# 
  1110  0003                     	;# 
  1111  0004                     	;# 
  1112  0005                     	;# 
  1113  0006                     	;# 
  1114  0007                     	;# 
  1115  0008                     	;# 
  1116  0009                     	;# 
  1117  000A                     	;# 
  1118  000B                     	;# 
  1119  000C                     	;# 
  1120  000D                     	;# 
  1121  000E                     	;# 
  1122  0012                     	;# 
  1123  0013                     	;# 
  1124  0014                     	;# 
  1125  0018                     	;# 
  1126  0019                     	;# 
  1127  001A                     	;# 
  1128  008C                     	;# 
  1129  008C                     	;# 
  1130  008D                     	;# 
  1131  008E                     	;# 
  1132  008E                     	;# 
  1133  008F                     	;# 
  1134  0090                     	;# 
  1135  0090                     	;# 
  1136  0091                     	;# 
  1137  0092                     	;# 
  1138  0092                     	;# 
  1139  0093                     	;# 
  1140  0094                     	;# 
  1141  0094                     	;# 
  1142  0095                     	;# 
  1143  0096                     	;# 
  1144  0096                     	;# 
  1145  0097                     	;# 
  1146  0098                     	;# 
  1147  0099                     	;# 
  1148  009A                     	;# 
  1149  009B                     	;# 
  1150  009B                     	;# 
  1151  009C                     	;# 
  1152  009D                     	;# 
  1153  009D                     	;# 
  1154  009E                     	;# 
  1155  009F                     	;# 
  1156  010C                     	;# 
  1157  010C                     	;# 
  1158  010D                     	;# 
  1159  010E                     	;# 
  1160  010F                     	;# 
  1161  010F                     	;# 
  1162  0110                     	;# 
  1163  0111                     	;# 
  1164  0112                     	;# 
  1165  0113                     	;# 
  1166  0114                     	;# 
  1167  0115                     	;# 
  1168  0116                     	;# 
  1169  0117                     	;# 
  1170  0118                     	;# 
  1171  0119                     	;# 
  1172  0119                     	;# 
  1173  0119                     	;# 
  1174  011A                     	;# 
  1175  011A                     	;# 
  1176  011A                     	;# 
  1177  011B                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011C                     	;# 
  1183  011C                     	;# 
  1184  011C                     	;# 
  1185  011D                     	;# 
  1186  011D                     	;# 
  1187  011D                     	;# 
  1188  011E                     	;# 
  1189  011E                     	;# 
  1190  011E                     	;# 
  1191  011F                     	;# 
  1192  011F                     	;# 
  1193  011F                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  018C                     	;# 
  1197  018D                     	;# 
  1198  018E                     	;# 
  1199  018F                     	;# 
  1200  0190                     	;# 
  1201  0191                     	;# 
  1202  0192                     	;# 
  1203  0196                     	;# 
  1204  0197                     	;# 
  1205  0198                     	;# 
  1206  0199                     	;# 
  1207  019A                     	;# 
  1208  019B                     	;# 
  1209  019C                     	;# 
  1210  020C                     	;# 
  1211  020D                     	;# 
  1212  020E                     	;# 
  1213  020E                     	;# 
  1214  020F                     	;# 
  1215  020F                     	;# 
  1216  0210                     	;# 
  1217  0210                     	;# 
  1218  0211                     	;# 
  1219  0211                     	;# 
  1220  0212                     	;# 
  1221  0213                     	;# 
  1222  0214                     	;# 
  1223  0214                     	;# 
  1224  0215                     	;# 
  1225  0215                     	;# 
  1226  0216                     	;# 
  1227  0216                     	;# 
  1228  0217                     	;# 
  1229  0217                     	;# 
  1230  0218                     	;# 
  1231  0219                     	;# 
  1232  021A                     	;# 
  1233  021A                     	;# 
  1234  021B                     	;# 
  1235  021B                     	;# 
  1236  021C                     	;# 
  1237  021C                     	;# 
  1238  021D                     	;# 
  1239  021D                     	;# 
  1240  021E                     	;# 
  1241  021F                     	;# 
  1242  028C                     	;# 
  1243  028C                     	;# 
  1244  028D                     	;# 
  1245  028D                     	;# 
  1246  028E                     	;# 
  1247  028F                     	;# 
  1248  0290                     	;# 
  1249  0291                     	;# 
  1250  0292                     	;# 
  1251  0292                     	;# 
  1252  0293                     	;# 
  1253  0293                     	;# 
  1254  0294                     	;# 
  1255  0295                     	;# 
  1256  0296                     	;# 
  1257  0297                     	;# 
  1258  0298                     	;# 
  1259  0298                     	;# 
  1260  0299                     	;# 
  1261  0299                     	;# 
  1262  029A                     	;# 
  1263  029B                     	;# 
  1264  029C                     	;# 
  1265  029D                     	;# 
  1266  029F                     	;# 
  1267  030C                     	;# 
  1268  030C                     	;# 
  1269  030D                     	;# 
  1270  030E                     	;# 
  1271  030F                     	;# 
  1272  0310                     	;# 
  1273  0310                     	;# 
  1274  0311                     	;# 
  1275  0312                     	;# 
  1276  0313                     	;# 
  1277  0314                     	;# 
  1278  0314                     	;# 
  1279  0315                     	;# 
  1280  0316                     	;# 
  1281  0317                     	;# 
  1282  0318                     	;# 
  1283  0318                     	;# 
  1284  0319                     	;# 
  1285  031A                     	;# 
  1286  031B                     	;# 
  1287  038C                     	;# 
  1288  038C                     	;# 
  1289  038D                     	;# 
  1290  038E                     	;# 
  1291  0390                     	;# 
  1292  0390                     	;# 
  1293  0391                     	;# 
  1294  0392                     	;# 
  1295  048C                     	;# 
  1296  048C                     	;# 
  1297  048D                     	;# 
  1298  048E                     	;# 
  1299  048F                     	;# 
  1300  048F                     	;# 
  1301  0490                     	;# 
  1302  0491                     	;# 
  1303  0492                     	;# 
  1304  0492                     	;# 
  1305  0493                     	;# 
  1306  0494                     	;# 
  1307  0495                     	;# 
  1308  0495                     	;# 
  1309  0496                     	;# 
  1310  0497                     	;# 
  1311  0498                     	;# 
  1312  0499                     	;# 
  1313  049A                     	;# 
  1314  049B                     	;# 
  1315  049C                     	;# 
  1316  049D                     	;# 
  1317  058C                     	;# 
  1318  058C                     	;# 
  1319  058D                     	;# 
  1320  058E                     	;# 
  1321  058F                     	;# 
  1322  058F                     	;# 
  1323  0590                     	;# 
  1324  0591                     	;# 
  1325  0592                     	;# 
  1326  0593                     	;# 
  1327  059C                     	;# 
  1328  059C                     	;# 
  1329  059D                     	;# 
  1330  059D                     	;# 
  1331  059E                     	;# 
  1332  059F                     	;# 
  1333  060C                     	;# 
  1334  060C                     	;# 
  1335  060D                     	;# 
  1336  060D                     	;# 
  1337  060E                     	;# 
  1338  060F                     	;# 
  1339  0610                     	;# 
  1340  0611                     	;# 
  1341  0612                     	;# 
  1342  0613                     	;# 
  1343  0614                     	;# 
  1344  0616                     	;# 
  1345  0616                     	;# 
  1346  0617                     	;# 
  1347  0617                     	;# 
  1348  0618                     	;# 
  1349  0619                     	;# 
  1350  061A                     	;# 
  1351  061B                     	;# 
  1352  061C                     	;# 
  1353  061D                     	;# 
  1354  061E                     	;# 
  1355  070C                     	;# 
  1356  070D                     	;# 
  1357  070E                     	;# 
  1358  070F                     	;# 
  1359  0710                     	;# 
  1360  0711                     	;# 
  1361  0712                     	;# 
  1362  0713                     	;# 
  1363  0714                     	;# 
  1364  0716                     	;# 
  1365  0717                     	;# 
  1366  0718                     	;# 
  1367  0719                     	;# 
  1368  071A                     	;# 
  1369  071B                     	;# 
  1370  071C                     	;# 
  1371  071D                     	;# 
  1372  071E                     	;# 
  1373  0796                     	;# 
  1374  0797                     	;# 
  1375  0798                     	;# 
  1376  0799                     	;# 
  1377  079A                     	;# 
  1378  079B                     	;# 
  1379  079C                     	;# 
  1380  079D                     	;# 
  1381  080C                     	;# 
  1382  080D                     	;# 
  1383  080E                     	;# 
  1384  080F                     	;# 
  1385  0810                     	;# 
  1386  0811                     	;# 
  1387  0812                     	;# 
  1388  0813                     	;# 
  1389  0814                     	;# 
  1390  081A                     	;# 
  1391  081A                     	;# 
  1392  081B                     	;# 
  1393  081C                     	;# 
  1394  081C                     	;# 
  1395  081D                     	;# 
  1396  081E                     	;# 
  1397  081F                     	;# 
  1398  088C                     	;# 
  1399  088D                     	;# 
  1400  088E                     	;# 
  1401  088F                     	;# 
  1402  0890                     	;# 
  1403  0891                     	;# 
  1404  0892                     	;# 
  1405  0893                     	;# 
  1406  0895                     	;# 
  1407  0896                     	;# 
  1408  0897                     	;# 
  1409  0898                     	;# 
  1410  0899                     	;# 
  1411  089A                     	;# 
  1412  089B                     	;# 
  1413  090C                     	;# 
  1414  090E                     	;# 
  1415  090F                     	;# 
  1416  091F                     	;# 
  1417  098F                     	;# 
  1418  098F                     	;# 
  1419  0990                     	;# 
  1420  0991                     	;# 
  1421  0992                     	;# 
  1422  0993                     	;# 
  1423  0994                     	;# 
  1424  0995                     	;# 
  1425  0996                     	;# 
  1426  0997                     	;# 
  1427  1E0F                     	;# 
  1428  1E10                     	;# 
  1429  1E11                     	;# 
  1430  1E12                     	;# 
  1431  1E13                     	;# 
  1432  1E14                     	;# 
  1433  1E15                     	;# 
  1434  1E16                     	;# 
  1435  1E17                     	;# 
  1436  1E18                     	;# 
  1437  1E19                     	;# 
  1438  1E1A                     	;# 
  1439  1E1B                     	;# 
  1440  1E1C                     	;# 
  1441  1E1D                     	;# 
  1442  1E1E                     	;# 
  1443  1E1F                     	;# 
  1444  1E20                     	;# 
  1445  1E21                     	;# 
  1446  1E22                     	;# 
  1447  1E23                     	;# 
  1448  1E24                     	;# 
  1449  1E25                     	;# 
  1450  1E26                     	;# 
  1451  1E27                     	;# 
  1452  1E28                     	;# 
  1453  1E29                     	;# 
  1454  1E2A                     	;# 
  1455  1E2B                     	;# 
  1456  1E2C                     	;# 
  1457  1E2D                     	;# 
  1458  1E2E                     	;# 
  1459  1E2F                     	;# 
  1460  1E30                     	;# 
  1461  1E31                     	;# 
  1462  1E32                     	;# 
  1463  1E33                     	;# 
  1464  1E34                     	;# 
  1465  1E35                     	;# 
  1466  1E36                     	;# 
  1467  1E37                     	;# 
  1468  1E8F                     	;# 
  1469  1E90                     	;# 
  1470  1E91                     	;# 
  1471  1E92                     	;# 
  1472  1E93                     	;# 
  1473  1E94                     	;# 
  1474  1E95                     	;# 
  1475  1E96                     	;# 
  1476  1E97                     	;# 
  1477  1E9C                     	;# 
  1478  1E9D                     	;# 
  1479  1E9E                     	;# 
  1480  1EA1                     	;# 
  1481  1EA2                     	;# 
  1482  1EA3                     	;# 
  1483  1EA4                     	;# 
  1484  1EA9                     	;# 
  1485  1EAA                     	;# 
  1486  1EB1                     	;# 
  1487  1EB2                     	;# 
  1488  1EB8                     	;# 
  1489  1EB9                     	;# 
  1490  1EBA                     	;# 
  1491  1EBB                     	;# 
  1492  1EBC                     	;# 
  1493  1EBD                     	;# 
  1494  1EBE                     	;# 
  1495  1EC3                     	;# 
  1496  1EC5                     	;# 
  1497  1EC6                     	;# 
  1498  1EC7                     	;# 
  1499  1EC8                     	;# 
  1500  1EC9                     	;# 
  1501  1ECA                     	;# 
  1502  1ECB                     	;# 
  1503  1ECB                     	;# 
  1504  1ECB                     	;# 
  1505  1ECC                     	;# 
  1506  1ECC                     	;# 
  1507  1ECC                     	;# 
  1508  1F10                     	;# 
  1509  1F11                     	;# 
  1510  1F12                     	;# 
  1511  1F14                     	;# 
  1512  1F15                     	;# 
  1513  1F1C                     	;# 
  1514  1F1D                     	;# 
  1515  1F1E                     	;# 
  1516  1F1F                     	;# 
  1517  1F20                     	;# 
  1518  1F21                     	;# 
  1519  1F22                     	;# 
  1520  1F23                     	;# 
  1521  1F24                     	;# 
  1522  1F25                     	;# 
  1523  1F26                     	;# 
  1524  1F27                     	;# 
  1525  1F38                     	;# 
  1526  1F39                     	;# 
  1527  1F3A                     	;# 
  1528  1F3B                     	;# 
  1529  1F3C                     	;# 
  1530  1F3D                     	;# 
  1531  1F3E                     	;# 
  1532  1F3F                     	;# 
  1533  1F43                     	;# 
  1534  1F44                     	;# 
  1535  1F45                     	;# 
  1536  1F46                     	;# 
  1537  1F47                     	;# 
  1538  1F48                     	;# 
  1539  1F49                     	;# 
  1540  1F4A                     	;# 
  1541  1F4E                     	;# 
  1542  1F4F                     	;# 
  1543  1F50                     	;# 
  1544  1F51                     	;# 
  1545  1F52                     	;# 
  1546  1F53                     	;# 
  1547  1F54                     	;# 
  1548  1F55                     	;# 
  1549  1FE4                     	;# 
  1550  1FE5                     	;# 
  1551  1FE6                     	;# 
  1552  1FE7                     	;# 
  1553  1FE8                     	;# 
  1554  1FE8                     	;# 
  1555  1FE9                     	;# 
  1556  1FEA                     	;# 
  1557  1FEB                     	;# 
  1558  1FED                     	;# 
  1559  1FEE                     	;# 
  1560  1FEF                     	;# 
  1561  0000                     	;# 
  1562  0001                     	;# 
  1563  0002                     	;# 
  1564  0003                     	;# 
  1565  0004                     	;# 
  1566  0005                     	;# 
  1567  0006                     	;# 
  1568  0007                     	;# 
  1569  0008                     	;# 
  1570  0009                     	;# 
  1571  000A                     	;# 
  1572  000B                     	;# 
  1573  000C                     	;# 
  1574  000D                     	;# 
  1575  000E                     	;# 
  1576  0012                     	;# 
  1577  0013                     	;# 
  1578  0014                     	;# 
  1579  0018                     	;# 
  1580  0019                     	;# 
  1581  001A                     	;# 
  1582  008C                     	;# 
  1583  008C                     	;# 
  1584  008D                     	;# 
  1585  008E                     	;# 
  1586  008E                     	;# 
  1587  008F                     	;# 
  1588  0090                     	;# 
  1589  0090                     	;# 
  1590  0091                     	;# 
  1591  0092                     	;# 
  1592  0092                     	;# 
  1593  0093                     	;# 
  1594  0094                     	;# 
  1595  0094                     	;# 
  1596  0095                     	;# 
  1597  0096                     	;# 
  1598  0096                     	;# 
  1599  0097                     	;# 
  1600  0098                     	;# 
  1601  0099                     	;# 
  1602  009A                     	;# 
  1603  009B                     	;# 
  1604  009B                     	;# 
  1605  009C                     	;# 
  1606  009D                     	;# 
  1607  009D                     	;# 
  1608  009E                     	;# 
  1609  009F                     	;# 
  1610  010C                     	;# 
  1611  010C                     	;# 
  1612  010D                     	;# 
  1613  010E                     	;# 
  1614  010F                     	;# 
  1615  010F                     	;# 
  1616  0110                     	;# 
  1617  0111                     	;# 
  1618  0112                     	;# 
  1619  0113                     	;# 
  1620  0114                     	;# 
  1621  0115                     	;# 
  1622  0116                     	;# 
  1623  0117                     	;# 
  1624  0118                     	;# 
  1625  0119                     	;# 
  1626  0119                     	;# 
  1627  0119                     	;# 
  1628  011A                     	;# 
  1629  011A                     	;# 
  1630  011A                     	;# 
  1631  011B                     	;# 
  1632  011B                     	;# 
  1633  011B                     	;# 
  1634  011B                     	;# 
  1635  011B                     	;# 
  1636  011C                     	;# 
  1637  011C                     	;# 
  1638  011C                     	;# 
  1639  011D                     	;# 
  1640  011D                     	;# 
  1641  011D                     	;# 
  1642  011E                     	;# 
  1643  011E                     	;# 
  1644  011E                     	;# 
  1645  011F                     	;# 
  1646  011F                     	;# 
  1647  011F                     	;# 
  1648  011F                     	;# 
  1649  011F                     	;# 
  1650  018C                     	;# 
  1651  018D                     	;# 
  1652  018E                     	;# 
  1653  018F                     	;# 
  1654  0190                     	;# 
  1655  0191                     	;# 
  1656  0192                     	;# 
  1657  0196                     	;# 
  1658  0197                     	;# 
  1659  0198                     	;# 
  1660  0199                     	;# 
  1661  019A                     	;# 
  1662  019B                     	;# 
  1663  019C                     	;# 
  1664  020C                     	;# 
  1665  020D                     	;# 
  1666  020E                     	;# 
  1667  020E                     	;# 
  1668  020F                     	;# 
  1669  020F                     	;# 
  1670  0210                     	;# 
  1671  0210                     	;# 
  1672  0211                     	;# 
  1673  0211                     	;# 
  1674  0212                     	;# 
  1675  0213                     	;# 
  1676  0214                     	;# 
  1677  0214                     	;# 
  1678  0215                     	;# 
  1679  0215                     	;# 
  1680  0216                     	;# 
  1681  0216                     	;# 
  1682  0217                     	;# 
  1683  0217                     	;# 
  1684  0218                     	;# 
  1685  0219                     	;# 
  1686  021A                     	;# 
  1687  021A                     	;# 
  1688  021B                     	;# 
  1689  021B                     	;# 
  1690  021C                     	;# 
  1691  021C                     	;# 
  1692  021D                     	;# 
  1693  021D                     	;# 
  1694  021E                     	;# 
  1695  021F                     	;# 
  1696  028C                     	;# 
  1697  028C                     	;# 
  1698  028D                     	;# 
  1699  028D                     	;# 
  1700  028E                     	;# 
  1701  028F                     	;# 
  1702  0290                     	;# 
  1703  0291                     	;# 
  1704  0292                     	;# 
  1705  0292                     	;# 
  1706  0293                     	;# 
  1707  0293                     	;# 
  1708  0294                     	;# 
  1709  0295                     	;# 
  1710  0296                     	;# 
  1711  0297                     	;# 
  1712  0298                     	;# 
  1713  0298                     	;# 
  1714  0299                     	;# 
  1715  0299                     	;# 
  1716  029A                     	;# 
  1717  029B                     	;# 
  1718  029C                     	;# 
  1719  029D                     	;# 
  1720  029F                     	;# 
  1721  030C                     	;# 
  1722  030C                     	;# 
  1723  030D                     	;# 
  1724  030E                     	;# 
  1725  030F                     	;# 
  1726  0310                     	;# 
  1727  0310                     	;# 
  1728  0311                     	;# 
  1729  0312                     	;# 
  1730  0313                     	;# 
  1731  0314                     	;# 
  1732  0314                     	;# 
  1733  0315                     	;# 
  1734  0316                     	;# 
  1735  0317                     	;# 
  1736  0318                     	;# 
  1737  0318                     	;# 
  1738  0319                     	;# 
  1739  031A                     	;# 
  1740  031B                     	;# 
  1741  038C                     	;# 
  1742  038C                     	;# 
  1743  038D                     	;# 
  1744  038E                     	;# 
  1745  0390                     	;# 
  1746  0390                     	;# 
  1747  0391                     	;# 
  1748  0392                     	;# 
  1749  048C                     	;# 
  1750  048C                     	;# 
  1751  048D                     	;# 
  1752  048E                     	;# 
  1753  048F                     	;# 
  1754  048F                     	;# 
  1755  0490                     	;# 
  1756  0491                     	;# 
  1757  0492                     	;# 
  1758  0492                     	;# 
  1759  0493                     	;# 
  1760  0494                     	;# 
  1761  0495                     	;# 
  1762  0495                     	;# 
  1763  0496                     	;# 
  1764  0497                     	;# 
  1765  0498                     	;# 
  1766  0499                     	;# 
  1767  049A                     	;# 
  1768  049B                     	;# 
  1769  049C                     	;# 
  1770  049D                     	;# 
  1771  058C                     	;# 
  1772  058C                     	;# 
  1773  058D                     	;# 
  1774  058E                     	;# 
  1775  058F                     	;# 
  1776  058F                     	;# 
  1777  0590                     	;# 
  1778  0591                     	;# 
  1779  0592                     	;# 
  1780  0593                     	;# 
  1781  059C                     	;# 
  1782  059C                     	;# 
  1783  059D                     	;# 
  1784  059D                     	;# 
  1785  059E                     	;# 
  1786  059F                     	;# 
  1787  060C                     	;# 
  1788  060C                     	;# 
  1789  060D                     	;# 
  1790  060D                     	;# 
  1791  060E                     	;# 
  1792  060F                     	;# 
  1793  0610                     	;# 
  1794  0611                     	;# 
  1795  0612                     	;# 
  1796  0613                     	;# 
  1797  0614                     	;# 
  1798  0616                     	;# 
  1799  0616                     	;# 
  1800  0617                     	;# 
  1801  0617                     	;# 
  1802  0618                     	;# 
  1803  0619                     	;# 
  1804  061A                     	;# 
  1805  061B                     	;# 
  1806  061C                     	;# 
  1807  061D                     	;# 
  1808  061E                     	;# 
  1809  070C                     	;# 
  1810  070D                     	;# 
  1811  070E                     	;# 
  1812  070F                     	;# 
  1813  0710                     	;# 
  1814  0711                     	;# 
  1815  0712                     	;# 
  1816  0713                     	;# 
  1817  0714                     	;# 
  1818  0716                     	;# 
  1819  0717                     	;# 
  1820  0718                     	;# 
  1821  0719                     	;# 
  1822  071A                     	;# 
  1823  071B                     	;# 
  1824  071C                     	;# 
  1825  071D                     	;# 
  1826  071E                     	;# 
  1827  0796                     	;# 
  1828  0797                     	;# 
  1829  0798                     	;# 
  1830  0799                     	;# 
  1831  079A                     	;# 
  1832  079B                     	;# 
  1833  079C                     	;# 
  1834  079D                     	;# 
  1835  080C                     	;# 
  1836  080D                     	;# 
  1837  080E                     	;# 
  1838  080F                     	;# 
  1839  0810                     	;# 
  1840  0811                     	;# 
  1841  0812                     	;# 
  1842  0813                     	;# 
  1843  0814                     	;# 
  1844  081A                     	;# 
  1845  081A                     	;# 
  1846  081B                     	;# 
  1847  081C                     	;# 
  1848  081C                     	;# 
  1849  081D                     	;# 
  1850  081E                     	;# 
  1851  081F                     	;# 
  1852  088C                     	;# 
  1853  088D                     	;# 
  1854  088E                     	;# 
  1855  088F                     	;# 
  1856  0890                     	;# 
  1857  0891                     	;# 
  1858  0892                     	;# 
  1859  0893                     	;# 
  1860  0895                     	;# 
  1861  0896                     	;# 
  1862  0897                     	;# 
  1863  0898                     	;# 
  1864  0899                     	;# 
  1865  089A                     	;# 
  1866  089B                     	;# 
  1867  090C                     	;# 
  1868  090E                     	;# 
  1869  090F                     	;# 
  1870  091F                     	;# 
  1871  098F                     	;# 
  1872  098F                     	;# 
  1873  0990                     	;# 
  1874  0991                     	;# 
  1875  0992                     	;# 
  1876  0993                     	;# 
  1877  0994                     	;# 
  1878  0995                     	;# 
  1879  0996                     	;# 
  1880  0997                     	;# 
  1881  1E0F                     	;# 
  1882  1E10                     	;# 
  1883  1E11                     	;# 
  1884  1E12                     	;# 
  1885  1E13                     	;# 
  1886  1E14                     	;# 
  1887  1E15                     	;# 
  1888  1E16                     	;# 
  1889  1E17                     	;# 
  1890  1E18                     	;# 
  1891  1E19                     	;# 
  1892  1E1A                     	;# 
  1893  1E1B                     	;# 
  1894  1E1C                     	;# 
  1895  1E1D                     	;# 
  1896  1E1E                     	;# 
  1897  1E1F                     	;# 
  1898  1E20                     	;# 
  1899  1E21                     	;# 
  1900  1E22                     	;# 
  1901  1E23                     	;# 
  1902  1E24                     	;# 
  1903  1E25                     	;# 
  1904  1E26                     	;# 
  1905  1E27                     	;# 
  1906  1E28                     	;# 
  1907  1E29                     	;# 
  1908  1E2A                     	;# 
  1909  1E2B                     	;# 
  1910  1E2C                     	;# 
  1911  1E2D                     	;# 
  1912  1E2E                     	;# 
  1913  1E2F                     	;# 
  1914  1E30                     	;# 
  1915  1E31                     	;# 
  1916  1E32                     	;# 
  1917  1E33                     	;# 
  1918  1E34                     	;# 
  1919  1E35                     	;# 
  1920  1E36                     	;# 
  1921  1E37                     	;# 
  1922  1E8F                     	;# 
  1923  1E90                     	;# 
  1924  1E91                     	;# 
  1925  1E92                     	;# 
  1926  1E93                     	;# 
  1927  1E94                     	;# 
  1928  1E95                     	;# 
  1929  1E96                     	;# 
  1930  1E97                     	;# 
  1931  1E9C                     	;# 
  1932  1E9D                     	;# 
  1933  1E9E                     	;# 
  1934  1EA1                     	;# 
  1935  1EA2                     	;# 
  1936  1EA3                     	;# 
  1937  1EA4                     	;# 
  1938  1EA9                     	;# 
  1939  1EAA                     	;# 
  1940  1EB1                     	;# 
  1941  1EB2                     	;# 
  1942  1EB8                     	;# 
  1943  1EB9                     	;# 
  1944  1EBA                     	;# 
  1945  1EBB                     	;# 
  1946  1EBC                     	;# 
  1947  1EBD                     	;# 
  1948  1EBE                     	;# 
  1949  1EC3                     	;# 
  1950  1EC5                     	;# 
  1951  1EC6                     	;# 
  1952  1EC7                     	;# 
  1953  1EC8                     	;# 
  1954  1EC9                     	;# 
  1955  1ECA                     	;# 
  1956  1ECB                     	;# 
  1957  1ECB                     	;# 
  1958  1ECB                     	;# 
  1959  1ECC                     	;# 
  1960  1ECC                     	;# 
  1961  1ECC                     	;# 
  1962  1F10                     	;# 
  1963  1F11                     	;# 
  1964  1F12                     	;# 
  1965  1F14                     	;# 
  1966  1F15                     	;# 
  1967  1F1C                     	;# 
  1968  1F1D                     	;# 
  1969  1F1E                     	;# 
  1970  1F1F                     	;# 
  1971  1F20                     	;# 
  1972  1F21                     	;# 
  1973  1F22                     	;# 
  1974  1F23                     	;# 
  1975  1F24                     	;# 
  1976  1F25                     	;# 
  1977  1F26                     	;# 
  1978  1F27                     	;# 
  1979  1F38                     	;# 
  1980  1F39                     	;# 
  1981  1F3A                     	;# 
  1982  1F3B                     	;# 
  1983  1F3C                     	;# 
  1984  1F3D                     	;# 
  1985  1F3E                     	;# 
  1986  1F3F                     	;# 
  1987  1F43                     	;# 
  1988  1F44                     	;# 
  1989  1F45                     	;# 
  1990  1F46                     	;# 
  1991  1F47                     	;# 
  1992  1F48                     	;# 
  1993  1F49                     	;# 
  1994  1F4A                     	;# 
  1995  1F4E                     	;# 
  1996  1F4F                     	;# 
  1997  1F50                     	;# 
  1998  1F51                     	;# 
  1999  1F52                     	;# 
  2000  1F53                     	;# 
  2001  1F54                     	;# 
  2002  1F55                     	;# 
  2003  1FE4                     	;# 
  2004  1FE5                     	;# 
  2005  1FE6                     	;# 
  2006  1FE7                     	;# 
  2007  1FE8                     	;# 
  2008  1FE8                     	;# 
  2009  1FE9                     	;# 
  2010  1FEA                     	;# 
  2011  1FEB                     	;# 
  2012  1FED                     	;# 
  2013  1FEE                     	;# 
  2014  1FEF                     	;# 
  2015  0000                     	;# 
  2016  0001                     	;# 
  2017  0002                     	;# 
  2018  0003                     	;# 
  2019  0004                     	;# 
  2020  0005                     	;# 
  2021  0006                     	;# 
  2022  0007                     	;# 
  2023  0008                     	;# 
  2024  0009                     	;# 
  2025  000A                     	;# 
  2026  000B                     	;# 
  2027  000C                     	;# 
  2028  000D                     	;# 
  2029  000E                     	;# 
  2030  0012                     	;# 
  2031  0013                     	;# 
  2032  0014                     	;# 
  2033  0018                     	;# 
  2034  0019                     	;# 
  2035  001A                     	;# 
  2036  008C                     	;# 
  2037  008C                     	;# 
  2038  008D                     	;# 
  2039  008E                     	;# 
  2040  008E                     	;# 
  2041  008F                     	;# 
  2042  0090                     	;# 
  2043  0090                     	;# 
  2044  0091                     	;# 
  2045  0092                     	;# 
  2046  0092                     	;# 
  2047  0093                     	;# 
  2048  0094                     	;# 
  2049  0094                     	;# 
  2050  0095                     	;# 
  2051  0096                     	;# 
  2052  0096                     	;# 
  2053  0097                     	;# 
  2054  0098                     	;# 
  2055  0099                     	;# 
  2056  009A                     	;# 
  2057  009B                     	;# 
  2058  009B                     	;# 
  2059  009C                     	;# 
  2060  009D                     	;# 
  2061  009D                     	;# 
  2062  009E                     	;# 
  2063  009F                     	;# 
  2064  010C                     	;# 
  2065  010C                     	;# 
  2066  010D                     	;# 
  2067  010E                     	;# 
  2068  010F                     	;# 
  2069  010F                     	;# 
  2070  0110                     	;# 
  2071  0111                     	;# 
  2072  0112                     	;# 
  2073  0113                     	;# 
  2074  0114                     	;# 
  2075  0115                     	;# 
  2076  0116                     	;# 
  2077  0117                     	;# 
  2078  0118                     	;# 
  2079  0119                     	;# 
  2080  0119                     	;# 
  2081  0119                     	;# 
  2082  011A                     	;# 
  2083  011A                     	;# 
  2084  011A                     	;# 
  2085  011B                     	;# 
  2086  011B                     	;# 
  2087  011B                     	;# 
  2088  011B                     	;# 
  2089  011B                     	;# 
  2090  011C                     	;# 
  2091  011C                     	;# 
  2092  011C                     	;# 
  2093  011D                     	;# 
  2094  011D                     	;# 
  2095  011D                     	;# 
  2096  011E                     	;# 
  2097  011E                     	;# 
  2098  011E                     	;# 
  2099  011F                     	;# 
  2100  011F                     	;# 
  2101  011F                     	;# 
  2102  011F                     	;# 
  2103  011F                     	;# 
  2104  018C                     	;# 
  2105  018D                     	;# 
  2106  018E                     	;# 
  2107  018F                     	;# 
  2108  0190                     	;# 
  2109  0191                     	;# 
  2110  0192                     	;# 
  2111  0196                     	;# 
  2112  0197                     	;# 
  2113  0198                     	;# 
  2114  0199                     	;# 
  2115  019A                     	;# 
  2116  019B                     	;# 
  2117  019C                     	;# 
  2118  020C                     	;# 
  2119  020D                     	;# 
  2120  020E                     	;# 
  2121  020E                     	;# 
  2122  020F                     	;# 
  2123  020F                     	;# 
  2124  0210                     	;# 
  2125  0210                     	;# 
  2126  0211                     	;# 
  2127  0211                     	;# 
  2128  0212                     	;# 
  2129  0213                     	;# 
  2130  0214                     	;# 
  2131  0214                     	;# 
  2132  0215                     	;# 
  2133  0215                     	;# 
  2134  0216                     	;# 
  2135  0216                     	;# 
  2136  0217                     	;# 
  2137  0217                     	;# 
  2138  0218                     	;# 
  2139  0219                     	;# 
  2140  021A                     	;# 
  2141  021A                     	;# 
  2142  021B                     	;# 
  2143  021B                     	;# 
  2144  021C                     	;# 
  2145  021C                     	;# 
  2146  021D                     	;# 
  2147  021D                     	;# 
  2148  021E                     	;# 
  2149  021F                     	;# 
  2150  028C                     	;# 
  2151  028C                     	;# 
  2152  028D                     	;# 
  2153  028D                     	;# 
  2154  028E                     	;# 
  2155  028F                     	;# 
  2156  0290                     	;# 
  2157  0291                     	;# 
  2158  0292                     	;# 
  2159  0292                     	;# 
  2160  0293                     	;# 
  2161  0293                     	;# 
  2162  0294                     	;# 
  2163  0295                     	;# 
  2164  0296                     	;# 
  2165  0297                     	;# 
  2166  0298                     	;# 
  2167  0298                     	;# 
  2168  0299                     	;# 
  2169  0299                     	;# 
  2170  029A                     	;# 
  2171  029B                     	;# 
  2172  029C                     	;# 
  2173  029D                     	;# 
  2174  029F                     	;# 
  2175  030C                     	;# 
  2176  030C                     	;# 
  2177  030D                     	;# 
  2178  030E                     	;# 
  2179  030F                     	;# 
  2180  0310                     	;# 
  2181  0310                     	;# 
  2182  0311                     	;# 
  2183  0312                     	;# 
  2184  0313                     	;# 
  2185  0314                     	;# 
  2186  0314                     	;# 
  2187  0315                     	;# 
  2188  0316                     	;# 
  2189  0317                     	;# 
  2190  0318                     	;# 
  2191  0318                     	;# 
  2192  0319                     	;# 
  2193  031A                     	;# 
  2194  031B                     	;# 
  2195  038C                     	;# 
  2196  038C                     	;# 
  2197  038D                     	;# 
  2198  038E                     	;# 
  2199  0390                     	;# 
  2200  0390                     	;# 
  2201  0391                     	;# 
  2202  0392                     	;# 
  2203  048C                     	;# 
  2204  048C                     	;# 
  2205  048D                     	;# 
  2206  048E                     	;# 
  2207  048F                     	;# 
  2208  048F                     	;# 
  2209  0490                     	;# 
  2210  0491                     	;# 
  2211  0492                     	;# 
  2212  0492                     	;# 
  2213  0493                     	;# 
  2214  0494                     	;# 
  2215  0495                     	;# 
  2216  0495                     	;# 
  2217  0496                     	;# 
  2218  0497                     	;# 
  2219  0498                     	;# 
  2220  0499                     	;# 
  2221  049A                     	;# 
  2222  049B                     	;# 
  2223  049C                     	;# 
  2224  049D                     	;# 
  2225  058C                     	;# 
  2226  058C                     	;# 
  2227  058D                     	;# 
  2228  058E                     	;# 
  2229  058F                     	;# 
  2230  058F                     	;# 
  2231  0590                     	;# 
  2232  0591                     	;# 
  2233  0592                     	;# 
  2234  0593                     	;# 
  2235  059C                     	;# 
  2236  059C                     	;# 
  2237  059D                     	;# 
  2238  059D                     	;# 
  2239  059E                     	;# 
  2240  059F                     	;# 
  2241  060C                     	;# 
  2242  060C                     	;# 
  2243  060D                     	;# 
  2244  060D                     	;# 
  2245  060E                     	;# 
  2246  060F                     	;# 
  2247  0610                     	;# 
  2248  0611                     	;# 
  2249  0612                     	;# 
  2250  0613                     	;# 
  2251  0614                     	;# 
  2252  0616                     	;# 
  2253  0616                     	;# 
  2254  0617                     	;# 
  2255  0617                     	;# 
  2256  0618                     	;# 
  2257  0619                     	;# 
  2258  061A                     	;# 
  2259  061B                     	;# 
  2260  061C                     	;# 
  2261  061D                     	;# 
  2262  061E                     	;# 
  2263  070C                     	;# 
  2264  070D                     	;# 
  2265  070E                     	;# 
  2266  070F                     	;# 
  2267  0710                     	;# 
  2268  0711                     	;# 
  2269  0712                     	;# 
  2270  0713                     	;# 
  2271  0714                     	;# 
  2272  0716                     	;# 
  2273  0717                     	;# 
  2274  0718                     	;# 
  2275  0719                     	;# 
  2276  071A                     	;# 
  2277  071B                     	;# 
  2278  071C                     	;# 
  2279  071D                     	;# 
  2280  071E                     	;# 
  2281  0796                     	;# 
  2282  0797                     	;# 
  2283  0798                     	;# 
  2284  0799                     	;# 
  2285  079A                     	;# 
  2286  079B                     	;# 
  2287  079C                     	;# 
  2288  079D                     	;# 
  2289  080C                     	;# 
  2290  080D                     	;# 
  2291  080E                     	;# 
  2292  080F                     	;# 
  2293  0810                     	;# 
  2294  0811                     	;# 
  2295  0812                     	;# 
  2296  0813                     	;# 
  2297  0814                     	;# 
  2298  081A                     	;# 
  2299  081A                     	;# 
  2300  081B                     	;# 
  2301  081C                     	;# 
  2302  081C                     	;# 
  2303  081D                     	;# 
  2304  081E                     	;# 
  2305  081F                     	;# 
  2306  088C                     	;# 
  2307  088D                     	;# 
  2308  088E                     	;# 
  2309  088F                     	;# 
  2310  0890                     	;# 
  2311  0891                     	;# 
  2312  0892                     	;# 
  2313  0893                     	;# 
  2314  0895                     	;# 
  2315  0896                     	;# 
  2316  0897                     	;# 
  2317  0898                     	;# 
  2318  0899                     	;# 
  2319  089A                     	;# 
  2320  089B                     	;# 
  2321  090C                     	;# 
  2322  090E                     	;# 
  2323  090F                     	;# 
  2324  091F                     	;# 
  2325  098F                     	;# 
  2326  098F                     	;# 
  2327  0990                     	;# 
  2328  0991                     	;# 
  2329  0992                     	;# 
  2330  0993                     	;# 
  2331  0994                     	;# 
  2332  0995                     	;# 
  2333  0996                     	;# 
  2334  0997                     	;# 
  2335  1E0F                     	;# 
  2336  1E10                     	;# 
  2337  1E11                     	;# 
  2338  1E12                     	;# 
  2339  1E13                     	;# 
  2340  1E14                     	;# 
  2341  1E15                     	;# 
  2342  1E16                     	;# 
  2343  1E17                     	;# 
  2344  1E18                     	;# 
  2345  1E19                     	;# 
  2346  1E1A                     	;# 
  2347  1E1B                     	;# 
  2348  1E1C                     	;# 
  2349  1E1D                     	;# 
  2350  1E1E                     	;# 
  2351  1E1F                     	;# 
  2352  1E20                     	;# 
  2353  1E21                     	;# 
  2354  1E22                     	;# 
  2355  1E23                     	;# 
  2356  1E24                     	;# 
  2357  1E25                     	;# 
  2358  1E26                     	;# 
  2359  1E27                     	;# 
  2360  1E28                     	;# 
  2361  1E29                     	;# 
  2362  1E2A                     	;# 
  2363  1E2B                     	;# 
  2364  1E2C                     	;# 
  2365  1E2D                     	;# 
  2366  1E2E                     	;# 
  2367  1E2F                     	;# 
  2368  1E30                     	;# 
  2369  1E31                     	;# 
  2370  1E32                     	;# 
  2371  1E33                     	;# 
  2372  1E34                     	;# 
  2373  1E35                     	;# 
  2374  1E36                     	;# 
  2375  1E37                     	;# 
  2376  1E8F                     	;# 
  2377  1E90                     	;# 
  2378  1E91                     	;# 
  2379  1E92                     	;# 
  2380  1E93                     	;# 
  2381  1E94                     	;# 
  2382  1E95                     	;# 
  2383  1E96                     	;# 
  2384  1E97                     	;# 
  2385  1E9C                     	;# 
  2386  1E9D                     	;# 
  2387  1E9E                     	;# 
  2388  1EA1                     	;# 
  2389  1EA2                     	;# 
  2390  1EA3                     	;# 
  2391  1EA4                     	;# 
  2392  1EA9                     	;# 
  2393  1EAA                     	;# 
  2394  1EB1                     	;# 
  2395  1EB2                     	;# 
  2396  1EB8                     	;# 
  2397  1EB9                     	;# 
  2398  1EBA                     	;# 
  2399  1EBB                     	;# 
  2400  1EBC                     	;# 
  2401  1EBD                     	;# 
  2402  1EBE                     	;# 
  2403  1EC3                     	;# 
  2404  1EC5                     	;# 
  2405  1EC6                     	;# 
  2406  1EC7                     	;# 
  2407  1EC8                     	;# 
  2408  1EC9                     	;# 
  2409  1ECA                     	;# 
  2410  1ECB                     	;# 
  2411  1ECB                     	;# 
  2412  1ECB                     	;# 
  2413  1ECC                     	;# 
  2414  1ECC                     	;# 
  2415  1ECC                     	;# 
  2416  1F10                     	;# 
  2417  1F11                     	;# 
  2418  1F12                     	;# 
  2419  1F14                     	;# 
  2420  1F15                     	;# 
  2421  1F1C                     	;# 
  2422  1F1D                     	;# 
  2423  1F1E                     	;# 
  2424  1F1F                     	;# 
  2425  1F20                     	;# 
  2426  1F21                     	;# 
  2427  1F22                     	;# 
  2428  1F23                     	;# 
  2429  1F24                     	;# 
  2430  1F25                     	;# 
  2431  1F26                     	;# 
  2432  1F27                     	;# 
  2433  1F38                     	;# 
  2434  1F39                     	;# 
  2435  1F3A                     	;# 
  2436  1F3B                     	;# 
  2437  1F3C                     	;# 
  2438  1F3D                     	;# 
  2439  1F3E                     	;# 
  2440  1F3F                     	;# 
  2441  1F43                     	;# 
  2442  1F44                     	;# 
  2443  1F45                     	;# 
  2444  1F46                     	;# 
  2445  1F47                     	;# 
  2446  1F48                     	;# 
  2447  1F49                     	;# 
  2448  1F4A                     	;# 
  2449  1F4E                     	;# 
  2450  1F4F                     	;# 
  2451  1F50                     	;# 
  2452  1F51                     	;# 
  2453  1F52                     	;# 
  2454  1F53                     	;# 
  2455  1F54                     	;# 
  2456  1F55                     	;# 
  2457  1FE4                     	;# 
  2458  1FE5                     	;# 
  2459  1FE6                     	;# 
  2460  1FE7                     	;# 
  2461  1FE8                     	;# 
  2462  1FE8                     	;# 
  2463  1FE9                     	;# 
  2464  1FEA                     	;# 
  2465  1FEB                     	;# 
  2466  1FED                     	;# 
  2467  1FEE                     	;# 
  2468  1FEF                     	;# 
  2469  0000                     	;# 
  2470  0001                     	;# 
  2471  0002                     	;# 
  2472  0003                     	;# 
  2473  0004                     	;# 
  2474  0005                     	;# 
  2475  0006                     	;# 
  2476  0007                     	;# 
  2477  0008                     	;# 
  2478  0009                     	;# 
  2479  000A                     	;# 
  2480  000B                     	;# 
  2481  000C                     	;# 
  2482  000D                     	;# 
  2483  000E                     	;# 
  2484  0012                     	;# 
  2485  0013                     	;# 
  2486  0014                     	;# 
  2487  0018                     	;# 
  2488  0019                     	;# 
  2489  001A                     	;# 
  2490  008C                     	;# 
  2491  008C                     	;# 
  2492  008D                     	;# 
  2493  008E                     	;# 
  2494  008E                     	;# 
  2495  008F                     	;# 
  2496  0090                     	;# 
  2497  0090                     	;# 
  2498  0091                     	;# 
  2499  0092                     	;# 
  2500  0092                     	;# 
  2501  0093                     	;# 
  2502  0094                     	;# 
  2503  0094                     	;# 
  2504  0095                     	;# 
  2505  0096                     	;# 
  2506  0096                     	;# 
  2507  0097                     	;# 
  2508  0098                     	;# 
  2509  0099                     	;# 
  2510  009A                     	;# 
  2511  009B                     	;# 
  2512  009B                     	;# 
  2513  009C                     	;# 
  2514  009D                     	;# 
  2515  009D                     	;# 
  2516  009E                     	;# 
  2517  009F                     	;# 
  2518  010C                     	;# 
  2519  010C                     	;# 
  2520  010D                     	;# 
  2521  010E                     	;# 
  2522  010F                     	;# 
  2523  010F                     	;# 
  2524  0110                     	;# 
  2525  0111                     	;# 
  2526  0112                     	;# 
  2527  0113                     	;# 
  2528  0114                     	;# 
  2529  0115                     	;# 
  2530  0116                     	;# 
  2531  0117                     	;# 
  2532  0118                     	;# 
  2533  0119                     	;# 
  2534  0119                     	;# 
  2535  0119                     	;# 
  2536  011A                     	;# 
  2537  011A                     	;# 
  2538  011A                     	;# 
  2539  011B                     	;# 
  2540  011B                     	;# 
  2541  011B                     	;# 
  2542  011B                     	;# 
  2543  011B                     	;# 
  2544  011C                     	;# 
  2545  011C                     	;# 
  2546  011C                     	;# 
  2547  011D                     	;# 
  2548  011D                     	;# 
  2549  011D                     	;# 
  2550  011E                     	;# 
  2551  011E                     	;# 
  2552  011E                     	;# 
  2553  011F                     	;# 
  2554  011F                     	;# 
  2555  011F                     	;# 
  2556  011F                     	;# 
  2557  011F                     	;# 
  2558  018C                     	;# 
  2559  018D                     	;# 
  2560  018E                     	;# 
  2561  018F                     	;# 
  2562  0190                     	;# 
  2563  0191                     	;# 
  2564  0192                     	;# 
  2565  0196                     	;# 
  2566  0197                     	;# 
  2567  0198                     	;# 
  2568  0199                     	;# 
  2569  019A                     	;# 
  2570  019B                     	;# 
  2571  019C                     	;# 
  2572  020C                     	;# 
  2573  020D                     	;# 
  2574  020E                     	;# 
  2575  020E                     	;# 
  2576  020F                     	;# 
  2577  020F                     	;# 
  2578  0210                     	;# 
  2579  0210                     	;# 
  2580  0211                     	;# 
  2581  0211                     	;# 
  2582  0212                     	;# 
  2583  0213                     	;# 
  2584  0214                     	;# 
  2585  0214                     	;# 
  2586  0215                     	;# 
  2587  0215                     	;# 
  2588  0216                     	;# 
  2589  0216                     	;# 
  2590  0217                     	;# 
  2591  0217                     	;# 
  2592  0218                     	;# 
  2593  0219                     	;# 
  2594  021A                     	;# 
  2595  021A                     	;# 
  2596  021B                     	;# 
  2597  021B                     	;# 
  2598  021C                     	;# 
  2599  021C                     	;# 
  2600  021D                     	;# 
  2601  021D                     	;# 
  2602  021E                     	;# 
  2603  021F                     	;# 
  2604  028C                     	;# 
  2605  028C                     	;# 
  2606  028D                     	;# 
  2607  028D                     	;# 
  2608  028E                     	;# 
  2609  028F                     	;# 
  2610  0290                     	;# 
  2611  0291                     	;# 
  2612  0292                     	;# 
  2613  0292                     	;# 
  2614  0293                     	;# 
  2615  0293                     	;# 
  2616  0294                     	;# 
  2617  0295                     	;# 
  2618  0296                     	;# 
  2619  0297                     	;# 
  2620  0298                     	;# 
  2621  0298                     	;# 
  2622  0299                     	;# 
  2623  0299                     	;# 
  2624  029A                     	;# 
  2625  029B                     	;# 
  2626  029C                     	;# 
  2627  029D                     	;# 
  2628  029F                     	;# 
  2629  030C                     	;# 
  2630  030C                     	;# 
  2631  030D                     	;# 
  2632  030E                     	;# 
  2633  030F                     	;# 
  2634  0310                     	;# 
  2635  0310                     	;# 
  2636  0311                     	;# 
  2637  0312                     	;# 
  2638  0313                     	;# 
  2639  0314                     	;# 
  2640  0314                     	;# 
  2641  0315                     	;# 
  2642  0316                     	;# 
  2643  0317                     	;# 
  2644  0318                     	;# 
  2645  0318                     	;# 
  2646  0319                     	;# 
  2647  031A                     	;# 
  2648  031B                     	;# 
  2649  038C                     	;# 
  2650  038C                     	;# 
  2651  038D                     	;# 
  2652  038E                     	;# 
  2653  0390                     	;# 
  2654  0390                     	;# 
  2655  0391                     	;# 
  2656  0392                     	;# 
  2657  048C                     	;# 
  2658  048C                     	;# 
  2659  048D                     	;# 
  2660  048E                     	;# 
  2661  048F                     	;# 
  2662  048F                     	;# 
  2663  0490                     	;# 
  2664  0491                     	;# 
  2665  0492                     	;# 
  2666  0492                     	;# 
  2667  0493                     	;# 
  2668  0494                     	;# 
  2669  0495                     	;# 
  2670  0495                     	;# 
  2671  0496                     	;# 
  2672  0497                     	;# 
  2673  0498                     	;# 
  2674  0499                     	;# 
  2675  049A                     	;# 
  2676  049B                     	;# 
  2677  049C                     	;# 
  2678  049D                     	;# 
  2679  058C                     	;# 
  2680  058C                     	;# 
  2681  058D                     	;# 
  2682  058E                     	;# 
  2683  058F                     	;# 
  2684  058F                     	;# 
  2685  0590                     	;# 
  2686  0591                     	;# 
  2687  0592                     	;# 
  2688  0593                     	;# 
  2689  059C                     	;# 
  2690  059C                     	;# 
  2691  059D                     	;# 
  2692  059D                     	;# 
  2693  059E                     	;# 
  2694  059F                     	;# 
  2695  060C                     	;# 
  2696  060C                     	;# 
  2697  060D                     	;# 
  2698  060D                     	;# 
  2699  060E                     	;# 
  2700  060F                     	;# 
  2701  0610                     	;# 
  2702  0611                     	;# 
  2703  0612                     	;# 
  2704  0613                     	;# 
  2705  0614                     	;# 
  2706  0616                     	;# 
  2707  0616                     	;# 
  2708  0617                     	;# 
  2709  0617                     	;# 
  2710  0618                     	;# 
  2711  0619                     	;# 
  2712  061A                     	;# 
  2713  061B                     	;# 
  2714  061C                     	;# 
  2715  061D                     	;# 
  2716  061E                     	;# 
  2717  070C                     	;# 
  2718  070D                     	;# 
  2719  070E                     	;# 
  2720  070F                     	;# 
  2721  0710                     	;# 
  2722  0711                     	;# 
  2723  0712                     	;# 
  2724  0713                     	;# 
  2725  0714                     	;# 
  2726  0716                     	;# 
  2727  0717                     	;# 
  2728  0718                     	;# 
  2729  0719                     	;# 
  2730  071A                     	;# 
  2731  071B                     	;# 
  2732  071C                     	;# 
  2733  071D                     	;# 
  2734  071E                     	;# 
  2735  0796                     	;# 
  2736  0797                     	;# 
  2737  0798                     	;# 
  2738  0799                     	;# 
  2739  079A                     	;# 
  2740  079B                     	;# 
  2741  079C                     	;# 
  2742  079D                     	;# 
  2743  080C                     	;# 
  2744  080D                     	;# 
  2745  080E                     	;# 
  2746  080F                     	;# 
  2747  0810                     	;# 
  2748  0811                     	;# 
  2749  0812                     	;# 
  2750  0813                     	;# 
  2751  0814                     	;# 
  2752  081A                     	;# 
  2753  081A                     	;# 
  2754  081B                     	;# 
  2755  081C                     	;# 
  2756  081C                     	;# 
  2757  081D                     	;# 
  2758  081E                     	;# 
  2759  081F                     	;# 
  2760  088C                     	;# 
  2761  088D                     	;# 
  2762  088E                     	;# 
  2763  088F                     	;# 
  2764  0890                     	;# 
  2765  0891                     	;# 
  2766  0892                     	;# 
  2767  0893                     	;# 
  2768  0895                     	;# 
  2769  0896                     	;# 
  2770  0897                     	;# 
  2771  0898                     	;# 
  2772  0899                     	;# 
  2773  089A                     	;# 
  2774  089B                     	;# 
  2775  090C                     	;# 
  2776  090E                     	;# 
  2777  090F                     	;# 
  2778  091F                     	;# 
  2779  098F                     	;# 
  2780  098F                     	;# 
  2781  0990                     	;# 
  2782  0991                     	;# 
  2783  0992                     	;# 
  2784  0993                     	;# 
  2785  0994                     	;# 
  2786  0995                     	;# 
  2787  0996                     	;# 
  2788  0997                     	;# 
  2789  1E0F                     	;# 
  2790  1E10                     	;# 
  2791  1E11                     	;# 
  2792  1E12                     	;# 
  2793  1E13                     	;# 
  2794  1E14                     	;# 
  2795  1E15                     	;# 
  2796  1E16                     	;# 
  2797  1E17                     	;# 
  2798  1E18                     	;# 
  2799  1E19                     	;# 
  2800  1E1A                     	;# 
  2801  1E1B                     	;# 
  2802  1E1C                     	;# 
  2803  1E1D                     	;# 
  2804  1E1E                     	;# 
  2805  1E1F                     	;# 
  2806  1E20                     	;# 
  2807  1E21                     	;# 
  2808  1E22                     	;# 
  2809  1E23                     	;# 
  2810  1E24                     	;# 
  2811  1E25                     	;# 
  2812  1E26                     	;# 
  2813  1E27                     	;# 
  2814  1E28                     	;# 
  2815  1E29                     	;# 
  2816  1E2A                     	;# 
  2817  1E2B                     	;# 
  2818  1E2C                     	;# 
  2819  1E2D                     	;# 
  2820  1E2E                     	;# 
  2821  1E2F                     	;# 
  2822  1E30                     	;# 
  2823  1E31                     	;# 
  2824  1E32                     	;# 
  2825  1E33                     	;# 
  2826  1E34                     	;# 
  2827  1E35                     	;# 
  2828  1E36                     	;# 
  2829  1E37                     	;# 
  2830  1E8F                     	;# 
  2831  1E90                     	;# 
  2832  1E91                     	;# 
  2833  1E92                     	;# 
  2834  1E93                     	;# 
  2835  1E94                     	;# 
  2836  1E95                     	;# 
  2837  1E96                     	;# 
  2838  1E97                     	;# 
  2839  1E9C                     	;# 
  2840  1E9D                     	;# 
  2841  1E9E                     	;# 
  2842  1EA1                     	;# 
  2843  1EA2                     	;# 
  2844  1EA3                     	;# 
  2845  1EA4                     	;# 
  2846  1EA9                     	;# 
  2847  1EAA                     	;# 
  2848  1EB1                     	;# 
  2849  1EB2                     	;# 
  2850  1EB8                     	;# 
  2851  1EB9                     	;# 
  2852  1EBA                     	;# 
  2853  1EBB                     	;# 
  2854  1EBC                     	;# 
  2855  1EBD                     	;# 
  2856  1EBE                     	;# 
  2857  1EC3                     	;# 
  2858  1EC5                     	;# 
  2859  1EC6                     	;# 
  2860  1EC7                     	;# 
  2861  1EC8                     	;# 
  2862  1EC9                     	;# 
  2863  1ECA                     	;# 
  2864  1ECB                     	;# 
  2865  1ECB                     	;# 
  2866  1ECB                     	;# 
  2867  1ECC                     	;# 
  2868  1ECC                     	;# 
  2869  1ECC                     	;# 
  2870  1F10                     	;# 
  2871  1F11                     	;# 
  2872  1F12                     	;# 
  2873  1F14                     	;# 
  2874  1F15                     	;# 
  2875  1F1C                     	;# 
  2876  1F1D                     	;# 
  2877  1F1E                     	;# 
  2878  1F1F                     	;# 
  2879  1F20                     	;# 
  2880  1F21                     	;# 
  2881  1F22                     	;# 
  2882  1F23                     	;# 
  2883  1F24                     	;# 
  2884  1F25                     	;# 
  2885  1F26                     	;# 
  2886  1F27                     	;# 
  2887  1F38                     	;# 
  2888  1F39                     	;# 
  2889  1F3A                     	;# 
  2890  1F3B                     	;# 
  2891  1F3C                     	;# 
  2892  1F3D                     	;# 
  2893  1F3E                     	;# 
  2894  1F3F                     	;# 
  2895  1F43                     	;# 
  2896  1F44                     	;# 
  2897  1F45                     	;# 
  2898  1F46                     	;# 
  2899  1F47                     	;# 
  2900  1F48                     	;# 
  2901  1F49                     	;# 
  2902  1F4A                     	;# 
  2903  1F4E                     	;# 
  2904  1F4F                     	;# 
  2905  1F50                     	;# 
  2906  1F51                     	;# 
  2907  1F52                     	;# 
  2908  1F53                     	;# 
  2909  1F54                     	;# 
  2910  1F55                     	;# 
  2911  1FE4                     	;# 
  2912  1FE5                     	;# 
  2913  1FE6                     	;# 
  2914  1FE7                     	;# 
  2915  1FE8                     	;# 
  2916  1FE8                     	;# 
  2917  1FE9                     	;# 
  2918  1FEA                     	;# 
  2919  1FEB                     	;# 
  2920  1FED                     	;# 
  2921  1FEE                     	;# 
  2922  1FEF                     	;# 
  2923  0000                     	;# 
  2924  0001                     	;# 
  2925  0002                     	;# 
  2926  0003                     	;# 
  2927  0004                     	;# 
  2928  0005                     	;# 
  2929  0006                     	;# 
  2930  0007                     	;# 
  2931  0008                     	;# 
  2932  0009                     	;# 
  2933  000A                     	;# 
  2934  000B                     	;# 
  2935  000C                     	;# 
  2936  000D                     	;# 
  2937  000E                     	;# 
  2938  0012                     	;# 
  2939  0013                     	;# 
  2940  0014                     	;# 
  2941  0018                     	;# 
  2942  0019                     	;# 
  2943  001A                     	;# 
  2944  008C                     	;# 
  2945  008C                     	;# 
  2946  008D                     	;# 
  2947  008E                     	;# 
  2948  008E                     	;# 
  2949  008F                     	;# 
  2950  0090                     	;# 
  2951  0090                     	;# 
  2952  0091                     	;# 
  2953  0092                     	;# 
  2954  0092                     	;# 
  2955  0093                     	;# 
  2956  0094                     	;# 
  2957  0094                     	;# 
  2958  0095                     	;# 
  2959  0096                     	;# 
  2960  0096                     	;# 
  2961  0097                     	;# 
  2962  0098                     	;# 
  2963  0099                     	;# 
  2964  009A                     	;# 
  2965  009B                     	;# 
  2966  009B                     	;# 
  2967  009C                     	;# 
  2968  009D                     	;# 
  2969  009D                     	;# 
  2970  009E                     	;# 
  2971  009F                     	;# 
  2972  010C                     	;# 
  2973  010C                     	;# 
  2974  010D                     	;# 
  2975  010E                     	;# 
  2976  010F                     	;# 
  2977  010F                     	;# 
  2978  0110                     	;# 
  2979  0111                     	;# 
  2980  0112                     	;# 
  2981  0113                     	;# 
  2982  0114                     	;# 
  2983  0115                     	;# 
  2984  0116                     	;# 
  2985  0117                     	;# 
  2986  0118                     	;# 
  2987  0119                     	;# 
  2988  0119                     	;# 
  2989  0119                     	;# 
  2990  011A                     	;# 
  2991  011A                     	;# 
  2992  011A                     	;# 
  2993  011B                     	;# 
  2994  011B                     	;# 
  2995  011B                     	;# 
  2996  011B                     	;# 
  2997  011B                     	;# 
  2998  011C                     	;# 
  2999  011C                     	;# 
  3000  011C                     	;# 
  3001  011D                     	;# 
  3002  011D                     	;# 
  3003  011D                     	;# 
  3004  011E                     	;# 
  3005  011E                     	;# 
  3006  011E                     	;# 
  3007  011F                     	;# 
  3008  011F                     	;# 
  3009  011F                     	;# 
  3010  011F                     	;# 
  3011  011F                     	;# 
  3012  018C                     	;# 
  3013  018D                     	;# 
  3014  018E                     	;# 
  3015  018F                     	;# 
  3016  0190                     	;# 
  3017  0191                     	;# 
  3018  0192                     	;# 
  3019  0196                     	;# 
  3020  0197                     	;# 
  3021  0198                     	;# 
  3022  0199                     	;# 
  3023  019A                     	;# 
  3024  019B                     	;# 
  3025  019C                     	;# 
  3026  020C                     	;# 
  3027  020D                     	;# 
  3028  020E                     	;# 
  3029  020E                     	;# 
  3030  020F                     	;# 
  3031  020F                     	;# 
  3032  0210                     	;# 
  3033  0210                     	;# 
  3034  0211                     	;# 
  3035  0211                     	;# 
  3036  0212                     	;# 
  3037  0213                     	;# 
  3038  0214                     	;# 
  3039  0214                     	;# 
  3040  0215                     	;# 
  3041  0215                     	;# 
  3042  0216                     	;# 
  3043  0216                     	;# 
  3044  0217                     	;# 
  3045  0217                     	;# 
  3046  0218                     	;# 
  3047  0219                     	;# 
  3048  021A                     	;# 
  3049  021A                     	;# 
  3050  021B                     	;# 
  3051  021B                     	;# 
  3052  021C                     	;# 
  3053  021C                     	;# 
  3054  021D                     	;# 
  3055  021D                     	;# 
  3056  021E                     	;# 
  3057  021F                     	;# 
  3058  028C                     	;# 
  3059  028C                     	;# 
  3060  028D                     	;# 
  3061  028D                     	;# 
  3062  028E                     	;# 
  3063  028F                     	;# 
  3064  0290                     	;# 
  3065  0291                     	;# 
  3066  0292                     	;# 
  3067  0292                     	;# 
  3068  0293                     	;# 
  3069  0293                     	;# 
  3070  0294                     	;# 
  3071  0295                     	;# 
  3072  0296                     	;# 
  3073  0297                     	;# 
  3074  0298                     	;# 
  3075  0298                     	;# 
  3076  0299                     	;# 
  3077  0299                     	;# 
  3078  029A                     	;# 
  3079  029B                     	;# 
  3080  029C                     	;# 
  3081  029D                     	;# 
  3082  029F                     	;# 
  3083  030C                     	;# 
  3084  030C                     	;# 
  3085  030D                     	;# 
  3086  030E                     	;# 
  3087  030F                     	;# 
  3088  0310                     	;# 
  3089  0310                     	;# 
  3090  0311                     	;# 
  3091  0312                     	;# 
  3092  0313                     	;# 
  3093  0314                     	;# 
  3094  0314                     	;# 
  3095  0315                     	;# 
  3096  0316                     	;# 
  3097  0317                     	;# 
  3098  0318                     	;# 
  3099  0318                     	;# 
  3100  0319                     	;# 
  3101  031A                     	;# 
  3102  031B                     	;# 
  3103  038C                     	;# 
  3104  038C                     	;# 
  3105  038D                     	;# 
  3106  038E                     	;# 
  3107  0390                     	;# 
  3108  0390                     	;# 
  3109  0391                     	;# 
  3110  0392                     	;# 
  3111  048C                     	;# 
  3112  048C                     	;# 
  3113  048D                     	;# 
  3114  048E                     	;# 
  3115  048F                     	;# 
  3116  048F                     	;# 
  3117  0490                     	;# 
  3118  0491                     	;# 
  3119  0492                     	;# 
  3120  0492                     	;# 
  3121  0493                     	;# 
  3122  0494                     	;# 
  3123  0495                     	;# 
  3124  0495                     	;# 
  3125  0496                     	;# 
  3126  0497                     	;# 
  3127  0498                     	;# 
  3128  0499                     	;# 
  3129  049A                     	;# 
  3130  049B                     	;# 
  3131  049C                     	;# 
  3132  049D                     	;# 
  3133  058C                     	;# 
  3134  058C                     	;# 
  3135  058D                     	;# 
  3136  058E                     	;# 
  3137  058F                     	;# 
  3138  058F                     	;# 
  3139  0590                     	;# 
  3140  0591                     	;# 
  3141  0592                     	;# 
  3142  0593                     	;# 
  3143  059C                     	;# 
  3144  059C                     	;# 
  3145  059D                     	;# 
  3146  059D                     	;# 
  3147  059E                     	;# 
  3148  059F                     	;# 
  3149  060C                     	;# 
  3150  060C                     	;# 
  3151  060D                     	;# 
  3152  060D                     	;# 
  3153  060E                     	;# 
  3154  060F                     	;# 
  3155  0610                     	;# 
  3156  0611                     	;# 
  3157  0612                     	;# 
  3158  0613                     	;# 
  3159  0614                     	;# 
  3160  0616                     	;# 
  3161  0616                     	;# 
  3162  0617                     	;# 
  3163  0617                     	;# 
  3164  0618                     	;# 
  3165  0619                     	;# 
  3166  061A                     	;# 
  3167  061B                     	;# 
  3168  061C                     	;# 
  3169  061D                     	;# 
  3170  061E                     	;# 
  3171  070C                     	;# 
  3172  070D                     	;# 
  3173  070E                     	;# 
  3174  070F                     	;# 
  3175  0710                     	;# 
  3176  0711                     	;# 
  3177  0712                     	;# 
  3178  0713                     	;# 
  3179  0714                     	;# 
  3180  0716                     	;# 
  3181  0717                     	;# 
  3182  0718                     	;# 
  3183  0719                     	;# 
  3184  071A                     	;# 
  3185  071B                     	;# 
  3186  071C                     	;# 
  3187  071D                     	;# 
  3188  071E                     	;# 
  3189  0796                     	;# 
  3190  0797                     	;# 
  3191  0798                     	;# 
  3192  0799                     	;# 
  3193  079A                     	;# 
  3194  079B                     	;# 
  3195  079C                     	;# 
  3196  079D                     	;# 
  3197  080C                     	;# 
  3198  080D                     	;# 
  3199  080E                     	;# 
  3200  080F                     	;# 
  3201  0810                     	;# 
  3202  0811                     	;# 
  3203  0812                     	;# 
  3204  0813                     	;# 
  3205  0814                     	;# 
  3206  081A                     	;# 
  3207  081A                     	;# 
  3208  081B                     	;# 
  3209  081C                     	;# 
  3210  081C                     	;# 
  3211  081D                     	;# 
  3212  081E                     	;# 
  3213  081F                     	;# 
  3214  088C                     	;# 
  3215  088D                     	;# 
  3216  088E                     	;# 
  3217  088F                     	;# 
  3218  0890                     	;# 
  3219  0891                     	;# 
  3220  0892                     	;# 
  3221  0893                     	;# 
  3222  0895                     	;# 
  3223  0896                     	;# 
  3224  0897                     	;# 
  3225  0898                     	;# 
  3226  0899                     	;# 
  3227  089A                     	;# 
  3228  089B                     	;# 
  3229  090C                     	;# 
  3230  090E                     	;# 
  3231  090F                     	;# 
  3232  091F                     	;# 
  3233  098F                     	;# 
  3234  098F                     	;# 
  3235  0990                     	;# 
  3236  0991                     	;# 
  3237  0992                     	;# 
  3238  0993                     	;# 
  3239  0994                     	;# 
  3240  0995                     	;# 
  3241  0996                     	;# 
  3242  0997                     	;# 
  3243  1E0F                     	;# 
  3244  1E10                     	;# 
  3245  1E11                     	;# 
  3246  1E12                     	;# 
  3247  1E13                     	;# 
  3248  1E14                     	;# 
  3249  1E15                     	;# 
  3250  1E16                     	;# 
  3251  1E17                     	;# 
  3252  1E18                     	;# 
  3253  1E19                     	;# 
  3254  1E1A                     	;# 
  3255  1E1B                     	;# 
  3256  1E1C                     	;# 
  3257  1E1D                     	;# 
  3258  1E1E                     	;# 
  3259  1E1F                     	;# 
  3260  1E20                     	;# 
  3261  1E21                     	;# 
  3262  1E22                     	;# 
  3263  1E23                     	;# 
  3264  1E24                     	;# 
  3265  1E25                     	;# 
  3266  1E26                     	;# 
  3267  1E27                     	;# 
  3268  1E28                     	;# 
  3269  1E29                     	;# 
  3270  1E2A                     	;# 
  3271  1E2B                     	;# 
  3272  1E2C                     	;# 
  3273  1E2D                     	;# 
  3274  1E2E                     	;# 
  3275  1E2F                     	;# 
  3276  1E30                     	;# 
  3277  1E31                     	;# 
  3278  1E32                     	;# 
  3279  1E33                     	;# 
  3280  1E34                     	;# 
  3281  1E35                     	;# 
  3282  1E36                     	;# 
  3283  1E37                     	;# 
  3284  1E8F                     	;# 
  3285  1E90                     	;# 
  3286  1E91                     	;# 
  3287  1E92                     	;# 
  3288  1E93                     	;# 
  3289  1E94                     	;# 
  3290  1E95                     	;# 
  3291  1E96                     	;# 
  3292  1E97                     	;# 
  3293  1E9C                     	;# 
  3294  1E9D                     	;# 
  3295  1E9E                     	;# 
  3296  1EA1                     	;# 
  3297  1EA2                     	;# 
  3298  1EA3                     	;# 
  3299  1EA4                     	;# 
  3300  1EA9                     	;# 
  3301  1EAA                     	;# 
  3302  1EB1                     	;# 
  3303  1EB2                     	;# 
  3304  1EB8                     	;# 
  3305  1EB9                     	;# 
  3306  1EBA                     	;# 
  3307  1EBB                     	;# 
  3308  1EBC                     	;# 
  3309  1EBD                     	;# 
  3310  1EBE                     	;# 
  3311  1EC3                     	;# 
  3312  1EC5                     	;# 
  3313  1EC6                     	;# 
  3314  1EC7                     	;# 
  3315  1EC8                     	;# 
  3316  1EC9                     	;# 
  3317  1ECA                     	;# 
  3318  1ECB                     	;# 
  3319  1ECB                     	;# 
  3320  1ECB                     	;# 
  3321  1ECC                     	;# 
  3322  1ECC                     	;# 
  3323  1ECC                     	;# 
  3324  1F10                     	;# 
  3325  1F11                     	;# 
  3326  1F12                     	;# 
  3327  1F14                     	;# 
  3328  1F15                     	;# 
  3329  1F1C                     	;# 
  3330  1F1D                     	;# 
  3331  1F1E                     	;# 
  3332  1F1F                     	;# 
  3333  1F20                     	;# 
  3334  1F21                     	;# 
  3335  1F22                     	;# 
  3336  1F23                     	;# 
  3337  1F24                     	;# 
  3338  1F25                     	;# 
  3339  1F26                     	;# 
  3340  1F27                     	;# 
  3341  1F38                     	;# 
  3342  1F39                     	;# 
  3343  1F3A                     	;# 
  3344  1F3B                     	;# 
  3345  1F3C                     	;# 
  3346  1F3D                     	;# 
  3347  1F3E                     	;# 
  3348  1F3F                     	;# 
  3349  1F43                     	;# 
  3350  1F44                     	;# 
  3351  1F45                     	;# 
  3352  1F46                     	;# 
  3353  1F47                     	;# 
  3354  1F48                     	;# 
  3355  1F49                     	;# 
  3356  1F4A                     	;# 
  3357  1F4E                     	;# 
  3358  1F4F                     	;# 
  3359  1F50                     	;# 
  3360  1F51                     	;# 
  3361  1F52                     	;# 
  3362  1F53                     	;# 
  3363  1F54                     	;# 
  3364  1F55                     	;# 
  3365  1FE4                     	;# 
  3366  1FE5                     	;# 
  3367  1FE6                     	;# 
  3368  1FE7                     	;# 
  3369  1FE8                     	;# 
  3370  1FE8                     	;# 
  3371  1FE9                     	;# 
  3372  1FEA                     	;# 
  3373  1FEB                     	;# 
  3374  1FED                     	;# 
  3375  1FEE                     	;# 
  3376  1FEF                     	;# 
  3377  0000                     	;# 
  3378  0001                     	;# 
  3379  0002                     	;# 
  3380  0003                     	;# 
  3381  0004                     	;# 
  3382  0005                     	;# 
  3383  0006                     	;# 
  3384  0007                     	;# 
  3385  0008                     	;# 
  3386  0009                     	;# 
  3387  000A                     	;# 
  3388  000B                     	;# 
  3389  000C                     	;# 
  3390  000D                     	;# 
  3391  000E                     	;# 
  3392  0012                     	;# 
  3393  0013                     	;# 
  3394  0014                     	;# 
  3395  0018                     	;# 
  3396  0019                     	;# 
  3397  001A                     	;# 
  3398  008C                     	;# 
  3399  008C                     	;# 
  3400  008D                     	;# 
  3401  008E                     	;# 
  3402  008E                     	;# 
  3403  008F                     	;# 
  3404  0090                     	;# 
  3405  0090                     	;# 
  3406  0091                     	;# 
  3407  0092                     	;# 
  3408  0092                     	;# 
  3409  0093                     	;# 
  3410  0094                     	;# 
  3411  0094                     	;# 
  3412  0095                     	;# 
  3413  0096                     	;# 
  3414  0096                     	;# 
  3415  0097                     	;# 
  3416  0098                     	;# 
  3417  0099                     	;# 
  3418  009A                     	;# 
  3419  009B                     	;# 
  3420  009B                     	;# 
  3421  009C                     	;# 
  3422  009D                     	;# 
  3423  009D                     	;# 
  3424  009E                     	;# 
  3425  009F                     	;# 
  3426  010C                     	;# 
  3427  010C                     	;# 
  3428  010D                     	;# 
  3429  010E                     	;# 
  3430  010F                     	;# 
  3431  010F                     	;# 
  3432  0110                     	;# 
  3433  0111                     	;# 
  3434  0112                     	;# 
  3435  0113                     	;# 
  3436  0114                     	;# 
  3437  0115                     	;# 
  3438  0116                     	;# 
  3439  0117                     	;# 
  3440  0118                     	;# 
  3441  0119                     	;# 
  3442  0119                     	;# 
  3443  0119                     	;# 
  3444  011A                     	;# 
  3445  011A                     	;# 
  3446  011A                     	;# 
  3447  011B                     	;# 
  3448  011B                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011B                     	;# 
  3452  011C                     	;# 
  3453  011C                     	;# 
  3454  011C                     	;# 
  3455  011D                     	;# 
  3456  011D                     	;# 
  3457  011D                     	;# 
  3458  011E                     	;# 
  3459  011E                     	;# 
  3460  011E                     	;# 
  3461  011F                     	;# 
  3462  011F                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  011F                     	;# 
  3466  018C                     	;# 
  3467  018D                     	;# 
  3468  018E                     	;# 
  3469  018F                     	;# 
  3470  0190                     	;# 
  3471  0191                     	;# 
  3472  0192                     	;# 
  3473  0196                     	;# 
  3474  0197                     	;# 
  3475  0198                     	;# 
  3476  0199                     	;# 
  3477  019A                     	;# 
  3478  019B                     	;# 
  3479  019C                     	;# 
  3480  020C                     	;# 
  3481  020D                     	;# 
  3482  020E                     	;# 
  3483  020E                     	;# 
  3484  020F                     	;# 
  3485  020F                     	;# 
  3486  0210                     	;# 
  3487  0210                     	;# 
  3488  0211                     	;# 
  3489  0211                     	;# 
  3490  0212                     	;# 
  3491  0213                     	;# 
  3492  0214                     	;# 
  3493  0214                     	;# 
  3494  0215                     	;# 
  3495  0215                     	;# 
  3496  0216                     	;# 
  3497  0216                     	;# 
  3498  0217                     	;# 
  3499  0217                     	;# 
  3500  0218                     	;# 
  3501  0219                     	;# 
  3502  021A                     	;# 
  3503  021A                     	;# 
  3504  021B                     	;# 
  3505  021B                     	;# 
  3506  021C                     	;# 
  3507  021C                     	;# 
  3508  021D                     	;# 
  3509  021D                     	;# 
  3510  021E                     	;# 
  3511  021F                     	;# 
  3512  028C                     	;# 
  3513  028C                     	;# 
  3514  028D                     	;# 
  3515  028D                     	;# 
  3516  028E                     	;# 
  3517  028F                     	;# 
  3518  0290                     	;# 
  3519  0291                     	;# 
  3520  0292                     	;# 
  3521  0292                     	;# 
  3522  0293                     	;# 
  3523  0293                     	;# 
  3524  0294                     	;# 
  3525  0295                     	;# 
  3526  0296                     	;# 
  3527  0297                     	;# 
  3528  0298                     	;# 
  3529  0298                     	;# 
  3530  0299                     	;# 
  3531  0299                     	;# 
  3532  029A                     	;# 
  3533  029B                     	;# 
  3534  029C                     	;# 
  3535  029D                     	;# 
  3536  029F                     	;# 
  3537  030C                     	;# 
  3538  030C                     	;# 
  3539  030D                     	;# 
  3540  030E                     	;# 
  3541  030F                     	;# 
  3542  0310                     	;# 
  3543  0310                     	;# 
  3544  0311                     	;# 
  3545  0312                     	;# 
  3546  0313                     	;# 
  3547  0314                     	;# 
  3548  0314                     	;# 
  3549  0315                     	;# 
  3550  0316                     	;# 
  3551  0317                     	;# 
  3552  0318                     	;# 
  3553  0318                     	;# 
  3554  0319                     	;# 
  3555  031A                     	;# 
  3556  031B                     	;# 
  3557  038C                     	;# 
  3558  038C                     	;# 
  3559  038D                     	;# 
  3560  038E                     	;# 
  3561  0390                     	;# 
  3562  0390                     	;# 
  3563  0391                     	;# 
  3564  0392                     	;# 
  3565  048C                     	;# 
  3566  048C                     	;# 
  3567  048D                     	;# 
  3568  048E                     	;# 
  3569  048F                     	;# 
  3570  048F                     	;# 
  3571  0490                     	;# 
  3572  0491                     	;# 
  3573  0492                     	;# 
  3574  0492                     	;# 
  3575  0493                     	;# 
  3576  0494                     	;# 
  3577  0495                     	;# 
  3578  0495                     	;# 
  3579  0496                     	;# 
  3580  0497                     	;# 
  3581  0498                     	;# 
  3582  0499                     	;# 
  3583  049A                     	;# 
  3584  049B                     	;# 
  3585  049C                     	;# 
  3586  049D                     	;# 
  3587  058C                     	;# 
  3588  058C                     	;# 
  3589  058D                     	;# 
  3590  058E                     	;# 
  3591  058F                     	;# 
  3592  058F                     	;# 
  3593  0590                     	;# 
  3594  0591                     	;# 
  3595  0592                     	;# 
  3596  0593                     	;# 
  3597  059C                     	;# 
  3598  059C                     	;# 
  3599  059D                     	;# 
  3600  059D                     	;# 
  3601  059E                     	;# 
  3602  059F                     	;# 
  3603  060C                     	;# 
  3604  060C                     	;# 
  3605  060D                     	;# 
  3606  060D                     	;# 
  3607  060E                     	;# 
  3608  060F                     	;# 
  3609  0610                     	;# 
  3610  0611                     	;# 
  3611  0612                     	;# 
  3612  0613                     	;# 
  3613  0614                     	;# 
  3614  0616                     	;# 
  3615  0616                     	;# 
  3616  0617                     	;# 
  3617  0617                     	;# 
  3618  0618                     	;# 
  3619  0619                     	;# 
  3620  061A                     	;# 
  3621  061B                     	;# 
  3622  061C                     	;# 
  3623  061D                     	;# 
  3624  061E                     	;# 
  3625  070C                     	;# 
  3626  070D                     	;# 
  3627  070E                     	;# 
  3628  070F                     	;# 
  3629  0710                     	;# 
  3630  0711                     	;# 
  3631  0712                     	;# 
  3632  0713                     	;# 
  3633  0714                     	;# 
  3634  0716                     	;# 
  3635  0717                     	;# 
  3636  0718                     	;# 
  3637  0719                     	;# 
  3638  071A                     	;# 
  3639  071B                     	;# 
  3640  071C                     	;# 
  3641  071D                     	;# 
  3642  071E                     	;# 
  3643  0796                     	;# 
  3644  0797                     	;# 
  3645  0798                     	;# 
  3646  0799                     	;# 
  3647  079A                     	;# 
  3648  079B                     	;# 
  3649  079C                     	;# 
  3650  079D                     	;# 
  3651  080C                     	;# 
  3652  080D                     	;# 
  3653  080E                     	;# 
  3654  080F                     	;# 
  3655  0810                     	;# 
  3656  0811                     	;# 
  3657  0812                     	;# 
  3658  0813                     	;# 
  3659  0814                     	;# 
  3660  081A                     	;# 
  3661  081A                     	;# 
  3662  081B                     	;# 
  3663  081C                     	;# 
  3664  081C                     	;# 
  3665  081D                     	;# 
  3666  081E                     	;# 
  3667  081F                     	;# 
  3668  088C                     	;# 
  3669  088D                     	;# 
  3670  088E                     	;# 
  3671  088F                     	;# 
  3672  0890                     	;# 
  3673  0891                     	;# 
  3674  0892                     	;# 
  3675  0893                     	;# 
  3676  0895                     	;# 
  3677  0896                     	;# 
  3678  0897                     	;# 
  3679  0898                     	;# 
  3680  0899                     	;# 
  3681  089A                     	;# 
  3682  089B                     	;# 
  3683  090C                     	;# 
  3684  090E                     	;# 
  3685  090F                     	;# 
  3686  091F                     	;# 
  3687  098F                     	;# 
  3688  098F                     	;# 
  3689  0990                     	;# 
  3690  0991                     	;# 
  3691  0992                     	;# 
  3692  0993                     	;# 
  3693  0994                     	;# 
  3694  0995                     	;# 
  3695  0996                     	;# 
  3696  0997                     	;# 
  3697  1E0F                     	;# 
  3698  1E10                     	;# 
  3699  1E11                     	;# 
  3700  1E12                     	;# 
  3701  1E13                     	;# 
  3702  1E14                     	;# 
  3703  1E15                     	;# 
  3704  1E16                     	;# 
  3705  1E17                     	;# 
  3706  1E18                     	;# 
  3707  1E19                     	;# 
  3708  1E1A                     	;# 
  3709  1E1B                     	;# 
  3710  1E1C                     	;# 
  3711  1E1D                     	;# 
  3712  1E1E                     	;# 
  3713  1E1F                     	;# 
  3714  1E20                     	;# 
  3715  1E21                     	;# 
  3716  1E22                     	;# 
  3717  1E23                     	;# 
  3718  1E24                     	;# 
  3719  1E25                     	;# 
  3720  1E26                     	;# 
  3721  1E27                     	;# 
  3722  1E28                     	;# 
  3723  1E29                     	;# 
  3724  1E2A                     	;# 
  3725  1E2B                     	;# 
  3726  1E2C                     	;# 
  3727  1E2D                     	;# 
  3728  1E2E                     	;# 
  3729  1E2F                     	;# 
  3730  1E30                     	;# 
  3731  1E31                     	;# 
  3732  1E32                     	;# 
  3733  1E33                     	;# 
  3734  1E34                     	;# 
  3735  1E35                     	;# 
  3736  1E36                     	;# 
  3737  1E37                     	;# 
  3738  1E8F                     	;# 
  3739  1E90                     	;# 
  3740  1E91                     	;# 
  3741  1E92                     	;# 
  3742  1E93                     	;# 
  3743  1E94                     	;# 
  3744  1E95                     	;# 
  3745  1E96                     	;# 
  3746  1E97                     	;# 
  3747  1E9C                     	;# 
  3748  1E9D                     	;# 
  3749  1E9E                     	;# 
  3750  1EA1                     	;# 
  3751  1EA2                     	;# 
  3752  1EA3                     	;# 
  3753  1EA4                     	;# 
  3754  1EA9                     	;# 
  3755  1EAA                     	;# 
  3756  1EB1                     	;# 
  3757  1EB2                     	;# 
  3758  1EB8                     	;# 
  3759  1EB9                     	;# 
  3760  1EBA                     	;# 
  3761  1EBB                     	;# 
  3762  1EBC                     	;# 
  3763  1EBD                     	;# 
  3764  1EBE                     	;# 
  3765  1EC3                     	;# 
  3766  1EC5                     	;# 
  3767  1EC6                     	;# 
  3768  1EC7                     	;# 
  3769  1EC8                     	;# 
  3770  1EC9                     	;# 
  3771  1ECA                     	;# 
  3772  1ECB                     	;# 
  3773  1ECB                     	;# 
  3774  1ECB                     	;# 
  3775  1ECC                     	;# 
  3776  1ECC                     	;# 
  3777  1ECC                     	;# 
  3778  1F10                     	;# 
  3779  1F11                     	;# 
  3780  1F12                     	;# 
  3781  1F14                     	;# 
  3782  1F15                     	;# 
  3783  1F1C                     	;# 
  3784  1F1D                     	;# 
  3785  1F1E                     	;# 
  3786  1F1F                     	;# 
  3787  1F20                     	;# 
  3788  1F21                     	;# 
  3789  1F22                     	;# 
  3790  1F23                     	;# 
  3791  1F24                     	;# 
  3792  1F25                     	;# 
  3793  1F26                     	;# 
  3794  1F27                     	;# 
  3795  1F38                     	;# 
  3796  1F39                     	;# 
  3797  1F3A                     	;# 
  3798  1F3B                     	;# 
  3799  1F3C                     	;# 
  3800  1F3D                     	;# 
  3801  1F3E                     	;# 
  3802  1F3F                     	;# 
  3803  1F43                     	;# 
  3804  1F44                     	;# 
  3805  1F45                     	;# 
  3806  1F46                     	;# 
  3807  1F47                     	;# 
  3808  1F48                     	;# 
  3809  1F49                     	;# 
  3810  1F4A                     	;# 
  3811  1F4E                     	;# 
  3812  1F4F                     	;# 
  3813  1F50                     	;# 
  3814  1F51                     	;# 
  3815  1F52                     	;# 
  3816  1F53                     	;# 
  3817  1F54                     	;# 
  3818  1F55                     	;# 
  3819  1FE4                     	;# 
  3820  1FE5                     	;# 
  3821  1FE6                     	;# 
  3822  1FE7                     	;# 
  3823  1FE8                     	;# 
  3824  1FE8                     	;# 
  3825  1FE9                     	;# 
  3826  1FEA                     	;# 
  3827  1FEB                     	;# 
  3828  1FED                     	;# 
  3829  1FEE                     	;# 
  3830  1FEF                     	;# 
  3831  0000                     	;# 
  3832  0001                     	;# 
  3833  0002                     	;# 
  3834  0003                     	;# 
  3835  0004                     	;# 
  3836  0005                     	;# 
  3837  0006                     	;# 
  3838  0007                     	;# 
  3839  0008                     	;# 
  3840  0009                     	;# 
  3841  000A                     	;# 
  3842  000B                     	;# 
  3843  000C                     	;# 
  3844  000D                     	;# 
  3845  000E                     	;# 
  3846  0012                     	;# 
  3847  0013                     	;# 
  3848  0014                     	;# 
  3849  0018                     	;# 
  3850  0019                     	;# 
  3851  001A                     	;# 
  3852  008C                     	;# 
  3853  008C                     	;# 
  3854  008D                     	;# 
  3855  008E                     	;# 
  3856  008E                     	;# 
  3857  008F                     	;# 
  3858  0090                     	;# 
  3859  0090                     	;# 
  3860  0091                     	;# 
  3861  0092                     	;# 
  3862  0092                     	;# 
  3863  0093                     	;# 
  3864  0094                     	;# 
  3865  0094                     	;# 
  3866  0095                     	;# 
  3867  0096                     	;# 
  3868  0096                     	;# 
  3869  0097                     	;# 
  3870  0098                     	;# 
  3871  0099                     	;# 
  3872  009A                     	;# 
  3873  009B                     	;# 
  3874  009B                     	;# 
  3875  009C                     	;# 
  3876  009D                     	;# 
  3877  009D                     	;# 
  3878  009E                     	;# 
  3879  009F                     	;# 
  3880  010C                     	;# 
  3881  010C                     	;# 
  3882  010D                     	;# 
  3883  010E                     	;# 
  3884  010F                     	;# 
  3885  010F                     	;# 
  3886  0110                     	;# 
  3887  0111                     	;# 
  3888  0112                     	;# 
  3889  0113                     	;# 
  3890  0114                     	;# 
  3891  0115                     	;# 
  3892  0116                     	;# 
  3893  0117                     	;# 
  3894  0118                     	;# 
  3895  0119                     	;# 
  3896  0119                     	;# 
  3897  0119                     	;# 
  3898  011A                     	;# 
  3899  011A                     	;# 
  3900  011A                     	;# 
  3901  011B                     	;# 
  3902  011B                     	;# 
  3903  011B                     	;# 
  3904  011B                     	;# 
  3905  011B                     	;# 
  3906  011C                     	;# 
  3907  011C                     	;# 
  3908  011C                     	;# 
  3909  011D                     	;# 
  3910  011D                     	;# 
  3911  011D                     	;# 
  3912  011E                     	;# 
  3913  011E                     	;# 
  3914  011E                     	;# 
  3915  011F                     	;# 
  3916  011F                     	;# 
  3917  011F                     	;# 
  3918  011F                     	;# 
  3919  011F                     	;# 
  3920  018C                     	;# 
  3921  018D                     	;# 
  3922  018E                     	;# 
  3923  018F                     	;# 
  3924  0190                     	;# 
  3925  0191                     	;# 
  3926  0192                     	;# 
  3927  0196                     	;# 
  3928  0197                     	;# 
  3929  0198                     	;# 
  3930  0199                     	;# 
  3931  019A                     	;# 
  3932  019B                     	;# 
  3933  019C                     	;# 
  3934  020C                     	;# 
  3935  020D                     	;# 
  3936  020E                     	;# 
  3937  020E                     	;# 
  3938  020F                     	;# 
  3939  020F                     	;# 
  3940  0210                     	;# 
  3941  0210                     	;# 
  3942  0211                     	;# 
  3943  0211                     	;# 
  3944  0212                     	;# 
  3945  0213                     	;# 
  3946  0214                     	;# 
  3947  0214                     	;# 
  3948  0215                     	;# 
  3949  0215                     	;# 
  3950  0216                     	;# 
  3951  0216                     	;# 
  3952  0217                     	;# 
  3953  0217                     	;# 
  3954  0218                     	;# 
  3955  0219                     	;# 
  3956  021A                     	;# 
  3957  021A                     	;# 
  3958  021B                     	;# 
  3959  021B                     	;# 
  3960  021C                     	;# 
  3961  021C                     	;# 
  3962  021D                     	;# 
  3963  021D                     	;# 
  3964  021E                     	;# 
  3965  021F                     	;# 
  3966  028C                     	;# 
  3967  028C                     	;# 
  3968  028D                     	;# 
  3969  028D                     	;# 
  3970  028E                     	;# 
  3971  028F                     	;# 
  3972  0290                     	;# 
  3973  0291                     	;# 
  3974  0292                     	;# 
  3975  0292                     	;# 
  3976  0293                     	;# 
  3977  0293                     	;# 
  3978  0294                     	;# 
  3979  0295                     	;# 
  3980  0296                     	;# 
  3981  0297                     	;# 
  3982  0298                     	;# 
  3983  0298                     	;# 
  3984  0299                     	;# 
  3985  0299                     	;# 
  3986  029A                     	;# 
  3987  029B                     	;# 
  3988  029C                     	;# 
  3989  029D                     	;# 
  3990  029F                     	;# 
  3991  030C                     	;# 
  3992  030C                     	;# 
  3993  030D                     	;# 
  3994  030E                     	;# 
  3995  030F                     	;# 
  3996  0310                     	;# 
  3997  0310                     	;# 
  3998  0311                     	;# 
  3999  0312                     	;# 
  4000  0313                     	;# 
  4001  0314                     	;# 
  4002  0314                     	;# 
  4003  0315                     	;# 
  4004  0316                     	;# 
  4005  0317                     	;# 
  4006  0318                     	;# 
  4007  0318                     	;# 
  4008  0319                     	;# 
  4009  031A                     	;# 
  4010  031B                     	;# 
  4011  038C                     	;# 
  4012  038C                     	;# 
  4013  038D                     	;# 
  4014  038E                     	;# 
  4015  0390                     	;# 
  4016  0390                     	;# 
  4017  0391                     	;# 
  4018  0392                     	;# 
  4019  048C                     	;# 
  4020  048C                     	;# 
  4021  048D                     	;# 
  4022  048E                     	;# 
  4023  048F                     	;# 
  4024  048F                     	;# 
  4025  0490                     	;# 
  4026  0491                     	;# 
  4027  0492                     	;# 
  4028  0492                     	;# 
  4029  0493                     	;# 
  4030  0494                     	;# 
  4031  0495                     	;# 
  4032  0495                     	;# 
  4033  0496                     	;# 
  4034  0497                     	;# 
  4035  0498                     	;# 
  4036  0499                     	;# 
  4037  049A                     	;# 
  4038  049B                     	;# 
  4039  049C                     	;# 
  4040  049D                     	;# 
  4041  058C                     	;# 
  4042  058C                     	;# 
  4043  058D                     	;# 
  4044  058E                     	;# 
  4045  058F                     	;# 
  4046  058F                     	;# 
  4047  0590                     	;# 
  4048  0591                     	;# 
  4049  0592                     	;# 
  4050  0593                     	;# 
  4051  059C                     	;# 
  4052  059C                     	;# 
  4053  059D                     	;# 
  4054  059D                     	;# 
  4055  059E                     	;# 
  4056  059F                     	;# 
  4057  060C                     	;# 
  4058  060C                     	;# 
  4059  060D                     	;# 
  4060  060D                     	;# 
  4061  060E                     	;# 
  4062  060F                     	;# 
  4063  0610                     	;# 
  4064  0611                     	;# 
  4065  0612                     	;# 
  4066  0613                     	;# 
  4067  0614                     	;# 
  4068  0616                     	;# 
  4069  0616                     	;# 
  4070  0617                     	;# 
  4071  0617                     	;# 
  4072  0618                     	;# 
  4073  0619                     	;# 
  4074  061A                     	;# 
  4075  061B                     	;# 
  4076  061C                     	;# 
  4077  061D                     	;# 
  4078  061E                     	;# 
  4079  070C                     	;# 
  4080  070D                     	;# 
  4081  070E                     	;# 
  4082  070F                     	;# 
  4083  0710                     	;# 
  4084  0711                     	;# 
  4085  0712                     	;# 
  4086  0713                     	;# 
  4087  0714                     	;# 
  4088  0716                     	;# 
  4089  0717                     	;# 
  4090  0718                     	;# 
  4091  0719                     	;# 
  4092  071A                     	;# 
  4093  071B                     	;# 
  4094  071C                     	;# 
  4095  071D                     	;# 
  4096  071E                     	;# 
  4097  0796                     	;# 
  4098  0797                     	;# 
  4099  0798                     	;# 
  4100  0799                     	;# 
  4101  079A                     	;# 
  4102  079B                     	;# 
  4103  079C                     	;# 
  4104  079D                     	;# 
  4105  080C                     	;# 
  4106  080D                     	;# 
  4107  080E                     	;# 
  4108  080F                     	;# 
  4109  0810                     	;# 
  4110  0811                     	;# 
  4111  0812                     	;# 
  4112  0813                     	;# 
  4113  0814                     	;# 
  4114  081A                     	;# 
  4115  081A                     	;# 
  4116  081B                     	;# 
  4117  081C                     	;# 
  4118  081C                     	;# 
  4119  081D                     	;# 
  4120  081E                     	;# 
  4121  081F                     	;# 
  4122  088C                     	;# 
  4123  088D                     	;# 
  4124  088E                     	;# 
  4125  088F                     	;# 
  4126  0890                     	;# 
  4127  0891                     	;# 
  4128  0892                     	;# 
  4129  0893                     	;# 
  4130  0895                     	;# 
  4131  0896                     	;# 
  4132  0897                     	;# 
  4133  0898                     	;# 
  4134  0899                     	;# 
  4135  089A                     	;# 
  4136  089B                     	;# 
  4137  090C                     	;# 
  4138  090E                     	;# 
  4139  090F                     	;# 
  4140  091F                     	;# 
  4141  098F                     	;# 
  4142  098F                     	;# 
  4143  0990                     	;# 
  4144  0991                     	;# 
  4145  0992                     	;# 
  4146  0993                     	;# 
  4147  0994                     	;# 
  4148  0995                     	;# 
  4149  0996                     	;# 
  4150  0997                     	;# 
  4151  1E0F                     	;# 
  4152  1E10                     	;# 
  4153  1E11                     	;# 
  4154  1E12                     	;# 
  4155  1E13                     	;# 
  4156  1E14                     	;# 
  4157  1E15                     	;# 
  4158  1E16                     	;# 
  4159  1E17                     	;# 
  4160  1E18                     	;# 
  4161  1E19                     	;# 
  4162  1E1A                     	;# 
  4163  1E1B                     	;# 
  4164  1E1C                     	;# 
  4165  1E1D                     	;# 
  4166  1E1E                     	;# 
  4167  1E1F                     	;# 
  4168  1E20                     	;# 
  4169  1E21                     	;# 
  4170  1E22                     	;# 
  4171  1E23                     	;# 
  4172  1E24                     	;# 
  4173  1E25                     	;# 
  4174  1E26                     	;# 
  4175  1E27                     	;# 
  4176  1E28                     	;# 
  4177  1E29                     	;# 
  4178  1E2A                     	;# 
  4179  1E2B                     	;# 
  4180  1E2C                     	;# 
  4181  1E2D                     	;# 
  4182  1E2E                     	;# 
  4183  1E2F                     	;# 
  4184  1E30                     	;# 
  4185  1E31                     	;# 
  4186  1E32                     	;# 
  4187  1E33                     	;# 
  4188  1E34                     	;# 
  4189  1E35                     	;# 
  4190  1E36                     	;# 
  4191  1E37                     	;# 
  4192  1E8F                     	;# 
  4193  1E90                     	;# 
  4194  1E91                     	;# 
  4195  1E92                     	;# 
  4196  1E93                     	;# 
  4197  1E94                     	;# 
  4198  1E95                     	;# 
  4199  1E96                     	;# 
  4200  1E97                     	;# 
  4201  1E9C                     	;# 
  4202  1E9D                     	;# 
  4203  1E9E                     	;# 
  4204  1EA1                     	;# 
  4205  1EA2                     	;# 
  4206  1EA3                     	;# 
  4207  1EA4                     	;# 
  4208  1EA9                     	;# 
  4209  1EAA                     	;# 
  4210  1EB1                     	;# 
  4211  1EB2                     	;# 
  4212  1EB8                     	;# 
  4213  1EB9                     	;# 
  4214  1EBA                     	;# 
  4215  1EBB                     	;# 
  4216  1EBC                     	;# 
  4217  1EBD                     	;# 
  4218  1EBE                     	;# 
  4219  1EC3                     	;# 
  4220  1EC5                     	;# 
  4221  1EC6                     	;# 
  4222  1EC7                     	;# 
  4223  1EC8                     	;# 
  4224  1EC9                     	;# 
  4225  1ECA                     	;# 
  4226  1ECB                     	;# 
  4227  1ECB                     	;# 
  4228  1ECB                     	;# 
  4229  1ECC                     	;# 
  4230  1ECC                     	;# 
  4231  1ECC                     	;# 
  4232  1F10                     	;# 
  4233  1F11                     	;# 
  4234  1F12                     	;# 
  4235  1F14                     	;# 
  4236  1F15                     	;# 
  4237  1F1C                     	;# 
  4238  1F1D                     	;# 
  4239  1F1E                     	;# 
  4240  1F1F                     	;# 
  4241  1F20                     	;# 
  4242  1F21                     	;# 
  4243  1F22                     	;# 
  4244  1F23                     	;# 
  4245  1F24                     	;# 
  4246  1F25                     	;# 
  4247  1F26                     	;# 
  4248  1F27                     	;# 
  4249  1F38                     	;# 
  4250  1F39                     	;# 
  4251  1F3A                     	;# 
  4252  1F3B                     	;# 
  4253  1F3C                     	;# 
  4254  1F3D                     	;# 
  4255  1F3E                     	;# 
  4256  1F3F                     	;# 
  4257  1F43                     	;# 
  4258  1F44                     	;# 
  4259  1F45                     	;# 
  4260  1F46                     	;# 
  4261  1F47                     	;# 
  4262  1F48                     	;# 
  4263  1F49                     	;# 
  4264  1F4A                     	;# 
  4265  1F4E                     	;# 
  4266  1F4F                     	;# 
  4267  1F50                     	;# 
  4268  1F51                     	;# 
  4269  1F52                     	;# 
  4270  1F53                     	;# 
  4271  1F54                     	;# 
  4272  1F55                     	;# 
  4273  1FE4                     	;# 
  4274  1FE5                     	;# 
  4275  1FE6                     	;# 
  4276  1FE7                     	;# 
  4277  1FE8                     	;# 
  4278  1FE8                     	;# 
  4279  1FE9                     	;# 
  4280  1FEA                     	;# 
  4281  1FEB                     	;# 
  4282  1FED                     	;# 
  4283  1FEE                     	;# 
  4284  1FEF                     	;# 
  4285  0000                     	;# 
  4286  0001                     	;# 
  4287  0002                     	;# 
  4288  0003                     	;# 
  4289  0004                     	;# 
  4290  0005                     	;# 
  4291  0006                     	;# 
  4292  0007                     	;# 
  4293  0008                     	;# 
  4294  0009                     	;# 
  4295  000A                     	;# 
  4296  000B                     	;# 
  4297  000C                     	;# 
  4298  000D                     	;# 
  4299  000E                     	;# 
  4300  0012                     	;# 
  4301  0013                     	;# 
  4302  0014                     	;# 
  4303  0018                     	;# 
  4304  0019                     	;# 
  4305  001A                     	;# 
  4306  008C                     	;# 
  4307  008C                     	;# 
  4308  008D                     	;# 
  4309  008E                     	;# 
  4310  008E                     	;# 
  4311  008F                     	;# 
  4312  0090                     	;# 
  4313  0090                     	;# 
  4314  0091                     	;# 
  4315  0092                     	;# 
  4316  0092                     	;# 
  4317  0093                     	;# 
  4318  0094                     	;# 
  4319  0094                     	;# 
  4320  0095                     	;# 
  4321  0096                     	;# 
  4322  0096                     	;# 
  4323  0097                     	;# 
  4324  0098                     	;# 
  4325  0099                     	;# 
  4326  009A                     	;# 
  4327  009B                     	;# 
  4328  009B                     	;# 
  4329  009C                     	;# 
  4330  009D                     	;# 
  4331  009D                     	;# 
  4332  009E                     	;# 
  4333  009F                     	;# 
  4334  010C                     	;# 
  4335  010C                     	;# 
  4336  010D                     	;# 
  4337  010E                     	;# 
  4338  010F                     	;# 
  4339  010F                     	;# 
  4340  0110                     	;# 
  4341  0111                     	;# 
  4342  0112                     	;# 
  4343  0113                     	;# 
  4344  0114                     	;# 
  4345  0115                     	;# 
  4346  0116                     	;# 
  4347  0117                     	;# 
  4348  0118                     	;# 
  4349  0119                     	;# 
  4350  0119                     	;# 
  4351  0119                     	;# 
  4352  011A                     	;# 
  4353  011A                     	;# 
  4354  011A                     	;# 
  4355  011B                     	;# 
  4356  011B                     	;# 
  4357  011B                     	;# 
  4358  011B                     	;# 
  4359  011B                     	;# 
  4360  011C                     	;# 
  4361  011C                     	;# 
  4362  011C                     	;# 
  4363  011D                     	;# 
  4364  011D                     	;# 
  4365  011D                     	;# 
  4366  011E                     	;# 
  4367  011E                     	;# 
  4368  011E                     	;# 
  4369  011F                     	;# 
  4370  011F                     	;# 
  4371  011F                     	;# 
  4372  011F                     	;# 
  4373  011F                     	;# 
  4374  018C                     	;# 
  4375  018D                     	;# 
  4376  018E                     	;# 
  4377  018F                     	;# 
  4378  0190                     	;# 
  4379  0191                     	;# 
  4380  0192                     	;# 
  4381  0196                     	;# 
  4382  0197                     	;# 
  4383  0198                     	;# 
  4384  0199                     	;# 
  4385  019A                     	;# 
  4386  019B                     	;# 
  4387  019C                     	;# 
  4388  020C                     	;# 
  4389  020D                     	;# 
  4390  020E                     	;# 
  4391  020E                     	;# 
  4392  020F                     	;# 
  4393  020F                     	;# 
  4394  0210                     	;# 
  4395  0210                     	;# 
  4396  0211                     	;# 
  4397  0211                     	;# 
  4398  0212                     	;# 
  4399  0213                     	;# 
  4400  0214                     	;# 
  4401  0214                     	;# 
  4402  0215                     	;# 
  4403  0215                     	;# 
  4404  0216                     	;# 
  4405  0216                     	;# 
  4406  0217                     	;# 
  4407  0217                     	;# 
  4408  0218                     	;# 
  4409  0219                     	;# 
  4410  021A                     	;# 
  4411  021A                     	;# 
  4412  021B                     	;# 
  4413  021B                     	;# 
  4414  021C                     	;# 
  4415  021C                     	;# 
  4416  021D                     	;# 
  4417  021D                     	;# 
  4418  021E                     	;# 
  4419  021F                     	;# 
  4420  028C                     	;# 
  4421  028C                     	;# 
  4422  028D                     	;# 
  4423  028D                     	;# 
  4424  028E                     	;# 
  4425  028F                     	;# 
  4426  0290                     	;# 
  4427  0291                     	;# 
  4428  0292                     	;# 
  4429  0292                     	;# 
  4430  0293                     	;# 
  4431  0293                     	;# 
  4432  0294                     	;# 
  4433  0295                     	;# 
  4434  0296                     	;# 
  4435  0297                     	;# 
  4436  0298                     	;# 
  4437  0298                     	;# 
  4438  0299                     	;# 
  4439  0299                     	;# 
  4440  029A                     	;# 
  4441  029B                     	;# 
  4442  029C                     	;# 
  4443  029D                     	;# 
  4444  029F                     	;# 
  4445  030C                     	;# 
  4446  030C                     	;# 
  4447  030D                     	;# 
  4448  030E                     	;# 
  4449  030F                     	;# 
  4450  0310                     	;# 
  4451  0310                     	;# 
  4452  0311                     	;# 
  4453  0312                     	;# 
  4454  0313                     	;# 
  4455  0314                     	;# 
  4456  0314                     	;# 
  4457  0315                     	;# 
  4458  0316                     	;# 
  4459  0317                     	;# 
  4460  0318                     	;# 
  4461  0318                     	;# 
  4462  0319                     	;# 
  4463  031A                     	;# 
  4464  031B                     	;# 
  4465  038C                     	;# 
  4466  038C                     	;# 
  4467  038D                     	;# 
  4468  038E                     	;# 
  4469  0390                     	;# 
  4470  0390                     	;# 
  4471  0391                     	;# 
  4472  0392                     	;# 
  4473  048C                     	;# 
  4474  048C                     	;# 
  4475  048D                     	;# 
  4476  048E                     	;# 
  4477  048F                     	;# 
  4478  048F                     	;# 
  4479  0490                     	;# 
  4480  0491                     	;# 
  4481  0492                     	;# 
  4482  0492                     	;# 
  4483  0493                     	;# 
  4484  0494                     	;# 
  4485  0495                     	;# 
  4486  0495                     	;# 
  4487  0496                     	;# 
  4488  0497                     	;# 
  4489  0498                     	;# 
  4490  0499                     	;# 
  4491  049A                     	;# 
  4492  049B                     	;# 
  4493  049C                     	;# 
  4494  049D                     	;# 
  4495  058C                     	;# 
  4496  058C                     	;# 
  4497  058D                     	;# 
  4498  058E                     	;# 
  4499  058F                     	;# 
  4500  058F                     	;# 
  4501  0590                     	;# 
  4502  0591                     	;# 
  4503  0592                     	;# 
  4504  0593                     	;# 
  4505  059C                     	;# 
  4506  059C                     	;# 
  4507  059D                     	;# 
  4508  059D                     	;# 
  4509  059E                     	;# 
  4510  059F                     	;# 
  4511  060C                     	;# 
  4512  060C                     	;# 
  4513  060D                     	;# 
  4514  060D                     	;# 
  4515  060E                     	;# 
  4516  060F                     	;# 
  4517  0610                     	;# 
  4518  0611                     	;# 
  4519  0612                     	;# 
  4520  0613                     	;# 
  4521  0614                     	;# 
  4522  0616                     	;# 
  4523  0616                     	;# 
  4524  0617                     	;# 
  4525  0617                     	;# 
  4526  0618                     	;# 
  4527  0619                     	;# 
  4528  061A                     	;# 
  4529  061B                     	;# 
  4530  061C                     	;# 
  4531  061D                     	;# 
  4532  061E                     	;# 
  4533  070C                     	;# 
  4534  070D                     	;# 
  4535  070E                     	;# 
  4536  070F                     	;# 
  4537  0710                     	;# 
  4538  0711                     	;# 
  4539  0712                     	;# 
  4540  0713                     	;# 
  4541  0714                     	;# 
  4542  0716                     	;# 
  4543  0717                     	;# 
  4544  0718                     	;# 
  4545  0719                     	;# 
  4546  071A                     	;# 
  4547  071B                     	;# 
  4548  071C                     	;# 
  4549  071D                     	;# 
  4550  071E                     	;# 
  4551  0796                     	;# 
  4552  0797                     	;# 
  4553  0798                     	;# 
  4554  0799                     	;# 
  4555  079A                     	;# 
  4556  079B                     	;# 
  4557  079C                     	;# 
  4558  079D                     	;# 
  4559  080C                     	;# 
  4560  080D                     	;# 
  4561  080E                     	;# 
  4562  080F                     	;# 
  4563  0810                     	;# 
  4564  0811                     	;# 
  4565  0812                     	;# 
  4566  0813                     	;# 
  4567  0814                     	;# 
  4568  081A                     	;# 
  4569  081A                     	;# 
  4570  081B                     	;# 
  4571  081C                     	;# 
  4572  081C                     	;# 
  4573  081D                     	;# 
  4574  081E                     	;# 
  4575  081F                     	;# 
  4576  088C                     	;# 
  4577  088D                     	;# 
  4578  088E                     	;# 
  4579  088F                     	;# 
  4580  0890                     	;# 
  4581  0891                     	;# 
  4582  0892                     	;# 
  4583  0893                     	;# 
  4584  0895                     	;# 
  4585  0896                     	;# 
  4586  0897                     	;# 
  4587  0898                     	;# 
  4588  0899                     	;# 
  4589  089A                     	;# 
  4590  089B                     	;# 
  4591  090C                     	;# 
  4592  090E                     	;# 
  4593  090F                     	;# 
  4594  091F                     	;# 
  4595  098F                     	;# 
  4596  098F                     	;# 
  4597  0990                     	;# 
  4598  0991                     	;# 
  4599  0992                     	;# 
  4600  0993                     	;# 
  4601  0994                     	;# 
  4602  0995                     	;# 
  4603  0996                     	;# 
  4604  0997                     	;# 
  4605  1E0F                     	;# 
  4606  1E10                     	;# 
  4607  1E11                     	;# 
  4608  1E12                     	;# 
  4609  1E13                     	;# 
  4610  1E14                     	;# 
  4611  1E15                     	;# 
  4612  1E16                     	;# 
  4613  1E17                     	;# 
  4614  1E18                     	;# 
  4615  1E19                     	;# 
  4616  1E1A                     	;# 
  4617  1E1B                     	;# 
  4618  1E1C                     	;# 
  4619  1E1D                     	;# 
  4620  1E1E                     	;# 
  4621  1E1F                     	;# 
  4622  1E20                     	;# 
  4623  1E21                     	;# 
  4624  1E22                     	;# 
  4625  1E23                     	;# 
  4626  1E24                     	;# 
  4627  1E25                     	;# 
  4628  1E26                     	;# 
  4629  1E27                     	;# 
  4630  1E28                     	;# 
  4631  1E29                     	;# 
  4632  1E2A                     	;# 
  4633  1E2B                     	;# 
  4634  1E2C                     	;# 
  4635  1E2D                     	;# 
  4636  1E2E                     	;# 
  4637  1E2F                     	;# 
  4638  1E30                     	;# 
  4639  1E31                     	;# 
  4640  1E32                     	;# 
  4641  1E33                     	;# 
  4642  1E34                     	;# 
  4643  1E35                     	;# 
  4644  1E36                     	;# 
  4645  1E37                     	;# 
  4646  1E8F                     	;# 
  4647  1E90                     	;# 
  4648  1E91                     	;# 
  4649  1E92                     	;# 
  4650  1E93                     	;# 
  4651  1E94                     	;# 
  4652  1E95                     	;# 
  4653  1E96                     	;# 
  4654  1E97                     	;# 
  4655  1E9C                     	;# 
  4656  1E9D                     	;# 
  4657  1E9E                     	;# 
  4658  1EA1                     	;# 
  4659  1EA2                     	;# 
  4660  1EA3                     	;# 
  4661  1EA4                     	;# 
  4662  1EA9                     	;# 
  4663  1EAA                     	;# 
  4664  1EB1                     	;# 
  4665  1EB2                     	;# 
  4666  1EB8                     	;# 
  4667  1EB9                     	;# 
  4668  1EBA                     	;# 
  4669  1EBB                     	;# 
  4670  1EBC                     	;# 
  4671  1EBD                     	;# 
  4672  1EBE                     	;# 
  4673  1EC3                     	;# 
  4674  1EC5                     	;# 
  4675  1EC6                     	;# 
  4676  1EC7                     	;# 
  4677  1EC8                     	;# 
  4678  1EC9                     	;# 
  4679  1ECA                     	;# 
  4680  1ECB                     	;# 
  4681  1ECB                     	;# 
  4682  1ECB                     	;# 
  4683  1ECC                     	;# 
  4684  1ECC                     	;# 
  4685  1ECC                     	;# 
  4686  1F10                     	;# 
  4687  1F11                     	;# 
  4688  1F12                     	;# 
  4689  1F14                     	;# 
  4690  1F15                     	;# 
  4691  1F1C                     	;# 
  4692  1F1D                     	;# 
  4693  1F1E                     	;# 
  4694  1F1F                     	;# 
  4695  1F20                     	;# 
  4696  1F21                     	;# 
  4697  1F22                     	;# 
  4698  1F23                     	;# 
  4699  1F24                     	;# 
  4700  1F25                     	;# 
  4701  1F26                     	;# 
  4702  1F27                     	;# 
  4703  1F38                     	;# 
  4704  1F39                     	;# 
  4705  1F3A                     	;# 
  4706  1F3B                     	;# 
  4707  1F3C                     	;# 
  4708  1F3D                     	;# 
  4709  1F3E                     	;# 
  4710  1F3F                     	;# 
  4711  1F43                     	;# 
  4712  1F44                     	;# 
  4713  1F45                     	;# 
  4714  1F46                     	;# 
  4715  1F47                     	;# 
  4716  1F48                     	;# 
  4717  1F49                     	;# 
  4718  1F4A                     	;# 
  4719  1F4E                     	;# 
  4720  1F4F                     	;# 
  4721  1F50                     	;# 
  4722  1F51                     	;# 
  4723  1F52                     	;# 
  4724  1F53                     	;# 
  4725  1F54                     	;# 
  4726  1F55                     	;# 
  4727  1FE4                     	;# 
  4728  1FE5                     	;# 
  4729  1FE6                     	;# 
  4730  1FE7                     	;# 
  4731  1FE8                     	;# 
  4732  1FE8                     	;# 
  4733  1FE9                     	;# 
  4734  1FEA                     	;# 
  4735  1FEB                     	;# 
  4736  1FED                     	;# 
  4737  1FEE                     	;# 
  4738  1FEF                     	;# 
  4739  0000                     	;# 
  4740  0001                     	;# 
  4741  0002                     	;# 
  4742  0003                     	;# 
  4743  0004                     	;# 
  4744  0005                     	;# 
  4745  0006                     	;# 
  4746  0007                     	;# 
  4747  0008                     	;# 
  4748  0009                     	;# 
  4749  000A                     	;# 
  4750  000B                     	;# 
  4751  000C                     	;# 
  4752  000D                     	;# 
  4753  000E                     	;# 
  4754  0012                     	;# 
  4755  0013                     	;# 
  4756  0014                     	;# 
  4757  0018                     	;# 
  4758  0019                     	;# 
  4759  001A                     	;# 
  4760  008C                     	;# 
  4761  008C                     	;# 
  4762  008D                     	;# 
  4763  008E                     	;# 
  4764  008E                     	;# 
  4765  008F                     	;# 
  4766  0090                     	;# 
  4767  0090                     	;# 
  4768  0091                     	;# 
  4769  0092                     	;# 
  4770  0092                     	;# 
  4771  0093                     	;# 
  4772  0094                     	;# 
  4773  0094                     	;# 
  4774  0095                     	;# 
  4775  0096                     	;# 
  4776  0096                     	;# 
  4777  0097                     	;# 
  4778  0098                     	;# 
  4779  0099                     	;# 
  4780  009A                     	;# 
  4781  009B                     	;# 
  4782  009B                     	;# 
  4783  009C                     	;# 
  4784  009D                     	;# 
  4785  009D                     	;# 
  4786  009E                     	;# 
  4787  009F                     	;# 
  4788  010C                     	;# 
  4789  010C                     	;# 
  4790  010D                     	;# 
  4791  010E                     	;# 
  4792  010F                     	;# 
  4793  010F                     	;# 
  4794  0110                     	;# 
  4795  0111                     	;# 
  4796  0112                     	;# 
  4797  0113                     	;# 
  4798  0114                     	;# 
  4799  0115                     	;# 
  4800  0116                     	;# 
  4801  0117                     	;# 
  4802  0118                     	;# 
  4803  0119                     	;# 
  4804  0119                     	;# 
  4805  0119                     	;# 
  4806  011A                     	;# 
  4807  011A                     	;# 
  4808  011A                     	;# 
  4809  011B                     	;# 
  4810  011B                     	;# 
  4811  011B                     	;# 
  4812  011B                     	;# 
  4813  011B                     	;# 
  4814  011C                     	;# 
  4815  011C                     	;# 
  4816  011C                     	;# 
  4817  011D                     	;# 
  4818  011D                     	;# 
  4819  011D                     	;# 
  4820  011E                     	;# 
  4821  011E                     	;# 
  4822  011E                     	;# 
  4823  011F                     	;# 
  4824  011F                     	;# 
  4825  011F                     	;# 
  4826  011F                     	;# 
  4827  011F                     	;# 
  4828  018C                     	;# 
  4829  018D                     	;# 
  4830  018E                     	;# 
  4831  018F                     	;# 
  4832  0190                     	;# 
  4833  0191                     	;# 
  4834  0192                     	;# 
  4835  0196                     	;# 
  4836  0197                     	;# 
  4837  0198                     	;# 
  4838  0199                     	;# 
  4839  019A                     	;# 
  4840  019B                     	;# 
  4841  019C                     	;# 
  4842  020C                     	;# 
  4843  020D                     	;# 
  4844  020E                     	;# 
  4845  020E                     	;# 
  4846  020F                     	;# 
  4847  020F                     	;# 
  4848  0210                     	;# 
  4849  0210                     	;# 
  4850  0211                     	;# 
  4851  0211                     	;# 
  4852  0212                     	;# 
  4853  0213                     	;# 
  4854  0214                     	;# 
  4855  0214                     	;# 
  4856  0215                     	;# 
  4857  0215                     	;# 
  4858  0216                     	;# 
  4859  0216                     	;# 
  4860  0217                     	;# 
  4861  0217                     	;# 
  4862  0218                     	;# 
  4863  0219                     	;# 
  4864  021A                     	;# 
  4865  021A                     	;# 
  4866  021B                     	;# 
  4867  021B                     	;# 
  4868  021C                     	;# 
  4869  021C                     	;# 
  4870  021D                     	;# 
  4871  021D                     	;# 
  4872  021E                     	;# 
  4873  021F                     	;# 
  4874  028C                     	;# 
  4875  028C                     	;# 
  4876  028D                     	;# 
  4877  028D                     	;# 
  4878  028E                     	;# 
  4879  028F                     	;# 
  4880  0290                     	;# 
  4881  0291                     	;# 
  4882  0292                     	;# 
  4883  0292                     	;# 
  4884  0293                     	;# 
  4885  0293                     	;# 
  4886  0294                     	;# 
  4887  0295                     	;# 
  4888  0296                     	;# 
  4889  0297                     	;# 
  4890  0298                     	;# 
  4891  0298                     	;# 
  4892  0299                     	;# 
  4893  0299                     	;# 
  4894  029A                     	;# 
  4895  029B                     	;# 
  4896  029C                     	;# 
  4897  029D                     	;# 
  4898  029F                     	;# 
  4899  030C                     	;# 
  4900  030C                     	;# 
  4901  030D                     	;# 
  4902  030E                     	;# 
  4903  030F                     	;# 
  4904  0310                     	;# 
  4905  0310                     	;# 
  4906  0311                     	;# 
  4907  0312                     	;# 
  4908  0313                     	;# 
  4909  0314                     	;# 
  4910  0314                     	;# 
  4911  0315                     	;# 
  4912  0316                     	;# 
  4913  0317                     	;# 
  4914  0318                     	;# 
  4915  0318                     	;# 
  4916  0319                     	;# 
  4917  031A                     	;# 
  4918  031B                     	;# 
  4919  038C                     	;# 
  4920  038C                     	;# 
  4921  038D                     	;# 
  4922  038E                     	;# 
  4923  0390                     	;# 
  4924  0390                     	;# 
  4925  0391                     	;# 
  4926  0392                     	;# 
  4927  048C                     	;# 
  4928  048C                     	;# 
  4929  048D                     	;# 
  4930  048E                     	;# 
  4931  048F                     	;# 
  4932  048F                     	;# 
  4933  0490                     	;# 
  4934  0491                     	;# 
  4935  0492                     	;# 
  4936  0492                     	;# 
  4937  0493                     	;# 
  4938  0494                     	;# 
  4939  0495                     	;# 
  4940  0495                     	;# 
  4941  0496                     	;# 
  4942  0497                     	;# 
  4943  0498                     	;# 
  4944  0499                     	;# 
  4945  049A                     	;# 
  4946  049B                     	;# 
  4947  049C                     	;# 
  4948  049D                     	;# 
  4949  058C                     	;# 
  4950  058C                     	;# 
  4951  058D                     	;# 
  4952  058E                     	;# 
  4953  058F                     	;# 
  4954  058F                     	;# 
  4955  0590                     	;# 
  4956  0591                     	;# 
  4957  0592                     	;# 
  4958  0593                     	;# 
  4959  059C                     	;# 
  4960  059C                     	;# 
  4961  059D                     	;# 
  4962  059D                     	;# 
  4963  059E                     	;# 
  4964  059F                     	;# 
  4965  060C                     	;# 
  4966  060C                     	;# 
  4967  060D                     	;# 
  4968  060D                     	;# 
  4969  060E                     	;# 
  4970  060F                     	;# 
  4971  0610                     	;# 
  4972  0611                     	;# 
  4973  0612                     	;# 
  4974  0613                     	;# 
  4975  0614                     	;# 
  4976  0616                     	;# 
  4977  0616                     	;# 
  4978  0617                     	;# 
  4979  0617                     	;# 
  4980  0618                     	;# 
  4981  0619                     	;# 
  4982  061A                     	;# 
  4983  061B                     	;# 
  4984  061C                     	;# 
  4985  061D                     	;# 
  4986  061E                     	;# 
  4987  070C                     	;# 
  4988  070D                     	;# 
  4989  070E                     	;# 
  4990  070F                     	;# 
  4991  0710                     	;# 
  4992  0711                     	;# 
  4993  0712                     	;# 
  4994  0713                     	;# 
  4995  0714                     	;# 
  4996  0716                     	;# 
  4997  0717                     	;# 
  4998  0718                     	;# 
  4999  0719                     	;# 
  5000  071A                     	;# 
  5001  071B                     	;# 
  5002  071C                     	;# 
  5003  071D                     	;# 
  5004  071E                     	;# 
  5005  0796                     	;# 
  5006  0797                     	;# 
  5007  0798                     	;# 
  5008  0799                     	;# 
  5009  079A                     	;# 
  5010  079B                     	;# 
  5011  079C                     	;# 
  5012  079D                     	;# 
  5013  080C                     	;# 
  5014  080D                     	;# 
  5015  080E                     	;# 
  5016  080F                     	;# 
  5017  0810                     	;# 
  5018  0811                     	;# 
  5019  0812                     	;# 
  5020  0813                     	;# 
  5021  0814                     	;# 
  5022  081A                     	;# 
  5023  081A                     	;# 
  5024  081B                     	;# 
  5025  081C                     	;# 
  5026  081C                     	;# 
  5027  081D                     	;# 
  5028  081E                     	;# 
  5029  081F                     	;# 
  5030  088C                     	;# 
  5031  088D                     	;# 
  5032  088E                     	;# 
  5033  088F                     	;# 
  5034  0890                     	;# 
  5035  0891                     	;# 
  5036  0892                     	;# 
  5037  0893                     	;# 
  5038  0895                     	;# 
  5039  0896                     	;# 
  5040  0897                     	;# 
  5041  0898                     	;# 
  5042  0899                     	;# 
  5043  089A                     	;# 
  5044  089B                     	;# 
  5045  090C                     	;# 
  5046  090E                     	;# 
  5047  090F                     	;# 
  5048  091F                     	;# 
  5049  098F                     	;# 
  5050  098F                     	;# 
  5051  0990                     	;# 
  5052  0991                     	;# 
  5053  0992                     	;# 
  5054  0993                     	;# 
  5055  0994                     	;# 
  5056  0995                     	;# 
  5057  0996                     	;# 
  5058  0997                     	;# 
  5059  1E0F                     	;# 
  5060  1E10                     	;# 
  5061  1E11                     	;# 
  5062  1E12                     	;# 
  5063  1E13                     	;# 
  5064  1E14                     	;# 
  5065  1E15                     	;# 
  5066  1E16                     	;# 
  5067  1E17                     	;# 
  5068  1E18                     	;# 
  5069  1E19                     	;# 
  5070  1E1A                     	;# 
  5071  1E1B                     	;# 
  5072  1E1C                     	;# 
  5073  1E1D                     	;# 
  5074  1E1E                     	;# 
  5075  1E1F                     	;# 
  5076  1E20                     	;# 
  5077  1E21                     	;# 
  5078  1E22                     	;# 
  5079  1E23                     	;# 
  5080  1E24                     	;# 
  5081  1E25                     	;# 
  5082  1E26                     	;# 
  5083  1E27                     	;# 
  5084  1E28                     	;# 
  5085  1E29                     	;# 
  5086  1E2A                     	;# 
  5087  1E2B                     	;# 
  5088  1E2C                     	;# 
  5089  1E2D                     	;# 
  5090  1E2E                     	;# 
  5091  1E2F                     	;# 
  5092  1E30                     	;# 
  5093  1E31                     	;# 
  5094  1E32                     	;# 
  5095  1E33                     	;# 
  5096  1E34                     	;# 
  5097  1E35                     	;# 
  5098  1E36                     	;# 
  5099  1E37                     	;# 
  5100  1E8F                     	;# 
  5101  1E90                     	;# 
  5102  1E91                     	;# 
  5103  1E92                     	;# 
  5104  1E93                     	;# 
  5105  1E94                     	;# 
  5106  1E95                     	;# 
  5107  1E96                     	;# 
  5108  1E97                     	;# 
  5109  1E9C                     	;# 
  5110  1E9D                     	;# 
  5111  1E9E                     	;# 
  5112  1EA1                     	;# 
  5113  1EA2                     	;# 
  5114  1EA3                     	;# 
  5115  1EA4                     	;# 
  5116  1EA9                     	;# 
  5117  1EAA                     	;# 
  5118  1EB1                     	;# 
  5119  1EB2                     	;# 
  5120  1EB8                     	;# 
  5121  1EB9                     	;# 
  5122  1EBA                     	;# 
  5123  1EBB                     	;# 
  5124  1EBC                     	;# 
  5125  1EBD                     	;# 
  5126  1EBE                     	;# 
  5127  1EC3                     	;# 
  5128  1EC5                     	;# 
  5129  1EC6                     	;# 
  5130  1EC7                     	;# 
  5131  1EC8                     	;# 
  5132  1EC9                     	;# 
  5133  1ECA                     	;# 
  5134  1ECB                     	;# 
  5135  1ECB                     	;# 
  5136  1ECB                     	;# 
  5137  1ECC                     	;# 
  5138  1ECC                     	;# 
  5139  1ECC                     	;# 
  5140  1F10                     	;# 
  5141  1F11                     	;# 
  5142  1F12                     	;# 
  5143  1F14                     	;# 
  5144  1F15                     	;# 
  5145  1F1C                     	;# 
  5146  1F1D                     	;# 
  5147  1F1E                     	;# 
  5148  1F1F                     	;# 
  5149  1F20                     	;# 
  5150  1F21                     	;# 
  5151  1F22                     	;# 
  5152  1F23                     	;# 
  5153  1F24                     	;# 
  5154  1F25                     	;# 
  5155  1F26                     	;# 
  5156  1F27                     	;# 
  5157  1F38                     	;# 
  5158  1F39                     	;# 
  5159  1F3A                     	;# 
  5160  1F3B                     	;# 
  5161  1F3C                     	;# 
  5162  1F3D                     	;# 
  5163  1F3E                     	;# 
  5164  1F3F                     	;# 
  5165  1F43                     	;# 
  5166  1F44                     	;# 
  5167  1F45                     	;# 
  5168  1F46                     	;# 
  5169  1F47                     	;# 
  5170  1F48                     	;# 
  5171  1F49                     	;# 
  5172  1F4A                     	;# 
  5173  1F4E                     	;# 
  5174  1F4F                     	;# 
  5175  1F50                     	;# 
  5176  1F51                     	;# 
  5177  1F52                     	;# 
  5178  1F53                     	;# 
  5179  1F54                     	;# 
  5180  1F55                     	;# 
  5181  1FE4                     	;# 
  5182  1FE5                     	;# 
  5183  1FE6                     	;# 
  5184  1FE7                     	;# 
  5185  1FE8                     	;# 
  5186  1FE8                     	;# 
  5187  1FE9                     	;# 
  5188  1FEA                     	;# 
  5189  1FEB                     	;# 
  5190  1FED                     	;# 
  5191  1FEE                     	;# 
  5192  1FEF                     	;# 
  5193  0000                     	;# 
  5194  0001                     	;# 
  5195  0002                     	;# 
  5196  0003                     	;# 
  5197  0004                     	;# 
  5198  0005                     	;# 
  5199  0006                     	;# 
  5200  0007                     	;# 
  5201  0008                     	;# 
  5202  0009                     	;# 
  5203  000A                     	;# 
  5204  000B                     	;# 
  5205  000C                     	;# 
  5206  000D                     	;# 
  5207  000E                     	;# 
  5208  0012                     	;# 
  5209  0013                     	;# 
  5210  0014                     	;# 
  5211  0018                     	;# 
  5212  0019                     	;# 
  5213  001A                     	;# 
  5214  008C                     	;# 
  5215  008C                     	;# 
  5216  008D                     	;# 
  5217  008E                     	;# 
  5218  008E                     	;# 
  5219  008F                     	;# 
  5220  0090                     	;# 
  5221  0090                     	;# 
  5222  0091                     	;# 
  5223  0092                     	;# 
  5224  0092                     	;# 
  5225  0093                     	;# 
  5226  0094                     	;# 
  5227  0094                     	;# 
  5228  0095                     	;# 
  5229  0096                     	;# 
  5230  0096                     	;# 
  5231  0097                     	;# 
  5232  0098                     	;# 
  5233  0099                     	;# 
  5234  009A                     	;# 
  5235  009B                     	;# 
  5236  009B                     	;# 
  5237  009C                     	;# 
  5238  009D                     	;# 
  5239  009D                     	;# 
  5240  009E                     	;# 
  5241  009F                     	;# 
  5242  010C                     	;# 
  5243  010C                     	;# 
  5244  010D                     	;# 
  5245  010E                     	;# 
  5246  010F                     	;# 
  5247  010F                     	;# 
  5248  0110                     	;# 
  5249  0111                     	;# 
  5250  0112                     	;# 
  5251  0113                     	;# 
  5252  0114                     	;# 
  5253  0115                     	;# 
  5254  0116                     	;# 
  5255  0117                     	;# 
  5256  0118                     	;# 
  5257  0119                     	;# 
  5258  0119                     	;# 
  5259  0119                     	;# 
  5260  011A                     	;# 
  5261  011A                     	;# 
  5262  011A                     	;# 
  5263  011B                     	;# 
  5264  011B                     	;# 
  5265  011B                     	;# 
  5266  011B                     	;# 
  5267  011B                     	;# 
  5268  011C                     	;# 
  5269  011C                     	;# 
  5270  011C                     	;# 
  5271  011D                     	;# 
  5272  011D                     	;# 
  5273  011D                     	;# 
  5274  011E                     	;# 
  5275  011E                     	;# 
  5276  011E                     	;# 
  5277  011F                     	;# 
  5278  011F                     	;# 
  5279  011F                     	;# 
  5280  011F                     	;# 
  5281  011F                     	;# 
  5282  018C                     	;# 
  5283  018D                     	;# 
  5284  018E                     	;# 
  5285  018F                     	;# 
  5286  0190                     	;# 
  5287  0191                     	;# 
  5288  0192                     	;# 
  5289  0196                     	;# 
  5290  0197                     	;# 
  5291  0198                     	;# 
  5292  0199                     	;# 
  5293  019A                     	;# 
  5294  019B                     	;# 
  5295  019C                     	;# 
  5296  020C                     	;# 
  5297  020D                     	;# 
  5298  020E                     	;# 
  5299  020E                     	;# 
  5300  020F                     	;# 
  5301  020F                     	;# 
  5302  0210                     	;# 
  5303  0210                     	;# 
  5304  0211                     	;# 
  5305  0211                     	;# 
  5306  0212                     	;# 
  5307  0213                     	;# 
  5308  0214                     	;# 
  5309  0214                     	;# 
  5310  0215                     	;# 
  5311  0215                     	;# 
  5312  0216                     	;# 
  5313  0216                     	;# 
  5314  0217                     	;# 
  5315  0217                     	;# 
  5316  0218                     	;# 
  5317  0219                     	;# 
  5318  021A                     	;# 
  5319  021A                     	;# 
  5320  021B                     	;# 
  5321  021B                     	;# 
  5322  021C                     	;# 
  5323  021C                     	;# 
  5324  021D                     	;# 
  5325  021D                     	;# 
  5326  021E                     	;# 
  5327  021F                     	;# 
  5328  028C                     	;# 
  5329  028C                     	;# 
  5330  028D                     	;# 
  5331  028D                     	;# 
  5332  028E                     	;# 
  5333  028F                     	;# 
  5334  0290                     	;# 
  5335  0291                     	;# 
  5336  0292                     	;# 
  5337  0292                     	;# 
  5338  0293                     	;# 
  5339  0293                     	;# 
  5340  0294                     	;# 
  5341  0295                     	;# 
  5342  0296                     	;# 
  5343  0297                     	;# 
  5344  0298                     	;# 
  5345  0298                     	;# 
  5346  0299                     	;# 
  5347  0299                     	;# 
  5348  029A                     	;# 
  5349  029B                     	;# 
  5350  029C                     	;# 
  5351  029D                     	;# 
  5352  029F                     	;# 
  5353  030C                     	;# 
  5354  030C                     	;# 
  5355  030D                     	;# 
  5356  030E                     	;# 
  5357  030F                     	;# 
  5358  0310                     	;# 
  5359  0310                     	;# 
  5360  0311                     	;# 
  5361  0312                     	;# 
  5362  0313                     	;# 
  5363  0314                     	;# 
  5364  0314                     	;# 
  5365  0315                     	;# 
  5366  0316                     	;# 
  5367  0317                     	;# 
  5368  0318                     	;# 
  5369  0318                     	;# 
  5370  0319                     	;# 
  5371  031A                     	;# 
  5372  031B                     	;# 
  5373  038C                     	;# 
  5374  038C                     	;# 
  5375  038D                     	;# 
  5376  038E                     	;# 
  5377  0390                     	;# 
  5378  0390                     	;# 
  5379  0391                     	;# 
  5380  0392                     	;# 
  5381  048C                     	;# 
  5382  048C                     	;# 
  5383  048D                     	;# 
  5384  048E                     	;# 
  5385  048F                     	;# 
  5386  048F                     	;# 
  5387  0490                     	;# 
  5388  0491                     	;# 
  5389  0492                     	;# 
  5390  0492                     	;# 
  5391  0493                     	;# 
  5392  0494                     	;# 
  5393  0495                     	;# 
  5394  0495                     	;# 
  5395  0496                     	;# 
  5396  0497                     	;# 
  5397  0498                     	;# 
  5398  0499                     	;# 
  5399  049A                     	;# 
  5400  049B                     	;# 
  5401  049C                     	;# 
  5402  049D                     	;# 
  5403  058C                     	;# 
  5404  058C                     	;# 
  5405  058D                     	;# 
  5406  058E                     	;# 
  5407  058F                     	;# 
  5408  058F                     	;# 
  5409  0590                     	;# 
  5410  0591                     	;# 
  5411  0592                     	;# 
  5412  0593                     	;# 
  5413  059C                     	;# 
  5414  059C                     	;# 
  5415  059D                     	;# 
  5416  059D                     	;# 
  5417  059E                     	;# 
  5418  059F                     	;# 
  5419  060C                     	;# 
  5420  060C                     	;# 
  5421  060D                     	;# 
  5422  060D                     	;# 
  5423  060E                     	;# 
  5424  060F                     	;# 
  5425  0610                     	;# 
  5426  0611                     	;# 
  5427  0612                     	;# 
  5428  0613                     	;# 
  5429  0614                     	;# 
  5430  0616                     	;# 
  5431  0616                     	;# 
  5432  0617                     	;# 
  5433  0617                     	;# 
  5434  0618                     	;# 
  5435  0619                     	;# 
  5436  061A                     	;# 
  5437  061B                     	;# 
  5438  061C                     	;# 
  5439  061D                     	;# 
  5440  061E                     	;# 
  5441  070C                     	;# 
  5442  070D                     	;# 
  5443  070E                     	;# 
  5444  070F                     	;# 
  5445  0710                     	;# 
  5446  0711                     	;# 
  5447  0712                     	;# 
  5448  0713                     	;# 
  5449  0714                     	;# 
  5450  0716                     	;# 
  5451  0717                     	;# 
  5452  0718                     	;# 
  5453  0719                     	;# 
  5454  071A                     	;# 
  5455  071B                     	;# 
  5456  071C                     	;# 
  5457  071D                     	;# 
  5458  071E                     	;# 
  5459  0796                     	;# 
  5460  0797                     	;# 
  5461  0798                     	;# 
  5462  0799                     	;# 
  5463  079A                     	;# 
  5464  079B                     	;# 
  5465  079C                     	;# 
  5466  079D                     	;# 
  5467  080C                     	;# 
  5468  080D                     	;# 
  5469  080E                     	;# 
  5470  080F                     	;# 
  5471  0810                     	;# 
  5472  0811                     	;# 
  5473  0812                     	;# 
  5474  0813                     	;# 
  5475  0814                     	;# 
  5476  081A                     	;# 
  5477  081A                     	;# 
  5478  081B                     	;# 
  5479  081C                     	;# 
  5480  081C                     	;# 
  5481  081D                     	;# 
  5482  081E                     	;# 
  5483  081F                     	;# 
  5484  088C                     	;# 
  5485  088D                     	;# 
  5486  088E                     	;# 
  5487  088F                     	;# 
  5488  0890                     	;# 
  5489  0891                     	;# 
  5490  0892                     	;# 
  5491  0893                     	;# 
  5492  0895                     	;# 
  5493  0896                     	;# 
  5494  0897                     	;# 
  5495  0898                     	;# 
  5496  0899                     	;# 
  5497  089A                     	;# 
  5498  089B                     	;# 
  5499  090C                     	;# 
  5500  090E                     	;# 
  5501  090F                     	;# 
  5502  091F                     	;# 
  5503  098F                     	;# 
  5504  098F                     	;# 
  5505  0990                     	;# 
  5506  0991                     	;# 
  5507  0992                     	;# 
  5508  0993                     	;# 
  5509  0994                     	;# 
  5510  0995                     	;# 
  5511  0996                     	;# 
  5512  0997                     	;# 
  5513  1E0F                     	;# 
  5514  1E10                     	;# 
  5515  1E11                     	;# 
  5516  1E12                     	;# 
  5517  1E13                     	;# 
  5518  1E14                     	;# 
  5519  1E15                     	;# 
  5520  1E16                     	;# 
  5521  1E17                     	;# 
  5522  1E18                     	;# 
  5523  1E19                     	;# 
  5524  1E1A                     	;# 
  5525  1E1B                     	;# 
  5526  1E1C                     	;# 
  5527  1E1D                     	;# 
  5528  1E1E                     	;# 
  5529  1E1F                     	;# 
  5530  1E20                     	;# 
  5531  1E21                     	;# 
  5532  1E22                     	;# 
  5533  1E23                     	;# 
  5534  1E24                     	;# 
  5535  1E25                     	;# 
  5536  1E26                     	;# 
  5537  1E27                     	;# 
  5538  1E28                     	;# 
  5539  1E29                     	;# 
  5540  1E2A                     	;# 
  5541  1E2B                     	;# 
  5542  1E2C                     	;# 
  5543  1E2D                     	;# 
  5544  1E2E                     	;# 
  5545  1E2F                     	;# 
  5546  1E30                     	;# 
  5547  1E31                     	;# 
  5548  1E32                     	;# 
  5549  1E33                     	;# 
  5550  1E34                     	;# 
  5551  1E35                     	;# 
  5552  1E36                     	;# 
  5553  1E37                     	;# 
  5554  1E8F                     	;# 
  5555  1E90                     	;# 
  5556  1E91                     	;# 
  5557  1E92                     	;# 
  5558  1E93                     	;# 
  5559  1E94                     	;# 
  5560  1E95                     	;# 
  5561  1E96                     	;# 
  5562  1E97                     	;# 
  5563  1E9C                     	;# 
  5564  1E9D                     	;# 
  5565  1E9E                     	;# 
  5566  1EA1                     	;# 
  5567  1EA2                     	;# 
  5568  1EA3                     	;# 
  5569  1EA4                     	;# 
  5570  1EA9                     	;# 
  5571  1EAA                     	;# 
  5572  1EB1                     	;# 
  5573  1EB2                     	;# 
  5574  1EB8                     	;# 
  5575  1EB9                     	;# 
  5576  1EBA                     	;# 
  5577  1EBB                     	;# 
  5578  1EBC                     	;# 
  5579  1EBD                     	;# 
  5580  1EBE                     	;# 
  5581  1EC3                     	;# 
  5582  1EC5                     	;# 
  5583  1EC6                     	;# 
  5584  1EC7                     	;# 
  5585  1EC8                     	;# 
  5586  1EC9                     	;# 
  5587  1ECA                     	;# 
  5588  1ECB                     	;# 
  5589  1ECB                     	;# 
  5590  1ECB                     	;# 
  5591  1ECC                     	;# 
  5592  1ECC                     	;# 
  5593  1ECC                     	;# 
  5594  1F10                     	;# 
  5595  1F11                     	;# 
  5596  1F12                     	;# 
  5597  1F14                     	;# 
  5598  1F15                     	;# 
  5599  1F1C                     	;# 
  5600  1F1D                     	;# 
  5601  1F1E                     	;# 
  5602  1F1F                     	;# 
  5603  1F20                     	;# 
  5604  1F21                     	;# 
  5605  1F22                     	;# 
  5606  1F23                     	;# 
  5607  1F24                     	;# 
  5608  1F25                     	;# 
  5609  1F26                     	;# 
  5610  1F27                     	;# 
  5611  1F38                     	;# 
  5612  1F39                     	;# 
  5613  1F3A                     	;# 
  5614  1F3B                     	;# 
  5615  1F3C                     	;# 
  5616  1F3D                     	;# 
  5617  1F3E                     	;# 
  5618  1F3F                     	;# 
  5619  1F43                     	;# 
  5620  1F44                     	;# 
  5621  1F45                     	;# 
  5622  1F46                     	;# 
  5623  1F47                     	;# 
  5624  1F48                     	;# 
  5625  1F49                     	;# 
  5626  1F4A                     	;# 
  5627  1F4E                     	;# 
  5628  1F4F                     	;# 
  5629  1F50                     	;# 
  5630  1F51                     	;# 
  5631  1F52                     	;# 
  5632  1F53                     	;# 
  5633  1F54                     	;# 
  5634  1F55                     	;# 
  5635  1FE4                     	;# 
  5636  1FE5                     	;# 
  5637  1FE6                     	;# 
  5638  1FE7                     	;# 
  5639  1FE8                     	;# 
  5640  1FE8                     	;# 
  5641  1FE9                     	;# 
  5642  1FEA                     	;# 
  5643  1FEB                     	;# 
  5644  1FED                     	;# 
  5645  1FEE                     	;# 
  5646  1FEF                     	;# 
  5647  0000                     	;# 
  5648  0001                     	;# 
  5649  0002                     	;# 
  5650  0003                     	;# 
  5651  0004                     	;# 
  5652  0005                     	;# 
  5653  0006                     	;# 
  5654  0007                     	;# 
  5655  0008                     	;# 
  5656  0009                     	;# 
  5657  000A                     	;# 
  5658  000B                     	;# 
  5659  000C                     	;# 
  5660  000D                     	;# 
  5661  000E                     	;# 
  5662  0012                     	;# 
  5663  0013                     	;# 
  5664  0014                     	;# 
  5665  0018                     	;# 
  5666  0019                     	;# 
  5667  001A                     	;# 
  5668  008C                     	;# 
  5669  008C                     	;# 
  5670  008D                     	;# 
  5671  008E                     	;# 
  5672  008E                     	;# 
  5673  008F                     	;# 
  5674  0090                     	;# 
  5675  0090                     	;# 
  5676  0091                     	;# 
  5677  0092                     	;# 
  5678  0092                     	;# 
  5679  0093                     	;# 
  5680  0094                     	;# 
  5681  0094                     	;# 
  5682  0095                     	;# 
  5683  0096                     	;# 
  5684  0096                     	;# 
  5685  0097                     	;# 
  5686  0098                     	;# 
  5687  0099                     	;# 
  5688  009A                     	;# 
  5689  009B                     	;# 
  5690  009B                     	;# 
  5691  009C                     	;# 
  5692  009D                     	;# 
  5693  009D                     	;# 
  5694  009E                     	;# 
  5695  009F                     	;# 
  5696  010C                     	;# 
  5697  010C                     	;# 
  5698  010D                     	;# 
  5699  010E                     	;# 
  5700  010F                     	;# 
  5701  010F                     	;# 
  5702  0110                     	;# 
  5703  0111                     	;# 
  5704  0112                     	;# 
  5705  0113                     	;# 
  5706  0114                     	;# 
  5707  0115                     	;# 
  5708  0116                     	;# 
  5709  0117                     	;# 
  5710  0118                     	;# 
  5711  0119                     	;# 
  5712  0119                     	;# 
  5713  0119                     	;# 
  5714  011A                     	;# 
  5715  011A                     	;# 
  5716  011A                     	;# 
  5717  011B                     	;# 
  5718  011B                     	;# 
  5719  011B                     	;# 
  5720  011B                     	;# 
  5721  011B                     	;# 
  5722  011C                     	;# 
  5723  011C                     	;# 
  5724  011C                     	;# 
  5725  011D                     	;# 
  5726  011D                     	;# 
  5727  011D                     	;# 
  5728  011E                     	;# 
  5729  011E                     	;# 
  5730  011E                     	;# 
  5731  011F                     	;# 
  5732  011F                     	;# 
  5733  011F                     	;# 
  5734  011F                     	;# 
  5735  011F                     	;# 
  5736  018C                     	;# 
  5737  018D                     	;# 
  5738  018E                     	;# 
  5739  018F                     	;# 
  5740  0190                     	;# 
  5741  0191                     	;# 
  5742  0192                     	;# 
  5743  0196                     	;# 
  5744  0197                     	;# 
  5745  0198                     	;# 
  5746  0199                     	;# 
  5747  019A                     	;# 
  5748  019B                     	;# 
  5749  019C                     	;# 
  5750  020C                     	;# 
  5751  020D                     	;# 
  5752  020E                     	;# 
  5753  020E                     	;# 
  5754  020F                     	;# 
  5755  020F                     	;# 
  5756  0210                     	;# 
  5757  0210                     	;# 
  5758  0211                     	;# 
  5759  0211                     	;# 
  5760  0212                     	;# 
  5761  0213                     	;# 
  5762  0214                     	;# 
  5763  0214                     	;# 
  5764  0215                     	;# 
  5765  0215                     	;# 
  5766  0216                     	;# 
  5767  0216                     	;# 
  5768  0217                     	;# 
  5769  0217                     	;# 
  5770  0218                     	;# 
  5771  0219                     	;# 
  5772  021A                     	;# 
  5773  021A                     	;# 
  5774  021B                     	;# 
  5775  021B                     	;# 
  5776  021C                     	;# 
  5777  021C                     	;# 
  5778  021D                     	;# 
  5779  021D                     	;# 
  5780  021E                     	;# 
  5781  021F                     	;# 
  5782  028C                     	;# 
  5783  028C                     	;# 
  5784  028D                     	;# 
  5785  028D                     	;# 
  5786  028E                     	;# 
  5787  028F                     	;# 
  5788  0290                     	;# 
  5789  0291                     	;# 
  5790  0292                     	;# 
  5791  0292                     	;# 
  5792  0293                     	;# 
  5793  0293                     	;# 
  5794  0294                     	;# 
  5795  0295                     	;# 
  5796  0296                     	;# 
  5797  0297                     	;# 
  5798  0298                     	;# 
  5799  0298                     	;# 
  5800  0299                     	;# 
  5801  0299                     	;# 
  5802  029A                     	;# 
  5803  029B                     	;# 
  5804  029C                     	;# 
  5805  029D                     	;# 
  5806  029F                     	;# 
  5807  030C                     	;# 
  5808  030C                     	;# 
  5809  030D                     	;# 
  5810  030E                     	;# 
  5811  030F                     	;# 
  5812  0310                     	;# 
  5813  0310                     	;# 
  5814  0311                     	;# 
  5815  0312                     	;# 
  5816  0313                     	;# 
  5817  0314                     	;# 
  5818  0314                     	;# 
  5819  0315                     	;# 
  5820  0316                     	;# 
  5821  0317                     	;# 
  5822  0318                     	;# 
  5823  0318                     	;# 
  5824  0319                     	;# 
  5825  031A                     	;# 
  5826  031B                     	;# 
  5827  038C                     	;# 
  5828  038C                     	;# 
  5829  038D                     	;# 
  5830  038E                     	;# 
  5831  0390                     	;# 
  5832  0390                     	;# 
  5833  0391                     	;# 
  5834  0392                     	;# 
  5835  048C                     	;# 
  5836  048C                     	;# 
  5837  048D                     	;# 
  5838  048E                     	;# 
  5839  048F                     	;# 
  5840  048F                     	;# 
  5841  0490                     	;# 
  5842  0491                     	;# 
  5843  0492                     	;# 
  5844  0492                     	;# 
  5845  0493                     	;# 
  5846  0494                     	;# 
  5847  0495                     	;# 
  5848  0495                     	;# 
  5849  0496                     	;# 
  5850  0497                     	;# 
  5851  0498                     	;# 
  5852  0499                     	;# 
  5853  049A                     	;# 
  5854  049B                     	;# 
  5855  049C                     	;# 
  5856  049D                     	;# 
  5857  058C                     	;# 
  5858  058C                     	;# 
  5859  058D                     	;# 
  5860  058E                     	;# 
  5861  058F                     	;# 
  5862  058F                     	;# 
  5863  0590                     	;# 
  5864  0591                     	;# 
  5865  0592                     	;# 
  5866  0593                     	;# 
  5867  059C                     	;# 
  5868  059C                     	;# 
  5869  059D                     	;# 
  5870  059D                     	;# 
  5871  059E                     	;# 
  5872  059F                     	;# 
  5873  060C                     	;# 
  5874  060C                     	;# 
  5875  060D                     	;# 
  5876  060D                     	;# 
  5877  060E                     	;# 
  5878  060F                     	;# 
  5879  0610                     	;# 
  5880  0611                     	;# 
  5881  0612                     	;# 
  5882  0613                     	;# 
  5883  0614                     	;# 
  5884  0616                     	;# 
  5885  0616                     	;# 
  5886  0617                     	;# 
  5887  0617                     	;# 
  5888  0618                     	;# 
  5889  0619                     	;# 
  5890  061A                     	;# 
  5891  061B                     	;# 
  5892  061C                     	;# 
  5893  061D                     	;# 
  5894  061E                     	;# 
  5895  070C                     	;# 
  5896  070D                     	;# 
  5897  070E                     	;# 
  5898  070F                     	;# 
  5899  0710                     	;# 
  5900  0711                     	;# 
  5901  0712                     	;# 
  5902  0713                     	;# 
  5903  0714                     	;# 
  5904  0716                     	;# 
  5905  0717                     	;# 
  5906  0718                     	;# 
  5907  0719                     	;# 
  5908  071A                     	;# 
  5909  071B                     	;# 
  5910  071C                     	;# 
  5911  071D                     	;# 
  5912  071E                     	;# 
  5913  0796                     	;# 
  5914  0797                     	;# 
  5915  0798                     	;# 
  5916  0799                     	;# 
  5917  079A                     	;# 
  5918  079B                     	;# 
  5919  079C                     	;# 
  5920  079D                     	;# 
  5921  080C                     	;# 
  5922  080D                     	;# 
  5923  080E                     	;# 
  5924  080F                     	;# 
  5925  0810                     	;# 
  5926  0811                     	;# 
  5927  0812                     	;# 
  5928  0813                     	;# 
  5929  0814                     	;# 
  5930  081A                     	;# 
  5931  081A                     	;# 
  5932  081B                     	;# 
  5933  081C                     	;# 
  5934  081C                     	;# 
  5935  081D                     	;# 
  5936  081E                     	;# 
  5937  081F                     	;# 
  5938  088C                     	;# 
  5939  088D                     	;# 
  5940  088E                     	;# 
  5941  088F                     	;# 
  5942  0890                     	;# 
  5943  0891                     	;# 
  5944  0892                     	;# 
  5945  0893                     	;# 
  5946  0895                     	;# 
  5947  0896                     	;# 
  5948  0897                     	;# 
  5949  0898                     	;# 
  5950  0899                     	;# 
  5951  089A                     	;# 
  5952  089B                     	;# 
  5953  090C                     	;# 
  5954  090E                     	;# 
  5955  090F                     	;# 
  5956  091F                     	;# 
  5957  098F                     	;# 
  5958  098F                     	;# 
  5959  0990                     	;# 
  5960  0991                     	;# 
  5961  0992                     	;# 
  5962  0993                     	;# 
  5963  0994                     	;# 
  5964  0995                     	;# 
  5965  0996                     	;# 
  5966  0997                     	;# 
  5967  1E0F                     	;# 
  5968  1E10                     	;# 
  5969  1E11                     	;# 
  5970  1E12                     	;# 
  5971  1E13                     	;# 
  5972  1E14                     	;# 
  5973  1E15                     	;# 
  5974  1E16                     	;# 
  5975  1E17                     	;# 
  5976  1E18                     	;# 
  5977  1E19                     	;# 
  5978  1E1A                     	;# 
  5979  1E1B                     	;# 
  5980  1E1C                     	;# 
  5981  1E1D                     	;# 
  5982  1E1E                     	;# 
  5983  1E1F                     	;# 
  5984  1E20                     	;# 
  5985  1E21                     	;# 
  5986  1E22                     	;# 
  5987  1E23                     	;# 
  5988  1E24                     	;# 
  5989  1E25                     	;# 
  5990  1E26                     	;# 
  5991  1E27                     	;# 
  5992  1E28                     	;# 
  5993  1E29                     	;# 
  5994  1E2A                     	;# 
  5995  1E2B                     	;# 
  5996  1E2C                     	;# 
  5997  1E2D                     	;# 
  5998  1E2E                     	;# 
  5999  1E2F                     	;# 
  6000  1E30                     	;# 
  6001  1E31                     	;# 
  6002  1E32                     	;# 
  6003  1E33                     	;# 
  6004  1E34                     	;# 
  6005  1E35                     	;# 
  6006  1E36                     	;# 
  6007  1E37                     	;# 
  6008  1E8F                     	;# 
  6009  1E90                     	;# 
  6010  1E91                     	;# 
  6011  1E92                     	;# 
  6012  1E93                     	;# 
  6013  1E94                     	;# 
  6014  1E95                     	;# 
  6015  1E96                     	;# 
  6016  1E97                     	;# 
  6017  1E9C                     	;# 
  6018  1E9D                     	;# 
  6019  1E9E                     	;# 
  6020  1EA1                     	;# 
  6021  1EA2                     	;# 
  6022  1EA3                     	;# 
  6023  1EA4                     	;# 
  6024  1EA9                     	;# 
  6025  1EAA                     	;# 
  6026  1EB1                     	;# 
  6027  1EB2                     	;# 
  6028  1EB8                     	;# 
  6029  1EB9                     	;# 
  6030  1EBA                     	;# 
  6031  1EBB                     	;# 
  6032  1EBC                     	;# 
  6033  1EBD                     	;# 
  6034  1EBE                     	;# 
  6035  1EC3                     	;# 
  6036  1EC5                     	;# 
  6037  1EC6                     	;# 
  6038  1EC7                     	;# 
  6039  1EC8                     	;# 
  6040  1EC9                     	;# 
  6041  1ECA                     	;# 
  6042  1ECB                     	;# 
  6043  1ECB                     	;# 
  6044  1ECB                     	;# 
  6045  1ECC                     	;# 
  6046  1ECC                     	;# 
  6047  1ECC                     	;# 
  6048  1F10                     	;# 
  6049  1F11                     	;# 
  6050  1F12                     	;# 
  6051  1F14                     	;# 
  6052  1F15                     	;# 
  6053  1F1C                     	;# 
  6054  1F1D                     	;# 
  6055  1F1E                     	;# 
  6056  1F1F                     	;# 
  6057  1F20                     	;# 
  6058  1F21                     	;# 
  6059  1F22                     	;# 
  6060  1F23                     	;# 
  6061  1F24                     	;# 
  6062  1F25                     	;# 
  6063  1F26                     	;# 
  6064  1F27                     	;# 
  6065  1F38                     	;# 
  6066  1F39                     	;# 
  6067  1F3A                     	;# 
  6068  1F3B                     	;# 
  6069  1F3C                     	;# 
  6070  1F3D                     	;# 
  6071  1F3E                     	;# 
  6072  1F3F                     	;# 
  6073  1F43                     	;# 
  6074  1F44                     	;# 
  6075  1F45                     	;# 
  6076  1F46                     	;# 
  6077  1F47                     	;# 
  6078  1F48                     	;# 
  6079  1F49                     	;# 
  6080  1F4A                     	;# 
  6081  1F4E                     	;# 
  6082  1F4F                     	;# 
  6083  1F50                     	;# 
  6084  1F51                     	;# 
  6085  1F52                     	;# 
  6086  1F53                     	;# 
  6087  1F54                     	;# 
  6088  1F55                     	;# 
  6089  1FE4                     	;# 
  6090  1FE5                     	;# 
  6091  1FE6                     	;# 
  6092  1FE7                     	;# 
  6093  1FE8                     	;# 
  6094  1FE8                     	;# 
  6095  1FE9                     	;# 
  6096  1FEA                     	;# 
  6097  1FEB                     	;# 
  6098  1FED                     	;# 
  6099  1FEE                     	;# 
  6100  1FEF                     	;# 
  6101  0000                     	;# 
  6102  0001                     	;# 
  6103  0002                     	;# 
  6104  0003                     	;# 
  6105  0004                     	;# 
  6106  0005                     	;# 
  6107  0006                     	;# 
  6108  0007                     	;# 
  6109  0008                     	;# 
  6110  0009                     	;# 
  6111  000A                     	;# 
  6112  000B                     	;# 
  6113  000C                     	;# 
  6114  000D                     	;# 
  6115  000E                     	;# 
  6116  0012                     	;# 
  6117  0013                     	;# 
  6118  0014                     	;# 
  6119  0018                     	;# 
  6120  0019                     	;# 
  6121  001A                     	;# 
  6122  008C                     	;# 
  6123  008C                     	;# 
  6124  008D                     	;# 
  6125  008E                     	;# 
  6126  008E                     	;# 
  6127  008F                     	;# 
  6128  0090                     	;# 
  6129  0090                     	;# 
  6130  0091                     	;# 
  6131  0092                     	;# 
  6132  0092                     	;# 
  6133  0093                     	;# 
  6134  0094                     	;# 
  6135  0094                     	;# 
  6136  0095                     	;# 
  6137  0096                     	;# 
  6138  0096                     	;# 
  6139  0097                     	;# 
  6140  0098                     	;# 
  6141  0099                     	;# 
  6142  009A                     	;# 
  6143  009B                     	;# 
  6144  009B                     	;# 
  6145  009C                     	;# 
  6146  009D                     	;# 
  6147  009D                     	;# 
  6148  009E                     	;# 
  6149  009F                     	;# 
  6150  010C                     	;# 
  6151  010C                     	;# 
  6152  010D                     	;# 
  6153  010E                     	;# 
  6154  010F                     	;# 
  6155  010F                     	;# 
  6156  0110                     	;# 
  6157  0111                     	;# 
  6158  0112                     	;# 
  6159  0113                     	;# 
  6160  0114                     	;# 
  6161  0115                     	;# 
  6162  0116                     	;# 
  6163  0117                     	;# 
  6164  0118                     	;# 
  6165  0119                     	;# 
  6166  0119                     	;# 
  6167  0119                     	;# 
  6168  011A                     	;# 
  6169  011A                     	;# 
  6170  011A                     	;# 
  6171  011B                     	;# 
  6172  011B                     	;# 
  6173  011B                     	;# 
  6174  011B                     	;# 
  6175  011B                     	;# 
  6176  011C                     	;# 
  6177  011C                     	;# 
  6178  011C                     	;# 
  6179  011D                     	;# 
  6180  011D                     	;# 
  6181  011D                     	;# 
  6182  011E                     	;# 
  6183  011E                     	;# 
  6184  011E                     	;# 
  6185  011F                     	;# 
  6186  011F                     	;# 
  6187  011F                     	;# 
  6188  011F                     	;# 
  6189  011F                     	;# 
  6190  018C                     	;# 
  6191  018D                     	;# 
  6192  018E                     	;# 
  6193  018F                     	;# 
  6194  0190                     	;# 
  6195  0191                     	;# 
  6196  0192                     	;# 
  6197  0196                     	;# 
  6198  0197                     	;# 
  6199  0198                     	;# 
  6200  0199                     	;# 
  6201  019A                     	;# 
  6202  019B                     	;# 
  6203  019C                     	;# 
  6204  020C                     	;# 
  6205  020D                     	;# 
  6206  020E                     	;# 
  6207  020E                     	;# 
  6208  020F                     	;# 
  6209  020F                     	;# 
  6210  0210                     	;# 
  6211  0210                     	;# 
  6212  0211                     	;# 
  6213  0211                     	;# 
  6214  0212                     	;# 
  6215  0213                     	;# 
  6216  0214                     	;# 
  6217  0214                     	;# 
  6218  0215                     	;# 
  6219  0215                     	;# 
  6220  0216                     	;# 
  6221  0216                     	;# 
  6222  0217                     	;# 
  6223  0217                     	;# 
  6224  0218                     	;# 
  6225  0219                     	;# 
  6226  021A                     	;# 
  6227  021A                     	;# 
  6228  021B                     	;# 
  6229  021B                     	;# 
  6230  021C                     	;# 
  6231  021C                     	;# 
  6232  021D                     	;# 
  6233  021D                     	;# 
  6234  021E                     	;# 
  6235  021F                     	;# 
  6236  028C                     	;# 
  6237  028C                     	;# 
  6238  028D                     	;# 
  6239  028D                     	;# 
  6240  028E                     	;# 
  6241  028F                     	;# 
  6242  0290                     	;# 
  6243  0291                     	;# 
  6244  0292                     	;# 
  6245  0292                     	;# 
  6246  0293                     	;# 
  6247  0293                     	;# 
  6248  0294                     	;# 
  6249  0295                     	;# 
  6250  0296                     	;# 
  6251  0297                     	;# 
  6252  0298                     	;# 
  6253  0298                     	;# 
  6254  0299                     	;# 
  6255  0299                     	;# 
  6256  029A                     	;# 
  6257  029B                     	;# 
  6258  029C                     	;# 
  6259  029D                     	;# 
  6260  029F                     	;# 
  6261  030C                     	;# 
  6262  030C                     	;# 
  6263  030D                     	;# 
  6264  030E                     	;# 
  6265  030F                     	;# 
  6266  0310                     	;# 
  6267  0310                     	;# 
  6268  0311                     	;# 
  6269  0312                     	;# 
  6270  0313                     	;# 
  6271  0314                     	;# 
  6272  0314                     	;# 
  6273  0315                     	;# 
  6274  0316                     	;# 
  6275  0317                     	;# 
  6276  0318                     	;# 
  6277  0318                     	;# 
  6278  0319                     	;# 
  6279  031A                     	;# 
  6280  031B                     	;# 
  6281  038C                     	;# 
  6282  038C                     	;# 
  6283  038D                     	;# 
  6284  038E                     	;# 
  6285  0390                     	;# 
  6286  0390                     	;# 
  6287  0391                     	;# 
  6288  0392                     	;# 
  6289  048C                     	;# 
  6290  048C                     	;# 
  6291  048D                     	;# 
  6292  048E                     	;# 
  6293  048F                     	;# 
  6294  048F                     	;# 
  6295  0490                     	;# 
  6296  0491                     	;# 
  6297  0492                     	;# 
  6298  0492                     	;# 
  6299  0493                     	;# 
  6300  0494                     	;# 
  6301  0495                     	;# 
  6302  0495                     	;# 
  6303  0496                     	;# 
  6304  0497                     	;# 
  6305  0498                     	;# 
  6306  0499                     	;# 
  6307  049A                     	;# 
  6308  049B                     	;# 
  6309  049C                     	;# 
  6310  049D                     	;# 
  6311  058C                     	;# 
  6312  058C                     	;# 
  6313  058D                     	;# 
  6314  058E                     	;# 
  6315  058F                     	;# 
  6316  058F                     	;# 
  6317  0590                     	;# 
  6318  0591                     	;# 
  6319  0592                     	;# 
  6320  0593                     	;# 
  6321  059C                     	;# 
  6322  059C                     	;# 
  6323  059D                     	;# 
  6324  059D                     	;# 
  6325  059E                     	;# 
  6326  059F                     	;# 
  6327  060C                     	;# 
  6328  060C                     	;# 
  6329  060D                     	;# 
  6330  060D                     	;# 
  6331  060E                     	;# 
  6332  060F                     	;# 
  6333  0610                     	;# 
  6334  0611                     	;# 
  6335  0612                     	;# 
  6336  0613                     	;# 
  6337  0614                     	;# 
  6338  0616                     	;# 
  6339  0616                     	;# 
  6340  0617                     	;# 
  6341  0617                     	;# 
  6342  0618                     	;# 
  6343  0619                     	;# 
  6344  061A                     	;# 
  6345  061B                     	;# 
  6346  061C                     	;# 
  6347  061D                     	;# 
  6348  061E                     	;# 
  6349  070C                     	;# 
  6350  070D                     	;# 
  6351  070E                     	;# 
  6352  070F                     	;# 
  6353  0710                     	;# 
  6354  0711                     	;# 
  6355  0712                     	;# 
  6356  0713                     	;# 
  6357  0714                     	;# 
  6358  0716                     	;# 
  6359  0717                     	;# 
  6360  0718                     	;# 
  6361  0719                     	;# 
  6362  071A                     	;# 
  6363  071B                     	;# 
  6364  071C                     	;# 
  6365  071D                     	;# 
  6366  071E                     	;# 
  6367  0796                     	;# 
  6368  0797                     	;# 
  6369  0798                     	;# 
  6370  0799                     	;# 
  6371  079A                     	;# 
  6372  079B                     	;# 
  6373  079C                     	;# 
  6374  079D                     	;# 
  6375  080C                     	;# 
  6376  080D                     	;# 
  6377  080E                     	;# 
  6378  080F                     	;# 
  6379  0810                     	;# 
  6380  0811                     	;# 
  6381  0812                     	;# 
  6382  0813                     	;# 
  6383  0814                     	;# 
  6384  081A                     	;# 
  6385  081A                     	;# 
  6386  081B                     	;# 
  6387  081C                     	;# 
  6388  081C                     	;# 
  6389  081D                     	;# 
  6390  081E                     	;# 
  6391  081F                     	;# 
  6392  088C                     	;# 
  6393  088D                     	;# 
  6394  088E                     	;# 
  6395  088F                     	;# 
  6396  0890                     	;# 
  6397  0891                     	;# 
  6398  0892                     	;# 
  6399  0893                     	;# 
  6400  0895                     	;# 
  6401  0896                     	;# 
  6402  0897                     	;# 
  6403  0898                     	;# 
  6404  0899                     	;# 
  6405  089A                     	;# 
  6406  089B                     	;# 
  6407  090C                     	;# 
  6408  090E                     	;# 
  6409  090F                     	;# 
  6410  091F                     	;# 
  6411  098F                     	;# 
  6412  098F                     	;# 
  6413  0990                     	;# 
  6414  0991                     	;# 
  6415  0992                     	;# 
  6416  0993                     	;# 
  6417  0994                     	;# 
  6418  0995                     	;# 
  6419  0996                     	;# 
  6420  0997                     	;# 
  6421  1E0F                     	;# 
  6422  1E10                     	;# 
  6423  1E11                     	;# 
  6424  1E12                     	;# 
  6425  1E13                     	;# 
  6426  1E14                     	;# 
  6427  1E15                     	;# 
  6428  1E16                     	;# 
  6429  1E17                     	;# 
  6430  1E18                     	;# 
  6431  1E19                     	;# 
  6432  1E1A                     	;# 
  6433  1E1B                     	;# 
  6434  1E1C                     	;# 
  6435  1E1D                     	;# 
  6436  1E1E                     	;# 
  6437  1E1F                     	;# 
  6438  1E20                     	;# 
  6439  1E21                     	;# 
  6440  1E22                     	;# 
  6441  1E23                     	;# 
  6442  1E24                     	;# 
  6443  1E25                     	;# 
  6444  1E26                     	;# 
  6445  1E27                     	;# 
  6446  1E28                     	;# 
  6447  1E29                     	;# 
  6448  1E2A                     	;# 
  6449  1E2B                     	;# 
  6450  1E2C                     	;# 
  6451  1E2D                     	;# 
  6452  1E2E                     	;# 
  6453  1E2F                     	;# 
  6454  1E30                     	;# 
  6455  1E31                     	;# 
  6456  1E32                     	;# 
  6457  1E33                     	;# 
  6458  1E34                     	;# 
  6459  1E35                     	;# 
  6460  1E36                     	;# 
  6461  1E37                     	;# 
  6462  1E8F                     	;# 
  6463  1E90                     	;# 
  6464  1E91                     	;# 
  6465  1E92                     	;# 
  6466  1E93                     	;# 
  6467  1E94                     	;# 
  6468  1E95                     	;# 
  6469  1E96                     	;# 
  6470  1E97                     	;# 
  6471  1E9C                     	;# 
  6472  1E9D                     	;# 
  6473  1E9E                     	;# 
  6474  1EA1                     	;# 
  6475  1EA2                     	;# 
  6476  1EA3                     	;# 
  6477  1EA4                     	;# 
  6478  1EA9                     	;# 
  6479  1EAA                     	;# 
  6480  1EB1                     	;# 
  6481  1EB2                     	;# 
  6482  1EB8                     	;# 
  6483  1EB9                     	;# 
  6484  1EBA                     	;# 
  6485  1EBB                     	;# 
  6486  1EBC                     	;# 
  6487  1EBD                     	;# 
  6488  1EBE                     	;# 
  6489  1EC3                     	;# 
  6490  1EC5                     	;# 
  6491  1EC6                     	;# 
  6492  1EC7                     	;# 
  6493  1EC8                     	;# 
  6494  1EC9                     	;# 
  6495  1ECA                     	;# 
  6496  1ECB                     	;# 
  6497  1ECB                     	;# 
  6498  1ECB                     	;# 
  6499  1ECC                     	;# 
  6500  1ECC                     	;# 
  6501  1ECC                     	;# 
  6502  1F10                     	;# 
  6503  1F11                     	;# 
  6504  1F12                     	;# 
  6505  1F14                     	;# 
  6506  1F15                     	;# 
  6507  1F1C                     	;# 
  6508  1F1D                     	;# 
  6509  1F1E                     	;# 
  6510  1F1F                     	;# 
  6511  1F20                     	;# 
  6512  1F21                     	;# 
  6513  1F22                     	;# 
  6514  1F23                     	;# 
  6515  1F24                     	;# 
  6516  1F25                     	;# 
  6517  1F26                     	;# 
  6518  1F27                     	;# 
  6519  1F38                     	;# 
  6520  1F39                     	;# 
  6521  1F3A                     	;# 
  6522  1F3B                     	;# 
  6523  1F3C                     	;# 
  6524  1F3D                     	;# 
  6525  1F3E                     	;# 
  6526  1F3F                     	;# 
  6527  1F43                     	;# 
  6528  1F44                     	;# 
  6529  1F45                     	;# 
  6530  1F46                     	;# 
  6531  1F47                     	;# 
  6532  1F48                     	;# 
  6533  1F49                     	;# 
  6534  1F4A                     	;# 
  6535  1F4E                     	;# 
  6536  1F4F                     	;# 
  6537  1F50                     	;# 
  6538  1F51                     	;# 
  6539  1F52                     	;# 
  6540  1F53                     	;# 
  6541  1F54                     	;# 
  6542  1F55                     	;# 
  6543  1FE4                     	;# 
  6544  1FE5                     	;# 
  6545  1FE6                     	;# 
  6546  1FE7                     	;# 
  6547  1FE8                     	;# 
  6548  1FE8                     	;# 
  6549  1FE9                     	;# 
  6550  1FEA                     	;# 
  6551  1FEB                     	;# 
  6552  1FED                     	;# 
  6553  1FEE                     	;# 
  6554  1FEF                     	;# 
  6555  0000                     	;# 
  6556  0001                     	;# 
  6557  0002                     	;# 
  6558  0003                     	;# 
  6559  0004                     	;# 
  6560  0005                     	;# 
  6561  0006                     	;# 
  6562  0007                     	;# 
  6563  0008                     	;# 
  6564  0009                     	;# 
  6565  000A                     	;# 
  6566  000B                     	;# 
  6567  000C                     	;# 
  6568  000D                     	;# 
  6569  000E                     	;# 
  6570  0012                     	;# 
  6571  0013                     	;# 
  6572  0014                     	;# 
  6573  0018                     	;# 
  6574  0019                     	;# 
  6575  001A                     	;# 
  6576  008C                     	;# 
  6577  008C                     	;# 
  6578  008D                     	;# 
  6579  008E                     	;# 
  6580  008E                     	;# 
  6581  008F                     	;# 
  6582  0090                     	;# 
  6583  0090                     	;# 
  6584  0091                     	;# 
  6585  0092                     	;# 
  6586  0092                     	;# 
  6587  0093                     	;# 
  6588  0094                     	;# 
  6589  0094                     	;# 
  6590  0095                     	;# 
  6591  0096                     	;# 
  6592  0096                     	;# 
  6593  0097                     	;# 
  6594  0098                     	;# 
  6595  0099                     	;# 
  6596  009A                     	;# 
  6597  009B                     	;# 
  6598  009B                     	;# 
  6599  009C                     	;# 
  6600  009D                     	;# 
  6601  009D                     	;# 
  6602  009E                     	;# 
  6603  009F                     	;# 
  6604  010C                     	;# 
  6605  010C                     	;# 
  6606  010D                     	;# 
  6607  010E                     	;# 
  6608  010F                     	;# 
  6609  010F                     	;# 
  6610  0110                     	;# 
  6611  0111                     	;# 
  6612  0112                     	;# 
  6613  0113                     	;# 
  6614  0114                     	;# 
  6615  0115                     	;# 
  6616  0116                     	;# 
  6617  0117                     	;# 
  6618  0118                     	;# 
  6619  0119                     	;# 
  6620  0119                     	;# 
  6621  0119                     	;# 
  6622  011A                     	;# 
  6623  011A                     	;# 
  6624  011A                     	;# 
  6625  011B                     	;# 
  6626  011B                     	;# 
  6627  011B                     	;# 
  6628  011B                     	;# 
  6629  011B                     	;# 
  6630  011C                     	;# 
  6631  011C                     	;# 
  6632  011C                     	;# 
  6633  011D                     	;# 
  6634  011D                     	;# 
  6635  011D                     	;# 
  6636  011E                     	;# 
  6637  011E                     	;# 
  6638  011E                     	;# 
  6639  011F                     	;# 
  6640  011F                     	;# 
  6641  011F                     	;# 
  6642  011F                     	;# 
  6643  011F                     	;# 
  6644  018C                     	;# 
  6645  018D                     	;# 
  6646  018E                     	;# 
  6647  018F                     	;# 
  6648  0190                     	;# 
  6649  0191                     	;# 
  6650  0192                     	;# 
  6651  0196                     	;# 
  6652  0197                     	;# 
  6653  0198                     	;# 
  6654  0199                     	;# 
  6655  019A                     	;# 
  6656  019B                     	;# 
  6657  019C                     	;# 
  6658  020C                     	;# 
  6659  020D                     	;# 
  6660  020E                     	;# 
  6661  020E                     	;# 
  6662  020F                     	;# 
  6663  020F                     	;# 
  6664  0210                     	;# 
  6665  0210                     	;# 
  6666  0211                     	;# 
  6667  0211                     	;# 
  6668  0212                     	;# 
  6669  0213                     	;# 
  6670  0214                     	;# 
  6671  0214                     	;# 
  6672  0215                     	;# 
  6673  0215                     	;# 
  6674  0216                     	;# 
  6675  0216                     	;# 
  6676  0217                     	;# 
  6677  0217                     	;# 
  6678  0218                     	;# 
  6679  0219                     	;# 
  6680  021A                     	;# 
  6681  021A                     	;# 
  6682  021B                     	;# 
  6683  021B                     	;# 
  6684  021C                     	;# 
  6685  021C                     	;# 
  6686  021D                     	;# 
  6687  021D                     	;# 
  6688  021E                     	;# 
  6689  021F                     	;# 
  6690  028C                     	;# 
  6691  028C                     	;# 
  6692  028D                     	;# 
  6693  028D                     	;# 
  6694  028E                     	;# 
  6695  028F                     	;# 
  6696  0290                     	;# 
  6697  0291                     	;# 
  6698  0292                     	;# 
  6699  0292                     	;# 
  6700  0293                     	;# 
  6701  0293                     	;# 
  6702  0294                     	;# 
  6703  0295                     	;# 
  6704  0296                     	;# 
  6705  0297                     	;# 
  6706  0298                     	;# 
  6707  0298                     	;# 
  6708  0299                     	;# 
  6709  0299                     	;# 
  6710  029A                     	;# 
  6711  029B                     	;# 
  6712  029C                     	;# 
  6713  029D                     	;# 
  6714  029F                     	;# 
  6715  030C                     	;# 
  6716  030C                     	;# 
  6717  030D                     	;# 
  6718  030E                     	;# 
  6719  030F                     	;# 
  6720  0310                     	;# 
  6721  0310                     	;# 
  6722  0311                     	;# 
  6723  0312                     	;# 
  6724  0313                     	;# 
  6725  0314                     	;# 
  6726  0314                     	;# 
  6727  0315                     	;# 
  6728  0316                     	;# 
  6729  0317                     	;# 
  6730  0318                     	;# 
  6731  0318                     	;# 
  6732  0319                     	;# 
  6733  031A                     	;# 
  6734  031B                     	;# 
  6735  038C                     	;# 
  6736  038C                     	;# 
  6737  038D                     	;# 
  6738  038E                     	;# 
  6739  0390                     	;# 
  6740  0390                     	;# 
  6741  0391                     	;# 
  6742  0392                     	;# 
  6743  048C                     	;# 
  6744  048C                     	;# 
  6745  048D                     	;# 
  6746  048E                     	;# 
  6747  048F                     	;# 
  6748  048F                     	;# 
  6749  0490                     	;# 
  6750  0491                     	;# 
  6751  0492                     	;# 
  6752  0492                     	;# 
  6753  0493                     	;# 
  6754  0494                     	;# 
  6755  0495                     	;# 
  6756  0495                     	;# 
  6757  0496                     	;# 
  6758  0497                     	;# 
  6759  0498                     	;# 
  6760  0499                     	;# 
  6761  049A                     	;# 
  6762  049B                     	;# 
  6763  049C                     	;# 
  6764  049D                     	;# 
  6765  058C                     	;# 
  6766  058C                     	;# 
  6767  058D                     	;# 
  6768  058E                     	;# 
  6769  058F                     	;# 
  6770  058F                     	;# 
  6771  0590                     	;# 
  6772  0591                     	;# 
  6773  0592                     	;# 
  6774  0593                     	;# 
  6775  059C                     	;# 
  6776  059C                     	;# 
  6777  059D                     	;# 
  6778  059D                     	;# 
  6779  059E                     	;# 
  6780  059F                     	;# 
  6781  060C                     	;# 
  6782  060C                     	;# 
  6783  060D                     	;# 
  6784  060D                     	;# 
  6785  060E                     	;# 
  6786  060F                     	;# 
  6787  0610                     	;# 
  6788  0611                     	;# 
  6789  0612                     	;# 
  6790  0613                     	;# 
  6791  0614                     	;# 
  6792  0616                     	;# 
  6793  0616                     	;# 
  6794  0617                     	;# 
  6795  0617                     	;# 
  6796  0618                     	;# 
  6797  0619                     	;# 
  6798  061A                     	;# 
  6799  061B                     	;# 
  6800  061C                     	;# 
  6801  061D                     	;# 
  6802  061E                     	;# 
  6803  070C                     	;# 
  6804  070D                     	;# 
  6805  070E                     	;# 
  6806  070F                     	;# 
  6807  0710                     	;# 
  6808  0711                     	;# 
  6809  0712                     	;# 
  6810  0713                     	;# 
  6811  0714                     	;# 
  6812  0716                     	;# 
  6813  0717                     	;# 
  6814  0718                     	;# 
  6815  0719                     	;# 
  6816  071A                     	;# 
  6817  071B                     	;# 
  6818  071C                     	;# 
  6819  071D                     	;# 
  6820  071E                     	;# 
  6821  0796                     	;# 
  6822  0797                     	;# 
  6823  0798                     	;# 
  6824  0799                     	;# 
  6825  079A                     	;# 
  6826  079B                     	;# 
  6827  079C                     	;# 
  6828  079D                     	;# 
  6829  080C                     	;# 
  6830  080D                     	;# 
  6831  080E                     	;# 
  6832  080F                     	;# 
  6833  0810                     	;# 
  6834  0811                     	;# 
  6835  0812                     	;# 
  6836  0813                     	;# 
  6837  0814                     	;# 
  6838  081A                     	;# 
  6839  081A                     	;# 
  6840  081B                     	;# 
  6841  081C                     	;# 
  6842  081C                     	;# 
  6843  081D                     	;# 
  6844  081E                     	;# 
  6845  081F                     	;# 
  6846  088C                     	;# 
  6847  088D                     	;# 
  6848  088E                     	;# 
  6849  088F                     	;# 
  6850  0890                     	;# 
  6851  0891                     	;# 
  6852  0892                     	;# 
  6853  0893                     	;# 
  6854  0895                     	;# 
  6855  0896                     	;# 
  6856  0897                     	;# 
  6857  0898                     	;# 
  6858  0899                     	;# 
  6859  089A                     	;# 
  6860  089B                     	;# 
  6861  090C                     	;# 
  6862  090E                     	;# 
  6863  090F                     	;# 
  6864  091F                     	;# 
  6865  098F                     	;# 
  6866  098F                     	;# 
  6867  0990                     	;# 
  6868  0991                     	;# 
  6869  0992                     	;# 
  6870  0993                     	;# 
  6871  0994                     	;# 
  6872  0995                     	;# 
  6873  0996                     	;# 
  6874  0997                     	;# 
  6875  1E0F                     	;# 
  6876  1E10                     	;# 
  6877  1E11                     	;# 
  6878  1E12                     	;# 
  6879  1E13                     	;# 
  6880  1E14                     	;# 
  6881  1E15                     	;# 
  6882  1E16                     	;# 
  6883  1E17                     	;# 
  6884  1E18                     	;# 
  6885  1E19                     	;# 
  6886  1E1A                     	;# 
  6887  1E1B                     	;# 
  6888  1E1C                     	;# 
  6889  1E1D                     	;# 
  6890  1E1E                     	;# 
  6891  1E1F                     	;# 
  6892  1E20                     	;# 
  6893  1E21                     	;# 
  6894  1E22                     	;# 
  6895  1E23                     	;# 
  6896  1E24                     	;# 
  6897  1E25                     	;# 
  6898  1E26                     	;# 
  6899  1E27                     	;# 
  6900  1E28                     	;# 
  6901  1E29                     	;# 
  6902  1E2A                     	;# 
  6903  1E2B                     	;# 
  6904  1E2C                     	;# 
  6905  1E2D                     	;# 
  6906  1E2E                     	;# 
  6907  1E2F                     	;# 
  6908  1E30                     	;# 
  6909  1E31                     	;# 
  6910  1E32                     	;# 
  6911  1E33                     	;# 
  6912  1E34                     	;# 
  6913  1E35                     	;# 
  6914  1E36                     	;# 
  6915  1E37                     	;# 
  6916  1E8F                     	;# 
  6917  1E90                     	;# 
  6918  1E91                     	;# 
  6919  1E92                     	;# 
  6920  1E93                     	;# 
  6921  1E94                     	;# 
  6922  1E95                     	;# 
  6923  1E96                     	;# 
  6924  1E97                     	;# 
  6925  1E9C                     	;# 
  6926  1E9D                     	;# 
  6927  1E9E                     	;# 
  6928  1EA1                     	;# 
  6929  1EA2                     	;# 
  6930  1EA3                     	;# 
  6931  1EA4                     	;# 
  6932  1EA9                     	;# 
  6933  1EAA                     	;# 
  6934  1EB1                     	;# 
  6935  1EB2                     	;# 
  6936  1EB8                     	;# 
  6937  1EB9                     	;# 
  6938  1EBA                     	;# 
  6939  1EBB                     	;# 
  6940  1EBC                     	;# 
  6941  1EBD                     	;# 
  6942  1EBE                     	;# 
  6943  1EC3                     	;# 
  6944  1EC5                     	;# 
  6945  1EC6                     	;# 
  6946  1EC7                     	;# 
  6947  1EC8                     	;# 
  6948  1EC9                     	;# 
  6949  1ECA                     	;# 
  6950  1ECB                     	;# 
  6951  1ECB                     	;# 
  6952  1ECB                     	;# 
  6953  1ECC                     	;# 
  6954  1ECC                     	;# 
  6955  1ECC                     	;# 
  6956  1F10                     	;# 
  6957  1F11                     	;# 
  6958  1F12                     	;# 
  6959  1F14                     	;# 
  6960  1F15                     	;# 
  6961  1F1C                     	;# 
  6962  1F1D                     	;# 
  6963  1F1E                     	;# 
  6964  1F1F                     	;# 
  6965  1F20                     	;# 
  6966  1F21                     	;# 
  6967  1F22                     	;# 
  6968  1F23                     	;# 
  6969  1F24                     	;# 
  6970  1F25                     	;# 
  6971  1F26                     	;# 
  6972  1F27                     	;# 
  6973  1F38                     	;# 
  6974  1F39                     	;# 
  6975  1F3A                     	;# 
  6976  1F3B                     	;# 
  6977  1F3C                     	;# 
  6978  1F3D                     	;# 
  6979  1F3E                     	;# 
  6980  1F3F                     	;# 
  6981  1F43                     	;# 
  6982  1F44                     	;# 
  6983  1F45                     	;# 
  6984  1F46                     	;# 
  6985  1F47                     	;# 
  6986  1F48                     	;# 
  6987  1F49                     	;# 
  6988  1F4A                     	;# 
  6989  1F4E                     	;# 
  6990  1F4F                     	;# 
  6991  1F50                     	;# 
  6992  1F51                     	;# 
  6993  1F52                     	;# 
  6994  1F53                     	;# 
  6995  1F54                     	;# 
  6996  1F55                     	;# 
  6997  1FE4                     	;# 
  6998  1FE5                     	;# 
  6999  1FE6                     	;# 
  7000  1FE7                     	;# 
  7001  1FE8                     	;# 
  7002  1FE8                     	;# 
  7003  1FE9                     	;# 
  7004  1FEA                     	;# 
  7005  1FEB                     	;# 
  7006  1FED                     	;# 
  7007  1FEE                     	;# 
  7008  1FEF                     	;# 
  7009  0000                     	;# 
  7010  0001                     	;# 
  7011  0002                     	;# 
  7012  0003                     	;# 
  7013  0004                     	;# 
  7014  0005                     	;# 
  7015  0006                     	;# 
  7016  0007                     	;# 
  7017  0008                     	;# 
  7018  0009                     	;# 
  7019  000A                     	;# 
  7020  000B                     	;# 
  7021  000C                     	;# 
  7022  000D                     	;# 
  7023  000E                     	;# 
  7024  0012                     	;# 
  7025  0013                     	;# 
  7026  0014                     	;# 
  7027  0018                     	;# 
  7028  0019                     	;# 
  7029  001A                     	;# 
  7030  008C                     	;# 
  7031  008C                     	;# 
  7032  008D                     	;# 
  7033  008E                     	;# 
  7034  008E                     	;# 
  7035  008F                     	;# 
  7036  0090                     	;# 
  7037  0090                     	;# 
  7038  0091                     	;# 
  7039  0092                     	;# 
  7040  0092                     	;# 
  7041  0093                     	;# 
  7042  0094                     	;# 
  7043  0094                     	;# 
  7044  0095                     	;# 
  7045  0096                     	;# 
  7046  0096                     	;# 
  7047  0097                     	;# 
  7048  0098                     	;# 
  7049  0099                     	;# 
  7050  009A                     	;# 
  7051  009B                     	;# 
  7052  009B                     	;# 
  7053  009C                     	;# 
  7054  009D                     	;# 
  7055  009D                     	;# 
  7056  009E                     	;# 
  7057  009F                     	;# 
  7058  010C                     	;# 
  7059  010C                     	;# 
  7060  010D                     	;# 
  7061  010E                     	;# 
  7062  010F                     	;# 
  7063  010F                     	;# 
  7064  0110                     	;# 
  7065  0111                     	;# 
  7066  0112                     	;# 
  7067  0113                     	;# 
  7068  0114                     	;# 
  7069  0115                     	;# 
  7070  0116                     	;# 
  7071  0117                     	;# 
  7072  0118                     	;# 
  7073  0119                     	;# 
  7074  0119                     	;# 
  7075  0119                     	;# 
  7076  011A                     	;# 
  7077  011A                     	;# 
  7078  011A                     	;# 
  7079  011B                     	;# 
  7080  011B                     	;# 
  7081  011B                     	;# 
  7082  011B                     	;# 
  7083  011B                     	;# 
  7084  011C                     	;# 
  7085  011C                     	;# 
  7086  011C                     	;# 
  7087  011D                     	;# 
  7088  011D                     	;# 
  7089  011D                     	;# 
  7090  011E                     	;# 
  7091  011E                     	;# 
  7092  011E                     	;# 
  7093  011F                     	;# 
  7094  011F                     	;# 
  7095  011F                     	;# 
  7096  011F                     	;# 
  7097  011F                     	;# 
  7098  018C                     	;# 
  7099  018D                     	;# 
  7100  018E                     	;# 
  7101  018F                     	;# 
  7102  0190                     	;# 
  7103  0191                     	;# 
  7104  0192                     	;# 
  7105  0196                     	;# 
  7106  0197                     	;# 
  7107  0198                     	;# 
  7108  0199                     	;# 
  7109  019A                     	;# 
  7110  019B                     	;# 
  7111  019C                     	;# 
  7112  020C                     	;# 
  7113  020D                     	;# 
  7114  020E                     	;# 
  7115  020E                     	;# 
  7116  020F                     	;# 
  7117  020F                     	;# 
  7118  0210                     	;# 
  7119  0210                     	;# 
  7120  0211                     	;# 
  7121  0211                     	;# 
  7122  0212                     	;# 
  7123  0213                     	;# 
  7124  0214                     	;# 
  7125  0214                     	;# 
  7126  0215                     	;# 
  7127  0215                     	;# 
  7128  0216                     	;# 
  7129  0216                     	;# 
  7130  0217                     	;# 
  7131  0217                     	;# 
  7132  0218                     	;# 
  7133  0219                     	;# 
  7134  021A                     	;# 
  7135  021A                     	;# 
  7136  021B                     	;# 
  7137  021B                     	;# 
  7138  021C                     	;# 
  7139  021C                     	;# 
  7140  021D                     	;# 
  7141  021D                     	;# 
  7142  021E                     	;# 
  7143  021F                     	;# 
  7144  028C                     	;# 
  7145  028C                     	;# 
  7146  028D                     	;# 
  7147  028D                     	;# 
  7148  028E                     	;# 
  7149  028F                     	;# 
  7150  0290                     	;# 
  7151  0291                     	;# 
  7152  0292                     	;# 
  7153  0292                     	;# 
  7154  0293                     	;# 
  7155  0293                     	;# 
  7156  0294                     	;# 
  7157  0295                     	;# 
  7158  0296                     	;# 
  7159  0297                     	;# 
  7160  0298                     	;# 
  7161  0298                     	;# 
  7162  0299                     	;# 
  7163  0299                     	;# 
  7164  029A                     	;# 
  7165  029B                     	;# 
  7166  029C                     	;# 
  7167  029D                     	;# 
  7168  029F                     	;# 
  7169  030C                     	;# 
  7170  030C                     	;# 
  7171  030D                     	;# 
  7172  030E                     	;# 
  7173  030F                     	;# 
  7174  0310                     	;# 
  7175  0310                     	;# 
  7176  0311                     	;# 
  7177  0312                     	;# 
  7178  0313                     	;# 
  7179  0314                     	;# 
  7180  0314                     	;# 
  7181  0315                     	;# 
  7182  0316                     	;# 
  7183  0317                     	;# 
  7184  0318                     	;# 
  7185  0318                     	;# 
  7186  0319                     	;# 
  7187  031A                     	;# 
  7188  031B                     	;# 
  7189  038C                     	;# 
  7190  038C                     	;# 
  7191  038D                     	;# 
  7192  038E                     	;# 
  7193  0390                     	;# 
  7194  0390                     	;# 
  7195  0391                     	;# 
  7196  0392                     	;# 
  7197  048C                     	;# 
  7198  048C                     	;# 
  7199  048D                     	;# 
  7200  048E                     	;# 
  7201  048F                     	;# 
  7202  048F                     	;# 
  7203  0490                     	;# 
  7204  0491                     	;# 
  7205  0492                     	;# 
  7206  0492                     	;# 
  7207  0493                     	;# 
  7208  0494                     	;# 
  7209  0495                     	;# 
  7210  0495                     	;# 
  7211  0496                     	;# 
  7212  0497                     	;# 
  7213  0498                     	;# 
  7214  0499                     	;# 
  7215  049A                     	;# 
  7216  049B                     	;# 
  7217  049C                     	;# 
  7218  049D                     	;# 
  7219  058C                     	;# 
  7220  058C                     	;# 
  7221  058D                     	;# 
  7222  058E                     	;# 
  7223  058F                     	;# 
  7224  058F                     	;# 
  7225  0590                     	;# 
  7226  0591                     	;# 
  7227  0592                     	;# 
  7228  0593                     	;# 
  7229  059C                     	;# 
  7230  059C                     	;# 
  7231  059D                     	;# 
  7232  059D                     	;# 
  7233  059E                     	;# 
  7234  059F                     	;# 
  7235  060C                     	;# 
  7236  060C                     	;# 
  7237  060D                     	;# 
  7238  060D                     	;# 
  7239  060E                     	;# 
  7240  060F                     	;# 
  7241  0610                     	;# 
  7242  0611                     	;# 
  7243  0612                     	;# 
  7244  0613                     	;# 
  7245  0614                     	;# 
  7246  0616                     	;# 
  7247  0616                     	;# 
  7248  0617                     	;# 
  7249  0617                     	;# 
  7250  0618                     	;# 
  7251  0619                     	;# 
  7252  061A                     	;# 
  7253  061B                     	;# 
  7254  061C                     	;# 
  7255  061D                     	;# 
  7256  061E                     	;# 
  7257  070C                     	;# 
  7258  070D                     	;# 
  7259  070E                     	;# 
  7260  070F                     	;# 
  7261  0710                     	;# 
  7262  0711                     	;# 
  7263  0712                     	;# 
  7264  0713                     	;# 
  7265  0714                     	;# 
  7266  0716                     	;# 
  7267  0717                     	;# 
  7268  0718                     	;# 
  7269  0719                     	;# 
  7270  071A                     	;# 
  7271  071B                     	;# 
  7272  071C                     	;# 
  7273  071D                     	;# 
  7274  071E                     	;# 
  7275  0796                     	;# 
  7276  0797                     	;# 
  7277  0798                     	;# 
  7278  0799                     	;# 
  7279  079A                     	;# 
  7280  079B                     	;# 
  7281  079C                     	;# 
  7282  079D                     	;# 
  7283  080C                     	;# 
  7284  080D                     	;# 
  7285  080E                     	;# 
  7286  080F                     	;# 
  7287  0810                     	;# 
  7288  0811                     	;# 
  7289  0812                     	;# 
  7290  0813                     	;# 
  7291  0814                     	;# 
  7292  081A                     	;# 
  7293  081A                     	;# 
  7294  081B                     	;# 
  7295  081C                     	;# 
  7296  081C                     	;# 
  7297  081D                     	;# 
  7298  081E                     	;# 
  7299  081F                     	;# 
  7300  088C                     	;# 
  7301  088D                     	;# 
  7302  088E                     	;# 
  7303  088F                     	;# 
  7304  0890                     	;# 
  7305  0891                     	;# 
  7306  0892                     	;# 
  7307  0893                     	;# 
  7308  0895                     	;# 
  7309  0896                     	;# 
  7310  0897                     	;# 
  7311  0898                     	;# 
  7312  0899                     	;# 
  7313  089A                     	;# 
  7314  089B                     	;# 
  7315  090C                     	;# 
  7316  090E                     	;# 
  7317  090F                     	;# 
  7318  091F                     	;# 
  7319  098F                     	;# 
  7320  098F                     	;# 
  7321  0990                     	;# 
  7322  0991                     	;# 
  7323  0992                     	;# 
  7324  0993                     	;# 
  7325  0994                     	;# 
  7326  0995                     	;# 
  7327  0996                     	;# 
  7328  0997                     	;# 
  7329  1E0F                     	;# 
  7330  1E10                     	;# 
  7331  1E11                     	;# 
  7332  1E12                     	;# 
  7333  1E13                     	;# 
  7334  1E14                     	;# 
  7335  1E15                     	;# 
  7336  1E16                     	;# 
  7337  1E17                     	;# 
  7338  1E18                     	;# 
  7339  1E19                     	;# 
  7340  1E1A                     	;# 
  7341  1E1B                     	;# 
  7342  1E1C                     	;# 
  7343  1E1D                     	;# 
  7344  1E1E                     	;# 
  7345  1E1F                     	;# 
  7346  1E20                     	;# 
  7347  1E21                     	;# 
  7348  1E22                     	;# 
  7349  1E23                     	;# 
  7350  1E24                     	;# 
  7351  1E25                     	;# 
  7352  1E26                     	;# 
  7353  1E27                     	;# 
  7354  1E28                     	;# 
  7355  1E29                     	;# 
  7356  1E2A                     	;# 
  7357  1E2B                     	;# 
  7358  1E2C                     	;# 
  7359  1E2D                     	;# 
  7360  1E2E                     	;# 
  7361  1E2F                     	;# 
  7362  1E30                     	;# 
  7363  1E31                     	;# 
  7364  1E32                     	;# 
  7365  1E33                     	;# 
  7366  1E34                     	;# 
  7367  1E35                     	;# 
  7368  1E36                     	;# 
  7369  1E37                     	;# 
  7370  1E8F                     	;# 
  7371  1E90                     	;# 
  7372  1E91                     	;# 
  7373  1E92                     	;# 
  7374  1E93                     	;# 
  7375  1E94                     	;# 
  7376  1E95                     	;# 
  7377  1E96                     	;# 
  7378  1E97                     	;# 
  7379  1E9C                     	;# 
  7380  1E9D                     	;# 
  7381  1E9E                     	;# 
  7382  1EA1                     	;# 
  7383  1EA2                     	;# 
  7384  1EA3                     	;# 
  7385  1EA4                     	;# 
  7386  1EA9                     	;# 
  7387  1EAA                     	;# 
  7388  1EB1                     	;# 
  7389  1EB2                     	;# 
  7390  1EB8                     	;# 
  7391  1EB9                     	;# 
  7392  1EBA                     	;# 
  7393  1EBB                     	;# 
  7394  1EBC                     	;# 
  7395  1EBD                     	;# 
  7396  1EBE                     	;# 
  7397  1EC3                     	;# 
  7398  1EC5                     	;# 
  7399  1EC6                     	;# 
  7400  1EC7                     	;# 
  7401  1EC8                     	;# 
  7402  1EC9                     	;# 
  7403  1ECA                     	;# 
  7404  1ECB                     	;# 
  7405  1ECB                     	;# 
  7406  1ECB                     	;# 
  7407  1ECC                     	;# 
  7408  1ECC                     	;# 
  7409  1ECC                     	;# 
  7410  1F10                     	;# 
  7411  1F11                     	;# 
  7412  1F12                     	;# 
  7413  1F14                     	;# 
  7414  1F15                     	;# 
  7415  1F1C                     	;# 
  7416  1F1D                     	;# 
  7417  1F1E                     	;# 
  7418  1F1F                     	;# 
  7419  1F20                     	;# 
  7420  1F21                     	;# 
  7421  1F22                     	;# 
  7422  1F23                     	;# 
  7423  1F24                     	;# 
  7424  1F25                     	;# 
  7425  1F26                     	;# 
  7426  1F27                     	;# 
  7427  1F38                     	;# 
  7428  1F39                     	;# 
  7429  1F3A                     	;# 
  7430  1F3B                     	;# 
  7431  1F3C                     	;# 
  7432  1F3D                     	;# 
  7433  1F3E                     	;# 
  7434  1F3F                     	;# 
  7435  1F43                     	;# 
  7436  1F44                     	;# 
  7437  1F45                     	;# 
  7438  1F46                     	;# 
  7439  1F47                     	;# 
  7440  1F48                     	;# 
  7441  1F49                     	;# 
  7442  1F4A                     	;# 
  7443  1F4E                     	;# 
  7444  1F4F                     	;# 
  7445  1F50                     	;# 
  7446  1F51                     	;# 
  7447  1F52                     	;# 
  7448  1F53                     	;# 
  7449  1F54                     	;# 
  7450  1F55                     	;# 
  7451  1FE4                     	;# 
  7452  1FE5                     	;# 
  7453  1FE6                     	;# 
  7454  1FE7                     	;# 
  7455  1FE8                     	;# 
  7456  1FE8                     	;# 
  7457  1FE9                     	;# 
  7458  1FEA                     	;# 
  7459  1FEB                     	;# 
  7460  1FED                     	;# 
  7461  1FEE                     	;# 
  7462  1FEF                     	;# 
  7463  0000                     	;# 
  7464  0001                     	;# 
  7465  0002                     	;# 
  7466  0003                     	;# 
  7467  0004                     	;# 
  7468  0005                     	;# 
  7469  0006                     	;# 
  7470  0007                     	;# 
  7471  0008                     	;# 
  7472  0009                     	;# 
  7473  000A                     	;# 
  7474  000B                     	;# 
  7475  000C                     	;# 
  7476  000D                     	;# 
  7477  000E                     	;# 
  7478  0012                     	;# 
  7479  0013                     	;# 
  7480  0014                     	;# 
  7481  0018                     	;# 
  7482  0019                     	;# 
  7483  001A                     	;# 
  7484  008C                     	;# 
  7485  008C                     	;# 
  7486  008D                     	;# 
  7487  008E                     	;# 
  7488  008E                     	;# 
  7489  008F                     	;# 
  7490  0090                     	;# 
  7491  0090                     	;# 
  7492  0091                     	;# 
  7493  0092                     	;# 
  7494  0092                     	;# 
  7495  0093                     	;# 
  7496  0094                     	;# 
  7497  0094                     	;# 
  7498  0095                     	;# 
  7499  0096                     	;# 
  7500  0096                     	;# 
  7501  0097                     	;# 
  7502  0098                     	;# 
  7503  0099                     	;# 
  7504  009A                     	;# 
  7505  009B                     	;# 
  7506  009B                     	;# 
  7507  009C                     	;# 
  7508  009D                     	;# 
  7509  009D                     	;# 
  7510  009E                     	;# 
  7511  009F                     	;# 
  7512  010C                     	;# 
  7513  010C                     	;# 
  7514  010D                     	;# 
  7515  010E                     	;# 
  7516  010F                     	;# 
  7517  010F                     	;# 
  7518  0110                     	;# 
  7519  0111                     	;# 
  7520  0112                     	;# 
  7521  0113                     	;# 
  7522  0114                     	;# 
  7523  0115                     	;# 
  7524  0116                     	;# 
  7525  0117                     	;# 
  7526  0118                     	;# 
  7527  0119                     	;# 
  7528  0119                     	;# 
  7529  0119                     	;# 
  7530  011A                     	;# 
  7531  011A                     	;# 
  7532  011A                     	;# 
  7533  011B                     	;# 
  7534  011B                     	;# 
  7535  011B                     	;# 
  7536  011B                     	;# 
  7537  011B                     	;# 
  7538  011C                     	;# 
  7539  011C                     	;# 
  7540  011C                     	;# 
  7541  011D                     	;# 
  7542  011D                     	;# 
  7543  011D                     	;# 
  7544  011E                     	;# 
  7545  011E                     	;# 
  7546  011E                     	;# 
  7547  011F                     	;# 
  7548  011F                     	;# 
  7549  011F                     	;# 
  7550  011F                     	;# 
  7551  011F                     	;# 
  7552  018C                     	;# 
  7553  018D                     	;# 
  7554  018E                     	;# 
  7555  018F                     	;# 
  7556  0190                     	;# 
  7557  0191                     	;# 
  7558  0192                     	;# 
  7559  0196                     	;# 
  7560  0197                     	;# 
  7561  0198                     	;# 
  7562  0199                     	;# 
  7563  019A                     	;# 
  7564  019B                     	;# 
  7565  019C                     	;# 
  7566  020C                     	;# 
  7567  020D                     	;# 
  7568  020E                     	;# 
  7569  020E                     	;# 
  7570  020F                     	;# 
  7571  020F                     	;# 
  7572  0210                     	;# 
  7573  0210                     	;# 
  7574  0211                     	;# 
  7575  0211                     	;# 
  7576  0212                     	;# 
  7577  0213                     	;# 
  7578  0214                     	;# 
  7579  0214                     	;# 
  7580  0215                     	;# 
  7581  0215                     	;# 
  7582  0216                     	;# 
  7583  0216                     	;# 
  7584  0217                     	;# 
  7585  0217                     	;# 
  7586  0218                     	;# 
  7587  0219                     	;# 
  7588  021A                     	;# 
  7589  021A                     	;# 
  7590  021B                     	;# 
  7591  021B                     	;# 
  7592  021C                     	;# 
  7593  021C                     	;# 
  7594  021D                     	;# 
  7595  021D                     	;# 
  7596  021E                     	;# 
  7597  021F                     	;# 
  7598  028C                     	;# 
  7599  028C                     	;# 
  7600  028D                     	;# 
  7601  028D                     	;# 
  7602  028E                     	;# 
  7603  028F                     	;# 
  7604  0290                     	;# 
  7605  0291                     	;# 
  7606  0292                     	;# 
  7607  0292                     	;# 
  7608  0293                     	;# 
  7609  0293                     	;# 
  7610  0294                     	;# 
  7611  0295                     	;# 
  7612  0296                     	;# 
  7613  0297                     	;# 
  7614  0298                     	;# 
  7615  0298                     	;# 
  7616  0299                     	;# 
  7617  0299                     	;# 
  7618  029A                     	;# 
  7619  029B                     	;# 
  7620  029C                     	;# 
  7621  029D                     	;# 
  7622  029F                     	;# 
  7623  030C                     	;# 
  7624  030C                     	;# 
  7625  030D                     	;# 
  7626  030E                     	;# 
  7627  030F                     	;# 
  7628  0310                     	;# 
  7629  0310                     	;# 
  7630  0311                     	;# 
  7631  0312                     	;# 
  7632  0313                     	;# 
  7633  0314                     	;# 
  7634  0314                     	;# 
  7635  0315                     	;# 
  7636  0316                     	;# 
  7637  0317                     	;# 
  7638  0318                     	;# 
  7639  0318                     	;# 
  7640  0319                     	;# 
  7641  031A                     	;# 
  7642  031B                     	;# 
  7643  038C                     	;# 
  7644  038C                     	;# 
  7645  038D                     	;# 
  7646  038E                     	;# 
  7647  0390                     	;# 
  7648  0390                     	;# 
  7649  0391                     	;# 
  7650  0392                     	;# 
  7651  048C                     	;# 
  7652  048C                     	;# 
  7653  048D                     	;# 
  7654  048E                     	;# 
  7655  048F                     	;# 
  7656  048F                     	;# 
  7657  0490                     	;# 
  7658  0491                     	;# 
  7659  0492                     	;# 
  7660  0492                     	;# 
  7661  0493                     	;# 
  7662  0494                     	;# 
  7663  0495                     	;# 
  7664  0495                     	;# 
  7665  0496                     	;# 
  7666  0497                     	;# 
  7667  0498                     	;# 
  7668  0499                     	;# 
  7669  049A                     	;# 
  7670  049B                     	;# 
  7671  049C                     	;# 
  7672  049D                     	;# 
  7673  058C                     	;# 
  7674  058C                     	;# 
  7675  058D                     	;# 
  7676  058E                     	;# 
  7677  058F                     	;# 
  7678  058F                     	;# 
  7679  0590                     	;# 
  7680  0591                     	;# 
  7681  0592                     	;# 
  7682  0593                     	;# 
  7683  059C                     	;# 
  7684  059C                     	;# 
  7685  059D                     	;# 
  7686  059D                     	;# 
  7687  059E                     	;# 
  7688  059F                     	;# 
  7689  060C                     	;# 
  7690  060C                     	;# 
  7691  060D                     	;# 
  7692  060D                     	;# 
  7693  060E                     	;# 
  7694  060F                     	;# 
  7695  0610                     	;# 
  7696  0611                     	;# 
  7697  0612                     	;# 
  7698  0613                     	;# 
  7699  0614                     	;# 
  7700  0616                     	;# 
  7701  0616                     	;# 
  7702  0617                     	;# 
  7703  0617                     	;# 
  7704  0618                     	;# 
  7705  0619                     	;# 
  7706  061A                     	;# 
  7707  061B                     	;# 
  7708  061C                     	;# 
  7709  061D                     	;# 
  7710  061E                     	;# 
  7711  070C                     	;# 
  7712  070D                     	;# 
  7713  070E                     	;# 
  7714  070F                     	;# 
  7715  0710                     	;# 
  7716  0711                     	;# 
  7717  0712                     	;# 
  7718  0713                     	;# 
  7719  0714                     	;# 
  7720  0716                     	;# 
  7721  0717                     	;# 
  7722  0718                     	;# 
  7723  0719                     	;# 
  7724  071A                     	;# 
  7725  071B                     	;# 
  7726  071C                     	;# 
  7727  071D                     	;# 
  7728  071E                     	;# 
  7729  0796                     	;# 
  7730  0797                     	;# 
  7731  0798                     	;# 
  7732  0799                     	;# 
  7733  079A                     	;# 
  7734  079B                     	;# 
  7735  079C                     	;# 
  7736  079D                     	;# 
  7737  080C                     	;# 
  7738  080D                     	;# 
  7739  080E                     	;# 
  7740  080F                     	;# 
  7741  0810                     	;# 
  7742  0811                     	;# 
  7743  0812                     	;# 
  7744  0813                     	;# 
  7745  0814                     	;# 
  7746  081A                     	;# 
  7747  081A                     	;# 
  7748  081B                     	;# 
  7749  081C                     	;# 
  7750  081C                     	;# 
  7751  081D                     	;# 
  7752  081E                     	;# 
  7753  081F                     	;# 
  7754  088C                     	;# 
  7755  088D                     	;# 
  7756  088E                     	;# 
  7757  088F                     	;# 
  7758  0890                     	;# 
  7759  0891                     	;# 
  7760  0892                     	;# 
  7761  0893                     	;# 
  7762  0895                     	;# 
  7763  0896                     	;# 
  7764  0897                     	;# 
  7765  0898                     	;# 
  7766  0899                     	;# 
  7767  089A                     	;# 
  7768  089B                     	;# 
  7769  090C                     	;# 
  7770  090E                     	;# 
  7771  090F                     	;# 
  7772  091F                     	;# 
  7773  098F                     	;# 
  7774  098F                     	;# 
  7775  0990                     	;# 
  7776  0991                     	;# 
  7777  0992                     	;# 
  7778  0993                     	;# 
  7779  0994                     	;# 
  7780  0995                     	;# 
  7781  0996                     	;# 
  7782  0997                     	;# 
  7783  1E0F                     	;# 
  7784  1E10                     	;# 
  7785  1E11                     	;# 
  7786  1E12                     	;# 
  7787  1E13                     	;# 
  7788  1E14                     	;# 
  7789  1E15                     	;# 
  7790  1E16                     	;# 
  7791  1E17                     	;# 
  7792  1E18                     	;# 
  7793  1E19                     	;# 
  7794  1E1A                     	;# 
  7795  1E1B                     	;# 
  7796  1E1C                     	;# 
  7797  1E1D                     	;# 
  7798  1E1E                     	;# 
  7799  1E1F                     	;# 
  7800  1E20                     	;# 
  7801  1E21                     	;# 
  7802  1E22                     	;# 
  7803  1E23                     	;# 
  7804  1E24                     	;# 
  7805  1E25                     	;# 
  7806  1E26                     	;# 
  7807  1E27                     	;# 
  7808  1E28                     	;# 
  7809  1E29                     	;# 
  7810  1E2A                     	;# 
  7811  1E2B                     	;# 
  7812  1E2C                     	;# 
  7813  1E2D                     	;# 
  7814  1E2E                     	;# 
  7815  1E2F                     	;# 
  7816  1E30                     	;# 
  7817  1E31                     	;# 
  7818  1E32                     	;# 
  7819  1E33                     	;# 
  7820  1E34                     	;# 
  7821  1E35                     	;# 
  7822  1E36                     	;# 
  7823  1E37                     	;# 
  7824  1E8F                     	;# 
  7825  1E90                     	;# 
  7826  1E91                     	;# 
  7827  1E92                     	;# 
  7828  1E93                     	;# 
  7829  1E94                     	;# 
  7830  1E95                     	;# 
  7831  1E96                     	;# 
  7832  1E97                     	;# 
  7833  1E9C                     	;# 
  7834  1E9D                     	;# 
  7835  1E9E                     	;# 
  7836  1EA1                     	;# 
  7837  1EA2                     	;# 
  7838  1EA3                     	;# 
  7839  1EA4                     	;# 
  7840  1EA9                     	;# 
  7841  1EAA                     	;# 
  7842  1EB1                     	;# 
  7843  1EB2                     	;# 
  7844  1EB8                     	;# 
  7845  1EB9                     	;# 
  7846  1EBA                     	;# 
  7847  1EBB                     	;# 
  7848  1EBC                     	;# 
  7849  1EBD                     	;# 
  7850  1EBE                     	;# 
  7851  1EC3                     	;# 
  7852  1EC5                     	;# 
  7853  1EC6                     	;# 
  7854  1EC7                     	;# 
  7855  1EC8                     	;# 
  7856  1EC9                     	;# 
  7857  1ECA                     	;# 
  7858  1ECB                     	;# 
  7859  1ECB                     	;# 
  7860  1ECB                     	;# 
  7861  1ECC                     	;# 
  7862  1ECC                     	;# 
  7863  1ECC                     	;# 
  7864  1F10                     	;# 
  7865  1F11                     	;# 
  7866  1F12                     	;# 
  7867  1F14                     	;# 
  7868  1F15                     	;# 
  7869  1F1C                     	;# 
  7870  1F1D                     	;# 
  7871  1F1E                     	;# 
  7872  1F1F                     	;# 
  7873  1F20                     	;# 
  7874  1F21                     	;# 
  7875  1F22                     	;# 
  7876  1F23                     	;# 
  7877  1F24                     	;# 
  7878  1F25                     	;# 
  7879  1F26                     	;# 
  7880  1F27                     	;# 
  7881  1F38                     	;# 
  7882  1F39                     	;# 
  7883  1F3A                     	;# 
  7884  1F3B                     	;# 
  7885  1F3C                     	;# 
  7886  1F3D                     	;# 
  7887  1F3E                     	;# 
  7888  1F3F                     	;# 
  7889  1F43                     	;# 
  7890  1F44                     	;# 
  7891  1F45                     	;# 
  7892  1F46                     	;# 
  7893  1F47                     	;# 
  7894  1F48                     	;# 
  7895  1F49                     	;# 
  7896  1F4A                     	;# 
  7897  1F4E                     	;# 
  7898  1F4F                     	;# 
  7899  1F50                     	;# 
  7900  1F51                     	;# 
  7901  1F52                     	;# 
  7902  1F53                     	;# 
  7903  1F54                     	;# 
  7904  1F55                     	;# 
  7905  1FE4                     	;# 
  7906  1FE5                     	;# 
  7907  1FE6                     	;# 
  7908  1FE7                     	;# 
  7909  1FE8                     	;# 
  7910  1FE8                     	;# 
  7911  1FE9                     	;# 
  7912  1FEA                     	;# 
  7913  1FEB                     	;# 
  7914  1FED                     	;# 
  7915  1FEE                     	;# 
  7916  1FEF                     	;# 
  7917  0000                     	;# 
  7918  0001                     	;# 
  7919  0002                     	;# 
  7920  0003                     	;# 
  7921  0004                     	;# 
  7922  0005                     	;# 
  7923  0006                     	;# 
  7924  0007                     	;# 
  7925  0008                     	;# 
  7926  0009                     	;# 
  7927  000A                     	;# 
  7928  000B                     	;# 
  7929  000C                     	;# 
  7930  000D                     	;# 
  7931  000E                     	;# 
  7932  0012                     	;# 
  7933  0013                     	;# 
  7934  0014                     	;# 
  7935  0018                     	;# 
  7936  0019                     	;# 
  7937  001A                     	;# 
  7938  008C                     	;# 
  7939  008C                     	;# 
  7940  008D                     	;# 
  7941  008E                     	;# 
  7942  008E                     	;# 
  7943  008F                     	;# 
  7944  0090                     	;# 
  7945  0090                     	;# 
  7946  0091                     	;# 
  7947  0092                     	;# 
  7948  0092                     	;# 
  7949  0093                     	;# 
  7950  0094                     	;# 
  7951  0094                     	;# 
  7952  0095                     	;# 
  7953  0096                     	;# 
  7954  0096                     	;# 
  7955  0097                     	;# 
  7956  0098                     	;# 
  7957  0099                     	;# 
  7958  009A                     	;# 
  7959  009B                     	;# 
  7960  009B                     	;# 
  7961  009C                     	;# 
  7962  009D                     	;# 
  7963  009D                     	;# 
  7964  009E                     	;# 
  7965  009F                     	;# 
  7966  010C                     	;# 
  7967  010C                     	;# 
  7968  010D                     	;# 
  7969  010E                     	;# 
  7970  010F                     	;# 
  7971  010F                     	;# 
  7972  0110                     	;# 
  7973  0111                     	;# 
  7974  0112                     	;# 
  7975  0113                     	;# 
  7976  0114                     	;# 
  7977  0115                     	;# 
  7978  0116                     	;# 
  7979  0117                     	;# 
  7980  0118                     	;# 
  7981  0119                     	;# 
  7982  0119                     	;# 
  7983  0119                     	;# 
  7984  011A                     	;# 
  7985  011A                     	;# 
  7986  011A                     	;# 
  7987  011B                     	;# 
  7988  011B                     	;# 
  7989  011B                     	;# 
  7990  011B                     	;# 
  7991  011B                     	;# 
  7992  011C                     	;# 
  7993  011C                     	;# 
  7994  011C                     	;# 
  7995  011D                     	;# 
  7996  011D                     	;# 
  7997  011D                     	;# 
  7998  011E                     	;# 
  7999  011E                     	;# 
  8000  011E                     	;# 
  8001  011F                     	;# 
  8002  011F                     	;# 
  8003  011F                     	;# 
  8004  011F                     	;# 
  8005  011F                     	;# 
  8006  018C                     	;# 
  8007  018D                     	;# 
  8008  018E                     	;# 
  8009  018F                     	;# 
  8010  0190                     	;# 
  8011  0191                     	;# 
  8012  0192                     	;# 
  8013  0196                     	;# 
  8014  0197                     	;# 
  8015  0198                     	;# 
  8016  0199                     	;# 
  8017  019A                     	;# 
  8018  019B                     	;# 
  8019  019C                     	;# 
  8020  020C                     	;# 
  8021  020D                     	;# 
  8022  020E                     	;# 
  8023  020E                     	;# 
  8024  020F                     	;# 
  8025  020F                     	;# 
  8026  0210                     	;# 
  8027  0210                     	;# 
  8028  0211                     	;# 
  8029  0211                     	;# 
  8030  0212                     	;# 
  8031  0213                     	;# 
  8032  0214                     	;# 
  8033  0214                     	;# 
  8034  0215                     	;# 
  8035  0215                     	;# 
  8036  0216                     	;# 
  8037  0216                     	;# 
  8038  0217                     	;# 
  8039  0217                     	;# 
  8040  0218                     	;# 
  8041  0219                     	;# 
  8042  021A                     	;# 
  8043  021A                     	;# 
  8044  021B                     	;# 
  8045  021B                     	;# 
  8046  021C                     	;# 
  8047  021C                     	;# 
  8048  021D                     	;# 
  8049  021D                     	;# 
  8050  021E                     	;# 
  8051  021F                     	;# 
  8052  028C                     	;# 
  8053  028C                     	;# 
  8054  028D                     	;# 
  8055  028D                     	;# 
  8056  028E                     	;# 
  8057  028F                     	;# 
  8058  0290                     	;# 
  8059  0291                     	;# 
  8060  0292                     	;# 
  8061  0292                     	;# 
  8062  0293                     	;# 
  8063  0293                     	;# 
  8064  0294                     	;# 
  8065  0295                     	;# 
  8066  0296                     	;# 
  8067  0297                     	;# 
  8068  0298                     	;# 
  8069  0298                     	;# 
  8070  0299                     	;# 
  8071  0299                     	;# 
  8072  029A                     	;# 
  8073  029B                     	;# 
  8074  029C                     	;# 
  8075  029D                     	;# 
  8076  029F                     	;# 
  8077  030C                     	;# 
  8078  030C                     	;# 
  8079  030D                     	;# 
  8080  030E                     	;# 
  8081  030F                     	;# 
  8082  0310                     	;# 
  8083  0310                     	;# 
  8084  0311                     	;# 
  8085  0312                     	;# 
  8086  0313                     	;# 
  8087  0314                     	;# 
  8088  0314                     	;# 
  8089  0315                     	;# 
  8090  0316                     	;# 
  8091  0317                     	;# 
  8092  0318                     	;# 
  8093  0318                     	;# 
  8094  0319                     	;# 
  8095  031A                     	;# 
  8096  031B                     	;# 
  8097  038C                     	;# 
  8098  038C                     	;# 
  8099  038D                     	;# 
  8100  038E                     	;# 
  8101  0390                     	;# 
  8102  0390                     	;# 
  8103  0391                     	;# 
  8104  0392                     	;# 
  8105  048C                     	;# 
  8106  048C                     	;# 
  8107  048D                     	;# 
  8108  048E                     	;# 
  8109  048F                     	;# 
  8110  048F                     	;# 
  8111  0490                     	;# 
  8112  0491                     	;# 
  8113  0492                     	;# 
  8114  0492                     	;# 
  8115  0493                     	;# 
  8116  0494                     	;# 
  8117  0495                     	;# 
  8118  0495                     	;# 
  8119  0496                     	;# 
  8120  0497                     	;# 
  8121  0498                     	;# 
  8122  0499                     	;# 
  8123  049A                     	;# 
  8124  049B                     	;# 
  8125  049C                     	;# 
  8126  049D                     	;# 
  8127  058C                     	;# 
  8128  058C                     	;# 
  8129  058D                     	;# 
  8130  058E                     	;# 
  8131  058F                     	;# 
  8132  058F                     	;# 
  8133  0590                     	;# 
  8134  0591                     	;# 
  8135  0592                     	;# 
  8136  0593                     	;# 
  8137  059C                     	;# 
  8138  059C                     	;# 
  8139  059D                     	;# 
  8140  059D                     	;# 
  8141  059E                     	;# 
  8142  059F                     	;# 
  8143  060C                     	;# 
  8144  060C                     	;# 
  8145  060D                     	;# 
  8146  060D                     	;# 
  8147  060E                     	;# 
  8148  060F                     	;# 
  8149  0610                     	;# 
  8150  0611                     	;# 
  8151  0612                     	;# 
  8152  0613                     	;# 
  8153  0614                     	;# 
  8154  0616                     	;# 
  8155  0616                     	;# 
  8156  0617                     	;# 
  8157  0617                     	;# 
  8158  0618                     	;# 
  8159  0619                     	;# 
  8160  061A                     	;# 
  8161  061B                     	;# 
  8162  061C                     	;# 
  8163  061D                     	;# 
  8164  061E                     	;# 
  8165  070C                     	;# 
  8166  070D                     	;# 
  8167  070E                     	;# 
  8168  070F                     	;# 
  8169  0710                     	;# 
  8170  0711                     	;# 
  8171  0712                     	;# 
  8172  0713                     	;# 
  8173  0714                     	;# 
  8174  0716                     	;# 
  8175  0717                     	;# 
  8176  0718                     	;# 
  8177  0719                     	;# 
  8178  071A                     	;# 
  8179  071B                     	;# 
  8180  071C                     	;# 
  8181  071D                     	;# 
  8182  071E                     	;# 
  8183  0796                     	;# 
  8184  0797                     	;# 
  8185  0798                     	;# 
  8186  0799                     	;# 
  8187  079A                     	;# 
  8188  079B                     	;# 
  8189  079C                     	;# 
  8190  079D                     	;# 
  8191  080C                     	;# 
  8192  080D                     	;# 
  8193  080E                     	;# 
  8194  080F                     	;# 
  8195  0810                     	;# 
  8196  0811                     	;# 
  8197  0812                     	;# 
  8198  0813                     	;# 
  8199  0814                     	;# 
  8200  081A                     	;# 
  8201  081A                     	;# 
  8202  081B                     	;# 
  8203  081C                     	;# 
  8204  081C                     	;# 
  8205  081D                     	;# 
  8206  081E                     	;# 
  8207  081F                     	;# 
  8208  088C                     	;# 
  8209  088D                     	;# 
  8210  088E                     	;# 
  8211  088F                     	;# 
  8212  0890                     	;# 
  8213  0891                     	;# 
  8214  0892                     	;# 
  8215  0893                     	;# 
  8216  0895                     	;# 
  8217  0896                     	;# 
  8218  0897                     	;# 
  8219  0898                     	;# 
  8220  0899                     	;# 
  8221  089A                     	;# 
  8222  089B                     	;# 
  8223  090C                     	;# 
  8224  090E                     	;# 
  8225  090F                     	;# 
  8226  091F                     	;# 
  8227  098F                     	;# 
  8228  098F                     	;# 
  8229  0990                     	;# 
  8230  0991                     	;# 
  8231  0992                     	;# 
  8232  0993                     	;# 
  8233  0994                     	;# 
  8234  0995                     	;# 
  8235  0996                     	;# 
  8236  0997                     	;# 
  8237  1E0F                     	;# 
  8238  1E10                     	;# 
  8239  1E11                     	;# 
  8240  1E12                     	;# 
  8241  1E13                     	;# 
  8242  1E14                     	;# 
  8243  1E15                     	;# 
  8244  1E16                     	;# 
  8245  1E17                     	;# 
  8246  1E18                     	;# 
  8247  1E19                     	;# 
  8248  1E1A                     	;# 
  8249  1E1B                     	;# 
  8250  1E1C                     	;# 
  8251  1E1D                     	;# 
  8252  1E1E                     	;# 
  8253  1E1F                     	;# 
  8254  1E20                     	;# 
  8255  1E21                     	;# 
  8256  1E22                     	;# 
  8257  1E23                     	;# 
  8258  1E24                     	;# 
  8259  1E25                     	;# 
  8260  1E26                     	;# 
  8261  1E27                     	;# 
  8262  1E28                     	;# 
  8263  1E29                     	;# 
  8264  1E2A                     	;# 
  8265  1E2B                     	;# 
  8266  1E2C                     	;# 
  8267  1E2D                     	;# 
  8268  1E2E                     	;# 
  8269  1E2F                     	;# 
  8270  1E30                     	;# 
  8271  1E31                     	;# 
  8272  1E32                     	;# 
  8273  1E33                     	;# 
  8274  1E34                     	;# 
  8275  1E35                     	;# 
  8276  1E36                     	;# 
  8277  1E37                     	;# 
  8278  1E8F                     	;# 
  8279  1E90                     	;# 
  8280  1E91                     	;# 
  8281  1E92                     	;# 
  8282  1E93                     	;# 
  8283  1E94                     	;# 
  8284  1E95                     	;# 
  8285  1E96                     	;# 
  8286  1E97                     	;# 
  8287  1E9C                     	;# 
  8288  1E9D                     	;# 
  8289  1E9E                     	;# 
  8290  1EA1                     	;# 
  8291  1EA2                     	;# 
  8292  1EA3                     	;# 
  8293  1EA4                     	;# 
  8294  1EA9                     	;# 
  8295  1EAA                     	;# 
  8296  1EB1                     	;# 
  8297  1EB2                     	;# 
  8298  1EB8                     	;# 
  8299  1EB9                     	;# 
  8300  1EBA                     	;# 
  8301  1EBB                     	;# 
  8302  1EBC                     	;# 
  8303  1EBD                     	;# 
  8304  1EBE                     	;# 
  8305  1EC3                     	;# 
  8306  1EC5                     	;# 
  8307  1EC6                     	;# 
  8308  1EC7                     	;# 
  8309  1EC8                     	;# 
  8310  1EC9                     	;# 
  8311  1ECA                     	;# 
  8312  1ECB                     	;# 
  8313  1ECB                     	;# 
  8314  1ECB                     	;# 
  8315  1ECC                     	;# 
  8316  1ECC                     	;# 
  8317  1ECC                     	;# 
  8318  1F10                     	;# 
  8319  1F11                     	;# 
  8320  1F12                     	;# 
  8321  1F14                     	;# 
  8322  1F15                     	;# 
  8323  1F1C                     	;# 
  8324  1F1D                     	;# 
  8325  1F1E                     	;# 
  8326  1F1F                     	;# 
  8327  1F20                     	;# 
  8328  1F21                     	;# 
  8329  1F22                     	;# 
  8330  1F23                     	;# 
  8331  1F24                     	;# 
  8332  1F25                     	;# 
  8333  1F26                     	;# 
  8334  1F27                     	;# 
  8335  1F38                     	;# 
  8336  1F39                     	;# 
  8337  1F3A                     	;# 
  8338  1F3B                     	;# 
  8339  1F3C                     	;# 
  8340  1F3D                     	;# 
  8341  1F3E                     	;# 
  8342  1F3F                     	;# 
  8343  1F43                     	;# 
  8344  1F44                     	;# 
  8345  1F45                     	;# 
  8346  1F46                     	;# 
  8347  1F47                     	;# 
  8348  1F48                     	;# 
  8349  1F49                     	;# 
  8350  1F4A                     	;# 
  8351  1F4E                     	;# 
  8352  1F4F                     	;# 
  8353  1F50                     	;# 
  8354  1F51                     	;# 
  8355  1F52                     	;# 
  8356  1F53                     	;# 
  8357  1F54                     	;# 
  8358  1F55                     	;# 
  8359  1FE4                     	;# 
  8360  1FE5                     	;# 
  8361  1FE6                     	;# 
  8362  1FE7                     	;# 
  8363  1FE8                     	;# 
  8364  1FE8                     	;# 
  8365  1FE9                     	;# 
  8366  1FEA                     	;# 
  8367  1FEB                     	;# 
  8368  1FED                     	;# 
  8369  1FEE                     	;# 
  8370  1FEF                     	;# 
  8371  0000                     	;# 
  8372  0001                     	;# 
  8373  0002                     	;# 
  8374  0003                     	;# 
  8375  0004                     	;# 
  8376  0005                     	;# 
  8377  0006                     	;# 
  8378  0007                     	;# 
  8379  0008                     	;# 
  8380  0009                     	;# 
  8381  000A                     	;# 
  8382  000B                     	;# 
  8383  000C                     	;# 
  8384  000D                     	;# 
  8385  000E                     	;# 
  8386  0012                     	;# 
  8387  0013                     	;# 
  8388  0014                     	;# 
  8389  0018                     	;# 
  8390  0019                     	;# 
  8391  001A                     	;# 
  8392  008C                     	;# 
  8393  008C                     	;# 
  8394  008D                     	;# 
  8395  008E                     	;# 
  8396  008E                     	;# 
  8397  008F                     	;# 
  8398  0090                     	;# 
  8399  0090                     	;# 
  8400  0091                     	;# 
  8401  0092                     	;# 
  8402  0092                     	;# 
  8403  0093                     	;# 
  8404  0094                     	;# 
  8405  0094                     	;# 
  8406  0095                     	;# 
  8407  0096                     	;# 
  8408  0096                     	;# 
  8409  0097                     	;# 
  8410  0098                     	;# 
  8411  0099                     	;# 
  8412  009A                     	;# 
  8413  009B                     	;# 
  8414  009B                     	;# 
  8415  009C                     	;# 
  8416  009D                     	;# 
  8417  009D                     	;# 
  8418  009E                     	;# 
  8419  009F                     	;# 
  8420  010C                     	;# 
  8421  010C                     	;# 
  8422  010D                     	;# 
  8423  010E                     	;# 
  8424  010F                     	;# 
  8425  010F                     	;# 
  8426  0110                     	;# 
  8427  0111                     	;# 
  8428  0112                     	;# 
  8429  0113                     	;# 
  8430  0114                     	;# 
  8431  0115                     	;# 
  8432  0116                     	;# 
  8433  0117                     	;# 
  8434  0118                     	;# 
  8435  0119                     	;# 
  8436  0119                     	;# 
  8437  0119                     	;# 
  8438  011A                     	;# 
  8439  011A                     	;# 
  8440  011A                     	;# 
  8441  011B                     	;# 
  8442  011B                     	;# 
  8443  011B                     	;# 
  8444  011B                     	;# 
  8445  011B                     	;# 
  8446  011C                     	;# 
  8447  011C                     	;# 
  8448  011C                     	;# 
  8449  011D                     	;# 
  8450  011D                     	;# 
  8451  011D                     	;# 
  8452  011E                     	;# 
  8453  011E                     	;# 
  8454  011E                     	;# 
  8455  011F                     	;# 
  8456  011F                     	;# 
  8457  011F                     	;# 
  8458  011F                     	;# 
  8459  011F                     	;# 
  8460  018C                     	;# 
  8461  018D                     	;# 
  8462  018E                     	;# 
  8463  018F                     	;# 
  8464  0190                     	;# 
  8465  0191                     	;# 
  8466  0192                     	;# 
  8467  0196                     	;# 
  8468  0197                     	;# 
  8469  0198                     	;# 
  8470  0199                     	;# 
  8471  019A                     	;# 
  8472  019B                     	;# 
  8473  019C                     	;# 
  8474  020C                     	;# 
  8475  020D                     	;# 
  8476  020E                     	;# 
  8477  020E                     	;# 
  8478  020F                     	;# 
  8479  020F                     	;# 
  8480  0210                     	;# 
  8481  0210                     	;# 
  8482  0211                     	;# 
  8483  0211                     	;# 
  8484  0212                     	;# 
  8485  0213                     	;# 
  8486  0214                     	;# 
  8487  0214                     	;# 
  8488  0215                     	;# 
  8489  0215                     	;# 
  8490  0216                     	;# 
  8491  0216                     	;# 
  8492  0217                     	;# 
  8493  0217                     	;# 
  8494  0218                     	;# 
  8495  0219                     	;# 
  8496  021A                     	;# 
  8497  021A                     	;# 
  8498  021B                     	;# 
  8499  021B                     	;# 
  8500  021C                     	;# 
  8501  021C                     	;# 
  8502  021D                     	;# 
  8503  021D                     	;# 
  8504  021E                     	;# 
  8505  021F                     	;# 
  8506  028C                     	;# 
  8507  028C                     	;# 
  8508  028D                     	;# 
  8509  028D                     	;# 
  8510  028E                     	;# 
  8511  028F                     	;# 
  8512  0290                     	;# 
  8513  0291                     	;# 
  8514  0292                     	;# 
  8515  0292                     	;# 
  8516  0293                     	;# 
  8517  0293                     	;# 
  8518  0294                     	;# 
  8519  0295                     	;# 
  8520  0296                     	;# 
  8521  0297                     	;# 
  8522  0298                     	;# 
  8523  0298                     	;# 
  8524  0299                     	;# 
  8525  0299                     	;# 
  8526  029A                     	;# 
  8527  029B                     	;# 
  8528  029C                     	;# 
  8529  029D                     	;# 
  8530  029F                     	;# 
  8531  030C                     	;# 
  8532  030C                     	;# 
  8533  030D                     	;# 
  8534  030E                     	;# 
  8535  030F                     	;# 
  8536  0310                     	;# 
  8537  0310                     	;# 
  8538  0311                     	;# 
  8539  0312                     	;# 
  8540  0313                     	;# 
  8541  0314                     	;# 
  8542  0314                     	;# 
  8543  0315                     	;# 
  8544  0316                     	;# 
  8545  0317                     	;# 
  8546  0318                     	;# 
  8547  0318                     	;# 
  8548  0319                     	;# 
  8549  031A                     	;# 
  8550  031B                     	;# 
  8551  038C                     	;# 
  8552  038C                     	;# 
  8553  038D                     	;# 
  8554  038E                     	;# 
  8555  0390                     	;# 
  8556  0390                     	;# 
  8557  0391                     	;# 
  8558  0392                     	;# 
  8559  048C                     	;# 
  8560  048C                     	;# 
  8561  048D                     	;# 
  8562  048E                     	;# 
  8563  048F                     	;# 
  8564  048F                     	;# 
  8565  0490                     	;# 
  8566  0491                     	;# 
  8567  0492                     	;# 
  8568  0492                     	;# 
  8569  0493                     	;# 
  8570  0494                     	;# 
  8571  0495                     	;# 
  8572  0495                     	;# 
  8573  0496                     	;# 
  8574  0497                     	;# 
  8575  0498                     	;# 
  8576  0499                     	;# 
  8577  049A                     	;# 
  8578  049B                     	;# 
  8579  049C                     	;# 
  8580  049D                     	;# 
  8581  058C                     	;# 
  8582  058C                     	;# 
  8583  058D                     	;# 
  8584  058E                     	;# 
  8585  058F                     	;# 
  8586  058F                     	;# 
  8587  0590                     	;# 
  8588  0591                     	;# 
  8589  0592                     	;# 
  8590  0593                     	;# 
  8591  059C                     	;# 
  8592  059C                     	;# 
  8593  059D                     	;# 
  8594  059D                     	;# 
  8595  059E                     	;# 
  8596  059F                     	;# 
  8597  060C                     	;# 
  8598  060C                     	;# 
  8599  060D                     	;# 
  8600  060D                     	;# 
  8601  060E                     	;# 
  8602  060F                     	;# 
  8603  0610                     	;# 
  8604  0611                     	;# 
  8605  0612                     	;# 
  8606  0613                     	;# 
  8607  0614                     	;# 
  8608  0616                     	;# 
  8609  0616                     	;# 
  8610  0617                     	;# 
  8611  0617                     	;# 
  8612  0618                     	;# 
  8613  0619                     	;# 
  8614  061A                     	;# 
  8615  061B                     	;# 
  8616  061C                     	;# 
  8617  061D                     	;# 
  8618  061E                     	;# 
  8619  070C                     	;# 
  8620  070D                     	;# 
  8621  070E                     	;# 
  8622  070F                     	;# 
  8623  0710                     	;# 
  8624  0711                     	;# 
  8625  0712                     	;# 
  8626  0713                     	;# 
  8627  0714                     	;# 
  8628  0716                     	;# 
  8629  0717                     	;# 
  8630  0718                     	;# 
  8631  0719                     	;# 
  8632  071A                     	;# 
  8633  071B                     	;# 
  8634  071C                     	;# 
  8635  071D                     	;# 
  8636  071E                     	;# 
  8637  0796                     	;# 
  8638  0797                     	;# 
  8639  0798                     	;# 
  8640  0799                     	;# 
  8641  079A                     	;# 
  8642  079B                     	;# 
  8643  079C                     	;# 
  8644  079D                     	;# 
  8645  080C                     	;# 
  8646  080D                     	;# 
  8647  080E                     	;# 
  8648  080F                     	;# 
  8649  0810                     	;# 
  8650  0811                     	;# 
  8651  0812                     	;# 
  8652  0813                     	;# 
  8653  0814                     	;# 
  8654  081A                     	;# 
  8655  081A                     	;# 
  8656  081B                     	;# 
  8657  081C                     	;# 
  8658  081C                     	;# 
  8659  081D                     	;# 
  8660  081E                     	;# 
  8661  081F                     	;# 
  8662  088C                     	;# 
  8663  088D                     	;# 
  8664  088E                     	;# 
  8665  088F                     	;# 
  8666  0890                     	;# 
  8667  0891                     	;# 
  8668  0892                     	;# 
  8669  0893                     	;# 
  8670  0895                     	;# 
  8671  0896                     	;# 
  8672  0897                     	;# 
  8673  0898                     	;# 
  8674  0899                     	;# 
  8675  089A                     	;# 
  8676  089B                     	;# 
  8677  090C                     	;# 
  8678  090E                     	;# 
  8679  090F                     	;# 
  8680  091F                     	;# 
  8681  098F                     	;# 
  8682  098F                     	;# 
  8683  0990                     	;# 
  8684  0991                     	;# 
  8685  0992                     	;# 
  8686  0993                     	;# 
  8687  0994                     	;# 
  8688  0995                     	;# 
  8689  0996                     	;# 
  8690  0997                     	;# 
  8691  1E0F                     	;# 
  8692  1E10                     	;# 
  8693  1E11                     	;# 
  8694  1E12                     	;# 
  8695  1E13                     	;# 
  8696  1E14                     	;# 
  8697  1E15                     	;# 
  8698  1E16                     	;# 
  8699  1E17                     	;# 
  8700  1E18                     	;# 
  8701  1E19                     	;# 
  8702  1E1A                     	;# 
  8703  1E1B                     	;# 
  8704  1E1C                     	;# 
  8705  1E1D                     	;# 
  8706  1E1E                     	;# 
  8707  1E1F                     	;# 
  8708  1E20                     	;# 
  8709  1E21                     	;# 
  8710  1E22                     	;# 
  8711  1E23                     	;# 
  8712  1E24                     	;# 
  8713  1E25                     	;# 
  8714  1E26                     	;# 
  8715  1E27                     	;# 
  8716  1E28                     	;# 
  8717  1E29                     	;# 
  8718  1E2A                     	;# 
  8719  1E2B                     	;# 
  8720  1E2C                     	;# 
  8721  1E2D                     	;# 
  8722  1E2E                     	;# 
  8723  1E2F                     	;# 
  8724  1E30                     	;# 
  8725  1E31                     	;# 
  8726  1E32                     	;# 
  8727  1E33                     	;# 
  8728  1E34                     	;# 
  8729  1E35                     	;# 
  8730  1E36                     	;# 
  8731  1E37                     	;# 
  8732  1E8F                     	;# 
  8733  1E90                     	;# 
  8734  1E91                     	;# 
  8735  1E92                     	;# 
  8736  1E93                     	;# 
  8737  1E94                     	;# 
  8738  1E95                     	;# 
  8739  1E96                     	;# 
  8740  1E97                     	;# 
  8741  1E9C                     	;# 
  8742  1E9D                     	;# 
  8743  1E9E                     	;# 
  8744  1EA1                     	;# 
  8745  1EA2                     	;# 
  8746  1EA3                     	;# 
  8747  1EA4                     	;# 
  8748  1EA9                     	;# 
  8749  1EAA                     	;# 
  8750  1EB1                     	;# 
  8751  1EB2                     	;# 
  8752  1EB8                     	;# 
  8753  1EB9                     	;# 
  8754  1EBA                     	;# 
  8755  1EBB                     	;# 
  8756  1EBC                     	;# 
  8757  1EBD                     	;# 
  8758  1EBE                     	;# 
  8759  1EC3                     	;# 
  8760  1EC5                     	;# 
  8761  1EC6                     	;# 
  8762  1EC7                     	;# 
  8763  1EC8                     	;# 
  8764  1EC9                     	;# 
  8765  1ECA                     	;# 
  8766  1ECB                     	;# 
  8767  1ECB                     	;# 
  8768  1ECB                     	;# 
  8769  1ECC                     	;# 
  8770  1ECC                     	;# 
  8771  1ECC                     	;# 
  8772  1F10                     	;# 
  8773  1F11                     	;# 
  8774  1F12                     	;# 
  8775  1F14                     	;# 
  8776  1F15                     	;# 
  8777  1F1C                     	;# 
  8778  1F1D                     	;# 
  8779  1F1E                     	;# 
  8780  1F1F                     	;# 
  8781  1F20                     	;# 
  8782  1F21                     	;# 
  8783  1F22                     	;# 
  8784  1F23                     	;# 
  8785  1F24                     	;# 
  8786  1F25                     	;# 
  8787  1F26                     	;# 
  8788  1F27                     	;# 
  8789  1F38                     	;# 
  8790  1F39                     	;# 
  8791  1F3A                     	;# 
  8792  1F3B                     	;# 
  8793  1F3C                     	;# 
  8794  1F3D                     	;# 
  8795  1F3E                     	;# 
  8796  1F3F                     	;# 
  8797  1F43                     	;# 
  8798  1F44                     	;# 
  8799  1F45                     	;# 
  8800  1F46                     	;# 
  8801  1F47                     	;# 
  8802  1F48                     	;# 
  8803  1F49                     	;# 
  8804  1F4A                     	;# 
  8805  1F4E                     	;# 
  8806  1F4F                     	;# 
  8807  1F50                     	;# 
  8808  1F51                     	;# 
  8809  1F52                     	;# 
  8810  1F53                     	;# 
  8811  1F54                     	;# 
  8812  1F55                     	;# 
  8813  1FE4                     	;# 
  8814  1FE5                     	;# 
  8815  1FE6                     	;# 
  8816  1FE7                     	;# 
  8817  1FE8                     	;# 
  8818  1FE8                     	;# 
  8819  1FE9                     	;# 
  8820  1FEA                     	;# 
  8821  1FEB                     	;# 
  8822  1FED                     	;# 
  8823  1FEE                     	;# 
  8824  1FEF                     	;# 
  8825  0000                     	;# 
  8826  0001                     	;# 
  8827  0002                     	;# 
  8828  0003                     	;# 
  8829  0004                     	;# 
  8830  0005                     	;# 
  8831  0006                     	;# 
  8832  0007                     	;# 
  8833  0008                     	;# 
  8834  0009                     	;# 
  8835  000A                     	;# 
  8836  000B                     	;# 
  8837  000C                     	;# 
  8838  000D                     	;# 
  8839  000E                     	;# 
  8840  0012                     	;# 
  8841  0013                     	;# 
  8842  0014                     	;# 
  8843  0018                     	;# 
  8844  0019                     	;# 
  8845  001A                     	;# 
  8846  008C                     	;# 
  8847  008C                     	;# 
  8848  008D                     	;# 
  8849  008E                     	;# 
  8850  008E                     	;# 
  8851  008F                     	;# 
  8852  0090                     	;# 
  8853  0090                     	;# 
  8854  0091                     	;# 
  8855  0092                     	;# 
  8856  0092                     	;# 
  8857  0093                     	;# 
  8858  0094                     	;# 
  8859  0094                     	;# 
  8860  0095                     	;# 
  8861  0096                     	;# 
  8862  0096                     	;# 
  8863  0097                     	;# 
  8864  0098                     	;# 
  8865  0099                     	;# 
  8866  009A                     	;# 
  8867  009B                     	;# 
  8868  009B                     	;# 
  8869  009C                     	;# 
  8870  009D                     	;# 
  8871  009D                     	;# 
  8872  009E                     	;# 
  8873  009F                     	;# 
  8874  010C                     	;# 
  8875  010C                     	;# 
  8876  010D                     	;# 
  8877  010E                     	;# 
  8878  010F                     	;# 
  8879  010F                     	;# 
  8880  0110                     	;# 
  8881  0111                     	;# 
  8882  0112                     	;# 
  8883  0113                     	;# 
  8884  0114                     	;# 
  8885  0115                     	;# 
  8886  0116                     	;# 
  8887  0117                     	;# 
  8888  0118                     	;# 
  8889  0119                     	;# 
  8890  0119                     	;# 
  8891  0119                     	;# 
  8892  011A                     	;# 
  8893  011A                     	;# 
  8894  011A                     	;# 
  8895  011B                     	;# 
  8896  011B                     	;# 
  8897  011B                     	;# 
  8898  011B                     	;# 
  8899  011B                     	;# 
  8900  011C                     	;# 
  8901  011C                     	;# 
  8902  011C                     	;# 
  8903  011D                     	;# 
  8904  011D                     	;# 
  8905  011D                     	;# 
  8906  011E                     	;# 
  8907  011E                     	;# 
  8908  011E                     	;# 
  8909  011F                     	;# 
  8910  011F                     	;# 
  8911  011F                     	;# 
  8912  011F                     	;# 
  8913  011F                     	;# 
  8914  018C                     	;# 
  8915  018D                     	;# 
  8916  018E                     	;# 
  8917  018F                     	;# 
  8918  0190                     	;# 
  8919  0191                     	;# 
  8920  0192                     	;# 
  8921  0196                     	;# 
  8922  0197                     	;# 
  8923  0198                     	;# 
  8924  0199                     	;# 
  8925  019A                     	;# 
  8926  019B                     	;# 
  8927  019C                     	;# 
  8928  020C                     	;# 
  8929  020D                     	;# 
  8930  020E                     	;# 
  8931  020E                     	;# 
  8932  020F                     	;# 
  8933  020F                     	;# 
  8934  0210                     	;# 
  8935  0210                     	;# 
  8936  0211                     	;# 
  8937  0211                     	;# 
  8938  0212                     	;# 
  8939  0213                     	;# 
  8940  0214                     	;# 
  8941  0214                     	;# 
  8942  0215                     	;# 
  8943  0215                     	;# 
  8944  0216                     	;# 
  8945  0216                     	;# 
  8946  0217                     	;# 
  8947  0217                     	;# 
  8948  0218                     	;# 
  8949  0219                     	;# 
  8950  021A                     	;# 
  8951  021A                     	;# 
  8952  021B                     	;# 
  8953  021B                     	;# 
  8954  021C                     	;# 
  8955  021C                     	;# 
  8956  021D                     	;# 
  8957  021D                     	;# 
  8958  021E                     	;# 
  8959  021F                     	;# 
  8960  028C                     	;# 
  8961  028C                     	;# 
  8962  028D                     	;# 
  8963  028D                     	;# 
  8964  028E                     	;# 
  8965  028F                     	;# 
  8966  0290                     	;# 
  8967  0291                     	;# 
  8968  0292                     	;# 
  8969  0292                     	;# 
  8970  0293                     	;# 
  8971  0293                     	;# 
  8972  0294                     	;# 
  8973  0295                     	;# 
  8974  0296                     	;# 
  8975  0297                     	;# 
  8976  0298                     	;# 
  8977  0298                     	;# 
  8978  0299                     	;# 
  8979  0299                     	;# 
  8980  029A                     	;# 
  8981  029B                     	;# 
  8982  029C                     	;# 
  8983  029D                     	;# 
  8984  029F                     	;# 
  8985  030C                     	;# 
  8986  030C                     	;# 
  8987  030D                     	;# 
  8988  030E                     	;# 
  8989  030F                     	;# 
  8990  0310                     	;# 
  8991  0310                     	;# 
  8992  0311                     	;# 
  8993  0312                     	;# 
  8994  0313                     	;# 
  8995  0314                     	;# 
  8996  0314                     	;# 
  8997  0315                     	;# 
  8998  0316                     	;# 
  8999  0317                     	;# 
  9000  0318                     	;# 
  9001  0318                     	;# 
  9002  0319                     	;# 
  9003  031A                     	;# 
  9004  031B                     	;# 
  9005  038C                     	;# 
  9006  038C                     	;# 
  9007  038D                     	;# 
  9008  038E                     	;# 
  9009  0390                     	;# 
  9010  0390                     	;# 
  9011  0391                     	;# 
  9012  0392                     	;# 
  9013  048C                     	;# 
  9014  048C                     	;# 
  9015  048D                     	;# 
  9016  048E                     	;# 
  9017  048F                     	;# 
  9018  048F                     	;# 
  9019  0490                     	;# 
  9020  0491                     	;# 
  9021  0492                     	;# 
  9022  0492                     	;# 
  9023  0493                     	;# 
  9024  0494                     	;# 
  9025  0495                     	;# 
  9026  0495                     	;# 
  9027  0496                     	;# 
  9028  0497                     	;# 
  9029  0498                     	;# 
  9030  0499                     	;# 
  9031  049A                     	;# 
  9032  049B                     	;# 
  9033  049C                     	;# 
  9034  049D                     	;# 
  9035  058C                     	;# 
  9036  058C                     	;# 
  9037  058D                     	;# 
  9038  058E                     	;# 
  9039  058F                     	;# 
  9040  058F                     	;# 
  9041  0590                     	;# 
  9042  0591                     	;# 
  9043  0592                     	;# 
  9044  0593                     	;# 
  9045  059C                     	;# 
  9046  059C                     	;# 
  9047  059D                     	;# 
  9048  059D                     	;# 
  9049  059E                     	;# 
  9050  059F                     	;# 
  9051  060C                     	;# 
  9052  060C                     	;# 
  9053  060D                     	;# 
  9054  060D                     	;# 
  9055  060E                     	;# 
  9056  060F                     	;# 
  9057  0610                     	;# 
  9058  0611                     	;# 
  9059  0612                     	;# 
  9060  0613                     	;# 
  9061  0614                     	;# 
  9062  0616                     	;# 
  9063  0616                     	;# 
  9064  0617                     	;# 
  9065  0617                     	;# 
  9066  0618                     	;# 
  9067  0619                     	;# 
  9068  061A                     	;# 
  9069  061B                     	;# 
  9070  061C                     	;# 
  9071  061D                     	;# 
  9072  061E                     	;# 
  9073  070C                     	;# 
  9074  070D                     	;# 
  9075  070E                     	;# 
  9076  070F                     	;# 
  9077  0710                     	;# 
  9078  0711                     	;# 
  9079  0712                     	;# 
  9080  0713                     	;# 
  9081  0714                     	;# 
  9082  0716                     	;# 
  9083  0717                     	;# 
  9084  0718                     	;# 
  9085  0719                     	;# 
  9086  071A                     	;# 
  9087  071B                     	;# 
  9088  071C                     	;# 
  9089  071D                     	;# 
  9090  071E                     	;# 
  9091  0796                     	;# 
  9092  0797                     	;# 
  9093  0798                     	;# 
  9094  0799                     	;# 
  9095  079A                     	;# 
  9096  079B                     	;# 
  9097  079C                     	;# 
  9098  079D                     	;# 
  9099  080C                     	;# 
  9100  080D                     	;# 
  9101  080E                     	;# 
  9102  080F                     	;# 
  9103  0810                     	;# 
  9104  0811                     	;# 
  9105  0812                     	;# 
  9106  0813                     	;# 
  9107  0814                     	;# 
  9108  081A                     	;# 
  9109  081A                     	;# 
  9110  081B                     	;# 
  9111  081C                     	;# 
  9112  081C                     	;# 
  9113  081D                     	;# 
  9114  081E                     	;# 
  9115  081F                     	;# 
  9116  088C                     	;# 
  9117  088D                     	;# 
  9118  088E                     	;# 
  9119  088F                     	;# 
  9120  0890                     	;# 
  9121  0891                     	;# 
  9122  0892                     	;# 
  9123  0893                     	;# 
  9124  0895                     	;# 
  9125  0896                     	;# 
  9126  0897                     	;# 
  9127  0898                     	;# 
  9128  0899                     	;# 
  9129  089A                     	;# 
  9130  089B                     	;# 
  9131  090C                     	;# 
  9132  090E                     	;# 
  9133  090F                     	;# 
  9134  091F                     	;# 
  9135  098F                     	;# 
  9136  098F                     	;# 
  9137  0990                     	;# 
  9138  0991                     	;# 
  9139  0992                     	;# 
  9140  0993                     	;# 
  9141  0994                     	;# 
  9142  0995                     	;# 
  9143  0996                     	;# 
  9144  0997                     	;# 
  9145  1E0F                     	;# 
  9146  1E10                     	;# 
  9147  1E11                     	;# 
  9148  1E12                     	;# 
  9149  1E13                     	;# 
  9150  1E14                     	;# 
  9151  1E15                     	;# 
  9152  1E16                     	;# 
  9153  1E17                     	;# 
  9154  1E18                     	;# 
  9155  1E19                     	;# 
  9156  1E1A                     	;# 
  9157  1E1B                     	;# 
  9158  1E1C                     	;# 
  9159  1E1D                     	;# 
  9160  1E1E                     	;# 
  9161  1E1F                     	;# 
  9162  1E20                     	;# 
  9163  1E21                     	;# 
  9164  1E22                     	;# 
  9165  1E23                     	;# 
  9166  1E24                     	;# 
  9167  1E25                     	;# 
  9168  1E26                     	;# 
  9169  1E27                     	;# 
  9170  1E28                     	;# 
  9171  1E29                     	;# 
  9172  1E2A                     	;# 
  9173  1E2B                     	;# 
  9174  1E2C                     	;# 
  9175  1E2D                     	;# 
  9176  1E2E                     	;# 
  9177  1E2F                     	;# 
  9178  1E30                     	;# 
  9179  1E31                     	;# 
  9180  1E32                     	;# 
  9181  1E33                     	;# 
  9182  1E34                     	;# 
  9183  1E35                     	;# 
  9184  1E36                     	;# 
  9185  1E37                     	;# 
  9186  1E8F                     	;# 
  9187  1E90                     	;# 
  9188  1E91                     	;# 
  9189  1E92                     	;# 
  9190  1E93                     	;# 
  9191  1E94                     	;# 
  9192  1E95                     	;# 
  9193  1E96                     	;# 
  9194  1E97                     	;# 
  9195  1E9C                     	;# 
  9196  1E9D                     	;# 
  9197  1E9E                     	;# 
  9198  1EA1                     	;# 
  9199  1EA2                     	;# 
  9200  1EA3                     	;# 
  9201  1EA4                     	;# 
  9202  1EA9                     	;# 
  9203  1EAA                     	;# 
  9204  1EB1                     	;# 
  9205  1EB2                     	;# 
  9206  1EB8                     	;# 
  9207  1EB9                     	;# 
  9208  1EBA                     	;# 
  9209  1EBB                     	;# 
  9210  1EBC                     	;# 
  9211  1EBD                     	;# 
  9212  1EBE                     	;# 
  9213  1EC3                     	;# 
  9214  1EC5                     	;# 
  9215  1EC6                     	;# 
  9216  1EC7                     	;# 
  9217  1EC8                     	;# 
  9218  1EC9                     	;# 
  9219  1ECA                     	;# 
  9220  1ECB                     	;# 
  9221  1ECB                     	;# 
  9222  1ECB                     	;# 
  9223  1ECC                     	;# 
  9224  1ECC                     	;# 
  9225  1ECC                     	;# 
  9226  1F10                     	;# 
  9227  1F11                     	;# 
  9228  1F12                     	;# 
  9229  1F14                     	;# 
  9230  1F15                     	;# 
  9231  1F1C                     	;# 
  9232  1F1D                     	;# 
  9233  1F1E                     	;# 
  9234  1F1F                     	;# 
  9235  1F20                     	;# 
  9236  1F21                     	;# 
  9237  1F22                     	;# 
  9238  1F23                     	;# 
  9239  1F24                     	;# 
  9240  1F25                     	;# 
  9241  1F26                     	;# 
  9242  1F27                     	;# 
  9243  1F38                     	;# 
  9244  1F39                     	;# 
  9245  1F3A                     	;# 
  9246  1F3B                     	;# 
  9247  1F3C                     	;# 
  9248  1F3D                     	;# 
  9249  1F3E                     	;# 
  9250  1F3F                     	;# 
  9251  1F43                     	;# 
  9252  1F44                     	;# 
  9253  1F45                     	;# 
  9254  1F46                     	;# 
  9255  1F47                     	;# 
  9256  1F48                     	;# 
  9257  1F49                     	;# 
  9258  1F4A                     	;# 
  9259  1F4E                     	;# 
  9260  1F4F                     	;# 
  9261  1F50                     	;# 
  9262  1F51                     	;# 
  9263  1F52                     	;# 
  9264  1F53                     	;# 
  9265  1F54                     	;# 
  9266  1F55                     	;# 
  9267  1FE4                     	;# 
  9268  1FE5                     	;# 
  9269  1FE6                     	;# 
  9270  1FE7                     	;# 
  9271  1FE8                     	;# 
  9272  1FE8                     	;# 
  9273  1FE9                     	;# 
  9274  1FEA                     	;# 
  9275  1FEB                     	;# 
  9276  1FED                     	;# 
  9277  1FEE                     	;# 
  9278  1FEF                     	;# 
  9279  0000                     	;# 
  9280  0001                     	;# 
  9281  0002                     	;# 
  9282  0003                     	;# 
  9283  0004                     	;# 
  9284  0005                     	;# 
  9285  0006                     	;# 
  9286  0007                     	;# 
  9287  0008                     	;# 
  9288  0009                     	;# 
  9289  000A                     	;# 
  9290  000B                     	;# 
  9291  000C                     	;# 
  9292  000D                     	;# 
  9293  000E                     	;# 
  9294  0012                     	;# 
  9295  0013                     	;# 
  9296  0014                     	;# 
  9297  0018                     	;# 
  9298  0019                     	;# 
  9299  001A                     	;# 
  9300  008C                     	;# 
  9301  008C                     	;# 
  9302  008D                     	;# 
  9303  008E                     	;# 
  9304  008E                     	;# 
  9305  008F                     	;# 
  9306  0090                     	;# 
  9307  0090                     	;# 
  9308  0091                     	;# 
  9309  0092                     	;# 
  9310  0092                     	;# 
  9311  0093                     	;# 
  9312  0094                     	;# 
  9313  0094                     	;# 
  9314  0095                     	;# 
  9315  0096                     	;# 
  9316  0096                     	;# 
  9317  0097                     	;# 
  9318  0098                     	;# 
  9319  0099                     	;# 
  9320  009A                     	;# 
  9321  009B                     	;# 
  9322  009B                     	;# 
  9323  009C                     	;# 
  9324  009D                     	;# 
  9325  009D                     	;# 
  9326  009E                     	;# 
  9327  009F                     	;# 
  9328  010C                     	;# 
  9329  010C                     	;# 
  9330  010D                     	;# 
  9331  010E                     	;# 
  9332  010F                     	;# 
  9333  010F                     	;# 
  9334  0110                     	;# 
  9335  0111                     	;# 
  9336  0112                     	;# 
  9337  0113                     	;# 
  9338  0114                     	;# 
  9339  0115                     	;# 
  9340  0116                     	;# 
  9341  0117                     	;# 
  9342  0118                     	;# 
  9343  0119                     	;# 
  9344  0119                     	;# 
  9345  0119                     	;# 
  9346  011A                     	;# 
  9347  011A                     	;# 
  9348  011A                     	;# 
  9349  011B                     	;# 
  9350  011B                     	;# 
  9351  011B                     	;# 
  9352  011B                     	;# 
  9353  011B                     	;# 
  9354  011C                     	;# 
  9355  011C                     	;# 
  9356  011C                     	;# 
  9357  011D                     	;# 
  9358  011D                     	;# 
  9359  011D                     	;# 
  9360  011E                     	;# 
  9361  011E                     	;# 
  9362  011E                     	;# 
  9363  011F                     	;# 
  9364  011F                     	;# 
  9365  011F                     	;# 
  9366  011F                     	;# 
  9367  011F                     	;# 
  9368  018C                     	;# 
  9369  018D                     	;# 
  9370  018E                     	;# 
  9371  018F                     	;# 
  9372  0190                     	;# 
  9373  0191                     	;# 
  9374  0192                     	;# 
  9375  0196                     	;# 
  9376  0197                     	;# 
  9377  0198                     	;# 
  9378  0199                     	;# 
  9379  019A                     	;# 
  9380  019B                     	;# 
  9381  019C                     	;# 
  9382  020C                     	;# 
  9383  020D                     	;# 
  9384  020E                     	;# 
  9385  020E                     	;# 
  9386  020F                     	;# 
  9387  020F                     	;# 
  9388  0210                     	;# 
  9389  0210                     	;# 
  9390  0211                     	;# 
  9391  0211                     	;# 
  9392  0212                     	;# 
  9393  0213                     	;# 
  9394  0214                     	;# 
  9395  0214                     	;# 
  9396  0215                     	;# 
  9397  0215                     	;# 
  9398  0216                     	;# 
  9399  0216                     	;# 
  9400  0217                     	;# 
  9401  0217                     	;# 
  9402  0218                     	;# 
  9403  0219                     	;# 
  9404  021A                     	;# 
  9405  021A                     	;# 
  9406  021B                     	;# 
  9407  021B                     	;# 
  9408  021C                     	;# 
  9409  021C                     	;# 
  9410  021D                     	;# 
  9411  021D                     	;# 
  9412  021E                     	;# 
  9413  021F                     	;# 
  9414  028C                     	;# 
  9415  028C                     	;# 
  9416  028D                     	;# 
  9417  028D                     	;# 
  9418  028E                     	;# 
  9419  028F                     	;# 
  9420  0290                     	;# 
  9421  0291                     	;# 
  9422  0292                     	;# 
  9423  0292                     	;# 
  9424  0293                     	;# 
  9425  0293                     	;# 
  9426  0294                     	;# 
  9427  0295                     	;# 
  9428  0296                     	;# 
  9429  0297                     	;# 
  9430  0298                     	;# 
  9431  0298                     	;# 
  9432  0299                     	;# 
  9433  0299                     	;# 
  9434  029A                     	;# 
  9435  029B                     	;# 
  9436  029C                     	;# 
  9437  029D                     	;# 
  9438  029F                     	;# 
  9439  030C                     	;# 
  9440  030C                     	;# 
  9441  030D                     	;# 
  9442  030E                     	;# 
  9443  030F                     	;# 
  9444  0310                     	;# 
  9445  0310                     	;# 
  9446  0311                     	;# 
  9447  0312                     	;# 
  9448  0313                     	;# 
  9449  0314                     	;# 
  9450  0314                     	;# 
  9451  0315                     	;# 
  9452  0316                     	;# 
  9453  0317                     	;# 
  9454  0318                     	;# 
  9455  0318                     	;# 
  9456  0319                     	;# 
  9457  031A                     	;# 
  9458  031B                     	;# 
  9459  038C                     	;# 
  9460  038C                     	;# 
  9461  038D                     	;# 
  9462  038E                     	;# 
  9463  0390                     	;# 
  9464  0390                     	;# 
  9465  0391                     	;# 
  9466  0392                     	;# 
  9467  048C                     	;# 
  9468  048C                     	;# 
  9469  048D                     	;# 
  9470  048E                     	;# 
  9471  048F                     	;# 
  9472  048F                     	;# 
  9473  0490                     	;# 
  9474  0491                     	;# 
  9475  0492                     	;# 
  9476  0492                     	;# 
  9477  0493                     	;# 
  9478  0494                     	;# 
  9479  0495                     	;# 
  9480  0495                     	;# 
  9481  0496                     	;# 
  9482  0497                     	;# 
  9483  0498                     	;# 
  9484  0499                     	;# 
  9485  049A                     	;# 
  9486  049B                     	;# 
  9487  049C                     	;# 
  9488  049D                     	;# 
  9489  058C                     	;# 
  9490  058C                     	;# 
  9491  058D                     	;# 
  9492  058E                     	;# 
  9493  058F                     	;# 
  9494  058F                     	;# 
  9495  0590                     	;# 
  9496  0591                     	;# 
  9497  0592                     	;# 
  9498  0593                     	;# 
  9499  059C                     	;# 
  9500  059C                     	;# 
  9501  059D                     	;# 
  9502  059D                     	;# 
  9503  059E                     	;# 
  9504  059F                     	;# 
  9505  060C                     	;# 
  9506  060C                     	;# 
  9507  060D                     	;# 
  9508  060D                     	;# 
  9509  060E                     	;# 
  9510  060F                     	;# 
  9511  0610                     	;# 
  9512  0611                     	;# 
  9513  0612                     	;# 
  9514  0613                     	;# 
  9515  0614                     	;# 
  9516  0616                     	;# 
  9517  0616                     	;# 
  9518  0617                     	;# 
  9519  0617                     	;# 
  9520  0618                     	;# 
  9521  0619                     	;# 
  9522  061A                     	;# 
  9523  061B                     	;# 
  9524  061C                     	;# 
  9525  061D                     	;# 
  9526  061E                     	;# 
  9527  070C                     	;# 
  9528  070D                     	;# 
  9529  070E                     	;# 
  9530  070F                     	;# 
  9531  0710                     	;# 
  9532  0711                     	;# 
  9533  0712                     	;# 
  9534  0713                     	;# 
  9535  0714                     	;# 
  9536  0716                     	;# 
  9537  0717                     	;# 
  9538  0718                     	;# 
  9539  0719                     	;# 
  9540  071A                     	;# 
  9541  071B                     	;# 
  9542  071C                     	;# 
  9543  071D                     	;# 
  9544  071E                     	;# 
  9545  0796                     	;# 
  9546  0797                     	;# 
  9547  0798                     	;# 
  9548  0799                     	;# 
  9549  079A                     	;# 
  9550  079B                     	;# 
  9551  079C                     	;# 
  9552  079D                     	;# 
  9553  080C                     	;# 
  9554  080D                     	;# 
  9555  080E                     	;# 
  9556  080F                     	;# 
  9557  0810                     	;# 
  9558  0811                     	;# 
  9559  0812                     	;# 
  9560  0813                     	;# 
  9561  0814                     	;# 
  9562  081A                     	;# 
  9563  081A                     	;# 
  9564  081B                     	;# 
  9565  081C                     	;# 
  9566  081C                     	;# 
  9567  081D                     	;# 
  9568  081E                     	;# 
  9569  081F                     	;# 
  9570  088C                     	;# 
  9571  088D                     	;# 
  9572  088E                     	;# 
  9573  088F                     	;# 
  9574  0890                     	;# 
  9575  0891                     	;# 
  9576  0892                     	;# 
  9577  0893                     	;# 
  9578  0895                     	;# 
  9579  0896                     	;# 
  9580  0897                     	;# 
  9581  0898                     	;# 
  9582  0899                     	;# 
  9583  089A                     	;# 
  9584  089B                     	;# 
  9585  090C                     	;# 
  9586  090E                     	;# 
  9587  090F                     	;# 
  9588  091F                     	;# 
  9589  098F                     	;# 
  9590  098F                     	;# 
  9591  0990                     	;# 
  9592  0991                     	;# 
  9593  0992                     	;# 
  9594  0993                     	;# 
  9595  0994                     	;# 
  9596  0995                     	;# 
  9597  0996                     	;# 
  9598  0997                     	;# 
  9599  1E0F                     	;# 
  9600  1E10                     	;# 
  9601  1E11                     	;# 
  9602  1E12                     	;# 
  9603  1E13                     	;# 
  9604  1E14                     	;# 
  9605  1E15                     	;# 
  9606  1E16                     	;# 
  9607  1E17                     	;# 
  9608  1E18                     	;# 
  9609  1E19                     	;# 
  9610  1E1A                     	;# 
  9611  1E1B                     	;# 
  9612  1E1C                     	;# 
  9613  1E1D                     	;# 
  9614  1E1E                     	;# 
  9615  1E1F                     	;# 
  9616  1E20                     	;# 
  9617  1E21                     	;# 
  9618  1E22                     	;# 
  9619  1E23                     	;# 
  9620  1E24                     	;# 
  9621  1E25                     	;# 
  9622  1E26                     	;# 
  9623  1E27                     	;# 
  9624  1E28                     	;# 
  9625  1E29                     	;# 
  9626  1E2A                     	;# 
  9627  1E2B                     	;# 
  9628  1E2C                     	;# 
  9629  1E2D                     	;# 
  9630  1E2E                     	;# 
  9631  1E2F                     	;# 
  9632  1E30                     	;# 
  9633  1E31                     	;# 
  9634  1E32                     	;# 
  9635  1E33                     	;# 
  9636  1E34                     	;# 
  9637  1E35                     	;# 
  9638  1E36                     	;# 
  9639  1E37                     	;# 
  9640  1E8F                     	;# 
  9641  1E90                     	;# 
  9642  1E91                     	;# 
  9643  1E92                     	;# 
  9644  1E93                     	;# 
  9645  1E94                     	;# 
  9646  1E95                     	;# 
  9647  1E96                     	;# 
  9648  1E97                     	;# 
  9649  1E9C                     	;# 
  9650  1E9D                     	;# 
  9651  1E9E                     	;# 
  9652  1EA1                     	;# 
  9653  1EA2                     	;# 
  9654  1EA3                     	;# 
  9655  1EA4                     	;# 
  9656  1EA9                     	;# 
  9657  1EAA                     	;# 
  9658  1EB1                     	;# 
  9659  1EB2                     	;# 
  9660  1EB8                     	;# 
  9661  1EB9                     	;# 
  9662  1EBA                     	;# 
  9663  1EBB                     	;# 
  9664  1EBC                     	;# 
  9665  1EBD                     	;# 
  9666  1EBE                     	;# 
  9667  1EC3                     	;# 
  9668  1EC5                     	;# 
  9669  1EC6                     	;# 
  9670  1EC7                     	;# 
  9671  1EC8                     	;# 
  9672  1EC9                     	;# 
  9673  1ECA                     	;# 
  9674  1ECB                     	;# 
  9675  1ECB                     	;# 
  9676  1ECB                     	;# 
  9677  1ECC                     	;# 
  9678  1ECC                     	;# 
  9679  1ECC                     	;# 
  9680  1F10                     	;# 
  9681  1F11                     	;# 
  9682  1F12                     	;# 
  9683  1F14                     	;# 
  9684  1F15                     	;# 
  9685  1F1C                     	;# 
  9686  1F1D                     	;# 
  9687  1F1E                     	;# 
  9688  1F1F                     	;# 
  9689  1F20                     	;# 
  9690  1F21                     	;# 
  9691  1F22                     	;# 
  9692  1F23                     	;# 
  9693  1F24                     	;# 
  9694  1F25                     	;# 
  9695  1F26                     	;# 
  9696  1F27                     	;# 
  9697  1F38                     	;# 
  9698  1F39                     	;# 
  9699  1F3A                     	;# 
  9700  1F3B                     	;# 
  9701  1F3C                     	;# 
  9702  1F3D                     	;# 
  9703  1F3E                     	;# 
  9704  1F3F                     	;# 
  9705  1F43                     	;# 
  9706  1F44                     	;# 
  9707  1F45                     	;# 
  9708  1F46                     	;# 
  9709  1F47                     	;# 
  9710  1F48                     	;# 
  9711  1F49                     	;# 
  9712  1F4A                     	;# 
  9713  1F4E                     	;# 
  9714  1F4F                     	;# 
  9715  1F50                     	;# 
  9716  1F51                     	;# 
  9717  1F52                     	;# 
  9718  1F53                     	;# 
  9719  1F54                     	;# 
  9720  1F55                     	;# 
  9721  1FE4                     	;# 
  9722  1FE5                     	;# 
  9723  1FE6                     	;# 
  9724  1FE7                     	;# 
  9725  1FE8                     	;# 
  9726  1FE8                     	;# 
  9727  1FE9                     	;# 
  9728  1FEA                     	;# 
  9729  1FEB                     	;# 
  9730  1FED                     	;# 
  9731  1FEE                     	;# 
  9732  1FEF                     	;_dmxArray
  9733                           
  9734                           	psect	idataCOMMON
  9735  0002                     __pidataCOMMON:	
  9736                           
  9737                           ;initializer for _incInterval
  9738  0002  3464               	retlw	100
  9739  0003  3400               	retlw	0
  9740                           
  9741                           	psect	idataBANK1
  9742  1E85                     __pidataBANK1:	
  9743                           
  9744                           ;initializer for _address
  9745  1E85  3401               	retlw	1
  9746  1E86  3400               	retlw	0
  9747                           
  9748                           ;initializer for _startup
  9749  1E87  3401               	retlw	1
  9750                           
  9751                           ;initializer for _beatBrightness
  9752  1E88  3401               	retlw	1
  9753                           
  9754                           	psect	idataBANK2
  9755  1E94                     __pidataBANK2:	
  9756                           
  9757                           ;initializer for _initial
  9758  1E94  3401               	retlw	1
  9759  1E95  3400               	retlw	0
  9760                           
  9761                           ;initializer for _delay
  9762  1E96  340A               	retlw	10
  9763  1E97  3400               	retlw	0
  9764                           
  9765                           ;initializer for _threshold
  9766  1E98  3490               	retlw	144
  9767  1E99  3406               	retlw	6
  9768                           
  9769                           	psect	stringtext1
  9770  1800                     __pstringtext1:	
  9771  1800                     _charTable:	
  9772  1800  3400               	retlw	0
  9773  1801  3482               	retlw	130
  9774  1802  3421               	retlw	33
  9775  1803  3400               	retlw	0
  9776  1804  3400               	retlw	0
  9777  1805  3400               	retlw	0
  9778  1806  3400               	retlw	0
  9779  1807  3402               	retlw	2
  9780  1808  3439               	retlw	57
  9781  1809  340F               	retlw	15
  9782  180A  3400               	retlw	0
  9783  180B  3400               	retlw	0
  9784  180C  3400               	retlw	0
  9785  180D  3440               	retlw	64
  9786  180E  3480               	retlw	128
  9787  180F  3400               	retlw	0
  9788  1810  343F               	retlw	63
  9789  1811  3406               	retlw	6
  9790  1812  345B               	retlw	91
  9791  1813  344F               	retlw	79
  9792  1814  3466               	retlw	102
  9793  1815  346D               	retlw	109
  9794  1816  347D               	retlw	125
  9795  1817  3407               	retlw	7
  9796  1818  347F               	retlw	127
  9797  1819  346F               	retlw	111
  9798  181A  3400               	retlw	0
  9799  181B  3400               	retlw	0
  9800  181C  3400               	retlw	0
  9801  181D  3448               	retlw	72
  9802  181E  3400               	retlw	0
  9803  181F  3453               	retlw	83
  9804  1820  3400               	retlw	0
  9805  1821  3477               	retlw	119
  9806  1822  347C               	retlw	124
  9807  1823  3439               	retlw	57
  9808  1824  345E               	retlw	94
  9809  1825  3479               	retlw	121
  9810  1826  3471               	retlw	113
  9811  1827  346F               	retlw	111
  9812  1828  3476               	retlw	118
  9813  1829  3406               	retlw	6
  9814  182A  341E               	retlw	30
  9815  182B  3400               	retlw	0
  9816  182C  3438               	retlw	56
  9817  182D  3400               	retlw	0
  9818  182E  3454               	retlw	84
  9819  182F  343F               	retlw	63
  9820  1830  3473               	retlw	115
  9821  1831  3467               	retlw	103
  9822  1832  3450               	retlw	80
  9823  1833  346D               	retlw	109
  9824  1834  3478               	retlw	120
  9825  1835  343E               	retlw	62
  9826  1836  3400               	retlw	0
  9827  1837  3400               	retlw	0
  9828  1838  3400               	retlw	0
  9829  1839  346E               	retlw	110
  9830  183A  3400               	retlw	0
  9831  183B  3439               	retlw	57
  9832  183C  3400               	retlw	0
  9833  183D  340F               	retlw	15
  9834  183E  3400               	retlw	0
  9835  183F  3408               	retlw	8
  9836  1840  3463               	retlw	99
  9837  1841  345F               	retlw	95
  9838  1842  347C               	retlw	124
  9839  1843  3458               	retlw	88
  9840  1844  345E               	retlw	94
  9841  1845  347B               	retlw	123
  9842  1846  3471               	retlw	113
  9843  1847  346F               	retlw	111
  9844  1848  3474               	retlw	116
  9845  1849  3402               	retlw	2
  9846  184A  341E               	retlw	30
  9847  184B  3400               	retlw	0
  9848  184C  3406               	retlw	6
  9849  184D  3400               	retlw	0
  9850  184E  3454               	retlw	84
  9851  184F  345C               	retlw	92
  9852  1850  3473               	retlw	115
  9853  1851  3467               	retlw	103
  9854  1852  3450               	retlw	80
  9855  1853  346D               	retlw	109
  9856  1854  3478               	retlw	120
  9857  1855  341C               	retlw	28
  9858  1856  3400               	retlw	0
  9859  1857  3400               	retlw	0
  9860  1858  3400               	retlw	0
  9861  1859  346E               	retlw	110
  9862  185A  3400               	retlw	0
  9863  185B  3439               	retlw	57
  9864  185C  3430               	retlw	48
  9865  185D  340F               	retlw	15
  9866  185E  3400               	retlw	0
  9867  185F  3400               	retlw	0
  9868  1860                     __end_of_charTable:	
  9869                           
  9870                           	psect	nvBANK2
  9871  0158                     __pnvBANK2:	
  9872  0158                     _ADCC_ADTI_InterruptHandler:	
  9873  0158                     	ds	2
  9874  015A                     _TMR0_InterruptHandler:	
  9875  015A                     	ds	2
  9876  015C                     _EUSART1_ErrorHandler:	
  9877  015C                     	ds	2
  9878  015E                     _EUSART1_OverrunErrorHandler:	
  9879  015E                     	ds	2
  9880  0160                     _EUSART1_FramingErrorHandler:	
  9881  0160                     	ds	2
  9882  0162                     _EUSART1_RxDefaultInterruptHandler:	
  9883  0162                     	ds	2
  9884  0014                     _TRISCbits	set	20
  9885  0012                     _TRISAbits	set	18
  9886  000B                     _INTCONbits	set	11
  9887  0014                     _TRISC	set	20
  9888  0013                     _TRISB	set	19
  9889  0012                     _TRISA	set	18
  9890  001A                     _LATC	set	26
  9891  0019                     _LATB	set	25
  9892  0018                     _LATA	set	24
  9893  000C                     _PORTA	set	12
  9894  000E                     _PORTC	set	14
  9895  00D5                     _LATC5	set	213
  9896  0090                     _ADERRL	set	144
  9897  0091                     _ADERRH	set	145
  9898  009B                     _ADPREVL	set	155
  9899  009C                     _ADPREVH	set	156
  9900  0094                     _ADFLTRL	set	148
  9901  0095                     _ADFLTRH	set	149
  9902  0096                     _ADACCL	set	150
  9903  0097                     _ADACCH	set	151
  9904  0099                     _ADCNT	set	153
  9905  009D                     _ADRESL	set	157
  9906  009E                     _ADRESH	set	158
  9907  009F                     _ADPCH	set	159
  9908  009A                     _ADRPT	set	154
  9909  0098                     _ADACCU	set	152
  9910  0093                     _ADSTPTH	set	147
  9911  0092                     _ADSTPTL	set	146
  9912  008F                     _ADUTHH	set	143
  9913  008E                     _ADUTHL	set	142
  9914  008D                     _ADLTHH	set	141
  9915  008C                     _ADLTHL	set	140
  9916  0112                     _ADCON1bits	set	274
  9917  0115                     _ADSTATbits	set	277
  9918  0113                     _ADCON2bits	set	275
  9919  0114                     _ADCON3bits	set	276
  9920  0111                     _ADCON0bits	set	273
  9921  0111                     _ADCON0	set	273
  9922  0118                     _ADCLK	set	280
  9923  0117                     _ADACT	set	279
  9924  0116                     _ADREF	set	278
  9925  0115                     _ADSTAT	set	277
  9926  0114                     _ADCON3	set	276
  9927  0113                     _ADCON2	set	275
  9928  0112                     _ADCON1	set	274
  9929  0110                     _ADPREH	set	272
  9930  010F                     _ADPREL	set	271
  9931  010E                     _ADCAP	set	270
  9932  010D                     _ADACQH	set	269
  9933  010C                     _ADACQL	set	268
  9934  0119                     _RC1REG	set	281
  9935  011D                     _RC1STAbits	set	285
  9936  011A                     _TX1REG	set	282
  9937  011E                     _TX1STAbits	set	286
  9938  011C                     _SP1BRGH	set	284
  9939  011B                     _SP1BRGL	set	283
  9940  011E                     _TX1STA	set	286
  9941  011D                     _RC1STA	set	285
  9942  011F                     _BAUD1CON	set	287
  9943  018C                     _SSP1BUF	set	396
  9944  0191                     _SSP1CON2bits	set	401
  9945  0190                     _SSP1CON1bits	set	400
  9946  018D                     _SSP1ADD	set	397
  9947  0192                     _SSP1CON3	set	402
  9948  0190                     _SSP1CON1	set	400
  9949  018F                     _SSP1STAT	set	399
  9950  021E                     _CCPTMRS0bits	set	542
  9951  028D                     _PR2	set	653
  9952  028C                     _TMR2	set	652
  9953  028E                     _T2CONbits	set	654
  9954  0291                     _T2RSTbits	set	657
  9955  028F                     _T2HLTbits	set	655
  9956  028E                     _T2CON	set	654
  9957  028C                     _T2TMR	set	652
  9958  028D                     _T2PR	set	653
  9959  0291                     _T2RST	set	657
  9960  028F                     _T2HLT	set	655
  9961  0290                     _T2CLKCON	set	656
  9962  0312                     _CCP2CONbits	set	786
  9963  0310                     _CCPR2L	set	784
  9964  0311                     _CCPR2H	set	785
  9965  0312                     _CCP2CON	set	786
  9966  030E                     _CCP1CONbits	set	782
  9967  030C                     _CCPR1L	set	780
  9968  030D                     _CCPR1H	set	781
  9969  030E                     _CCP1CON	set	782
  9970  031A                     _CCP4CONbits	set	794
  9971  0318                     _CCPR4L	set	792
  9972  0319                     _CCPR4H	set	793
  9973  031A                     _CCP4CON	set	794
  9974  0316                     _CCP3CONbits	set	790
  9975  0314                     _CCPR3L	set	788
  9976  0315                     _CCPR3H	set	789
  9977  0316                     _CCP3CON	set	790
  9978  059E                     _T0CON0bits	set	1438
  9979  059E                     _T0CON0	set	1438
  9980  059C                     _TMR0L	set	1436
  9981  059D                     _TMR0H	set	1437
  9982  059F                     _T0CON1	set	1439
  9983  070D                     _PIR1bits	set	1805
  9984  0717                     _PIE1bits	set	1815
  9985  070C                     _PIR0bits	set	1804
  9986  0716                     _PIE0bits	set	1814
  9987  070F                     _PIR3bits	set	1807
  9988  0719                     _PIE3bits	set	1817
  9989  0710                     _PIR4bits	set	1808
  9990  079D                     _PMD7	set	1949
  9991  079C                     _PMD6	set	1948
  9992  079B                     _PMD5	set	1947
  9993  079A                     _PMD4	set	1946
  9994  0799                     _PMD3	set	1945
  9995  0798                     _PMD2	set	1944
  9996  0797                     _PMD1	set	1943
  9997  0796                     _PMD0	set	1942
  9998  0892                     _OSCTUNE	set	2194
  9999  0893                     _OSCFRQ	set	2195
 10000  0891                     _OSCEN	set	2193
 10001  088F                     _OSCCON3	set	2191
 10002  088D                     _OSCCON1	set	2189
 10003  1ECB                     _RX1DTPPS	set	7883
 10004  1EC6                     _SSP1DATPPS	set	7878
 10005  1EC5                     _SSP1CLKPPS	set	7877
 10006  1F4F                     _WPUCbits	set	8015
 10007  1F4E                     _ANSELCbits	set	8014
 10008  1F39                     _WPUAbits	set	7993
 10009  1F38                     _ANSELAbits	set	7992
 10010  1F27                     _RC7PPS	set	7975
 10011  1F26                     _RC6PPS	set	7974
 10012  1F15                     _RA5PPS	set	7957
 10013  1F24                     _RC4PPS	set	7972
 10014  1F23                     _RC3PPS	set	7971
 10015  1F14                     _RA4PPS	set	7956
 10016  1F51                     _SLRCONC	set	8017
 10017  1F46                     _SLRCONB	set	8006
 10018  1F3B                     _SLRCONA	set	7995
 10019  1F50                     _ODCONC	set	8016
 10020  1F45                     _ODCONB	set	8005
 10021  1F3A                     _ODCONA	set	7994
 10022  1F4F                     _WPUC	set	8015
 10023  1F39                     _WPUA	set	7993
 10024  1F44                     _WPUB	set	8004
 10025  1F38                     _ANSELA	set	7992
 10026  1F43                     _ANSELB	set	8003
 10027  1F4E                     _ANSELC	set	8014
 10028                           
 10029                           	psect	stringtext2
 10030  2000                     __pstringtext2:	
 10031  2000                     STR_18:	
 10032  2000  3425               	retlw	37	;'%'
 10033  2001  3463               	retlw	99	;'c'
 10034  2002  3425               	retlw	37	;'%'
 10035  2003  3463               	retlw	99	;'c'
 10036  2004  3425               	retlw	37	;'%'
 10037  2005  3463               	retlw	99	;'c'
 10038  2006  3425               	retlw	37	;'%'
 10039  2007  3463               	retlw	99	;'c'
 10040  2008  340D               	retlw	13
 10041  2009  3400               	retlw	0
 10042                           
 10043                           	psect	stringtext3
 10044  200A                     __pstringtext3:	
 10045  200A                     STR_19:	
 10046  200A  3425               	retlw	37	;'%'
 10047  200B  3463               	retlw	99	;'c'
 10048  200C  3425               	retlw	37	;'%'
 10049  200D  3463               	retlw	99	;'c'
 10050  200E  3425               	retlw	37	;'%'
 10051  200F  3463               	retlw	99	;'c'
 10052  2010  3420               	retlw	32	;' '
 10053  2011  340D               	retlw	13
 10054  2012  3400               	retlw	0
 10055                           
 10056                           	psect	stringtext4
 10057  2013                     __pstringtext4:	
 10058  2013                     STR_17:	
 10059  2013  3420               	retlw	32	;' '
 10060  2014  3425               	retlw	37	;'%'
 10061  2015  3463               	retlw	99	;'c'
 10062  2016  3425               	retlw	37	;'%'
 10063  2017  3463               	retlw	99	;'c'
 10064  2018  3425               	retlw	37	;'%'
 10065  2019  3463               	retlw	99	;'c'
 10066  201A  340D               	retlw	13
 10067  201B  3400               	retlw	0
 10068                           
 10069                           	psect	stringtext5
 10070  201C                     __pstringtext5:	
 10071  201C                     STR_14:	
 10072  201C  3448               	retlw	72	;'H'
 10073  201D  3445               	retlw	69	;'E'
 10074  201E  3459               	retlw	89	;'Y'
 10075  201F  3459               	retlw	89	;'Y'
 10076  2020  3459               	retlw	89	;'Y'
 10077  2021  3459               	retlw	89	;'Y'
 10078  2022  3459               	retlw	89	;'Y'
 10079  2023  3459               	retlw	89	;'Y'
 10080  2024  3400               	retlw	0
 10081                           
 10082                           	psect	stringtext6
 10083  2025                     __pstringtext6:	
 10084  2025                     STR_20:	
 10085  2025  3425               	retlw	37	;'%'
 10086  2026  3463               	retlw	99	;'c'
 10087  2027  3425               	retlw	37	;'%'
 10088  2028  3463               	retlw	99	;'c'
 10089  2029  3420               	retlw	32	;' '
 10090  202A  3420               	retlw	32	;' '
 10091  202B  340D               	retlw	13
 10092  202C  3400               	retlw	0
 10093                           
 10094                           	psect	stringtext7
 10095  202D                     __pstringtext7:	
 10096  202D                     STR_16:	
 10097  202D  3420               	retlw	32	;' '
 10098  202E  3420               	retlw	32	;' '
 10099  202F  3425               	retlw	37	;'%'
 10100  2030  3463               	retlw	99	;'c'
 10101  2031  3425               	retlw	37	;'%'
 10102  2032  3463               	retlw	99	;'c'
 10103  2033  340D               	retlw	13
 10104  2034  3400               	retlw	0
 10105                           
 10106                           	psect	stringtext8
 10107  2035                     __pstringtext8:	
 10108  2035                     STR_6:	
 10109  2035  3441               	retlw	65	;'A'
 10110  2036  342D               	retlw	45	;'-'
 10111  2037  3425               	retlw	37	;'%'
 10112  2038  3464               	retlw	100	;'d'
 10113  2039  3420               	retlw	32	;' '
 10114  203A  3420               	retlw	32	;' '
 10115  203B  340D               	retlw	13
 10116  203C  3400               	retlw	0
 10117                           
 10118                           	psect	stringtext9
 10119  203D                     __pstringtext9:	
 10120  203D                     STR_5:	
 10121  203D  3443               	retlw	67	;'C'
 10122  203E  342D               	retlw	45	;'-'
 10123  203F  3425               	retlw	37	;'%'
 10124  2040  3464               	retlw	100	;'d'
 10125  2041  3420               	retlw	32	;' '
 10126  2042  3420               	retlw	32	;' '
 10127  2043  340D               	retlw	13
 10128  2044  3400               	retlw	0
 10129                           
 10130                           	psect	stringtext10
 10131  2045                     __pstringtext10:	
 10132  2045                     STR_4:	
 10133  2045  3446               	retlw	70	;'F'
 10134  2046  342D               	retlw	45	;'-'
 10135  2047  3425               	retlw	37	;'%'
 10136  2048  3464               	retlw	100	;'d'
 10137  2049  3420               	retlw	32	;' '
 10138  204A  3420               	retlw	32	;' '
 10139  204B  340D               	retlw	13
 10140  204C  3400               	retlw	0
 10141                           
 10142                           	psect	stringtext11
 10143  204D                     __pstringtext11:	
 10144  204D                     STR_3:	
 10145  204D  3442               	retlw	66	;'B'
 10146  204E  342D               	retlw	45	;'-'
 10147  204F  3425               	retlw	37	;'%'
 10148  2050  3475               	retlw	117	;'u'
 10149  2051  3420               	retlw	32	;' '
 10150  2052  3420               	retlw	32	;' '
 10151  2053  340D               	retlw	13
 10152  2054  3400               	retlw	0
 10153                           
 10154                           	psect	stringtext12
 10155  2055                     __pstringtext12:	
 10156  2055                     STR_21:	
 10157  2055  3425               	retlw	37	;'%'
 10158  2056  3463               	retlw	99	;'c'
 10159  2057  3420               	retlw	32	;' '
 10160  2058  3420               	retlw	32	;' '
 10161  2059  3420               	retlw	32	;' '
 10162  205A  340D               	retlw	13
 10163  205B  3400               	retlw	0
 10164                           
 10165                           	psect	stringtext13
 10166  205C                     __pstringtext13:	
 10167  205C                     STR_15:	
 10168  205C  3420               	retlw	32	;' '
 10169  205D  3420               	retlw	32	;' '
 10170  205E  3420               	retlw	32	;' '
 10171  205F  3425               	retlw	37	;'%'
 10172  2060  3463               	retlw	99	;'c'
 10173  2061  340D               	retlw	13
 10174  2062  3400               	retlw	0
 10175                           
 10176                           	psect	stringtext14
 10177  2063                     __pstringtext14:	
 10178  2063                     STR_22:	
 10179  2063  3420               	retlw	32	;' '
 10180  2064  3420               	retlw	32	;' '
 10181  2065  3420               	retlw	32	;' '
 10182  2066  3420               	retlw	32	;' '
 10183  2067  340D               	retlw	13
 10184  2068  3400               	retlw	0
 10185                           
 10186                           	psect	stringtext15
 10187  2069                     __pstringtext15:	
 10188  2069                     STR_10:	
 10189  2069  3450               	retlw	80	;'P'
 10190  206A  3443               	retlw	67	;'C'
 10191  206B  3420               	retlw	32	;' '
 10192  206C  3420               	retlw	32	;' '
 10193  206D  340D               	retlw	13
 10194  206E  3400               	retlw	0
 10195                           
 10196                           	psect	stringtext16
 10197  206F                     __pstringtext16:	
 10198  206F                     STR_11:	
 10199  206F  344C               	retlw	76	;'L'
 10200  2070  3445               	retlw	69	;'E'
 10201  2071  3444               	retlw	68	;'D'
 10202  2072  3420               	retlw	32	;' '
 10203  2073  340D               	retlw	13
 10204  2074  3400               	retlw	0
 10205                           
 10206                           	psect	stringtext17
 10207  2075                     __pstringtext17:	
 10208  2075                     STR_7:	
 10209  2075  3441               	retlw	65	;'A'
 10210  2076  344E               	retlw	78	;'N'
 10211  2077  3449               	retlw	73	;'I'
 10212  2078  3420               	retlw	32	;' '
 10213  2079  340D               	retlw	13
 10214  207A  3400               	retlw	0
 10215                           
 10216                           	psect	stringtext18
 10217  207B                     __pstringtext18:	
 10218  207B                     STR_2:	
 10219  207B  3453               	retlw	83	;'S'
 10220  207C  3445               	retlw	69	;'E'
 10221  207D  344C               	retlw	76	;'L'
 10222  207E  3431               	retlw	49	;'1'
 10223  207F  340D               	retlw	13
 10224  2080  3400               	retlw	0
 10225                           
 10226                           	psect	stringtext19
 10227  2081                     __pstringtext19:	
 10228  2081                     STR_1:	
 10229  2081  3448               	retlw	72	;'H'
 10230  2082  344F               	retlw	79	;'O'
 10231  2083  344C               	retlw	76	;'L'
 10232  2084  3444               	retlw	68	;'D'
 10233  2085  340D               	retlw	13
 10234  2086  3400               	retlw	0
 10235                           
 10236                           	psect	stringtext20
 10237  2087                     __pstringtext20:	
 10238  2087                     STR_8:	
 10239  2087  3442               	retlw	66	;'B'
 10240  2088  3445               	retlw	69	;'E'
 10241  2089  3441               	retlw	65	;'A'
 10242  208A  3454               	retlw	84	;'T'
 10243  208B  340D               	retlw	13
 10244  208C  3400               	retlw	0
 10245                           
 10246                           	psect	stringtext21
 10247  208D                     __pstringtext21:	
 10248  208D                     STR_12:	
 10249  208D  3420               	retlw	32	;' '
 10250  208E  3420               	retlw	32	;' '
 10251  208F  3420               	retlw	32	;' '
 10252  2090  3420               	retlw	32	;' '
 10253  2091  3400               	retlw	0
 10254                           
 10255                           	psect	stringtext22
 10256  0000                     __pstringtext22:	
 10257  2067                     
 10258                           ; #config settings
 10259  0000                     
 10260                           	psect	cinit
 10261  0032                     start_initialization:	
 10262  0032                     __initialization:		;BIGRAM
 10263                           
 10264                           ; Initialize objects allocated to COMMON
 10265  0032  3180  2002  3180   	fcall	__pidataCOMMON	;fetch initializer
 10266  0035  00FC               	movwf	__pdataCOMMON& (0+127)
 10267  0036  3180  2003  3180   	fcall	__pidataCOMMON+1	;fetch initializer
 10268  0039  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
 10269                           
 10270                           ; Initialize objects allocated to BANK1
 10271  003A  0141               	movlb	1	; select bank1
 10272  003B  319E  2685  3180   	fcall	__pidataBANK1	;fetch initializer
 10273  003E  00EC               	movwf	__pdataBANK1& (0+127)
 10274  003F  319E  2686  3180   	fcall	__pidataBANK1+1	;fetch initializer
 10275  0042  00ED               	movwf	(__pdataBANK1+1)& (0+127)
 10276  0043  319E  2687  3180   	fcall	__pidataBANK1+2	;fetch initializer
 10277  0046  00EE               	movwf	(__pdataBANK1+2)& (0+127)
 10278  0047  319E  2688  3180   	fcall	__pidataBANK1+3	;fetch initializer
 10279  004A  00EF               	movwf	(__pdataBANK1+3)& (0+127)
 10280                           
 10281                           ; Initialize objects allocated to BANK2
 10282  004B  3094               	movlw	low __pidataBANK2
 10283  004C  0084               	movwf	4
 10284  004D  309E               	movlw	(high __pidataBANK2)| (0+128)
 10285  004E  0085               	movwf	5
 10286  004F  0142               	movlb	2	; select bank2
 10287  0050  0012               	moviw fsr0++
 10288  0051  00E4               	movwf	__pdataBANK2& (0+127)
 10289  0052  0012               	moviw fsr0++
 10290  0053  00E5               	movwf	(__pdataBANK2+1)& (0+127)
 10291  0054  0012               	moviw fsr0++
 10292  0055  00E6               	movwf	(__pdataBANK2+2)& (0+127)
 10293  0056  0012               	moviw fsr0++
 10294  0057  00E7               	movwf	(__pdataBANK2+3)& (0+127)
 10295  0058  0012               	moviw fsr0++
 10296  0059  00E8               	movwf	(__pdataBANK2+4)& (0+127)
 10297  005A  0012               	moviw fsr0++
 10298  005B  00E9               	movwf	(__pdataBANK2+5)& (0+127)
 10299                           
 10300                           ; Clear objects allocated to BIGRAM
 10301  005C  30EE               	movlw	low (0+9198)
 10302  005D  0084               	movwf	4
 10303  005E  3023               	movlw	high (0+9198)
 10304  005F  0085               	movwf	5
 10305  0060  3002               	movlw	2
 10306  0061  00FE               	movwf	btemp
 10307  0062  3004               	movlw	4
 10308  0063  00FF               	movwf	btemp+1
 10309  0064  319F  273A  3180   	fcall	clear_ram0
 10310                           
 10311                           ; Clear objects allocated to COMMON
 10312  0067  01F7               	clrf	__pbssCOMMON& (0+127)
 10313  0068  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
 10314  0069  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
 10315  006A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
 10316  006B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
 10317                           
 10318                           ; Clear objects allocated to BANK1
 10319  006C  30A0               	movlw	low __pbssBANK1
 10320  006D  0084               	movwf	4
 10321  006E  3000               	movlw	high __pbssBANK1
 10322  006F  0085               	movwf	5
 10323  0070  3027               	movlw	39
 10324  0071  00FE               	movwf	btemp
 10325  0072  3000               	movlw	0
 10326  0073  00FF               	movwf	btemp+1
 10327  0074  319F  273A  3180   	fcall	clear_ram0
 10328                           
 10329                           ; Clear objects allocated to BANK2
 10330  0077  3020               	movlw	low __pbssBANK2
 10331  0078  0084               	movwf	4
 10332  0079  3001               	movlw	high __pbssBANK2
 10333  007A  0085               	movwf	5
 10334  007B  3038               	movlw	56
 10335  007C  00FE               	movwf	btemp
 10336  007D  3000               	movlw	0
 10337  007E  00FF               	movwf	btemp+1
 10338  007F  319F  273A  3180   	fcall	clear_ram0
 10339                           
 10340                           ; Clear objects allocated to BANK3
 10341  0082  30A0               	movlw	low __pbssBANK3
 10342  0083  0084               	movwf	4
 10343  0084  3001               	movlw	high __pbssBANK3
 10344  0085  0085               	movwf	5
 10345  0086  3040               	movlw	64
 10346  0087  00FE               	movwf	btemp
 10347  0088  3000               	movlw	0
 10348  0089  00FF               	movwf	btemp+1
 10349  008A  319F  273A         	fcall	clear_ram0
 10350  008C                     end_of_initialization:	
 10351                           ;End of C runtime variable initialization code
 10352                           
 10353  008C                     __end_of__initialization:	
 10354  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10355  008D  0140               	movlb	0
 10356  008E  3194  2CAF         	ljmp	_main	;jump to C main() function
 10357                           
 10358                           	psect	bssCOMMON
 10359  0077                     __pbssCOMMON:	
 10360  0077                     _p_i2c1_trb_current:	
 10361  0077                     	ds	1
 10362  0078                     _eusart1RxTail:	
 10363  0078                     	ds	1
 10364  0079                     _eusart1RxHead:	
 10365  0079                     	ds	1
 10366  007A                     I2C1_ISR@i2c_address:	
 10367  007A                     	ds	2
 10368                           
 10369                           	psect	dataCOMMON
 10370  007C                     __pdataCOMMON:	
 10371  007C                     _incInterval:	
 10372  007C                     	ds	2
 10373                           
 10374                           	psect	bssBANK1
 10375  00A0                     __pbssBANK1:	
 10376  00A0                     _i2c1_object:	
 10377  00A0                     	ds	5
 10378  00A5                     _manual:	
 10379  00A5                     	ds	4
 10380  00A9                     _currentState:	
 10381  00A9                     	ds	2
 10382  00AB                     _lastIncTime:	
 10383  00AB                     	ds	2
 10384  00AD                     _lastDetected:	
 10385  00AD                     	ds	1
 10386  00AE                     _thresholdExceeded:	
 10387  00AE                     	ds	1
 10388  00AF                     _detected:	
 10389  00AF                     	ds	1
 10390  00B0                     _position:	
 10391  00B0                     	ds	1
 10392  00B1                     _colorModeSelected:	
 10393  00B1                     	ds	1
 10394  00B2                     _beatHold:	
 10395  00B2                     	ds	1
 10396  00B3                     _enterState:	
 10397  00B3                     	ds	1
 10398  00B4                     _menuState:	
 10399  00B4                     	ds	1
 10400  00B5                     _downState:	
 10401  00B5                     	ds	1
 10402  00B6                     _upState:	
 10403  00B6                     	ds	1
 10404  00B7                     _enterPressed:	
 10405  00B7                     	ds	1
 10406  00B8                     _menuPressed:	
 10407  00B8                     	ds	1
 10408  00B9                     _currentSelection:	
 10409  00B9                     	ds	1
 10410  00BA                     _menuSelected:	
 10411  00BA                     	ds	1
 10412  00BB                     _enter:	
 10413  00BB                     	ds	1
 10414  00BC                     _down:	
 10415  00BC                     	ds	1
 10416  00BD                     _up:	
 10417  00BD                     	ds	1
 10418  00BE                     _menu:	
 10419  00BE                     	ds	1
 10420  00BF                     I2C1_ISR@i2c_10bit_address_restart:	
 10421  00BF                     	ds	1
 10422  00C0                     I2C1_ISR@i2c_bytes_left:	
 10423  00C0                     	ds	1
 10424  00C1                     I2C1_ISR@pi2c_buf_ptr:	
 10425  00C1                     	ds	1
 10426  00C2                     _p_i2c1_current:	
 10427  00C2                     	ds	1
 10428  00C3                     _i2c1_trb_count:	
 10429  00C3                     	ds	1
 10430  00C4                     _i2c1_state:	
 10431  00C4                     	ds	1
 10432  00C5                     _eusart1RxLastError:	
 10433  00C5                     	ds	1
 10434  00C6                     _eusart1RxCount:	
 10435  00C6                     	ds	1
 10436                           
 10437                           	psect	dataBANK1
 10438  00EC                     __pdataBANK1:	
 10439  00EC                     _address:	
 10440  00EC                     	ds	2
 10441  00EE                     _startup:	
 10442  00EE                     	ds	1
 10443  00EF                     _beatBrightness:	
 10444  00EF                     	ds	1
 10445                           
 10446                           	psect	bssBANK2
 10447  0120                     __pbssBANK2:	
 10448  0120                     _eusart1RxStatusBuffer:	
 10449  0120                     	ds	8
 10450  0128                     _eusart1RxBuffer:	
 10451  0128                     	ds	8
 10452  0130                     _nout:	
 10453  0130                     	ds	2
 10454  0132                     _width:	
 10455  0132                     	ds	2
 10456  0134                     _prec:	
 10457  0134                     	ds	2
 10458  0136                     _flags:	
 10459  0136                     	ds	2
 10460  0138                     _lastLedActiveTime:	
 10461  0138                     	ds	2
 10462  013A                     _arrayIndex:	
 10463  013A                     	ds	2
 10464  013C                     _thresholdCount:	
 10465  013C                     	ds	2
 10466  013E                     _lastRun:	
 10467  013E                     	ds	2
 10468  0140                     _bpm:	
 10469  0140                     	ds	2
 10470  0142                     _lastBeat:	
 10471  0142                     	ds	2
 10472  0144                     _lastActiveTime:	
 10473  0144                     	ds	2
 10474  0146                     _currentTime:	
 10475  0146                     	ds	2
 10476  0148                     _lastTime:	
 10477  0148                     	ds	2
 10478  014A                     _startTime:	
 10479  014A                     	ds	2
 10480  014C                     _tm1650_status:	
 10481  014C                     	ds	1
 10482  014D                     I2C1_MasterRead@trBlock:	
 10483  014D                     	ds	4
 10484  0151                     I2C1_MasterWrite@trBlock:	
 10485  0151                     	ds	4
 10486  0155                     _i2c1_tr_queue:	
 10487  0155                     	ds	3
 10488                           
 10489                           	psect	dataBANK2
 10490  0164                     __pdataBANK2:	
 10491  0164                     _initial:	
 10492  0164                     	ds	2
 10493  0166                     _delay:	
 10494  0166                     	ds	2
 10495  0168                     _threshold:	
 10496  0168                     	ds	2
 10497                           
 10498                           	psect	bssBANK3
 10499  01A0                     __pbssBANK3:	
 10500  01A0                     _dbuf:	
 10501  01A0                     	ds	32
 10502  01C0                     _buttons:	
 10503  01C0                     	ds	32
 10504                           
 10505                           	psect	clrtext
 10506  1F3A                     clear_ram0:	
 10507                           ;	Called with FSR0 containing the base address, and
 10508                           ;	btemp/btemp+1 has the size to clear
 10509                           
 10510  1F3A  0064               	clrwdt	;clear the watchdog before getting into this loop
 10511  1F3B                     clrloop0:	
 10512  1F3B  0180               	clrf	0	;clear RAM location pointed to by FSR
 10513  1F3C  3101               	addfsr 0,1
 10514  1F3D  3001               	movlw	1
 10515  1F3E  02FE               	subwf	126,f
 10516  1F3F  3000               	movlw	0
 10517  1F40  3BFF               	subwfb	127,f
 10518  1F41  087F               	movf	127,w
 10519  1F42  047E               	iorwf	126,w
 10520  1F43  1903               	btfsc	3,2
 10521  1F44  3400               	retlw	0	;all done for this memory range, return
 10522  1F45  2F3B               	goto	clrloop0	;have we reached the end yet?
 10523                           
 10524                           	psect	cstackBANK2
 10525  016A                     __pcstackBANK2:	
 10526  016A                     LED_task_DMX@dmx:	
 10527                           
 10528                           ; 4 bytes @ 0x0
 10529  016A                     	ds	4
 10530  016E                     ??_main:	
 10531                           
 10532                           ; 1 bytes @ 0x4
 10533  016E                     	ds	2
 10534                           
 10535                           	psect	cstackBANK1
 10536  00C7                     __pcstackBANK1:	
 10537  00C7                     ?_PWM3_LoadDutyValue:	
 10538  00C7                     ?_PWM4_LoadDutyValue:	
 10539                           ; 1 bytes @ 0x0
 10540                           
 10541  00C7                     ?_PWM1_LoadDutyValue:	
 10542                           ; 1 bytes @ 0x0
 10543                           
 10544  00C7                     ?_PWM2_LoadDutyValue:	
 10545                           ; 1 bytes @ 0x0
 10546                           
 10547  00C7                     ?_printf:	
 10548                           ; 1 bytes @ 0x0
 10549                           
 10550  00C7                     ?_beatBrightnessCalculation:	
 10551                           ; 2 bytes @ 0x0
 10552                           
 10553  00C7                     PWM3_LoadDutyValue@dutyValue:	
 10554                           ; 4 bytes @ 0x0
 10555                           
 10556  00C7                     PWM4_LoadDutyValue@dutyValue:	
 10557                           ; 2 bytes @ 0x0
 10558                           
 10559  00C7                     PWM1_LoadDutyValue@dutyValue:	
 10560                           ; 2 bytes @ 0x0
 10561                           
 10562  00C7                     PWM2_LoadDutyValue@dutyValue:	
 10563                           ; 2 bytes @ 0x0
 10564                           
 10565  00C7                     printf@fmt:	
 10566                           ; 2 bytes @ 0x0
 10567                           
 10568                           
 10569                           ; 2 bytes @ 0x0
 10570  00C7                     	ds	4
 10571  00CB                     ??_beatBrightnessCalculation:	
 10572                           
 10573                           ; 1 bytes @ 0x4
 10574  00CB                     	ds	5
 10575  00D0                     ?_beatColorCreator:	
 10576  00D0                     beatColorCreator@inGreen:	
 10577                           ; 4 bytes @ 0x9
 10578                           
 10579                           
 10580                           ; 1 bytes @ 0x9
 10581  00D0                     	ds	1
 10582  00D1                     ??_CONTROLLER_task:	
 10583  00D1                     beatColorCreator@inBlue:	
 10584                           ; 1 bytes @ 0xA
 10585                           
 10586                           
 10587                           ; 1 bytes @ 0xA
 10588  00D1                     	ds	1
 10589  00D2                     beatColorCreator@inWhite:	
 10590                           
 10591                           ; 1 bytes @ 0xB
 10592  00D2                     	ds	2
 10593  00D4                     beatColorCreator@inRed:	
 10594                           
 10595                           ; 1 bytes @ 0xD
 10596  00D4                     	ds	1
 10597  00D5                     _beatColorCreator$3568:	
 10598                           
 10599                           ; 4 bytes @ 0xE
 10600  00D5                     	ds	4
 10601  00D9                     beatColorCreator@tempColor:	
 10602                           
 10603                           ; 4 bytes @ 0x12
 10604  00D9                     	ds	4
 10605  00DD                     ?_LED_setColor:	
 10606  00DD                     LED_setColor@input:	
 10607                           ; 1 bytes @ 0x16
 10608                           
 10609                           
 10610                           ; 4 bytes @ 0x16
 10611  00DD                     	ds	4
 10612  00E1                     ??_LED_setColor:	
 10613                           
 10614                           ; 1 bytes @ 0x1A
 10615  00E1                     	ds	4
 10616  00E5                     ??_LED_task_BEAT_STROBE:	
 10617  00E5                     ??_LED_task_DMX:	
 10618                           ; 1 bytes @ 0x1E
 10619                           
 10620                           
 10621                           ; 1 bytes @ 0x1E
 10622  00E5                     	ds	5
 10623  00EA                     ??_LED_task:	
 10624                           
 10625                           ; 1 bytes @ 0x23
 10626  00EA                     	ds	2
 10627                           
 10628                           	psect	cstackCOMMON
 10629  0070                     __pcstackCOMMON:	
 10630  0070                     ?_PMD_Initialize:	
 10631  0070                     ?_PIN_MANAGER_Initialize:	
 10632                           ; 1 bytes @ 0x0
 10633                           
 10634  0070                     ?_OSCILLATOR_Initialize:	
 10635                           ; 1 bytes @ 0x0
 10636                           
 10637  0070                     ?_I2C1_Initialize:	
 10638                           ; 1 bytes @ 0x0
 10639                           
 10640  0070                     ?_PWM1_Initialize:	
 10641                           ; 1 bytes @ 0x0
 10642                           
 10643  0070                     ?_PWM2_Initialize:	
 10644                           ; 1 bytes @ 0x0
 10645                           
 10646  0070                     ?_ADCC_Initialize:	
 10647                           ; 1 bytes @ 0x0
 10648                           
 10649  0070                     ?_PWM4_Initialize:	
 10650                           ; 1 bytes @ 0x0
 10651                           
 10652  0070                     ?_PWM3_Initialize:	
 10653                           ; 1 bytes @ 0x0
 10654                           
 10655  0070                     ?_TMR2_Initialize:	
 10656                           ; 1 bytes @ 0x0
 10657                           
 10658  0070                     ?_TMR0_Initialize:	
 10659                           ; 1 bytes @ 0x0
 10660                           
 10661  0070                     ?_EUSART1_Initialize:	
 10662                           ; 1 bytes @ 0x0
 10663                           
 10664  0070                     ?_EUSART1_Receive_ISR:	
 10665                           ; 1 bytes @ 0x0
 10666                           
 10667  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 10668                           ; 1 bytes @ 0x0
 10669                           
 10670  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 10671                           ; 1 bytes @ 0x0
 10672                           
 10673  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10674                           ; 1 bytes @ 0x0
 10675                           
 10676  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10677                           ; 1 bytes @ 0x0
 10678                           
 10679  0070                     ?_EUSART1_DefaultErrorHandler:	
 10680                           ; 1 bytes @ 0x0
 10681                           
 10682  0070                     ?_EUSART1_RxDataHandler:	
 10683                           ; 1 bytes @ 0x0
 10684                           
 10685  0070                     ??_EUSART1_RxDataHandler:	
 10686                           ; 1 bytes @ 0x0
 10687                           
 10688  0070                     ?_TMR0_ISR:	
 10689                           ; 1 bytes @ 0x0
 10690                           
 10691  0070                     ??_TMR0_ISR:	
 10692                           ; 1 bytes @ 0x0
 10693                           
 10694  0070                     ?_I2C1_BusCollisionISR:	
 10695                           ; 1 bytes @ 0x0
 10696                           
 10697  0070                     ??_I2C1_BusCollisionISR:	
 10698                           ; 1 bytes @ 0x0
 10699                           
 10700  0070                     ?_I2C1_ISR:	
 10701                           ; 1 bytes @ 0x0
 10702                           
 10703  0070                     ?_ADCC_ThresholdISR:	
 10704                           ; 1 bytes @ 0x0
 10705                           
 10706  0070                     ??_ADCC_ThresholdISR:	
 10707                           ; 1 bytes @ 0x0
 10708                           
 10709  0070                     ?_TMR0_DefaultInterruptHandler:	
 10710                           ; 1 bytes @ 0x0
 10711                           
 10712  0070                     ??_TMR0_DefaultInterruptHandler:	
 10713                           ; 1 bytes @ 0x0
 10714                           
 10715  0070                     ?_I2C1_Stop:	
 10716                           ; 1 bytes @ 0x0
 10717                           
 10718  0070                     ??_I2C1_Stop:	
 10719                           ; 1 bytes @ 0x0
 10720                           
 10721  0070                     ?_I2C1_FunctionComplete:	
 10722                           ; 1 bytes @ 0x0
 10723                           
 10724  0070                     ??_I2C1_FunctionComplete:	
 10725                           ; 1 bytes @ 0x0
 10726                           
 10727  0070                     ?_ADCC_DefaultInterruptHandler:	
 10728                           ; 1 bytes @ 0x0
 10729                           
 10730  0070                     ??_ADCC_DefaultInterruptHandler:	
 10731                           ; 1 bytes @ 0x0
 10732                           
 10733  0070                     ?_CLOCK_init:	
 10734                           ; 1 bytes @ 0x0
 10735                           
 10736  0070                     ?_BUTTONS_init:	
 10737                           ; 1 bytes @ 0x0
 10738                           
 10739  0070                     ?_BEAT_init:	
 10740                           ; 1 bytes @ 0x0
 10741                           
 10742  0070                     ?_LED_init:	
 10743                           ; 1 bytes @ 0x0
 10744                           
 10745  0070                     ?_TM1650_init:	
 10746                           ; 1 bytes @ 0x0
 10747                           
 10748  0070                     ?_DMX_init:	
 10749                           ; 1 bytes @ 0x0
 10750                           
 10751  0070                     ?_BUTTONS_task:	
 10752                           ; 1 bytes @ 0x0
 10753                           
 10754  0070                     ?_CONTROLLER_task:	
 10755                           ; 1 bytes @ 0x0
 10756                           
 10757  0070                     ?_BEAT_task:	
 10758                           ; 1 bytes @ 0x0
 10759                           
 10760  0070                     ?_LED_task:	
 10761                           ; 1 bytes @ 0x0
 10762                           
 10763  0070                     ?_GPIO_init:	
 10764                           ; 1 bytes @ 0x0
 10765                           
 10766  0070                     ?_CLOCK_timerCallback:	
 10767                           ; 1 bytes @ 0x0
 10768                           
 10769  0070                     ??_CLOCK_timerCallback:	
 10770                           ; 1 bytes @ 0x0
 10771                           
 10772  0070                     ?_menuSelection:	
 10773                           ; 1 bytes @ 0x0
 10774                           
 10775  0070                     ?_CONTROL_DMX:	
 10776                           ; 1 bytes @ 0x0
 10777                           
 10778  0070                     ?_CONTROL_BEAT:	
 10779                           ; 1 bytes @ 0x0
 10780                           
 10781  0070                     ?_CONTROL_MANUAL:	
 10782                           ; 1 bytes @ 0x0
 10783                           
 10784  0070                     ?_TM1650_enable:	
 10785                           ; 1 bytes @ 0x0
 10786                           
 10787  0070                     ?_getManualColor:	
 10788                           ; 1 bytes @ 0x0
 10789                           
 10790  0070                     ?_address_inc:	
 10791                           ; 1 bytes @ 0x0
 10792                           
 10793  0070                     ?_address_dec:	
 10794                           ; 1 bytes @ 0x0
 10795                           
 10796  0070                     ?_colorInc:	
 10797                           ; 1 bytes @ 0x0
 10798                           
 10799  0070                     ?_colorDec:	
 10800                           ; 1 bytes @ 0x0
 10801                           
 10802  0070                     ?_DMX_interrupt:	
 10803                           ; 1 bytes @ 0x0
 10804                           
 10805  0070                     ??_DMX_interrupt:	
 10806                           ; 1 bytes @ 0x0
 10807                           
 10808  0070                     ?_LED_task_BEAT_STROBE:	
 10809                           ; 1 bytes @ 0x0
 10810                           
 10811  0070                     ?_LED_task_BEAT_FADE:	
 10812                           ; 1 bytes @ 0x0
 10813                           
 10814  0070                     ?_LED_task_BEAT_CONTINUOUS:	
 10815                           ; 1 bytes @ 0x0
 10816                           
 10817  0070                     ?_LED_task_BEAT_MIXED:	
 10818                           ; 1 bytes @ 0x0
 10819                           
 10820  0070                     ?_LED_task_ANIMATION:	
 10821                           ; 1 bytes @ 0x0
 10822                           
 10823  0070                     ?_LED_task_MANUAL:	
 10824                           ; 1 bytes @ 0x0
 10825                           
 10826  0070                     ?_SYSTEM_Initialize:	
 10827                           ; 1 bytes @ 0x0
 10828                           
 10829  0070                     ?_INTERRUPT_InterruptManager:	
 10830                           ; 1 bytes @ 0x0
 10831                           
 10832  0070                     ?_I2C1_WaitForLastPacketToComplete:	
 10833                           ; 1 bytes @ 0x0
 10834                           
 10835  0070                     ?_ADCC_StartConversion:	
 10836                           ; 1 bytes @ 0x0
 10837                           
 10838  0070                     ?_main:	
 10839                           ; 1 bytes @ 0x0
 10840                           
 10841  0070                     ?_BUTTONS_isClicked:	
 10842                           ; 1 bytes @ 0x0
 10843                           
 10844  0070                     ?_BUTTONS_isHeld:	
 10845                           ; 1 bytes @ 0x0
 10846                           
 10847  0070                     ?_getMode:	
 10848                           ; 1 bytes @ 0x0
 10849                           
 10850  0070                     ?_getIsHold:	
 10851                           ; 1 bytes @ 0x0
 10852                           
 10853  0070                     ?_putch:	
 10854                           ; 1 bytes @ 0x0
 10855                           
 10856  0070                     ?_adcThresholdHandler:	
 10857                           ; 1 bytes @ 0x0
 10858                           
 10859  0070                     ??_adcThresholdHandler:	
 10860                           ; 1 bytes @ 0x0
 10861                           
 10862  0070                     ?_BEAT_detected:	
 10863                           ; 1 bytes @ 0x0
 10864                           
 10865  0070                     ?_DMX_getAddress:	
 10866                           ; 1 bytes @ 0x0
 10867                           
 10868  0070                     ?_LED_task_DMX:	
 10869                           ; 1 bytes @ 0x0
 10870                           
 10871                           
 10872                           ; 1 bytes @ 0x0
 10873  0070                     	ds	1
 10874  0071                     ??_EUSART1_Receive_ISR:	
 10875  0071                     ??_EUSART1_DefaultErrorHandler:	
 10876                           ; 1 bytes @ 0x1
 10877                           
 10878  0071                     I2C1_Stop@completion_code:	
 10879                           ; 1 bytes @ 0x1
 10880                           
 10881                           
 10882                           ; 1 bytes @ 0x1
 10883  0071                     	ds	1
 10884  0072                     ??_I2C1_ISR:	
 10885                           
 10886                           ; 1 bytes @ 0x2
 10887  0072                     	ds	4
 10888  0076                     DMX_interrupt@dummy:	
 10889                           
 10890                           ; 1 bytes @ 0x6
 10891  0076                     	ds	1
 10892  0077                     ??_INTERRUPT_InterruptManager:	
 10893                           
 10894                           	psect	cstackBANK0
 10895  0020                     __pcstackBANK0:	
 10896                           ; 1 bytes @ 0x7
 10897                           
 10898  0020                     ??_PMD_Initialize:	
 10899  0020                     ??_PIN_MANAGER_Initialize:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902  0020                     ??_OSCILLATOR_Initialize:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905  0020                     ??_I2C1_Initialize:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908  0020                     ??_PWM1_Initialize:	
 10909                           ; 1 bytes @ 0x0
 10910                           
 10911  0020                     ??_PWM2_Initialize:	
 10912                           ; 1 bytes @ 0x0
 10913                           
 10914  0020                     ??_PWM4_Initialize:	
 10915                           ; 1 bytes @ 0x0
 10916                           
 10917  0020                     ??_PWM3_Initialize:	
 10918                           ; 1 bytes @ 0x0
 10919                           
 10920  0020                     ??_TMR2_Initialize:	
 10921                           ; 1 bytes @ 0x0
 10922                           
 10923  0020                     ?_EUSART1_SetRxInterruptHandler:	
 10924                           ; 1 bytes @ 0x0
 10925                           
 10926  0020                     ?_EUSART1_SetFramingErrorHandler:	
 10927                           ; 1 bytes @ 0x0
 10928                           
 10929  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 10930                           ; 1 bytes @ 0x0
 10931                           
 10932  0020                     ?_EUSART1_SetErrorHandler:	
 10933                           ; 1 bytes @ 0x0
 10934                           
 10935  0020                     ?_TMR0_SetInterruptHandler:	
 10936                           ; 1 bytes @ 0x0
 10937                           
 10938  0020                     ?_I2C1_MasterWriteTRBBuild:	
 10939                           ; 1 bytes @ 0x0
 10940                           
 10941  0020                     ?_I2C1_MasterTRBInsert:	
 10942                           ; 1 bytes @ 0x0
 10943                           
 10944  0020                     ?_ADCC_SetADTIInterruptHandler:	
 10945                           ; 1 bytes @ 0x0
 10946                           
 10947  0020                     ??_LED_init:	
 10948                           ; 1 bytes @ 0x0
 10949                           
 10950  0020                     ??_GPIO_init:	
 10951                           ; 1 bytes @ 0x0
 10952                           
 10953  0020                     ??_getManualColor:	
 10954                           ; 1 bytes @ 0x0
 10955                           
 10956  0020                     ??_colorInc:	
 10957                           ; 1 bytes @ 0x0
 10958                           
 10959  0020                     ??_colorDec:	
 10960                           ; 1 bytes @ 0x0
 10961                           
 10962  0020                     ??_LED_task_BEAT_FADE:	
 10963                           ; 1 bytes @ 0x0
 10964                           
 10965  0020                     ??_LED_task_BEAT_CONTINUOUS:	
 10966                           ; 1 bytes @ 0x0
 10967                           
 10968  0020                     ??_LED_task_BEAT_MIXED:	
 10969                           ; 1 bytes @ 0x0
 10970                           
 10971  0020                     ??_LED_task_ANIMATION:	
 10972                           ; 1 bytes @ 0x0
 10973                           
 10974  0020                     ??_LED_task_MANUAL:	
 10975                           ; 1 bytes @ 0x0
 10976                           
 10977  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 10978                           ; 1 bytes @ 0x0
 10979                           
 10980  0020                     ??_ADCC_StartConversion:	
 10981                           ; 1 bytes @ 0x0
 10982                           
 10983  0020                     ?_ADCC_SetUpperThreshold:	
 10984                           ; 1 bytes @ 0x0
 10985                           
 10986  0020                     ?_init:	
 10987                           ; 1 bytes @ 0x0
 10988                           
 10989  0020                     ??_BUTTONS_isClicked:	
 10990                           ; 1 bytes @ 0x0
 10991                           
 10992  0020                     ??_BUTTONS_isHeld:	
 10993                           ; 1 bytes @ 0x0
 10994                           
 10995  0020                     ??_getMode:	
 10996                           ; 1 bytes @ 0x0
 10997                           
 10998  0020                     ??_getIsHold:	
 10999                           ; 1 bytes @ 0x0
 11000                           
 11001  0020                     ??_BEAT_detected:	
 11002                           ; 1 bytes @ 0x0
 11003                           
 11004  0020                     ??_DMX_getAddress:	
 11005                           ; 1 bytes @ 0x0
 11006                           
 11007  0020                     ?_CLOCK_getTime:	
 11008                           ; 1 bytes @ 0x0
 11009                           
 11010  0020                     ?_strlen:	
 11011                           ; 2 bytes @ 0x0
 11012                           
 11013  0020                     ?__Umul8_16:	
 11014                           ; 2 bytes @ 0x0
 11015                           
 11016  0020                     ?___lwdiv:	
 11017                           ; 2 bytes @ 0x0
 11018                           
 11019  0020                     ?___xxtofl:	
 11020                           ; 2 bytes @ 0x0
 11021                           
 11022  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 11023                           ; 4 bytes @ 0x0
 11024                           
 11025  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 11026                           ; 1 bytes @ 0x0
 11027                           
 11028  0020                     ADCC_StartConversion@channel:	
 11029                           ; 1 bytes @ 0x0
 11030                           
 11031  0020                     BUTTONS_isClicked@button:	
 11032                           ; 1 bytes @ 0x0
 11033                           
 11034  0020                     BUTTONS_isHeld@button:	
 11035                           ; 1 bytes @ 0x0
 11036                           
 11037  0020                     __Umul8_16@multiplicand:	
 11038                           ; 1 bytes @ 0x0
 11039                           
 11040  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11041                           ; 1 bytes @ 0x0
 11042                           
 11043  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11044                           ; 2 bytes @ 0x0
 11045                           
 11046  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 11047                           ; 2 bytes @ 0x0
 11048                           
 11049  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11050                           ; 2 bytes @ 0x0
 11051                           
 11052  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11053                           ; 2 bytes @ 0x0
 11054                           
 11055  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 11056                           ; 2 bytes @ 0x0
 11057                           
 11058  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 11059                           ; 2 bytes @ 0x0
 11060                           
 11061  0020                     init@port:	
 11062                           ; 2 bytes @ 0x0
 11063                           
 11064  0020                     ___lwdiv@divisor:	
 11065                           ; 2 bytes @ 0x0
 11066                           
 11067  0020                     strlen@s:	
 11068                           ; 2 bytes @ 0x0
 11069                           
 11070  0020                     ___xxtofl@val:	
 11071                           ; 2 bytes @ 0x0
 11072                           
 11073                           
 11074                           ; 4 bytes @ 0x0
 11075  0020                     	ds	1
 11076  0021                     ??_CONTROL_BEAT:	
 11077  0021                     I2C1_MasterTRBInsert@pflag:	
 11078                           ; 1 bytes @ 0x1
 11079                           
 11080  0021                     I2C1_MasterWriteTRBBuild@length:	
 11081                           ; 1 bytes @ 0x1
 11082                           
 11083                           
 11084                           ; 1 bytes @ 0x1
 11085  0021                     	ds	1
 11086  0022                     ??_ADCC_Initialize:	
 11087  0022                     ??_TMR0_Initialize:	
 11088                           ; 1 bytes @ 0x2
 11089                           
 11090  0022                     ??_EUSART1_Initialize:	
 11091                           ; 1 bytes @ 0x2
 11092                           
 11093  0022                     ??_EUSART1_SetRxInterruptHandler:	
 11094                           ; 1 bytes @ 0x2
 11095                           
 11096  0022                     ??_EUSART1_SetFramingErrorHandler:	
 11097                           ; 1 bytes @ 0x2
 11098                           
 11099  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 11100                           ; 1 bytes @ 0x2
 11101                           
 11102  0022                     ??_EUSART1_SetErrorHandler:	
 11103                           ; 1 bytes @ 0x2
 11104                           
 11105  0022                     ??_TMR0_SetInterruptHandler:	
 11106                           ; 1 bytes @ 0x2
 11107                           
 11108  0022                     ??_I2C1_MasterTRBInsert:	
 11109                           ; 1 bytes @ 0x2
 11110                           
 11111  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11112                           ; 1 bytes @ 0x2
 11113                           
 11114  0022                     ??_CLOCK_init:	
 11115                           ; 1 bytes @ 0x2
 11116                           
 11117  0022                     ??_BEAT_init:	
 11118                           ; 1 bytes @ 0x2
 11119                           
 11120  0022                     ??_CLOCK_getTime:	
 11121                           ; 1 bytes @ 0x2
 11122                           
 11123  0022                     ??_BUTTONS_task:	
 11124                           ; 1 bytes @ 0x2
 11125                           
 11126  0022                     ??_strlen:	
 11127                           ; 1 bytes @ 0x2
 11128                           
 11129  0022                     ??__Umul8_16:	
 11130                           ; 1 bytes @ 0x2
 11131                           
 11132  0022                     ??_SYSTEM_Initialize:	
 11133                           ; 1 bytes @ 0x2
 11134                           
 11135  0022                     ??_ADCC_SetUpperThreshold:	
 11136                           ; 1 bytes @ 0x2
 11137                           
 11138  0022                     init@pin:	
 11139                           ; 1 bytes @ 0x2
 11140                           
 11141  0022                     colorInc@input:	
 11142                           ; 1 bytes @ 0x2
 11143                           
 11144  0022                     colorDec@input:	
 11145                           ; 1 bytes @ 0x2
 11146                           
 11147  0022                     getManualColor@input:	
 11148                           ; 1 bytes @ 0x2
 11149                           
 11150  0022                     I2C1_MasterWriteTRBBuild@address:	
 11151                           ; 1 bytes @ 0x2
 11152                           
 11153  0022                     ___lwdiv@dividend:	
 11154                           ; 2 bytes @ 0x2
 11155                           
 11156                           
 11157                           ; 2 bytes @ 0x2
 11158  0022                     	ds	1
 11159  0023                     ??_CONTROL_MANUAL:	
 11160  0023                     ??_init:	
 11161                           ; 1 bytes @ 0x3
 11162                           
 11163  0023                     I2C1_MasterTRBInsert@count:	
 11164                           ; 1 bytes @ 0x3
 11165                           
 11166  0023                     strlen@a:	
 11167                           ; 1 bytes @ 0x3
 11168                           
 11169                           
 11170                           ; 2 bytes @ 0x3
 11171  0023                     	ds	1
 11172  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11173  0024                     ??___lwdiv:	
 11174                           ; 1 bytes @ 0x4
 11175                           
 11176  0024                     ??___xxtofl:	
 11177                           ; 1 bytes @ 0x4
 11178                           
 11179  0024                     init@btn:	
 11180                           ; 1 bytes @ 0x4
 11181                           
 11182  0024                     __Umul8_16@product:	
 11183                           ; 1 bytes @ 0x4
 11184                           
 11185                           
 11186                           ; 2 bytes @ 0x4
 11187  0024                     	ds	1
 11188  0025                     ??_BUTTONS_init:	
 11189  0025                     BUTTONS_task@i:	
 11190                           ; 1 bytes @ 0x5
 11191                           
 11192  0025                     CONTROL_MANUAL@input:	
 11193                           ; 1 bytes @ 0x5
 11194                           
 11195  0025                     ___lwdiv@quotient:	
 11196                           ; 1 bytes @ 0x5
 11197                           
 11198                           
 11199                           ; 2 bytes @ 0x5
 11200  0025                     	ds	1
 11201  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11202  0026                     BUTTONS_task@time:	
 11203                           ; 1 bytes @ 0x6
 11204                           
 11205  0026                     __Umul8_16@word_mpld:	
 11206                           ; 2 bytes @ 0x6
 11207                           
 11208                           
 11209                           ; 2 bytes @ 0x6
 11210  0026                     	ds	1
 11211  0027                     ?_I2C1_MasterWrite:	
 11212  0027                     I2C1_MasterWrite@length:	
 11213                           ; 1 bytes @ 0x7
 11214                           
 11215  0027                     ___lwdiv@counter:	
 11216                           ; 1 bytes @ 0x7
 11217                           
 11218                           
 11219                           ; 1 bytes @ 0x7
 11220  0027                     	ds	1
 11221  0028                     ??_BEAT_task:	
 11222  0028                     ?___lwmod:	
 11223                           ; 1 bytes @ 0x8
 11224                           
 11225  0028                     BUTTONS_task@btn:	
 11226                           ; 2 bytes @ 0x8
 11227                           
 11228  0028                     ___xxtofl@sign:	
 11229                           ; 1 bytes @ 0x8
 11230                           
 11231  0028                     __Umul8_16@multiplier:	
 11232                           ; 1 bytes @ 0x8
 11233                           
 11234  0028                     I2C1_MasterWrite@address:	
 11235                           ; 1 bytes @ 0x8
 11236                           
 11237  0028                     ___lwmod@divisor:	
 11238                           ; 2 bytes @ 0x8
 11239                           
 11240                           
 11241                           ; 2 bytes @ 0x8
 11242  0028                     	ds	1
 11243  0029                     ___xxtofl@exp:	
 11244                           
 11245                           ; 1 bytes @ 0x9
 11246  0029                     	ds	1
 11247  002A                     I2C1_MasterWrite@pflag:	
 11248  002A                     BEAT_task@offset:	
 11249                           ; 1 bytes @ 0xA
 11250                           
 11251  002A                     ___lwmod@dividend:	
 11252                           ; 2 bytes @ 0xA
 11253                           
 11254  002A                     ___xxtofl@arg:	
 11255                           ; 2 bytes @ 0xA
 11256                           
 11257                           
 11258                           ; 4 bytes @ 0xA
 11259  002A                     	ds	1
 11260  002B                     ??_I2C1_MasterWrite:	
 11261                           
 11262                           ; 1 bytes @ 0xB
 11263  002B                     	ds	1
 11264  002C                     ??___lwmod:	
 11265                           
 11266                           ; 1 bytes @ 0xC
 11267  002C                     	ds	1
 11268  002D                     I2C1_MasterWrite@pdata:	
 11269  002D                     ___lwmod@counter:	
 11270                           ; 1 bytes @ 0xD
 11271                           
 11272                           
 11273                           ; 1 bytes @ 0xD
 11274  002D                     	ds	1
 11275  002E                     ?_writeData:	
 11276  002E                     ?___fldiv:	
 11277                           ; 1 bytes @ 0xE
 11278                           
 11279  002E                     writeData@data:	
 11280                           ; 4 bytes @ 0xE
 11281                           
 11282  002E                     ___fldiv@a:	
 11283                           ; 1 bytes @ 0xE
 11284                           
 11285                           
 11286                           ; 4 bytes @ 0xE
 11287  002E                     	ds	1
 11288  002F                     ??_writeData:	
 11289                           
 11290                           ; 1 bytes @ 0xF
 11291  002F                     	ds	3
 11292  0032                     writeData@address:	
 11293  0032                     ___fldiv@b:	
 11294                           ; 1 bytes @ 0x12
 11295                           
 11296                           
 11297                           ; 4 bytes @ 0x12
 11298  0032                     	ds	1
 11299  0033                     writeData@status:	
 11300                           
 11301                           ; 1 bytes @ 0x13
 11302  0033                     	ds	1
 11303  0034                     ??_TM1650_enable:	
 11304  0034                     ?_TM1650_fastPrintNum:	
 11305                           ; 1 bytes @ 0x14
 11306                           
 11307  0034                     ?_TM1650_setDigit:	
 11308                           ; 1 bytes @ 0x14
 11309                           
 11310  0034                     TM1650_enable@enable:	
 11311                           ; 1 bytes @ 0x14
 11312                           
 11313  0034                     TM1650_setDigit@data:	
 11314                           ; 1 bytes @ 0x14
 11315                           
 11316  0034                     TM1650_fastPrintNum@num:	
 11317                           ; 1 bytes @ 0x14
 11318                           
 11319                           
 11320                           ; 2 bytes @ 0x14
 11321  0034                     	ds	1
 11322  0035                     ??_TM1650_setDigit:	
 11323                           
 11324                           ; 1 bytes @ 0x15
 11325  0035                     	ds	1
 11326  0036                     ??_TM1650_fastPrintNum:	
 11327  0036                     ??___fldiv:	
 11328                           ; 1 bytes @ 0x16
 11329                           
 11330  0036                     TM1650_setDigit@digit:	
 11331                           ; 1 bytes @ 0x16
 11332                           
 11333                           
 11334                           ; 1 bytes @ 0x16
 11335  0036                     	ds	1
 11336  0037                     ??_DMX_init:	
 11337  0037                     ??_CONTROL_DMX:	
 11338                           ; 1 bytes @ 0x17
 11339                           
 11340  0037                     ??_address_inc:	
 11341                           ; 1 bytes @ 0x17
 11342                           
 11343  0037                     ??_address_dec:	
 11344                           ; 1 bytes @ 0x17
 11345                           
 11346  0037                     ??_putch:	
 11347                           ; 1 bytes @ 0x17
 11348                           
 11349                           
 11350                           ; 1 bytes @ 0x17
 11351  0037                     	ds	1
 11352  0038                     putch@n:	
 11353                           
 11354                           ; 1 bytes @ 0x18
 11355  0038                     	ds	1
 11356  0039                     ?_fputc:	
 11357  0039                     fputc@c:	
 11358                           ; 2 bytes @ 0x19
 11359                           
 11360                           
 11361                           ; 2 bytes @ 0x19
 11362  0039                     	ds	2
 11363  003B                     fputc@fp:	
 11364  003B                     ___fldiv@rem:	
 11365                           ; 1 bytes @ 0x1B
 11366                           
 11367                           
 11368                           ; 4 bytes @ 0x1B
 11369  003B                     	ds	1
 11370  003C                     ??_fputc:	
 11371                           
 11372                           ; 1 bytes @ 0x1C
 11373  003C                     	ds	3
 11374  003F                     ___fldiv@sign:	
 11375                           
 11376                           ; 1 bytes @ 0x1F
 11377  003F                     	ds	1
 11378  0040                     ___fldiv@new_exp:	
 11379                           
 11380                           ; 2 bytes @ 0x20
 11381  0040                     	ds	1
 11382  0041                     ?_fputs:	
 11383  0041                     fputs@fp:	
 11384                           ; 2 bytes @ 0x21
 11385                           
 11386                           
 11387                           ; 1 bytes @ 0x21
 11388  0041                     	ds	1
 11389  0042                     ??_fputs:	
 11390  0042                     ___fldiv@grs:	
 11391                           ; 1 bytes @ 0x22
 11392                           
 11393                           
 11394                           ; 4 bytes @ 0x22
 11395  0042                     	ds	3
 11396  0045                     fputs@c:	
 11397                           
 11398                           ; 1 bytes @ 0x25
 11399  0045                     	ds	1
 11400  0046                     ___fldiv@bexp:	
 11401  0046                     fputs@i:	
 11402                           ; 1 bytes @ 0x26
 11403                           
 11404                           
 11405                           ; 2 bytes @ 0x26
 11406  0046                     	ds	1
 11407  0047                     ___fldiv@aexp:	
 11408                           
 11409                           ; 1 bytes @ 0x27
 11410  0047                     	ds	1
 11411  0048                     ?___flmul:	
 11412  0048                     fputs@s:	
 11413                           ; 4 bytes @ 0x28
 11414                           
 11415  0048                     ___flmul@b:	
 11416                           ; 1 bytes @ 0x28
 11417                           
 11418                           
 11419                           ; 4 bytes @ 0x28
 11420  0048                     	ds	1
 11421  0049                     ?_pad:	
 11422  0049                     pad@buf:	
 11423                           ; 2 bytes @ 0x29
 11424                           
 11425                           
 11426                           ; 1 bytes @ 0x29
 11427  0049                     	ds	1
 11428  004A                     pad@p:	
 11429                           
 11430                           ; 2 bytes @ 0x2A
 11431  004A                     	ds	2
 11432  004C                     ??_pad:	
 11433  004C                     ___flmul@a:	
 11434                           ; 1 bytes @ 0x2C
 11435                           
 11436                           
 11437                           ; 4 bytes @ 0x2C
 11438  004C                     	ds	1
 11439  004D                     pad@i:	
 11440                           
 11441                           ; 2 bytes @ 0x2D
 11442  004D                     	ds	2
 11443  004F                     pad@w:	
 11444                           
 11445                           ; 2 bytes @ 0x2F
 11446  004F                     	ds	1
 11447  0050                     ??___flmul:	
 11448                           
 11449                           ; 1 bytes @ 0x30
 11450  0050                     	ds	1
 11451  0051                     pad@fp:	
 11452                           
 11453                           ; 1 bytes @ 0x31
 11454  0051                     	ds	1
 11455  0052                     ?_ctoa:	
 11456  0052                     ctoa@c:	
 11457                           ; 2 bytes @ 0x32
 11458                           
 11459                           
 11460                           ; 1 bytes @ 0x32
 11461  0052                     	ds	2
 11462  0054                     ??_ctoa:	
 11463                           
 11464                           ; 1 bytes @ 0x34
 11465  0054                     	ds	1
 11466  0055                     ___flmul@sign:	
 11467  0055                     ctoa@w:	
 11468                           ; 1 bytes @ 0x35
 11469                           
 11470                           
 11471                           ; 2 bytes @ 0x35
 11472  0055                     	ds	1
 11473  0056                     ___flmul@aexp:	
 11474                           
 11475                           ; 1 bytes @ 0x36
 11476  0056                     	ds	1
 11477  0057                     ctoa@fp:	
 11478  0057                     ___flmul@grs:	
 11479                           ; 1 bytes @ 0x37
 11480                           
 11481                           
 11482                           ; 4 bytes @ 0x37
 11483  0057                     	ds	1
 11484  0058                     ?_vfpfcnvrt:	
 11485  0058                     vfpfcnvrt@fmt:	
 11486                           ; 2 bytes @ 0x38
 11487                           
 11488                           
 11489                           ; 1 bytes @ 0x38
 11490  0058                     	ds	1
 11491  0059                     vfpfcnvrt@ap:	
 11492                           
 11493                           ; 1 bytes @ 0x39
 11494  0059                     	ds	1
 11495  005A                     ??_vfpfcnvrt:	
 11496                           
 11497                           ; 1 bytes @ 0x3A
 11498  005A                     	ds	1
 11499  005B                     ___flmul@bexp:	
 11500                           
 11501                           ; 1 bytes @ 0x3B
 11502  005B                     	ds	1
 11503  005C                     ___flmul@prod:	
 11504                           
 11505                           ; 4 bytes @ 0x3C
 11506  005C                     	ds	3
 11507  005F                     vfpfcnvrt@c:	
 11508                           
 11509                           ; 1 bytes @ 0x3F
 11510  005F                     	ds	1
 11511  0060                     vfpfcnvrt@fp:	
 11512  0060                     ___flmul@temp:	
 11513                           ; 1 bytes @ 0x40
 11514                           
 11515                           
 11516                           ; 2 bytes @ 0x40
 11517  0060                     	ds	1
 11518  0061                     ?_vfprintf:	
 11519  0061                     vfprintf@fmt:	
 11520                           ; 2 bytes @ 0x41
 11521                           
 11522                           
 11523                           ; 2 bytes @ 0x41
 11524  0061                     	ds	1
 11525  0062                     ?___fltol:	
 11526  0062                     ___fltol@f1:	
 11527                           ; 4 bytes @ 0x42
 11528                           
 11529                           
 11530                           ; 4 bytes @ 0x42
 11531  0062                     	ds	1
 11532  0063                     vfprintf@ap:	
 11533                           
 11534                           ; 1 bytes @ 0x43
 11535  0063                     	ds	1
 11536  0064                     ??_vfprintf:	
 11537                           
 11538                           ; 1 bytes @ 0x44
 11539  0064                     	ds	2
 11540  0066                     ??___fltol:	
 11541  0066                     vfprintf@fp:	
 11542                           ; 1 bytes @ 0x46
 11543                           
 11544                           
 11545                           ; 1 bytes @ 0x46
 11546  0066                     	ds	1
 11547  0067                     vfprintf@cfmt:	
 11548                           
 11549                           ; 2 bytes @ 0x47
 11550  0067                     	ds	2
 11551  0069                     ??_printf:	
 11552                           
 11553                           ; 1 bytes @ 0x49
 11554  0069                     	ds	2
 11555  006B                     ___fltol@sign1:	
 11556                           
 11557                           ; 1 bytes @ 0x4B
 11558  006B                     	ds	1
 11559  006C                     ___fltol@exp1:	
 11560  006C                     printf@ap:	
 11561                           ; 1 bytes @ 0x4C
 11562                           
 11563                           
 11564                           ; 1 bytes @ 0x4C
 11565  006C                     	ds	1
 11566  006D                     ??_TM1650_init:	
 11567  006D                     ??_menuSelection:	
 11568                           ; 1 bytes @ 0x4D
 11569                           
 11570  006D                     ??_PWM3_LoadDutyValue:	
 11571                           ; 1 bytes @ 0x4D
 11572                           
 11573  006D                     ??_PWM4_LoadDutyValue:	
 11574                           ; 1 bytes @ 0x4D
 11575                           
 11576  006D                     ??_PWM1_LoadDutyValue:	
 11577                           ; 1 bytes @ 0x4D
 11578                           
 11579  006D                     ??_PWM2_LoadDutyValue:	
 11580                           ; 1 bytes @ 0x4D
 11581                           
 11582  006D                     beatBrightnessCalculation@temp:	
 11583                           ; 1 bytes @ 0x4D
 11584                           
 11585                           
 11586                           ; 1 bytes @ 0x4D
 11587  006D                     	ds	1
 11588  006E                     ??_beatColorCreator:	
 11589                           
 11590                           ; 1 bytes @ 0x4E
 11591  006E                     	ds	1
 11592  006F                     CONTROLLER_task@isActive:	
 11593  006F                     LED_task_BEAT_STROBE@beatState:	
 11594                           ; 1 bytes @ 0x4F
 11595                           
 11596                           
 11597                           ; 1 bytes @ 0x4F
 11598  006F                     	ds	1
 11599                           
 11600                           	psect	maintext
 11601  14AF                     __pmaintext:	
 11602 ;;
 11603 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11604 ;;
 11605 ;; *************** function _main *****************
 11606 ;; Defined at:
 11607 ;;		line 58 in file "main.c"
 11608 ;; Parameters:    Size  Location     Type
 11609 ;;		None
 11610 ;; Auto vars:     Size  Location     Type
 11611 ;;		None
 11612 ;; Return value:  Size  Location     Type
 11613 ;;                  1    wreg      void 
 11614 ;; Registers used:
 11615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11616 ;; Tracked objects:
 11617 ;;		On entry : B3F/0
 11618 ;;		On exit  : 0/0
 11619 ;;		Unchanged: 0/0
 11620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11623 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11624 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11625 ;;Total ram usage:        2 bytes
 11626 ;; Hardware stack levels required when called:   19
 11627 ;; This function calls:
 11628 ;;		_BEAT_init
 11629 ;;		_BEAT_task
 11630 ;;		_BUTTONS_init
 11631 ;;		_BUTTONS_task
 11632 ;;		_CLOCK_getTime
 11633 ;;		_CLOCK_init
 11634 ;;		_CONTROLLER_task
 11635 ;;		_DMX_init
 11636 ;;		_LED_init
 11637 ;;		_LED_task
 11638 ;;		_SYSTEM_Initialize
 11639 ;;		_TM1650_init
 11640 ;; This function is called by:
 11641 ;;		Startup code after reset
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           
 11646                           ;psect for function _main
 11647  14AF                     _main:	
 11648                           
 11649                           ;main.c: 61:     SYSTEM_Initialize();
 11650                           
 11651                           ;incstack = 0
 11652 ;; hardware stack exceeded
 11653                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11654  14AF  3191  21F6  3194   	fcall	_SYSTEM_Initialize
 11655                           
 11656                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11657  14B2  3015               	movlw	21
 11658  14B3  0142               	movlb	2	; select bank2
 11659  14B4  00EF               	movwf	(??_main^(0+256)+1)
 11660  14B5  304B               	movlw	75
 11661  14B6  00EE               	movwf	??_main^(0+256)
 11662  14B7  30BE               	movlw	190
 11663  14B8                     u9077:	
 11664  14B8  0B89               	decfsz	9,f
 11665  14B9  2CB8               	goto	u9077
 11666  14BA  0BEE               	decfsz	??_main^(0+256),f
 11667  14BB  2CB8               	goto	u9077
 11668  14BC  0BEF               	decfsz	(??_main^(0+256)+1),f
 11669  14BD  2CB8               	goto	u9077
 11670  14BE  0000               	nop
 11671                           
 11672                           ;main.c: 63:     CLOCK_init();
 11673  14BF  319E  269A  3194   	fcall	_CLOCK_init
 11674                           
 11675                           ;main.c: 64:     BUTTONS_init();
 11676  14C2  3194  24EB  3194   	fcall	_BUTTONS_init
 11677                           
 11678                           ;main.c: 65:     BEAT_init();
 11679  14C5  3190  202C  3194   	fcall	_BEAT_init
 11680                           
 11681                           ;main.c: 66:     LED_init();
 11682  14C8  319E  26A2  3194   	fcall	_LED_init
 11683                           
 11684                           ;main.c: 68:     (INTCONbits.GIE = 1);
 11685  14CB  178B               	bsf	11,7	;volatile
 11686                           
 11687                           ;main.c: 69:     (INTCONbits.PEIE = 1);
 11688  14CC  170B               	bsf	11,6	;volatile
 11689                           
 11690                           ;main.c: 71:     TM1650_init();
 11691  14CD  319F  27EC  3194   	fcall	_TM1650_init
 11692                           
 11693                           ;main.c: 72:     DMX_init();
 11694  14D0  319F  27B1  3194   	fcall	_DMX_init
 11695                           
 11696                           ;main.c: 73:     startTime = CLOCK_getTime();
 11697  14D3  319E  26C5  3194   	fcall	_CLOCK_getTime
 11698  14D6  0140               	movlb	0	; select bank0
 11699  14D7  0821               	movf	?_CLOCK_getTime+1,w
 11700  14D8  0142               	movlb	2	; select bank2
 11701  14D9  00CB               	movwf	(_startTime+1)^(0+256)
 11702  14DA  0140               	movlb	0	; select bank0
 11703  14DB  0820               	movf	?_CLOCK_getTime,w
 11704  14DC  0142               	movlb	2	; select bank2
 11705  14DD  00CA               	movwf	_startTime^(0+256)
 11706  14DE                     l8733:	
 11707                           
 11708                           ;main.c: 78:     {;main.c: 79:         BUTTONS_task();
 11709  14DE  318D  25C0  3194   	fcall	_BUTTONS_task
 11710                           
 11711                           ;main.c: 80:         CONTROLLER_task();
 11712  14E1  3182  22BC  3194   	fcall	_CONTROLLER_task
 11713                           
 11714                           ;main.c: 81:         BEAT_task();
 11715  14E4  318C  240F  3194   	fcall	_BEAT_task
 11716                           
 11717                           ;main.c: 82:         LED_task();
 11718  14E7  3195  25E1  3194   	fcall	_LED_task
 11719  14EA  2CDE               	goto	l8733
 11720  14EB                     __end_of_main:	
 11721                           
 11722                           	psect	text1
 11723  1FEC                     __ptext1:	
 11724 ;; *************** function _TM1650_init *****************
 11725 ;; Defined at:
 11726 ;;		line 51 in file "tm1650.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;		None
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;		None
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  1    wreg      void 
 11733 ;; Registers used:
 11734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11735 ;; Tracked objects:
 11736 ;;		On entry : 0/0
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11744 ;;Total ram usage:        0 bytes
 11745 ;; Hardware stack levels used:    1
 11746 ;; Hardware stack levels required when called:   17
 11747 ;; This function calls:
 11748 ;;		_TM1650_enable
 11749 ;;		_printf
 11750 ;; This function is called by:
 11751 ;;		_main
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           
 11756                           ;psect for function _TM1650_init
 11757  1FEC                     _TM1650_init:	
 11758                           
 11759                           ;tm1650.c: 53:     TM1650_enable(1);
 11760                           
 11761                           ;incstack = 0
 11762 ;; hardware stack exceeded
 11763                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11764  1FEC  3001               	movlw	1
 11765  1FED  3190  2002  319F   	fcall	_TM1650_enable
 11766                           
 11767                           ;tm1650.c: 54:     printf("    ");
 11768  1FF0  308D               	movlw	low (STR_12| (0+32768))
 11769  1FF1  0141               	movlb	1	; select bank1
 11770  1FF2  00C7               	movwf	printf@fmt^(0+128)
 11771  1FF3  30A0               	movlw	high (STR_12| (0+32768))
 11772  1FF4  00C8               	movwf	(printf@fmt^(0+128)+1)
 11773  1FF5  3190  2017  319F   	fcall	_printf
 11774                           
 11775                           ;tm1650.c: 55:     printf("\r");
 11776  1FF8  3067               	movlw	low ((STR_22+4)| (0+32768))
 11777  1FF9  0141               	movlb	1	; select bank1
 11778  1FFA  00C7               	movwf	printf@fmt^(0+128)
 11779  1FFB  30A0               	movlw	high ((STR_22+4)| (0+32768))
 11780  1FFC  00C8               	movwf	(printf@fmt^(0+128)+1)
 11781  1FFD  3190  2017         	fcall	_printf
 11782  1FFF  0008               	return
 11783  2000                     __end_of_TM1650_init:	
 11784                           
 11785                           	psect	text2
 11786  11F6                     __ptext2:	
 11787 ;; *************** function _SYSTEM_Initialize *****************
 11788 ;; Defined at:
 11789 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11790 ;; Parameters:    Size  Location     Type
 11791 ;;		None
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;		None
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  1    wreg      void 
 11796 ;; Registers used:
 11797 ;;		wreg, status,2, status,0, pclath, cstack
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11807 ;;Total ram usage:        0 bytes
 11808 ;; Hardware stack levels used:    1
 11809 ;; Hardware stack levels required when called:    6
 11810 ;; This function calls:
 11811 ;;		_ADCC_Initialize
 11812 ;;		_EUSART1_Initialize
 11813 ;;		_I2C1_Initialize
 11814 ;;		_OSCILLATOR_Initialize
 11815 ;;		_PIN_MANAGER_Initialize
 11816 ;;		_PMD_Initialize
 11817 ;;		_PWM1_Initialize
 11818 ;;		_PWM2_Initialize
 11819 ;;		_PWM3_Initialize
 11820 ;;		_PWM4_Initialize
 11821 ;;		_TMR0_Initialize
 11822 ;;		_TMR2_Initialize
 11823 ;; This function is called by:
 11824 ;;		_main
 11825 ;; This function uses a non-reentrant model
 11826 ;;
 11827                           
 11828                           
 11829                           ;psect for function _SYSTEM_Initialize
 11830  11F6                     _SYSTEM_Initialize:	
 11831                           
 11832                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11833                           
 11834                           ;incstack = 0
 11835                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11836  11F6  319F  2704  3191   	fcall	_PMD_Initialize
 11837                           
 11838                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11839  11F9  3193  23A6  3191   	fcall	_PIN_MANAGER_Initialize
 11840                           
 11841                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11842  11FC  3187  27F7  3191   	fcall	_OSCILLATOR_Initialize
 11843                           
 11844                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 11845  11FF  3190  20BE  3191   	fcall	_I2C1_Initialize
 11846                           
 11847                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 11848  1202  319F  270E  3191   	fcall	_PWM1_Initialize
 11849                           
 11850                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 11851  1205  319F  2719  3191   	fcall	_PWM2_Initialize
 11852                           
 11853                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 11854  1208  3192  2266  3191   	fcall	_ADCC_Initialize
 11855                           
 11856                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 11857  120B  319F  272F  3191   	fcall	_PWM4_Initialize
 11858                           
 11859                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 11860  120E  319F  2724  3191   	fcall	_PWM3_Initialize
 11861                           
 11862                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 11863  1211  319F  2760  3191   	fcall	_TMR2_Initialize
 11864                           
 11865                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 11866  1214  319F  27D8  3191   	fcall	_TMR0_Initialize
 11867                           
 11868                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 11869  1217  3193  2373         	fcall	_EUSART1_Initialize
 11870  1219  0008               	return
 11871  121A                     __end_of_SYSTEM_Initialize:	
 11872                           
 11873                           	psect	text3
 11874  1F60                     __ptext3:	
 11875 ;; *************** function _TMR2_Initialize *****************
 11876 ;; Defined at:
 11877 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;		None
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;		None
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  1    wreg      void 
 11884 ;; Registers used:
 11885 ;;		wreg, status,2
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11895 ;;Total ram usage:        0 bytes
 11896 ;; Hardware stack levels used:    1
 11897 ;; Hardware stack levels required when called:    4
 11898 ;; This function calls:
 11899 ;;		Nothing
 11900 ;; This function is called by:
 11901 ;;		_SYSTEM_Initialize
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           
 11906                           ;psect for function _TMR2_Initialize
 11907  1F60                     _TMR2_Initialize:	
 11908                           
 11909                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11910                           
 11911                           ;incstack = 0
 11912                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11913  1F60  3001               	movlw	1
 11914  1F61  0145               	movlb	5	; select bank5
 11915  1F62  0090               	movwf	16	;volatile
 11916                           
 11917                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11918  1F63  018F               	clrf	15	;volatile
 11919                           
 11920                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11921  1F64  0191               	clrf	17	;volatile
 11922                           
 11923                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 11924  1F65  30FF               	movlw	255
 11925  1F66  008D               	movwf	13	;volatile
 11926                           
 11927                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11928  1F67  018C               	clrf	12	;volatile
 11929                           
 11930                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11931  1F68  014E               	movlb	14	; select bank14
 11932  1F69  1090               	bcf	16,1	;volatile
 11933                           
 11934                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 11935  1F6A  30F0               	movlw	240
 11936  1F6B  0145               	movlb	5	; select bank5
 11937  1F6C  008E               	movwf	14	;volatile
 11938  1F6D  0008               	return
 11939  1F6E                     __end_of_TMR2_Initialize:	
 11940                           
 11941                           	psect	text4
 11942  1FD8                     __ptext4:	
 11943 ;; *************** function _TMR0_Initialize *****************
 11944 ;; Defined at:
 11945 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;		None
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;		None
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  1    wreg      void 
 11952 ;; Registers used:
 11953 ;;		wreg, status,2, status,0, pclath, cstack
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11963 ;;Total ram usage:        0 bytes
 11964 ;; Hardware stack levels used:    1
 11965 ;; Hardware stack levels required when called:    5
 11966 ;; This function calls:
 11967 ;;		_TMR0_SetInterruptHandler
 11968 ;; This function is called by:
 11969 ;;		_SYSTEM_Initialize
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           
 11974                           ;psect for function _TMR0_Initialize
 11975  1FD8                     _TMR0_Initialize:	
 11976                           
 11977                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 11978                           
 11979                           ;incstack = 0
 11980                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11981  1FD8  3045               	movlw	69
 11982  1FD9  014B               	movlb	11	; select bank11
 11983  1FDA  009F               	movwf	31	;volatile
 11984                           
 11985                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 11986  1FDB  30F9               	movlw	249
 11987  1FDC  009D               	movwf	29	;volatile
 11988                           
 11989                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 11990  1FDD  019C               	clrf	28	;volatile
 11991                           
 11992                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 11993  1FDE  014E               	movlb	14	; select bank14
 11994  1FDF  128C               	bcf	12,5	;volatile
 11995                           
 11996                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 11997  1FE0  1696               	bsf	22,5	;volatile
 11998                           
 11999                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12000  1FE1  306E               	movlw	low _TMR0_DefaultInterruptHandler
 12001  1FE2  0140               	movlb	0	; select bank0
 12002  1FE3  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12003  1FE4  301E               	movlw	high _TMR0_DefaultInterruptHandler
 12004  1FE5  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12005  1FE6  319E  26CE         	fcall	_TMR0_SetInterruptHandler
 12006                           
 12007                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12008  1FE8  3080               	movlw	128
 12009  1FE9  014B               	movlb	11	; select bank11
 12010  1FEA  009E               	movwf	30	;volatile
 12011  1FEB  0008               	return
 12012  1FEC                     __end_of_TMR0_Initialize:	
 12013                           
 12014                           	psect	text5
 12015  1F2F                     __ptext5:	
 12016 ;; *************** function _PWM4_Initialize *****************
 12017 ;; Defined at:
 12018 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;		None
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;		None
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  1    wreg      void 
 12025 ;; Registers used:
 12026 ;;		wreg, status,2, status,0
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12036 ;;Total ram usage:        0 bytes
 12037 ;; Hardware stack levels used:    1
 12038 ;; Hardware stack levels required when called:    4
 12039 ;; This function calls:
 12040 ;;		Nothing
 12041 ;; This function is called by:
 12042 ;;		_SYSTEM_Initialize
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           
 12047                           ;psect for function _PWM4_Initialize
 12048  1F2F                     _PWM4_Initialize:	
 12049                           
 12050                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12051                           
 12052                           ;incstack = 0
 12053                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12054  1F2F  308C               	movlw	140
 12055  1F30  0146               	movlb	6	; select bank6
 12056  1F31  009A               	movwf	26	;volatile
 12057                           
 12058                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12059  1F32  0199               	clrf	25	;volatile
 12060                           
 12061                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12062  1F33  0198               	clrf	24	;volatile
 12063                           
 12064                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12065  1F34  0144               	movlb	4	; select bank4
 12066  1F35  081E               	movf	30,w	;volatile
 12067  1F36  393F               	andlw	-193
 12068  1F37  3840               	iorlw	64
 12069  1F38  009E               	movwf	30	;volatile
 12070  1F39  0008               	return
 12071  1F3A                     __end_of_PWM4_Initialize:	
 12072                           
 12073                           	psect	text6
 12074  1F24                     __ptext6:	
 12075 ;; *************** function _PWM3_Initialize *****************
 12076 ;; Defined at:
 12077 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;		None
 12080 ;; Auto vars:     Size  Location     Type
 12081 ;;		None
 12082 ;; Return value:  Size  Location     Type
 12083 ;;                  1    wreg      void 
 12084 ;; Registers used:
 12085 ;;		wreg, status,2, status,0
 12086 ;; Tracked objects:
 12087 ;;		On entry : 0/0
 12088 ;;		On exit  : 0/0
 12089 ;;		Unchanged: 0/0
 12090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12095 ;;Total ram usage:        0 bytes
 12096 ;; Hardware stack levels used:    1
 12097 ;; Hardware stack levels required when called:    4
 12098 ;; This function calls:
 12099 ;;		Nothing
 12100 ;; This function is called by:
 12101 ;;		_SYSTEM_Initialize
 12102 ;; This function uses a non-reentrant model
 12103 ;;
 12104                           
 12105                           
 12106                           ;psect for function _PWM3_Initialize
 12107  1F24                     _PWM3_Initialize:	
 12108                           
 12109                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12110                           
 12111                           ;incstack = 0
 12112                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12113  1F24  308C               	movlw	140
 12114  1F25  0146               	movlb	6	; select bank6
 12115  1F26  0096               	movwf	22	;volatile
 12116                           
 12117                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12118  1F27  0195               	clrf	21	;volatile
 12119                           
 12120                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12121  1F28  0194               	clrf	20	;volatile
 12122                           
 12123                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12124  1F29  0144               	movlb	4	; select bank4
 12125  1F2A  081E               	movf	30,w	;volatile
 12126  1F2B  39CF               	andlw	-49
 12127  1F2C  3810               	iorlw	16
 12128  1F2D  009E               	movwf	30	;volatile
 12129  1F2E  0008               	return
 12130  1F2F                     __end_of_PWM3_Initialize:	
 12131                           
 12132                           	psect	text7
 12133  1F19                     __ptext7:	
 12134 ;; *************** function _PWM2_Initialize *****************
 12135 ;; Defined at:
 12136 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;		None
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;		None
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		wreg, status,2, status,0
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12154 ;;Total ram usage:        0 bytes
 12155 ;; Hardware stack levels used:    1
 12156 ;; Hardware stack levels required when called:    4
 12157 ;; This function calls:
 12158 ;;		Nothing
 12159 ;; This function is called by:
 12160 ;;		_SYSTEM_Initialize
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           
 12165                           ;psect for function _PWM2_Initialize
 12166  1F19                     _PWM2_Initialize:	
 12167                           
 12168                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12169                           
 12170                           ;incstack = 0
 12171                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12172  1F19  308C               	movlw	140
 12173  1F1A  0146               	movlb	6	; select bank6
 12174  1F1B  0092               	movwf	18	;volatile
 12175                           
 12176                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12177  1F1C  0191               	clrf	17	;volatile
 12178                           
 12179                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12180  1F1D  0190               	clrf	16	;volatile
 12181                           
 12182                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12183  1F1E  0144               	movlb	4	; select bank4
 12184  1F1F  081E               	movf	30,w	;volatile
 12185  1F20  39F3               	andlw	-13
 12186  1F21  3804               	iorlw	4
 12187  1F22  009E               	movwf	30	;volatile
 12188  1F23  0008               	return
 12189  1F24                     __end_of_PWM2_Initialize:	
 12190                           
 12191                           	psect	text8
 12192  1F0E                     __ptext8:	
 12193 ;; *************** function _PWM1_Initialize *****************
 12194 ;; Defined at:
 12195 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12196 ;; Parameters:    Size  Location     Type
 12197 ;;		None
 12198 ;; Auto vars:     Size  Location     Type
 12199 ;;		None
 12200 ;; Return value:  Size  Location     Type
 12201 ;;                  1    wreg      void 
 12202 ;; Registers used:
 12203 ;;		wreg, status,2, status,0
 12204 ;; Tracked objects:
 12205 ;;		On entry : 0/0
 12206 ;;		On exit  : 0/0
 12207 ;;		Unchanged: 0/0
 12208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12213 ;;Total ram usage:        0 bytes
 12214 ;; Hardware stack levels used:    1
 12215 ;; Hardware stack levels required when called:    4
 12216 ;; This function calls:
 12217 ;;		Nothing
 12218 ;; This function is called by:
 12219 ;;		_SYSTEM_Initialize
 12220 ;; This function uses a non-reentrant model
 12221 ;;
 12222                           
 12223                           
 12224                           ;psect for function _PWM1_Initialize
 12225  1F0E                     _PWM1_Initialize:	
 12226                           
 12227                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12228                           
 12229                           ;incstack = 0
 12230                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12231  1F0E  308C               	movlw	140
 12232  1F0F  0146               	movlb	6	; select bank6
 12233  1F10  008E               	movwf	14	;volatile
 12234                           
 12235                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12236  1F11  018D               	clrf	13	;volatile
 12237                           
 12238                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12239  1F12  018C               	clrf	12	;volatile
 12240                           
 12241                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12242  1F13  0144               	movlb	4	; select bank4
 12243  1F14  081E               	movf	30,w	;volatile
 12244  1F15  39FC               	andlw	-4
 12245  1F16  3801               	iorlw	1
 12246  1F17  009E               	movwf	30	;volatile
 12247  1F18  0008               	return
 12248  1F19                     __end_of_PWM1_Initialize:	
 12249                           
 12250                           	psect	text9
 12251  1F04                     __ptext9:	
 12252 ;; *************** function _PMD_Initialize *****************
 12253 ;; Defined at:
 12254 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;		None
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;		None
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  1    wreg      void 
 12261 ;; Registers used:
 12262 ;;		status,2
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12272 ;;Total ram usage:        0 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:    4
 12275 ;; This function calls:
 12276 ;;		Nothing
 12277 ;; This function is called by:
 12278 ;;		_SYSTEM_Initialize
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           
 12283                           ;psect for function _PMD_Initialize
 12284  1F04                     _PMD_Initialize:	
 12285                           
 12286                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12287                           
 12288                           ;incstack = 0
 12289                           ; Regs used in _PMD_Initialize: [status,2]
 12290  1F04  014F               	movlb	15	; select bank15
 12291  1F05  0196               	clrf	22	;volatile
 12292                           
 12293                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12294  1F06  0197               	clrf	23	;volatile
 12295                           
 12296                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12297  1F07  0198               	clrf	24	;volatile
 12298                           
 12299                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12300  1F08  0199               	clrf	25	;volatile
 12301                           
 12302                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12303  1F09  019A               	clrf	26	;volatile
 12304                           
 12305                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12306  1F0A  019B               	clrf	27	;volatile
 12307                           
 12308                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12309  1F0B  019C               	clrf	28	;volatile
 12310                           
 12311                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12312  1F0C  019D               	clrf	29	;volatile
 12313  1F0D  0008               	return
 12314  1F0E                     __end_of_PMD_Initialize:	
 12315                           
 12316                           	psect	text10
 12317  13A6                     __ptext10:	
 12318 ;; *************** function _PIN_MANAGER_Initialize *****************
 12319 ;; Defined at:
 12320 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12321 ;; Parameters:    Size  Location     Type
 12322 ;;		None
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;		None
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  1    wreg      void 
 12327 ;; Registers used:
 12328 ;;		wreg, status,2
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12338 ;;Total ram usage:        0 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:    4
 12341 ;; This function calls:
 12342 ;;		Nothing
 12343 ;; This function is called by:
 12344 ;;		_SYSTEM_Initialize
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           
 12349                           ;psect for function _PIN_MANAGER_Initialize
 12350  13A6                     _PIN_MANAGER_Initialize:	
 12351                           
 12352                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12353                           
 12354                           ;incstack = 0
 12355                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12356  13A6  0140               	movlb	0	; select bank0
 12357  13A7  0198               	clrf	24	;volatile
 12358                           
 12359                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12360  13A8  0199               	clrf	25	;volatile
 12361                           
 12362                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12363  13A9  019A               	clrf	26	;volatile
 12364                           
 12365                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12366  13AA  303F               	movlw	63
 12367  13AB  0092               	movwf	18	;volatile
 12368                           
 12369                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12370  13AC  30F0               	movlw	240
 12371  13AD  0093               	movwf	19	;volatile
 12372                           
 12373                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x26;
 12374  13AE  3026               	movlw	38
 12375  13AF  0094               	movwf	20	;volatile
 12376                           
 12377                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12378  13B0  30FF               	movlw	255
 12379  13B1  017E               	movlb	62	; select bank62
 12380  13B2  00CE               	movwf	78	;volatile
 12381                           
 12382                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12383  13B3  30E0               	movlw	224
 12384  13B4  00C3               	movwf	67	;volatile
 12385                           
 12386                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12387  13B5  3007               	movlw	7
 12388  13B6  00B8               	movwf	56	;volatile
 12389                           
 12390                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12391  13B7  01C4               	clrf	68	;volatile
 12392                           
 12393                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12394  13B8  01B9               	clrf	57	;volatile
 12395                           
 12396                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12397  13B9  01CF               	clrf	79	;volatile
 12398                           
 12399                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12400  13BA  01BA               	clrf	58	;volatile
 12401                           
 12402                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12403  13BB  01C5               	clrf	69	;volatile
 12404                           
 12405                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12406  13BC  01D0               	clrf	80	;volatile
 12407                           
 12408                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12409  13BD  3037               	movlw	55
 12410  13BE  00BB               	movwf	59	;volatile
 12411                           
 12412                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12413  13BF  30F0               	movlw	240
 12414  13C0  00C6               	movwf	70	;volatile
 12415                           
 12416                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12417  13C1  30FF               	movlw	255
 12418  13C2  00D1               	movwf	81	;volatile
 12419                           
 12420                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12421  13C3  3005               	movlw	5
 12422  13C4  017D               	movlb	61	; select bank61
 12423  13C5  00C5               	movwf	69	;volatile
 12424                           
 12425                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12426  13C6  3014               	movlw	20
 12427  13C7  017E               	movlb	62	; select bank62
 12428  13C8  0094               	movwf	20	;volatile
 12429                           
 12430                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12431  13C9  300B               	movlw	11
 12432  13CA  00A3               	movwf	35	;volatile
 12433                           
 12434                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12435  13CB  300C               	movlw	12
 12436  13CC  00A4               	movwf	36	;volatile
 12437                           
 12438                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12439  13CD  3013               	movlw	19
 12440  13CE  0095               	movwf	21	;volatile
 12441                           
 12442                           ;mcc_generated_files/pin_manager.c: 111:     RC6PPS = 0x0A;
 12443  13CF  300A               	movlw	10
 12444  13D0  00A6               	movwf	38	;volatile
 12445                           
 12446                           ;mcc_generated_files/pin_manager.c: 112:     RC7PPS = 0x09;
 12447  13D1  3009               	movlw	9
 12448  13D2  00A7               	movwf	39	;volatile
 12449                           
 12450                           ;mcc_generated_files/pin_manager.c: 113:     SSP1DATPPS = 0x04;
 12451  13D3  3004               	movlw	4
 12452  13D4  017D               	movlb	61	; select bank61
 12453  13D5  00C6               	movwf	70	;volatile
 12454                           
 12455                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0C;
 12456  13D6  300C               	movlw	12
 12457  13D7  00CB               	movwf	75	;volatile
 12458  13D8  0008               	return
 12459  13D9                     __end_of_PIN_MANAGER_Initialize:	
 12460                           
 12461                           	psect	text11
 12462  07F7                     __ptext11:	
 12463 ;; *************** function _OSCILLATOR_Initialize *****************
 12464 ;; Defined at:
 12465 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12466 ;; Parameters:    Size  Location     Type
 12467 ;;		None
 12468 ;; Auto vars:     Size  Location     Type
 12469 ;;		None
 12470 ;; Return value:  Size  Location     Type
 12471 ;;                  1    wreg      void 
 12472 ;; Registers used:
 12473 ;;		wreg, status,2
 12474 ;; Tracked objects:
 12475 ;;		On entry : 0/0
 12476 ;;		On exit  : 0/0
 12477 ;;		Unchanged: 0/0
 12478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12483 ;;Total ram usage:        0 bytes
 12484 ;; Hardware stack levels used:    1
 12485 ;; Hardware stack levels required when called:    4
 12486 ;; This function calls:
 12487 ;;		Nothing
 12488 ;; This function is called by:
 12489 ;;		_SYSTEM_Initialize
 12490 ;; This function uses a non-reentrant model
 12491 ;;
 12492                           
 12493                           
 12494                           ;psect for function _OSCILLATOR_Initialize
 12495  07F7                     _OSCILLATOR_Initialize:	
 12496                           
 12497                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12498                           
 12499                           ;incstack = 0
 12500                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12501  07F7  3060               	movlw	96
 12502  07F8  0151               	movlb	17	; select bank17
 12503  07F9  008D               	movwf	13	;volatile
 12504                           
 12505                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12506  07FA  018F               	clrf	15	;volatile
 12507                           
 12508                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12509  07FB  0191               	clrf	17	;volatile
 12510                           
 12511                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12512  07FC  3006               	movlw	6
 12513  07FD  0093               	movwf	19	;volatile
 12514                           
 12515                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12516  07FE  0192               	clrf	18	;volatile
 12517  07FF  0008               	return
 12518  0800                     __end_of_OSCILLATOR_Initialize:	
 12519                           
 12520                           	psect	text12
 12521  10BE                     __ptext12:	
 12522 ;; *************** function _I2C1_Initialize *****************
 12523 ;; Defined at:
 12524 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12525 ;; Parameters:    Size  Location     Type
 12526 ;;		None
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;		None
 12529 ;; Return value:  Size  Location     Type
 12530 ;;                  1    wreg      void 
 12531 ;; Registers used:
 12532 ;;		wreg, status,2
 12533 ;; Tracked objects:
 12534 ;;		On entry : 0/0
 12535 ;;		On exit  : 0/0
 12536 ;;		Unchanged: 0/0
 12537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12540 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12541 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12542 ;;Total ram usage:        1 bytes
 12543 ;; Hardware stack levels used:    1
 12544 ;; Hardware stack levels required when called:    4
 12545 ;; This function calls:
 12546 ;;		Nothing
 12547 ;; This function is called by:
 12548 ;;		_SYSTEM_Initialize
 12549 ;; This function uses a non-reentrant model
 12550 ;;
 12551                           
 12552                           
 12553                           ;psect for function _I2C1_Initialize
 12554  10BE                     _I2C1_Initialize:	
 12555                           
 12556                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12557                           
 12558                           ;incstack = 0
 12559                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12560  10BE  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12561  10BF  0140               	movlb	0	; select bank0
 12562  10C0  00A0               	movwf	??_I2C1_Initialize
 12563  10C1  0820               	movf	??_I2C1_Initialize,w
 12564  10C2  0141               	movlb	1	; select bank1
 12565  10C3  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12566                           
 12567                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12568  10C4  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12569  10C5  0140               	movlb	0	; select bank0
 12570  10C6  00A0               	movwf	??_I2C1_Initialize
 12571  10C7  0820               	movf	??_I2C1_Initialize,w
 12572  10C8  0141               	movlb	1	; select bank1
 12573  10C9  00A0               	movwf	_i2c1_object^(0+128)
 12574                           
 12575                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12576  10CA  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12577                           
 12578                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12579  10CB  1022               	bcf	(_i2c1_object^(0+128)+2),0
 12580                           
 12581                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12582  10CC  01A4               	clrf	(_i2c1_object^(0+128)+4)
 12583                           
 12584                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12585  10CD  0143               	movlb	3	; select bank3
 12586  10CE  018F               	clrf	15	;volatile
 12587                           
 12588                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12589  10CF  3028               	movlw	40
 12590  10D0  0090               	movwf	16	;volatile
 12591                           
 12592                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12593  10D1  0192               	clrf	18	;volatile
 12594                           
 12595                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12596  10D2  304F               	movlw	79
 12597  10D3  008D               	movwf	13	;volatile
 12598                           
 12599                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12600  10D4  014E               	movlb	14	; select bank14
 12601  10D5  100F               	bcf	15,0	;volatile
 12602                           
 12603                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12604  10D6  108F               	bcf	15,1	;volatile
 12605                           
 12606                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12607  10D7  1419               	bsf	25,0	;volatile
 12608                           
 12609                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12610  10D8  1499               	bsf	25,1	;volatile
 12611  10D9  0008               	return
 12612  10DA                     __end_of_I2C1_Initialize:	
 12613                           
 12614                           	psect	text13
 12615  1373                     __ptext13:	
 12616 ;; *************** function _EUSART1_Initialize *****************
 12617 ;; Defined at:
 12618 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12619 ;; Parameters:    Size  Location     Type
 12620 ;;		None
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;		None
 12623 ;; Return value:  Size  Location     Type
 12624 ;;                  1    wreg      void 
 12625 ;; Registers used:
 12626 ;;		wreg, status,2, status,0, pclath, cstack
 12627 ;; Tracked objects:
 12628 ;;		On entry : 0/0
 12629 ;;		On exit  : 0/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12636 ;;Total ram usage:        0 bytes
 12637 ;; Hardware stack levels used:    1
 12638 ;; Hardware stack levels required when called:    5
 12639 ;; This function calls:
 12640 ;;		_EUSART1_SetErrorHandler
 12641 ;;		_EUSART1_SetFramingErrorHandler
 12642 ;;		_EUSART1_SetOverrunErrorHandler
 12643 ;;		_EUSART1_SetRxInterruptHandler
 12644 ;; This function is called by:
 12645 ;;		_SYSTEM_Initialize
 12646 ;; This function uses a non-reentrant model
 12647 ;;
 12648                           
 12649                           
 12650                           ;psect for function _EUSART1_Initialize
 12651  1373                     _EUSART1_Initialize:	
 12652                           
 12653                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12654                           
 12655                           ;incstack = 0
 12656                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12657  1373  014E               	movlb	14	; select bank14
 12658  1374  1299               	bcf	25,5	;volatile
 12659                           
 12660                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12661  1375  30D9               	movlw	low _EUSART1_Receive_ISR
 12662  1376  0140               	movlb	0	; select bank0
 12663  1377  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12664  1378  3013               	movlw	high _EUSART1_Receive_ISR
 12665  1379  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12666  137A  319E  26D7  3193   	fcall	_EUSART1_SetRxInterruptHandler
 12667                           
 12668                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12669  137D  3008               	movlw	8
 12670  137E  0142               	movlb	2	; select bank2
 12671  137F  009F               	movwf	31	;volatile
 12672                           
 12673                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12674  1380  3090               	movlw	144
 12675  1381  009D               	movwf	29	;volatile
 12676                           
 12677                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12678  1382  3004               	movlw	4
 12679  1383  009E               	movwf	30	;volatile
 12680                           
 12681                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12682  1384  301F               	movlw	31
 12683  1385  009B               	movwf	27	;volatile
 12684                           
 12685                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12686  1386  019C               	clrf	28	;volatile
 12687                           
 12688                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12689  1387  306D               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12690  1388  0140               	movlb	0	; select bank0
 12691  1389  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12692  138A  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12693  138B  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12694  138C  319E  26F2  3193   	fcall	_EUSART1_SetFramingErrorHandler
 12695                           
 12696                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12697  138F  3081               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12698  1390  0140               	movlb	0	; select bank0
 12699  1391  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12700  1392  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12701  1393  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12702  1394  319E  26FB  3193   	fcall	_EUSART1_SetOverrunErrorHandler
 12703                           
 12704                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12705  1397  3074               	movlw	low _EUSART1_DefaultErrorHandler
 12706  1398  0140               	movlb	0	; select bank0
 12707  1399  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12708  139A  301E               	movlw	high _EUSART1_DefaultErrorHandler
 12709  139B  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12710  139C  319E  26E9         	fcall	_EUSART1_SetErrorHandler
 12711                           
 12712                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12713  139E  0141               	movlb	1	; select bank1
 12714  139F  01C5               	clrf	_eusart1RxLastError^(0+128)	;volatile
 12715                           
 12716                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12717  13A0  01F9               	clrf	_eusart1RxHead	;volatile
 12718                           
 12719                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12720  13A1  01F8               	clrf	_eusart1RxTail	;volatile
 12721                           
 12722                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12723  13A2  01C6               	clrf	_eusart1RxCount^(0+128)	;volatile
 12724                           
 12725                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12726  13A3  014E               	movlb	14	; select bank14
 12727  13A4  1699               	bsf	25,5	;volatile
 12728  13A5  0008               	return
 12729  13A6                     __end_of_EUSART1_Initialize:	
 12730                           
 12731                           	psect	text14
 12732  1EFB                     __ptext14:	
 12733 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12734 ;; Defined at:
 12735 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12736 ;; Parameters:    Size  Location     Type
 12737 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12738 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12739 ;; Auto vars:     Size  Location     Type
 12740 ;;		None
 12741 ;; Return value:  Size  Location     Type
 12742 ;;                  1    wreg      void 
 12743 ;; Registers used:
 12744 ;;		wreg
 12745 ;; Tracked objects:
 12746 ;;		On entry : 0/0
 12747 ;;		On exit  : 0/0
 12748 ;;		Unchanged: 0/0
 12749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12753 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12754 ;;Total ram usage:        2 bytes
 12755 ;; Hardware stack levels used:    1
 12756 ;; Hardware stack levels required when called:    4
 12757 ;; This function calls:
 12758 ;;		Nothing
 12759 ;; This function is called by:
 12760 ;;		_EUSART1_Initialize
 12761 ;; This function uses a non-reentrant model
 12762 ;;
 12763                           
 12764                           
 12765                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12766  1EFB                     _EUSART1_SetOverrunErrorHandler:	
 12767                           
 12768                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12769                           
 12770                           ;incstack = 0
 12771                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12772  1EFB  0140               	movlb	0	; select bank0
 12773  1EFC  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12774  1EFD  0142               	movlb	2	; select bank2
 12775  1EFE  00DF               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12776  1EFF  0140               	movlb	0	; select bank0
 12777  1F00  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12778  1F01  0142               	movlb	2	; select bank2
 12779  1F02  00DE               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12780  1F03  0008               	return
 12781  1F04                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12782                           
 12783                           	psect	text15
 12784  1EF2                     __ptext15:	
 12785 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12786 ;; Defined at:
 12787 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12790 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;		None
 12793 ;; Return value:  Size  Location     Type
 12794 ;;                  1    wreg      void 
 12795 ;; Registers used:
 12796 ;;		wreg
 12797 ;; Tracked objects:
 12798 ;;		On entry : 0/0
 12799 ;;		On exit  : 0/0
 12800 ;;		Unchanged: 0/0
 12801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12805 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12806 ;;Total ram usage:        2 bytes
 12807 ;; Hardware stack levels used:    1
 12808 ;; Hardware stack levels required when called:    4
 12809 ;; This function calls:
 12810 ;;		Nothing
 12811 ;; This function is called by:
 12812 ;;		_EUSART1_Initialize
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           
 12817                           ;psect for function _EUSART1_SetFramingErrorHandler
 12818  1EF2                     _EUSART1_SetFramingErrorHandler:	
 12819                           
 12820                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12821                           
 12822                           ;incstack = 0
 12823                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12824  1EF2  0140               	movlb	0	; select bank0
 12825  1EF3  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12826  1EF4  0142               	movlb	2	; select bank2
 12827  1EF5  00E1               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12828  1EF6  0140               	movlb	0	; select bank0
 12829  1EF7  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12830  1EF8  0142               	movlb	2	; select bank2
 12831  1EF9  00E0               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12832  1EFA  0008               	return
 12833  1EFB                     __end_of_EUSART1_SetFramingErrorHandler:	
 12834                           
 12835                           	psect	text16
 12836  1EE9                     __ptext16:	
 12837 ;; *************** function _EUSART1_SetErrorHandler *****************
 12838 ;; Defined at:
 12839 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12842 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12843 ;; Auto vars:     Size  Location     Type
 12844 ;;		None
 12845 ;; Return value:  Size  Location     Type
 12846 ;;                  1    wreg      void 
 12847 ;; Registers used:
 12848 ;;		wreg
 12849 ;; Tracked objects:
 12850 ;;		On entry : 0/0
 12851 ;;		On exit  : 0/0
 12852 ;;		Unchanged: 0/0
 12853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12857 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12858 ;;Total ram usage:        2 bytes
 12859 ;; Hardware stack levels used:    1
 12860 ;; Hardware stack levels required when called:    4
 12861 ;; This function calls:
 12862 ;;		Nothing
 12863 ;; This function is called by:
 12864 ;;		_EUSART1_Initialize
 12865 ;; This function uses a non-reentrant model
 12866 ;;
 12867                           
 12868                           
 12869                           ;psect for function _EUSART1_SetErrorHandler
 12870  1EE9                     _EUSART1_SetErrorHandler:	
 12871                           
 12872                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 12873                           
 12874                           ;incstack = 0
 12875                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 12876  1EE9  0140               	movlb	0	; select bank0
 12877  1EEA  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 12878  1EEB  0142               	movlb	2	; select bank2
 12879  1EEC  00DD               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 12880  1EED  0140               	movlb	0	; select bank0
 12881  1EEE  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 12882  1EEF  0142               	movlb	2	; select bank2
 12883  1EF0  00DC               	movwf	_EUSART1_ErrorHandler^(0+256)
 12884  1EF1  0008               	return
 12885  1EF2                     __end_of_EUSART1_SetErrorHandler:	
 12886                           
 12887                           	psect	text17
 12888  1266                     __ptext17:	
 12889 ;; *************** function _ADCC_Initialize *****************
 12890 ;; Defined at:
 12891 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12892 ;; Parameters:    Size  Location     Type
 12893 ;;		None
 12894 ;; Auto vars:     Size  Location     Type
 12895 ;;		None
 12896 ;; Return value:  Size  Location     Type
 12897 ;;                  1    wreg      void 
 12898 ;; Registers used:
 12899 ;;		wreg, status,2, status,0, pclath, cstack
 12900 ;; Tracked objects:
 12901 ;;		On entry : 0/0
 12902 ;;		On exit  : 0/0
 12903 ;;		Unchanged: 0/0
 12904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12909 ;;Total ram usage:        0 bytes
 12910 ;; Hardware stack levels used:    1
 12911 ;; Hardware stack levels required when called:    5
 12912 ;; This function calls:
 12913 ;;		_ADCC_SetADTIInterruptHandler
 12914 ;; This function is called by:
 12915 ;;		_SYSTEM_Initialize
 12916 ;; This function uses a non-reentrant model
 12917 ;;
 12918                           
 12919                           
 12920                           ;psect for function _ADCC_Initialize
 12921  1266                     _ADCC_Initialize:	
 12922                           
 12923                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12924                           
 12925                           ;incstack = 0
 12926                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12927  1266  0141               	movlb	1	; select bank1
 12928  1267  018C               	clrf	12	;volatile
 12929                           
 12930                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12931  1268  018D               	clrf	13	;volatile
 12932                           
 12933                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12934  1269  018E               	clrf	14	;volatile
 12935                           
 12936                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12937  126A  018F               	clrf	15	;volatile
 12938                           
 12939                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12940  126B  0192               	clrf	18	;volatile
 12941                           
 12942                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12943  126C  0193               	clrf	19	;volatile
 12944                           
 12945                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12946  126D  0198               	clrf	24	;volatile
 12947                           
 12948                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12949  126E  019A               	clrf	26	;volatile
 12950                           
 12951                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12952  126F  019F               	clrf	31	;volatile
 12953                           
 12954                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12955  1270  0142               	movlb	2	; select bank2
 12956  1271  018C               	clrf	12	;volatile
 12957                           
 12958                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12959  1272  018D               	clrf	13	;volatile
 12960                           
 12961                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12962  1273  018E               	clrf	14	;volatile
 12963                           
 12964                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12965  1274  018F               	clrf	15	;volatile
 12966                           
 12967                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12968  1275  0190               	clrf	16	;volatile
 12969                           
 12970                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12971  1276  0192               	clrf	18	;volatile
 12972                           
 12973                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 12974  1277  3054               	movlw	84
 12975  1278  0093               	movwf	19	;volatile
 12976                           
 12977                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 12978  1279  3056               	movlw	86
 12979  127A  0094               	movwf	20	;volatile
 12980                           
 12981                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12982  127B  0195               	clrf	21	;volatile
 12983                           
 12984                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 12985  127C  0196               	clrf	22	;volatile
 12986                           
 12987                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12988  127D  0197               	clrf	23	;volatile
 12989                           
 12990                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12991  127E  0198               	clrf	24	;volatile
 12992                           
 12993                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 12994  127F  30D4               	movlw	212
 12995  1280  0091               	movwf	17	;volatile
 12996                           
 12997                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 12998  1281  014E               	movlb	14	; select bank14
 12999  1282  108D               	bcf	13,1	;volatile
 13000                           
 13001                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 13002  1283  1497               	bsf	23,1	;volatile
 13003                           
 13004                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 13005  1284  306C               	movlw	low _ADCC_DefaultInterruptHandler
 13006  1285  0140               	movlb	0	; select bank0
 13007  1286  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13008  1287  301E               	movlw	high _ADCC_DefaultInterruptHandler
 13009  1288  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13010  1289  319E  26AA         	fcall	_ADCC_SetADTIInterruptHandler
 13011  128B  0008               	return
 13012  128C                     __end_of_ADCC_Initialize:	
 13013                           
 13014                           	psect	text18
 13015  15E1                     __ptext18:	
 13016 ;; *************** function _LED_task *****************
 13017 ;; Defined at:
 13018 ;;		line 54 in file "led.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;		None
 13021 ;; Auto vars:     Size  Location     Type
 13022 ;;		None
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  1    wreg      void 
 13025 ;; Registers used:
 13026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13027 ;; Tracked objects:
 13028 ;;		On entry : 0/0
 13029 ;;		On exit  : 0/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13034 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13035 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13036 ;;Total ram usage:        2 bytes
 13037 ;; Hardware stack levels used:    1
 13038 ;; Hardware stack levels required when called:    9
 13039 ;; This function calls:
 13040 ;;		_LED_setColor
 13041 ;;		_LED_task_ANIMATION
 13042 ;;		_LED_task_BEAT_CONTINUOUS
 13043 ;;		_LED_task_BEAT_FADE
 13044 ;;		_LED_task_BEAT_MIXED
 13045 ;;		_LED_task_BEAT_STROBE
 13046 ;;		_LED_task_DMX
 13047 ;;		_LED_task_MANUAL
 13048 ;;		_beatColorCreator
 13049 ;;		_getIsHold
 13050 ;;		_getMode
 13051 ;; This function is called by:
 13052 ;;		_main
 13053 ;; This function uses a non-reentrant model
 13054 ;;
 13055                           
 13056                           
 13057                           ;psect for function _LED_task
 13058  15E1                     _LED_task:	
 13059                           
 13060                           ;led.c: 56:     switch(getMode()) {
 13061                           
 13062                           ;incstack = 0
 13063                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13064  15E1  2E1D               	goto	l8699
 13065  15E2                     l8677:	
 13066                           
 13067                           ;led.c: 58:             LED_task_DMX();
 13068  15E2  3196  26A6         	fcall	_LED_task_DMX
 13069                           
 13070                           ;led.c: 59:             break;
 13071  15E4  0008               	return
 13072  15E5                     l8679:	
 13073                           
 13074                           ;led.c: 62:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13075  15E5  3190  2000  3195   	fcall	_getIsHold
 13076  15E8  3A00               	xorlw	0
 13077  15E9  1903               	skipnz
 13078  15EA  2DFF               	goto	l8683
 13079  15EB  0141               	movlb	1	; select bank1
 13080  15EC  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13081  15ED  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13082  15EE  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13083  15EF  3000               	movlw	0
 13084  15F0  318A  229E  3195   	fcall	_beatColorCreator
 13085  15F3  0141               	movlb	1	; select bank1
 13086  15F4  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13087  15F5  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13088  15F6  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13089  15F7  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13090  15F8  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13091  15F9  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13092  15FA  0850               	movf	?_beatColorCreator^(0+128),w
 13093  15FB  00DD               	movwf	LED_setColor@input^(0+128)
 13094  15FC  3185  25DC         	fcall	_LED_setColor
 13095  15FE  0008               	return
 13096  15FF                     l8683:	
 13097  15FF  318C  24E1         	fcall	_LED_task_BEAT_STROBE
 13098  1601  0008               	return
 13099  1602                     l8685:	
 13100                           
 13101                           ;led.c: 67:             LED_task_BEAT_FADE();
 13102  1602  319E  2671         	fcall	_LED_task_BEAT_FADE
 13103                           
 13104                           ;led.c: 68:             break;
 13105  1604  0008               	return
 13106  1605                     l8687:	
 13107                           
 13108                           ;led.c: 71:             LED_task_BEAT_CONTINUOUS();
 13109  1605  319E  2670         	fcall	_LED_task_BEAT_CONTINUOUS
 13110                           
 13111                           ;led.c: 72:             break;
 13112  1607  0008               	return
 13113  1608                     l8689:	
 13114                           
 13115                           ;led.c: 75:             LED_task_BEAT_MIXED();
 13116  1608  319E  2672         	fcall	_LED_task_BEAT_MIXED
 13117                           
 13118                           ;led.c: 76:             break;
 13119  160A  0008               	return
 13120  160B                     l8691:	
 13121                           
 13122                           ;led.c: 80:             LED_task_ANIMATION();
 13123  160B  319E  266F         	fcall	_LED_task_ANIMATION
 13124                           
 13125                           ;led.c: 81:             break;
 13126  160D  0008               	return
 13127  160E                     l8693:	
 13128                           
 13129                           ;led.c: 84:             LED_task_MANUAL();
 13130  160E  319E  2673  3195   	fcall	_LED_task_MANUAL
 13131                           
 13132                           ;led.c: 85:             LED_setColor(manual);
 13133  1611  0141               	movlb	1	; select bank1
 13134  1612  0828               	movf	(_manual+3)^(0+128),w
 13135  1613  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13136  1614  0827               	movf	(_manual+2)^(0+128),w
 13137  1615  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13138  1616  0826               	movf	(_manual+1)^(0+128),w
 13139  1617  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13140  1618  0825               	movf	_manual^(0+128),w
 13141  1619  00DD               	movwf	LED_setColor@input^(0+128)
 13142  161A  3185  25DC         	fcall	_LED_setColor
 13143                           
 13144                           ;led.c: 86:             break;
 13145  161C  0008               	return
 13146  161D                     l8699:	
 13147  161D  3188  2000  3195   	fcall	_getMode
 13148  1620  0141               	movlb	1	; select bank1
 13149  1621  00EA               	movwf	??_LED_task^(0+128)
 13150  1622  01EB               	clrf	(??_LED_task^(0+128)+1)
 13151                           
 13152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13153                           ; Switch size 1, requested type "simple"
 13154                           ; Number of cases is 1, Range of values is 0 to 0
 13155                           ; switch strategies available:
 13156                           ; Name         Instructions Cycles
 13157                           ; simple_byte            4     3 (average)
 13158                           ; direct_byte            8     6 (fixed)
 13159                           ; jumptable            260     6 (fixed)
 13160                           ;	Chosen strategy is simple_byte
 13161  1623  086B               	movf	(??_LED_task+1)^(0+128),w
 13162  1624  3A00               	xorlw	0	; case 0
 13163  1625  1903               	skipnz
 13164  1626  2E28               	goto	l9009
 13165  1627  2E3F               	goto	l1375
 13166  1628                     l9009:	
 13167                           
 13168                           ; Switch size 1, requested type "simple"
 13169                           ; Number of cases is 7, Range of values is 0 to 6
 13170                           ; switch strategies available:
 13171                           ; Name         Instructions Cycles
 13172                           ; direct_byte           20     6 (fixed)
 13173                           ; simple_byte           22    12 (average)
 13174                           ; jumptable            260     6 (fixed)
 13175                           ;	Chosen strategy is simple_byte
 13176  1628  086A               	movf	??_LED_task^(0+128),w
 13177  1629  3A00               	xorlw	0	; case 0
 13178  162A  1903               	skipnz
 13179  162B  2DE2               	goto	l8677
 13180  162C  3A01               	xorlw	1	; case 1
 13181  162D  1903               	skipnz
 13182  162E  2DE5               	goto	l8679
 13183  162F  3A03               	xorlw	3	; case 2
 13184  1630  1903               	skipnz
 13185  1631  2E0B               	goto	l8691
 13186  1632  3A01               	xorlw	1	; case 3
 13187  1633  1903               	skipnz
 13188  1634  2E0E               	goto	l8693
 13189  1635  3A07               	xorlw	7	; case 4
 13190  1636  1903               	skipnz
 13191  1637  2E02               	goto	l8685
 13192  1638  3A01               	xorlw	1	; case 5
 13193  1639  1903               	skipnz
 13194  163A  2E05               	goto	l8687
 13195  163B  3A03               	xorlw	3	; case 6
 13196  163C  1903               	skipnz
 13197  163D  2E08               	goto	l8689
 13198  163E  2E3F               	goto	l1375
 13199  163F                     l1375:	
 13200  163F  0008               	return
 13201  1640                     __end_of_LED_task:	
 13202                           
 13203                           	psect	text19
 13204  0800                     __ptext19:	
 13205 ;; *************** function _getMode *****************
 13206 ;; Defined at:
 13207 ;;		line 171 in file "controller.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;		None
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;		None
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  1    wreg      enum E10869
 13214 ;; Registers used:
 13215 ;;		wreg
 13216 ;; Tracked objects:
 13217 ;;		On entry : 0/0
 13218 ;;		On exit  : 0/0
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13225 ;;Total ram usage:        0 bytes
 13226 ;; Hardware stack levels used:    1
 13227 ;; Hardware stack levels required when called:    4
 13228 ;; This function calls:
 13229 ;;		Nothing
 13230 ;; This function is called by:
 13231 ;;		_LED_task
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           
 13236                           ;psect for function _getMode
 13237  0800                     _getMode:	
 13238                           
 13239                           ;controller.c: 172:     return currentSelection;
 13240                           
 13241                           ;incstack = 0
 13242                           ; Regs used in _getMode: [wreg]
 13243  0800  0141               	movlb	1	; select bank1
 13244  0801  0839               	movf	_currentSelection^(0+128),w
 13245  0802  0008               	return
 13246  0803                     __end_of_getMode:	
 13247                           
 13248                           	psect	text20
 13249  1000                     __ptext20:	
 13250 ;; *************** function _getIsHold *****************
 13251 ;; Defined at:
 13252 ;;		line 252 in file "controller.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;		None
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  1    wreg      _Bool 
 13259 ;; Registers used:
 13260 ;;		wreg
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/0
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13270 ;;Total ram usage:        0 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:    4
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_LED_task
 13277 ;; This function uses a non-reentrant model
 13278 ;;
 13279                           
 13280                           
 13281                           ;psect for function _getIsHold
 13282  1000                     _getIsHold:	
 13283                           
 13284                           ;controller.c: 253:     return 0;
 13285                           
 13286                           ;incstack = 0
 13287                           ; Regs used in _getIsHold: [wreg]
 13288  1000  3000               	movlw	0
 13289  1001  0008               	return
 13290  1002                     __end_of_getIsHold:	
 13291                           
 13292                           	psect	text21
 13293  1E73                     __ptext21:	
 13294 ;; *************** function _LED_task_MANUAL *****************
 13295 ;; Defined at:
 13296 ;;		line 214 in file "led.c"
 13297 ;; Parameters:    Size  Location     Type
 13298 ;;		None
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;		None
 13301 ;; Return value:  Size  Location     Type
 13302 ;;                  1    wreg      void 
 13303 ;; Registers used:
 13304 ;;		None
 13305 ;; Tracked objects:
 13306 ;;		On entry : 0/0
 13307 ;;		On exit  : 0/0
 13308 ;;		Unchanged: 0/0
 13309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13314 ;;Total ram usage:        0 bytes
 13315 ;; Hardware stack levels used:    1
 13316 ;; Hardware stack levels required when called:    4
 13317 ;; This function calls:
 13318 ;;		Nothing
 13319 ;; This function is called by:
 13320 ;;		_LED_task
 13321 ;; This function uses a non-reentrant model
 13322 ;;
 13323                           
 13324                           
 13325                           ;psect for function _LED_task_MANUAL
 13326  1E73                     _LED_task_MANUAL:	
 13327                           
 13328                           ;incstack = 0
 13329                           ; Regs used in _LED_task_MANUAL: []
 13330  1E73  0008               	return
 13331  1E74                     __end_of_LED_task_MANUAL:	
 13332                           
 13333                           	psect	text22
 13334  16A6                     __ptext22:	
 13335 ;; *************** function _LED_task_DMX *****************
 13336 ;; Defined at:
 13337 ;;		line 33 in file "led.c"
 13338 ;; Parameters:    Size  Location     Type
 13339 ;;		None
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;  dmx             4    0[BANK2 ] struct .
 13342 ;; Return value:  Size  Location     Type
 13343 ;;                  1    wreg      void 
 13344 ;; Registers used:
 13345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13346 ;; Tracked objects:
 13347 ;;		On entry : 0/0
 13348 ;;		On exit  : 0/0
 13349 ;;		Unchanged: 0/0
 13350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13352 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13353 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13354 ;;      Totals:         0       0       5       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13355 ;;Total ram usage:        9 bytes
 13356 ;; Hardware stack levels used:    1
 13357 ;; Hardware stack levels required when called:    7
 13358 ;; This function calls:
 13359 ;;		_DMX_getAddress
 13360 ;;		_LED_setColor
 13361 ;; This function is called by:
 13362 ;;		_LED_task
 13363 ;; This function uses a non-reentrant model
 13364 ;;
 13365                           
 13366                           
 13367                           ;psect for function _LED_task_DMX
 13368  16A6                     _LED_task_DMX:	
 13369                           
 13370                           ;led.c: 35:     color_t dmx;;led.c: 37:     dmx.red = dmxArray[DMX_getAddress()];
 13371                           
 13372                           ;incstack = 0
 13373                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13374  16A6  319E  267A  3196   	fcall	_DMX_getAddress
 13375  16A9  0141               	movlb	1	; select bank1
 13376  16AA  00E5               	movwf	??_LED_task_DMX^(0+128)
 13377  16AB  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13378  16AC  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13379  16AD  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13380  16AE  30EE               	movlw	238
 13381  16AF  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13382  16B0  3023               	movlw	35
 13383  16B1  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13384  16B2  0865               	movf	??_LED_task_DMX^(0+128),w
 13385  16B3  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13386  16B4  0086               	movwf	6
 13387  16B5  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13388  16B6  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13389  16B7  0087               	movwf	7
 13390  16B8  0801               	movf	1,w
 13391  16B9  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13392  16BA  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13393  16BB  0142               	movlb	2	; select bank2
 13394  16BC  00EB               	movwf	(LED_task_DMX@dmx^(0+256)+1)
 13395                           
 13396                           ;led.c: 38:     dmx.green = dmxArray[DMX_getAddress() + 1];
 13397  16BD  319E  267A  3196   	fcall	_DMX_getAddress
 13398  16C0  0141               	movlb	1	; select bank1
 13399  16C1  00E5               	movwf	??_LED_task_DMX^(0+128)
 13400  16C2  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13401  16C3  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13402  16C4  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13403  16C5  30F0               	movlw	240
 13404  16C6  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13405  16C7  3023               	movlw	35
 13406  16C8  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13407  16C9  0865               	movf	??_LED_task_DMX^(0+128),w
 13408  16CA  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13409  16CB  0086               	movwf	6
 13410  16CC  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13411  16CD  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13412  16CE  0087               	movwf	7
 13413  16CF  0801               	movf	1,w
 13414  16D0  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13415  16D1  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13416  16D2  0142               	movlb	2	; select bank2
 13417  16D3  00EC               	movwf	(LED_task_DMX@dmx^(0+256)+2)
 13418                           
 13419                           ;led.c: 39:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 13420  16D4  319E  267A  3196   	fcall	_DMX_getAddress
 13421  16D7  0141               	movlb	1	; select bank1
 13422  16D8  00E5               	movwf	??_LED_task_DMX^(0+128)
 13423  16D9  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13424  16DA  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13425  16DB  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13426  16DC  30F2               	movlw	242
 13427  16DD  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13428  16DE  3023               	movlw	35
 13429  16DF  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13430  16E0  0865               	movf	??_LED_task_DMX^(0+128),w
 13431  16E1  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13432  16E2  0086               	movwf	6
 13433  16E3  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13434  16E4  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13435  16E5  0087               	movwf	7
 13436  16E6  0801               	movf	1,w
 13437  16E7  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13438  16E8  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13439  16E9  0142               	movlb	2	; select bank2
 13440  16EA  00ED               	movwf	(LED_task_DMX@dmx^(0+256)+3)
 13441                           
 13442                           ;led.c: 40:     dmx.white = dmxArray[DMX_getAddress() + 3];
 13443  16EB  319E  267A  3196   	fcall	_DMX_getAddress
 13444  16EE  0141               	movlb	1	; select bank1
 13445  16EF  00E5               	movwf	??_LED_task_DMX^(0+128)
 13446  16F0  01E6               	clrf	(??_LED_task_DMX^(0+128)+1)
 13447  16F1  35E5               	lslf	??_LED_task_DMX^(0+128),f
 13448  16F2  0DE6               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13449  16F3  30F4               	movlw	244
 13450  16F4  00E7               	movwf	(??_LED_task_DMX+2)^(0+128)
 13451  16F5  3023               	movlw	35
 13452  16F6  00E8               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13453  16F7  0865               	movf	??_LED_task_DMX^(0+128),w
 13454  16F8  0767               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13455  16F9  0086               	movwf	6
 13456  16FA  0866               	movf	(??_LED_task_DMX+1)^(0+128),w
 13457  16FB  3D68               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13458  16FC  0087               	movwf	7
 13459  16FD  0801               	movf	1,w
 13460  16FE  00E9               	movwf	(??_LED_task_DMX+4)^(0+128)
 13461  16FF  0869               	movf	(??_LED_task_DMX+4)^(0+128),w
 13462  1700  0142               	movlb	2	; select bank2
 13463  1701  00EA               	movwf	LED_task_DMX@dmx^(0+256)
 13464                           
 13465                           ;led.c: 42:     LED_setColor(dmx);
 13466  1702  086D               	movf	(LED_task_DMX@dmx+3)^(0+256),w
 13467  1703  0141               	movlb	1	; select bank1
 13468  1704  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13469  1705  0142               	movlb	2	; select bank2
 13470  1706  086C               	movf	(LED_task_DMX@dmx+2)^(0+256),w
 13471  1707  0141               	movlb	1	; select bank1
 13472  1708  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13473  1709  0142               	movlb	2	; select bank2
 13474  170A  086B               	movf	(LED_task_DMX@dmx+1)^(0+256),w
 13475  170B  0141               	movlb	1	; select bank1
 13476  170C  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13477  170D  0142               	movlb	2	; select bank2
 13478  170E  086A               	movf	LED_task_DMX@dmx^(0+256),w
 13479  170F  0141               	movlb	1	; select bank1
 13480  1710  00DD               	movwf	LED_setColor@input^(0+128)
 13481  1711  3185  25DC         	fcall	_LED_setColor
 13482  1713  0008               	return
 13483  1714                     __end_of_LED_task_DMX:	
 13484                           
 13485                           	psect	text23
 13486  1E7A                     __ptext23:	
 13487 ;; *************** function _DMX_getAddress *****************
 13488 ;; Defined at:
 13489 ;;		line 73 in file "dmx.c"
 13490 ;; Parameters:    Size  Location     Type
 13491 ;;		None
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;		None
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  1    wreg      unsigned char 
 13496 ;; Registers used:
 13497 ;;		wreg
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13507 ;;Total ram usage:        0 bytes
 13508 ;; Hardware stack levels used:    1
 13509 ;; Hardware stack levels required when called:    4
 13510 ;; This function calls:
 13511 ;;		Nothing
 13512 ;; This function is called by:
 13513 ;;		_LED_task_DMX
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           
 13518                           ;psect for function _DMX_getAddress
 13519  1E7A                     _DMX_getAddress:	
 13520                           
 13521                           ;dmx.c: 74:     return address;
 13522                           
 13523                           ;incstack = 0
 13524                           ; Regs used in _DMX_getAddress: [wreg]
 13525  1E7A  0141               	movlb	1	; select bank1
 13526  1E7B  086C               	movf	_address^(0+128),w
 13527  1E7C  0008               	return
 13528  1E7D                     __end_of_DMX_getAddress:	
 13529                           
 13530                           	psect	text24
 13531  0CE1                     __ptext24:	
 13532 ;; *************** function _LED_task_BEAT_STROBE *****************
 13533 ;; Defined at:
 13534 ;;		line 91 in file "led.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;		None
 13537 ;; Auto vars:     Size  Location     Type
 13538 ;;  beatState       1   79[BANK0 ] _Bool 
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1    wreg      void 
 13541 ;; Registers used:
 13542 ;;		wreg, status,2, status,0, pclath, cstack
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13550 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13551 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13552 ;;Total ram usage:        3 bytes
 13553 ;; Hardware stack levels used:    1
 13554 ;; Hardware stack levels required when called:    8
 13555 ;; This function calls:
 13556 ;;		_BEAT_detected
 13557 ;;		_CLOCK_getTime
 13558 ;;		_LED_setColor
 13559 ;;		_beatColorCreator
 13560 ;; This function is called by:
 13561 ;;		_LED_task
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           
 13566                           ;psect for function _LED_task_BEAT_STROBE
 13567  0CE1                     _LED_task_BEAT_STROBE:	
 13568                           
 13569                           ;led.c: 93:     if(CLOCK_getTime() - lastLedActiveTime < 50){
 13570                           
 13571                           ;incstack = 0
 13572                           ; Regs used in _LED_task_BEAT_STROBE: [wreg+status,2+status,0+pclath+cstack]
 13573  0CE1  319E  26C5  318C   	fcall	_CLOCK_getTime
 13574  0CE4  0142               	movlb	2	; select bank2
 13575  0CE5  0838               	movf	_lastLedActiveTime^(0+256),w
 13576  0CE6  0140               	movlb	0	; select bank0
 13577  0CE7  0220               	subwf	?_CLOCK_getTime,w
 13578  0CE8  0141               	movlb	1	; select bank1
 13579  0CE9  00E5               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 13580  0CEA  0142               	movlb	2	; select bank2
 13581  0CEB  0839               	movf	(_lastLedActiveTime+1)^(0+256),w
 13582  0CEC  0140               	movlb	0	; select bank0
 13583  0CED  3B21               	subwfb	?_CLOCK_getTime+1,w
 13584  0CEE  0141               	movlb	1	; select bank1
 13585  0CEF  00E6               	movwf	(??_LED_task_BEAT_STROBE+1)^(0+128)
 13586  0CF0  3000               	movlw	0
 13587  0CF1  0266               	subwf	(??_LED_task_BEAT_STROBE+1)^(0+128),w
 13588  0CF2  3032               	movlw	50
 13589  0CF3  1903               	skipnz
 13590  0CF4  0265               	subwf	??_LED_task_BEAT_STROBE^(0+128),w
 13591  0CF5  1C03               	btfss	3,0
 13592  0CF6  0008               	return
 13593                           
 13594                           ;led.c: 98:     lastLedActiveTime = CLOCK_getTime();
 13595  0CF7  319E  26C5  318C   	fcall	_CLOCK_getTime
 13596  0CFA  0140               	movlb	0	; select bank0
 13597  0CFB  0821               	movf	?_CLOCK_getTime+1,w
 13598  0CFC  0142               	movlb	2	; select bank2
 13599  0CFD  00B9               	movwf	(_lastLedActiveTime+1)^(0+256)
 13600  0CFE  0140               	movlb	0	; select bank0
 13601  0CFF  0820               	movf	?_CLOCK_getTime,w
 13602  0D00  0142               	movlb	2	; select bank2
 13603  0D01  00B8               	movwf	_lastLedActiveTime^(0+256)
 13604                           
 13605                           ;led.c: 100:     LATC5 = 0;
 13606  0D02  0140               	movlb	0	; select bank0
 13607  0D03  129A               	bcf	26,5	;volatile
 13608                           
 13609                           ;led.c: 101:     _Bool beatState = BEAT_detected();
 13610  0D04  319E  26E0  318C   	fcall	_BEAT_detected
 13611  0D07  0141               	movlb	1	; select bank1
 13612  0D08  00E5               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 13613  0D09  0865               	movf	??_LED_task_BEAT_STROBE^(0+128),w
 13614  0D0A  0140               	movlb	0	; select bank0
 13615  0D0B  00EF               	movwf	LED_task_BEAT_STROBE@beatState
 13616                           
 13617                           ;led.c: 103:     if (beatState) {
 13618  0D0C  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 13619  0D0D  1D03               	btfss	3,2
 13620                           
 13621                           ;led.c: 104:         LATC5 = 1;
 13622  0D0E  169A               	bsf	26,5	;volatile
 13623                           
 13624                           ;led.c: 107:      if(!beatState){
 13625  0D0F  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 13626  0D10  1D03               	btfss	3,2
 13627  0D11  2D26               	goto	l8269
 13628                           
 13629                           ;led.c: 108:          LED_setColor(beatColorCreator(0,0,0,0));
 13630  0D12  0141               	movlb	1	; select bank1
 13631  0D13  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13632  0D14  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13633  0D15  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13634  0D16  3000               	movlw	0
 13635  0D17  318A  229E  318C   	fcall	_beatColorCreator
 13636  0D1A  0141               	movlb	1	; select bank1
 13637  0D1B  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13638  0D1C  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13639  0D1D  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13640  0D1E  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13641  0D1F  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13642  0D20  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13643  0D21  0850               	movf	?_beatColorCreator^(0+128),w
 13644  0D22  00DD               	movwf	LED_setColor@input^(0+128)
 13645  0D23  3185  25DC         	fcall	_LED_setColor
 13646                           
 13647                           ;led.c: 109:     } else if (currentState == 1){
 13648  0D25  0008               	return
 13649  0D26                     l8269:	
 13650  0D26  0141               	movlb	1	; select bank1
 13651  0D27  0329               	decf	_currentState^(0+128),w
 13652  0D28  042A               	iorwf	(_currentState+1)^(0+128),w
 13653  0D29  1D03               	btfss	3,2
 13654  0D2A  2D69               	goto	l8275
 13655                           
 13656                           ;led.c: 110:         LED_setColor(beatColorCreator(0,0,0,1));
 13657  0D2B  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13658  0D2C  2D51               	goto	L1
 13659  0D2D                     l8289:	
 13660                           ;led.c: 116:          LED_setColor(beatColorCreator(0,1,1,0));
 13661                           
 13662                           ;led.c: 113:          LED_setColor(beatColorCreator(0,1,0,1));
 13663                           
 13664                           
 13665                           ;led.c: 119:          LED_setColor(beatColorCreator(1,0,1,1));
 13666  0D2D  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13667  0D2E  2D49               	goto	L13
 13668  0D2F                     l8295:	
 13669                           
 13670                           ;led.c: 122:         LED_setColor(beatColorCreator(0,1,1,0));
 13671  0D2F  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13672  0D30  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13673  0D31  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13674  0D32  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13675  0D33  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13676  0D34  2D54               	goto	L2
 13677  0D35                     l8301:	
 13678                           
 13679                           ;led.c: 125:         LED_setColor(beatColorCreator(1,1,1,0));
 13680  0D35  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13681  0D36  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13682  0D37  2D40               	goto	L10
 13683  0D38                     l8307:	
 13684                           
 13685                           ;led.c: 128:         LED_setColor(beatColorCreator(1,1,0,1));
 13686  0D38  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13687  0D39  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13688  0D3A  2D45               	goto	L12
 13689  0D3B                     l8319:	
 13690                           ;led.c: 131:          LED_setColor(beatColorCreator(0,1,0,1));
 13691                           
 13692                           
 13693                           ;led.c: 134:          LED_setColor(beatColorCreator(0,0,1,1));
 13694  0D3B  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13695  0D3C  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13696  0D3D  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13697  0D3E  2D52               	goto	L9
 13698  0D3F                     l8325:	
 13699                           
 13700                           ;led.c: 137:          LED_setColor(beatColorCreator(1,0,1,0));
 13701  0D3F  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13702  0D40                     L10:	
 13703  0D40  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13704  0D41  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13705  0D42  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13706  0D43  2D4D               	goto	L8
 13707  0D44                     l8331:	
 13708                           
 13709                           ;led.c: 140:         LED_setColor(beatColorCreator(1,0,0,1));
 13710  0D44  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13711  0D45                     L12:	
 13712  0D45  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13713  0D46  2D4B               	goto	L11
 13714  0D47                     l8337:	
 13715                           
 13716                           ;led.c: 143:         LED_setColor(beatColorCreator(1,1,1,1));
 13717  0D47  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13718  0D48  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13719  0D49                     L13:	
 13720  0D49  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13721  0D4A  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13722  0D4B                     L11:	
 13723  0D4B  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13724  0D4C  0AD2               	incf	beatColorCreator@inWhite^(0+128),f
 13725  0D4D                     L8:	
 13726  0D4D  3001               	movlw	1
 13727  0D4E  2D55               	goto	L3
 13728  0D4F                     l8343:	
 13729                           
 13730                           ;led.c: 146:         LED_setColor(beatColorCreator(0,1,0,1));
 13731  0D4F  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13732  0D50  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13733  0D51                     L1:	
 13734  0D51  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13735  0D52                     L9:	
 13736  0D52  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13737  0D53  0AD2               	incf	beatColorCreator@inWhite^(0+128),f
 13738  0D54                     L2:	
 13739  0D54  3000               	movlw	0
 13740  0D55                     L3:	
 13741  0D55  318A  229E  318C   	fcall	_beatColorCreator
 13742  0D58  0141               	movlb	1	; select bank1
 13743  0D59  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13744  0D5A  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13745  0D5B  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13746  0D5C  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13747  0D5D  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13748  0D5E  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13749  0D5F  0850               	movf	?_beatColorCreator^(0+128),w
 13750  0D60  00DD               	movwf	LED_setColor@input^(0+128)
 13751  0D61  3185  25DC         	fcall	_LED_setColor
 13752                           
 13753                           ;led.c: 111:         currentState++;
 13754  0D63  3001               	movlw	1
 13755  0D64  0141               	movlb	1	; select bank1
 13756  0D65  07A9               	addwf	_currentState^(0+128),f
 13757  0D66  3000               	movlw	0
 13758  0D67  3DAA               	addwfc	(_currentState+1)^(0+128),f
 13759                           
 13760                           ;led.c: 112:     } else if(currentState == 2){
 13761  0D68  0008               	return
 13762  0D69                     l8275:	
 13763  0D69  3002               	movlw	2
 13764  0D6A  0629               	xorwf	_currentState^(0+128),w
 13765  0D6B  042A               	iorwf	(_currentState+1)^(0+128),w
 13766  0D6C  1903               	btfsc	3,2
 13767  0D6D  2D4F               	goto	l8343
 13768  0D6E  3003               	movlw	3
 13769  0D6F  0629               	xorwf	_currentState^(0+128),w
 13770  0D70  042A               	iorwf	(_currentState+1)^(0+128),w
 13771  0D71  1903               	btfsc	3,2
 13772  0D72  2D2F               	goto	l8295
 13773  0D73  3004               	movlw	4
 13774  0D74  0629               	xorwf	_currentState^(0+128),w
 13775  0D75  042A               	iorwf	(_currentState+1)^(0+128),w
 13776  0D76  1903               	btfsc	3,2
 13777  0D77  2D2D               	goto	l8289
 13778  0D78  3005               	movlw	5
 13779  0D79  0629               	xorwf	_currentState^(0+128),w
 13780  0D7A  042A               	iorwf	(_currentState+1)^(0+128),w
 13781  0D7B  1903               	btfsc	3,2
 13782  0D7C  2D2F               	goto	l8295
 13783  0D7D  3006               	movlw	6
 13784  0D7E  0629               	xorwf	_currentState^(0+128),w
 13785  0D7F  042A               	iorwf	(_currentState+1)^(0+128),w
 13786  0D80  1903               	btfsc	3,2
 13787  0D81  2D35               	goto	l8301
 13788  0D82  3008               	movlw	8
 13789  0D83  0629               	xorwf	_currentState^(0+128),w
 13790  0D84  042A               	iorwf	(_currentState+1)^(0+128),w
 13791  0D85  1903               	btfsc	3,2
 13792  0D86  2D38               	goto	l8307
 13793  0D87  3009               	movlw	9
 13794  0D88  0629               	xorwf	_currentState^(0+128),w
 13795  0D89  042A               	iorwf	(_currentState+1)^(0+128),w
 13796  0D8A  1903               	btfsc	3,2
 13797  0D8B  2D4F               	goto	l8343
 13798  0D8C  300A               	movlw	10
 13799  0D8D  0629               	xorwf	_currentState^(0+128),w
 13800  0D8E  042A               	iorwf	(_currentState+1)^(0+128),w
 13801  0D8F  1903               	btfsc	3,2
 13802  0D90  2D3B               	goto	l8319
 13803  0D91  300B               	movlw	11
 13804  0D92  0629               	xorwf	_currentState^(0+128),w
 13805  0D93  042A               	iorwf	(_currentState+1)^(0+128),w
 13806  0D94  1903               	btfsc	3,2
 13807  0D95  2D3F               	goto	l8325
 13808  0D96  300C               	movlw	12
 13809  0D97  0629               	xorwf	_currentState^(0+128),w
 13810  0D98  042A               	iorwf	(_currentState+1)^(0+128),w
 13811  0D99  1903               	btfsc	3,2
 13812  0D9A  2D44               	goto	l8331
 13813  0D9B  300D               	movlw	13
 13814  0D9C  0629               	xorwf	_currentState^(0+128),w
 13815  0D9D  042A               	iorwf	(_currentState+1)^(0+128),w
 13816  0D9E  1903               	btfsc	3,2
 13817  0D9F  2D47               	goto	l8337
 13818  0DA0  300E               	movlw	14
 13819  0DA1  0629               	xorwf	_currentState^(0+128),w
 13820  0DA2  042A               	iorwf	(_currentState+1)^(0+128),w
 13821  0DA3  1903               	btfsc	3,2
 13822  0DA4  2D4F               	goto	l8343
 13823                           
 13824                           ;led.c: 149:         LED_setColor(beatColorCreator(0,1,1,1));
 13825  0DA5  01D0               	clrf	beatColorCreator@inGreen^(0+128)
 13826  0DA6  0AD0               	incf	beatColorCreator@inGreen^(0+128),f
 13827  0DA7  01D1               	clrf	beatColorCreator@inBlue^(0+128)
 13828  0DA8  0AD1               	incf	beatColorCreator@inBlue^(0+128),f
 13829  0DA9  01D2               	clrf	beatColorCreator@inWhite^(0+128)
 13830  0DAA  0AD2               	incf	beatColorCreator@inWhite^(0+128),f
 13831  0DAB  3000               	movlw	0
 13832  0DAC  318A  229E  318C   	fcall	_beatColorCreator
 13833  0DAF  0141               	movlb	1	; select bank1
 13834  0DB0  0853               	movf	(?_beatColorCreator+3)^(0+128),w
 13835  0DB1  00E0               	movwf	(LED_setColor@input+3)^(0+128)
 13836  0DB2  0852               	movf	(?_beatColorCreator+2)^(0+128),w
 13837  0DB3  00DF               	movwf	(LED_setColor@input+2)^(0+128)
 13838  0DB4  0851               	movf	(?_beatColorCreator+1)^(0+128),w
 13839  0DB5  00DE               	movwf	(LED_setColor@input+1)^(0+128)
 13840  0DB6  0850               	movf	?_beatColorCreator^(0+128),w
 13841  0DB7  00DD               	movwf	LED_setColor@input^(0+128)
 13842  0DB8  3185  25DC         	fcall	_LED_setColor
 13843                           
 13844                           ;led.c: 150:         currentState = 1;
 13845  0DBA  3001               	movlw	1
 13846  0DBB  0141               	movlb	1	; select bank1
 13847  0DBC  00A9               	movwf	_currentState^(0+128)
 13848  0DBD  3000               	movlw	0
 13849  0DBE  00AA               	movwf	(_currentState^(0+128)+1)
 13850  0DBF  0008               	return
 13851  0DC0                     __end_of_LED_task_BEAT_STROBE:	
 13852                           
 13853                           	psect	text25
 13854  0A9E                     __ptext25:	
 13855 ;; *************** function _beatColorCreator *****************
 13856 ;; Defined at:
 13857 ;;		line 170 in file "led.c"
 13858 ;; Parameters:    Size  Location     Type
 13859 ;;  inRed           1    wreg     _Bool 
 13860 ;;  inGreen         1    9[BANK1 ] _Bool 
 13861 ;;  inBlue          1   10[BANK1 ] _Bool 
 13862 ;;  inWhite         1   11[BANK1 ] _Bool 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;  inRed           1   13[BANK1 ] _Bool 
 13865 ;;  tempColor       4   18[BANK1 ] struct .
 13866 ;; Return value:  Size  Location     Type
 13867 ;;                  4    9[BANK1 ] struct .
 13868 ;; Registers used:
 13869 ;;		wreg, status,2, status,0, pclath, cstack
 13870 ;; Tracked objects:
 13871 ;;		On entry : 0/0
 13872 ;;		On exit  : 0/0
 13873 ;;		Unchanged: 0/0
 13874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13875 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13876 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13877 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13878 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13879 ;;Total ram usage:       14 bytes
 13880 ;; Hardware stack levels used:    1
 13881 ;; Hardware stack levels required when called:    7
 13882 ;; This function calls:
 13883 ;;		___fltol
 13884 ;;		_beatBrightnessCalculation
 13885 ;; This function is called by:
 13886 ;;		_LED_task
 13887 ;;		_LED_task_BEAT_STROBE
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           
 13891                           
 13892                           ;psect for function _beatColorCreator
 13893  0A9E                     _beatColorCreator:	
 13894                           
 13895                           ;incstack = 0
 13896                           ; Regs used in _beatColorCreator: [wreg+status,2+status,0+pclath+cstack]
 13897                           ;beatColorCreator@inRed stored from wreg
 13898  0A9E  0141               	movlb	1	; select bank1
 13899  0A9F  00D4               	movwf	beatColorCreator@inRed^(0+128)
 13900                           
 13901                           ;led.c: 171:     color_t tempColor;;led.c: 173:     if(inRed)
 13902  0AA0  0854               	movf	beatColorCreator@inRed^(0+128),w
 13903  0AA1  1903               	btfsc	3,2
 13904  0AA2  2AC8               	goto	l7751
 13905                           
 13906                           ;led.c: 174:         tempColor.red = beatBrightnessCalculation();
 13907  0AA3  3197  2783  318A   	fcall	_beatBrightnessCalculation
 13908  0AA6  0141               	movlb	1	; select bank1
 13909  0AA7  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13910  0AA8  00D8               	movwf	(_beatColorCreator$3568+3)^(0+128)
 13911  0AA9  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13912  0AAA  00D7               	movwf	(_beatColorCreator$3568+2)^(0+128)
 13913  0AAB  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13914  0AAC  00D6               	movwf	(_beatColorCreator$3568+1)^(0+128)
 13915  0AAD  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 13916  0AAE  00D5               	movwf	_beatColorCreator$3568^(0+128)
 13917                           
 13918                           ;led.c: 174:         tempColor.red = beatBrightnessCalculation();
 13919  0AAF  0858               	movf	(_beatColorCreator$3568+3)^(0+128),w
 13920  0AB0  0140               	movlb	0	; select bank0
 13921  0AB1  00E5               	movwf	___fltol@f1+3
 13922  0AB2  0141               	movlb	1	; select bank1
 13923  0AB3  0857               	movf	(_beatColorCreator$3568+2)^(0+128),w
 13924  0AB4  0140               	movlb	0	; select bank0
 13925  0AB5  00E4               	movwf	___fltol@f1+2
 13926  0AB6  0141               	movlb	1	; select bank1
 13927  0AB7  0856               	movf	(_beatColorCreator$3568+1)^(0+128),w
 13928  0AB8  0140               	movlb	0	; select bank0
 13929  0AB9  00E3               	movwf	___fltol@f1+1
 13930  0ABA  0141               	movlb	1	; select bank1
 13931  0ABB  0855               	movf	_beatColorCreator$3568^(0+128),w
 13932  0ABC  0140               	movlb	0	; select bank0
 13933  0ABD  00E2               	movwf	___fltol@f1
 13934  0ABE  3196  2640  318A   	fcall	___fltol
 13935  0AC1  0140               	movlb	0	; select bank0
 13936  0AC2  0862               	movf	?___fltol,w
 13937  0AC3  00EE               	movwf	??_beatColorCreator
 13938  0AC4  086E               	movf	??_beatColorCreator,w
 13939  0AC5  0141               	movlb	1	; select bank1
 13940  0AC6  00DA               	movwf	(beatColorCreator@tempColor^(0+128)+1)
 13941  0AC7  2AC9               	goto	l7753
 13942  0AC8                     l7751:	
 13943                           
 13944                           ;led.c: 176:         tempColor.red = 0;
 13945  0AC8  01DA               	clrf	(beatColorCreator@tempColor^(0+128)+1)
 13946  0AC9                     l7753:	
 13947                           
 13948                           ;led.c: 178:     if(inBlue)
 13949  0AC9  0851               	movf	beatColorCreator@inBlue^(0+128),w
 13950  0ACA  1903               	btfsc	3,2
 13951  0ACB  2AF1               	goto	l7757
 13952                           
 13953                           ;led.c: 179:         tempColor.blue = beatBrightnessCalculation();
 13954  0ACC  3197  2783  318A   	fcall	_beatBrightnessCalculation
 13955  0ACF  0141               	movlb	1	; select bank1
 13956  0AD0  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 13957  0AD1  00D8               	movwf	(_beatColorCreator$3568+3)^(0+128)
 13958  0AD2  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 13959  0AD3  00D7               	movwf	(_beatColorCreator$3568+2)^(0+128)
 13960  0AD4  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 13961  0AD5  00D6               	movwf	(_beatColorCreator$3568+1)^(0+128)
 13962  0AD6  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 13963  0AD7  00D5               	movwf	_beatColorCreator$3568^(0+128)
 13964                           
 13965                           ;led.c: 179:         tempColor.blue = beatBrightnessCalculation();
 13966  0AD8  0858               	movf	(_beatColorCreator$3568+3)^(0+128),w
 13967  0AD9  0140               	movlb	0	; select bank0
 13968  0ADA  00E5               	movwf	___fltol@f1+3
 13969  0ADB  0141               	movlb	1	; select bank1
 13970  0ADC  0857               	movf	(_beatColorCreator$3568+2)^(0+128),w
 13971  0ADD  0140               	movlb	0	; select bank0
 13972  0ADE  00E4               	movwf	___fltol@f1+2
 13973  0ADF  0141               	movlb	1	; select bank1
 13974  0AE0  0856               	movf	(_beatColorCreator$3568+1)^(0+128),w
 13975  0AE1  0140               	movlb	0	; select bank0
 13976  0AE2  00E3               	movwf	___fltol@f1+1
 13977  0AE3  0141               	movlb	1	; select bank1
 13978  0AE4  0855               	movf	_beatColorCreator$3568^(0+128),w
 13979  0AE5  0140               	movlb	0	; select bank0
 13980  0AE6  00E2               	movwf	___fltol@f1
 13981  0AE7  3196  2640  318A   	fcall	___fltol
 13982  0AEA  0140               	movlb	0	; select bank0
 13983  0AEB  0862               	movf	?___fltol,w
 13984  0AEC  00EE               	movwf	??_beatColorCreator
 13985  0AED  086E               	movf	??_beatColorCreator,w
 13986  0AEE  0141               	movlb	1	; select bank1
 13987  0AEF  00DC               	movwf	(beatColorCreator@tempColor^(0+128)+3)
 13988  0AF0  2AF2               	goto	l7759
 13989  0AF1                     l7757:	
 13990                           
 13991                           ;led.c: 181:         tempColor.blue = 0;
 13992  0AF1  01DC               	clrf	(beatColorCreator@tempColor^(0+128)+3)
 13993  0AF2                     l7759:	
 13994                           
 13995                           ;led.c: 183:     if(inGreen)
 13996  0AF2  0850               	movf	beatColorCreator@inGreen^(0+128),w
 13997  0AF3  1903               	btfsc	3,2
 13998  0AF4  2B1A               	goto	l7763
 13999                           
 14000                           ;led.c: 184:         tempColor.green = beatBrightnessCalculation();
 14001  0AF5  3197  2783  318A   	fcall	_beatBrightnessCalculation
 14002  0AF8  0141               	movlb	1	; select bank1
 14003  0AF9  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 14004  0AFA  00D8               	movwf	(_beatColorCreator$3568+3)^(0+128)
 14005  0AFB  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 14006  0AFC  00D7               	movwf	(_beatColorCreator$3568+2)^(0+128)
 14007  0AFD  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 14008  0AFE  00D6               	movwf	(_beatColorCreator$3568+1)^(0+128)
 14009  0AFF  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 14010  0B00  00D5               	movwf	_beatColorCreator$3568^(0+128)
 14011                           
 14012                           ;led.c: 184:         tempColor.green = beatBrightnessCalculation();
 14013  0B01  0858               	movf	(_beatColorCreator$3568+3)^(0+128),w
 14014  0B02  0140               	movlb	0	; select bank0
 14015  0B03  00E5               	movwf	___fltol@f1+3
 14016  0B04  0141               	movlb	1	; select bank1
 14017  0B05  0857               	movf	(_beatColorCreator$3568+2)^(0+128),w
 14018  0B06  0140               	movlb	0	; select bank0
 14019  0B07  00E4               	movwf	___fltol@f1+2
 14020  0B08  0141               	movlb	1	; select bank1
 14021  0B09  0856               	movf	(_beatColorCreator$3568+1)^(0+128),w
 14022  0B0A  0140               	movlb	0	; select bank0
 14023  0B0B  00E3               	movwf	___fltol@f1+1
 14024  0B0C  0141               	movlb	1	; select bank1
 14025  0B0D  0855               	movf	_beatColorCreator$3568^(0+128),w
 14026  0B0E  0140               	movlb	0	; select bank0
 14027  0B0F  00E2               	movwf	___fltol@f1
 14028  0B10  3196  2640  318A   	fcall	___fltol
 14029  0B13  0140               	movlb	0	; select bank0
 14030  0B14  0862               	movf	?___fltol,w
 14031  0B15  00EE               	movwf	??_beatColorCreator
 14032  0B16  086E               	movf	??_beatColorCreator,w
 14033  0B17  0141               	movlb	1	; select bank1
 14034  0B18  00DB               	movwf	(beatColorCreator@tempColor^(0+128)+2)
 14035  0B19  2B1B               	goto	l7765
 14036  0B1A                     l7763:	
 14037                           
 14038                           ;led.c: 186:         tempColor.green = 0;
 14039  0B1A  01DB               	clrf	(beatColorCreator@tempColor^(0+128)+2)
 14040  0B1B                     l7765:	
 14041                           
 14042                           ;led.c: 188:     if(inWhite)
 14043  0B1B  0852               	movf	beatColorCreator@inWhite^(0+128),w
 14044  0B1C  1903               	btfsc	3,2
 14045  0B1D  2B43               	goto	l7769
 14046                           
 14047                           ;led.c: 189:         tempColor.white = beatBrightnessCalculation();
 14048  0B1E  3197  2783  318A   	fcall	_beatBrightnessCalculation
 14049  0B21  0141               	movlb	1	; select bank1
 14050  0B22  084A               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 14051  0B23  00D8               	movwf	(_beatColorCreator$3568+3)^(0+128)
 14052  0B24  0849               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 14053  0B25  00D7               	movwf	(_beatColorCreator$3568+2)^(0+128)
 14054  0B26  0848               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 14055  0B27  00D6               	movwf	(_beatColorCreator$3568+1)^(0+128)
 14056  0B28  0847               	movf	?_beatBrightnessCalculation^(0+128),w
 14057  0B29  00D5               	movwf	_beatColorCreator$3568^(0+128)
 14058                           
 14059                           ;led.c: 189:         tempColor.white = beatBrightnessCalculation();
 14060  0B2A  0858               	movf	(_beatColorCreator$3568+3)^(0+128),w
 14061  0B2B  0140               	movlb	0	; select bank0
 14062  0B2C  00E5               	movwf	___fltol@f1+3
 14063  0B2D  0141               	movlb	1	; select bank1
 14064  0B2E  0857               	movf	(_beatColorCreator$3568+2)^(0+128),w
 14065  0B2F  0140               	movlb	0	; select bank0
 14066  0B30  00E4               	movwf	___fltol@f1+2
 14067  0B31  0141               	movlb	1	; select bank1
 14068  0B32  0856               	movf	(_beatColorCreator$3568+1)^(0+128),w
 14069  0B33  0140               	movlb	0	; select bank0
 14070  0B34  00E3               	movwf	___fltol@f1+1
 14071  0B35  0141               	movlb	1	; select bank1
 14072  0B36  0855               	movf	_beatColorCreator$3568^(0+128),w
 14073  0B37  0140               	movlb	0	; select bank0
 14074  0B38  00E2               	movwf	___fltol@f1
 14075  0B39  3196  2640  318A   	fcall	___fltol
 14076  0B3C  0140               	movlb	0	; select bank0
 14077  0B3D  0862               	movf	?___fltol,w
 14078  0B3E  00EE               	movwf	??_beatColorCreator
 14079  0B3F  086E               	movf	??_beatColorCreator,w
 14080  0B40  0141               	movlb	1	; select bank1
 14081  0B41  00D9               	movwf	beatColorCreator@tempColor^(0+128)
 14082  0B42  2B44               	goto	l7771
 14083  0B43                     l7769:	
 14084                           
 14085                           ;led.c: 191:         tempColor.white = 0;
 14086  0B43  01D9               	clrf	beatColorCreator@tempColor^(0+128)
 14087  0B44                     l7771:	
 14088                           
 14089                           ;led.c: 193:     return tempColor;
 14090  0B44  085C               	movf	(beatColorCreator@tempColor+3)^(0+128),w
 14091  0B45  00D3               	movwf	(?_beatColorCreator+3)^(0+128)
 14092  0B46  085B               	movf	(beatColorCreator@tempColor+2)^(0+128),w
 14093  0B47  00D2               	movwf	(?_beatColorCreator+2)^(0+128)
 14094  0B48  085A               	movf	(beatColorCreator@tempColor+1)^(0+128),w
 14095  0B49  00D1               	movwf	(?_beatColorCreator+1)^(0+128)
 14096  0B4A  0859               	movf	beatColorCreator@tempColor^(0+128),w
 14097  0B4B  00D0               	movwf	?_beatColorCreator^(0+128)
 14098  0B4C  0008               	return
 14099  0B4D                     __end_of_beatColorCreator:	
 14100                           
 14101                           	psect	text26
 14102  1783                     __ptext26:	
 14103 ;; *************** function _beatBrightnessCalculation *****************
 14104 ;; Defined at:
 14105 ;;		line 155 in file "led.c"
 14106 ;; Parameters:    Size  Location     Type
 14107 ;;		None
 14108 ;; Auto vars:     Size  Location     Type
 14109 ;;  temp            1   77[BANK0 ] unsigned char 
 14110 ;; Return value:  Size  Location     Type
 14111 ;;                  4    0[BANK1 ] float 
 14112 ;; Registers used:
 14113 ;;		wreg, status,2, status,0, pclath, cstack
 14114 ;; Tracked objects:
 14115 ;;		On entry : 0/0
 14116 ;;		On exit  : 0/0
 14117 ;;		Unchanged: 0/0
 14118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14119 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14120 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14121 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14122 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14123 ;;Total ram usage:       10 bytes
 14124 ;; Hardware stack levels used:    1
 14125 ;; Hardware stack levels required when called:    6
 14126 ;; This function calls:
 14127 ;;		___fldiv
 14128 ;;		___flmul
 14129 ;;		___fltol
 14130 ;;		___xxtofl
 14131 ;; This function is called by:
 14132 ;;		_beatColorCreator
 14133 ;; This function uses a non-reentrant model
 14134 ;;
 14135                           
 14136                           
 14137                           ;psect for function _beatBrightnessCalculation
 14138  1783                     _beatBrightnessCalculation:	
 14139                           
 14140                           ;led.c: 156:     uint8_t temp = (float)(beatBrightness/9.0) * 255;
 14141                           
 14142                           ;incstack = 0
 14143                           ; Regs used in _beatBrightnessCalculation: [wreg+status,2+status,0+pclath+cstack]
 14144  1783  0141               	movlb	1	; select bank1
 14145  1784  086F               	movf	_beatBrightness^(0+128),w
 14146  1785  00CB               	movwf	??_beatBrightnessCalculation^(0+128)
 14147  1786  01CC               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 14148  1787  01CD               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 14149  1788  01CE               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 14150  1789  084E               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 14151  178A  0140               	movlb	0	; select bank0
 14152  178B  00A3               	movwf	___xxtofl@val+3
 14153  178C  0141               	movlb	1	; select bank1
 14154  178D  084D               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 14155  178E  0140               	movlb	0	; select bank0
 14156  178F  00A2               	movwf	___xxtofl@val+2
 14157  1790  0141               	movlb	1	; select bank1
 14158  1791  084C               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 14159  1792  0140               	movlb	0	; select bank0
 14160  1793  00A1               	movwf	___xxtofl@val+1
 14161  1794  0141               	movlb	1	; select bank1
 14162  1795  084B               	movf	??_beatBrightnessCalculation^(0+128),w
 14163  1796  0140               	movlb	0	; select bank0
 14164  1797  00A0               	movwf	___xxtofl@val
 14165  1798  3001               	movlw	1
 14166  1799  3188  20C7  3197   	fcall	___xxtofl
 14167  179C  0140               	movlb	0	; select bank0
 14168  179D  0823               	movf	?___xxtofl+3,w
 14169  179E  00B5               	movwf	___fldiv@b+3
 14170  179F  0822               	movf	?___xxtofl+2,w
 14171  17A0  00B4               	movwf	___fldiv@b+2
 14172  17A1  0821               	movf	?___xxtofl+1,w
 14173  17A2  00B3               	movwf	___fldiv@b+1
 14174  17A3  0820               	movf	?___xxtofl,w
 14175  17A4  00B2               	movwf	___fldiv@b
 14176  17A5  3041               	movlw	65
 14177  17A6  00B1               	movwf	___fldiv@a+3
 14178  17A7  3010               	movlw	16
 14179  17A8  00B0               	movwf	___fldiv@a+2
 14180  17A9  3000               	movlw	0
 14181  17AA  00AF               	movwf	___fldiv@a+1
 14182  17AB  3000               	movlw	0
 14183  17AC  00AE               	movwf	___fldiv@a
 14184  17AD  3184  2462  3197   	fcall	___fldiv
 14185  17B0  0140               	movlb	0	; select bank0
 14186  17B1  0831               	movf	?___fldiv+3,w
 14187  17B2  00CF               	movwf	___flmul@a+3
 14188  17B3  0830               	movf	?___fldiv+2,w
 14189  17B4  00CE               	movwf	___flmul@a+2
 14190  17B5  082F               	movf	?___fldiv+1,w
 14191  17B6  00CD               	movwf	___flmul@a+1
 14192  17B7  082E               	movf	?___fldiv,w
 14193  17B8  00CC               	movwf	___flmul@a
 14194  17B9  3043               	movlw	67
 14195  17BA  00CB               	movwf	___flmul@b+3
 14196  17BB  307F               	movlw	127
 14197  17BC  00CA               	movwf	___flmul@b+2
 14198  17BD  3000               	movlw	0
 14199  17BE  00C9               	movwf	___flmul@b+1
 14200  17BF  3000               	movlw	0
 14201  17C0  00C8               	movwf	___flmul@b
 14202  17C1  3180  2090  3197   	fcall	___flmul
 14203  17C4  0140               	movlb	0	; select bank0
 14204  17C5  084B               	movf	?___flmul+3,w
 14205  17C6  00E5               	movwf	___fltol@f1+3
 14206  17C7  084A               	movf	?___flmul+2,w
 14207  17C8  00E4               	movwf	___fltol@f1+2
 14208  17C9  0849               	movf	?___flmul+1,w
 14209  17CA  00E3               	movwf	___fltol@f1+1
 14210  17CB  0848               	movf	?___flmul,w
 14211  17CC  00E2               	movwf	___fltol@f1
 14212  17CD  3196  2640  3197   	fcall	___fltol
 14213  17D0  0140               	movlb	0	; select bank0
 14214  17D1  0862               	movf	?___fltol,w
 14215  17D2  0141               	movlb	1	; select bank1
 14216  17D3  00CF               	movwf	(??_beatBrightnessCalculation+4)^(0+128)
 14217  17D4  084F               	movf	(??_beatBrightnessCalculation+4)^(0+128),w
 14218  17D5  0140               	movlb	0	; select bank0
 14219  17D6  00ED               	movwf	beatBrightnessCalculation@temp
 14220                           
 14221                           ;led.c: 157:     return temp;
 14222  17D7  086D               	movf	beatBrightnessCalculation@temp,w
 14223  17D8  0141               	movlb	1	; select bank1
 14224  17D9  00CB               	movwf	??_beatBrightnessCalculation^(0+128)
 14225  17DA  01CC               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 14226  17DB  01CD               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 14227  17DC  01CE               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 14228  17DD  084E               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 14229  17DE  0140               	movlb	0	; select bank0
 14230  17DF  00A3               	movwf	___xxtofl@val+3
 14231  17E0  0141               	movlb	1	; select bank1
 14232  17E1  084D               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 14233  17E2  0140               	movlb	0	; select bank0
 14234  17E3  00A2               	movwf	___xxtofl@val+2
 14235  17E4  0141               	movlb	1	; select bank1
 14236  17E5  084C               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 14237  17E6  0140               	movlb	0	; select bank0
 14238  17E7  00A1               	movwf	___xxtofl@val+1
 14239  17E8  0141               	movlb	1	; select bank1
 14240  17E9  084B               	movf	??_beatBrightnessCalculation^(0+128),w
 14241  17EA  0140               	movlb	0	; select bank0
 14242  17EB  00A0               	movwf	___xxtofl@val
 14243  17EC  3000               	movlw	0
 14244  17ED  3188  20C7         	fcall	___xxtofl
 14245  17EF  0140               	movlb	0	; select bank0
 14246  17F0  0823               	movf	?___xxtofl+3,w
 14247  17F1  0141               	movlb	1	; select bank1
 14248  17F2  00CA               	movwf	(?_beatBrightnessCalculation+3)^(0+128)
 14249  17F3  0140               	movlb	0	; select bank0
 14250  17F4  0822               	movf	?___xxtofl+2,w
 14251  17F5  0141               	movlb	1	; select bank1
 14252  17F6  00C9               	movwf	(?_beatBrightnessCalculation+2)^(0+128)
 14253  17F7  0140               	movlb	0	; select bank0
 14254  17F8  0821               	movf	?___xxtofl+1,w
 14255  17F9  0141               	movlb	1	; select bank1
 14256  17FA  00C8               	movwf	(?_beatBrightnessCalculation+1)^(0+128)
 14257  17FB  0140               	movlb	0	; select bank0
 14258  17FC  0820               	movf	?___xxtofl,w
 14259  17FD  0141               	movlb	1	; select bank1
 14260  17FE  00C7               	movwf	?_beatBrightnessCalculation^(0+128)
 14261  17FF  0008               	return
 14262  1800                     __end_of_beatBrightnessCalculation:	
 14263                           
 14264                           	psect	text27
 14265  05DC                     __ptext27:	
 14266 ;; *************** function _LED_setColor *****************
 14267 ;; Defined at:
 14268 ;;		line 24 in file "led.c"
 14269 ;; Parameters:    Size  Location     Type
 14270 ;;  input           4   22[BANK1 ] struct .
 14271 ;; Auto vars:     Size  Location     Type
 14272 ;;		None
 14273 ;; Return value:  Size  Location     Type
 14274 ;;                  1    wreg      void 
 14275 ;; Registers used:
 14276 ;;		wreg, status,2, status,0, pclath, cstack
 14277 ;; Tracked objects:
 14278 ;;		On entry : 0/0
 14279 ;;		On exit  : 0/0
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14282 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14284 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14285 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14286 ;;Total ram usage:        8 bytes
 14287 ;; Hardware stack levels used:    1
 14288 ;; Hardware stack levels required when called:    6
 14289 ;; This function calls:
 14290 ;;		_PWM1_LoadDutyValue
 14291 ;;		_PWM2_LoadDutyValue
 14292 ;;		_PWM3_LoadDutyValue
 14293 ;;		_PWM4_LoadDutyValue
 14294 ;;		___fldiv
 14295 ;;		___flmul
 14296 ;;		___fltol
 14297 ;;		___xxtofl
 14298 ;; This function is called by:
 14299 ;;		_LED_task_DMX
 14300 ;;		_LED_task
 14301 ;;		_LED_task_BEAT_STROBE
 14302 ;; This function uses a non-reentrant model
 14303 ;;
 14304                           
 14305                           
 14306                           ;psect for function _LED_setColor
 14307  05DC                     _LED_setColor:	
 14308                           
 14309                           ;led.c: 25:     if(!startup){
 14310                           
 14311                           ;incstack = 0
 14312                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 14313  05DC  0141               	movlb	1	; select bank1
 14314  05DD  086E               	movf	_startup^(0+128),w
 14315  05DE  1D03               	btfss	3,2
 14316  05DF  0008               	return
 14317                           
 14318                           ;led.c: 26:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 127 );
 14319  05E0  085E               	movf	(LED_setColor@input^(0+128)+1),w
 14320  05E1  00E1               	movwf	??_LED_setColor^(0+128)
 14321  05E2  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14322  05E3  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14323  05E4  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14324  05E5  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14325  05E6  0140               	movlb	0	; select bank0
 14326  05E7  00A3               	movwf	___xxtofl@val+3
 14327  05E8  0141               	movlb	1	; select bank1
 14328  05E9  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14329  05EA  0140               	movlb	0	; select bank0
 14330  05EB  00A2               	movwf	___xxtofl@val+2
 14331  05EC  0141               	movlb	1	; select bank1
 14332  05ED  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14333  05EE  0140               	movlb	0	; select bank0
 14334  05EF  00A1               	movwf	___xxtofl@val+1
 14335  05F0  0141               	movlb	1	; select bank1
 14336  05F1  0861               	movf	??_LED_setColor^(0+128),w
 14337  05F2  0140               	movlb	0	; select bank0
 14338  05F3  00A0               	movwf	___xxtofl@val
 14339  05F4  3001               	movlw	1
 14340  05F5  3188  20C7  3185   	fcall	___xxtofl
 14341  05F8  0140               	movlb	0	; select bank0
 14342  05F9  0823               	movf	?___xxtofl+3,w
 14343  05FA  00B5               	movwf	___fldiv@b+3
 14344  05FB  0822               	movf	?___xxtofl+2,w
 14345  05FC  00B4               	movwf	___fldiv@b+2
 14346  05FD  0821               	movf	?___xxtofl+1,w
 14347  05FE  00B3               	movwf	___fldiv@b+1
 14348  05FF  0820               	movf	?___xxtofl,w
 14349  0600  00B2               	movwf	___fldiv@b
 14350  0601  3043               	movlw	67
 14351  0602  00B1               	movwf	___fldiv@a+3
 14352  0603  307F               	movlw	127
 14353  0604  00B0               	movwf	___fldiv@a+2
 14354  0605  3000               	movlw	0
 14355  0606  00AF               	movwf	___fldiv@a+1
 14356  0607  3000               	movlw	0
 14357  0608  00AE               	movwf	___fldiv@a
 14358  0609  3184  2462  3185   	fcall	___fldiv
 14359  060C  0140               	movlb	0	; select bank0
 14360  060D  0831               	movf	?___fldiv+3,w
 14361  060E  00CF               	movwf	___flmul@a+3
 14362  060F  0830               	movf	?___fldiv+2,w
 14363  0610  00CE               	movwf	___flmul@a+2
 14364  0611  082F               	movf	?___fldiv+1,w
 14365  0612  00CD               	movwf	___flmul@a+1
 14366  0613  082E               	movf	?___fldiv,w
 14367  0614  00CC               	movwf	___flmul@a
 14368  0615  3042               	movlw	66
 14369  0616  00CB               	movwf	___flmul@b+3
 14370  0617  30FE               	movlw	254
 14371  0618  00CA               	movwf	___flmul@b+2
 14372  0619  3000               	movlw	0
 14373  061A  00C9               	movwf	___flmul@b+1
 14374  061B  3000               	movlw	0
 14375  061C  00C8               	movwf	___flmul@b
 14376  061D  3180  2090  3185   	fcall	___flmul
 14377  0620  0140               	movlb	0	; select bank0
 14378  0621  084B               	movf	?___flmul+3,w
 14379  0622  00E5               	movwf	___fltol@f1+3
 14380  0623  084A               	movf	?___flmul+2,w
 14381  0624  00E4               	movwf	___fltol@f1+2
 14382  0625  0849               	movf	?___flmul+1,w
 14383  0626  00E3               	movwf	___fltol@f1+1
 14384  0627  0848               	movf	?___flmul,w
 14385  0628  00E2               	movwf	___fltol@f1
 14386  0629  3196  2640  3185   	fcall	___fltol
 14387  062C  0140               	movlb	0	; select bank0
 14388  062D  0863               	movf	?___fltol+1,w
 14389  062E  0141               	movlb	1	; select bank1
 14390  062F  00C8               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128)
 14391  0630  0140               	movlb	0	; select bank0
 14392  0631  0862               	movf	?___fltol,w
 14393  0632  0141               	movlb	1	; select bank1
 14394  0633  00C7               	movwf	PWM1_LoadDutyValue@dutyValue^(0+128)
 14395  0634  3190  20F7  3185   	fcall	_PWM1_LoadDutyValue
 14396                           
 14397                           ;led.c: 27:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 127 );
 14398  0637  0141               	movlb	1	; select bank1
 14399  0638  085F               	movf	(LED_setColor@input^(0+128)+2),w
 14400  0639  00E1               	movwf	??_LED_setColor^(0+128)
 14401  063A  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14402  063B  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14403  063C  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14404  063D  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14405  063E  0140               	movlb	0	; select bank0
 14406  063F  00A3               	movwf	___xxtofl@val+3
 14407  0640  0141               	movlb	1	; select bank1
 14408  0641  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14409  0642  0140               	movlb	0	; select bank0
 14410  0643  00A2               	movwf	___xxtofl@val+2
 14411  0644  0141               	movlb	1	; select bank1
 14412  0645  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14413  0646  0140               	movlb	0	; select bank0
 14414  0647  00A1               	movwf	___xxtofl@val+1
 14415  0648  0141               	movlb	1	; select bank1
 14416  0649  0861               	movf	??_LED_setColor^(0+128),w
 14417  064A  0140               	movlb	0	; select bank0
 14418  064B  00A0               	movwf	___xxtofl@val
 14419  064C  3001               	movlw	1
 14420  064D  3188  20C7  3185   	fcall	___xxtofl
 14421  0650  0140               	movlb	0	; select bank0
 14422  0651  0823               	movf	?___xxtofl+3,w
 14423  0652  00B5               	movwf	___fldiv@b+3
 14424  0653  0822               	movf	?___xxtofl+2,w
 14425  0654  00B4               	movwf	___fldiv@b+2
 14426  0655  0821               	movf	?___xxtofl+1,w
 14427  0656  00B3               	movwf	___fldiv@b+1
 14428  0657  0820               	movf	?___xxtofl,w
 14429  0658  00B2               	movwf	___fldiv@b
 14430  0659  3043               	movlw	67
 14431  065A  00B1               	movwf	___fldiv@a+3
 14432  065B  307F               	movlw	127
 14433  065C  00B0               	movwf	___fldiv@a+2
 14434  065D  3000               	movlw	0
 14435  065E  00AF               	movwf	___fldiv@a+1
 14436  065F  3000               	movlw	0
 14437  0660  00AE               	movwf	___fldiv@a
 14438  0661  3184  2462  3185   	fcall	___fldiv
 14439  0664  0140               	movlb	0	; select bank0
 14440  0665  0831               	movf	?___fldiv+3,w
 14441  0666  00CF               	movwf	___flmul@a+3
 14442  0667  0830               	movf	?___fldiv+2,w
 14443  0668  00CE               	movwf	___flmul@a+2
 14444  0669  082F               	movf	?___fldiv+1,w
 14445  066A  00CD               	movwf	___flmul@a+1
 14446  066B  082E               	movf	?___fldiv,w
 14447  066C  00CC               	movwf	___flmul@a
 14448  066D  3042               	movlw	66
 14449  066E  00CB               	movwf	___flmul@b+3
 14450  066F  30FE               	movlw	254
 14451  0670  00CA               	movwf	___flmul@b+2
 14452  0671  3000               	movlw	0
 14453  0672  00C9               	movwf	___flmul@b+1
 14454  0673  3000               	movlw	0
 14455  0674  00C8               	movwf	___flmul@b
 14456  0675  3180  2090  3185   	fcall	___flmul
 14457  0678  0140               	movlb	0	; select bank0
 14458  0679  084B               	movf	?___flmul+3,w
 14459  067A  00E5               	movwf	___fltol@f1+3
 14460  067B  084A               	movf	?___flmul+2,w
 14461  067C  00E4               	movwf	___fltol@f1+2
 14462  067D  0849               	movf	?___flmul+1,w
 14463  067E  00E3               	movwf	___fltol@f1+1
 14464  067F  0848               	movf	?___flmul,w
 14465  0680  00E2               	movwf	___fltol@f1
 14466  0681  3196  2640  3185   	fcall	___fltol
 14467  0684  0140               	movlb	0	; select bank0
 14468  0685  0863               	movf	?___fltol+1,w
 14469  0686  0141               	movlb	1	; select bank1
 14470  0687  00C8               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128)
 14471  0688  0140               	movlb	0	; select bank0
 14472  0689  0862               	movf	?___fltol,w
 14473  068A  0141               	movlb	1	; select bank1
 14474  068B  00C7               	movwf	PWM2_LoadDutyValue@dutyValue^(0+128)
 14475  068C  3191  2115  3185   	fcall	_PWM2_LoadDutyValue
 14476                           
 14477                           ;led.c: 28:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 127 );
 14478  068F  0141               	movlb	1	; select bank1
 14479  0690  0860               	movf	(LED_setColor@input^(0+128)+3),w
 14480  0691  00E1               	movwf	??_LED_setColor^(0+128)
 14481  0692  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14482  0693  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14483  0694  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14484  0695  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14485  0696  0140               	movlb	0	; select bank0
 14486  0697  00A3               	movwf	___xxtofl@val+3
 14487  0698  0141               	movlb	1	; select bank1
 14488  0699  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14489  069A  0140               	movlb	0	; select bank0
 14490  069B  00A2               	movwf	___xxtofl@val+2
 14491  069C  0141               	movlb	1	; select bank1
 14492  069D  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14493  069E  0140               	movlb	0	; select bank0
 14494  069F  00A1               	movwf	___xxtofl@val+1
 14495  06A0  0141               	movlb	1	; select bank1
 14496  06A1  0861               	movf	??_LED_setColor^(0+128),w
 14497  06A2  0140               	movlb	0	; select bank0
 14498  06A3  00A0               	movwf	___xxtofl@val
 14499  06A4  3001               	movlw	1
 14500  06A5  3188  20C7  3185   	fcall	___xxtofl
 14501  06A8  0140               	movlb	0	; select bank0
 14502  06A9  0823               	movf	?___xxtofl+3,w
 14503  06AA  00B5               	movwf	___fldiv@b+3
 14504  06AB  0822               	movf	?___xxtofl+2,w
 14505  06AC  00B4               	movwf	___fldiv@b+2
 14506  06AD  0821               	movf	?___xxtofl+1,w
 14507  06AE  00B3               	movwf	___fldiv@b+1
 14508  06AF  0820               	movf	?___xxtofl,w
 14509  06B0  00B2               	movwf	___fldiv@b
 14510  06B1  3043               	movlw	67
 14511  06B2  00B1               	movwf	___fldiv@a+3
 14512  06B3  307F               	movlw	127
 14513  06B4  00B0               	movwf	___fldiv@a+2
 14514  06B5  3000               	movlw	0
 14515  06B6  00AF               	movwf	___fldiv@a+1
 14516  06B7  3000               	movlw	0
 14517  06B8  00AE               	movwf	___fldiv@a
 14518  06B9  3184  2462  3185   	fcall	___fldiv
 14519  06BC  0140               	movlb	0	; select bank0
 14520  06BD  0831               	movf	?___fldiv+3,w
 14521  06BE  00CF               	movwf	___flmul@a+3
 14522  06BF  0830               	movf	?___fldiv+2,w
 14523  06C0  00CE               	movwf	___flmul@a+2
 14524  06C1  082F               	movf	?___fldiv+1,w
 14525  06C2  00CD               	movwf	___flmul@a+1
 14526  06C3  082E               	movf	?___fldiv,w
 14527  06C4  00CC               	movwf	___flmul@a
 14528  06C5  3042               	movlw	66
 14529  06C6  00CB               	movwf	___flmul@b+3
 14530  06C7  30FE               	movlw	254
 14531  06C8  00CA               	movwf	___flmul@b+2
 14532  06C9  3000               	movlw	0
 14533  06CA  00C9               	movwf	___flmul@b+1
 14534  06CB  3000               	movlw	0
 14535  06CC  00C8               	movwf	___flmul@b
 14536  06CD  3180  2090  3185   	fcall	___flmul
 14537  06D0  0140               	movlb	0	; select bank0
 14538  06D1  084B               	movf	?___flmul+3,w
 14539  06D2  00E5               	movwf	___fltol@f1+3
 14540  06D3  084A               	movf	?___flmul+2,w
 14541  06D4  00E4               	movwf	___fltol@f1+2
 14542  06D5  0849               	movf	?___flmul+1,w
 14543  06D6  00E3               	movwf	___fltol@f1+1
 14544  06D7  0848               	movf	?___flmul,w
 14545  06D8  00E2               	movwf	___fltol@f1
 14546  06D9  3196  2640  3185   	fcall	___fltol
 14547  06DC  0140               	movlb	0	; select bank0
 14548  06DD  0863               	movf	?___fltol+1,w
 14549  06DE  0141               	movlb	1	; select bank1
 14550  06DF  00C8               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
 14551  06E0  0140               	movlb	0	; select bank0
 14552  06E1  0862               	movf	?___fltol,w
 14553  06E2  0141               	movlb	1	; select bank1
 14554  06E3  00C7               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
 14555  06E4  3191  2133  3185   	fcall	_PWM3_LoadDutyValue
 14556                           
 14557                           ;led.c: 29:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 127 );
 14558  06E7  0141               	movlb	1	; select bank1
 14559  06E8  085D               	movf	LED_setColor@input^(0+128),w
 14560  06E9  00E1               	movwf	??_LED_setColor^(0+128)
 14561  06EA  01E2               	clrf	(??_LED_setColor^(0+128)+1)
 14562  06EB  01E3               	clrf	(??_LED_setColor^(0+128)+2)
 14563  06EC  01E4               	clrf	(??_LED_setColor^(0+128)+3)
 14564  06ED  0864               	movf	(??_LED_setColor+3)^(0+128),w
 14565  06EE  0140               	movlb	0	; select bank0
 14566  06EF  00A3               	movwf	___xxtofl@val+3
 14567  06F0  0141               	movlb	1	; select bank1
 14568  06F1  0863               	movf	(??_LED_setColor+2)^(0+128),w
 14569  06F2  0140               	movlb	0	; select bank0
 14570  06F3  00A2               	movwf	___xxtofl@val+2
 14571  06F4  0141               	movlb	1	; select bank1
 14572  06F5  0862               	movf	(??_LED_setColor+1)^(0+128),w
 14573  06F6  0140               	movlb	0	; select bank0
 14574  06F7  00A1               	movwf	___xxtofl@val+1
 14575  06F8  0141               	movlb	1	; select bank1
 14576  06F9  0861               	movf	??_LED_setColor^(0+128),w
 14577  06FA  0140               	movlb	0	; select bank0
 14578  06FB  00A0               	movwf	___xxtofl@val
 14579  06FC  3001               	movlw	1
 14580  06FD  3188  20C7  3185   	fcall	___xxtofl
 14581  0700  0140               	movlb	0	; select bank0
 14582  0701  0823               	movf	?___xxtofl+3,w
 14583  0702  00B5               	movwf	___fldiv@b+3
 14584  0703  0822               	movf	?___xxtofl+2,w
 14585  0704  00B4               	movwf	___fldiv@b+2
 14586  0705  0821               	movf	?___xxtofl+1,w
 14587  0706  00B3               	movwf	___fldiv@b+1
 14588  0707  0820               	movf	?___xxtofl,w
 14589  0708  00B2               	movwf	___fldiv@b
 14590  0709  3043               	movlw	67
 14591  070A  00B1               	movwf	___fldiv@a+3
 14592  070B  307F               	movlw	127
 14593  070C  00B0               	movwf	___fldiv@a+2
 14594  070D  3000               	movlw	0
 14595  070E  00AF               	movwf	___fldiv@a+1
 14596  070F  3000               	movlw	0
 14597  0710  00AE               	movwf	___fldiv@a
 14598  0711  3184  2462  3185   	fcall	___fldiv
 14599  0714  0140               	movlb	0	; select bank0
 14600  0715  0831               	movf	?___fldiv+3,w
 14601  0716  00CF               	movwf	___flmul@a+3
 14602  0717  0830               	movf	?___fldiv+2,w
 14603  0718  00CE               	movwf	___flmul@a+2
 14604  0719  082F               	movf	?___fldiv+1,w
 14605  071A  00CD               	movwf	___flmul@a+1
 14606  071B  082E               	movf	?___fldiv,w
 14607  071C  00CC               	movwf	___flmul@a
 14608  071D  3042               	movlw	66
 14609  071E  00CB               	movwf	___flmul@b+3
 14610  071F  30FE               	movlw	254
 14611  0720  00CA               	movwf	___flmul@b+2
 14612  0721  3000               	movlw	0
 14613  0722  00C9               	movwf	___flmul@b+1
 14614  0723  3000               	movlw	0
 14615  0724  00C8               	movwf	___flmul@b
 14616  0725  3180  2090  3185   	fcall	___flmul
 14617  0728  0140               	movlb	0	; select bank0
 14618  0729  084B               	movf	?___flmul+3,w
 14619  072A  00E5               	movwf	___fltol@f1+3
 14620  072B  084A               	movf	?___flmul+2,w
 14621  072C  00E4               	movwf	___fltol@f1+2
 14622  072D  0849               	movf	?___flmul+1,w
 14623  072E  00E3               	movwf	___fltol@f1+1
 14624  072F  0848               	movf	?___flmul,w
 14625  0730  00E2               	movwf	___fltol@f1
 14626  0731  3196  2640  3185   	fcall	___fltol
 14627  0734  0140               	movlb	0	; select bank0
 14628  0735  0863               	movf	?___fltol+1,w
 14629  0736  0141               	movlb	1	; select bank1
 14630  0737  00C8               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128)
 14631  0738  0140               	movlb	0	; select bank0
 14632  0739  0862               	movf	?___fltol,w
 14633  073A  0141               	movlb	1	; select bank1
 14634  073B  00C7               	movwf	PWM4_LoadDutyValue@dutyValue^(0+128)
 14635  073C  3191  2151         	fcall	_PWM4_LoadDutyValue
 14636  073E  0008               	return
 14637  073F                     __end_of_LED_setColor:	
 14638                           
 14639                           	psect	text28
 14640  08C7                     __ptext28:	
 14641 ;; *************** function ___xxtofl *****************
 14642 ;; Defined at:
 14643 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 14644 ;; Parameters:    Size  Location     Type
 14645 ;;  sign            1    wreg     unsigned char 
 14646 ;;  val             4    0[BANK0 ] long 
 14647 ;; Auto vars:     Size  Location     Type
 14648 ;;  sign            1    8[BANK0 ] unsigned char 
 14649 ;;  arg             4   10[BANK0 ] unsigned long 
 14650 ;;  exp             1    9[BANK0 ] unsigned char 
 14651 ;; Return value:  Size  Location     Type
 14652 ;;                  4    0[BANK0 ] unsigned char 
 14653 ;; Registers used:
 14654 ;;		wreg, status,2, status,0
 14655 ;; Tracked objects:
 14656 ;;		On entry : 0/0
 14657 ;;		On exit  : 0/0
 14658 ;;		Unchanged: 0/0
 14659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14660 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14661 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14662 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14663 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14664 ;;Total ram usage:       14 bytes
 14665 ;; Hardware stack levels used:    1
 14666 ;; Hardware stack levels required when called:    4
 14667 ;; This function calls:
 14668 ;;		Nothing
 14669 ;; This function is called by:
 14670 ;;		_LED_setColor
 14671 ;;		_beatBrightnessCalculation
 14672 ;; This function uses a non-reentrant model
 14673 ;;
 14674                           
 14675                           
 14676                           ;psect for function ___xxtofl
 14677  08C7                     ___xxtofl:	
 14678                           
 14679                           ;incstack = 0
 14680                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14681                           ;___xxtofl@sign stored from wreg
 14682  08C7  0140               	movlb	0	; select bank0
 14683  08C8  00A8               	movwf	___xxtofl@sign
 14684  08C9  0828               	movf	___xxtofl@sign,w
 14685  08CA  1D03               	btfss	3,2
 14686  08CB  1FA3               	btfss	___xxtofl@val+3,7
 14687  08CC  28DD               	goto	l7553
 14688  08CD  0920               	comf	___xxtofl@val,w
 14689  08CE  00AA               	movwf	___xxtofl@arg
 14690  08CF  0921               	comf	___xxtofl@val+1,w
 14691  08D0  00AB               	movwf	___xxtofl@arg+1
 14692  08D1  0922               	comf	___xxtofl@val+2,w
 14693  08D2  00AC               	movwf	___xxtofl@arg+2
 14694  08D3  0923               	comf	___xxtofl@val+3,w
 14695  08D4  00AD               	movwf	___xxtofl@arg+3
 14696  08D5  0AAA               	incf	___xxtofl@arg,f
 14697  08D6  1903               	skipnz
 14698  08D7  0AAB               	incf	___xxtofl@arg+1,f
 14699  08D8  1903               	skipnz
 14700  08D9  0AAC               	incf	___xxtofl@arg+2,f
 14701  08DA  1903               	skipnz
 14702  08DB  0AAD               	incf	___xxtofl@arg+3,f
 14703  08DC  28E5               	goto	l2111
 14704  08DD                     l7553:	
 14705  08DD  0823               	movf	___xxtofl@val+3,w
 14706  08DE  00AD               	movwf	___xxtofl@arg+3
 14707  08DF  0822               	movf	___xxtofl@val+2,w
 14708  08E0  00AC               	movwf	___xxtofl@arg+2
 14709  08E1  0821               	movf	___xxtofl@val+1,w
 14710  08E2  00AB               	movwf	___xxtofl@arg+1
 14711  08E3  0820               	movf	___xxtofl@val,w
 14712  08E4  00AA               	movwf	___xxtofl@arg
 14713  08E5                     l2111:	
 14714  08E5  0823               	movf	___xxtofl@val+3,w
 14715  08E6  0422               	iorwf	___xxtofl@val+2,w
 14716  08E7  0421               	iorwf	___xxtofl@val+1,w
 14717  08E8  0420               	iorwf	___xxtofl@val,w
 14718  08E9  1D03               	skipz
 14719  08EA  28F4               	goto	l7559
 14720  08EB  3000               	movlw	0
 14721  08EC  00A3               	movwf	?___xxtofl+3
 14722  08ED  3000               	movlw	0
 14723  08EE  00A2               	movwf	?___xxtofl+2
 14724  08EF  3000               	movlw	0
 14725  08F0  00A1               	movwf	?___xxtofl+1
 14726  08F1  3000               	movlw	0
 14727  08F2  00A0               	movwf	?___xxtofl
 14728  08F3  0008               	return
 14729  08F4                     l7559:	
 14730  08F4  3096               	movlw	150
 14731  08F5  00A4               	movwf	??___xxtofl
 14732  08F6  0824               	movf	??___xxtofl,w
 14733  08F7  00A9               	movwf	___xxtofl@exp
 14734  08F8                     l7563:	
 14735  08F8  30FE               	movlw	254
 14736  08F9  052D               	andwf	___xxtofl@arg+3,w
 14737  08FA  1903               	btfsc	3,2
 14738  08FB  291B               	goto	l2117
 14739  08FC  3001               	movlw	1
 14740  08FD  00A4               	movwf	??___xxtofl
 14741  08FE  0824               	movf	??___xxtofl,w
 14742  08FF  07A9               	addwf	___xxtofl@exp,f
 14743  0900  3001               	movlw	1
 14744  0901                     u7375:	
 14745  0901  36AD               	lsrf	___xxtofl@arg+3,f
 14746  0902  0CAC               	rrf	___xxtofl@arg+2,f
 14747  0903  0CAB               	rrf	___xxtofl@arg+1,f
 14748  0904  0CAA               	rrf	___xxtofl@arg,f
 14749  0905  0B89               	decfsz	9,f
 14750  0906  2901               	goto	u7375
 14751  0907  28F8               	goto	l7563
 14752  0908                     l7565:	
 14753  0908  3001               	movlw	1
 14754  0909  00A4               	movwf	??___xxtofl
 14755  090A  0824               	movf	??___xxtofl,w
 14756  090B  07A9               	addwf	___xxtofl@exp,f
 14757  090C  3001               	movlw	1
 14758  090D  07AA               	addwf	___xxtofl@arg,f
 14759  090E  3000               	movlw	0
 14760  090F  3DAB               	addwfc	___xxtofl@arg+1,f
 14761  0910  3000               	movlw	0
 14762  0911  3DAC               	addwfc	___xxtofl@arg+2,f
 14763  0912  3000               	movlw	0
 14764  0913  3DAD               	addwfc	___xxtofl@arg+3,f
 14765  0914  3001               	movlw	1
 14766  0915                     u7395:	
 14767  0915  36AD               	lsrf	___xxtofl@arg+3,f
 14768  0916  0CAC               	rrf	___xxtofl@arg+2,f
 14769  0917  0CAB               	rrf	___xxtofl@arg+1,f
 14770  0918  0CAA               	rrf	___xxtofl@arg,f
 14771  0919  0B89               	decfsz	9,f
 14772  091A  2915               	goto	u7395
 14773  091B                     l2117:	
 14774  091B  30FF               	movlw	255
 14775  091C  052D               	andwf	___xxtofl@arg+3,w
 14776  091D  1903               	btfsc	3,2
 14777  091E  292D               	goto	l7573
 14778  091F  2908               	goto	l7565
 14779  0920                     l7575:	
 14780  0920  3002               	movlw	2
 14781  0921  0229               	subwf	___xxtofl@exp,w
 14782  0922  1C03               	btfss	3,0
 14783  0923  292F               	goto	l2124
 14784  0924  3001               	movlw	1
 14785  0925  02A9               	subwf	___xxtofl@exp,f
 14786  0926  3001               	movlw	1
 14787  0927                     u7415:	
 14788  0927  35AA               	lslf	___xxtofl@arg,f
 14789  0928  0DAB               	rlf	___xxtofl@arg+1,f
 14790  0929  0DAC               	rlf	___xxtofl@arg+2,f
 14791  092A  0DAD               	rlf	___xxtofl@arg+3,f
 14792  092B  0B89               	decfsz	9,f
 14793  092C  2927               	goto	u7415
 14794  092D                     l7573:	
 14795  092D  1FAC               	btfss	___xxtofl@arg+2,7
 14796  092E  2920               	goto	l7575
 14797  092F                     l2124:	
 14798  092F  1829               	btfsc	___xxtofl@exp,0
 14799  0930  2939               	goto	l2125
 14800  0931  30FF               	movlw	255
 14801  0932  05AA               	andwf	___xxtofl@arg,f
 14802  0933  30FF               	movlw	255
 14803  0934  05AB               	andwf	___xxtofl@arg+1,f
 14804  0935  307F               	movlw	127
 14805  0936  05AC               	andwf	___xxtofl@arg+2,f
 14806  0937  30FF               	movlw	255
 14807  0938  05AD               	andwf	___xxtofl@arg+3,f
 14808  0939                     l2125:	
 14809  0939  1003               	clrc
 14810  093A  0CA9               	rrf	___xxtofl@exp,f
 14811  093B  0829               	movf	___xxtofl@exp,w
 14812  093C  00A4               	movwf	??___xxtofl
 14813  093D  01A5               	clrf	??___xxtofl+1
 14814  093E  01A6               	clrf	??___xxtofl+2
 14815  093F  01A7               	clrf	??___xxtofl+3
 14816  0940  3018               	movlw	24
 14817  0941                     u7455:	
 14818  0941  35A4               	lslf	??___xxtofl,f
 14819  0942  0DA5               	rlf	??___xxtofl+1,f
 14820  0943  0DA6               	rlf	??___xxtofl+2,f
 14821  0944  0DA7               	rlf	??___xxtofl+3,f
 14822  0945  0B89               	decfsz	9,f
 14823  0946  2941               	goto	u7455
 14824  0947  0824               	movf	??___xxtofl,w
 14825  0948  04AA               	iorwf	___xxtofl@arg,f
 14826  0949  0825               	movf	??___xxtofl+1,w
 14827  094A  04AB               	iorwf	___xxtofl@arg+1,f
 14828  094B  0826               	movf	??___xxtofl+2,w
 14829  094C  04AC               	iorwf	___xxtofl@arg+2,f
 14830  094D  0827               	movf	??___xxtofl+3,w
 14831  094E  04AD               	iorwf	___xxtofl@arg+3,f
 14832  094F  0828               	movf	___xxtofl@sign,w
 14833  0950  1D03               	btfss	3,2
 14834  0951  1FA3               	btfss	___xxtofl@val+3,7
 14835  0952  2954               	goto	l7587
 14836  0953  17AD               	bsf	___xxtofl@arg+3,7
 14837  0954                     l7587:	
 14838  0954  082D               	movf	___xxtofl@arg+3,w
 14839  0955  00A3               	movwf	?___xxtofl+3
 14840  0956  082C               	movf	___xxtofl@arg+2,w
 14841  0957  00A2               	movwf	?___xxtofl+2
 14842  0958  082B               	movf	___xxtofl@arg+1,w
 14843  0959  00A1               	movwf	?___xxtofl+1
 14844  095A  082A               	movf	___xxtofl@arg,w
 14845  095B  00A0               	movwf	?___xxtofl
 14846  095C  0008               	return
 14847  095D                     __end_of___xxtofl:	
 14848                           
 14849                           	psect	text29
 14850  1640                     __ptext29:	
 14851 ;; *************** function ___fltol *****************
 14852 ;; Defined at:
 14853 ;;		line 43 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 14854 ;; Parameters:    Size  Location     Type
 14855 ;;  f1              4   66[BANK0 ] unsigned char 
 14856 ;; Auto vars:     Size  Location     Type
 14857 ;;  exp1            1   76[BANK0 ] unsigned char 
 14858 ;;  sign1           1   75[BANK0 ] unsigned char 
 14859 ;; Return value:  Size  Location     Type
 14860 ;;                  4   66[BANK0 ] long 
 14861 ;; Registers used:
 14862 ;;		wreg, status,2, status,0
 14863 ;; Tracked objects:
 14864 ;;		On entry : 0/0
 14865 ;;		On exit  : 0/0
 14866 ;;		Unchanged: 0/0
 14867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14868 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14869 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14870 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14871 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14872 ;;Total ram usage:       11 bytes
 14873 ;; Hardware stack levels used:    1
 14874 ;; Hardware stack levels required when called:    4
 14875 ;; This function calls:
 14876 ;;		Nothing
 14877 ;; This function is called by:
 14878 ;;		_LED_setColor
 14879 ;;		_beatColorCreator
 14880 ;;		_beatBrightnessCalculation
 14881 ;; This function uses a non-reentrant model
 14882 ;;
 14883                           
 14884                           
 14885                           ;psect for function ___fltol
 14886  1640                     ___fltol:	
 14887                           
 14888                           ;incstack = 0
 14889                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14890  1640  1003               	clrc
 14891  1641  0140               	movlb	0	; select bank0
 14892  1642  0D64               	rlf	___fltol@f1+2,w
 14893  1643  0D65               	rlf	___fltol@f1+3,w
 14894  1644  00E6               	movwf	??___fltol
 14895  1645  0866               	movf	??___fltol,w
 14896  1646  00EC               	movwf	___fltol@exp1
 14897  1647  086C               	movf	___fltol@exp1,w
 14898  1648  1D03               	btfss	3,2
 14899  1649  2E53               	goto	l7237
 14900  164A                     l7233:	
 14901  164A  3000               	movlw	0
 14902  164B  00E5               	movwf	?___fltol+3
 14903  164C  3000               	movlw	0
 14904  164D  00E4               	movwf	?___fltol+2
 14905  164E  3000               	movlw	0
 14906  164F  00E3               	movwf	?___fltol+1
 14907  1650  3000               	movlw	0
 14908  1651  00E2               	movwf	?___fltol
 14909  1652  0008               	return
 14910  1653                     l7237:	
 14911  1653  0862               	movf	___fltol@f1,w
 14912  1654  00E6               	movwf	??___fltol
 14913  1655  0863               	movf	___fltol@f1+1,w
 14914  1656  00E7               	movwf	??___fltol+1
 14915  1657  0864               	movf	___fltol@f1+2,w
 14916  1658  00E8               	movwf	??___fltol+2
 14917  1659  0865               	movf	___fltol@f1+3,w
 14918  165A  00E9               	movwf	??___fltol+3
 14919  165B  301F               	movlw	31
 14920  165C                     u6705:	
 14921  165C  36E9               	lsrf	??___fltol+3,f
 14922  165D  0CE8               	rrf	??___fltol+2,f
 14923  165E  0CE7               	rrf	??___fltol+1,f
 14924  165F  0CE6               	rrf	??___fltol,f
 14925  1660  0B89               	decfsz	9,f
 14926  1661  2E5C               	goto	u6705
 14927  1662  0866               	movf	??___fltol,w
 14928  1663  00EA               	movwf	??___fltol+4
 14929  1664  086A               	movf	??___fltol+4,w
 14930  1665  00EB               	movwf	___fltol@sign1
 14931  1666  17E4               	bsf	___fltol@f1+2,7
 14932  1667  30FF               	movlw	255
 14933  1668  05E2               	andwf	___fltol@f1,f
 14934  1669  30FF               	movlw	255
 14935  166A  05E3               	andwf	___fltol@f1+1,f
 14936  166B  30FF               	movlw	255
 14937  166C  05E4               	andwf	___fltol@f1+2,f
 14938  166D  3000               	movlw	0
 14939  166E  05E5               	andwf	___fltol@f1+3,f
 14940  166F  3096               	movlw	150
 14941  1670  02EC               	subwf	___fltol@exp1,f
 14942  1671  1FEC               	btfss	___fltol@exp1,7
 14943  1672  2E86               	goto	l7255
 14944  1673  086C               	movf	___fltol@exp1,w
 14945  1674  3A80               	xorlw	128
 14946  1675  3E97               	addlw	151
 14947  1676  1C03               	btfss	3,0
 14948  1677  2E4A               	goto	l7233
 14949  1678                     l7253:	
 14950  1678  3001               	movlw	1
 14951  1679                     u6735:	
 14952  1679  36E5               	lsrf	___fltol@f1+3,f
 14953  167A  0CE4               	rrf	___fltol@f1+2,f
 14954  167B  0CE3               	rrf	___fltol@f1+1,f
 14955  167C  0CE2               	rrf	___fltol@f1,f
 14956  167D  0B89               	decfsz	9,f
 14957  167E  2E79               	goto	u6735
 14958  167F  3001               	movlw	1
 14959  1680  00E6               	movwf	??___fltol
 14960  1681  0866               	movf	??___fltol,w
 14961  1682  07EC               	addwf	___fltol@exp1,f
 14962  1683  1903               	btfsc	3,2
 14963  1684  2E97               	goto	l7263
 14964  1685  2E78               	goto	l7253
 14965  1686                     l7255:	
 14966  1686  3020               	movlw	32
 14967  1687  026C               	subwf	___fltol@exp1,w
 14968  1688  1803               	btfsc	3,0
 14969  1689  2E4A               	goto	l7233
 14970  168A                     l1877:	
 14971  168A  086C               	movf	___fltol@exp1,w
 14972  168B  1903               	btfsc	3,2
 14973  168C  2E97               	goto	l7263
 14974  168D  3001               	movlw	1
 14975  168E                     u6765:	
 14976  168E  35E2               	lslf	___fltol@f1,f
 14977  168F  0DE3               	rlf	___fltol@f1+1,f
 14978  1690  0DE4               	rlf	___fltol@f1+2,f
 14979  1691  0DE5               	rlf	___fltol@f1+3,f
 14980  1692  0B89               	decfsz	9,f
 14981  1693  2E8E               	goto	u6765
 14982  1694  3001               	movlw	1
 14983  1695  02EC               	subwf	___fltol@exp1,f
 14984  1696  2E8A               	goto	l1877
 14985  1697                     l7263:	
 14986  1697  086B               	movf	___fltol@sign1,w
 14987  1698  1903               	btfsc	3,2
 14988  1699  0008               	return
 14989  169A  09E2               	comf	___fltol@f1,f
 14990  169B  09E3               	comf	___fltol@f1+1,f
 14991  169C  09E4               	comf	___fltol@f1+2,f
 14992  169D  09E5               	comf	___fltol@f1+3,f
 14993  169E  0AE2               	incf	___fltol@f1,f
 14994  169F  1903               	skipnz
 14995  16A0  0AE3               	incf	___fltol@f1+1,f
 14996  16A1  1903               	skipnz
 14997  16A2  0AE4               	incf	___fltol@f1+2,f
 14998  16A3  1903               	skipnz
 14999  16A4  0AE5               	incf	___fltol@f1+3,f
 15000  16A5  0008               	return
 15001  16A6                     __end_of___fltol:	
 15002                           
 15003                           	psect	text30
 15004  0090                     __ptext30:	
 15005 ;; *************** function ___flmul *****************
 15006 ;; Defined at:
 15007 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 15008 ;; Parameters:    Size  Location     Type
 15009 ;;  b               4   40[BANK0 ] long 
 15010 ;;  a               4   44[BANK0 ] long 
 15011 ;; Auto vars:     Size  Location     Type
 15012 ;;  prod            4   60[BANK0 ] struct .
 15013 ;;  grs             4   55[BANK0 ] unsigned long 
 15014 ;;  temp            2   64[BANK0 ] struct .
 15015 ;;  bexp            1   59[BANK0 ] unsigned char 
 15016 ;;  aexp            1   54[BANK0 ] unsigned char 
 15017 ;;  sign            1   53[BANK0 ] unsigned char 
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  4   40[BANK0 ] unsigned char 
 15020 ;; Registers used:
 15021 ;;		wreg, status,2, status,0, pclath, cstack
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15027 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15028 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15029 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15030 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15031 ;;Total ram usage:       26 bytes
 15032 ;; Hardware stack levels used:    1
 15033 ;; Hardware stack levels required when called:    5
 15034 ;; This function calls:
 15035 ;;		__Umul8_16
 15036 ;; This function is called by:
 15037 ;;		_LED_setColor
 15038 ;;		_beatBrightnessCalculation
 15039 ;; This function uses a non-reentrant model
 15040 ;;
 15041                           
 15042                           
 15043                           ;psect for function ___flmul
 15044  0090                     ___flmul:	
 15045                           
 15046                           ;incstack = 0
 15047                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15048  0090  0140               	movlb	0	; select bank0
 15049  0091  084B               	movf	___flmul@b+3,w
 15050  0092  3980               	andlw	128
 15051  0093  00D0               	movwf	??___flmul
 15052  0094  0850               	movf	??___flmul,w
 15053  0095  00D5               	movwf	___flmul@sign
 15054  0096  354B               	lslf	___flmul@b+3,w
 15055  0097  00D0               	movwf	??___flmul
 15056  0098  0850               	movf	??___flmul,w
 15057  0099  00DB               	movwf	___flmul@bexp
 15058  009A  1BCA               	btfsc	___flmul@b+2,7
 15059  009B  145B               	bsf	___flmul@bexp,0
 15060  009C  085B               	movf	___flmul@bexp,w
 15061  009D  1903               	btfsc	3,2
 15062  009E  28AC               	goto	l7423
 15063  009F  0A5B               	incf	___flmul@bexp,w
 15064  00A0  1D03               	btfss	3,2
 15065  00A1  28AA               	goto	l7421
 15066  00A2  3000               	movlw	0
 15067  00A3  00CB               	movwf	___flmul@b+3
 15068  00A4  3000               	movlw	0
 15069  00A5  00CA               	movwf	___flmul@b+2
 15070  00A6  3000               	movlw	0
 15071  00A7  00C9               	movwf	___flmul@b+1
 15072  00A8  3000               	movlw	0
 15073  00A9  00C8               	movwf	___flmul@b
 15074  00AA                     l7421:	
 15075  00AA  17CA               	bsf	___flmul@b+2,7
 15076  00AB  28B4               	goto	l7425
 15077  00AC                     l7423:	
 15078  00AC  3000               	movlw	0
 15079  00AD  00CB               	movwf	___flmul@b+3
 15080  00AE  3000               	movlw	0
 15081  00AF  00CA               	movwf	___flmul@b+2
 15082  00B0  3000               	movlw	0
 15083  00B1  00C9               	movwf	___flmul@b+1
 15084  00B2  3000               	movlw	0
 15085  00B3  00C8               	movwf	___flmul@b
 15086  00B4                     l7425:	
 15087  00B4  084F               	movf	___flmul@a+3,w
 15088  00B5  3980               	andlw	128
 15089  00B6  00D0               	movwf	??___flmul
 15090  00B7  0850               	movf	??___flmul,w
 15091  00B8  06D5               	xorwf	___flmul@sign,f
 15092  00B9  354F               	lslf	___flmul@a+3,w
 15093  00BA  00D0               	movwf	??___flmul
 15094  00BB  0850               	movf	??___flmul,w
 15095  00BC  00D6               	movwf	___flmul@aexp
 15096  00BD  1BCE               	btfsc	___flmul@a+2,7
 15097  00BE  1456               	bsf	___flmul@aexp,0
 15098  00BF  0856               	movf	___flmul@aexp,w
 15099  00C0  1903               	btfsc	3,2
 15100  00C1  28CF               	goto	l7441
 15101  00C2  0A56               	incf	___flmul@aexp,w
 15102  00C3  1D03               	btfss	3,2
 15103  00C4  28CD               	goto	l7439
 15104  00C5  3000               	movlw	0
 15105  00C6  00CF               	movwf	___flmul@a+3
 15106  00C7  3000               	movlw	0
 15107  00C8  00CE               	movwf	___flmul@a+2
 15108  00C9  3000               	movlw	0
 15109  00CA  00CD               	movwf	___flmul@a+1
 15110  00CB  3000               	movlw	0
 15111  00CC  00CC               	movwf	___flmul@a
 15112  00CD                     l7439:	
 15113  00CD  17CE               	bsf	___flmul@a+2,7
 15114  00CE  28D7               	goto	l7443
 15115  00CF                     l7441:	
 15116  00CF  3000               	movlw	0
 15117  00D0  00CF               	movwf	___flmul@a+3
 15118  00D1  3000               	movlw	0
 15119  00D2  00CE               	movwf	___flmul@a+2
 15120  00D3  3000               	movlw	0
 15121  00D4  00CD               	movwf	___flmul@a+1
 15122  00D5  3000               	movlw	0
 15123  00D6  00CC               	movwf	___flmul@a
 15124  00D7                     l7443:	
 15125  00D7  0856               	movf	___flmul@aexp,w
 15126  00D8  1D03               	btfss	3,2
 15127  00D9  085B               	movf	___flmul@bexp,w
 15128  00DA  1D03               	btfss	3,2
 15129  00DB  28E5               	goto	l7451
 15130  00DC  3000               	movlw	0
 15131  00DD  00CB               	movwf	?___flmul+3
 15132  00DE  3000               	movlw	0
 15133  00DF  00CA               	movwf	?___flmul+2
 15134  00E0  3000               	movlw	0
 15135  00E1  00C9               	movwf	?___flmul+1
 15136  00E2  3000               	movlw	0
 15137  00E3  00C8               	movwf	?___flmul
 15138  00E4  0008               	return
 15139  00E5                     l7451:	
 15140  00E5  0848               	movf	___flmul@b,w
 15141  00E6  00D0               	movwf	??___flmul
 15142  00E7  0850               	movf	??___flmul,w
 15143  00E8  00A0               	movwf	__Umul8_16@multiplicand
 15144  00E9  084E               	movf	___flmul@a+2,w
 15145  00EA  3191  218F  3180   	fcall	__Umul8_16
 15146  00ED  0140               	movlb	0	; select bank0
 15147  00EE  0821               	movf	?__Umul8_16+1,w
 15148  00EF  00E1               	movwf	___flmul@temp+1
 15149  00F0  0820               	movf	?__Umul8_16,w
 15150  00F1  00E0               	movwf	___flmul@temp
 15151  00F2  0860               	movf	___flmul@temp,w
 15152  00F3  00D0               	movwf	??___flmul
 15153  00F4  01D1               	clrf	??___flmul+1
 15154  00F5  01D2               	clrf	??___flmul+2
 15155  00F6  01D3               	clrf	??___flmul+3
 15156  00F7  0853               	movf	??___flmul+3,w
 15157  00F8  00DA               	movwf	___flmul@grs+3
 15158  00F9  0852               	movf	??___flmul+2,w
 15159  00FA  00D9               	movwf	___flmul@grs+2
 15160  00FB  0851               	movf	??___flmul+1,w
 15161  00FC  00D8               	movwf	___flmul@grs+1
 15162  00FD  0850               	movf	??___flmul,w
 15163  00FE  00D7               	movwf	___flmul@grs
 15164  00FF  0861               	movf	___flmul@temp+1,w
 15165  0100  00D0               	movwf	??___flmul
 15166  0101  01D1               	clrf	??___flmul+1
 15167  0102  01D2               	clrf	??___flmul+2
 15168  0103  01D3               	clrf	??___flmul+3
 15169  0104  0853               	movf	??___flmul+3,w
 15170  0105  00DF               	movwf	___flmul@prod+3
 15171  0106  0852               	movf	??___flmul+2,w
 15172  0107  00DE               	movwf	___flmul@prod+2
 15173  0108  0851               	movf	??___flmul+1,w
 15174  0109  00DD               	movwf	___flmul@prod+1
 15175  010A  0850               	movf	??___flmul,w
 15176  010B  00DC               	movwf	___flmul@prod
 15177  010C  0849               	movf	___flmul@b+1,w
 15178  010D  00D0               	movwf	??___flmul
 15179  010E  0850               	movf	??___flmul,w
 15180  010F  00A0               	movwf	__Umul8_16@multiplicand
 15181  0110  084D               	movf	___flmul@a+1,w
 15182  0111  3191  218F  3180   	fcall	__Umul8_16
 15183  0114  0140               	movlb	0	; select bank0
 15184  0115  0821               	movf	?__Umul8_16+1,w
 15185  0116  00E1               	movwf	___flmul@temp+1
 15186  0117  0820               	movf	?__Umul8_16,w
 15187  0118  00E0               	movwf	___flmul@temp
 15188  0119  0860               	movf	___flmul@temp,w
 15189  011A  00D0               	movwf	??___flmul
 15190  011B  01D1               	clrf	??___flmul+1
 15191  011C  01D2               	clrf	??___flmul+2
 15192  011D  01D3               	clrf	??___flmul+3
 15193  011E  0850               	movf	??___flmul,w
 15194  011F  07D7               	addwf	___flmul@grs,f
 15195  0120  0851               	movf	??___flmul+1,w
 15196  0121  3DD8               	addwfc	___flmul@grs+1,f
 15197  0122  0852               	movf	??___flmul+2,w
 15198  0123  3DD9               	addwfc	___flmul@grs+2,f
 15199  0124  0853               	movf	??___flmul+3,w
 15200  0125  3DDA               	addwfc	___flmul@grs+3,f
 15201  0126  0861               	movf	___flmul@temp+1,w
 15202  0127  00D0               	movwf	??___flmul
 15203  0128  01D1               	clrf	??___flmul+1
 15204  0129  01D2               	clrf	??___flmul+2
 15205  012A  01D3               	clrf	??___flmul+3
 15206  012B  0850               	movf	??___flmul,w
 15207  012C  07DC               	addwf	___flmul@prod,f
 15208  012D  0851               	movf	??___flmul+1,w
 15209  012E  3DDD               	addwfc	___flmul@prod+1,f
 15210  012F  0852               	movf	??___flmul+2,w
 15211  0130  3DDE               	addwfc	___flmul@prod+2,f
 15212  0131  0853               	movf	??___flmul+3,w
 15213  0132  3DDF               	addwfc	___flmul@prod+3,f
 15214  0133  084A               	movf	___flmul@b+2,w
 15215  0134  00D0               	movwf	??___flmul
 15216  0135  0850               	movf	??___flmul,w
 15217  0136  00A0               	movwf	__Umul8_16@multiplicand
 15218  0137  084C               	movf	___flmul@a,w
 15219  0138  3191  218F  3180   	fcall	__Umul8_16
 15220  013B  0140               	movlb	0	; select bank0
 15221  013C  0821               	movf	?__Umul8_16+1,w
 15222  013D  00E1               	movwf	___flmul@temp+1
 15223  013E  0820               	movf	?__Umul8_16,w
 15224  013F  00E0               	movwf	___flmul@temp
 15225  0140  0860               	movf	___flmul@temp,w
 15226  0141  00D0               	movwf	??___flmul
 15227  0142  01D1               	clrf	??___flmul+1
 15228  0143  01D2               	clrf	??___flmul+2
 15229  0144  01D3               	clrf	??___flmul+3
 15230  0145  0850               	movf	??___flmul,w
 15231  0146  07D7               	addwf	___flmul@grs,f
 15232  0147  0851               	movf	??___flmul+1,w
 15233  0148  3DD8               	addwfc	___flmul@grs+1,f
 15234  0149  0852               	movf	??___flmul+2,w
 15235  014A  3DD9               	addwfc	___flmul@grs+2,f
 15236  014B  0853               	movf	??___flmul+3,w
 15237  014C  3DDA               	addwfc	___flmul@grs+3,f
 15238  014D  0861               	movf	___flmul@temp+1,w
 15239  014E  00D0               	movwf	??___flmul
 15240  014F  01D1               	clrf	??___flmul+1
 15241  0150  01D2               	clrf	??___flmul+2
 15242  0151  01D3               	clrf	??___flmul+3
 15243  0152  0850               	movf	??___flmul,w
 15244  0153  07DC               	addwf	___flmul@prod,f
 15245  0154  0851               	movf	??___flmul+1,w
 15246  0155  3DDD               	addwfc	___flmul@prod+1,f
 15247  0156  0852               	movf	??___flmul+2,w
 15248  0157  3DDE               	addwfc	___flmul@prod+2,f
 15249  0158  0853               	movf	??___flmul+3,w
 15250  0159  3DDF               	addwfc	___flmul@prod+3,f
 15251  015A  3008               	movlw	8
 15252  015B                     u7165:	
 15253  015B  35D7               	lslf	___flmul@grs,f
 15254  015C  0DD8               	rlf	___flmul@grs+1,f
 15255  015D  0DD9               	rlf	___flmul@grs+2,f
 15256  015E  0DDA               	rlf	___flmul@grs+3,f
 15257  015F  0B89               	decfsz	9,f
 15258  0160  295B               	goto	u7165
 15259  0161  0849               	movf	___flmul@b+1,w
 15260  0162  00D0               	movwf	??___flmul
 15261  0163  0850               	movf	??___flmul,w
 15262  0164  00A0               	movwf	__Umul8_16@multiplicand
 15263  0165  084C               	movf	___flmul@a,w
 15264  0166  3191  218F  3180   	fcall	__Umul8_16
 15265  0169  0140               	movlb	0	; select bank0
 15266  016A  0821               	movf	?__Umul8_16+1,w
 15267  016B  00E1               	movwf	___flmul@temp+1
 15268  016C  0820               	movf	?__Umul8_16,w
 15269  016D  00E0               	movwf	___flmul@temp
 15270  016E  0860               	movf	___flmul@temp,w
 15271  016F  07D7               	addwf	___flmul@grs,f
 15272  0170  0861               	movf	___flmul@temp+1,w
 15273  0171  3DD8               	addwfc	___flmul@grs+1,f
 15274  0172  3000               	movlw	0
 15275  0173  3DD9               	addwfc	___flmul@grs+2,f
 15276  0174  3DDA               	addwfc	___flmul@grs+3,f
 15277  0175  0848               	movf	___flmul@b,w
 15278  0176  00D0               	movwf	??___flmul
 15279  0177  0850               	movf	??___flmul,w
 15280  0178  00A0               	movwf	__Umul8_16@multiplicand
 15281  0179  084D               	movf	___flmul@a+1,w
 15282  017A  3191  218F  3180   	fcall	__Umul8_16
 15283  017D  0140               	movlb	0	; select bank0
 15284  017E  0821               	movf	?__Umul8_16+1,w
 15285  017F  00E1               	movwf	___flmul@temp+1
 15286  0180  0820               	movf	?__Umul8_16,w
 15287  0181  00E0               	movwf	___flmul@temp
 15288  0182  0860               	movf	___flmul@temp,w
 15289  0183  07D7               	addwf	___flmul@grs,f
 15290  0184  0861               	movf	___flmul@temp+1,w
 15291  0185  3DD8               	addwfc	___flmul@grs+1,f
 15292  0186  3000               	movlw	0
 15293  0187  3DD9               	addwfc	___flmul@grs+2,f
 15294  0188  3DDA               	addwfc	___flmul@grs+3,f
 15295  0189  3008               	movlw	8
 15296  018A                     u7175:	
 15297  018A  35D7               	lslf	___flmul@grs,f
 15298  018B  0DD8               	rlf	___flmul@grs+1,f
 15299  018C  0DD9               	rlf	___flmul@grs+2,f
 15300  018D  0DDA               	rlf	___flmul@grs+3,f
 15301  018E  0B89               	decfsz	9,f
 15302  018F  298A               	goto	u7175
 15303  0190  0848               	movf	___flmul@b,w
 15304  0191  00D0               	movwf	??___flmul
 15305  0192  0850               	movf	??___flmul,w
 15306  0193  00A0               	movwf	__Umul8_16@multiplicand
 15307  0194  084C               	movf	___flmul@a,w
 15308  0195  3191  218F  3180   	fcall	__Umul8_16
 15309  0198  0140               	movlb	0	; select bank0
 15310  0199  0821               	movf	?__Umul8_16+1,w
 15311  019A  00E1               	movwf	___flmul@temp+1
 15312  019B  0820               	movf	?__Umul8_16,w
 15313  019C  00E0               	movwf	___flmul@temp
 15314  019D  0860               	movf	___flmul@temp,w
 15315  019E  07D7               	addwf	___flmul@grs,f
 15316  019F  0861               	movf	___flmul@temp+1,w
 15317  01A0  3DD8               	addwfc	___flmul@grs+1,f
 15318  01A1  3000               	movlw	0
 15319  01A2  3DD9               	addwfc	___flmul@grs+2,f
 15320  01A3  3DDA               	addwfc	___flmul@grs+3,f
 15321  01A4  0849               	movf	___flmul@b+1,w
 15322  01A5  00D0               	movwf	??___flmul
 15323  01A6  0850               	movf	??___flmul,w
 15324  01A7  00A0               	movwf	__Umul8_16@multiplicand
 15325  01A8  084E               	movf	___flmul@a+2,w
 15326  01A9  3191  218F  3180   	fcall	__Umul8_16
 15327  01AC  0140               	movlb	0	; select bank0
 15328  01AD  0821               	movf	?__Umul8_16+1,w
 15329  01AE  00E1               	movwf	___flmul@temp+1
 15330  01AF  0820               	movf	?__Umul8_16,w
 15331  01B0  00E0               	movwf	___flmul@temp
 15332  01B1  0860               	movf	___flmul@temp,w
 15333  01B2  07DC               	addwf	___flmul@prod,f
 15334  01B3  0861               	movf	___flmul@temp+1,w
 15335  01B4  3DDD               	addwfc	___flmul@prod+1,f
 15336  01B5  3000               	movlw	0
 15337  01B6  3DDE               	addwfc	___flmul@prod+2,f
 15338  01B7  3DDF               	addwfc	___flmul@prod+3,f
 15339  01B8  084A               	movf	___flmul@b+2,w
 15340  01B9  00D0               	movwf	??___flmul
 15341  01BA  0850               	movf	??___flmul,w
 15342  01BB  00A0               	movwf	__Umul8_16@multiplicand
 15343  01BC  084D               	movf	___flmul@a+1,w
 15344  01BD  3191  218F  3180   	fcall	__Umul8_16
 15345  01C0  0140               	movlb	0	; select bank0
 15346  01C1  0821               	movf	?__Umul8_16+1,w
 15347  01C2  00E1               	movwf	___flmul@temp+1
 15348  01C3  0820               	movf	?__Umul8_16,w
 15349  01C4  00E0               	movwf	___flmul@temp
 15350  01C5  0860               	movf	___flmul@temp,w
 15351  01C6  07DC               	addwf	___flmul@prod,f
 15352  01C7  0861               	movf	___flmul@temp+1,w
 15353  01C8  3DDD               	addwfc	___flmul@prod+1,f
 15354  01C9  3000               	movlw	0
 15355  01CA  3DDE               	addwfc	___flmul@prod+2,f
 15356  01CB  3DDF               	addwfc	___flmul@prod+3,f
 15357  01CC  084A               	movf	___flmul@b+2,w
 15358  01CD  00D0               	movwf	??___flmul
 15359  01CE  0850               	movf	??___flmul,w
 15360  01CF  00A0               	movwf	__Umul8_16@multiplicand
 15361  01D0  084E               	movf	___flmul@a+2,w
 15362  01D1  3191  218F  3180   	fcall	__Umul8_16
 15363  01D4  0140               	movlb	0	; select bank0
 15364  01D5  0821               	movf	?__Umul8_16+1,w
 15365  01D6  00E1               	movwf	___flmul@temp+1
 15366  01D7  0820               	movf	?__Umul8_16,w
 15367  01D8  00E0               	movwf	___flmul@temp
 15368  01D9  0860               	movf	___flmul@temp,w
 15369  01DA  00D0               	movwf	??___flmul
 15370  01DB  0861               	movf	___flmul@temp+1,w
 15371  01DC  00D1               	movwf	??___flmul+1
 15372  01DD  01D2               	clrf	??___flmul+2
 15373  01DE  01D3               	clrf	??___flmul+3
 15374  01DF  3008               	movlw	8
 15375  01E0                     u7185:	
 15376  01E0  35D0               	lslf	??___flmul,f
 15377  01E1  0DD1               	rlf	??___flmul+1,f
 15378  01E2  0DD2               	rlf	??___flmul+2,f
 15379  01E3  0DD3               	rlf	??___flmul+3,f
 15380  01E4  0B89               	decfsz	9,f
 15381  01E5  29E0               	goto	u7185
 15382  01E6  0850               	movf	??___flmul,w
 15383  01E7  07DC               	addwf	___flmul@prod,f
 15384  01E8  0851               	movf	??___flmul+1,w
 15385  01E9  3DDD               	addwfc	___flmul@prod+1,f
 15386  01EA  0852               	movf	??___flmul+2,w
 15387  01EB  3DDE               	addwfc	___flmul@prod+2,f
 15388  01EC  0853               	movf	??___flmul+3,w
 15389  01ED  3DDF               	addwfc	___flmul@prod+3,f
 15390  01EE  0857               	movf	___flmul@grs,w
 15391  01EF  00D0               	movwf	??___flmul
 15392  01F0  0858               	movf	___flmul@grs+1,w
 15393  01F1  00D1               	movwf	??___flmul+1
 15394  01F2  0859               	movf	___flmul@grs+2,w
 15395  01F3  00D2               	movwf	??___flmul+2
 15396  01F4  085A               	movf	___flmul@grs+3,w
 15397  01F5  00D3               	movwf	??___flmul+3
 15398  01F6  3018               	movlw	24
 15399  01F7                     u7195:	
 15400  01F7  36D3               	lsrf	??___flmul+3,f
 15401  01F8  0CD2               	rrf	??___flmul+2,f
 15402  01F9  0CD1               	rrf	??___flmul+1,f
 15403  01FA  0CD0               	rrf	??___flmul,f
 15404  01FB  0B89               	decfsz	9,f
 15405  01FC  29F7               	goto	u7195
 15406  01FD  0850               	movf	??___flmul,w
 15407  01FE  07DC               	addwf	___flmul@prod,f
 15408  01FF  0851               	movf	??___flmul+1,w
 15409  0200  3DDD               	addwfc	___flmul@prod+1,f
 15410  0201  0852               	movf	??___flmul+2,w
 15411  0202  3DDE               	addwfc	___flmul@prod+2,f
 15412  0203  0853               	movf	??___flmul+3,w
 15413  0204  3DDF               	addwfc	___flmul@prod+3,f
 15414  0205  3008               	movlw	8
 15415  0206                     u7205:	
 15416  0206  35D7               	lslf	___flmul@grs,f
 15417  0207  0DD8               	rlf	___flmul@grs+1,f
 15418  0208  0DD9               	rlf	___flmul@grs+2,f
 15419  0209  0DDA               	rlf	___flmul@grs+3,f
 15420  020A  0B89               	decfsz	9,f
 15421  020B  2A06               	goto	u7205
 15422  020C  085B               	movf	___flmul@bexp,w
 15423  020D  0756               	addwf	___flmul@aexp,w
 15424  020E  00D0               	movwf	??___flmul
 15425  020F  01D1               	clrf	??___flmul+1
 15426  0210  0DD1               	rlf	??___flmul+1,f
 15427  0211  0850               	movf	??___flmul,w
 15428  0212  3E82               	addlw	130
 15429  0213  00E0               	movwf	___flmul@temp
 15430  0214  30FF               	movlw	255
 15431  0215  3D51               	addwfc	??___flmul+1,w
 15432  0216  00E1               	movwf	___flmul@temp+1
 15433  0217                     l7503:	
 15434  0217  1BDE               	btfsc	___flmul@prod+2,7
 15435  0218  2A2E               	goto	l7505
 15436  0219  3001               	movlw	1
 15437  021A                     u7215:	
 15438  021A  35DC               	lslf	___flmul@prod,f
 15439  021B  0DDD               	rlf	___flmul@prod+1,f
 15440  021C  0DDE               	rlf	___flmul@prod+2,f
 15441  021D  0DDF               	rlf	___flmul@prod+3,f
 15442  021E  0B89               	decfsz	9,f
 15443  021F  2A1A               	goto	u7215
 15444  0220  1BDA               	btfsc	___flmul@grs+3,7
 15445  0221  145C               	bsf	___flmul@prod,0
 15446  0222  3001               	movlw	1
 15447  0223                     u7235:	
 15448  0223  35D7               	lslf	___flmul@grs,f
 15449  0224  0DD8               	rlf	___flmul@grs+1,f
 15450  0225  0DD9               	rlf	___flmul@grs+2,f
 15451  0226  0DDA               	rlf	___flmul@grs+3,f
 15452  0227  0B89               	decfsz	9,f
 15453  0228  2A23               	goto	u7235
 15454  0229  30FF               	movlw	255
 15455  022A  07E0               	addwf	___flmul@temp,f
 15456  022B  30FF               	movlw	255
 15457  022C  3DE1               	addwfc	___flmul@temp+1,f
 15458  022D  2A17               	goto	l7503
 15459  022E                     l7505:	
 15460  022E  01D6               	clrf	___flmul@aexp
 15461  022F  1FDA               	btfss	___flmul@grs+3,7
 15462  0230  2A47               	goto	l7515
 15463  0231  30FF               	movlw	255
 15464  0232  0557               	andwf	___flmul@grs,w
 15465  0233  00D0               	movwf	??___flmul
 15466  0234  30FF               	movlw	255
 15467  0235  0558               	andwf	___flmul@grs+1,w
 15468  0236  00D1               	movwf	??___flmul+1
 15469  0237  30FF               	movlw	255
 15470  0238  0559               	andwf	___flmul@grs+2,w
 15471  0239  00D2               	movwf	??___flmul+2
 15472  023A  307F               	movlw	127
 15473  023B  055A               	andwf	___flmul@grs+3,w
 15474  023C  00D3               	movwf	??___flmul+3
 15475  023D  0853               	movf	??___flmul+3,w
 15476  023E  0452               	iorwf	??___flmul+2,w
 15477  023F  0451               	iorwf	??___flmul+1,w
 15478  0240  0450               	iorwf	??___flmul,w
 15479  0241  1903               	skipnz
 15480  0242  185C               	btfsc	___flmul@prod,0
 15481  0243  2A45               	goto	l7511
 15482  0244  2A47               	goto	l7515
 15483  0245                     l7511:	
 15484  0245  01D6               	clrf	___flmul@aexp
 15485  0246  0AD6               	incf	___flmul@aexp,f
 15486  0247                     l7515:	
 15487  0247  0856               	movf	___flmul@aexp,w
 15488  0248  1903               	btfsc	3,2
 15489  0249  2A70               	goto	l7525
 15490  024A  3001               	movlw	1
 15491  024B  07DC               	addwf	___flmul@prod,f
 15492  024C  3000               	movlw	0
 15493  024D  3DDD               	addwfc	___flmul@prod+1,f
 15494  024E  3000               	movlw	0
 15495  024F  3DDE               	addwfc	___flmul@prod+2,f
 15496  0250  3000               	movlw	0
 15497  0251  3DDF               	addwfc	___flmul@prod+3,f
 15498  0252  1C5F               	btfss	___flmul@prod+3,0
 15499  0253  2A70               	goto	l7525
 15500  0254  085C               	movf	___flmul@prod,w
 15501  0255  00D0               	movwf	??___flmul
 15502  0256  085D               	movf	___flmul@prod+1,w
 15503  0257  00D1               	movwf	??___flmul+1
 15504  0258  085E               	movf	___flmul@prod+2,w
 15505  0259  00D2               	movwf	??___flmul+2
 15506  025A  085F               	movf	___flmul@prod+3,w
 15507  025B  00D3               	movwf	??___flmul+3
 15508  025C  3001               	movlw	1
 15509  025D  00D4               	movwf	??___flmul+4
 15510  025E                     u7305:	
 15511  025E  37D3               	asrf	??___flmul+3,f
 15512  025F  0CD2               	rrf	??___flmul+2,f
 15513  0260  0CD1               	rrf	??___flmul+1,f
 15514  0261  0CD0               	rrf	??___flmul,f
 15515  0262  0BD4               	decfsz	??___flmul+4,f
 15516  0263  2A5E               	goto	u7305
 15517  0264  0853               	movf	??___flmul+3,w
 15518  0265  00DF               	movwf	___flmul@prod+3
 15519  0266  0852               	movf	??___flmul+2,w
 15520  0267  00DE               	movwf	___flmul@prod+2
 15521  0268  0851               	movf	??___flmul+1,w
 15522  0269  00DD               	movwf	___flmul@prod+1
 15523  026A  0850               	movf	??___flmul,w
 15524  026B  00DC               	movwf	___flmul@prod
 15525  026C  3001               	movlw	1
 15526  026D  07E0               	addwf	___flmul@temp,f
 15527  026E  3000               	movlw	0
 15528  026F  3DE1               	addwfc	___flmul@temp+1,f
 15529  0270                     l7525:	
 15530  0270  0861               	movf	___flmul@temp+1,w
 15531  0271  3A80               	xorlw	128
 15532  0272  00D0               	movwf	??___flmul
 15533  0273  3080               	movlw	128
 15534  0274  0250               	subwf	??___flmul,w
 15535  0275  1D03               	skipz
 15536  0276  2A79               	goto	u7315
 15537  0277  30FF               	movlw	255
 15538  0278  0260               	subwf	___flmul@temp,w
 15539  0279                     u7315:	
 15540  0279  1C03               	skipc
 15541  027A  2A85               	goto	l7529
 15542  027B  307F               	movlw	127
 15543  027C  0140               	movlb	0	; select bank0
 15544  027D  00DF               	movwf	___flmul@prod+3
 15545  027E  3080               	movlw	128
 15546  027F  00DE               	movwf	___flmul@prod+2
 15547  0280  3000               	movlw	0
 15548  0281  00DD               	movwf	___flmul@prod+1
 15549  0282  3000               	movlw	0
 15550  0283  00DC               	movwf	___flmul@prod
 15551  0284  2AAF               	goto	l2085
 15552  0285                     l7529:	
 15553  0285  0140               	movlb	0	; select bank0
 15554  0286  0861               	movf	___flmul@temp+1,w
 15555  0287  3A80               	xorlw	128
 15556  0288  00D0               	movwf	??___flmul
 15557  0289  3080               	movlw	128
 15558  028A  0250               	subwf	??___flmul,w
 15559  028B  1D03               	skipz
 15560  028C  2A8F               	goto	u7325
 15561  028D  3001               	movlw	1
 15562  028E  0260               	subwf	___flmul@temp,w
 15563  028F                     u7325:	
 15564  028F  1803               	skipnc
 15565  0290  2A9C               	goto	l7535
 15566  0291  3000               	movlw	0
 15567  0292  0140               	movlb	0	; select bank0
 15568  0293  00DF               	movwf	___flmul@prod+3
 15569  0294  3000               	movlw	0
 15570  0295  00DE               	movwf	___flmul@prod+2
 15571  0296  3000               	movlw	0
 15572  0297  00DD               	movwf	___flmul@prod+1
 15573  0298  3000               	movlw	0
 15574  0299  00DC               	movwf	___flmul@prod
 15575  029A  01D5               	clrf	___flmul@sign
 15576  029B  2AAF               	goto	l2085
 15577  029C                     l7535:	
 15578  029C  0140               	movlb	0	; select bank0
 15579  029D  0860               	movf	___flmul@temp,w
 15580  029E  00D0               	movwf	??___flmul
 15581  029F  0850               	movf	??___flmul,w
 15582  02A0  00DB               	movwf	___flmul@bexp
 15583  02A1  30FF               	movlw	255
 15584  02A2  05DC               	andwf	___flmul@prod,f
 15585  02A3  30FF               	movlw	255
 15586  02A4  05DD               	andwf	___flmul@prod+1,f
 15587  02A5  307F               	movlw	127
 15588  02A6  05DE               	andwf	___flmul@prod+2,f
 15589  02A7  3000               	movlw	0
 15590  02A8  05DF               	andwf	___flmul@prod+3,f
 15591  02A9  185B               	btfsc	___flmul@bexp,0
 15592  02AA  17DE               	bsf	___flmul@prod+2,7
 15593  02AB  365B               	lsrf	___flmul@bexp,w
 15594  02AC  00D0               	movwf	??___flmul
 15595  02AD  0850               	movf	??___flmul,w
 15596  02AE  00DF               	movwf	___flmul@prod+3
 15597  02AF                     l2085:	
 15598  02AF  0855               	movf	___flmul@sign,w
 15599  02B0  00D0               	movwf	??___flmul
 15600  02B1  0850               	movf	??___flmul,w
 15601  02B2  04DF               	iorwf	___flmul@prod+3,f
 15602  02B3  085F               	movf	___flmul@prod+3,w
 15603  02B4  00CB               	movwf	?___flmul+3
 15604  02B5  085E               	movf	___flmul@prod+2,w
 15605  02B6  00CA               	movwf	?___flmul+2
 15606  02B7  085D               	movf	___flmul@prod+1,w
 15607  02B8  00C9               	movwf	?___flmul+1
 15608  02B9  085C               	movf	___flmul@prod,w
 15609  02BA  00C8               	movwf	?___flmul
 15610  02BB  0008               	return
 15611  02BC                     __end_of___flmul:	
 15612                           
 15613                           	psect	text31
 15614  118F                     __ptext31:	
 15615 ;; *************** function __Umul8_16 *****************
 15616 ;; Defined at:
 15617 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
 15618 ;; Parameters:    Size  Location     Type
 15619 ;;  multiplier      1    wreg     unsigned char 
 15620 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15621 ;; Auto vars:     Size  Location     Type
 15622 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15623 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15624 ;;  product         2    4[BANK0 ] unsigned int 
 15625 ;; Return value:  Size  Location     Type
 15626 ;;                  2    0[BANK0 ] unsigned int 
 15627 ;; Registers used:
 15628 ;;		wreg, status,2, status,0
 15629 ;; Tracked objects:
 15630 ;;		On entry : 0/0
 15631 ;;		On exit  : 0/0
 15632 ;;		Unchanged: 0/0
 15633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15635 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15636 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15637 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15638 ;;Total ram usage:        9 bytes
 15639 ;; Hardware stack levels used:    1
 15640 ;; Hardware stack levels required when called:    4
 15641 ;; This function calls:
 15642 ;;		Nothing
 15643 ;; This function is called by:
 15644 ;;		___flmul
 15645 ;; This function uses a non-reentrant model
 15646 ;;
 15647                           
 15648                           
 15649                           ;psect for function __Umul8_16
 15650  118F                     __Umul8_16:	
 15651                           
 15652                           ;incstack = 0
 15653                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15654                           ;__Umul8_16@multiplier stored from wreg
 15655  118F  0140               	movlb	0	; select bank0
 15656  1190  00A8               	movwf	__Umul8_16@multiplier
 15657  1191  01A4               	clrf	__Umul8_16@product
 15658  1192  01A5               	clrf	__Umul8_16@product+1
 15659  1193  0820               	movf	__Umul8_16@multiplicand,w
 15660  1194  00A2               	movwf	??__Umul8_16
 15661  1195  01A3               	clrf	??__Umul8_16+1
 15662  1196  0822               	movf	??__Umul8_16,w
 15663  1197  00A6               	movwf	__Umul8_16@word_mpld
 15664  1198  0823               	movf	??__Umul8_16+1,w
 15665  1199  00A7               	movwf	__Umul8_16@word_mpld+1
 15666  119A                     l7179:	
 15667  119A  1C28               	btfss	__Umul8_16@multiplier,0
 15668  119B  29A0               	goto	l2163
 15669  119C  0826               	movf	__Umul8_16@word_mpld,w
 15670  119D  07A4               	addwf	__Umul8_16@product,f
 15671  119E  0827               	movf	__Umul8_16@word_mpld+1,w
 15672  119F  3DA5               	addwfc	__Umul8_16@product+1,f
 15673  11A0                     l2163:	
 15674  11A0  3001               	movlw	1
 15675  11A1                     u6645:	
 15676  11A1  35A6               	lslf	__Umul8_16@word_mpld,f
 15677  11A2  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15678  11A3  0B89               	decfsz	9,f
 15679  11A4  29A1               	goto	u6645
 15680  11A5  1003               	clrc
 15681  11A6  0CA8               	rrf	__Umul8_16@multiplier,f
 15682  11A7  0828               	movf	__Umul8_16@multiplier,w
 15683  11A8  1D03               	btfss	3,2
 15684  11A9  299A               	goto	l7179
 15685  11AA  0825               	movf	__Umul8_16@product+1,w
 15686  11AB  00A1               	movwf	?__Umul8_16+1
 15687  11AC  0824               	movf	__Umul8_16@product,w
 15688  11AD  00A0               	movwf	?__Umul8_16
 15689  11AE  0008               	return
 15690  11AF                     __end_of__Umul8_16:	
 15691                           
 15692                           	psect	text32
 15693  0462                     __ptext32:	
 15694 ;; *************** function ___fldiv *****************
 15695 ;; Defined at:
 15696 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 15697 ;; Parameters:    Size  Location     Type
 15698 ;;  a               4   14[BANK0 ] unsigned int 
 15699 ;;  b               4   18[BANK0 ] unsigned int 
 15700 ;; Auto vars:     Size  Location     Type
 15701 ;;  grs             4   34[BANK0 ] unsigned long 
 15702 ;;  rem             4   27[BANK0 ] unsigned long 
 15703 ;;  new_exp         2   32[BANK0 ] int 
 15704 ;;  aexp            1   39[BANK0 ] unsigned char 
 15705 ;;  bexp            1   38[BANK0 ] unsigned char 
 15706 ;;  sign            1   31[BANK0 ] unsigned char 
 15707 ;; Return value:  Size  Location     Type
 15708 ;;                  4   14[BANK0 ] unsigned char 
 15709 ;; Registers used:
 15710 ;;		wreg, status,2, status,0
 15711 ;; Tracked objects:
 15712 ;;		On entry : 0/0
 15713 ;;		On exit  : 0/0
 15714 ;;		Unchanged: 0/0
 15715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15716 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15717 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15718 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15719 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15720 ;;Total ram usage:       26 bytes
 15721 ;; Hardware stack levels used:    1
 15722 ;; Hardware stack levels required when called:    4
 15723 ;; This function calls:
 15724 ;;		Nothing
 15725 ;; This function is called by:
 15726 ;;		_LED_setColor
 15727 ;;		_beatBrightnessCalculation
 15728 ;; This function uses a non-reentrant model
 15729 ;;
 15730                           
 15731                           
 15732                           ;psect for function ___fldiv
 15733  0462                     ___fldiv:	
 15734                           
 15735                           ;incstack = 0
 15736                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 15737  0462  0140               	movlb	0	; select bank0
 15738  0463  0835               	movf	___fldiv@b+3,w
 15739  0464  3980               	andlw	128
 15740  0465  00B6               	movwf	??___fldiv
 15741  0466  0836               	movf	??___fldiv,w
 15742  0467  00BF               	movwf	___fldiv@sign
 15743  0468  3535               	lslf	___fldiv@b+3,w
 15744  0469  00B6               	movwf	??___fldiv
 15745  046A  0836               	movf	??___fldiv,w
 15746  046B  00C6               	movwf	___fldiv@bexp
 15747  046C  1BB4               	btfsc	___fldiv@b+2,7
 15748  046D  1446               	bsf	___fldiv@bexp,0
 15749  046E  0846               	movf	___fldiv@bexp,w
 15750  046F  1903               	btfsc	3,2
 15751  0470  2C7F               	goto	l7285
 15752  0471  0A46               	incf	___fldiv@bexp,w
 15753  0472  1D03               	btfss	3,2
 15754  0473  2C7C               	goto	l7281
 15755  0474  3000               	movlw	0
 15756  0475  00B5               	movwf	___fldiv@b+3
 15757  0476  3000               	movlw	0
 15758  0477  00B4               	movwf	___fldiv@b+2
 15759  0478  3000               	movlw	0
 15760  0479  00B3               	movwf	___fldiv@b+1
 15761  047A  3000               	movlw	0
 15762  047B  00B2               	movwf	___fldiv@b
 15763  047C                     l7281:	
 15764  047C  17B4               	bsf	___fldiv@b+2,7
 15765  047D  01B5               	clrf	___fldiv@b+3
 15766  047E  2C87               	goto	l7287
 15767  047F                     l7285:	
 15768  047F  3000               	movlw	0
 15769  0480  00B5               	movwf	___fldiv@b+3
 15770  0481  3000               	movlw	0
 15771  0482  00B4               	movwf	___fldiv@b+2
 15772  0483  3000               	movlw	0
 15773  0484  00B3               	movwf	___fldiv@b+1
 15774  0485  3000               	movlw	0
 15775  0486  00B2               	movwf	___fldiv@b
 15776  0487                     l7287:	
 15777  0487  0831               	movf	___fldiv@a+3,w
 15778  0488  3980               	andlw	128
 15779  0489  00B6               	movwf	??___fldiv
 15780  048A  0836               	movf	??___fldiv,w
 15781  048B  06BF               	xorwf	___fldiv@sign,f
 15782  048C  3531               	lslf	___fldiv@a+3,w
 15783  048D  00B6               	movwf	??___fldiv
 15784  048E  0836               	movf	??___fldiv,w
 15785  048F  00C7               	movwf	___fldiv@aexp
 15786  0490  1BB0               	btfsc	___fldiv@a+2,7
 15787  0491  1447               	bsf	___fldiv@aexp,0
 15788  0492  0847               	movf	___fldiv@aexp,w
 15789  0493  1903               	btfsc	3,2
 15790  0494  2CA3               	goto	l7305
 15791  0495  0A47               	incf	___fldiv@aexp,w
 15792  0496  1D03               	btfss	3,2
 15793  0497  2CA0               	goto	l7301
 15794  0498  3000               	movlw	0
 15795  0499  00B1               	movwf	___fldiv@a+3
 15796  049A  3000               	movlw	0
 15797  049B  00B0               	movwf	___fldiv@a+2
 15798  049C  3000               	movlw	0
 15799  049D  00AF               	movwf	___fldiv@a+1
 15800  049E  3000               	movlw	0
 15801  049F  00AE               	movwf	___fldiv@a
 15802  04A0                     l7301:	
 15803  04A0  17B0               	bsf	___fldiv@a+2,7
 15804  04A1  01B1               	clrf	___fldiv@a+3
 15805  04A2  2CAB               	goto	l2033
 15806  04A3                     l7305:	
 15807  04A3  3000               	movlw	0
 15808  04A4  00B1               	movwf	___fldiv@a+3
 15809  04A5  3000               	movlw	0
 15810  04A6  00B0               	movwf	___fldiv@a+2
 15811  04A7  3000               	movlw	0
 15812  04A8  00AF               	movwf	___fldiv@a+1
 15813  04A9  3000               	movlw	0
 15814  04AA  00AE               	movwf	___fldiv@a
 15815  04AB                     l2033:	
 15816  04AB  0831               	movf	___fldiv@a+3,w
 15817  04AC  0430               	iorwf	___fldiv@a+2,w
 15818  04AD  042F               	iorwf	___fldiv@a+1,w
 15819  04AE  042E               	iorwf	___fldiv@a,w
 15820  04AF  1D03               	skipz
 15821  04B0  2CCA               	goto	l7315
 15822  04B1  3000               	movlw	0
 15823  04B2  00B5               	movwf	___fldiv@b+3
 15824  04B3  3000               	movlw	0
 15825  04B4  00B4               	movwf	___fldiv@b+2
 15826  04B5  3000               	movlw	0
 15827  04B6  00B3               	movwf	___fldiv@b+1
 15828  04B7  3000               	movlw	0
 15829  04B8  00B2               	movwf	___fldiv@b
 15830  04B9  3080               	movlw	128
 15831  04BA  04B4               	iorwf	___fldiv@b+2,f
 15832  04BB  307F               	movlw	127
 15833  04BC  04B5               	iorwf	___fldiv@b+3,f
 15834  04BD                     L14:	
 15835  04BD  083F               	movf	___fldiv@sign,w
 15836  04BE  00B6               	movwf	??___fldiv
 15837  04BF  0836               	movf	??___fldiv,w
 15838  04C0  04B5               	iorwf	___fldiv@b+3,f
 15839  04C1  0835               	movf	___fldiv@b+3,w
 15840  04C2  00B1               	movwf	?___fldiv+3
 15841  04C3  0834               	movf	___fldiv@b+2,w
 15842  04C4  00B0               	movwf	?___fldiv+2
 15843  04C5  0833               	movf	___fldiv@b+1,w
 15844  04C6  00AF               	movwf	?___fldiv+1
 15845  04C7  0832               	movf	___fldiv@b,w
 15846  04C8  00AE               	movwf	?___fldiv
 15847  04C9  0008               	return
 15848  04CA                     l7315:	
 15849  04CA  0846               	movf	___fldiv@bexp,w
 15850  04CB  1D03               	btfss	3,2
 15851  04CC  2CD6               	goto	l7321
 15852  04CD  3000               	movlw	0
 15853  04CE  00B1               	movwf	?___fldiv+3
 15854  04CF  3000               	movlw	0
 15855  04D0  00B0               	movwf	?___fldiv+2
 15856  04D1  3000               	movlw	0
 15857  04D2  00AF               	movwf	?___fldiv+1
 15858  04D3  3000               	movlw	0
 15859  04D4  00AE               	movwf	?___fldiv
 15860  04D5  0008               	return
 15861  04D6                     l7321:	
 15862  04D6  0846               	movf	___fldiv@bexp,w
 15863  04D7  00B6               	movwf	??___fldiv
 15864  04D8  01B7               	clrf	??___fldiv+1
 15865  04D9  0837               	movf	??___fldiv+1,w
 15866  04DA  00B9               	movwf	??___fldiv+3
 15867  04DB  0847               	movf	___fldiv@aexp,w
 15868  04DC  0236               	subwf	??___fldiv,w
 15869  04DD  00B8               	movwf	??___fldiv+2
 15870  04DE  1C03               	skipc
 15871  04DF  03B9               	decf	??___fldiv+3,f
 15872  04E0  0838               	movf	??___fldiv+2,w
 15873  04E1  3E7F               	addlw	127
 15874  04E2  00C0               	movwf	___fldiv@new_exp
 15875  04E3  3000               	movlw	0
 15876  04E4  3D39               	addwfc	??___fldiv+3,w
 15877  04E5  00C1               	movwf	___fldiv@new_exp+1
 15878  04E6  0835               	movf	___fldiv@b+3,w
 15879  04E7  00BE               	movwf	___fldiv@rem+3
 15880  04E8  0834               	movf	___fldiv@b+2,w
 15881  04E9  00BD               	movwf	___fldiv@rem+2
 15882  04EA  0833               	movf	___fldiv@b+1,w
 15883  04EB  00BC               	movwf	___fldiv@rem+1
 15884  04EC  0832               	movf	___fldiv@b,w
 15885  04ED  00BB               	movwf	___fldiv@rem
 15886  04EE  3000               	movlw	0
 15887  04EF  00B5               	movwf	___fldiv@b+3
 15888  04F0  3000               	movlw	0
 15889  04F1  00B4               	movwf	___fldiv@b+2
 15890  04F2  3000               	movlw	0
 15891  04F3  00B3               	movwf	___fldiv@b+1
 15892  04F4  3000               	movlw	0
 15893  04F5  00B2               	movwf	___fldiv@b
 15894  04F6  3000               	movlw	0
 15895  04F7  00C5               	movwf	___fldiv@grs+3
 15896  04F8  3000               	movlw	0
 15897  04F9  00C4               	movwf	___fldiv@grs+2
 15898  04FA  3000               	movlw	0
 15899  04FB  00C3               	movwf	___fldiv@grs+1
 15900  04FC  3000               	movlw	0
 15901  04FD  00C2               	movwf	___fldiv@grs
 15902  04FE  01C7               	clrf	___fldiv@aexp
 15903  04FF                     l7349:	
 15904  04FF  301A               	movlw	26
 15905  0500  0247               	subwf	___fldiv@aexp,w
 15906  0501  1803               	btfsc	3,0
 15907  0502  2D3B               	goto	l7351
 15908  0503  0847               	movf	___fldiv@aexp,w
 15909  0504  1903               	btfsc	3,2
 15910  0505  2D1D               	goto	l7341
 15911  0506  3001               	movlw	1
 15912  0507                     u6885:	
 15913  0507  35BB               	lslf	___fldiv@rem,f
 15914  0508  0DBC               	rlf	___fldiv@rem+1,f
 15915  0509  0DBD               	rlf	___fldiv@rem+2,f
 15916  050A  0DBE               	rlf	___fldiv@rem+3,f
 15917  050B  0B89               	decfsz	9,f
 15918  050C  2D07               	goto	u6885
 15919  050D  3001               	movlw	1
 15920  050E                     u6895:	
 15921  050E  35B2               	lslf	___fldiv@b,f
 15922  050F  0DB3               	rlf	___fldiv@b+1,f
 15923  0510  0DB4               	rlf	___fldiv@b+2,f
 15924  0511  0DB5               	rlf	___fldiv@b+3,f
 15925  0512  0B89               	decfsz	9,f
 15926  0513  2D0E               	goto	u6895
 15927  0514  1BC5               	btfsc	___fldiv@grs+3,7
 15928  0515  1432               	bsf	___fldiv@b,0
 15929  0516  3001               	movlw	1
 15930  0517                     u6915:	
 15931  0517  35C2               	lslf	___fldiv@grs,f
 15932  0518  0DC3               	rlf	___fldiv@grs+1,f
 15933  0519  0DC4               	rlf	___fldiv@grs+2,f
 15934  051A  0DC5               	rlf	___fldiv@grs+3,f
 15935  051B  0B89               	decfsz	9,f
 15936  051C  2D17               	goto	u6915
 15937  051D                     l7341:	
 15938  051D  0831               	movf	___fldiv@a+3,w
 15939  051E  023E               	subwf	___fldiv@rem+3,w
 15940  051F  1D03               	skipz
 15941  0520  2D2B               	goto	u6925
 15942  0521  0830               	movf	___fldiv@a+2,w
 15943  0522  023D               	subwf	___fldiv@rem+2,w
 15944  0523  1D03               	skipz
 15945  0524  2D2B               	goto	u6925
 15946  0525  082F               	movf	___fldiv@a+1,w
 15947  0526  023C               	subwf	___fldiv@rem+1,w
 15948  0527  1D03               	skipz
 15949  0528  2D2B               	goto	u6925
 15950  0529  082E               	movf	___fldiv@a,w
 15951  052A  023B               	subwf	___fldiv@rem,w
 15952  052B                     u6925:	
 15953  052B  1C03               	skipc
 15954  052C  2D36               	goto	l7347
 15955  052D  1745               	bsf	___fldiv@grs+3,6
 15956  052E  082E               	movf	___fldiv@a,w
 15957  052F  02BB               	subwf	___fldiv@rem,f
 15958  0530  082F               	movf	___fldiv@a+1,w
 15959  0531  3BBC               	subwfb	___fldiv@rem+1,f
 15960  0532  0830               	movf	___fldiv@a+2,w
 15961  0533  3BBD               	subwfb	___fldiv@rem+2,f
 15962  0534  0831               	movf	___fldiv@a+3,w
 15963  0535  3BBE               	subwfb	___fldiv@rem+3,f
 15964  0536                     l7347:	
 15965  0536  3001               	movlw	1
 15966  0537  00B6               	movwf	??___fldiv
 15967  0538  0836               	movf	??___fldiv,w
 15968  0539  07C7               	addwf	___fldiv@aexp,f
 15969  053A  2CFF               	goto	l7349
 15970  053B                     l7351:	
 15971  053B  083E               	movf	___fldiv@rem+3,w
 15972  053C  043D               	iorwf	___fldiv@rem+2,w
 15973  053D  043C               	iorwf	___fldiv@rem+1,w
 15974  053E  043B               	iorwf	___fldiv@rem,w
 15975  053F  1D03               	btfss	3,2
 15976  0540  1442               	bsf	___fldiv@grs,0
 15977  0541                     l7365:	
 15978  0541  1BB4               	btfsc	___fldiv@b+2,7
 15979  0542  2D58               	goto	l7367
 15980  0543  3001               	movlw	1
 15981  0544                     u6955:	
 15982  0544  35B2               	lslf	___fldiv@b,f
 15983  0545  0DB3               	rlf	___fldiv@b+1,f
 15984  0546  0DB4               	rlf	___fldiv@b+2,f
 15985  0547  0DB5               	rlf	___fldiv@b+3,f
 15986  0548  0B89               	decfsz	9,f
 15987  0549  2D44               	goto	u6955
 15988  054A  1BC5               	btfsc	___fldiv@grs+3,7
 15989  054B  1432               	bsf	___fldiv@b,0
 15990  054C  3001               	movlw	1
 15991  054D                     u6975:	
 15992  054D  35C2               	lslf	___fldiv@grs,f
 15993  054E  0DC3               	rlf	___fldiv@grs+1,f
 15994  054F  0DC4               	rlf	___fldiv@grs+2,f
 15995  0550  0DC5               	rlf	___fldiv@grs+3,f
 15996  0551  0B89               	decfsz	9,f
 15997  0552  2D4D               	goto	u6975
 15998  0553  30FF               	movlw	255
 15999  0554  07C0               	addwf	___fldiv@new_exp,f
 16000  0555  30FF               	movlw	255
 16001  0556  3DC1               	addwfc	___fldiv@new_exp+1,f
 16002  0557  2D41               	goto	l7365
 16003  0558                     l7367:	
 16004  0558  01C7               	clrf	___fldiv@aexp
 16005  0559  1FC5               	btfss	___fldiv@grs+3,7
 16006  055A  2D71               	goto	l7377
 16007  055B  30FF               	movlw	255
 16008  055C  0542               	andwf	___fldiv@grs,w
 16009  055D  00B6               	movwf	??___fldiv
 16010  055E  30FF               	movlw	255
 16011  055F  0543               	andwf	___fldiv@grs+1,w
 16012  0560  00B7               	movwf	??___fldiv+1
 16013  0561  30FF               	movlw	255
 16014  0562  0544               	andwf	___fldiv@grs+2,w
 16015  0563  00B8               	movwf	??___fldiv+2
 16016  0564  307F               	movlw	127
 16017  0565  0545               	andwf	___fldiv@grs+3,w
 16018  0566  00B9               	movwf	??___fldiv+3
 16019  0567  0839               	movf	??___fldiv+3,w
 16020  0568  0438               	iorwf	??___fldiv+2,w
 16021  0569  0437               	iorwf	??___fldiv+1,w
 16022  056A  0436               	iorwf	??___fldiv,w
 16023  056B  1903               	skipnz
 16024  056C  1832               	btfsc	___fldiv@b,0
 16025  056D  2D6F               	goto	l7373
 16026  056E  2D71               	goto	l7377
 16027  056F                     l7373:	
 16028  056F  01C7               	clrf	___fldiv@aexp
 16029  0570  0AC7               	incf	___fldiv@aexp,f
 16030  0571                     l7377:	
 16031  0571  0847               	movf	___fldiv@aexp,w
 16032  0572  1903               	btfsc	3,2
 16033  0573  2D9A               	goto	l7387
 16034  0574  3001               	movlw	1
 16035  0575  07B2               	addwf	___fldiv@b,f
 16036  0576  3000               	movlw	0
 16037  0577  3DB3               	addwfc	___fldiv@b+1,f
 16038  0578  3000               	movlw	0
 16039  0579  3DB4               	addwfc	___fldiv@b+2,f
 16040  057A  3000               	movlw	0
 16041  057B  3DB5               	addwfc	___fldiv@b+3,f
 16042  057C  1C35               	btfss	___fldiv@b+3,0
 16043  057D  2D9A               	goto	l7387
 16044  057E  0832               	movf	___fldiv@b,w
 16045  057F  00B6               	movwf	??___fldiv
 16046  0580  0833               	movf	___fldiv@b+1,w
 16047  0581  00B7               	movwf	??___fldiv+1
 16048  0582  0834               	movf	___fldiv@b+2,w
 16049  0583  00B8               	movwf	??___fldiv+2
 16050  0584  0835               	movf	___fldiv@b+3,w
 16051  0585  00B9               	movwf	??___fldiv+3
 16052  0586  3001               	movlw	1
 16053  0587  00BA               	movwf	??___fldiv+4
 16054  0588                     u7045:	
 16055  0588  37B9               	asrf	??___fldiv+3,f
 16056  0589  0CB8               	rrf	??___fldiv+2,f
 16057  058A  0CB7               	rrf	??___fldiv+1,f
 16058  058B  0CB6               	rrf	??___fldiv,f
 16059  058C  0BBA               	decfsz	??___fldiv+4,f
 16060  058D  2D88               	goto	u7045
 16061  058E  0839               	movf	??___fldiv+3,w
 16062  058F  00B5               	movwf	___fldiv@b+3
 16063  0590  0838               	movf	??___fldiv+2,w
 16064  0591  00B4               	movwf	___fldiv@b+2
 16065  0592  0837               	movf	??___fldiv+1,w
 16066  0593  00B3               	movwf	___fldiv@b+1
 16067  0594  0836               	movf	??___fldiv,w
 16068  0595  00B2               	movwf	___fldiv@b
 16069  0596  3001               	movlw	1
 16070  0597  07C0               	addwf	___fldiv@new_exp,f
 16071  0598  3000               	movlw	0
 16072  0599  3DC1               	addwfc	___fldiv@new_exp+1,f
 16073  059A                     l7387:	
 16074  059A  0841               	movf	___fldiv@new_exp+1,w
 16075  059B  3A80               	xorlw	128
 16076  059C  00B6               	movwf	??___fldiv
 16077  059D  3080               	movlw	128
 16078  059E  0236               	subwf	??___fldiv,w
 16079  059F  1D03               	skipz
 16080  05A0  2DA3               	goto	u7055
 16081  05A1  30FF               	movlw	255
 16082  05A2  0240               	subwf	___fldiv@new_exp,w
 16083  05A3                     u7055:	
 16084  05A3  1C03               	skipc
 16085  05A4  2DB2               	goto	l2054
 16086  05A5  30FF               	movlw	255
 16087  05A6  0140               	movlb	0	; select bank0
 16088  05A7  00C0               	movwf	___fldiv@new_exp
 16089  05A8  3000               	movlw	0
 16090  05A9  00C1               	movwf	___fldiv@new_exp+1
 16091  05AA  3000               	movlw	0
 16092  05AB  00B5               	movwf	___fldiv@b+3
 16093  05AC  3000               	movlw	0
 16094  05AD  00B4               	movwf	___fldiv@b+2
 16095  05AE  3000               	movlw	0
 16096  05AF  00B3               	movwf	___fldiv@b+1
 16097  05B0  3000               	movlw	0
 16098  05B1  00B2               	movwf	___fldiv@b
 16099  05B2                     l2054:	
 16100  05B2  0140               	movlb	0	; select bank0
 16101  05B3  0841               	movf	___fldiv@new_exp+1,w
 16102  05B4  3A80               	xorlw	128
 16103  05B5  00B6               	movwf	??___fldiv
 16104  05B6  3080               	movlw	128
 16105  05B7  0236               	subwf	??___fldiv,w
 16106  05B8  1D03               	skipz
 16107  05B9  2DBC               	goto	u7065
 16108  05BA  3001               	movlw	1
 16109  05BB  0240               	subwf	___fldiv@new_exp,w
 16110  05BC                     u7065:	
 16111  05BC  1803               	skipnc
 16112  05BD  2DCA               	goto	l2055
 16113  05BE  0140               	movlb	0	; select bank0
 16114  05BF  01C0               	clrf	___fldiv@new_exp
 16115  05C0  01C1               	clrf	___fldiv@new_exp+1
 16116  05C1  3000               	movlw	0
 16117  05C2  00B5               	movwf	___fldiv@b+3
 16118  05C3  3000               	movlw	0
 16119  05C4  00B4               	movwf	___fldiv@b+2
 16120  05C5  3000               	movlw	0
 16121  05C6  00B3               	movwf	___fldiv@b+1
 16122  05C7  3000               	movlw	0
 16123  05C8  00B2               	movwf	___fldiv@b
 16124  05C9  01BF               	clrf	___fldiv@sign
 16125  05CA                     l2055:	
 16126  05CA  0140               	movlb	0	; select bank0
 16127  05CB  0840               	movf	___fldiv@new_exp,w
 16128  05CC  00B6               	movwf	??___fldiv
 16129  05CD  0836               	movf	??___fldiv,w
 16130  05CE  00C6               	movwf	___fldiv@bexp
 16131  05CF  1C46               	btfss	___fldiv@bexp,0
 16132  05D0  2DD3               	goto	l7401
 16133  05D1  17B4               	bsf	___fldiv@b+2,7
 16134  05D2  2DD7               	goto	l2057
 16135  05D3                     l7401:	
 16136  05D3  307F               	movlw	127
 16137  05D4  00B6               	movwf	??___fldiv
 16138  05D5  0836               	movf	??___fldiv,w
 16139  05D6  05B4               	andwf	___fldiv@b+2,f
 16140  05D7                     l2057:	
 16141  05D7  3646               	lsrf	___fldiv@bexp,w
 16142  05D8  00B6               	movwf	??___fldiv
 16143  05D9  0836               	movf	??___fldiv,w
 16144  05DA  00B5               	movwf	___fldiv@b+3
 16145  05DB  2CBD               	goto	L14
 16146  05DC                     __end_of___fldiv:	
 16147                           
 16148                           	psect	text33
 16149  1151                     __ptext33:	
 16150 ;; *************** function _PWM4_LoadDutyValue *****************
 16151 ;; Defined at:
 16152 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 16153 ;; Parameters:    Size  Location     Type
 16154 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16155 ;; Auto vars:     Size  Location     Type
 16156 ;;		None
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  1    wreg      void 
 16159 ;; Registers used:
 16160 ;;		wreg, status,2
 16161 ;; Tracked objects:
 16162 ;;		On entry : 0/0
 16163 ;;		On exit  : 0/0
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16166 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16169 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16170 ;;Total ram usage:        2 bytes
 16171 ;; Hardware stack levels used:    1
 16172 ;; Hardware stack levels required when called:    4
 16173 ;; This function calls:
 16174 ;;		Nothing
 16175 ;; This function is called by:
 16176 ;;		_LED_setColor
 16177 ;; This function uses a non-reentrant model
 16178 ;;
 16179                           
 16180                           
 16181                           ;psect for function _PWM4_LoadDutyValue
 16182  1151                     _PWM4_LoadDutyValue:	
 16183                           
 16184                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 127){
 16185                           
 16186                           ;incstack = 0
 16187                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 16188  1151  3000               	movlw	0
 16189  1152  0141               	movlb	1	; select bank1
 16190  1153  0248               	subwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 16191  1154  3080               	movlw	128
 16192  1155  1903               	skipnz
 16193  1156  0247               	subwf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 16194  1157  1803               	skipnc
 16195  1158  0008               	return
 16196                           
 16197                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 16198  1159  30FF               	movlw	255
 16199  115A  05C7               	andwf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 16200  115B  3003               	movlw	3
 16201  115C  05C8               	andwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 16202                           
 16203                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 16204  115D  0146               	movlb	6	; select bank6
 16205  115E  1E1A               	btfss	26,4	;volatile
 16206  115F  2966               	goto	l7615
 16207                           
 16208                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 16209  1160  3006               	movlw	6
 16210  1161  0141               	movlb	1	; select bank1
 16211  1162                     u7535:	
 16212  1162  35C7               	lslf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 16213  1163  0DC8               	rlf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 16214  1164  0B89               	decfsz	9,f
 16215  1165  2962               	goto	u7535
 16216  1166                     l7615:	
 16217                           
 16218                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 16219  1166  0141               	movlb	1	; select bank1
 16220  1167  0848               	movf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 16221  1168  0146               	movlb	6	; select bank6
 16222  1169  0099               	movwf	25	;volatile
 16223                           
 16224                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 16225  116A  0141               	movlb	1	; select bank1
 16226  116B  0847               	movf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 16227  116C  0146               	movlb	6	; select bank6
 16228  116D  0098               	movwf	24	;volatile
 16229                           
 16230                           ;mcc_generated_files/pwm4.c: 93:         }
 16231  116E  0008               	return
 16232  116F                     __end_of_PWM4_LoadDutyValue:	
 16233                           
 16234                           	psect	text34
 16235  1133                     __ptext34:	
 16236 ;; *************** function _PWM3_LoadDutyValue *****************
 16237 ;; Defined at:
 16238 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 16239 ;; Parameters:    Size  Location     Type
 16240 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16241 ;; Auto vars:     Size  Location     Type
 16242 ;;		None
 16243 ;; Return value:  Size  Location     Type
 16244 ;;                  1    wreg      void 
 16245 ;; Registers used:
 16246 ;;		wreg, status,2
 16247 ;; Tracked objects:
 16248 ;;		On entry : 0/0
 16249 ;;		On exit  : 0/0
 16250 ;;		Unchanged: 0/0
 16251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16252 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16255 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16256 ;;Total ram usage:        2 bytes
 16257 ;; Hardware stack levels used:    1
 16258 ;; Hardware stack levels required when called:    4
 16259 ;; This function calls:
 16260 ;;		Nothing
 16261 ;; This function is called by:
 16262 ;;		_LED_setColor
 16263 ;; This function uses a non-reentrant model
 16264 ;;
 16265                           
 16266                           
 16267                           ;psect for function _PWM3_LoadDutyValue
 16268  1133                     _PWM3_LoadDutyValue:	
 16269                           
 16270                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 127){
 16271                           
 16272                           ;incstack = 0
 16273                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 16274  1133  3000               	movlw	0
 16275  1134  0141               	movlb	1	; select bank1
 16276  1135  0248               	subwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 16277  1136  3080               	movlw	128
 16278  1137  1903               	skipnz
 16279  1138  0247               	subwf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 16280  1139  1803               	skipnc
 16281  113A  0008               	return
 16282                           
 16283                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 16284  113B  30FF               	movlw	255
 16285  113C  05C7               	andwf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 16286  113D  3003               	movlw	3
 16287  113E  05C8               	andwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 16288                           
 16289                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 16290  113F  0146               	movlb	6	; select bank6
 16291  1140  1E16               	btfss	22,4	;volatile
 16292  1141  2948               	goto	l7599
 16293                           
 16294                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 16295  1142  3006               	movlw	6
 16296  1143  0141               	movlb	1	; select bank1
 16297  1144                     u7505:	
 16298  1144  35C7               	lslf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 16299  1145  0DC8               	rlf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 16300  1146  0B89               	decfsz	9,f
 16301  1147  2944               	goto	u7505
 16302  1148                     l7599:	
 16303                           
 16304                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 16305  1148  0141               	movlb	1	; select bank1
 16306  1149  0848               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 16307  114A  0146               	movlb	6	; select bank6
 16308  114B  0095               	movwf	21	;volatile
 16309                           
 16310                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 16311  114C  0141               	movlb	1	; select bank1
 16312  114D  0847               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 16313  114E  0146               	movlb	6	; select bank6
 16314  114F  0094               	movwf	20	;volatile
 16315                           
 16316                           ;mcc_generated_files/pwm3.c: 93:         }
 16317  1150  0008               	return
 16318  1151                     __end_of_PWM3_LoadDutyValue:	
 16319                           
 16320                           	psect	text35
 16321  1115                     __ptext35:	
 16322 ;; *************** function _PWM2_LoadDutyValue *****************
 16323 ;; Defined at:
 16324 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 16325 ;; Parameters:    Size  Location     Type
 16326 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16327 ;; Auto vars:     Size  Location     Type
 16328 ;;		None
 16329 ;; Return value:  Size  Location     Type
 16330 ;;                  1    wreg      void 
 16331 ;; Registers used:
 16332 ;;		wreg, status,2
 16333 ;; Tracked objects:
 16334 ;;		On entry : 0/0
 16335 ;;		On exit  : 0/0
 16336 ;;		Unchanged: 0/0
 16337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16338 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16341 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16342 ;;Total ram usage:        2 bytes
 16343 ;; Hardware stack levels used:    1
 16344 ;; Hardware stack levels required when called:    4
 16345 ;; This function calls:
 16346 ;;		Nothing
 16347 ;; This function is called by:
 16348 ;;		_LED_setColor
 16349 ;; This function uses a non-reentrant model
 16350 ;;
 16351                           
 16352                           
 16353                           ;psect for function _PWM2_LoadDutyValue
 16354  1115                     _PWM2_LoadDutyValue:	
 16355                           
 16356                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 127){
 16357                           
 16358                           ;incstack = 0
 16359                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 16360  1115  3000               	movlw	0
 16361  1116  0141               	movlb	1	; select bank1
 16362  1117  0248               	subwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 16363  1118  3080               	movlw	128
 16364  1119  1903               	skipnz
 16365  111A  0247               	subwf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 16366  111B  1803               	skipnc
 16367  111C  0008               	return
 16368                           
 16369                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 16370  111D  30FF               	movlw	255
 16371  111E  05C7               	andwf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 16372  111F  3003               	movlw	3
 16373  1120  05C8               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 16374                           
 16375                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 16376  1121  0146               	movlb	6	; select bank6
 16377  1122  1E12               	btfss	18,4	;volatile
 16378  1123  292A               	goto	l7647
 16379                           
 16380                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 16381  1124  3006               	movlw	6
 16382  1125  0141               	movlb	1	; select bank1
 16383  1126                     u7595:	
 16384  1126  35C7               	lslf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 16385  1127  0DC8               	rlf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 16386  1128  0B89               	decfsz	9,f
 16387  1129  2926               	goto	u7595
 16388  112A                     l7647:	
 16389                           
 16390                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 16391  112A  0141               	movlb	1	; select bank1
 16392  112B  0848               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 16393  112C  0146               	movlb	6	; select bank6
 16394  112D  0091               	movwf	17	;volatile
 16395                           
 16396                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 16397  112E  0141               	movlb	1	; select bank1
 16398  112F  0847               	movf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 16399  1130  0146               	movlb	6	; select bank6
 16400  1131  0090               	movwf	16	;volatile
 16401                           
 16402                           ;mcc_generated_files/pwm2.c: 93:         }
 16403  1132  0008               	return
 16404  1133                     __end_of_PWM2_LoadDutyValue:	
 16405                           
 16406                           	psect	text36
 16407  10F7                     __ptext36:	
 16408 ;; *************** function _PWM1_LoadDutyValue *****************
 16409 ;; Defined at:
 16410 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 16411 ;; Parameters:    Size  Location     Type
 16412 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16413 ;; Auto vars:     Size  Location     Type
 16414 ;;		None
 16415 ;; Return value:  Size  Location     Type
 16416 ;;                  1    wreg      void 
 16417 ;; Registers used:
 16418 ;;		wreg, status,2
 16419 ;; Tracked objects:
 16420 ;;		On entry : 0/0
 16421 ;;		On exit  : 0/0
 16422 ;;		Unchanged: 0/0
 16423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16424 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16427 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16428 ;;Total ram usage:        2 bytes
 16429 ;; Hardware stack levels used:    1
 16430 ;; Hardware stack levels required when called:    4
 16431 ;; This function calls:
 16432 ;;		Nothing
 16433 ;; This function is called by:
 16434 ;;		_LED_setColor
 16435 ;; This function uses a non-reentrant model
 16436 ;;
 16437                           
 16438                           
 16439                           ;psect for function _PWM1_LoadDutyValue
 16440  10F7                     _PWM1_LoadDutyValue:	
 16441                           
 16442                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 127){
 16443                           
 16444                           ;incstack = 0
 16445                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 16446  10F7  3000               	movlw	0
 16447  10F8  0141               	movlb	1	; select bank1
 16448  10F9  0248               	subwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 16449  10FA  3080               	movlw	128
 16450  10FB  1903               	skipnz
 16451  10FC  0247               	subwf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 16452  10FD  1803               	skipnc
 16453  10FE  0008               	return
 16454                           
 16455                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 16456  10FF  30FF               	movlw	255
 16457  1100  05C7               	andwf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 16458  1101  3003               	movlw	3
 16459  1102  05C8               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 16460                           
 16461                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 16462  1103  0146               	movlb	6	; select bank6
 16463  1104  1E0E               	btfss	14,4	;volatile
 16464  1105  290C               	goto	l7631
 16465                           
 16466                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 16467  1106  3006               	movlw	6
 16468  1107  0141               	movlb	1	; select bank1
 16469  1108                     u7565:	
 16470  1108  35C7               	lslf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 16471  1109  0DC8               	rlf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 16472  110A  0B89               	decfsz	9,f
 16473  110B  2908               	goto	u7565
 16474  110C                     l7631:	
 16475                           
 16476                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 16477  110C  0141               	movlb	1	; select bank1
 16478  110D  0848               	movf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 16479  110E  0146               	movlb	6	; select bank6
 16480  110F  008D               	movwf	13	;volatile
 16481                           
 16482                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 16483  1110  0141               	movlb	1	; select bank1
 16484  1111  0847               	movf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 16485  1112  0146               	movlb	6	; select bank6
 16486  1113  008C               	movwf	12	;volatile
 16487                           
 16488                           ;mcc_generated_files/pwm1.c: 93:         }
 16489  1114  0008               	return
 16490  1115                     __end_of_PWM1_LoadDutyValue:	
 16491                           
 16492                           	psect	text37
 16493  1EE0                     __ptext37:	
 16494 ;; *************** function _BEAT_detected *****************
 16495 ;; Defined at:
 16496 ;;		line 49 in file "beat.c"
 16497 ;; Parameters:    Size  Location     Type
 16498 ;;		None
 16499 ;; Auto vars:     Size  Location     Type
 16500 ;;		None
 16501 ;; Return value:  Size  Location     Type
 16502 ;;                  1    wreg      _Bool 
 16503 ;; Registers used:
 16504 ;;		wreg, status,2, status,0
 16505 ;; Tracked objects:
 16506 ;;		On entry : 0/0
 16507 ;;		On exit  : 0/0
 16508 ;;		Unchanged: 0/0
 16509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16514 ;;Total ram usage:        0 bytes
 16515 ;; Hardware stack levels used:    1
 16516 ;; Hardware stack levels required when called:    4
 16517 ;; This function calls:
 16518 ;;		Nothing
 16519 ;; This function is called by:
 16520 ;;		_LED_task_BEAT_STROBE
 16521 ;; This function uses a non-reentrant model
 16522 ;;
 16523                           
 16524                           
 16525                           ;psect for function _BEAT_detected
 16526  1EE0                     _BEAT_detected:	
 16527                           
 16528                           ;beat.c: 50:     if (detected) {
 16529                           
 16530                           ;incstack = 0
 16531                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 16532  1EE0  0141               	movlb	1	; select bank1
 16533  1EE1  082F               	movf	_detected^(0+128),w
 16534  1EE2  1903               	btfsc	3,2
 16535  1EE3  2EE7               	goto	l7735
 16536                           
 16537                           ;beat.c: 51:         detected = 0;
 16538  1EE4  01AF               	clrf	_detected^(0+128)
 16539                           
 16540                           ;beat.c: 52:         return 1;
 16541  1EE5  3001               	movlw	1
 16542  1EE6  0008               	return
 16543  1EE7                     l7735:	
 16544                           
 16545                           ;beat.c: 55:     return 0;
 16546  1EE7  3000               	movlw	0
 16547  1EE8  0008               	return
 16548  1EE9                     __end_of_BEAT_detected:	
 16549                           
 16550                           	psect	text38
 16551  1E72                     __ptext38:	
 16552 ;; *************** function _LED_task_BEAT_MIXED *****************
 16553 ;; Defined at:
 16554 ;;		line 210 in file "led.c"
 16555 ;; Parameters:    Size  Location     Type
 16556 ;;		None
 16557 ;; Auto vars:     Size  Location     Type
 16558 ;;		None
 16559 ;; Return value:  Size  Location     Type
 16560 ;;                  1    wreg      void 
 16561 ;; Registers used:
 16562 ;;		None
 16563 ;; Tracked objects:
 16564 ;;		On entry : 0/0
 16565 ;;		On exit  : 0/0
 16566 ;;		Unchanged: 0/0
 16567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16572 ;;Total ram usage:        0 bytes
 16573 ;; Hardware stack levels used:    1
 16574 ;; Hardware stack levels required when called:    4
 16575 ;; This function calls:
 16576 ;;		Nothing
 16577 ;; This function is called by:
 16578 ;;		_LED_task
 16579 ;; This function uses a non-reentrant model
 16580 ;;
 16581                           
 16582                           
 16583                           ;psect for function _LED_task_BEAT_MIXED
 16584  1E72                     _LED_task_BEAT_MIXED:	
 16585                           
 16586                           ;incstack = 0
 16587                           ; Regs used in _LED_task_BEAT_MIXED: []
 16588  1E72  0008               	return
 16589  1E73                     __end_of_LED_task_BEAT_MIXED:	
 16590                           
 16591                           	psect	text39
 16592  1E71                     __ptext39:	
 16593 ;; *************** function _LED_task_BEAT_FADE *****************
 16594 ;; Defined at:
 16595 ;;		line 196 in file "led.c"
 16596 ;; Parameters:    Size  Location     Type
 16597 ;;		None
 16598 ;; Auto vars:     Size  Location     Type
 16599 ;;		None
 16600 ;; Return value:  Size  Location     Type
 16601 ;;                  1    wreg      void 
 16602 ;; Registers used:
 16603 ;;		None
 16604 ;; Tracked objects:
 16605 ;;		On entry : 0/0
 16606 ;;		On exit  : 0/0
 16607 ;;		Unchanged: 0/0
 16608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16613 ;;Total ram usage:        0 bytes
 16614 ;; Hardware stack levels used:    1
 16615 ;; Hardware stack levels required when called:    4
 16616 ;; This function calls:
 16617 ;;		Nothing
 16618 ;; This function is called by:
 16619 ;;		_LED_task
 16620 ;; This function uses a non-reentrant model
 16621 ;;
 16622                           
 16623                           
 16624                           ;psect for function _LED_task_BEAT_FADE
 16625  1E71                     _LED_task_BEAT_FADE:	
 16626                           
 16627                           ;incstack = 0
 16628                           ; Regs used in _LED_task_BEAT_FADE: []
 16629  1E71  0008               	return
 16630  1E72                     __end_of_LED_task_BEAT_FADE:	
 16631                           
 16632                           	psect	text40
 16633  1E70                     __ptext40:	
 16634 ;; *************** function _LED_task_BEAT_CONTINUOUS *****************
 16635 ;; Defined at:
 16636 ;;		line 206 in file "led.c"
 16637 ;; Parameters:    Size  Location     Type
 16638 ;;		None
 16639 ;; Auto vars:     Size  Location     Type
 16640 ;;		None
 16641 ;; Return value:  Size  Location     Type
 16642 ;;                  1    wreg      void 
 16643 ;; Registers used:
 16644 ;;		None
 16645 ;; Tracked objects:
 16646 ;;		On entry : 0/0
 16647 ;;		On exit  : 0/0
 16648 ;;		Unchanged: 0/0
 16649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16654 ;;Total ram usage:        0 bytes
 16655 ;; Hardware stack levels used:    1
 16656 ;; Hardware stack levels required when called:    4
 16657 ;; This function calls:
 16658 ;;		Nothing
 16659 ;; This function is called by:
 16660 ;;		_LED_task
 16661 ;; This function uses a non-reentrant model
 16662 ;;
 16663                           
 16664                           
 16665                           ;psect for function _LED_task_BEAT_CONTINUOUS
 16666  1E70                     _LED_task_BEAT_CONTINUOUS:	
 16667                           
 16668                           ;incstack = 0
 16669                           ; Regs used in _LED_task_BEAT_CONTINUOUS: []
 16670  1E70  0008               	return
 16671  1E71                     __end_of_LED_task_BEAT_CONTINUOUS:	
 16672                           
 16673                           	psect	text41
 16674  1E6F                     __ptext41:	
 16675 ;; *************** function _LED_task_ANIMATION *****************
 16676 ;; Defined at:
 16677 ;;		line 202 in file "led.c"
 16678 ;; Parameters:    Size  Location     Type
 16679 ;;		None
 16680 ;; Auto vars:     Size  Location     Type
 16681 ;;		None
 16682 ;; Return value:  Size  Location     Type
 16683 ;;                  1    wreg      void 
 16684 ;; Registers used:
 16685 ;;		None
 16686 ;; Tracked objects:
 16687 ;;		On entry : 0/0
 16688 ;;		On exit  : 0/0
 16689 ;;		Unchanged: 0/0
 16690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16695 ;;Total ram usage:        0 bytes
 16696 ;; Hardware stack levels used:    1
 16697 ;; Hardware stack levels required when called:    4
 16698 ;; This function calls:
 16699 ;;		Nothing
 16700 ;; This function is called by:
 16701 ;;		_LED_task
 16702 ;; This function uses a non-reentrant model
 16703 ;;
 16704                           
 16705                           
 16706                           ;psect for function _LED_task_ANIMATION
 16707  1E6F                     _LED_task_ANIMATION:	
 16708                           
 16709                           ;incstack = 0
 16710                           ; Regs used in _LED_task_ANIMATION: []
 16711  1E6F  0008               	return
 16712  1E70                     __end_of_LED_task_ANIMATION:	
 16713                           
 16714                           	psect	text42
 16715  1EA2                     __ptext42:	
 16716 ;; *************** function _LED_init *****************
 16717 ;; Defined at:
 16718 ;;		line 46 in file "led.c"
 16719 ;; Parameters:    Size  Location     Type
 16720 ;;		None
 16721 ;; Auto vars:     Size  Location     Type
 16722 ;;		None
 16723 ;; Return value:  Size  Location     Type
 16724 ;;                  1    wreg      void 
 16725 ;; Registers used:
 16726 ;;		status,2
 16727 ;; Tracked objects:
 16728 ;;		On entry : 0/0
 16729 ;;		On exit  : 0/0
 16730 ;;		Unchanged: 0/0
 16731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16736 ;;Total ram usage:        0 bytes
 16737 ;; Hardware stack levels used:    1
 16738 ;; Hardware stack levels required when called:    4
 16739 ;; This function calls:
 16740 ;;		Nothing
 16741 ;; This function is called by:
 16742 ;;		_main
 16743 ;; This function uses a non-reentrant model
 16744 ;;
 16745                           
 16746                           
 16747                           ;psect for function _LED_init
 16748  1EA2                     _LED_init:	
 16749                           
 16750                           ;led.c: 47:     manual.red = 0;
 16751                           
 16752                           ;incstack = 0
 16753                           ; Regs used in _LED_init: [status,2]
 16754  1EA2  0141               	movlb	1	; select bank1
 16755  1EA3  01A6               	clrf	(_manual^(0+128)+1)
 16756                           
 16757                           ;led.c: 48:     manual.green = 0;
 16758  1EA4  01A7               	clrf	(_manual^(0+128)+2)
 16759                           
 16760                           ;led.c: 49:     manual.blue = 0;
 16761  1EA5  01A8               	clrf	(_manual^(0+128)+3)
 16762                           
 16763                           ;led.c: 50:     manual.white = 0;
 16764  1EA6  01A5               	clrf	_manual^(0+128)
 16765                           
 16766                           ;led.c: 51:     TRISCbits.TRISC5 = 0;
 16767  1EA7  0140               	movlb	0	; select bank0
 16768  1EA8  1294               	bcf	20,5	;volatile
 16769  1EA9  0008               	return
 16770  1EAA                     __end_of_LED_init:	
 16771                           
 16772                           	psect	text43
 16773  1FB1                     __ptext43:	
 16774 ;; *************** function _DMX_init *****************
 16775 ;; Defined at:
 16776 ;;		line 21 in file "dmx.c"
 16777 ;; Parameters:    Size  Location     Type
 16778 ;;		None
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;		None
 16781 ;; Return value:  Size  Location     Type
 16782 ;;                  1    wreg      void 
 16783 ;; Registers used:
 16784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16785 ;; Tracked objects:
 16786 ;;		On entry : 0/0
 16787 ;;		On exit  : 0/0
 16788 ;;		Unchanged: 0/0
 16789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16794 ;;Total ram usage:        0 bytes
 16795 ;; Hardware stack levels used:    1
 16796 ;; Hardware stack levels required when called:    9
 16797 ;; This function calls:
 16798 ;;		_EUSART1_SetRxInterruptHandler
 16799 ;;		_TM1650_fastPrintNum
 16800 ;; This function is called by:
 16801 ;;		_main
 16802 ;; This function uses a non-reentrant model
 16803 ;;
 16804                           
 16805                           
 16806                           ;psect for function _DMX_init
 16807  1FB1                     _DMX_init:	
 16808                           
 16809                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 16810                           
 16811                           ;incstack = 0
 16812                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16813  1FB1  3042               	movlw	low _DMX_interrupt
 16814  1FB2  0140               	movlb	0	; select bank0
 16815  1FB3  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 16816  1FB4  3013               	movlw	high _DMX_interrupt
 16817  1FB5  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 16818  1FB6  319E  26D7  319F   	fcall	_EUSART1_SetRxInterruptHandler
 16819                           
 16820                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 16821  1FB9  0141               	movlb	1	; select bank1
 16822  1FBA  086D               	movf	(_address+1)^(0+128),w
 16823  1FBB  0140               	movlb	0	; select bank0
 16824  1FBC  00B5               	movwf	TM1650_fastPrintNum@num+1
 16825  1FBD  0141               	movlb	1	; select bank1
 16826  1FBE  086C               	movf	_address^(0+128),w
 16827  1FBF  0140               	movlb	0	; select bank0
 16828  1FC0  00B4               	movwf	TM1650_fastPrintNum@num
 16829  1FC1  318B  234D         	fcall	_TM1650_fastPrintNum
 16830  1FC3  0008               	return
 16831  1FC4                     __end_of_DMX_init:	
 16832                           
 16833                           	psect	text44
 16834  1ED7                     __ptext44:	
 16835 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 16836 ;; Defined at:
 16837 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 16838 ;; Parameters:    Size  Location     Type
 16839 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 16840 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 16841 ;; Auto vars:     Size  Location     Type
 16842 ;;		None
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  1    wreg      void 
 16845 ;; Registers used:
 16846 ;;		wreg
 16847 ;; Tracked objects:
 16848 ;;		On entry : 0/0
 16849 ;;		On exit  : 0/0
 16850 ;;		Unchanged: 0/0
 16851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16855 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16856 ;;Total ram usage:        2 bytes
 16857 ;; Hardware stack levels used:    1
 16858 ;; Hardware stack levels required when called:    4
 16859 ;; This function calls:
 16860 ;;		Nothing
 16861 ;; This function is called by:
 16862 ;;		_EUSART1_Initialize
 16863 ;;		_DMX_init
 16864 ;; This function uses a non-reentrant model
 16865 ;;
 16866                           
 16867                           
 16868                           ;psect for function _EUSART1_SetRxInterruptHandler
 16869  1ED7                     _EUSART1_SetRxInterruptHandler:	
 16870                           
 16871                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 16872                           
 16873                           ;incstack = 0
 16874                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 16875  1ED7  0140               	movlb	0	; select bank0
 16876  1ED8  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 16877  1ED9  0142               	movlb	2	; select bank2
 16878  1EDA  00E3               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 16879  1EDB  0140               	movlb	0	; select bank0
 16880  1EDC  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 16881  1EDD  0142               	movlb	2	; select bank2
 16882  1EDE  00E2               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 16883  1EDF  0008               	return
 16884  1EE0                     __end_of_EUSART1_SetRxInterruptHandler:	
 16885                           
 16886                           	psect	text45
 16887  02BC                     __ptext45:	
 16888 ;; *************** function _CONTROLLER_task *****************
 16889 ;; Defined at:
 16890 ;;		line 25 in file "controller.c"
 16891 ;; Parameters:    Size  Location     Type
 16892 ;;		None
 16893 ;; Auto vars:     Size  Location     Type
 16894 ;;  isActive        1   79[BANK0 ] _Bool 
 16895 ;; Return value:  Size  Location     Type
 16896 ;;                  1    wreg      void 
 16897 ;; Registers used:
 16898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16899 ;; Tracked objects:
 16900 ;;		On entry : 0/0
 16901 ;;		On exit  : 0/0
 16902 ;;		Unchanged: 0/0
 16903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16906 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16907 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16908 ;;Total ram usage:        3 bytes
 16909 ;; Hardware stack levels used:    1
 16910 ;; Hardware stack levels required when called:   18
 16911 ;; This function calls:
 16912 ;;		_BUTTONS_isClicked
 16913 ;;		_CLOCK_getTime
 16914 ;;		_CONTROL_BEAT
 16915 ;;		_CONTROL_DMX
 16916 ;;		_CONTROL_MANUAL
 16917 ;;		_TM1650_enable
 16918 ;;		_TM1650_fastPrintNum
 16919 ;;		_getManualColor
 16920 ;;		_menuSelection
 16921 ;;		_printf
 16922 ;; This function is called by:
 16923 ;;		_main
 16924 ;; This function uses a non-reentrant model
 16925 ;;
 16926                           
 16927                           
 16928                           ;psect for function _CONTROLLER_task
 16929  02BC                     _CONTROLLER_task:	
 16930                           
 16931                           ;controller.c: 27:     _Bool isActive = 1;
 16932                           
 16933                           ;incstack = 0
 16934 ;; hardware stack exceeded
 16935                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16936  02BC  0140               	movlb	0	; select bank0
 16937  02BD  01EF               	clrf	CONTROLLER_task@isActive
 16938  02BE  0AEF               	incf	CONTROLLER_task@isActive,f
 16939                           
 16940                           ;controller.c: 28:     upState = BUTTONS_isClicked(up);
 16941  02BF  0141               	movlb	1	; select bank1
 16942  02C0  083D               	movf	_up^(0+128),w
 16943  02C1  319F  27C4  3182   	fcall	_BUTTONS_isClicked
 16944  02C4  0141               	movlb	1	; select bank1
 16945  02C5  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16946  02C6  0851               	movf	??_CONTROLLER_task^(0+128),w
 16947  02C7  00B6               	movwf	_upState^(0+128)
 16948                           
 16949                           ;controller.c: 29:     downState = BUTTONS_isClicked(down);
 16950  02C8  083C               	movf	_down^(0+128),w
 16951  02C9  319F  27C4  3182   	fcall	_BUTTONS_isClicked
 16952  02CC  0141               	movlb	1	; select bank1
 16953  02CD  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16954  02CE  0851               	movf	??_CONTROLLER_task^(0+128),w
 16955  02CF  00B5               	movwf	_downState^(0+128)
 16956                           
 16957                           ;controller.c: 30:     menuState = BUTTONS_isClicked(menu);
 16958  02D0  083E               	movf	_menu^(0+128),w
 16959  02D1  319F  27C4  3182   	fcall	_BUTTONS_isClicked
 16960  02D4  0141               	movlb	1	; select bank1
 16961  02D5  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16962  02D6  0851               	movf	??_CONTROLLER_task^(0+128),w
 16963  02D7  00B4               	movwf	_menuState^(0+128)
 16964                           
 16965                           ;controller.c: 31:     enterState = BUTTONS_isClicked(enter);
 16966  02D8  083B               	movf	_enter^(0+128),w
 16967  02D9  319F  27C4  3182   	fcall	_BUTTONS_isClicked
 16968  02DC  0141               	movlb	1	; select bank1
 16969  02DD  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16970  02DE  0851               	movf	??_CONTROLLER_task^(0+128),w
 16971  02DF  00B3               	movwf	_enterState^(0+128)
 16972                           
 16973                           ;controller.c: 33:     if (startup == 1 && CLOCK_getTime() - startTime < 5000) {
 16974  02E0  036E               	decf	_startup^(0+128),w
 16975  02E1  1D03               	btfss	3,2
 16976  02E2  2B08               	goto	l8475
 16977  02E3  319E  26C5  3182   	fcall	_CLOCK_getTime
 16978  02E6  0142               	movlb	2	; select bank2
 16979  02E7  084A               	movf	_startTime^(0+256),w
 16980  02E8  0140               	movlb	0	; select bank0
 16981  02E9  0220               	subwf	?_CLOCK_getTime,w
 16982  02EA  0141               	movlb	1	; select bank1
 16983  02EB  00D1               	movwf	??_CONTROLLER_task^(0+128)
 16984  02EC  0142               	movlb	2	; select bank2
 16985  02ED  084B               	movf	(_startTime+1)^(0+256),w
 16986  02EE  0140               	movlb	0	; select bank0
 16987  02EF  3B21               	subwfb	?_CLOCK_getTime+1,w
 16988  02F0  0141               	movlb	1	; select bank1
 16989  02F1  00D2               	movwf	(??_CONTROLLER_task+1)^(0+128)
 16990  02F2  3013               	movlw	19
 16991  02F3  0252               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 16992  02F4  3088               	movlw	136
 16993  02F5  1903               	skipnz
 16994  02F6  0251               	subwf	??_CONTROLLER_task^(0+128),w
 16995  02F7  1803               	skipnc
 16996  02F8  2B08               	goto	l8475
 16997                           
 16998                           ;controller.c: 34:         menuSelection();
 16999  02F9  3188  2049  3182   	fcall	_menuSelection
 17000                           
 17001                           ;controller.c: 35:         if (upState || downState || menuState) {
 17002  02FC  0141               	movlb	1	; select bank1
 17003  02FD  0836               	movf	_upState^(0+128),w
 17004  02FE  1D03               	btfss	3,2
 17005  02FF  2B05               	goto	l1018
 17006  0300  0835               	movf	_downState^(0+128),w
 17007  0301  1903               	btfsc	3,2
 17008  0302  0834               	movf	_menuState^(0+128),w
 17009  0303  1903               	btfsc	3,2
 17010  0304  0008               	return
 17011  0305                     l1018:	
 17012                           
 17013                           ;controller.c: 36:             menuPressed = 1;
 17014  0305  01B8               	clrf	_menuPressed^(0+128)
 17015  0306  0AB8               	incf	_menuPressed^(0+128),f
 17016                           
 17017                           ;controller.c: 39:         return;
 17018                           
 17019                           ;controller.c: 37:         }
 17020  0307  0008               	return
 17021  0308                     l8475:	
 17022                           
 17023                           ;controller.c: 42:         if (menuPressed == 0 && startup == 1)
 17024  0308  0838               	movf	_menuPressed^(0+128),w
 17025  0309  1D03               	btfss	3,2
 17026  030A  2B0F               	goto	l1021
 17027  030B  036E               	decf	_startup^(0+128),w
 17028  030C  1D03               	btfss	3,2
 17029  030D  2B0F               	goto	l1021
 17030                           
 17031                           ;controller.c: 43:             currentSelection = MODE_DMX;
 17032  030E  01B9               	clrf	_currentSelection^(0+128)
 17033  030F                     l1021:	
 17034                           
 17035                           ;controller.c: 44:         startup = 0;
 17036  030F  01EE               	clrf	_startup^(0+128)
 17037                           
 17038                           ;controller.c: 47:     if ((menuState || menuPressed) && !enterPressed) {
 17039  0310  0834               	movf	_menuState^(0+128),w
 17040  0311  1903               	btfsc	3,2
 17041  0312  0838               	movf	_menuPressed^(0+128),w
 17042  0313  1903               	btfsc	3,2
 17043  0314  2B1E               	goto	l8491
 17044  0315  0837               	movf	_enterPressed^(0+128),w
 17045  0316  1D03               	btfss	3,2
 17046  0317  2B1E               	goto	l8491
 17047                           
 17048                           ;controller.c: 48:         menuPressed = 1;
 17049  0318  01B8               	clrf	_menuPressed^(0+128)
 17050  0319  0AB8               	incf	_menuPressed^(0+128),f
 17051                           
 17052                           ;controller.c: 49:         menuSelection();
 17053  031A  3188  2049  3182   	fcall	_menuSelection
 17054                           
 17055                           ;controller.c: 50:     } else if (currentSelection == MODE_DMX) {
 17056  031D  2B53               	goto	l8517
 17057  031E                     l8491:	
 17058  031E  0839               	movf	_currentSelection^(0+128),w
 17059  031F  1D03               	btfss	3,2
 17060  0320  2B25               	goto	l8495
 17061                           
 17062                           ;controller.c: 51:         isActive = CONTROL_DMX();
 17063  0321  3189  215D  3182   	fcall	_CONTROL_DMX
 17064  0324  2B4B               	goto	L16
 17065  0325                     l8495:	
 17066                           ;controller.c: 52:     } else if (currentSelection == MODE_ANIMATION) {
 17067                           
 17068  0325  3002               	movlw	2
 17069  0326  0639               	xorwf	_currentSelection^(0+128),w
 17070  0327  1D03               	btfss	3,2
 17071  0328  2B2D               	goto	l8499
 17072                           
 17073                           ;controller.c: 53:         isActive = 1;
 17074  0329  0140               	movlb	0	; select bank0
 17075  032A  01EF               	clrf	CONTROLLER_task@isActive
 17076  032B  0AEF               	incf	CONTROLLER_task@isActive,f
 17077                           
 17078                           ;controller.c: 54:     } else if (currentSelection == MODE_BEAT_STROBE || currentSelecti
      +                          on == MODE_BEAT_FADE || currentSelection == MODE_BEAT_CONTINUOUS || currentSelection == 
      +                          MODE_BEAT_MIXED) {
 17079  032C  2B53               	goto	l8517
 17080  032D                     l8499:	
 17081  032D  0339               	decf	_currentSelection^(0+128),w
 17082  032E  1903               	btfsc	3,2
 17083  032F  2B3C               	goto	l8507
 17084  0330  3004               	movlw	4
 17085  0331  0639               	xorwf	_currentSelection^(0+128),w
 17086  0332  1903               	btfsc	3,2
 17087  0333  2B3C               	goto	l8507
 17088  0334  3005               	movlw	5
 17089  0335  0639               	xorwf	_currentSelection^(0+128),w
 17090  0336  1903               	btfsc	3,2
 17091  0337  2B3C               	goto	l8507
 17092  0338  3006               	movlw	6
 17093  0339  0639               	xorwf	_currentSelection^(0+128),w
 17094  033A  1D03               	btfss	3,2
 17095  033B  2B40               	goto	l8509
 17096  033C                     l8507:	
 17097                           
 17098                           ;controller.c: 55:         isActive = CONTROL_BEAT();
 17099  033C  3197  2714  3182   	fcall	_CONTROL_BEAT
 17100  033F  2B4B               	goto	L16
 17101  0340                     l8509:	
 17102                           ;controller.c: 56:     } else if(currentSelection == MODE_MANUAL && !enterPressed){
 17103                           
 17104  0340  3003               	movlw	3
 17105  0341  0639               	xorwf	_currentSelection^(0+128),w
 17106  0342  1D03               	btfss	3,2
 17107  0343  2B51               	goto	l8515
 17108  0344  0837               	movf	_enterPressed^(0+128),w
 17109  0345  1D03               	btfss	3,2
 17110  0346  2B51               	goto	l8515
 17111                           
 17112                           ;controller.c: 57:         isActive = CONTROL_MANUAL(colorModeSelected);
 17113  0347  0831               	movf	_colorModeSelected^(0+128),w
 17114  0348  3187  273F  3182   	fcall	_CONTROL_MANUAL
 17115  034B                     L16:	
 17116  034B  0141               	movlb	1	; select bank1
 17117  034C  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17118  034D  0851               	movf	??_CONTROLLER_task^(0+128),w
 17119  034E  0140               	movlb	0	; select bank0
 17120  034F  00EF               	movwf	CONTROLLER_task@isActive
 17121                           
 17122                           ;controller.c: 58:     } else {
 17123  0350  2B53               	goto	l8517
 17124  0351                     l8515:	
 17125                           
 17126                           ;controller.c: 59:         isActive = 0;
 17127  0351  0140               	movlb	0	; select bank0
 17128  0352  01EF               	clrf	CONTROLLER_task@isActive
 17129  0353                     l8517:	
 17130                           
 17131                           ;controller.c: 62:     if (isActive) {
 17132  0353  0140               	movlb	0	; select bank0
 17133  0354  086F               	movf	CONTROLLER_task@isActive,w
 17134  0355  1903               	btfsc	3,2
 17135  0356  2B62               	goto	l8521
 17136                           
 17137                           ;controller.c: 63:         lastActiveTime = CLOCK_getTime();
 17138  0357  319E  26C5  3182   	fcall	_CLOCK_getTime
 17139  035A  0140               	movlb	0	; select bank0
 17140  035B  0821               	movf	?_CLOCK_getTime+1,w
 17141  035C  0142               	movlb	2	; select bank2
 17142  035D  00C5               	movwf	(_lastActiveTime+1)^(0+256)
 17143  035E  0140               	movlb	0	; select bank0
 17144  035F  0820               	movf	?_CLOCK_getTime,w
 17145  0360  0142               	movlb	2	; select bank2
 17146  0361  00C4               	movwf	_lastActiveTime^(0+256)
 17147  0362                     l8521:	
 17148                           
 17149                           ;controller.c: 66:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 17150  0362  319E  26C5  3182   	fcall	_CLOCK_getTime
 17151  0365  0142               	movlb	2	; select bank2
 17152  0366  0844               	movf	_lastActiveTime^(0+256),w
 17153  0367  0140               	movlb	0	; select bank0
 17154  0368  0220               	subwf	?_CLOCK_getTime,w
 17155  0369  0141               	movlb	1	; select bank1
 17156  036A  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17157  036B  0142               	movlb	2	; select bank2
 17158  036C  0845               	movf	(_lastActiveTime+1)^(0+256),w
 17159  036D  0140               	movlb	0	; select bank0
 17160  036E  3B21               	subwfb	?_CLOCK_getTime+1,w
 17161  036F  0141               	movlb	1	; select bank1
 17162  0370  00D2               	movwf	(??_CONTROLLER_task+1)^(0+128)
 17163  0371  3013               	movlw	19
 17164  0372  0252               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 17165  0373  3088               	movlw	136
 17166  0374  1903               	skipnz
 17167  0375  0251               	subwf	??_CONTROLLER_task^(0+128),w
 17168  0376  1C03               	skipc
 17169  0377  2B8A               	goto	l8527
 17170                           
 17171                           ;controller.c: 67:         TM1650_enable(0);
 17172  0378  3000               	movlw	0
 17173  0379  3190  2002  3182   	fcall	_TM1650_enable
 17174                           
 17175                           ;controller.c: 68:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 17176  037C  319E  26C5  3182   	fcall	_CLOCK_getTime
 17177  037F  0140               	movlb	0	; select bank0
 17178  0380  0820               	movf	?_CLOCK_getTime,w
 17179  0381  3E77               	addlw	119
 17180  0382  0142               	movlb	2	; select bank2
 17181  0383  00C4               	movwf	_lastActiveTime^(0+256)
 17182  0384  30EC               	movlw	236
 17183  0385  0140               	movlb	0	; select bank0
 17184  0386  3D21               	addwfc	?_CLOCK_getTime+1,w
 17185  0387  0142               	movlb	2	; select bank2
 17186  0388  00C5               	movwf	(_lastActiveTime+1)^(0+256)
 17187                           
 17188                           ;controller.c: 69:     } else {
 17189  0389  2B8E               	goto	l8529
 17190  038A                     l8527:	
 17191                           
 17192                           ;controller.c: 70:         TM1650_enable(1);
 17193  038A  3001               	movlw	1
 17194  038B  3190  2002  3182   	fcall	_TM1650_enable
 17195  038E                     l8529:	
 17196                           
 17197                           ;controller.c: 73:     if (currentSelection == MODE_DMX && !menuPressed) {
 17198  038E  0141               	movlb	1	; select bank1
 17199  038F  0839               	movf	_currentSelection^(0+128),w
 17200  0390  1D03               	btfss	3,2
 17201  0391  2C2E               	goto	l8537
 17202  0392  0838               	movf	_menuPressed^(0+128),w
 17203  0393  1D03               	btfss	3,2
 17204  0394  2C2E               	goto	l8537
 17205                           
 17206                           ;controller.c: 74:         TM1650_fastPrintNum(address);
 17207  0395  086D               	movf	(_address+1)^(0+128),w
 17208  0396  0140               	movlb	0	; select bank0
 17209  0397  00B5               	movwf	TM1650_fastPrintNum@num+1
 17210  0398  0141               	movlb	1	; select bank1
 17211  0399  086C               	movf	_address^(0+128),w
 17212  039A  0140               	movlb	0	; select bank0
 17213  039B  00B4               	movwf	TM1650_fastPrintNum@num
 17214  039C  2C29               	goto	L17
 17215  039D                     l8539:	
 17216  039D  0838               	movf	_menuPressed^(0+128),w
 17217  039E  1D03               	btfss	3,2
 17218  039F  2C31               	goto	l8547
 17219                           
 17220                           ;controller.c: 77:         printf("HOLD\r");
 17221  03A0  3081               	movlw	low (STR_1| (0+32768))
 17222  03A1  00C7               	movwf	printf@fmt^(0+128)
 17223  03A2  30A0               	movlw	high (STR_1| (0+32768))
 17224  03A3  00C8               	movwf	(printf@fmt^(0+128)+1)
 17225  03A4  3190  2017  3182   	fcall	_printf
 17226                           
 17227                           ;controller.c: 78:         lastActiveTime = CLOCK_getTime();
 17228  03A7  319E  26C5  3182   	fcall	_CLOCK_getTime
 17229  03AA  0140               	movlb	0	; select bank0
 17230  03AB  0821               	movf	?_CLOCK_getTime+1,w
 17231  03AC  0142               	movlb	2	; select bank2
 17232  03AD  00C5               	movwf	(_lastActiveTime+1)^(0+256)
 17233  03AE  0140               	movlb	0	; select bank0
 17234  03AF  0820               	movf	?_CLOCK_getTime,w
 17235  03B0  0142               	movlb	2	; select bank2
 17236  03B1  00C4               	movwf	_lastActiveTime^(0+256)
 17237  03B2  2C2B               	goto	l8535
 17238  03B3                     l8549:	
 17239  03B3  0838               	movf	_menuPressed^(0+128),w
 17240  03B4  1D03               	btfss	3,2
 17241  03B5  2C35               	goto	l8557
 17242  03B6  0832               	movf	_beatHold^(0+128),w
 17243  03B7  1D03               	btfss	3,2
 17244  03B8  2C35               	goto	l8557
 17245                           
 17246                           ;controller.c: 81:         printf("SEL1\r");
 17247  03B9  307B               	movlw	low (STR_2| (0+32768))
 17248  03BA  00C7               	movwf	printf@fmt^(0+128)
 17249  03BB  30A0               	movlw	high (STR_2| (0+32768))
 17250  03BC  00C8               	movwf	(printf@fmt^(0+128)+1)
 17251  03BD  3190  2017  3182   	fcall	_printf
 17252  03C0  2C2B               	goto	l8535
 17253  03C1                     l8559:	
 17254  03C1  0838               	movf	_menuPressed^(0+128),w
 17255  03C2  1D03               	btfss	3,2
 17256  03C3  2C38               	goto	l8567
 17257  03C4  0832               	movf	_beatHold^(0+128),w
 17258  03C5  1D03               	btfss	3,2
 17259  03C6  2C38               	goto	l8567
 17260                           
 17261                           ;controller.c: 84:         printf("B-%u  \r", (uint8_t)beatBrightness);
 17262  03C7  304D               	movlw	low (STR_3| (0+32768))
 17263  03C8  00C7               	movwf	printf@fmt^(0+128)
 17264  03C9  30A0               	movlw	high (STR_3| (0+32768))
 17265  03CA  00C8               	movwf	(printf@fmt^(0+128)+1)
 17266  03CB  086F               	movf	_beatBrightness^(0+128),w
 17267  03CC  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17268  03CD  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17269  03CE  0851               	movf	??_CONTROLLER_task^(0+128),w
 17270  03CF  00C9               	movwf	(?_printf^(0+128)+2)
 17271  03D0  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17272  03D1  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17273  03D2  3190  2017  3182   	fcall	_printf
 17274  03D5  2C2B               	goto	l8535
 17275  03D6                     l8569:	
 17276  03D6  0838               	movf	_menuPressed^(0+128),w
 17277  03D7  1D03               	btfss	3,2
 17278  03D8  2C3C               	goto	l8577
 17279  03D9  0832               	movf	_beatHold^(0+128),w
 17280  03DA  1D03               	btfss	3,2
 17281  03DB  2C3C               	goto	l8577
 17282                           
 17283                           ;controller.c: 87:         printf("F-%d  \r", (uint8_t)beatBrightness);
 17284  03DC  3045               	movlw	low (STR_4| (0+32768))
 17285  03DD  00C7               	movwf	printf@fmt^(0+128)
 17286  03DE  30A0               	movlw	high (STR_4| (0+32768))
 17287  03DF  00C8               	movwf	(printf@fmt^(0+128)+1)
 17288  03E0  086F               	movf	_beatBrightness^(0+128),w
 17289  03E1  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17290  03E2  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17291  03E3  0851               	movf	??_CONTROLLER_task^(0+128),w
 17292  03E4  00C9               	movwf	(?_printf^(0+128)+2)
 17293  03E5  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17294  03E6  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17295  03E7  3190  2017  3182   	fcall	_printf
 17296  03EA  2C2B               	goto	l8535
 17297  03EB                     l8579:	
 17298  03EB  0838               	movf	_menuPressed^(0+128),w
 17299  03EC  1D03               	btfss	3,2
 17300  03ED  2C40               	goto	l8587
 17301  03EE  0832               	movf	_beatHold^(0+128),w
 17302  03EF  1D03               	btfss	3,2
 17303  03F0  2C40               	goto	l8587
 17304                           
 17305                           ;controller.c: 90:         printf("C-%d  \r", (uint8_t)beatBrightness);
 17306  03F1  303D               	movlw	low (STR_5| (0+32768))
 17307  03F2  00C7               	movwf	printf@fmt^(0+128)
 17308  03F3  30A0               	movlw	high (STR_5| (0+32768))
 17309  03F4  00C8               	movwf	(printf@fmt^(0+128)+1)
 17310  03F5  086F               	movf	_beatBrightness^(0+128),w
 17311  03F6  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17312  03F7  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17313  03F8  0851               	movf	??_CONTROLLER_task^(0+128),w
 17314  03F9  00C9               	movwf	(?_printf^(0+128)+2)
 17315  03FA  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17316  03FB  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17317  03FC  3190  2017  3182   	fcall	_printf
 17318  03FF  2C2B               	goto	l8535
 17319  0400                     l8589:	
 17320  0400  0838               	movf	_menuPressed^(0+128),w
 17321  0401  1D03               	btfss	3,2
 17322  0402  2C44               	goto	l8597
 17323  0403  0832               	movf	_beatHold^(0+128),w
 17324  0404  1D03               	btfss	3,2
 17325  0405  2C44               	goto	l8597
 17326                           
 17327                           ;controller.c: 93:         printf("A-%d  \r", (uint8_t)beatBrightness);
 17328  0406  3035               	movlw	low (STR_6| (0+32768))
 17329  0407  00C7               	movwf	printf@fmt^(0+128)
 17330  0408  30A0               	movlw	high (STR_6| (0+32768))
 17331  0409  00C8               	movwf	(printf@fmt^(0+128)+1)
 17332  040A  086F               	movf	_beatBrightness^(0+128),w
 17333  040B  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17334  040C  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17335  040D  0851               	movf	??_CONTROLLER_task^(0+128),w
 17336  040E  00C9               	movwf	(?_printf^(0+128)+2)
 17337  040F  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17338  0410  00CA               	movwf	((?_printf+1)^(0+128)+2)
 17339  0411  3190  2017  3182   	fcall	_printf
 17340  0414  2C2B               	goto	l8535
 17341  0415                     l8603:	
 17342                           
 17343                           ;controller.c: 99:                 TM1650_fastPrintNum(getManualColor(CMODE_RED));
 17344  0415  3000               	movlw	0
 17345  0416  2C1C               	goto	L18
 17346  0417                     l8605:	
 17347                           ;controller.c: 100:                 break;
 17348                           
 17349                           
 17350                           ;controller.c: 103:                 TM1650_fastPrintNum(getManualColor(CMODE_GREEN));
 17351  0417  3001               	movlw	1
 17352  0418  2C1C               	goto	L18
 17353  0419                     l8607:	
 17354                           ;controller.c: 105:                 break;
 17355                           
 17356                           
 17357                           ;controller.c: 108:                 TM1650_fastPrintNum(getManualColor(CMODE_BLUE));
 17358  0419  3002               	movlw	2
 17359  041A  2C1C               	goto	L18
 17360  041B                     l8609:	
 17361                           ;controller.c: 110:                 break;
 17362                           
 17363                           
 17364                           ;controller.c: 113:                 TM1650_fastPrintNum(getManualColor(CMODE_WHITE));
 17365  041B  3003               	movlw	3
 17366  041C                     L18:	
 17367  041C  3192  221A  3182   	fcall	_getManualColor
 17368  041F  0141               	movlb	1	; select bank1
 17369  0420  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17370  0421  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17371  0422  0851               	movf	??_CONTROLLER_task^(0+128),w
 17372  0423  0140               	movlb	0	; select bank0
 17373  0424  00B4               	movwf	TM1650_fastPrintNum@num
 17374  0425  0141               	movlb	1	; select bank1
 17375  0426  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17376  0427  0140               	movlb	0	; select bank0
 17377  0428  00B5               	movwf	TM1650_fastPrintNum@num+1
 17378  0429                     L17:	
 17379  0429  318B  234D         	fcall	_TM1650_fastPrintNum
 17380  042B                     l8535:	
 17381                           ;controller.c: 115:                 break;
 17382                           
 17383                           
 17384                           ;controller.c: 75:         enterPressed = 0;
 17385  042B  0141               	movlb	1	; select bank1
 17386  042C  01B7               	clrf	_enterPressed^(0+128)
 17387                           
 17388                           ;controller.c: 76:     } else if(beatHold == 1 && !menuPressed){
 17389  042D  0008               	return
 17390  042E                     l8537:	
 17391  042E  0332               	decf	_beatHold^(0+128),w
 17392  042F  1903               	btfsc	3,2
 17393  0430  2B9D               	goto	l8539
 17394  0431                     l8547:	
 17395  0431  3002               	movlw	2
 17396  0432  0639               	xorwf	_currentSelection^(0+128),w
 17397  0433  1903               	btfsc	3,2
 17398  0434  2BB3               	goto	l8549
 17399  0435                     l8557:	
 17400  0435  0339               	decf	_currentSelection^(0+128),w
 17401  0436  1903               	btfsc	3,2
 17402  0437  2BC1               	goto	l8559
 17403  0438                     l8567:	
 17404  0438  3004               	movlw	4
 17405  0439  0639               	xorwf	_currentSelection^(0+128),w
 17406  043A  1903               	btfsc	3,2
 17407  043B  2BD6               	goto	l8569
 17408  043C                     l8577:	
 17409  043C  3005               	movlw	5
 17410  043D  0639               	xorwf	_currentSelection^(0+128),w
 17411  043E  1903               	btfsc	3,2
 17412  043F  2BEB               	goto	l8579
 17413  0440                     l8587:	
 17414  0440  3006               	movlw	6
 17415  0441  0639               	xorwf	_currentSelection^(0+128),w
 17416  0442  1903               	btfsc	3,2
 17417  0443  2C00               	goto	l8589
 17418  0444                     l8597:	
 17419  0444  3003               	movlw	3
 17420  0445  0639               	xorwf	_currentSelection^(0+128),w
 17421  0446  1D03               	btfss	3,2
 17422  0447  0008               	return
 17423  0448  0838               	movf	_menuPressed^(0+128),w
 17424  0449  1D03               	btfss	3,2
 17425  044A  0008               	return
 17426  044B  0831               	movf	_colorModeSelected^(0+128),w
 17427  044C  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17428  044D  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17429                           
 17430                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17431                           ; Switch size 1, requested type "simple"
 17432                           ; Number of cases is 1, Range of values is 0 to 0
 17433                           ; switch strategies available:
 17434                           ; Name         Instructions Cycles
 17435                           ; simple_byte            4     3 (average)
 17436                           ; direct_byte            8     6 (fixed)
 17437                           ; jumptable            260     6 (fixed)
 17438                           ;	Chosen strategy is simple_byte
 17439  044E  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17440  044F  3A00               	xorlw	0	; case 0
 17441  0450  1903               	skipnz
 17442  0451  2C53               	goto	l9011
 17443  0452  2C2B               	goto	l8535
 17444  0453                     l9011:	
 17445                           
 17446                           ; Switch size 1, requested type "simple"
 17447                           ; Number of cases is 4, Range of values is 0 to 3
 17448                           ; switch strategies available:
 17449                           ; Name         Instructions Cycles
 17450                           ; simple_byte           13     7 (average)
 17451                           ; direct_byte           14     6 (fixed)
 17452                           ; jumptable            260     6 (fixed)
 17453                           ;	Chosen strategy is simple_byte
 17454  0453  0851               	movf	??_CONTROLLER_task^(0+128),w
 17455  0454  3A00               	xorlw	0	; case 0
 17456  0455  1903               	skipnz
 17457  0456  2C15               	goto	l8603
 17458  0457  3A01               	xorlw	1	; case 1
 17459  0458  1903               	skipnz
 17460  0459  2C17               	goto	l8605
 17461  045A  3A03               	xorlw	3	; case 2
 17462  045B  1903               	skipnz
 17463  045C  2C19               	goto	l8607
 17464  045D  3A01               	xorlw	1	; case 3
 17465  045E  1903               	skipnz
 17466  045F  2C1B               	goto	l8609
 17467  0460  2C2B               	goto	l8535
 17468  0461  0008               	return
 17469  0462                     __end_of_CONTROLLER_task:	
 17470                           
 17471                           	psect	text46
 17472  0849                     __ptext46:	
 17473 ;; *************** function _menuSelection *****************
 17474 ;; Defined at:
 17475 ;;		line 122 in file "controller.c"
 17476 ;; Parameters:    Size  Location     Type
 17477 ;;		None
 17478 ;; Auto vars:     Size  Location     Type
 17479 ;;		None
 17480 ;; Return value:  Size  Location     Type
 17481 ;;                  1    wreg      void 
 17482 ;; Registers used:
 17483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17484 ;; Tracked objects:
 17485 ;;		On entry : 0/0
 17486 ;;		On exit  : 0/0
 17487 ;;		Unchanged: 0/0
 17488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17492 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17493 ;;Total ram usage:        2 bytes
 17494 ;; Hardware stack levels used:    1
 17495 ;; Hardware stack levels required when called:   17
 17496 ;; This function calls:
 17497 ;;		_printf
 17498 ;; This function is called by:
 17499 ;;		_CONTROLLER_task
 17500 ;; This function uses a non-reentrant model
 17501 ;;
 17502                           
 17503                           
 17504                           ;psect for function _menuSelection
 17505  0849                     _menuSelection:	
 17506                           
 17507                           ;controller.c: 124:     if(menuSelected == MODE_BEAT_FADE || menuSelected == MODE_BEAT_C
      +                          ONTINUOUS || menuSelected == MODE_BEAT_MIXED)
 17508                           
 17509                           ;incstack = 0
 17510 ;; hardware stack exceeded
 17511                           ; Regs used in _menuSelection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17512  0849  3004               	movlw	4
 17513  084A  0141               	movlb	1	; select bank1
 17514  084B  063A               	xorwf	_menuSelected^(0+128),w
 17515  084C  1903               	btfsc	3,2
 17516  084D  2856               	goto	l1064
 17517  084E  3005               	movlw	5
 17518  084F  063A               	xorwf	_menuSelected^(0+128),w
 17519  0850  1903               	btfsc	3,2
 17520  0851  2856               	goto	l1064
 17521  0852  3006               	movlw	6
 17522  0853  063A               	xorwf	_menuSelected^(0+128),w
 17523  0854  1D03               	btfss	3,2
 17524  0855  2858               	goto	l7945
 17525  0856                     l1064:	
 17526                           
 17527                           ;controller.c: 125:         menuSelected = MODE_BEAT_STROBE;
 17528  0856  01BA               	clrf	_menuSelected^(0+128)
 17529  0857  0ABA               	incf	_menuSelected^(0+128),f
 17530  0858                     l7945:	
 17531                           
 17532                           ;controller.c: 127:     if(upState){
 17533  0858  0836               	movf	_upState^(0+128),w
 17534  0859  1903               	btfsc	3,2
 17535  085A  286D               	goto	l7953
 17536                           
 17537                           ;controller.c: 128:         if(menuSelected < 3){
 17538  085B  3003               	movlw	3
 17539  085C  023A               	subwf	_menuSelected^(0+128),w
 17540  085D  1803               	skipnc
 17541  085E  2866               	goto	l7951
 17542                           
 17543                           ;controller.c: 129:             menuSelected++;
 17544  085F  3001               	movlw	1
 17545  0860  0140               	movlb	0	; select bank0
 17546  0861  00ED               	movwf	??_menuSelection
 17547  0862  086D               	movf	??_menuSelection,w
 17548  0863  0141               	movlb	1	; select bank1
 17549  0864  07BA               	addwf	_menuSelected^(0+128),f
 17550                           
 17551                           ;controller.c: 130:         } else {
 17552  0865  2877               	goto	l7961
 17553  0866                     l7951:	
 17554                           
 17555                           ;controller.c: 131:             menuSelected = 3;
 17556  0866  3003               	movlw	3
 17557  0867  0140               	movlb	0	; select bank0
 17558  0868  00ED               	movwf	??_menuSelection
 17559  0869  086D               	movf	??_menuSelection,w
 17560  086A  0141               	movlb	1	; select bank1
 17561  086B  00BA               	movwf	_menuSelected^(0+128)
 17562  086C  2877               	goto	l7961
 17563  086D                     l7953:	
 17564  086D  0835               	movf	_downState^(0+128),w
 17565  086E  1903               	btfsc	3,2
 17566  086F  2877               	goto	l7961
 17567                           
 17568                           ;controller.c: 134:         if(menuSelected > 0){
 17569  0870  083A               	movf	_menuSelected^(0+128),w
 17570  0871  1903               	btfsc	3,2
 17571  0872  2876               	goto	l7959
 17572                           
 17573                           ;controller.c: 135:             menuSelected--;
 17574  0873  3001               	movlw	1
 17575  0874  02BA               	subwf	_menuSelected^(0+128),f
 17576                           
 17577                           ;controller.c: 136:         } else {
 17578  0875  2877               	goto	l7961
 17579  0876                     l7959:	
 17580                           
 17581                           ;controller.c: 137:             menuSelected = 0;
 17582  0876  01BA               	clrf	_menuSelected^(0+128)
 17583  0877                     l7961:	
 17584                           
 17585                           ;controller.c: 141:     if (enterState) {
 17586  0877  0833               	movf	_enterState^(0+128),w
 17587  0878  1903               	btfsc	3,2
 17588  0879  28AC               	goto	l7983
 17589                           
 17590                           ;controller.c: 142:         currentSelection = menuSelected;
 17591  087A  083A               	movf	_menuSelected^(0+128),w
 17592  087B  0140               	movlb	0	; select bank0
 17593  087C  00ED               	movwf	??_menuSelection
 17594  087D  086D               	movf	??_menuSelection,w
 17595  087E  0141               	movlb	1	; select bank1
 17596  087F  00B9               	movwf	_currentSelection^(0+128)
 17597                           
 17598                           ;controller.c: 143:         menuPressed = 0;
 17599  0880  01B8               	clrf	_menuPressed^(0+128)
 17600                           
 17601                           ;controller.c: 144:         enterPressed = 1;
 17602  0881  01B7               	clrf	_enterPressed^(0+128)
 17603  0882  0AB7               	incf	_enterPressed^(0+128),f
 17604  0883  0008               	return
 17605  0884                     l7971:	
 17606                           
 17607                           ;controller.c: 150:             printf("ANI \r");
 17608  0884  3075               	movlw	low (STR_7| (0+32768))
 17609  0885  0141               	movlb	1	; select bank1
 17610  0886  00C7               	movwf	printf@fmt^(0+128)
 17611  0887  30A0               	movlw	high (STR_7| (0+32768))
 17612  0888  00C8               	movwf	(printf@fmt^(0+128)+1)
 17613  0889  3190  2017         	fcall	_printf
 17614                           
 17615                           ;controller.c: 151:             break;
 17616  088B  0008               	return
 17617  088C                     l7973:	
 17618                           
 17619                           ;controller.c: 154:             printf("BEAT\r");
 17620  088C  3087               	movlw	low (STR_8| (0+32768))
 17621  088D  0141               	movlb	1	; select bank1
 17622  088E  00C7               	movwf	printf@fmt^(0+128)
 17623  088F  30A0               	movlw	high (STR_8| (0+32768))
 17624  0890  00C8               	movwf	(printf@fmt^(0+128)+1)
 17625  0891  3190  2017         	fcall	_printf
 17626                           
 17627                           ;controller.c: 155:             break;
 17628  0893  0008               	return
 17629  0894                     l7975:	
 17630                           
 17631                           ;controller.c: 158:             printf("BEAT\r");
 17632  0894  3087               	movlw	low (STR_8| (0+32768))
 17633  0895  0141               	movlb	1	; select bank1
 17634  0896  00C7               	movwf	printf@fmt^(0+128)
 17635  0897  30A0               	movlw	high (STR_8| (0+32768))
 17636  0898  00C8               	movwf	(printf@fmt^(0+128)+1)
 17637  0899  3190  2017         	fcall	_printf
 17638                           
 17639                           ;controller.c: 159:             break;
 17640  089B  0008               	return
 17641  089C                     l7977:	
 17642                           
 17643                           ;controller.c: 162:             printf("PC  \r");
 17644  089C  3069               	movlw	low (STR_10| (0+32768))
 17645  089D  0141               	movlb	1	; select bank1
 17646  089E  00C7               	movwf	printf@fmt^(0+128)
 17647  089F  30A0               	movlw	high (STR_10| (0+32768))
 17648  08A0  00C8               	movwf	(printf@fmt^(0+128)+1)
 17649  08A1  3190  2017         	fcall	_printf
 17650                           
 17651                           ;controller.c: 163:             break;
 17652  08A3  0008               	return
 17653  08A4                     l7979:	
 17654                           
 17655                           ;controller.c: 166:             printf("LED \r");
 17656  08A4  306F               	movlw	low (STR_11| (0+32768))
 17657  08A5  0141               	movlb	1	; select bank1
 17658  08A6  00C7               	movwf	printf@fmt^(0+128)
 17659  08A7  30A0               	movlw	high (STR_11| (0+32768))
 17660  08A8  00C8               	movwf	(printf@fmt^(0+128)+1)
 17661  08A9  3190  2017         	fcall	_printf
 17662                           
 17663                           ;controller.c: 167:             break;
 17664  08AB  0008               	return
 17665  08AC                     l7983:	
 17666  08AC  083A               	movf	_menuSelected^(0+128),w
 17667  08AD  0140               	movlb	0	; select bank0
 17668  08AE  00ED               	movwf	??_menuSelection
 17669  08AF  01EE               	clrf	??_menuSelection+1
 17670                           
 17671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17672                           ; Switch size 1, requested type "simple"
 17673                           ; Number of cases is 1, Range of values is 0 to 0
 17674                           ; switch strategies available:
 17675                           ; Name         Instructions Cycles
 17676                           ; simple_byte            4     3 (average)
 17677                           ; direct_byte            8     6 (fixed)
 17678                           ; jumptable            260     6 (fixed)
 17679                           ;	Chosen strategy is simple_byte
 17680  08B0  086E               	movf	??_menuSelection+1,w
 17681  08B1  3A00               	xorlw	0	; case 0
 17682  08B2  1903               	skipnz
 17683  08B3  28B5               	goto	l9013
 17684  08B4  28C6               	goto	l1073
 17685  08B5                     l9013:	
 17686                           
 17687                           ; Switch size 1, requested type "simple"
 17688                           ; Number of cases is 5, Range of values is 0 to 4
 17689                           ; switch strategies available:
 17690                           ; Name         Instructions Cycles
 17691                           ; direct_byte           16     6 (fixed)
 17692                           ; simple_byte           16     9 (average)
 17693                           ; jumptable            260     6 (fixed)
 17694                           ;	Chosen strategy is simple_byte
 17695  08B5  086D               	movf	??_menuSelection,w
 17696  08B6  3A00               	xorlw	0	; case 0
 17697  08B7  1903               	skipnz
 17698  08B8  289C               	goto	l7977
 17699  08B9  3A01               	xorlw	1	; case 1
 17700  08BA  1903               	skipnz
 17701  08BB  288C               	goto	l7973
 17702  08BC  3A03               	xorlw	3	; case 2
 17703  08BD  1903               	skipnz
 17704  08BE  2884               	goto	l7971
 17705  08BF  3A01               	xorlw	1	; case 3
 17706  08C0  1903               	skipnz
 17707  08C1  28A4               	goto	l7979
 17708  08C2  3A07               	xorlw	7	; case 4
 17709  08C3  1903               	skipnz
 17710  08C4  2894               	goto	l7975
 17711  08C5  28C6               	goto	l1073
 17712  08C6                     l1073:	
 17713  08C6  0008               	return
 17714  08C7                     __end_of_menuSelection:	
 17715                           
 17716                           	psect	text47
 17717  1017                     __ptext47:	
 17718 ;; *************** function _printf *****************
 17719 ;; Defined at:
 17720 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 17721 ;; Parameters:    Size  Location     Type
 17722 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 17723 ;;		 -> STR_22(6), STR_21(7), STR_20(8), STR_19(9), 
 17724 ;;		 -> STR_18(10), STR_17(9), STR_16(8), STR_15(7), 
 17725 ;;		 -> STR_13(2), STR_12(5), STR_11(6), STR_10(6), 
 17726 ;;		 -> STR_9(6), STR_8(6), STR_7(6), STR_6(8), 
 17727 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(6), 
 17728 ;;		 -> STR_1(6), 
 17729 ;; Auto vars:     Size  Location     Type
 17730 ;;  ret             2    0        int 
 17731 ;;  ap              1   76[BANK0 ] PTR void [1]
 17732 ;;		 -> ?_printf(2), 
 17733 ;; Return value:  Size  Location     Type
 17734 ;;                  2    0[BANK1 ] int 
 17735 ;; Registers used:
 17736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17737 ;; Tracked objects:
 17738 ;;		On entry : 0/0
 17739 ;;		On exit  : 0/0
 17740 ;;		Unchanged: 0/0
 17741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17742 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17743 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17744 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17745 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17746 ;;Total ram usage:       14 bytes
 17747 ;; Hardware stack levels used:    1
 17748 ;; Hardware stack levels required when called:   16
 17749 ;; This function calls:
 17750 ;;		_vfprintf
 17751 ;; This function is called by:
 17752 ;;		_CONTROLLER_task
 17753 ;;		_menuSelection
 17754 ;;		_TM1650_init
 17755 ;;		_TM1650_scrollPrint
 17756 ;; This function uses a non-reentrant model
 17757 ;;
 17758                           
 17759                           
 17760                           ;psect for function _printf
 17761  1017                     _printf:	
 17762                           
 17763                           ;incstack = 0
 17764 ;; hardware stack exceeded
 17765                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17766  1017  30C9               	movlw	(low ((?_printf| 0+2)))& (0+255)
 17767  1018  0140               	movlb	0	; select bank0
 17768  1019  00E9               	movwf	??_printf
 17769  101A  0869               	movf	??_printf,w
 17770  101B  00EC               	movwf	printf@ap
 17771  101C  0141               	movlb	1	; select bank1
 17772  101D  0848               	movf	(printf@fmt+1)^(0+128),w
 17773  101E  0140               	movlb	0	; select bank0
 17774  101F  00E2               	movwf	vfprintf@fmt+1
 17775  1020  0141               	movlb	1	; select bank1
 17776  1021  0847               	movf	printf@fmt^(0+128),w
 17777  1022  0140               	movlb	0	; select bank0
 17778  1023  00E1               	movwf	vfprintf@fmt
 17779  1024  306C               	movlw	(low (printf@ap| 0))& (0+255)
 17780  1025  00E9               	movwf	??_printf
 17781  1026  0869               	movf	??_printf,w
 17782  1027  00E3               	movwf	vfprintf@ap
 17783  1028  3000               	movlw	0
 17784  1029  3192  22E3         	fcall	_vfprintf
 17785  102B  0008               	return
 17786  102C                     __end_of_printf:	
 17787                           
 17788                           	psect	text48
 17789  12E3                     __ptext48:	
 17790 ;; *************** function _vfprintf *****************
 17791 ;; Defined at:
 17792 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17793 ;; Parameters:    Size  Location     Type
 17794 ;;  fp              1    wreg     PTR struct _IO_FILE
 17795 ;;		 -> NULL(0), 
 17796 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
 17797 ;;		 -> STR_22(6), STR_21(7), STR_20(8), STR_19(9), 
 17798 ;;		 -> STR_18(10), STR_17(9), STR_16(8), STR_15(7), 
 17799 ;;		 -> STR_13(2), STR_12(5), STR_11(6), STR_10(6), 
 17800 ;;		 -> STR_9(6), STR_8(6), STR_7(6), STR_6(8), 
 17801 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(6), 
 17802 ;;		 -> STR_1(6), 
 17803 ;;  ap              1   67[BANK0 ] PTR PTR void 
 17804 ;;		 -> printf@ap(1), 
 17805 ;; Auto vars:     Size  Location     Type
 17806 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
 17807 ;;		 -> NULL(0), 
 17808 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 17809 ;;		 -> STR_22(6), STR_21(7), STR_20(8), STR_19(9), 
 17810 ;;		 -> STR_18(10), STR_17(9), STR_16(8), STR_15(7), 
 17811 ;;		 -> STR_13(2), STR_12(5), STR_11(6), STR_10(6), 
 17812 ;;		 -> STR_9(6), STR_8(6), STR_7(6), STR_6(8), 
 17813 ;;		 -> STR_5(8), STR_4(8), STR_3(8), STR_2(6), 
 17814 ;;		 -> STR_1(6), 
 17815 ;; Return value:  Size  Location     Type
 17816 ;;                  2   65[BANK0 ] int 
 17817 ;; Registers used:
 17818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17819 ;; Tracked objects:
 17820 ;;		On entry : 0/0
 17821 ;;		On exit  : 0/0
 17822 ;;		Unchanged: 0/0
 17823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17824 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17825 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17826 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17827 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17828 ;;Total ram usage:        8 bytes
 17829 ;; Hardware stack levels used:    1
 17830 ;; Hardware stack levels required when called:   15
 17831 ;; This function calls:
 17832 ;;		_vfpfcnvrt
 17833 ;; This function is called by:
 17834 ;;		_printf
 17835 ;; This function uses a non-reentrant model
 17836 ;;
 17837                           
 17838                           
 17839                           ;psect for function _vfprintf
 17840  12E3                     _vfprintf:	
 17841                           
 17842                           ;incstack = 0
 17843 ;; hardware stack exceeded
 17844                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17845                           ;vfprintf@fp stored from wreg
 17846  12E3  0140               	movlb	0	; select bank0
 17847  12E4  00E6               	movwf	vfprintf@fp
 17848                           
 17849                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 17850  12E5  0862               	movf	vfprintf@fmt+1,w
 17851  12E6  00E8               	movwf	vfprintf@cfmt+1
 17852  12E7  0861               	movf	vfprintf@fmt,w
 17853  12E8  00E7               	movwf	vfprintf@cfmt
 17854                           
 17855                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 17856  12E9  0142               	movlb	2	; select bank2
 17857  12EA  01B0               	clrf	_nout^(0+256)
 17858  12EB  01B1               	clrf	(_nout+1)^(0+256)
 17859  12EC                     l7673:	
 17860                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 17861                           
 17862                           
 17863                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 17864  12EC  0140               	movlb	0	; select bank0
 17865  12ED  0867               	movf	vfprintf@cfmt,w
 17866  12EE  0084               	movwf	4
 17867  12EF  0868               	movf	vfprintf@cfmt+1,w
 17868  12F0  0085               	movwf	5
 17869  12F1  0012               	moviw fsr0++
 17870  12F2  1903               	btfsc	3,2
 17871  12F3  2B09               	goto	l7675
 17872                           
 17873                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 17874  12F4  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 17875  12F5  00E4               	movwf	??_vfprintf
 17876  12F6  0864               	movf	??_vfprintf,w
 17877  12F7  00D8               	movwf	vfpfcnvrt@fmt
 17878  12F8  0863               	movf	vfprintf@ap,w
 17879  12F9  00E5               	movwf	??_vfprintf+1
 17880  12FA  0865               	movf	??_vfprintf+1,w
 17881  12FB  00D9               	movwf	vfpfcnvrt@ap
 17882  12FC  0866               	movf	vfprintf@fp,w
 17883  12FD  3189  21F6  3192   	fcall	_vfpfcnvrt
 17884  1300  0140               	movlb	0	; select bank0
 17885  1301  0858               	movf	?_vfpfcnvrt,w
 17886  1302  0142               	movlb	2	; select bank2
 17887  1303  07B0               	addwf	_nout^(0+256),f
 17888  1304  0140               	movlb	0	; select bank0
 17889  1305  0859               	movf	?_vfpfcnvrt+1,w
 17890  1306  0142               	movlb	2	; select bank2
 17891  1307  3DB1               	addwfc	(_nout+1)^(0+256),f
 17892  1308  2AEC               	goto	l7673
 17893  1309                     l7675:	
 17894                           
 17895                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 17896  1309  0142               	movlb	2	; select bank2
 17897  130A  0831               	movf	(_nout+1)^(0+256),w
 17898  130B  0140               	movlb	0	; select bank0
 17899  130C  00E2               	movwf	?_vfprintf+1
 17900  130D  0142               	movlb	2	; select bank2
 17901  130E  0830               	movf	_nout^(0+256),w
 17902  130F  0140               	movlb	0	; select bank0
 17903  1310  00E1               	movwf	?_vfprintf
 17904  1311  0008               	return
 17905  1312                     __end_of_vfprintf:	
 17906                           
 17907                           	psect	text49
 17908  09F6                     __ptext49:	
 17909 ;; *************** function _vfpfcnvrt *****************
 17910 ;; Defined at:
 17911 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17912 ;; Parameters:    Size  Location     Type
 17913 ;;  fp              1    wreg     PTR struct _IO_FILE
 17914 ;;		 -> NULL(0), 
 17915 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
 17916 ;;		 -> vfprintf@cfmt(2), 
 17917 ;;  ap              1   57[BANK0 ] PTR PTR void 
 17918 ;;		 -> printf@ap(1), 
 17919 ;; Auto vars:     Size  Location     Type
 17920 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
 17921 ;;		 -> NULL(0), 
 17922 ;;  llu             8    0        unsigned long long 
 17923 ;;  ll              8    0        long long 
 17924 ;;  f               4    0        long long 
 17925 ;;  ct              3    0        unsigned char [3]
 17926 ;;  vp              2    0        PTR void 
 17927 ;;  i               2    0        int 
 17928 ;;  done            2    0        int 
 17929 ;;  cp              2    0        PTR unsigned char 
 17930 ;;  c               1   63[BANK0 ] unsigned char 
 17931 ;; Return value:  Size  Location     Type
 17932 ;;                  2   56[BANK0 ] int 
 17933 ;; Registers used:
 17934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17935 ;; Tracked objects:
 17936 ;;		On entry : 0/0
 17937 ;;		On exit  : 0/0
 17938 ;;		Unchanged: 0/0
 17939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17942 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17943 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17944 ;;Total ram usage:        9 bytes
 17945 ;; Hardware stack levels used:    1
 17946 ;; Hardware stack levels required when called:   14
 17947 ;; This function calls:
 17948 ;;		_ctoa
 17949 ;;		_fputc
 17950 ;; This function is called by:
 17951 ;;		_vfprintf
 17952 ;; This function uses a non-reentrant model
 17953 ;;
 17954                           
 17955                           
 17956                           ;psect for function _vfpfcnvrt
 17957  09F6                     _vfpfcnvrt:	
 17958                           
 17959                           ;incstack = 0
 17960 ;; hardware stack exceeded
 17961                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17962                           ;vfpfcnvrt@fp stored from wreg
 17963  09F6  0140               	movlb	0	; select bank0
 17964  09F7  00E0               	movwf	vfpfcnvrt@fp
 17965                           
 17966                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 17967  09F8  0858               	movf	vfpfcnvrt@fmt,w
 17968  09F9  0086               	movwf	6
 17969  09FA  0187               	clrf	7
 17970  09FB  3F40               	moviw [0]fsr1
 17971  09FC  00DA               	movwf	??_vfpfcnvrt
 17972  09FD  3F41               	moviw [1]fsr1
 17973  09FE  00DB               	movwf	??_vfpfcnvrt+1
 17974  09FF  085A               	movf	??_vfpfcnvrt,w
 17975  0A00  0084               	movwf	4
 17976  0A01  085B               	movf	??_vfpfcnvrt+1,w
 17977  0A02  0085               	movwf	5
 17978  0A03  0012               	moviw fsr0++
 17979  0A04  3A25               	xorlw	37
 17980  0A05  1D03               	btfss	3,2
 17981  0A06  2A7B               	goto	l7223
 17982                           
 17983                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 17984  0A07  0858               	movf	vfpfcnvrt@fmt,w
 17985  0A08  0086               	movwf	6
 17986  0A09  0187               	clrf	7
 17987  0A0A  3001               	movlw	1
 17988  0A0B  0781               	addwf	1,f
 17989  0A0C  3141               	addfsr 1,1
 17990  0A0D  1803               	skipnc
 17991  0A0E  0A81               	incf	1,f
 17992                           
 17993                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 17994  0A0F  0142               	movlb	2	; select bank2
 17995  0A10  01B2               	clrf	_width^(0+256)
 17996  0A11  01B3               	clrf	(_width+1)^(0+256)
 17997  0A12  01B6               	clrf	_flags^(0+256)
 17998  0A13  01B7               	clrf	(_flags+1)^(0+256)
 17999                           
 18000                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 18001  0A14  30FF               	movlw	255
 18002  0A15  00B4               	movwf	_prec^(0+256)
 18003  0A16  30FF               	movlw	255
 18004  0A17  00B5               	movwf	(_prec^(0+256)+1)
 18005                           
 18006                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
 18007  0A18  0140               	movlb	0	; select bank0
 18008  0A19  0858               	movf	vfpfcnvrt@fmt,w
 18009  0A1A  0086               	movwf	6
 18010  0A1B  0187               	clrf	7
 18011  0A1C  3F40               	moviw [0]fsr1
 18012  0A1D  00DA               	movwf	??_vfpfcnvrt
 18013  0A1E  3F41               	moviw [1]fsr1
 18014  0A1F  00DB               	movwf	??_vfpfcnvrt+1
 18015  0A20  085A               	movf	??_vfpfcnvrt,w
 18016  0A21  0084               	movwf	4
 18017  0A22  085B               	movf	??_vfpfcnvrt+1,w
 18018  0A23  0085               	movwf	5
 18019  0A24  0012               	moviw fsr0++
 18020  0A25  3A63               	xorlw	99
 18021  0A26  1D03               	btfss	3,2
 18022  0A27  2A49               	goto	l7207
 18023                           
 18024                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
 18025  0A28  0858               	movf	vfpfcnvrt@fmt,w
 18026  0A29  0086               	movwf	6
 18027  0A2A  0187               	clrf	7
 18028  0A2B  3001               	movlw	1
 18029  0A2C  0781               	addwf	1,f
 18030  0A2D  3141               	addfsr 1,1
 18031  0A2E  1803               	skipnc
 18032  0A2F  0A81               	incf	1,f
 18033                           
 18034                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 18035  0A30  0859               	movf	vfpfcnvrt@ap,w
 18036  0A31  0086               	movwf	6
 18037  0A32  0187               	clrf	7
 18038  0A33  0801               	movf	1,w
 18039  0A34  0084               	movwf	4
 18040  0A35  0185               	clrf	5
 18041  0A36  3002               	movlw	2
 18042  0A37  0781               	addwf	1,f
 18043  0A38  0800               	movf	0,w
 18044  0A39  00DA               	movwf	??_vfpfcnvrt
 18045  0A3A  085A               	movf	??_vfpfcnvrt,w
 18046  0A3B  00DF               	movwf	vfpfcnvrt@c
 18047                           
 18048                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
 18049  0A3C  085F               	movf	vfpfcnvrt@c,w
 18050  0A3D  00DA               	movwf	??_vfpfcnvrt
 18051  0A3E  085A               	movf	??_vfpfcnvrt,w
 18052  0A3F  00D2               	movwf	ctoa@c
 18053  0A40  0860               	movf	vfpfcnvrt@fp,w
 18054  0A41  3193  2312         	fcall	_ctoa
 18055  0A43  0140               	movlb	0	; select bank0
 18056  0A44  0853               	movf	?_ctoa+1,w
 18057  0A45  00D9               	movwf	?_vfpfcnvrt+1
 18058  0A46  0852               	movf	?_ctoa,w
 18059  0A47  00D8               	movwf	?_vfpfcnvrt
 18060  0A48  0008               	return
 18061  0A49                     l7207:	
 18062                           
 18063                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 18064  0A49  0858               	movf	vfpfcnvrt@fmt,w
 18065  0A4A  0086               	movwf	6
 18066  0A4B  0187               	clrf	7
 18067  0A4C  3F40               	moviw [0]fsr1
 18068  0A4D  00DA               	movwf	??_vfpfcnvrt
 18069  0A4E  3F41               	moviw [1]fsr1
 18070  0A4F  00DB               	movwf	??_vfpfcnvrt+1
 18071  0A50  085A               	movf	??_vfpfcnvrt,w
 18072  0A51  0084               	movwf	4
 18073  0A52  085B               	movf	??_vfpfcnvrt+1,w
 18074  0A53  0085               	movwf	5
 18075  0A54  0012               	moviw fsr0++
 18076  0A55  3A25               	xorlw	37
 18077  0A56  1D03               	btfss	3,2
 18078  0A57  2A70               	goto	l7217
 18079                           
 18080                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 18081  0A58  0858               	movf	vfpfcnvrt@fmt,w
 18082  0A59  0086               	movwf	6
 18083  0A5A  0187               	clrf	7
 18084  0A5B  3001               	movlw	1
 18085  0A5C  0781               	addwf	1,f
 18086  0A5D  3141               	addfsr 1,1
 18087  0A5E  1803               	skipnc
 18088  0A5F  0A81               	incf	1,f
 18089                           
 18090                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 18091  0A60  3025               	movlw	37
 18092  0A61  00B9               	movwf	fputc@c
 18093  0A62  3000               	movlw	0
 18094  0A63  00BA               	movwf	fputc@c+1
 18095  0A64  0860               	movf	vfpfcnvrt@fp,w
 18096  0A65  00DA               	movwf	??_vfpfcnvrt
 18097  0A66  085A               	movf	??_vfpfcnvrt,w
 18098  0A67  00BB               	movwf	fputc@fp
 18099  0A68  3194  2478         	fcall	_fputc
 18100  0A6A                     l7213:	
 18101                           
 18102                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 18103  0A6A  3001               	movlw	1
 18104  0A6B  0140               	movlb	0	; select bank0
 18105  0A6C  00D8               	movwf	?_vfpfcnvrt
 18106  0A6D  3000               	movlw	0
 18107  0A6E  00D9               	movwf	?_vfpfcnvrt+1
 18108  0A6F  0008               	return
 18109  0A70                     l7217:	
 18110                           
 18111                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 18112  0A70  0858               	movf	vfpfcnvrt@fmt,w
 18113  0A71  0086               	movwf	6
 18114  0A72  0187               	clrf	7
 18115  0A73  3001               	movlw	1
 18116  0A74  0781               	addwf	1,f
 18117  0A75  3141               	addfsr 1,1
 18118  0A76  1803               	skipnc
 18119  0A77  0A81               	incf	1,f
 18120                           
 18121                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 18122  0A78  01D8               	clrf	?_vfpfcnvrt
 18123  0A79  01D9               	clrf	?_vfpfcnvrt+1
 18124  0A7A  0008               	return
 18125  0A7B                     l7223:	
 18126                           
 18127                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 18128  0A7B  0858               	movf	vfpfcnvrt@fmt,w
 18129  0A7C  0086               	movwf	6
 18130  0A7D  0187               	clrf	7
 18131  0A7E  3F40               	moviw [0]fsr1
 18132  0A7F  00DA               	movwf	??_vfpfcnvrt
 18133  0A80  3F41               	moviw [1]fsr1
 18134  0A81  00DB               	movwf	??_vfpfcnvrt+1
 18135  0A82  085A               	movf	??_vfpfcnvrt,w
 18136  0A83  0084               	movwf	4
 18137  0A84  085B               	movf	??_vfpfcnvrt+1,w
 18138  0A85  0085               	movwf	5
 18139  0A86  0800               	movf	0,w	;code access
 18140  0A87  00DC               	movwf	??_vfpfcnvrt+2
 18141  0A88  01DD               	clrf	??_vfpfcnvrt+3
 18142  0A89  085C               	movf	??_vfpfcnvrt+2,w
 18143  0A8A  00B9               	movwf	fputc@c
 18144  0A8B  085D               	movf	??_vfpfcnvrt+3,w
 18145  0A8C  00BA               	movwf	fputc@c+1
 18146  0A8D  0860               	movf	vfpfcnvrt@fp,w
 18147  0A8E  00DE               	movwf	??_vfpfcnvrt+4
 18148  0A8F  085E               	movf	??_vfpfcnvrt+4,w
 18149  0A90  00BB               	movwf	fputc@fp
 18150  0A91  3194  2478  3189   	fcall	_fputc
 18151                           
 18152                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 18153  0A94  0140               	movlb	0	; select bank0
 18154  0A95  0858               	movf	vfpfcnvrt@fmt,w
 18155  0A96  0086               	movwf	6
 18156  0A97  0187               	clrf	7
 18157  0A98  3001               	movlw	1
 18158  0A99  0781               	addwf	1,f
 18159  0A9A  3141               	addfsr 1,1
 18160  0A9B  1803               	skipnc
 18161  0A9C  0A81               	incf	1,f
 18162  0A9D  2A6A               	goto	l7213
 18163  0A9E                     __end_of_vfpfcnvrt:	
 18164                           
 18165                           	psect	text50
 18166  1312                     __ptext50:	
 18167 ;; *************** function _ctoa *****************
 18168 ;; Defined at:
 18169 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 18170 ;; Parameters:    Size  Location     Type
 18171 ;;  fp              1    wreg     PTR struct _IO_FILE
 18172 ;;		 -> NULL(0), 
 18173 ;;  c               1   50[BANK0 ] unsigned char 
 18174 ;; Auto vars:     Size  Location     Type
 18175 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 18176 ;;		 -> NULL(0), 
 18177 ;;  w               2   53[BANK0 ] int 
 18178 ;;  l               2    0        int 
 18179 ;; Return value:  Size  Location     Type
 18180 ;;                  2   50[BANK0 ] int 
 18181 ;; Registers used:
 18182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18183 ;; Tracked objects:
 18184 ;;		On entry : 0/0
 18185 ;;		On exit  : 0/0
 18186 ;;		Unchanged: 0/0
 18187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18188 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18189 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18190 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18191 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18192 ;;Total ram usage:        6 bytes
 18193 ;; Hardware stack levels used:    1
 18194 ;; Hardware stack levels required when called:   13
 18195 ;; This function calls:
 18196 ;;		_pad
 18197 ;; This function is called by:
 18198 ;;		_vfpfcnvrt
 18199 ;; This function uses a non-reentrant model
 18200 ;;
 18201                           
 18202                           
 18203                           ;psect for function _ctoa
 18204  1312                     _ctoa:	
 18205                           
 18206                           ;incstack = 0
 18207 ;; hardware stack exceeded
 18208                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18209                           ;ctoa@fp stored from wreg
 18210  1312  0140               	movlb	0	; select bank0
 18211  1313  00D7               	movwf	ctoa@fp
 18212                           
 18213                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 18214  1314  0142               	movlb	2	; select bank2
 18215  1315  0832               	movf	_width^(0+256),w
 18216  1316  0433               	iorwf	(_width+1)^(0+256),w
 18217  1317  1D03               	btfss	3,2
 18218  1318  2B21               	goto	l7165
 18219  1319  0833               	movf	(_width+1)^(0+256),w
 18220  131A  0140               	movlb	0	; select bank0
 18221  131B  00D6               	movwf	ctoa@w+1
 18222  131C  0142               	movlb	2	; select bank2
 18223  131D  0832               	movf	_width^(0+256),w
 18224  131E  0140               	movlb	0	; select bank0
 18225  131F  00D5               	movwf	ctoa@w
 18226  1320  2B2A               	goto	l7167
 18227  1321                     l7165:	
 18228  1321  0832               	movf	_width^(0+256),w
 18229  1322  3EFF               	addlw	255
 18230  1323  0140               	movlb	0	; select bank0
 18231  1324  00D5               	movwf	ctoa@w
 18232  1325  30FF               	movlw	255
 18233  1326  0142               	movlb	2	; select bank2
 18234  1327  3D33               	addwfc	(_width+1)^(0+256),w
 18235  1328  0140               	movlb	0	; select bank0
 18236  1329  00D6               	movwf	ctoa@w+1
 18237  132A                     l7167:	
 18238                           
 18239                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 18240  132A  0852               	movf	ctoa@c,w
 18241  132B  00D4               	movwf	??_ctoa
 18242  132C  0854               	movf	??_ctoa,w
 18243  132D  0143               	movlb	3	; select bank3
 18244  132E  00A0               	movwf	_dbuf^(0+384)
 18245                           
 18246                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 18247  132F  01A1               	clrf	(_dbuf^(0+384)+1)
 18248                           
 18249                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 18250  1330  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 18251  1331  0140               	movlb	0	; select bank0
 18252  1332  00D4               	movwf	??_ctoa
 18253  1333  0854               	movf	??_ctoa,w
 18254  1334  00C9               	movwf	pad@buf
 18255  1335  0856               	movf	ctoa@w+1,w
 18256  1336  00CB               	movwf	pad@p+1
 18257  1337  0855               	movf	ctoa@w,w
 18258  1338  00CA               	movwf	pad@p
 18259  1339  0857               	movf	ctoa@fp,w
 18260  133A  3195  2539         	fcall	_pad
 18261  133C  0140               	movlb	0	; select bank0
 18262  133D  084A               	movf	?_pad+1,w
 18263  133E  00D3               	movwf	?_ctoa+1
 18264  133F  0849               	movf	?_pad,w
 18265  1340  00D2               	movwf	?_ctoa
 18266  1341  0008               	return
 18267  1342                     __end_of_ctoa:	
 18268                           
 18269                           	psect	text51
 18270  1539                     __ptext51:	
 18271 ;; *************** function _pad *****************
 18272 ;; Defined at:
 18273 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 18274 ;; Parameters:    Size  Location     Type
 18275 ;;  fp              1    wreg     PTR struct _IO_FILE
 18276 ;;		 -> NULL(0), 
 18277 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 18278 ;;		 -> dbuf(32), 
 18279 ;;  p               2   42[BANK0 ] int 
 18280 ;; Auto vars:     Size  Location     Type
 18281 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
 18282 ;;		 -> NULL(0), 
 18283 ;;  w               2   47[BANK0 ] int 
 18284 ;;  i               2   45[BANK0 ] int 
 18285 ;; Return value:  Size  Location     Type
 18286 ;;                  2   41[BANK0 ] int 
 18287 ;; Registers used:
 18288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18289 ;; Tracked objects:
 18290 ;;		On entry : 0/0
 18291 ;;		On exit  : 0/0
 18292 ;;		Unchanged: 0/0
 18293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18294 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18295 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18296 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18297 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18298 ;;Total ram usage:        9 bytes
 18299 ;; Hardware stack levels used:    1
 18300 ;; Hardware stack levels required when called:   12
 18301 ;; This function calls:
 18302 ;;		_fputc
 18303 ;;		_fputs
 18304 ;;		_strlen
 18305 ;; This function is called by:
 18306 ;;		_ctoa
 18307 ;; This function uses a non-reentrant model
 18308 ;;
 18309                           
 18310                           
 18311                           ;psect for function _pad
 18312  1539                     _pad:	
 18313                           
 18314                           ;incstack = 0
 18315 ;; hardware stack exceeded
 18316                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18317                           ;pad@fp stored from wreg
 18318  1539  0140               	movlb	0	; select bank0
 18319  153A  00D1               	movwf	pad@fp
 18320                           
 18321                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 18322  153B  0142               	movlb	2	; select bank2
 18323  153C  1C36               	btfss	_flags^(0+256),0
 18324  153D  2D47               	goto	l7143
 18325                           
 18326                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 18327  153E  0140               	movlb	0	; select bank0
 18328  153F  0851               	movf	pad@fp,w
 18329  1540  00CC               	movwf	??_pad
 18330  1541  084C               	movf	??_pad,w
 18331  1542  00C1               	movwf	fputs@fp
 18332  1543  0849               	movf	pad@buf,w
 18333  1544  3192  2240  3195   	fcall	_fputs
 18334  1547                     l7143:	
 18335                           
 18336                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 18337  1547  0140               	movlb	0	; select bank0
 18338  1548  1BCB               	btfsc	pad@p+1,7
 18339  1549  2D4F               	goto	l7147
 18340  154A  084B               	movf	pad@p+1,w
 18341  154B  00D0               	movwf	pad@w+1
 18342  154C  084A               	movf	pad@p,w
 18343  154D  00CF               	movwf	pad@w
 18344  154E  2D51               	goto	l1648
 18345  154F                     l7147:	
 18346  154F  01CF               	clrf	pad@w
 18347  1550  01D0               	clrf	pad@w+1
 18348  1551                     l1648:	
 18349                           
 18350                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18351  1551  01CD               	clrf	pad@i
 18352  1552  01CE               	clrf	pad@i+1
 18353  1553                     l7153:	
 18354                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 18355                           
 18356                           
 18357                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 18358  1553  084E               	movf	pad@i+1,w
 18359  1554  3A80               	xorlw	128
 18360  1555  00CC               	movwf	??_pad
 18361  1556  0850               	movf	pad@w+1,w
 18362  1557  3A80               	xorlw	128
 18363  1558  024C               	subwf	??_pad,w
 18364  1559  1D03               	skipz
 18365  155A  2D5D               	goto	u6605
 18366  155B  084F               	movf	pad@w,w
 18367  155C  024D               	subwf	pad@i,w
 18368  155D                     u6605:	
 18369  155D  1803               	btfsc	3,0
 18370  155E  2D71               	goto	l1651
 18371                           
 18372                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 18373  155F  3020               	movlw	32
 18374  1560  0140               	movlb	0	; select bank0
 18375  1561  00B9               	movwf	fputc@c
 18376  1562  3000               	movlw	0
 18377  1563  00BA               	movwf	fputc@c+1
 18378  1564  0851               	movf	pad@fp,w
 18379  1565  00CC               	movwf	??_pad
 18380  1566  084C               	movf	??_pad,w
 18381  1567  00BB               	movwf	fputc@fp
 18382  1568  3194  2478  3195   	fcall	_fputc
 18383                           
 18384                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18385  156B  3001               	movlw	1
 18386  156C  0140               	movlb	0	; select bank0
 18387  156D  07CD               	addwf	pad@i,f
 18388  156E  3000               	movlw	0
 18389  156F  3DCE               	addwfc	pad@i+1,f
 18390  1570  2D53               	goto	l7153
 18391  1571                     l1651:	
 18392                           
 18393                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 18394  1571  0142               	movlb	2	; select bank2
 18395  1572  1836               	btfsc	_flags^(0+256),0
 18396  1573  2D7D               	goto	l7157
 18397                           
 18398                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 18399  1574  0140               	movlb	0	; select bank0
 18400  1575  0851               	movf	pad@fp,w
 18401  1576  00CC               	movwf	??_pad
 18402  1577  084C               	movf	??_pad,w
 18403  1578  00C1               	movwf	fputs@fp
 18404  1579  0849               	movf	pad@buf,w
 18405  157A  3192  2240  3195   	fcall	_fputs
 18406  157D                     l7157:	
 18407                           
 18408                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 18409  157D  0140               	movlb	0	; select bank0
 18410  157E  0849               	movf	pad@buf,w
 18411  157F  00A0               	movwf	strlen@s
 18412  1580  3001               	movlw	1
 18413  1581  00A1               	movwf	strlen@s+1
 18414  1582  3190  2073         	fcall	_strlen
 18415  1584  0140               	movlb	0	; select bank0
 18416  1585  084F               	movf	pad@w,w
 18417  1586  0720               	addwf	?_strlen,w
 18418  1587  00C9               	movwf	?_pad
 18419  1588  0850               	movf	pad@w+1,w
 18420  1589  3D21               	addwfc	?_strlen+1,w
 18421  158A  00CA               	movwf	?_pad+1
 18422  158B  0008               	return
 18423  158C                     __end_of_pad:	
 18424                           
 18425                           	psect	text52
 18426  1073                     __ptext52:	
 18427 ;; *************** function _strlen *****************
 18428 ;; Defined at:
 18429 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 18430 ;; Parameters:    Size  Location     Type
 18431 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 18432 ;;		 -> dbuf(32), STR_14(9), 
 18433 ;; Auto vars:     Size  Location     Type
 18434 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 18435 ;;		 -> dbuf(32), STR_14(9), 
 18436 ;; Return value:  Size  Location     Type
 18437 ;;                  2    0[BANK0 ] unsigned int 
 18438 ;; Registers used:
 18439 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18440 ;; Tracked objects:
 18441 ;;		On entry : 0/0
 18442 ;;		On exit  : 0/0
 18443 ;;		Unchanged: 0/0
 18444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18448 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18449 ;;Total ram usage:        5 bytes
 18450 ;; Hardware stack levels used:    1
 18451 ;; Hardware stack levels required when called:    4
 18452 ;; This function calls:
 18453 ;;		Nothing
 18454 ;; This function is called by:
 18455 ;;		_pad
 18456 ;;		_TM1650_scrollPrint
 18457 ;; This function uses a non-reentrant model
 18458 ;;
 18459                           
 18460                           
 18461                           ;psect for function _strlen
 18462  1073                     _strlen:	
 18463                           
 18464                           ;incstack = 0
 18465                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 18466  1073  0140               	movlb	0	; select bank0
 18467  1074  0821               	movf	strlen@s+1,w
 18468  1075  00A4               	movwf	strlen@a+1
 18469  1076  0820               	movf	strlen@s,w
 18470  1077  00A3               	movwf	strlen@a
 18471  1078                     l4733:	
 18472  1078  0820               	movf	strlen@s,w
 18473  1079  0084               	movwf	4
 18474  107A  0821               	movf	strlen@s+1,w
 18475  107B  0085               	movwf	5
 18476  107C  0012               	moviw fsr0++
 18477  107D  1903               	btfsc	3,2
 18478  107E  2884               	goto	l4735
 18479  107F  3001               	movlw	1
 18480  1080  07A0               	addwf	strlen@s,f
 18481  1081  3000               	movlw	0
 18482  1082  3DA1               	addwfc	strlen@s+1,f
 18483  1083  2878               	goto	l4733
 18484  1084                     l4735:	
 18485  1084  0823               	movf	strlen@a,w
 18486  1085  0220               	subwf	strlen@s,w
 18487  1086  00A0               	movwf	?_strlen
 18488  1087  0824               	movf	strlen@a+1,w
 18489  1088  3B21               	subwfb	strlen@s+1,w
 18490  1089  00A1               	movwf	?_strlen+1
 18491  108A  0008               	return
 18492  108B                     __end_of_strlen:	
 18493                           
 18494                           	psect	text53
 18495  1240                     __ptext53:	
 18496 ;; *************** function _fputs *****************
 18497 ;; Defined at:
 18498 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 18499 ;; Parameters:    Size  Location     Type
 18500 ;;  s               1    wreg     PTR const unsigned char 
 18501 ;;		 -> dbuf(32), 
 18502 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
 18503 ;;		 -> NULL(0), 
 18504 ;; Auto vars:     Size  Location     Type
 18505 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 18506 ;;		 -> dbuf(32), 
 18507 ;;  i               2   38[BANK0 ] int 
 18508 ;;  c               1   37[BANK0 ] unsigned char 
 18509 ;; Return value:  Size  Location     Type
 18510 ;;                  2   33[BANK0 ] int 
 18511 ;; Registers used:
 18512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18513 ;; Tracked objects:
 18514 ;;		On entry : 0/0
 18515 ;;		On exit  : 0/0
 18516 ;;		Unchanged: 0/0
 18517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18518 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18519 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18520 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18521 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18522 ;;Total ram usage:        8 bytes
 18523 ;; Hardware stack levels used:    1
 18524 ;; Hardware stack levels required when called:   11
 18525 ;; This function calls:
 18526 ;;		_fputc
 18527 ;; This function is called by:
 18528 ;;		_pad
 18529 ;; This function uses a non-reentrant model
 18530 ;;
 18531                           
 18532                           
 18533                           ;psect for function _fputs
 18534  1240                     _fputs:	
 18535                           
 18536                           ;incstack = 0
 18537 ;; hardware stack exceeded
 18538                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18539                           ;fputs@s stored from wreg
 18540  1240  0140               	movlb	0	; select bank0
 18541  1241  00C8               	movwf	fputs@s
 18542  1242  01C6               	clrf	fputs@i
 18543  1243  01C7               	clrf	fputs@i+1
 18544  1244                     l7137:	
 18545  1244  0846               	movf	fputs@i,w
 18546  1245  0748               	addwf	fputs@s,w
 18547  1246  00C2               	movwf	??_fputs
 18548  1247  0842               	movf	??_fputs,w
 18549  1248  0086               	movwf	6
 18550  1249  3001               	movlw	1	; select bank2/3
 18551  124A  0087               	movwf	7
 18552  124B  0801               	movf	1,w
 18553  124C  00C3               	movwf	??_fputs+1
 18554  124D  0843               	movf	??_fputs+1,w
 18555  124E  00C5               	movwf	fputs@c
 18556  124F  0845               	movf	fputs@c,w
 18557  1250  1903               	btfsc	3,2
 18558  1251  0008               	return
 18559  1252  0845               	movf	fputs@c,w
 18560  1253  00C2               	movwf	??_fputs
 18561  1254  01C3               	clrf	??_fputs+1
 18562  1255  0842               	movf	??_fputs,w
 18563  1256  00B9               	movwf	fputc@c
 18564  1257  0843               	movf	??_fputs+1,w
 18565  1258  00BA               	movwf	fputc@c+1
 18566  1259  0841               	movf	fputs@fp,w
 18567  125A  00C4               	movwf	??_fputs+2
 18568  125B  0844               	movf	??_fputs+2,w
 18569  125C  00BB               	movwf	fputc@fp
 18570  125D  3194  2478  3192   	fcall	_fputc
 18571  1260  3001               	movlw	1
 18572  1261  0140               	movlb	0	; select bank0
 18573  1262  07C6               	addwf	fputs@i,f
 18574  1263  3000               	movlw	0
 18575  1264  3DC7               	addwfc	fputs@i+1,f
 18576  1265  2A44               	goto	l7137
 18577  1266                     __end_of_fputs:	
 18578                           
 18579                           	psect	text54
 18580  1478                     __ptext54:	
 18581 ;; *************** function _fputc *****************
 18582 ;; Defined at:
 18583 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;  c               2   25[BANK0 ] int 
 18586 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 18587 ;;		 -> NULL(0), 
 18588 ;; Auto vars:     Size  Location     Type
 18589 ;;		None
 18590 ;; Return value:  Size  Location     Type
 18591 ;;                  2   25[BANK0 ] int 
 18592 ;; Registers used:
 18593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18594 ;; Tracked objects:
 18595 ;;		On entry : 0/0
 18596 ;;		On exit  : 0/0
 18597 ;;		Unchanged: 0/0
 18598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18599 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18601 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18602 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18603 ;;Total ram usage:        8 bytes
 18604 ;; Hardware stack levels used:    1
 18605 ;; Hardware stack levels required when called:   10
 18606 ;; This function calls:
 18607 ;;		_putch
 18608 ;; This function is called by:
 18609 ;;		_pad
 18610 ;;		_vfpfcnvrt
 18611 ;;		_fputs
 18612 ;; This function uses a non-reentrant model
 18613 ;;
 18614                           
 18615                           
 18616                           ;psect for function _fputc
 18617  1478                     _fputc:	
 18618                           
 18619                           ;incstack = 0
 18620                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18621  1478  0140               	movlb	0	; select bank0
 18622  1479  083B               	movf	fputc@fp,w
 18623  147A  1D03               	btfss	3,2
 18624  147B  083B               	movf	fputc@fp,w
 18625  147C  1D03               	btfss	3,2
 18626  147D  2C82               	goto	l7123
 18627  147E  0839               	movf	fputc@c,w
 18628  147F  3191  21D2         	fcall	_putch
 18629  1481  0008               	return
 18630  1482                     l7123:	
 18631  1482  083B               	movf	fputc@fp,w
 18632  1483  3E03               	addlw	3
 18633  1484  0086               	movwf	6
 18634  1485  0187               	clrf	7
 18635  1486  0016               	moviw fsr1++
 18636  1487  0401               	iorwf	1,w
 18637  1488  1903               	btfsc	3,2
 18638  1489  2CA5               	goto	l7127
 18639  148A  083B               	movf	fputc@fp,w
 18640  148B  3E03               	addlw	3
 18641  148C  0086               	movwf	6
 18642  148D  0187               	clrf	7
 18643  148E  3F40               	moviw [0]fsr1
 18644  148F  00BC               	movwf	??_fputc
 18645  1490  3F41               	moviw [1]fsr1
 18646  1491  00BD               	movwf	??_fputc+1
 18647  1492  0A3B               	incf	fputc@fp,w
 18648  1493  0086               	movwf	6
 18649  1494  0187               	clrf	7
 18650  1495  3F40               	moviw [0]fsr1
 18651  1496  00BE               	movwf	??_fputc+2
 18652  1497  3F41               	moviw [1]fsr1
 18653  1498  00BF               	movwf	??_fputc+3
 18654  1499  083F               	movf	??_fputc+3,w
 18655  149A  3A80               	xorlw	128
 18656  149B  00C0               	movwf	??_fputc+4
 18657  149C  083D               	movf	??_fputc+1,w
 18658  149D  3A80               	xorlw	128
 18659  149E  0240               	subwf	??_fputc+4,w
 18660  149F  1D03               	skipz
 18661  14A0  2CA3               	goto	u6565
 18662  14A1  083C               	movf	??_fputc,w
 18663  14A2  023E               	subwf	??_fputc+2,w
 18664  14A3                     u6565:	
 18665  14A3  1803               	skipnc
 18666  14A4  0008               	return
 18667  14A5                     l7127:	
 18668  14A5  0140               	movlb	0	; select bank0
 18669  14A6  0A3B               	incf	fputc@fp,w
 18670  14A7  0086               	movwf	6
 18671  14A8  0187               	clrf	7
 18672  14A9  3001               	movlw	1
 18673  14AA  0781               	addwf	1,f
 18674  14AB  3141               	addfsr 1,1
 18675  14AC  1803               	skipnc
 18676  14AD  0A81               	incf	1,f
 18677  14AE  0008               	return
 18678  14AF                     __end_of_fputc:	
 18679                           
 18680                           	psect	text55
 18681  11D2                     __ptext55:	
 18682 ;; *************** function _putch *****************
 18683 ;; Defined at:
 18684 ;;		line 120 in file "tm1650.c"
 18685 ;; Parameters:    Size  Location     Type
 18686 ;;  n               1    wreg     unsigned char 
 18687 ;; Auto vars:     Size  Location     Type
 18688 ;;  n               1   24[BANK0 ] unsigned char 
 18689 ;; Return value:  Size  Location     Type
 18690 ;;                  1    wreg      void 
 18691 ;; Registers used:
 18692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18693 ;; Tracked objects:
 18694 ;;		On entry : 0/0
 18695 ;;		On exit  : 0/0
 18696 ;;		Unchanged: 0/0
 18697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18701 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18702 ;;Total ram usage:        2 bytes
 18703 ;; Hardware stack levels used:    1
 18704 ;; Hardware stack levels required when called:    9
 18705 ;; This function calls:
 18706 ;;		_TM1650_setDigit
 18707 ;; This function is called by:
 18708 ;;		_fputc
 18709 ;; This function uses a non-reentrant model
 18710 ;;
 18711                           
 18712                           
 18713                           ;psect for function _putch
 18714  11D2                     _putch:	
 18715                           
 18716                           ;incstack = 0
 18717                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18718                           ;putch@n stored from wreg
 18719  11D2  0140               	movlb	0	; select bank0
 18720  11D3  00B8               	movwf	putch@n
 18721                           
 18722                           ;tm1650.c: 122:     if(position > 3 || n == '\r' || n == '\0')
 18723  11D4  3004               	movlw	4
 18724  11D5  0141               	movlb	1	; select bank1
 18725  11D6  0230               	subwf	_position^(0+128),w
 18726  11D7  1803               	skipnc
 18727  11D8  29E0               	goto	l7109
 18728  11D9  300D               	movlw	13
 18729  11DA  0140               	movlb	0	; select bank0
 18730  11DB  0638               	xorwf	putch@n,w
 18731  11DC  1D03               	btfss	3,2
 18732  11DD  0838               	movf	putch@n,w
 18733  11DE  1D03               	btfss	3,2
 18734  11DF  29E2               	goto	l7111
 18735  11E0                     l7109:	
 18736                           
 18737                           ;tm1650.c: 123:         position = 0;
 18738  11E0  0141               	movlb	1	; select bank1
 18739  11E1  01B0               	clrf	_position^(0+128)
 18740  11E2                     l7111:	
 18741                           
 18742                           ;tm1650.c: 125:     if(n != '\r'){
 18743  11E2  300D               	movlw	13
 18744  11E3  0140               	movlb	0	; select bank0
 18745  11E4  0638               	xorwf	putch@n,w
 18746  11E5  1903               	btfsc	3,2
 18747  11E6  0008               	return
 18748                           
 18749                           ;tm1650.c: 126:         TM1650_setDigit(position, n);
 18750  11E7  0838               	movf	putch@n,w
 18751  11E8  00B7               	movwf	??_putch
 18752  11E9  0837               	movf	??_putch,w
 18753  11EA  00B4               	movwf	TM1650_setDigit@data
 18754  11EB  0141               	movlb	1	; select bank1
 18755  11EC  0830               	movf	_position^(0+128),w
 18756  11ED  319F  279F         	fcall	_TM1650_setDigit
 18757                           
 18758                           ;tm1650.c: 127:         position++;
 18759  11EF  3001               	movlw	1
 18760  11F0  0140               	movlb	0	; select bank0
 18761  11F1  00B7               	movwf	??_putch
 18762  11F2  0837               	movf	??_putch,w
 18763  11F3  0141               	movlb	1	; select bank1
 18764  11F4  07B0               	addwf	_position^(0+128),f
 18765  11F5  0008               	return
 18766  11F6                     __end_of_putch:	
 18767                           
 18768                           	psect	text56
 18769  1F9F                     __ptext56:	
 18770 ;; *************** function _TM1650_setDigit *****************
 18771 ;; Defined at:
 18772 ;;		line 95 in file "tm1650.c"
 18773 ;; Parameters:    Size  Location     Type
 18774 ;;  digit           1    wreg     unsigned char 
 18775 ;;  data            1   20[BANK0 ] unsigned char 
 18776 ;; Auto vars:     Size  Location     Type
 18777 ;;  digit           1   22[BANK0 ] unsigned char 
 18778 ;; Return value:  Size  Location     Type
 18779 ;;                  1    wreg      void 
 18780 ;; Registers used:
 18781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18782 ;; Tracked objects:
 18783 ;;		On entry : 0/0
 18784 ;;		On exit  : 0/0
 18785 ;;		Unchanged: 0/0
 18786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18787 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18789 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18790 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18791 ;;Total ram usage:        3 bytes
 18792 ;; Hardware stack levels used:    1
 18793 ;; Hardware stack levels required when called:    8
 18794 ;; This function calls:
 18795 ;;		_writeData
 18796 ;; This function is called by:
 18797 ;;		_putch
 18798 ;; This function uses a non-reentrant model
 18799 ;;
 18800                           
 18801                           
 18802                           ;psect for function _TM1650_setDigit
 18803  1F9F                     _TM1650_setDigit:	
 18804                           
 18805                           ;incstack = 0
 18806                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18807                           ;TM1650_setDigit@digit stored from wreg
 18808  1F9F  0140               	movlb	0	; select bank0
 18809  1FA0  00B6               	movwf	TM1650_setDigit@digit
 18810                           
 18811                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 18812  1FA1  0834               	movf	TM1650_setDigit@data,w
 18813  1FA2  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 18814  1FA3  0084               	movwf	4
 18815  1FA4  3097               	movlw	high ((_charTable+65504)| (0+32768))
 18816  1FA5  1803               	skipnc
 18817  1FA6  3E01               	addlw	1
 18818  1FA7  0085               	movwf	5
 18819  1FA8  0800               	movf	0,w	;code access
 18820  1FA9  00B5               	movwf	??_TM1650_setDigit
 18821  1FAA  0835               	movf	??_TM1650_setDigit,w
 18822  1FAB  00AE               	movwf	writeData@data
 18823  1FAC  0836               	movf	TM1650_setDigit@digit,w
 18824  1FAD  3E34               	addlw	52
 18825  1FAE  3190  20DA         	fcall	_writeData
 18826  1FB0  0008               	return
 18827  1FB1                     __end_of_TM1650_setDigit:	
 18828                           
 18829                           	psect	text57
 18830  121A                     __ptext57:	
 18831 ;; *************** function _getManualColor *****************
 18832 ;; Defined at:
 18833 ;;		line 274 in file "led.c"
 18834 ;; Parameters:    Size  Location     Type
 18835 ;;  input           1    wreg     enum E10883
 18836 ;; Auto vars:     Size  Location     Type
 18837 ;;  input           1    2[BANK0 ] enum E10883
 18838 ;; Return value:  Size  Location     Type
 18839 ;;                  1    wreg      unsigned char 
 18840 ;; Registers used:
 18841 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18842 ;; Tracked objects:
 18843 ;;		On entry : 0/0
 18844 ;;		On exit  : 0/0
 18845 ;;		Unchanged: 0/0
 18846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18849 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18850 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18851 ;;Total ram usage:        3 bytes
 18852 ;; Hardware stack levels used:    1
 18853 ;; Hardware stack levels required when called:    4
 18854 ;; This function calls:
 18855 ;;		Nothing
 18856 ;; This function is called by:
 18857 ;;		_CONTROLLER_task
 18858 ;; This function uses a non-reentrant model
 18859 ;;
 18860                           
 18861                           
 18862                           ;psect for function _getManualColor
 18863  121A                     _getManualColor:	
 18864                           
 18865                           ;incstack = 0
 18866                           ; Regs used in _getManualColor: [wreg-fsr0h+status,2+status,0]
 18867                           ;getManualColor@input stored from wreg
 18868  121A  0140               	movlb	0	; select bank0
 18869  121B  00A2               	movwf	getManualColor@input
 18870                           
 18871                           ;led.c: 276:        switch(input){
 18872  121C  2A29               	goto	l6037
 18873  121D                     l6011:	
 18874                           
 18875                           ;led.c: 279:             return manual.red;
 18876  121D  0141               	movlb	1	; select bank1
 18877  121E  0826               	movf	(_manual^(0+128)+1),w
 18878  121F  0008               	return
 18879  1220                     l6017:	
 18880                           
 18881                           ;led.c: 283:             return manual.green;
 18882  1220  0141               	movlb	1	; select bank1
 18883  1221  0827               	movf	(_manual^(0+128)+2),w
 18884  1222  0008               	return
 18885  1223                     l6023:	
 18886                           
 18887                           ;led.c: 287:             return manual.blue;
 18888  1223  0141               	movlb	1	; select bank1
 18889  1224  0828               	movf	(_manual^(0+128)+3),w
 18890  1225  0008               	return
 18891  1226                     l6029:	
 18892                           
 18893                           ;led.c: 291:             return manual.white;
 18894  1226  0141               	movlb	1	; select bank1
 18895  1227  0825               	movf	_manual^(0+128),w
 18896  1228  0008               	return
 18897  1229                     l6037:	
 18898  1229  0822               	movf	getManualColor@input,w
 18899  122A  00A0               	movwf	??_getManualColor
 18900  122B  01A1               	clrf	??_getManualColor+1
 18901                           
 18902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18903                           ; Switch size 1, requested type "simple"
 18904                           ; Number of cases is 1, Range of values is 0 to 0
 18905                           ; switch strategies available:
 18906                           ; Name         Instructions Cycles
 18907                           ; simple_byte            4     3 (average)
 18908                           ; direct_byte            8     6 (fixed)
 18909                           ; jumptable            260     6 (fixed)
 18910                           ;	Chosen strategy is simple_byte
 18911  122C  0821               	movf	??_getManualColor+1,w
 18912  122D  3A00               	xorlw	0	; case 0
 18913  122E  1903               	skipnz
 18914  122F  2A31               	goto	l9015
 18915  1230  2A3F               	goto	l1471
 18916  1231                     l9015:	
 18917                           
 18918                           ; Switch size 1, requested type "simple"
 18919                           ; Number of cases is 4, Range of values is 0 to 3
 18920                           ; switch strategies available:
 18921                           ; Name         Instructions Cycles
 18922                           ; simple_byte           13     7 (average)
 18923                           ; direct_byte           14     6 (fixed)
 18924                           ; jumptable            260     6 (fixed)
 18925                           ;	Chosen strategy is simple_byte
 18926  1231  0820               	movf	??_getManualColor,w
 18927  1232  3A00               	xorlw	0	; case 0
 18928  1233  1903               	skipnz
 18929  1234  2A1D               	goto	l6011
 18930  1235  3A01               	xorlw	1	; case 1
 18931  1236  1903               	skipnz
 18932  1237  2A20               	goto	l6017
 18933  1238  3A03               	xorlw	3	; case 2
 18934  1239  1903               	skipnz
 18935  123A  2A23               	goto	l6023
 18936  123B  3A01               	xorlw	1	; case 3
 18937  123C  1903               	skipnz
 18938  123D  2A26               	goto	l6029
 18939  123E  2A3F               	goto	l1471
 18940  123F                     l1471:	
 18941  123F  0008               	return
 18942  1240                     __end_of_getManualColor:	
 18943                           
 18944                           	psect	text58
 18945  1002                     __ptext58:	
 18946 ;; *************** function _TM1650_enable *****************
 18947 ;; Defined at:
 18948 ;;		line 41 in file "tm1650.c"
 18949 ;; Parameters:    Size  Location     Type
 18950 ;;  enable          1    wreg     _Bool 
 18951 ;; Auto vars:     Size  Location     Type
 18952 ;;  enable          1   20[BANK0 ] _Bool 
 18953 ;; Return value:  Size  Location     Type
 18954 ;;                  1    wreg      void 
 18955 ;; Registers used:
 18956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18957 ;; Tracked objects:
 18958 ;;		On entry : 0/0
 18959 ;;		On exit  : 0/0
 18960 ;;		Unchanged: 0/0
 18961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18965 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18966 ;;Total ram usage:        1 bytes
 18967 ;; Hardware stack levels used:    1
 18968 ;; Hardware stack levels required when called:    8
 18969 ;; This function calls:
 18970 ;;		_writeData
 18971 ;; This function is called by:
 18972 ;;		_CONTROLLER_task
 18973 ;;		_TM1650_init
 18974 ;; This function uses a non-reentrant model
 18975 ;;
 18976                           
 18977                           
 18978                           ;psect for function _TM1650_enable
 18979  1002                     _TM1650_enable:	
 18980                           
 18981                           ;incstack = 0
 18982                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18983                           ;TM1650_enable@enable stored from wreg
 18984  1002  0140               	movlb	0	; select bank0
 18985  1003  00B4               	movwf	TM1650_enable@enable
 18986                           
 18987                           ;tm1650.c: 42:     if(enable){
 18988  1004  0834               	movf	TM1650_enable@enable,w
 18989  1005  1903               	btfsc	3,2
 18990  1006  2810               	goto	l8235
 18991                           
 18992                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 18993  1007  01AE               	clrf	writeData@data
 18994  1008  0AAE               	incf	writeData@data,f
 18995  1009  3024               	movlw	36
 18996  100A  3190  20DA         	fcall	_writeData
 18997                           
 18998                           ;tm1650.c: 44:         tm1650_status = 1;
 18999  100C  0142               	movlb	2	; select bank2
 19000  100D  01CC               	clrf	_tm1650_status^(0+256)
 19001  100E  0ACC               	incf	_tm1650_status^(0+256),f
 19002                           
 19003                           ;tm1650.c: 45:     } else {
 19004  100F  0008               	return
 19005  1010                     l8235:	
 19006                           
 19007                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 19008  1010  01AE               	clrf	writeData@data
 19009  1011  3024               	movlw	36
 19010  1012  3190  20DA         	fcall	_writeData
 19011                           
 19012                           ;tm1650.c: 47:         tm1650_status = 0;
 19013  1014  0142               	movlb	2	; select bank2
 19014  1015  01CC               	clrf	_tm1650_status^(0+256)
 19015  1016  0008               	return
 19016  1017                     __end_of_TM1650_enable:	
 19017                           
 19018                           	psect	text59
 19019  073F                     __ptext59:	
 19020 ;; *************** function _CONTROL_MANUAL *****************
 19021 ;; Defined at:
 19022 ;;		line 256 in file "controller.c"
 19023 ;; Parameters:    Size  Location     Type
 19024 ;;  input           1    wreg     enum E10878
 19025 ;; Auto vars:     Size  Location     Type
 19026 ;;  input           1    5[BANK0 ] enum E10878
 19027 ;; Return value:  Size  Location     Type
 19028 ;;                  1    wreg      _Bool 
 19029 ;; Registers used:
 19030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19031 ;; Tracked objects:
 19032 ;;		On entry : 0/0
 19033 ;;		On exit  : 0/0
 19034 ;;		Unchanged: 0/0
 19035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19038 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19039 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19040 ;;Total ram usage:        3 bytes
 19041 ;; Hardware stack levels used:    1
 19042 ;; Hardware stack levels required when called:    5
 19043 ;; This function calls:
 19044 ;;		_BUTTONS_isHeld
 19045 ;;		_CLOCK_getTime
 19046 ;;		_colorDec
 19047 ;;		_colorInc
 19048 ;; This function is called by:
 19049 ;;		_CONTROLLER_task
 19050 ;; This function uses a non-reentrant model
 19051 ;;
 19052                           
 19053                           
 19054                           ;psect for function _CONTROL_MANUAL
 19055  073F                     _CONTROL_MANUAL:	
 19056                           
 19057                           ;incstack = 0
 19058                           ; Regs used in _CONTROL_MANUAL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19059                           ;CONTROL_MANUAL@input stored from wreg
 19060  073F  0140               	movlb	0	; select bank0
 19061  0740  00A5               	movwf	CONTROL_MANUAL@input
 19062                           
 19063                           ;controller.c: 258:      if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incIn
      +                          terval)){
 19064  0741  0141               	movlb	1	; select bank1
 19065  0742  083D               	movf	_up^(0+128),w
 19066  0743  319F  276E  3187   	fcall	_BUTTONS_isHeld
 19067  0746  3A00               	xorlw	0
 19068  0747  1903               	skipnz
 19069  0748  2FA4               	goto	l8151
 19070  0749  319E  26C5  3187   	fcall	_CLOCK_getTime
 19071  074C  0141               	movlb	1	; select bank1
 19072  074D  082B               	movf	_lastIncTime^(0+128),w
 19073  074E  0140               	movlb	0	; select bank0
 19074  074F  0220               	subwf	?_CLOCK_getTime,w
 19075  0750  00A3               	movwf	??_CONTROL_MANUAL
 19076  0751  0141               	movlb	1	; select bank1
 19077  0752  082C               	movf	(_lastIncTime+1)^(0+128),w
 19078  0753  0140               	movlb	0	; select bank0
 19079  0754  3B21               	subwfb	?_CLOCK_getTime+1,w
 19080  0755  00A4               	movwf	??_CONTROL_MANUAL+1
 19081  0756  0824               	movf	??_CONTROL_MANUAL+1,w
 19082  0757  027D               	subwf	_incInterval+1,w
 19083  0758  1D03               	skipz
 19084  0759  2F5C               	goto	u8115
 19085  075A  0823               	movf	??_CONTROL_MANUAL,w
 19086  075B  027C               	subwf	_incInterval,w
 19087  075C                     u8115:	
 19088  075C  1803               	skipnc
 19089  075D  2FA4               	goto	l8151
 19090                           
 19091                           ;controller.c: 259:         colorInc(input);
 19092  075E  0825               	movf	CONTROL_MANUAL@input,w
 19093  075F  3188  2003  3187   	fcall	_colorInc
 19094  0762  2F7C               	goto	L20
 19095  0763                     l8153:	
 19096                           ;controller.c: 261:         if(incInterval > 10){
 19097                           
 19098                           ;controller.c: 260:         lastIncTime = CLOCK_getTime();
 19099                           
 19100  0763  319E  26C5  3187   	fcall	_CLOCK_getTime
 19101  0766  0141               	movlb	1	; select bank1
 19102  0767  082B               	movf	_lastIncTime^(0+128),w
 19103  0768  0140               	movlb	0	; select bank0
 19104  0769  0220               	subwf	?_CLOCK_getTime,w
 19105  076A  00A3               	movwf	??_CONTROL_MANUAL
 19106  076B  0141               	movlb	1	; select bank1
 19107  076C  082C               	movf	(_lastIncTime+1)^(0+128),w
 19108  076D  0140               	movlb	0	; select bank0
 19109  076E  3B21               	subwfb	?_CLOCK_getTime+1,w
 19110  076F  00A4               	movwf	??_CONTROL_MANUAL+1
 19111  0770  0824               	movf	??_CONTROL_MANUAL+1,w
 19112  0771  027D               	subwf	_incInterval+1,w
 19113  0772  1D03               	skipz
 19114  0773  2F76               	goto	u8145
 19115  0774  0823               	movf	??_CONTROL_MANUAL,w
 19116  0775  027C               	subwf	_incInterval,w
 19117  0776                     u8145:	
 19118  0776  1803               	skipnc
 19119  0777  2FAC               	goto	l8167
 19120                           
 19121                           ;controller.c: 266:         colorDec(input);
 19122  0778  0825               	movf	CONTROL_MANUAL@input,w
 19123  0779  3194  2442  3187   	fcall	_colorDec
 19124  077C                     L20:	
 19125                           
 19126                           ;controller.c: 267:         lastIncTime = CLOCK_getTime();
 19127  077C  319E  26C5  3187   	fcall	_CLOCK_getTime
 19128  077F  0140               	movlb	0	; select bank0
 19129  0780  0821               	movf	?_CLOCK_getTime+1,w
 19130  0781  0141               	movlb	1	; select bank1
 19131  0782  00AC               	movwf	(_lastIncTime+1)^(0+128)
 19132  0783  0140               	movlb	0	; select bank0
 19133  0784  0820               	movf	?_CLOCK_getTime,w
 19134  0785  0141               	movlb	1	; select bank1
 19135  0786  00AB               	movwf	_lastIncTime^(0+128)
 19136                           
 19137                           ;controller.c: 268:         if(incInterval > 10){
 19138  0787  087D               	movf	_incInterval+1,w
 19139  0788  3A80               	xorlw	128
 19140  0789  0140               	movlb	0	; select bank0
 19141  078A  00A3               	movwf	??_CONTROL_MANUAL
 19142  078B  3080               	movlw	128
 19143  078C  0223               	subwf	??_CONTROL_MANUAL,w
 19144  078D  1D03               	skipz
 19145  078E  2F91               	goto	u8155
 19146  078F  300B               	movlw	11
 19147  0790  027C               	subwf	_incInterval,w
 19148  0791                     u8155:	
 19149  0791  1C03               	skipc
 19150  0792  2FA2               	goto	l1129
 19151                           
 19152                           ;controller.c: 262:             incInterval-=1;
 19153  0793  30FF               	movlw	255
 19154  0794  07FC               	addwf	_incInterval,f
 19155  0795  30FF               	movlw	255
 19156  0796  3DFD               	addwfc	_incInterval+1,f
 19157  0797  2FA2               	goto	l1129
 19158  0798                     l8169:	
 19159                           
 19160                           ;controller.c: 273:         colorInc(input);
 19161  0798  0140               	movlb	0	; select bank0
 19162  0799  0825               	movf	CONTROL_MANUAL@input,w
 19163  079A  3188  2003  3187   	fcall	_colorInc
 19164  079D  2FA2               	goto	l1129
 19165  079E                     l8179:	
 19166                           
 19167                           ;controller.c: 277:         colorDec(input);
 19168  079E  0140               	movlb	0	; select bank0
 19169  079F  0825               	movf	CONTROL_MANUAL@input,w
 19170  07A0  3194  2442         	fcall	_colorDec
 19171  07A2                     l1129:	
 19172                           ;controller.c: 263:         }
 19173                           
 19174                           
 19175                           ;controller.c: 264:         return 1;
 19176  07A2  3001               	movlw	1
 19177  07A3  0008               	return
 19178  07A4                     l8151:	
 19179  07A4  0141               	movlb	1	; select bank1
 19180  07A5  083C               	movf	_down^(0+128),w
 19181  07A6  319F  276E  3187   	fcall	_BUTTONS_isHeld
 19182  07A9  3A00               	xorlw	0
 19183  07AA  1D03               	btfss	3,2
 19184  07AB  2F63               	goto	l8153
 19185  07AC                     l8167:	
 19186  07AC  0141               	movlb	1	; select bank1
 19187  07AD  0836               	movf	_upState^(0+128),w
 19188  07AE  1D03               	btfss	3,2
 19189  07AF  2F98               	goto	l8169
 19190  07B0  0835               	movf	_downState^(0+128),w
 19191  07B1  1D03               	btfss	3,2
 19192  07B2  2F9E               	goto	l8179
 19193  07B3  0833               	movf	_enterState^(0+128),w
 19194  07B4  1D03               	btfss	3,2
 19195  07B5  2FC6               	goto	l8199
 19196  07B6  2FDD               	goto	l8207
 19197  07B7                     l1141:	
 19198                           ;controller.c: 281:             case CMODE_RED:
 19199                           
 19200                           
 19201                           ;controller.c: 282:                 colorModeSelected = CMODE_GREEN;
 19202  07B7  0141               	movlb	1	; select bank1
 19203  07B8  01B1               	clrf	_colorModeSelected^(0+128)
 19204  07B9  0AB1               	incf	_colorModeSelected^(0+128),f
 19205                           
 19206                           ;controller.c: 283:                 break;
 19207  07BA  2FA2               	goto	l1129
 19208  07BB                     l8191:	
 19209                           
 19210                           ;controller.c: 286:                 colorModeSelected = CMODE_BLUE;
 19211  07BB  3002               	movlw	2
 19212  07BC  2FBE               	goto	L19
 19213  07BD                     l8193:	
 19214                           ;controller.c: 287:                 break;
 19215                           
 19216                           
 19217                           ;controller.c: 290:                 colorModeSelected = CMODE_WHITE;
 19218  07BD  3003               	movlw	3
 19219  07BE                     L19:	
 19220  07BE  00A3               	movwf	??_CONTROL_MANUAL
 19221  07BF  0823               	movf	??_CONTROL_MANUAL,w
 19222  07C0  0141               	movlb	1	; select bank1
 19223  07C1  00B1               	movwf	_colorModeSelected^(0+128)
 19224                           
 19225                           ;controller.c: 291:                 break;
 19226  07C2  2FA2               	goto	l1129
 19227  07C3                     l8195:	
 19228                           
 19229                           ;controller.c: 294:                 colorModeSelected = CMODE_RED;
 19230  07C3  0141               	movlb	1	; select bank1
 19231  07C4  01B1               	clrf	_colorModeSelected^(0+128)
 19232                           
 19233                           ;controller.c: 295:                 break;
 19234  07C5  2FA2               	goto	l1129
 19235  07C6                     l8199:	
 19236  07C6  0140               	movlb	0	; select bank0
 19237  07C7  0825               	movf	CONTROL_MANUAL@input,w
 19238  07C8  00A3               	movwf	??_CONTROL_MANUAL
 19239  07C9  01A4               	clrf	??_CONTROL_MANUAL+1
 19240                           
 19241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19242                           ; Switch size 1, requested type "simple"
 19243                           ; Number of cases is 1, Range of values is 0 to 0
 19244                           ; switch strategies available:
 19245                           ; Name         Instructions Cycles
 19246                           ; simple_byte            4     3 (average)
 19247                           ; direct_byte            8     6 (fixed)
 19248                           ; jumptable            260     6 (fixed)
 19249                           ;	Chosen strategy is simple_byte
 19250  07CA  0824               	movf	??_CONTROL_MANUAL+1,w
 19251  07CB  3A00               	xorlw	0	; case 0
 19252  07CC  1903               	skipnz
 19253  07CD  2FCF               	goto	l9017
 19254  07CE  2FA2               	goto	l1129
 19255  07CF                     l9017:	
 19256                           
 19257                           ; Switch size 1, requested type "simple"
 19258                           ; Number of cases is 4, Range of values is 0 to 3
 19259                           ; switch strategies available:
 19260                           ; Name         Instructions Cycles
 19261                           ; simple_byte           13     7 (average)
 19262                           ; direct_byte           14     6 (fixed)
 19263                           ; jumptable            260     6 (fixed)
 19264                           ;	Chosen strategy is simple_byte
 19265  07CF  0823               	movf	??_CONTROL_MANUAL,w
 19266  07D0  3A00               	xorlw	0	; case 0
 19267  07D1  1903               	skipnz
 19268  07D2  2FB7               	goto	l1141
 19269  07D3  3A01               	xorlw	1	; case 1
 19270  07D4  1903               	skipnz
 19271  07D5  2FBB               	goto	l8191
 19272  07D6  3A03               	xorlw	3	; case 2
 19273  07D7  1903               	skipnz
 19274  07D8  2FBD               	goto	l8193
 19275  07D9  3A01               	xorlw	1	; case 3
 19276  07DA  1903               	skipnz
 19277  07DB  2FC3               	goto	l8195
 19278  07DC  2FA2               	goto	l1129
 19279  07DD                     l8207:	
 19280  07DD  0836               	movf	_upState^(0+128),w
 19281  07DE  1D03               	btfss	3,2
 19282  07DF  0835               	movf	_downState^(0+128),w
 19283  07E0  1D03               	btfss	3,2
 19284  07E1  2FF5               	goto	l8217
 19285  07E2  083C               	movf	_down^(0+128),w
 19286  07E3  319F  276E  3187   	fcall	_BUTTONS_isHeld
 19287  07E6  3A00               	xorlw	0
 19288  07E7  1D03               	skipz
 19289  07E8  2FF5               	goto	l8217
 19290  07E9  0141               	movlb	1	; select bank1
 19291  07EA  083D               	movf	_up^(0+128),w
 19292  07EB  319F  276E  3187   	fcall	_BUTTONS_isHeld
 19293  07EE  3A00               	xorlw	0
 19294  07EF  1D03               	skipz
 19295  07F0  2FF5               	goto	l8217
 19296                           
 19297                           ;controller.c: 299:         incInterval = 100;
 19298  07F1  3064               	movlw	100
 19299  07F2  00FC               	movwf	_incInterval
 19300  07F3  3000               	movlw	0
 19301  07F4  00FD               	movwf	_incInterval+1
 19302  07F5                     l8217:	
 19303                           ;controller.c: 300:     } else {
 19304                           
 19305                           
 19306                           ;controller.c: 301:         return 0;
 19307  07F5  3000               	movlw	0
 19308  07F6  0008               	return
 19309  07F7                     __end_of_CONTROL_MANUAL:	
 19310                           
 19311                           	psect	text60
 19312  0803                     __ptext60:	
 19313 ;; *************** function _colorInc *****************
 19314 ;; Defined at:
 19315 ;;		line 218 in file "led.c"
 19316 ;; Parameters:    Size  Location     Type
 19317 ;;  input           1    wreg     enum E10883
 19318 ;; Auto vars:     Size  Location     Type
 19319 ;;  input           1    2[BANK0 ] enum E10883
 19320 ;; Return value:  Size  Location     Type
 19321 ;;                  1    wreg      void 
 19322 ;; Registers used:
 19323 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19324 ;; Tracked objects:
 19325 ;;		On entry : 0/0
 19326 ;;		On exit  : 0/0
 19327 ;;		Unchanged: 0/0
 19328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19332 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19333 ;;Total ram usage:        3 bytes
 19334 ;; Hardware stack levels used:    1
 19335 ;; Hardware stack levels required when called:    4
 19336 ;; This function calls:
 19337 ;;		Nothing
 19338 ;; This function is called by:
 19339 ;;		_CONTROL_MANUAL
 19340 ;; This function uses a non-reentrant model
 19341 ;;
 19342                           
 19343                           
 19344                           ;psect for function _colorInc
 19345  0803                     _colorInc:	
 19346                           
 19347                           ;incstack = 0
 19348                           ; Regs used in _colorInc: [wreg-fsr0h+status,2+status,0]
 19349                           ;colorInc@input stored from wreg
 19350  0803  0140               	movlb	0	; select bank0
 19351  0804  00A2               	movwf	colorInc@input
 19352                           
 19353                           ;led.c: 220:     switch(input){
 19354  0805  2832               	goto	l5413
 19355  0806                     l5395:	
 19356                           
 19357                           ;led.c: 223:             if(!(manual.red > 254))
 19358  0806  0141               	movlb	1	; select bank1
 19359  0807  0A26               	incf	(_manual^(0+128)+1),w
 19360  0808  1903               	btfsc	3,2
 19361  0809  0008               	return
 19362                           
 19363                           ;led.c: 224:             manual.red++;
 19364  080A  3001               	movlw	1
 19365  080B  0140               	movlb	0	; select bank0
 19366  080C  00A0               	movwf	??_colorInc
 19367  080D  0820               	movf	??_colorInc,w
 19368  080E  0141               	movlb	1	; select bank1
 19369  080F  07A6               	addwf	(_manual^(0+128)+1),f
 19370  0810  0008               	return
 19371  0811                     l5399:	
 19372                           
 19373                           ;led.c: 228:             if(!(manual.green > 254))
 19374  0811  0141               	movlb	1	; select bank1
 19375  0812  0A27               	incf	(_manual^(0+128)+2),w
 19376  0813  1903               	btfsc	3,2
 19377  0814  0008               	return
 19378                           
 19379                           ;led.c: 229:             manual.green++;
 19380  0815  3001               	movlw	1
 19381  0816  0140               	movlb	0	; select bank0
 19382  0817  00A0               	movwf	??_colorInc
 19383  0818  0820               	movf	??_colorInc,w
 19384  0819  0141               	movlb	1	; select bank1
 19385  081A  07A7               	addwf	(_manual^(0+128)+2),f
 19386  081B  0008               	return
 19387  081C                     l5403:	
 19388                           
 19389                           ;led.c: 233:             if(!(manual.blue > 254))
 19390  081C  0141               	movlb	1	; select bank1
 19391  081D  0A28               	incf	(_manual^(0+128)+3),w
 19392  081E  1903               	btfsc	3,2
 19393  081F  0008               	return
 19394                           
 19395                           ;led.c: 234:             manual.blue++;
 19396  0820  3001               	movlw	1
 19397  0821  0140               	movlb	0	; select bank0
 19398  0822  00A0               	movwf	??_colorInc
 19399  0823  0820               	movf	??_colorInc,w
 19400  0824  0141               	movlb	1	; select bank1
 19401  0825  07A8               	addwf	(_manual^(0+128)+3),f
 19402  0826  0008               	return
 19403  0827                     l5407:	
 19404                           
 19405                           ;led.c: 238:             if(!(manual.white > 254))
 19406  0827  0141               	movlb	1	; select bank1
 19407  0828  0A25               	incf	_manual^(0+128),w
 19408  0829  1903               	btfsc	3,2
 19409  082A  0008               	return
 19410                           
 19411                           ;led.c: 239:             manual.white++;
 19412  082B  3001               	movlw	1
 19413  082C  0140               	movlb	0	; select bank0
 19414  082D  00A0               	movwf	??_colorInc
 19415  082E  0820               	movf	??_colorInc,w
 19416  082F  0141               	movlb	1	; select bank1
 19417  0830  07A5               	addwf	_manual^(0+128),f
 19418  0831  0008               	return
 19419  0832                     l5413:	
 19420  0832  0822               	movf	colorInc@input,w
 19421  0833  00A0               	movwf	??_colorInc
 19422  0834  01A1               	clrf	??_colorInc+1
 19423                           
 19424                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19425                           ; Switch size 1, requested type "simple"
 19426                           ; Number of cases is 1, Range of values is 0 to 0
 19427                           ; switch strategies available:
 19428                           ; Name         Instructions Cycles
 19429                           ; simple_byte            4     3 (average)
 19430                           ; direct_byte            8     6 (fixed)
 19431                           ; jumptable            260     6 (fixed)
 19432                           ;	Chosen strategy is simple_byte
 19433  0835  0821               	movf	??_colorInc+1,w
 19434  0836  3A00               	xorlw	0	; case 0
 19435  0837  1903               	skipnz
 19436  0838  283A               	goto	l9019
 19437  0839  2848               	goto	l1453
 19438  083A                     l9019:	
 19439                           
 19440                           ; Switch size 1, requested type "simple"
 19441                           ; Number of cases is 4, Range of values is 0 to 3
 19442                           ; switch strategies available:
 19443                           ; Name         Instructions Cycles
 19444                           ; simple_byte           13     7 (average)
 19445                           ; direct_byte           14     6 (fixed)
 19446                           ; jumptable            260     6 (fixed)
 19447                           ;	Chosen strategy is simple_byte
 19448  083A  0820               	movf	??_colorInc,w
 19449  083B  3A00               	xorlw	0	; case 0
 19450  083C  1903               	skipnz
 19451  083D  2806               	goto	l5395
 19452  083E  3A01               	xorlw	1	; case 1
 19453  083F  1903               	skipnz
 19454  0840  2811               	goto	l5399
 19455  0841  3A03               	xorlw	3	; case 2
 19456  0842  1903               	skipnz
 19457  0843  281C               	goto	l5403
 19458  0844  3A01               	xorlw	1	; case 3
 19459  0845  1903               	skipnz
 19460  0846  2827               	goto	l5407
 19461  0847  2848               	goto	l1453
 19462  0848                     l1453:	
 19463  0848  0008               	return
 19464  0849                     __end_of_colorInc:	
 19465                           
 19466                           	psect	text61
 19467  1442                     __ptext61:	
 19468 ;; *************** function _colorDec *****************
 19469 ;; Defined at:
 19470 ;;		line 246 in file "led.c"
 19471 ;; Parameters:    Size  Location     Type
 19472 ;;  input           1    wreg     enum E10883
 19473 ;; Auto vars:     Size  Location     Type
 19474 ;;  input           1    2[BANK0 ] enum E10883
 19475 ;; Return value:  Size  Location     Type
 19476 ;;                  1    wreg      void 
 19477 ;; Registers used:
 19478 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19479 ;; Tracked objects:
 19480 ;;		On entry : 0/0
 19481 ;;		On exit  : 0/0
 19482 ;;		Unchanged: 0/0
 19483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19485 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19486 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19487 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19488 ;;Total ram usage:        3 bytes
 19489 ;; Hardware stack levels used:    1
 19490 ;; Hardware stack levels required when called:    4
 19491 ;; This function calls:
 19492 ;;		Nothing
 19493 ;; This function is called by:
 19494 ;;		_CONTROL_MANUAL
 19495 ;; This function uses a non-reentrant model
 19496 ;;
 19497                           
 19498                           
 19499                           ;psect for function _colorDec
 19500  1442                     _colorDec:	
 19501                           
 19502                           ;incstack = 0
 19503                           ; Regs used in _colorDec: [wreg-fsr0h+status,2+status,0]
 19504                           ;colorDec@input stored from wreg
 19505  1442  0140               	movlb	0	; select bank0
 19506  1443  00A2               	movwf	colorDec@input
 19507                           
 19508                           ;led.c: 248:     switch(input){
 19509  1444  2C61               	goto	l5441
 19510  1445                     l5423:	
 19511                           
 19512                           ;led.c: 251:             if(!(manual.red < 1))
 19513  1445  0141               	movlb	1	; select bank1
 19514  1446  0826               	movf	(_manual^(0+128)+1),w
 19515  1447  1903               	btfsc	3,2
 19516  1448  0008               	return
 19517                           
 19518                           ;led.c: 252:             manual.red--;
 19519  1449  3001               	movlw	1
 19520  144A  02A6               	subwf	(_manual^(0+128)+1),f
 19521  144B  0008               	return
 19522  144C                     l5427:	
 19523                           
 19524                           ;led.c: 256:             if(!(manual.green < 1))
 19525  144C  0141               	movlb	1	; select bank1
 19526  144D  0827               	movf	(_manual^(0+128)+2),w
 19527  144E  1903               	btfsc	3,2
 19528  144F  0008               	return
 19529                           
 19530                           ;led.c: 257:             manual.green--;
 19531  1450  3001               	movlw	1
 19532  1451  02A7               	subwf	(_manual^(0+128)+2),f
 19533  1452  0008               	return
 19534  1453                     l5431:	
 19535                           
 19536                           ;led.c: 261:             if(!(manual.blue < 1))
 19537  1453  0141               	movlb	1	; select bank1
 19538  1454  0828               	movf	(_manual^(0+128)+3),w
 19539  1455  1903               	btfsc	3,2
 19540  1456  0008               	return
 19541                           
 19542                           ;led.c: 262:             manual.blue--;
 19543  1457  3001               	movlw	1
 19544  1458  02A8               	subwf	(_manual^(0+128)+3),f
 19545  1459  0008               	return
 19546  145A                     l5435:	
 19547                           
 19548                           ;led.c: 266:             if(!(manual.white < 1))
 19549  145A  0141               	movlb	1	; select bank1
 19550  145B  0825               	movf	_manual^(0+128),w
 19551  145C  1903               	btfsc	3,2
 19552  145D  0008               	return
 19553                           
 19554                           ;led.c: 267:             manual.white--;
 19555  145E  3001               	movlw	1
 19556  145F  02A5               	subwf	_manual^(0+128),f
 19557  1460  0008               	return
 19558  1461                     l5441:	
 19559  1461  0822               	movf	colorDec@input,w
 19560  1462  00A0               	movwf	??_colorDec
 19561  1463  01A1               	clrf	??_colorDec+1
 19562                           
 19563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19564                           ; Switch size 1, requested type "simple"
 19565                           ; Number of cases is 1, Range of values is 0 to 0
 19566                           ; switch strategies available:
 19567                           ; Name         Instructions Cycles
 19568                           ; simple_byte            4     3 (average)
 19569                           ; direct_byte            8     6 (fixed)
 19570                           ; jumptable            260     6 (fixed)
 19571                           ;	Chosen strategy is simple_byte
 19572  1464  0821               	movf	??_colorDec+1,w
 19573  1465  3A00               	xorlw	0	; case 0
 19574  1466  1903               	skipnz
 19575  1467  2C69               	goto	l9021
 19576  1468  2C77               	goto	l1466
 19577  1469                     l9021:	
 19578                           
 19579                           ; Switch size 1, requested type "simple"
 19580                           ; Number of cases is 4, Range of values is 0 to 3
 19581                           ; switch strategies available:
 19582                           ; Name         Instructions Cycles
 19583                           ; simple_byte           13     7 (average)
 19584                           ; direct_byte           14     6 (fixed)
 19585                           ; jumptable            260     6 (fixed)
 19586                           ;	Chosen strategy is simple_byte
 19587  1469  0820               	movf	??_colorDec,w
 19588  146A  3A00               	xorlw	0	; case 0
 19589  146B  1903               	skipnz
 19590  146C  2C45               	goto	l5423
 19591  146D  3A01               	xorlw	1	; case 1
 19592  146E  1903               	skipnz
 19593  146F  2C4C               	goto	l5427
 19594  1470  3A03               	xorlw	3	; case 2
 19595  1471  1903               	skipnz
 19596  1472  2C53               	goto	l5431
 19597  1473  3A01               	xorlw	1	; case 3
 19598  1474  1903               	skipnz
 19599  1475  2C5A               	goto	l5435
 19600  1476  2C77               	goto	l1466
 19601  1477                     l1466:	
 19602  1477  0008               	return
 19603  1478                     __end_of_colorDec:	
 19604                           
 19605                           	psect	text62
 19606  095D                     __ptext62:	
 19607 ;; *************** function _CONTROL_DMX *****************
 19608 ;; Defined at:
 19609 ;;		line 175 in file "controller.c"
 19610 ;; Parameters:    Size  Location     Type
 19611 ;;		None
 19612 ;; Auto vars:     Size  Location     Type
 19613 ;;		None
 19614 ;; Return value:  Size  Location     Type
 19615 ;;                  1    wreg      _Bool 
 19616 ;; Registers used:
 19617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19618 ;; Tracked objects:
 19619 ;;		On entry : 0/0
 19620 ;;		On exit  : 0/0
 19621 ;;		Unchanged: 0/0
 19622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19625 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19626 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19627 ;;Total ram usage:        2 bytes
 19628 ;; Hardware stack levels used:    1
 19629 ;; Hardware stack levels required when called:   10
 19630 ;; This function calls:
 19631 ;;		_BUTTONS_isHeld
 19632 ;;		_CLOCK_getTime
 19633 ;;		_address_dec
 19634 ;;		_address_inc
 19635 ;; This function is called by:
 19636 ;;		_CONTROLLER_task
 19637 ;; This function uses a non-reentrant model
 19638 ;;
 19639                           
 19640                           
 19641                           ;psect for function _CONTROL_DMX
 19642  095D                     _CONTROL_DMX:	
 19643                           
 19644                           ;controller.c: 177:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 19645                           
 19646                           ;incstack = 0
 19647                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19648  095D  0141               	movlb	1	; select bank1
 19649  095E  083D               	movf	_up^(0+128),w
 19650  095F  319F  276E  3189   	fcall	_BUTTONS_isHeld
 19651  0962  3A00               	xorlw	0
 19652  0963  1903               	skipnz
 19653  0964  29B3               	goto	l8005
 19654  0965  319E  26C5  3189   	fcall	_CLOCK_getTime
 19655  0968  0141               	movlb	1	; select bank1
 19656  0969  082B               	movf	_lastIncTime^(0+128),w
 19657  096A  0140               	movlb	0	; select bank0
 19658  096B  0220               	subwf	?_CLOCK_getTime,w
 19659  096C  00B7               	movwf	??_CONTROL_DMX
 19660  096D  0141               	movlb	1	; select bank1
 19661  096E  082C               	movf	(_lastIncTime+1)^(0+128),w
 19662  096F  0140               	movlb	0	; select bank0
 19663  0970  3B21               	subwfb	?_CLOCK_getTime+1,w
 19664  0971  00B8               	movwf	??_CONTROL_DMX+1
 19665  0972  0838               	movf	??_CONTROL_DMX+1,w
 19666  0973  027D               	subwf	_incInterval+1,w
 19667  0974  1D03               	skipz
 19668  0975  2978               	goto	u7815
 19669  0976  0837               	movf	??_CONTROL_DMX,w
 19670  0977  027C               	subwf	_incInterval,w
 19671  0978                     u7815:	
 19672  0978  1803               	skipnc
 19673  0979  29B3               	goto	l8005
 19674                           
 19675                           ;controller.c: 178:         address_inc();
 19676  097A  3190  208B  3189   	fcall	_address_inc
 19677  097D  2996               	goto	L21
 19678  097E                     l8007:	
 19679                           ;controller.c: 180:         if(incInterval > 20){
 19680                           
 19681                           ;controller.c: 179:         lastIncTime = CLOCK_getTime();
 19682                           
 19683  097E  319E  26C5  3189   	fcall	_CLOCK_getTime
 19684  0981  0141               	movlb	1	; select bank1
 19685  0982  082B               	movf	_lastIncTime^(0+128),w
 19686  0983  0140               	movlb	0	; select bank0
 19687  0984  0220               	subwf	?_CLOCK_getTime,w
 19688  0985  00B7               	movwf	??_CONTROL_DMX
 19689  0986  0141               	movlb	1	; select bank1
 19690  0987  082C               	movf	(_lastIncTime+1)^(0+128),w
 19691  0988  0140               	movlb	0	; select bank0
 19692  0989  3B21               	subwfb	?_CLOCK_getTime+1,w
 19693  098A  00B8               	movwf	??_CONTROL_DMX+1
 19694  098B  0838               	movf	??_CONTROL_DMX+1,w
 19695  098C  027D               	subwf	_incInterval+1,w
 19696  098D  1D03               	skipz
 19697  098E  2991               	goto	u7845
 19698  098F  0837               	movf	??_CONTROL_DMX,w
 19699  0990  027C               	subwf	_incInterval,w
 19700  0991                     u7845:	
 19701  0991  1803               	skipnc
 19702  0992  29BB               	goto	l8021
 19703                           
 19704                           ;controller.c: 185:         address_dec();
 19705  0993  3190  205B  3189   	fcall	_address_dec
 19706  0996                     L21:	
 19707                           
 19708                           ;controller.c: 186:         lastIncTime = CLOCK_getTime();
 19709  0996  319E  26C5  3189   	fcall	_CLOCK_getTime
 19710  0999  0140               	movlb	0	; select bank0
 19711  099A  0821               	movf	?_CLOCK_getTime+1,w
 19712  099B  0141               	movlb	1	; select bank1
 19713  099C  00AC               	movwf	(_lastIncTime+1)^(0+128)
 19714  099D  0140               	movlb	0	; select bank0
 19715  099E  0820               	movf	?_CLOCK_getTime,w
 19716  099F  0141               	movlb	1	; select bank1
 19717  09A0  00AB               	movwf	_lastIncTime^(0+128)
 19718                           
 19719                           ;controller.c: 187:         if(incInterval > 20){
 19720  09A1  087D               	movf	_incInterval+1,w
 19721  09A2  3A80               	xorlw	128
 19722  09A3  0140               	movlb	0	; select bank0
 19723  09A4  00B7               	movwf	??_CONTROL_DMX
 19724  09A5  3080               	movlw	128
 19725  09A6  0237               	subwf	??_CONTROL_DMX,w
 19726  09A7  1D03               	skipz
 19727  09A8  29AB               	goto	u7855
 19728  09A9  3015               	movlw	21
 19729  09AA  027C               	subwf	_incInterval,w
 19730  09AB                     u7855:	
 19731  09AB  1C03               	skipc
 19732  09AC  29B1               	goto	l1087
 19733                           
 19734                           ;controller.c: 181:             incInterval-=1;
 19735  09AD  30FF               	movlw	255
 19736  09AE  07FC               	addwf	_incInterval,f
 19737  09AF  30FF               	movlw	255
 19738  09B0  3DFD               	addwfc	_incInterval+1,f
 19739  09B1                     l1087:	
 19740                           ;controller.c: 182:         }
 19741                           
 19742                           
 19743                           ;controller.c: 183:         return 1;
 19744  09B1  3001               	movlw	1
 19745  09B2  0008               	return
 19746  09B3                     l8005:	
 19747  09B3  0141               	movlb	1	; select bank1
 19748  09B4  083C               	movf	_down^(0+128),w
 19749  09B5  319F  276E  3189   	fcall	_BUTTONS_isHeld
 19750  09B8  3A00               	xorlw	0
 19751  09B9  1D03               	btfss	3,2
 19752  09BA  297E               	goto	l8007
 19753  09BB                     l8021:	
 19754  09BB  0141               	movlb	1	; select bank1
 19755  09BC  083B               	movf	_enter^(0+128),w
 19756  09BD  319F  276E  3189   	fcall	_BUTTONS_isHeld
 19757  09C0  3A00               	xorlw	0
 19758  09C1  1903               	skipnz
 19759  09C2  29CA               	goto	l8029
 19760                           
 19761                           ;controller.c: 192:         address = 1;
 19762  09C3  3001               	movlw	1
 19763  09C4  0141               	movlb	1	; select bank1
 19764  09C5  00EC               	movwf	_address^(0+128)
 19765  09C6  3000               	movlw	0
 19766  09C7  00ED               	movwf	(_address^(0+128)+1)
 19767                           
 19768                           ;controller.c: 193:         return 1;
 19769  09C8  3001               	movlw	1
 19770  09C9  0008               	return
 19771  09CA                     l8029:	
 19772  09CA  0141               	movlb	1	; select bank1
 19773  09CB  0836               	movf	_upState^(0+128),w
 19774  09CC  1903               	btfsc	3,2
 19775  09CD  29D2               	goto	l8039
 19776                           
 19777                           ;controller.c: 195:         address_inc();
 19778  09CE  3190  208B  3189   	fcall	_address_inc
 19779  09D1  29B1               	goto	l1087
 19780  09D2                     l8039:	
 19781  09D2  0835               	movf	_downState^(0+128),w
 19782  09D3  1903               	btfsc	3,2
 19783  09D4  29D9               	goto	l8049
 19784                           
 19785                           ;controller.c: 199:         address_dec();
 19786  09D5  3190  205B  3189   	fcall	_address_dec
 19787  09D8  29B1               	goto	l1087
 19788  09D9                     l8049:	
 19789  09D9  0833               	movf	_enterState^(0+128),w
 19790  09DA  1D03               	btfss	3,2
 19791  09DB  29B1               	goto	l1087
 19792  09DC  0836               	movf	_upState^(0+128),w
 19793  09DD  1D03               	btfss	3,2
 19794  09DE  0835               	movf	_downState^(0+128),w
 19795  09DF  1D03               	btfss	3,2
 19796  09E0  29F4               	goto	l8067
 19797  09E1  083C               	movf	_down^(0+128),w
 19798  09E2  319F  276E  3189   	fcall	_BUTTONS_isHeld
 19799  09E5  3A00               	xorlw	0
 19800  09E6  1D03               	skipz
 19801  09E7  29F4               	goto	l8067
 19802  09E8  0141               	movlb	1	; select bank1
 19803  09E9  083D               	movf	_up^(0+128),w
 19804  09EA  319F  276E  3189   	fcall	_BUTTONS_isHeld
 19805  09ED  3A00               	xorlw	0
 19806  09EE  1D03               	skipz
 19807  09EF  29F4               	goto	l8067
 19808                           
 19809                           ;controller.c: 204:         incInterval = 100;
 19810  09F0  3064               	movlw	100
 19811  09F1  00FC               	movwf	_incInterval
 19812  09F2  3000               	movlw	0
 19813  09F3  00FD               	movwf	_incInterval+1
 19814  09F4                     l8067:	
 19815                           ;controller.c: 205:     } else {
 19816                           
 19817                           
 19818                           ;controller.c: 206:         return 0;
 19819  09F4  3000               	movlw	0
 19820  09F5  0008               	return
 19821  09F6                     __end_of_CONTROL_DMX:	
 19822                           
 19823                           	psect	text63
 19824  108B                     __ptext63:	
 19825 ;; *************** function _address_inc *****************
 19826 ;; Defined at:
 19827 ;;		line 29 in file "dmx.c"
 19828 ;; Parameters:    Size  Location     Type
 19829 ;;		None
 19830 ;; Auto vars:     Size  Location     Type
 19831 ;;		None
 19832 ;; Return value:  Size  Location     Type
 19833 ;;                  1    wreg      void 
 19834 ;; Registers used:
 19835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19836 ;; Tracked objects:
 19837 ;;		On entry : 0/0
 19838 ;;		On exit  : 0/0
 19839 ;;		Unchanged: 0/0
 19840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19845 ;;Total ram usage:        0 bytes
 19846 ;; Hardware stack levels used:    1
 19847 ;; Hardware stack levels required when called:    9
 19848 ;; This function calls:
 19849 ;;		_TM1650_fastPrintNum
 19850 ;; This function is called by:
 19851 ;;		_CONTROL_DMX
 19852 ;; This function uses a non-reentrant model
 19853 ;;
 19854                           
 19855                           
 19856                           ;psect for function _address_inc
 19857  108B                     _address_inc:	
 19858                           
 19859                           ;dmx.c: 31:     if(address == 512)
 19860                           
 19861                           ;incstack = 0
 19862                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19863  108B  3002               	movlw	2
 19864  108C  0141               	movlb	1	; select bank1
 19865  108D  066D               	xorwf	(_address+1)^(0+128),w
 19866  108E  046C               	iorwf	_address^(0+128),w
 19867  108F  1D03               	btfss	3,2
 19868  1090  2896               	goto	l7715
 19869                           
 19870                           ;dmx.c: 32:         address = 1;
 19871  1091  3001               	movlw	1
 19872  1092  00EC               	movwf	_address^(0+128)
 19873  1093  3000               	movlw	0
 19874  1094  00ED               	movwf	(_address^(0+128)+1)
 19875  1095  289A               	goto	l7717
 19876  1096                     l7715:	
 19877                           
 19878                           ;dmx.c: 34:         address++;
 19879  1096  3001               	movlw	1
 19880  1097  07EC               	addwf	_address^(0+128),f
 19881  1098  3000               	movlw	0
 19882  1099  3DED               	addwfc	(_address+1)^(0+128),f
 19883  109A                     l7717:	
 19884                           
 19885                           ;dmx.c: 37:     TM1650_fastPrintNum(address);
 19886  109A  086D               	movf	(_address+1)^(0+128),w
 19887  109B  0140               	movlb	0	; select bank0
 19888  109C  00B5               	movwf	TM1650_fastPrintNum@num+1
 19889  109D  0141               	movlb	1	; select bank1
 19890  109E  086C               	movf	_address^(0+128),w
 19891  109F  0140               	movlb	0	; select bank0
 19892  10A0  00B4               	movwf	TM1650_fastPrintNum@num
 19893  10A1  318B  234D         	fcall	_TM1650_fastPrintNum
 19894  10A3  0008               	return
 19895  10A4                     __end_of_address_inc:	
 19896                           
 19897                           	psect	text64
 19898  105B                     __ptext64:	
 19899 ;; *************** function _address_dec *****************
 19900 ;; Defined at:
 19901 ;;		line 43 in file "dmx.c"
 19902 ;; Parameters:    Size  Location     Type
 19903 ;;		None
 19904 ;; Auto vars:     Size  Location     Type
 19905 ;;		None
 19906 ;; Return value:  Size  Location     Type
 19907 ;;                  1    wreg      void 
 19908 ;; Registers used:
 19909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19910 ;; Tracked objects:
 19911 ;;		On entry : 0/0
 19912 ;;		On exit  : 0/0
 19913 ;;		Unchanged: 0/0
 19914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19919 ;;Total ram usage:        0 bytes
 19920 ;; Hardware stack levels used:    1
 19921 ;; Hardware stack levels required when called:    9
 19922 ;; This function calls:
 19923 ;;		_TM1650_fastPrintNum
 19924 ;; This function is called by:
 19925 ;;		_CONTROL_DMX
 19926 ;; This function uses a non-reentrant model
 19927 ;;
 19928                           
 19929                           
 19930                           ;psect for function _address_dec
 19931  105B                     _address_dec:	
 19932                           
 19933                           ;dmx.c: 45:     if(address == 1)
 19934                           
 19935                           ;incstack = 0
 19936                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19937  105B  0141               	movlb	1	; select bank1
 19938  105C  036C               	decf	_address^(0+128),w
 19939  105D  046D               	iorwf	(_address+1)^(0+128),w
 19940  105E  1D03               	btfss	3,2
 19941  105F  2865               	goto	l7723
 19942                           
 19943                           ;dmx.c: 46:         address = 512;
 19944  1060  3000               	movlw	0
 19945  1061  00EC               	movwf	_address^(0+128)
 19946  1062  3002               	movlw	2
 19947  1063  00ED               	movwf	(_address^(0+128)+1)
 19948  1064  2869               	goto	l7725
 19949  1065                     l7723:	
 19950                           
 19951                           ;dmx.c: 48:         address--;
 19952  1065  3001               	movlw	1
 19953  1066  02EC               	subwf	_address^(0+128),f
 19954  1067  3000               	movlw	0
 19955  1068  3BED               	subwfb	(_address+1)^(0+128),f
 19956  1069                     l7725:	
 19957                           
 19958                           ;dmx.c: 51:     TM1650_fastPrintNum(address);
 19959  1069  086D               	movf	(_address+1)^(0+128),w
 19960  106A  0140               	movlb	0	; select bank0
 19961  106B  00B5               	movwf	TM1650_fastPrintNum@num+1
 19962  106C  0141               	movlb	1	; select bank1
 19963  106D  086C               	movf	_address^(0+128),w
 19964  106E  0140               	movlb	0	; select bank0
 19965  106F  00B4               	movwf	TM1650_fastPrintNum@num
 19966  1070  318B  234D         	fcall	_TM1650_fastPrintNum
 19967  1072  0008               	return
 19968  1073                     __end_of_address_dec:	
 19969                           
 19970                           	psect	text65
 19971  0B4D                     __ptext65:	
 19972 ;; *************** function _TM1650_fastPrintNum *****************
 19973 ;; Defined at:
 19974 ;;		line 101 in file "tm1650.c"
 19975 ;; Parameters:    Size  Location     Type
 19976 ;;  num             2   20[BANK0 ] unsigned short 
 19977 ;; Auto vars:     Size  Location     Type
 19978 ;;		None
 19979 ;; Return value:  Size  Location     Type
 19980 ;;                  1    wreg      void 
 19981 ;; Registers used:
 19982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19983 ;; Tracked objects:
 19984 ;;		On entry : 0/0
 19985 ;;		On exit  : 0/0
 19986 ;;		Unchanged: 0/0
 19987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19991 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19992 ;;Total ram usage:        3 bytes
 19993 ;; Hardware stack levels used:    1
 19994 ;; Hardware stack levels required when called:    8
 19995 ;; This function calls:
 19996 ;;		___lwdiv
 19997 ;;		___lwmod
 19998 ;;		_writeData
 19999 ;; This function is called by:
 20000 ;;		_CONTROLLER_task
 20001 ;;		_DMX_init
 20002 ;;		_address_inc
 20003 ;;		_address_dec
 20004 ;; This function uses a non-reentrant model
 20005 ;;
 20006                           
 20007                           
 20008                           ;psect for function _TM1650_fastPrintNum
 20009  0B4D                     _TM1650_fastPrintNum:	
 20010                           
 20011                           ;tm1650.c: 103:     if(num > 9999){
 20012                           
 20013                           ;incstack = 0
 20014                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20015  0B4D  3027               	movlw	39
 20016  0B4E  0140               	movlb	0	; select bank0
 20017  0B4F  0235               	subwf	TM1650_fastPrintNum@num+1,w
 20018  0B50  3010               	movlw	16
 20019  0B51  1903               	skipnz
 20020  0B52  0234               	subwf	TM1650_fastPrintNum@num,w
 20021  0B53  1C03               	skipc
 20022  0B54  2B78               	goto	l7661
 20023                           
 20024                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 20025  0B55  3079               	movlw	121
 20026  0B56  00B6               	movwf	??_TM1650_fastPrintNum
 20027  0B57  0836               	movf	??_TM1650_fastPrintNum,w
 20028  0B58  00AE               	movwf	writeData@data
 20029  0B59  3034               	movlw	52
 20030  0B5A  3190  20DA  318B   	fcall	_writeData
 20031                           
 20032                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 20033  0B5D  3079               	movlw	121
 20034  0B5E  0140               	movlb	0	; select bank0
 20035  0B5F  00B6               	movwf	??_TM1650_fastPrintNum
 20036  0B60  0836               	movf	??_TM1650_fastPrintNum,w
 20037  0B61  00AE               	movwf	writeData@data
 20038  0B62  3035               	movlw	53
 20039  0B63  3190  20DA  318B   	fcall	_writeData
 20040                           
 20041                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 20042  0B66  3079               	movlw	121
 20043  0B67  0140               	movlb	0	; select bank0
 20044  0B68  00B6               	movwf	??_TM1650_fastPrintNum
 20045  0B69  0836               	movf	??_TM1650_fastPrintNum,w
 20046  0B6A  00AE               	movwf	writeData@data
 20047  0B6B  3036               	movlw	54
 20048  0B6C  3190  20DA  318B   	fcall	_writeData
 20049                           
 20050                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 20051  0B6F  3079               	movlw	121
 20052  0B70  0140               	movlb	0	; select bank0
 20053  0B71  00B6               	movwf	??_TM1650_fastPrintNum
 20054  0B72  0836               	movf	??_TM1650_fastPrintNum,w
 20055  0B73  00AE               	movwf	writeData@data
 20056  0B74  3037               	movlw	55
 20057  0B75  3190  20DA         	fcall	_writeData
 20058  0B77  0008               	return
 20059  0B78                     l7661:	
 20060                           
 20061                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 20062  0B78  300A               	movlw	10
 20063  0B79  00A8               	movwf	___lwmod@divisor
 20064  0B7A  3000               	movlw	0
 20065  0B7B  00A9               	movwf	___lwmod@divisor+1
 20066  0B7C  0835               	movf	TM1650_fastPrintNum@num+1,w
 20067  0B7D  00AB               	movwf	___lwmod@dividend+1
 20068  0B7E  0834               	movf	TM1650_fastPrintNum@num,w
 20069  0B7F  00AA               	movwf	___lwmod@dividend
 20070  0B80  3192  22B6  318B   	fcall	___lwmod
 20071  0B83  0140               	movlb	0	; select bank0
 20072  0B84  0829               	movf	?___lwmod+1,w
 20073  0B85  0085               	movwf	5
 20074  0B86  0828               	movf	?___lwmod,w
 20075  0B87  0084               	movwf	4
 20076  0B88  3010               	movlw	low ((_charTable+16)| (0+32768))
 20077  0B89  0784               	addwf	4,f
 20078  0B8A  3098               	movlw	high ((_charTable+16)| (0+32768))
 20079  0B8B  3D85               	addwfc	5,f
 20080  0B8C  0800               	movf	0,w	;code access
 20081  0B8D  00B6               	movwf	??_TM1650_fastPrintNum
 20082  0B8E  0836               	movf	??_TM1650_fastPrintNum,w
 20083  0B8F  00AE               	movwf	writeData@data
 20084  0B90  3037               	movlw	55
 20085  0B91  3190  20DA  318B   	fcall	_writeData
 20086                           
 20087                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 20088  0B94  300A               	movlw	10
 20089  0B95  0140               	movlb	0	; select bank0
 20090  0B96  00A8               	movwf	___lwmod@divisor
 20091  0B97  3000               	movlw	0
 20092  0B98  00A9               	movwf	___lwmod@divisor+1
 20093  0B99  300A               	movlw	10
 20094  0B9A  00A0               	movwf	___lwdiv@divisor
 20095  0B9B  3000               	movlw	0
 20096  0B9C  00A1               	movwf	___lwdiv@divisor+1
 20097  0B9D  0835               	movf	TM1650_fastPrintNum@num+1,w
 20098  0B9E  00A3               	movwf	___lwdiv@dividend+1
 20099  0B9F  0834               	movf	TM1650_fastPrintNum@num,w
 20100  0BA0  00A2               	movwf	___lwdiv@dividend
 20101  0BA1  3194  240D  318B   	fcall	___lwdiv
 20102  0BA4  0140               	movlb	0	; select bank0
 20103  0BA5  0821               	movf	?___lwdiv+1,w
 20104  0BA6  00AB               	movwf	___lwmod@dividend+1
 20105  0BA7  0820               	movf	?___lwdiv,w
 20106  0BA8  00AA               	movwf	___lwmod@dividend
 20107  0BA9  3192  22B6  318B   	fcall	___lwmod
 20108  0BAC  0140               	movlb	0	; select bank0
 20109  0BAD  0829               	movf	?___lwmod+1,w
 20110  0BAE  0085               	movwf	5
 20111  0BAF  0828               	movf	?___lwmod,w
 20112  0BB0  0084               	movwf	4
 20113  0BB1  3010               	movlw	low ((_charTable+16)| (0+32768))
 20114  0BB2  0784               	addwf	4,f
 20115  0BB3  3098               	movlw	high ((_charTable+16)| (0+32768))
 20116  0BB4  3D85               	addwfc	5,f
 20117  0BB5  0800               	movf	0,w	;code access
 20118  0BB6  00B6               	movwf	??_TM1650_fastPrintNum
 20119  0BB7  0836               	movf	??_TM1650_fastPrintNum,w
 20120  0BB8  00AE               	movwf	writeData@data
 20121  0BB9  3036               	movlw	54
 20122  0BBA  3190  20DA  318B   	fcall	_writeData
 20123                           
 20124                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 20125  0BBD  300A               	movlw	10
 20126  0BBE  0140               	movlb	0	; select bank0
 20127  0BBF  00A8               	movwf	___lwmod@divisor
 20128  0BC0  3000               	movlw	0
 20129  0BC1  00A9               	movwf	___lwmod@divisor+1
 20130  0BC2  3064               	movlw	100
 20131  0BC3  00A0               	movwf	___lwdiv@divisor
 20132  0BC4  3000               	movlw	0
 20133  0BC5  00A1               	movwf	___lwdiv@divisor+1
 20134  0BC6  0835               	movf	TM1650_fastPrintNum@num+1,w
 20135  0BC7  00A3               	movwf	___lwdiv@dividend+1
 20136  0BC8  0834               	movf	TM1650_fastPrintNum@num,w
 20137  0BC9  00A2               	movwf	___lwdiv@dividend
 20138  0BCA  3194  240D  318B   	fcall	___lwdiv
 20139  0BCD  0140               	movlb	0	; select bank0
 20140  0BCE  0821               	movf	?___lwdiv+1,w
 20141  0BCF  00AB               	movwf	___lwmod@dividend+1
 20142  0BD0  0820               	movf	?___lwdiv,w
 20143  0BD1  00AA               	movwf	___lwmod@dividend
 20144  0BD2  3192  22B6  318B   	fcall	___lwmod
 20145  0BD5  0140               	movlb	0	; select bank0
 20146  0BD6  0829               	movf	?___lwmod+1,w
 20147  0BD7  0085               	movwf	5
 20148  0BD8  0828               	movf	?___lwmod,w
 20149  0BD9  0084               	movwf	4
 20150  0BDA  3010               	movlw	low ((_charTable+16)| (0+32768))
 20151  0BDB  0784               	addwf	4,f
 20152  0BDC  3098               	movlw	high ((_charTable+16)| (0+32768))
 20153  0BDD  3D85               	addwfc	5,f
 20154  0BDE  0800               	movf	0,w	;code access
 20155  0BDF  00B6               	movwf	??_TM1650_fastPrintNum
 20156  0BE0  0836               	movf	??_TM1650_fastPrintNum,w
 20157  0BE1  00AE               	movwf	writeData@data
 20158  0BE2  3035               	movlw	53
 20159  0BE3  3190  20DA  318B   	fcall	_writeData
 20160                           
 20161                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 20162  0BE6  300A               	movlw	10
 20163  0BE7  0140               	movlb	0	; select bank0
 20164  0BE8  00A8               	movwf	___lwmod@divisor
 20165  0BE9  3000               	movlw	0
 20166  0BEA  00A9               	movwf	___lwmod@divisor+1
 20167  0BEB  30E8               	movlw	232
 20168  0BEC  00A0               	movwf	___lwdiv@divisor
 20169  0BED  3003               	movlw	3
 20170  0BEE  00A1               	movwf	___lwdiv@divisor+1
 20171  0BEF  0835               	movf	TM1650_fastPrintNum@num+1,w
 20172  0BF0  00A3               	movwf	___lwdiv@dividend+1
 20173  0BF1  0834               	movf	TM1650_fastPrintNum@num,w
 20174  0BF2  00A2               	movwf	___lwdiv@dividend
 20175  0BF3  3194  240D  318B   	fcall	___lwdiv
 20176  0BF6  0140               	movlb	0	; select bank0
 20177  0BF7  0821               	movf	?___lwdiv+1,w
 20178  0BF8  00AB               	movwf	___lwmod@dividend+1
 20179  0BF9  0820               	movf	?___lwdiv,w
 20180  0BFA  00AA               	movwf	___lwmod@dividend
 20181  0BFB  3192  22B6  318B   	fcall	___lwmod
 20182  0BFE  0140               	movlb	0	; select bank0
 20183  0BFF  0829               	movf	?___lwmod+1,w
 20184  0C00  0085               	movwf	5
 20185  0C01  0828               	movf	?___lwmod,w
 20186  0C02  0084               	movwf	4
 20187  0C03  3010               	movlw	low ((_charTable+16)| (0+32768))
 20188  0C04  0784               	addwf	4,f
 20189  0C05  3098               	movlw	high ((_charTable+16)| (0+32768))
 20190  0C06  3D85               	addwfc	5,f
 20191  0C07  0800               	movf	0,w	;code access
 20192  0C08  00B6               	movwf	??_TM1650_fastPrintNum
 20193  0C09  0836               	movf	??_TM1650_fastPrintNum,w
 20194  0C0A  00AE               	movwf	writeData@data
 20195  0C0B  3034               	movlw	52
 20196  0C0C  3190  20DA         	fcall	_writeData
 20197  0C0E  0008               	return
 20198  0C0F                     __end_of_TM1650_fastPrintNum:	
 20199                           
 20200                           	psect	text66
 20201  10DA                     __ptext66:	
 20202 ;; *************** function _writeData *****************
 20203 ;; Defined at:
 20204 ;;		line 31 in file "tm1650.c"
 20205 ;; Parameters:    Size  Location     Type
 20206 ;;  address         1    wreg     unsigned char 
 20207 ;;  data            1   14[BANK0 ] unsigned char 
 20208 ;; Auto vars:     Size  Location     Type
 20209 ;;  address         1   18[BANK0 ] unsigned char 
 20210 ;;  status          1   19[BANK0 ] enum E11370
 20211 ;; Return value:  Size  Location     Type
 20212 ;;                  1    wreg      void 
 20213 ;; Registers used:
 20214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20215 ;; Tracked objects:
 20216 ;;		On entry : 0/0
 20217 ;;		On exit  : 0/0
 20218 ;;		Unchanged: 0/0
 20219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20220 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20221 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20222 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20223 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20224 ;;Total ram usage:        6 bytes
 20225 ;; Hardware stack levels used:    1
 20226 ;; Hardware stack levels required when called:    7
 20227 ;; This function calls:
 20228 ;;		_I2C1_MasterWrite
 20229 ;; This function is called by:
 20230 ;;		_TM1650_enable
 20231 ;;		_TM1650_setDigit
 20232 ;;		_TM1650_fastPrintNum
 20233 ;;		_TM1650_brightness
 20234 ;; This function uses a non-reentrant model
 20235 ;;
 20236                           
 20237                           
 20238                           ;psect for function _writeData
 20239  10DA                     _writeData:	
 20240                           
 20241                           ;incstack = 0
 20242                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20243                           ;writeData@address stored from wreg
 20244  10DA  0140               	movlb	0	; select bank0
 20245  10DB  00B2               	movwf	writeData@address
 20246                           
 20247                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 20248  10DC  3002               	movlw	2
 20249  10DD  00AF               	movwf	??_writeData
 20250  10DE  082F               	movf	??_writeData,w
 20251  10DF  00B3               	movwf	writeData@status
 20252                           
 20253                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 20254  10E0  01A7               	clrf	I2C1_MasterWrite@length
 20255  10E1  0AA7               	incf	I2C1_MasterWrite@length,f
 20256  10E2  0832               	movf	writeData@address,w
 20257  10E3  00AF               	movwf	??_writeData
 20258  10E4  01B0               	clrf	??_writeData+1
 20259  10E5  082F               	movf	??_writeData,w
 20260  10E6  00A8               	movwf	I2C1_MasterWrite@address
 20261  10E7  0830               	movf	??_writeData+1,w
 20262  10E8  00A9               	movwf	I2C1_MasterWrite@address+1
 20263  10E9  3033               	movlw	(low (writeData@status| 0))& (0+255)
 20264  10EA  00B1               	movwf	??_writeData+2
 20265  10EB  0831               	movf	??_writeData+2,w
 20266  10EC  00AA               	movwf	I2C1_MasterWrite@pflag
 20267  10ED  302E               	movlw	(low (writeData@data| 0))& (0+255)
 20268  10EE  3192  228C  3190   	fcall	_I2C1_MasterWrite
 20269  10F1                     l7099:	
 20270                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 20271                           
 20272  10F1  3002               	movlw	2
 20273  10F2  0140               	movlb	0	; select bank0
 20274  10F3  0633               	xorwf	writeData@status,w
 20275  10F4  1D03               	btfss	3,2
 20276  10F5  0008               	return
 20277  10F6  28F1               	goto	l7099
 20278  10F7                     __end_of_writeData:	
 20279                           
 20280                           	psect	text67
 20281  128C                     __ptext67:	
 20282 ;; *************** function _I2C1_MasterWrite *****************
 20283 ;; Defined at:
 20284 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 20285 ;; Parameters:    Size  Location     Type
 20286 ;;  pdata           1    wreg     PTR unsigned char 
 20287 ;;		 -> writeData@data(1), 
 20288 ;;  length          1    7[BANK0 ] unsigned char 
 20289 ;;  address         2    8[BANK0 ] unsigned short 
 20290 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 20291 ;;		 -> writeData@status(1), 
 20292 ;; Auto vars:     Size  Location     Type
 20293 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 20294 ;;		 -> writeData@data(1), 
 20295 ;; Return value:  Size  Location     Type
 20296 ;;                  1    wreg      void 
 20297 ;; Registers used:
 20298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20299 ;; Tracked objects:
 20300 ;;		On entry : 0/0
 20301 ;;		On exit  : 0/0
 20302 ;;		Unchanged: 0/0
 20303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20304 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20306 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20307 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20308 ;;Total ram usage:        7 bytes
 20309 ;; Hardware stack levels used:    1
 20310 ;; Hardware stack levels required when called:    6
 20311 ;; This function calls:
 20312 ;;		_I2C1_MasterTRBInsert
 20313 ;;		_I2C1_MasterWriteTRBBuild
 20314 ;; This function is called by:
 20315 ;;		_writeData
 20316 ;; This function uses a non-reentrant model
 20317 ;;
 20318                           
 20319                           
 20320                           ;psect for function _I2C1_MasterWrite
 20321  128C                     _I2C1_MasterWrite:	
 20322                           
 20323                           ;incstack = 0
 20324                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20325                           ;I2C1_MasterWrite@pdata stored from wreg
 20326  128C  0140               	movlb	0	; select bank0
 20327  128D  00AD               	movwf	I2C1_MasterWrite@pdata
 20328                           
 20329                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 20330  128E  0141               	movlb	1	; select bank1
 20331  128F  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 20332  1290  2AAF               	goto	l7093
 20333                           
 20334                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 20335  1291  0140               	movlb	0	; select bank0
 20336  1292  082D               	movf	I2C1_MasterWrite@pdata,w
 20337  1293  00AB               	movwf	??_I2C1_MasterWrite
 20338  1294  082B               	movf	??_I2C1_MasterWrite,w
 20339  1295  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 20340  1296  0827               	movf	I2C1_MasterWrite@length,w
 20341  1297  00AC               	movwf	??_I2C1_MasterWrite+1
 20342  1298  082C               	movf	??_I2C1_MasterWrite+1,w
 20343  1299  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 20344  129A  0829               	movf	I2C1_MasterWrite@address+1,w
 20345  129B  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 20346  129C  0828               	movf	I2C1_MasterWrite@address,w
 20347  129D  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 20348  129E  3051               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 20349  129F  3191  21AF  3192   	fcall	_I2C1_MasterWriteTRBBuild
 20350                           
 20351                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 20352  12A2  3051               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 20353  12A3  0140               	movlb	0	; select bank0
 20354  12A4  00AB               	movwf	??_I2C1_MasterWrite
 20355  12A5  082B               	movf	??_I2C1_MasterWrite,w
 20356  12A6  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 20357  12A7  082A               	movf	I2C1_MasterWrite@pflag,w
 20358  12A8  00AC               	movwf	??_I2C1_MasterWrite+1
 20359  12A9  082C               	movf	??_I2C1_MasterWrite+1,w
 20360  12AA  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 20361  12AB  3001               	movlw	1
 20362  12AC  3195  258C         	fcall	_I2C1_MasterTRBInsert
 20363                           
 20364                           ;mcc_generated_files/i2c1.c: 613:     }
 20365  12AE  0008               	return
 20366  12AF                     l7093:	
 20367                           
 20368                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20369  12AF  0140               	movlb	0	; select bank0
 20370  12B0  082A               	movf	I2C1_MasterWrite@pflag,w
 20371  12B1  0086               	movwf	6
 20372  12B2  0187               	clrf	7
 20373  12B3  0181               	clrf	1
 20374  12B4  0A81               	incf	1,f
 20375  12B5  0008               	return
 20376  12B6                     __end_of_I2C1_MasterWrite:	
 20377                           
 20378                           	psect	text68
 20379  11AF                     __ptext68:	
 20380 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 20381 ;; Defined at:
 20382 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 20383 ;; Parameters:    Size  Location     Type
 20384 ;;  ptrb            1    wreg     PTR struct .
 20385 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 20386 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 20387 ;;		 -> writeData@data(1), 
 20388 ;;  length          1    1[BANK0 ] unsigned char 
 20389 ;;  address         2    2[BANK0 ] unsigned short 
 20390 ;; Auto vars:     Size  Location     Type
 20391 ;;  ptrb            1    6[BANK0 ] PTR struct .
 20392 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 20393 ;; Return value:  Size  Location     Type
 20394 ;;                  1    wreg      void 
 20395 ;; Registers used:
 20396 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20397 ;; Tracked objects:
 20398 ;;		On entry : 0/0
 20399 ;;		On exit  : 0/0
 20400 ;;		Unchanged: 0/0
 20401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20402 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20404 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20405 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20406 ;;Total ram usage:        7 bytes
 20407 ;; Hardware stack levels used:    1
 20408 ;; Hardware stack levels required when called:    4
 20409 ;; This function calls:
 20410 ;;		Nothing
 20411 ;; This function is called by:
 20412 ;;		_I2C1_MasterWrite
 20413 ;; This function uses a non-reentrant model
 20414 ;;
 20415                           
 20416                           
 20417                           ;psect for function _I2C1_MasterWriteTRBBuild
 20418  11AF                     _I2C1_MasterWriteTRBBuild:	
 20419                           
 20420                           ;incstack = 0
 20421                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 20422                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 20423  11AF  0140               	movlb	0	; select bank0
 20424  11B0  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 20425                           
 20426                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 20427  11B1  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 20428  11B2  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 20429  11B3  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 20430  11B4  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20431  11B5  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 20432  11B6  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 20433  11B7  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20434  11B8  0086               	movwf	6
 20435  11B9  3001               	movlw	1	; select bank2/3
 20436  11BA  0087               	movwf	7
 20437  11BB  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20438  11BC  3FC0               	movwi [0]fsr1
 20439  11BD  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 20440  11BE  3FC1               	movwi [1]fsr1
 20441                           
 20442                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 20443  11BF  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 20444  11C0  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20445  11C1  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20446  11C2  3E02               	addlw	2
 20447  11C3  0086               	movwf	6
 20448  11C4  3001               	movlw	1	; select bank2/3
 20449  11C5  0087               	movwf	7
 20450  11C6  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20451  11C7  0081               	movwf	1
 20452                           
 20453                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 20454  11C8  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 20455  11C9  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20456  11CA  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20457  11CB  3E03               	addlw	3
 20458  11CC  0086               	movwf	6
 20459  11CD  3001               	movlw	1	; select bank2/3
 20460  11CE  0087               	movwf	7
 20461  11CF  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20462  11D0  0081               	movwf	1
 20463  11D1  0008               	return
 20464  11D2                     __end_of_I2C1_MasterWriteTRBBuild:	
 20465                           
 20466                           	psect	text69
 20467  158C                     __ptext69:	
 20468 ;; *************** function _I2C1_MasterTRBInsert *****************
 20469 ;; Defined at:
 20470 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 20471 ;; Parameters:    Size  Location     Type
 20472 ;;  count           1    wreg     unsigned char 
 20473 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 20474 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 20475 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 20476 ;;		 -> writeData@status(1), 
 20477 ;; Auto vars:     Size  Location     Type
 20478 ;;  count           1    3[BANK0 ] unsigned char 
 20479 ;; Return value:  Size  Location     Type
 20480 ;;                  1    wreg      void 
 20481 ;; Registers used:
 20482 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20483 ;; Tracked objects:
 20484 ;;		On entry : 0/0
 20485 ;;		On exit  : 0/0
 20486 ;;		Unchanged: 0/0
 20487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20488 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20491 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20492 ;;Total ram usage:        4 bytes
 20493 ;; Hardware stack levels used:    1
 20494 ;; Hardware stack levels required when called:    5
 20495 ;; This function calls:
 20496 ;;		_I2C1_WaitForLastPacketToComplete
 20497 ;; This function is called by:
 20498 ;;		_I2C1_MasterWrite
 20499 ;;		_I2C1_MasterRead
 20500 ;; This function uses a non-reentrant model
 20501 ;;
 20502                           
 20503                           
 20504                           ;psect for function _I2C1_MasterTRBInsert
 20505  158C                     _I2C1_MasterTRBInsert:	
 20506                           
 20507                           ;incstack = 0
 20508                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20509                           ;I2C1_MasterTRBInsert@count stored from wreg
 20510  158C  0140               	movlb	0	; select bank0
 20511  158D  00A3               	movwf	I2C1_MasterTRBInsert@count
 20512                           
 20513                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 20514  158E  0141               	movlb	1	; select bank1
 20515  158F  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 20516  1590  2DCE               	goto	l7081
 20517                           
 20518                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 20519  1591  3002               	movlw	2
 20520  1592  0140               	movlb	0	; select bank0
 20521  1593  00A2               	movwf	??_I2C1_MasterTRBInsert
 20522  1594  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20523  1595  0086               	movwf	6
 20524  1596  0187               	clrf	7
 20525  1597  0822               	movf	??_I2C1_MasterTRBInsert,w
 20526  1598  0081               	movwf	1
 20527                           
 20528                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 20529  1599  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 20530  159A  00A2               	movwf	??_I2C1_MasterTRBInsert
 20531  159B  0141               	movlb	1	; select bank1
 20532  159C  0A20               	incf	_i2c1_object^(0+128),w
 20533  159D  0086               	movwf	6
 20534  159E  3001               	movlw	1	; select bank2/3
 20535  159F  0087               	movwf	7
 20536  15A0  0140               	movlb	0	; select bank0
 20537  15A1  0822               	movf	??_I2C1_MasterTRBInsert,w
 20538  15A2  0081               	movwf	1
 20539                           
 20540                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 20541  15A3  0823               	movf	I2C1_MasterTRBInsert@count,w
 20542  15A4  00A2               	movwf	??_I2C1_MasterTRBInsert
 20543  15A5  0141               	movlb	1	; select bank1
 20544  15A6  0820               	movf	_i2c1_object^(0+128),w
 20545  15A7  0086               	movwf	6
 20546  15A8  3001               	movlw	1	; select bank2/3
 20547  15A9  0087               	movwf	7
 20548  15AA  0140               	movlb	0	; select bank0
 20549  15AB  0822               	movf	??_I2C1_MasterTRBInsert,w
 20550  15AC  0081               	movwf	1
 20551                           
 20552                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 20553  15AD  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20554  15AE  00A2               	movwf	??_I2C1_MasterTRBInsert
 20555  15AF  0141               	movlb	1	; select bank1
 20556  15B0  0820               	movf	_i2c1_object^(0+128),w
 20557  15B1  3E02               	addlw	2
 20558  15B2  0086               	movwf	6
 20559  15B3  3001               	movlw	1	; select bank2/3
 20560  15B4  0087               	movwf	7
 20561  15B5  0140               	movlb	0	; select bank0
 20562  15B6  0822               	movf	??_I2C1_MasterTRBInsert,w
 20563  15B7  0081               	movwf	1
 20564                           
 20565                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 20566  15B8  3003               	movlw	3
 20567  15B9  00A2               	movwf	??_I2C1_MasterTRBInsert
 20568  15BA  0822               	movf	??_I2C1_MasterTRBInsert,w
 20569  15BB  0141               	movlb	1	; select bank1
 20570  15BC  07A0               	addwf	_i2c1_object^(0+128),f
 20571                           
 20572                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 20573  15BD  0820               	movf	_i2c1_object^(0+128),w
 20574  15BE  3A58               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 20575  15BF  1D03               	skipz
 20576  15C0  2DC7               	goto	l7077
 20577                           
 20578                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 20579  15C1  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 20580  15C2  0140               	movlb	0	; select bank0
 20581  15C3  00A2               	movwf	??_I2C1_MasterTRBInsert
 20582  15C4  0822               	movf	??_I2C1_MasterTRBInsert,w
 20583  15C5  0141               	movlb	1	; select bank1
 20584  15C6  00A0               	movwf	_i2c1_object^(0+128)
 20585  15C7                     l7077:	
 20586                           
 20587                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 20588  15C7  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 20589                           
 20590                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 20591  15C8  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 20592  15C9  0620               	xorwf	_i2c1_object^(0+128),w
 20593  15CA  1D03               	skipz
 20594  15CB  2DD4               	goto	l7083
 20595                           
 20596                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 20597  15CC  1422               	bsf	(_i2c1_object^(0+128)+2),0
 20598  15CD  2DD4               	goto	l7083
 20599  15CE                     l7081:	
 20600                           
 20601                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20602  15CE  0140               	movlb	0	; select bank0
 20603  15CF  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20604  15D0  0086               	movwf	6
 20605  15D1  0187               	clrf	7
 20606  15D2  0181               	clrf	1
 20607  15D3  0A81               	incf	1,f
 20608  15D4                     l7083:	
 20609                           
 20610                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 20611  15D4  0140               	movlb	0	; select bank0
 20612  15D5  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20613  15D6  0086               	movwf	6
 20614  15D7  0187               	clrf	7
 20615  15D8  3002               	movlw	2
 20616  15D9  0601               	xorwf	1,w
 20617  15DA  1D03               	btfss	3,2
 20618  15DB  0008               	return
 20619                           
 20620                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 20621  15DC  319E  2689         	fcall	_I2C1_WaitForLastPacketToComplete
 20622                           
 20623                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 20624  15DE  014E               	movlb	14	; select bank14
 20625  15DF  140F               	bsf	15,0	;volatile
 20626  15E0  0008               	return
 20627  15E1                     __end_of_I2C1_MasterTRBInsert:	
 20628                           
 20629                           	psect	text70
 20630  1E89                     __ptext70:	
 20631 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 20632 ;; Defined at:
 20633 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 20634 ;; Parameters:    Size  Location     Type
 20635 ;;		None
 20636 ;; Auto vars:     Size  Location     Type
 20637 ;;		None
 20638 ;; Return value:  Size  Location     Type
 20639 ;;                  1    wreg      void 
 20640 ;; Registers used:
 20641 ;;		wreg, status,2, status,0
 20642 ;; Tracked objects:
 20643 ;;		On entry : 0/0
 20644 ;;		On exit  : 0/0
 20645 ;;		Unchanged: 0/0
 20646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20651 ;;Total ram usage:        0 bytes
 20652 ;; Hardware stack levels used:    1
 20653 ;; Hardware stack levels required when called:    4
 20654 ;; This function calls:
 20655 ;;		Nothing
 20656 ;; This function is called by:
 20657 ;;		_I2C1_MasterTRBInsert
 20658 ;; This function uses a non-reentrant model
 20659 ;;
 20660                           
 20661                           
 20662                           ;psect for function _I2C1_WaitForLastPacketToComplete
 20663  1E89                     _I2C1_WaitForLastPacketToComplete:	
 20664  1E89                     l7065:	
 20665                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 20666                           
 20667                           ;incstack = 0
 20668                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 20669                           
 20670                           
 20671                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 20672  1E89  0141               	movlb	1	; select bank1
 20673  1E8A  0844               	movf	_i2c1_state^(0+128),w
 20674  1E8B  1903               	btfsc	3,2
 20675  1E8C  0008               	return
 20676  1E8D  2E89               	goto	l7065
 20677  1E8E                     __end_of_I2C1_WaitForLastPacketToComplete:	
 20678                           
 20679                           	psect	text71
 20680  12B6                     __ptext71:	
 20681 ;; *************** function ___lwmod *****************
 20682 ;; Defined at:
 20683 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 20684 ;; Parameters:    Size  Location     Type
 20685 ;;  divisor         2    8[BANK0 ] unsigned int 
 20686 ;;  dividend        2   10[BANK0 ] unsigned int 
 20687 ;; Auto vars:     Size  Location     Type
 20688 ;;  counter         1   13[BANK0 ] unsigned char 
 20689 ;; Return value:  Size  Location     Type
 20690 ;;                  2    8[BANK0 ] unsigned int 
 20691 ;; Registers used:
 20692 ;;		wreg, status,2, status,0
 20693 ;; Tracked objects:
 20694 ;;		On entry : 0/0
 20695 ;;		On exit  : 0/0
 20696 ;;		Unchanged: 0/0
 20697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20701 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20702 ;;Total ram usage:        6 bytes
 20703 ;; Hardware stack levels used:    1
 20704 ;; Hardware stack levels required when called:    4
 20705 ;; This function calls:
 20706 ;;		Nothing
 20707 ;; This function is called by:
 20708 ;;		_TM1650_fastPrintNum
 20709 ;; This function uses a non-reentrant model
 20710 ;;
 20711                           
 20712                           
 20713                           ;psect for function ___lwmod
 20714  12B6                     ___lwmod:	
 20715                           
 20716                           ;incstack = 0
 20717                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 20718  12B6  0140               	movlb	0	; select bank0
 20719  12B7  0828               	movf	___lwmod@divisor,w
 20720  12B8  0429               	iorwf	___lwmod@divisor+1,w
 20721  12B9  1903               	btfsc	3,2
 20722  12BA  2ADE               	goto	l4919
 20723  12BB  01AD               	clrf	___lwmod@counter
 20724  12BC  0AAD               	incf	___lwmod@counter,f
 20725  12BD                     l4909:	
 20726  12BD  1BA9               	btfsc	___lwmod@divisor+1,7
 20727  12BE  2AC9               	goto	l4911
 20728  12BF  3001               	movlw	1
 20729  12C0                     u3635:	
 20730  12C0  35A8               	lslf	___lwmod@divisor,f
 20731  12C1  0DA9               	rlf	___lwmod@divisor+1,f
 20732  12C2  0B89               	decfsz	9,f
 20733  12C3  2AC0               	goto	u3635
 20734  12C4  3001               	movlw	1
 20735  12C5  00AC               	movwf	??___lwmod
 20736  12C6  082C               	movf	??___lwmod,w
 20737  12C7  07AD               	addwf	___lwmod@counter,f
 20738  12C8  2ABD               	goto	l4909
 20739  12C9                     l4911:	
 20740  12C9  0829               	movf	___lwmod@divisor+1,w
 20741  12CA  022B               	subwf	___lwmod@dividend+1,w
 20742  12CB  1D03               	skipz
 20743  12CC  2ACF               	goto	u3655
 20744  12CD  0828               	movf	___lwmod@divisor,w
 20745  12CE  022A               	subwf	___lwmod@dividend,w
 20746  12CF                     u3655:	
 20747  12CF  1C03               	skipc
 20748  12D0  2AD5               	goto	l4915
 20749  12D1  0828               	movf	___lwmod@divisor,w
 20750  12D2  02AA               	subwf	___lwmod@dividend,f
 20751  12D3  0829               	movf	___lwmod@divisor+1,w
 20752  12D4  3BAB               	subwfb	___lwmod@dividend+1,f
 20753  12D5                     l4915:	
 20754  12D5  3001               	movlw	1
 20755  12D6                     u3665:	
 20756  12D6  36A9               	lsrf	___lwmod@divisor+1,f
 20757  12D7  0CA8               	rrf	___lwmod@divisor,f
 20758  12D8  0B89               	decfsz	9,f
 20759  12D9  2AD6               	goto	u3665
 20760  12DA  3001               	movlw	1
 20761  12DB  02AD               	subwf	___lwmod@counter,f
 20762  12DC  1D03               	btfss	3,2
 20763  12DD  2AC9               	goto	l4911
 20764  12DE                     l4919:	
 20765  12DE  082B               	movf	___lwmod@dividend+1,w
 20766  12DF  00A9               	movwf	?___lwmod+1
 20767  12E0  082A               	movf	___lwmod@dividend,w
 20768  12E1  00A8               	movwf	?___lwmod
 20769  12E2  0008               	return
 20770  12E3                     __end_of___lwmod:	
 20771                           
 20772                           	psect	text72
 20773  1714                     __ptext72:	
 20774 ;; *************** function _CONTROL_BEAT *****************
 20775 ;; Defined at:
 20776 ;;		line 213 in file "controller.c"
 20777 ;; Parameters:    Size  Location     Type
 20778 ;;		None
 20779 ;; Auto vars:     Size  Location     Type
 20780 ;;		None
 20781 ;; Return value:  Size  Location     Type
 20782 ;;                  1    wreg      _Bool 
 20783 ;; Registers used:
 20784 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20785 ;; Tracked objects:
 20786 ;;		On entry : 0/0
 20787 ;;		On exit  : 0/0
 20788 ;;		Unchanged: 0/0
 20789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20792 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20793 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20794 ;;Total ram usage:        1 bytes
 20795 ;; Hardware stack levels used:    1
 20796 ;; Hardware stack levels required when called:    5
 20797 ;; This function calls:
 20798 ;;		_BUTTONS_isHeld
 20799 ;; This function is called by:
 20800 ;;		_CONTROLLER_task
 20801 ;; This function uses a non-reentrant model
 20802 ;;
 20803                           
 20804                           
 20805                           ;psect for function _CONTROL_BEAT
 20806  1714                     _CONTROL_BEAT:	
 20807                           
 20808                           ;controller.c: 215:     if(BUTTONS_isHeld(enter) && !enterPressed){
 20809                           
 20810                           ;incstack = 0
 20811                           ; Regs used in _CONTROL_BEAT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20812  1714  0141               	movlb	1	; select bank1
 20813  1715  083B               	movf	_enter^(0+128),w
 20814  1716  319F  276E  3197   	fcall	_BUTTONS_isHeld
 20815  1719  3A00               	xorlw	0
 20816  171A  1903               	skipnz
 20817  171B  2F49               	goto	l8087
 20818  171C  0141               	movlb	1	; select bank1
 20819  171D  0837               	movf	_enterPressed^(0+128),w
 20820  171E  1D03               	btfss	3,2
 20821  171F  2F49               	goto	l8087
 20822                           
 20823                           ;controller.c: 216:         beatHold = !beatHold;
 20824  1720  0832               	movf	_beatHold^(0+128),w
 20825  1721  1D03               	btfss	3,2
 20826  1722  2F25               	goto	u7960
 20827  1723  3001               	movlw	1
 20828  1724  2F26               	goto	u7970
 20829  1725                     u7960:	
 20830  1725  3000               	movlw	0
 20831  1726                     u7970:	
 20832  1726  0140               	movlb	0	; select bank0
 20833  1727  00A1               	movwf	??_CONTROL_BEAT
 20834  1728  0821               	movf	??_CONTROL_BEAT,w
 20835  1729  0141               	movlb	1	; select bank1
 20836  172A  00B2               	movwf	_beatHold^(0+128)
 20837                           
 20838                           ;controller.c: 217:         enterPressed = 1;
 20839  172B  01B7               	clrf	_enterPressed^(0+128)
 20840  172C  0AB7               	incf	_enterPressed^(0+128),f
 20841  172D  2F47               	goto	l8083
 20842  172E                     l8089:	
 20843                           
 20844                           ;controller.c: 224:         if(beatBrightness < 9){
 20845  172E  3009               	movlw	9
 20846  172F  026F               	subwf	_beatBrightness^(0+128),w
 20847  1730  1803               	skipnc
 20848  1731  2F39               	goto	l8093
 20849                           
 20850                           ;controller.c: 225:             beatBrightness++;
 20851  1732  3001               	movlw	1
 20852  1733  0140               	movlb	0	; select bank0
 20853  1734  00A1               	movwf	??_CONTROL_BEAT
 20854  1735  0821               	movf	??_CONTROL_BEAT,w
 20855  1736  0141               	movlb	1	; select bank1
 20856  1737  07EF               	addwf	_beatBrightness^(0+128),f
 20857                           
 20858                           ;controller.c: 226:         } else {
 20859  1738  2F47               	goto	l8083
 20860  1739                     l8093:	
 20861                           
 20862                           ;controller.c: 227:             beatBrightness = 9;
 20863  1739  3009               	movlw	9
 20864  173A  0140               	movlb	0	; select bank0
 20865  173B  00A1               	movwf	??_CONTROL_BEAT
 20866  173C  0821               	movf	??_CONTROL_BEAT,w
 20867  173D  0141               	movlb	1	; select bank1
 20868  173E  00EF               	movwf	_beatBrightness^(0+128)
 20869  173F  2F47               	goto	l8083
 20870  1740                     l8101:	
 20871                           
 20872                           ;controller.c: 231:         if(beatBrightness > 0){
 20873  1740  086F               	movf	_beatBrightness^(0+128),w
 20874  1741  1903               	btfsc	3,2
 20875  1742  2F46               	goto	l8105
 20876                           
 20877                           ;controller.c: 232:             beatBrightness--;
 20878  1743  3001               	movlw	1
 20879  1744  02EF               	subwf	_beatBrightness^(0+128),f
 20880                           
 20881                           ;controller.c: 233:         } else {
 20882  1745  2F47               	goto	l8083
 20883  1746                     l8105:	
 20884                           
 20885                           ;controller.c: 234:             beatBrightness = 0;
 20886  1746  01EF               	clrf	_beatBrightness^(0+128)
 20887  1747                     l8083:	
 20888                           
 20889                           ;controller.c: 218:         return 1;
 20890  1747  3001               	movlw	1
 20891  1748  0008               	return
 20892  1749                     l8087:	
 20893                           
 20894                           ;controller.c: 223:     if (upState) {
 20895  1749  0141               	movlb	1	; select bank1
 20896  174A  0836               	movf	_upState^(0+128),w
 20897  174B  1D03               	btfss	3,2
 20898  174C  2F2E               	goto	l8089
 20899  174D  0835               	movf	_downState^(0+128),w
 20900  174E  1D03               	btfss	3,2
 20901  174F  2F40               	goto	l8101
 20902                           
 20903                           ;controller.c: 239:     if(enterState && currentSelection == MODE_BEAT_FADE){
 20904  1750  0833               	movf	_enterState^(0+128),w
 20905  1751  1903               	btfsc	3,2
 20906  1752  2F5E               	goto	l8117
 20907  1753  3004               	movlw	4
 20908  1754  0639               	xorwf	_currentSelection^(0+128),w
 20909  1755  1D03               	btfss	3,2
 20910  1756  2F5E               	goto	l8117
 20911                           
 20912                           ;controller.c: 240:         currentSelection = MODE_BEAT_CONTINUOUS;
 20913  1757  3005               	movlw	5
 20914  1758  0140               	movlb	0	; select bank0
 20915  1759  00A1               	movwf	??_CONTROL_BEAT
 20916  175A  0821               	movf	??_CONTROL_BEAT,w
 20917  175B  0141               	movlb	1	; select bank1
 20918  175C  00B9               	movwf	_currentSelection^(0+128)
 20919                           
 20920                           ;controller.c: 242:     } else if(enterState && currentSelection == MODE_BEAT_STROBE){
 20921  175D  0008               	return
 20922  175E                     l8117:	
 20923  175E  0833               	movf	_enterState^(0+128),w
 20924  175F  1903               	btfsc	3,2
 20925  1760  2F6B               	goto	l8123
 20926  1761  0339               	decf	_currentSelection^(0+128),w
 20927  1762  1D03               	btfss	3,2
 20928  1763  2F6B               	goto	l8123
 20929                           
 20930                           ;controller.c: 243:         currentSelection = MODE_BEAT_FADE;
 20931  1764  3004               	movlw	4
 20932  1765  0140               	movlb	0	; select bank0
 20933  1766  00A1               	movwf	??_CONTROL_BEAT
 20934  1767  0821               	movf	??_CONTROL_BEAT,w
 20935  1768  0141               	movlb	1	; select bank1
 20936  1769  00B9               	movwf	_currentSelection^(0+128)
 20937                           
 20938                           ;controller.c: 244:     } else if(enterState && currentSelection == MODE_BEAT_CONTINUOUS
      +                          ){
 20939  176A  0008               	return
 20940  176B                     l8123:	
 20941  176B  0833               	movf	_enterState^(0+128),w
 20942  176C  1903               	btfsc	3,2
 20943  176D  2F79               	goto	l8129
 20944  176E  3005               	movlw	5
 20945  176F  0639               	xorwf	_currentSelection^(0+128),w
 20946  1770  1D03               	btfss	3,2
 20947  1771  2F79               	goto	l8129
 20948                           
 20949                           ;controller.c: 245:         currentSelection = MODE_BEAT_MIXED;
 20950  1772  3006               	movlw	6
 20951  1773  0140               	movlb	0	; select bank0
 20952  1774  00A1               	movwf	??_CONTROL_BEAT
 20953  1775  0821               	movf	??_CONTROL_BEAT,w
 20954  1776  0141               	movlb	1	; select bank1
 20955  1777  00B9               	movwf	_currentSelection^(0+128)
 20956                           
 20957                           ;controller.c: 246:     } else if(enterState && currentSelection == MODE_BEAT_MIXED){
 20958  1778  0008               	return
 20959  1779                     l8129:	
 20960  1779  0833               	movf	_enterState^(0+128),w
 20961  177A  1903               	btfsc	3,2
 20962  177B  0008               	return
 20963  177C  3006               	movlw	6
 20964  177D  0639               	xorwf	_currentSelection^(0+128),w
 20965  177E  1D03               	btfss	3,2
 20966  177F  0008               	return
 20967                           
 20968                           ;controller.c: 247:         currentSelection = MODE_BEAT_STROBE;
 20969  1780  01B9               	clrf	_currentSelection^(0+128)
 20970  1781  0AB9               	incf	_currentSelection^(0+128),f
 20971  1782  0008               	return
 20972  1783                     __end_of_CONTROL_BEAT:	
 20973                           
 20974                           	psect	text73
 20975  1F6E                     __ptext73:	
 20976 ;; *************** function _BUTTONS_isHeld *****************
 20977 ;; Defined at:
 20978 ;;		line 106 in file "buttons.c"
 20979 ;; Parameters:    Size  Location     Type
 20980 ;;  button          1    wreg     PTR struct .
 20981 ;;		 -> buttons(32), NULL(0), 
 20982 ;; Auto vars:     Size  Location     Type
 20983 ;;  button          1    0[BANK0 ] PTR struct .
 20984 ;;		 -> buttons(32), NULL(0), 
 20985 ;; Return value:  Size  Location     Type
 20986 ;;                  1    wreg      _Bool 
 20987 ;; Registers used:
 20988 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20989 ;; Tracked objects:
 20990 ;;		On entry : 0/0
 20991 ;;		On exit  : 0/0
 20992 ;;		Unchanged: 0/0
 20993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20997 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20998 ;;Total ram usage:        1 bytes
 20999 ;; Hardware stack levels used:    1
 21000 ;; Hardware stack levels required when called:    4
 21001 ;; This function calls:
 21002 ;;		Nothing
 21003 ;; This function is called by:
 21004 ;;		_CONTROL_DMX
 21005 ;;		_CONTROL_BEAT
 21006 ;;		_CONTROL_MANUAL
 21007 ;; This function uses a non-reentrant model
 21008 ;;
 21009                           
 21010                           
 21011                           ;psect for function _BUTTONS_isHeld
 21012  1F6E                     _BUTTONS_isHeld:	
 21013                           
 21014                           ;incstack = 0
 21015                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 21016                           ;BUTTONS_isHeld@button stored from wreg
 21017  1F6E  0140               	movlb	0	; select bank0
 21018  1F6F  00A0               	movwf	BUTTONS_isHeld@button
 21019                           
 21020                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 21021  1F70  0820               	movf	BUTTONS_isHeld@button,w
 21022  1F71  3E07               	addlw	7
 21023  1F72  0086               	movwf	6
 21024  1F73  3001               	movlw	1	; select bank2/3
 21025  1F74  0087               	movwf	7
 21026  1F75  3003               	movlw	3
 21027  1F76  0601               	xorwf	1,w
 21028  1F77  1D03               	btfss	3,2
 21029  1F78  2F7B               	goto	l7701
 21030                           
 21031                           ;buttons.c: 108:         return 1;
 21032  1F79  3001               	movlw	1
 21033  1F7A  0008               	return
 21034  1F7B                     l7701:	
 21035                           
 21036                           ;buttons.c: 111:     return 0;
 21037  1F7B  3000               	movlw	0
 21038  1F7C  0008               	return
 21039  1F7D                     __end_of_BUTTONS_isHeld:	
 21040                           
 21041                           	psect	text74
 21042  1FC4                     __ptext74:	
 21043 ;; *************** function _BUTTONS_isClicked *****************
 21044 ;; Defined at:
 21045 ;;		line 97 in file "buttons.c"
 21046 ;; Parameters:    Size  Location     Type
 21047 ;;  button          1    wreg     PTR struct .
 21048 ;;		 -> buttons(32), NULL(0), 
 21049 ;; Auto vars:     Size  Location     Type
 21050 ;;  button          1    0[BANK0 ] PTR struct .
 21051 ;;		 -> buttons(32), NULL(0), 
 21052 ;; Return value:  Size  Location     Type
 21053 ;;                  1    wreg      _Bool 
 21054 ;; Registers used:
 21055 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21056 ;; Tracked objects:
 21057 ;;		On entry : 0/0
 21058 ;;		On exit  : 0/0
 21059 ;;		Unchanged: 0/0
 21060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21064 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21065 ;;Total ram usage:        1 bytes
 21066 ;; Hardware stack levels used:    1
 21067 ;; Hardware stack levels required when called:    4
 21068 ;; This function calls:
 21069 ;;		Nothing
 21070 ;; This function is called by:
 21071 ;;		_CONTROLLER_task
 21072 ;; This function uses a non-reentrant model
 21073 ;;
 21074                           
 21075                           
 21076                           ;psect for function _BUTTONS_isClicked
 21077  1FC4                     _BUTTONS_isClicked:	
 21078                           
 21079                           ;incstack = 0
 21080                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 21081                           ;BUTTONS_isClicked@button stored from wreg
 21082  1FC4  0140               	movlb	0	; select bank0
 21083  1FC5  00A0               	movwf	BUTTONS_isClicked@button
 21084                           
 21085                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 21086  1FC6  0820               	movf	BUTTONS_isClicked@button,w
 21087  1FC7  3E07               	addlw	7
 21088  1FC8  0086               	movwf	6
 21089  1FC9  3001               	movlw	1	; select bank2/3
 21090  1FCA  0087               	movwf	7
 21091  1FCB  0301               	decf	1,w
 21092  1FCC  1D03               	btfss	3,2
 21093  1FCD  2FD6               	goto	l7935
 21094                           
 21095                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 21096  1FCE  0820               	movf	BUTTONS_isClicked@button,w
 21097  1FCF  3E07               	addlw	7
 21098  1FD0  0086               	movwf	6
 21099  1FD1  3001               	movlw	1	; select bank2/3
 21100  1FD2  0087               	movwf	7
 21101  1FD3  0181               	clrf	1
 21102                           
 21103                           ;buttons.c: 100:         return 1;
 21104  1FD4  3001               	movlw	1
 21105  1FD5  0008               	return
 21106  1FD6                     l7935:	
 21107                           
 21108                           ;buttons.c: 103:     return 0;
 21109  1FD6  3000               	movlw	0
 21110  1FD7  0008               	return
 21111  1FD8                     __end_of_BUTTONS_isClicked:	
 21112                           
 21113                           	psect	text75
 21114  1E9A                     __ptext75:	
 21115 ;; *************** function _CLOCK_init *****************
 21116 ;; Defined at:
 21117 ;;		line 8 in file "clock.c"
 21118 ;; Parameters:    Size  Location     Type
 21119 ;;		None
 21120 ;; Auto vars:     Size  Location     Type
 21121 ;;		None
 21122 ;; Return value:  Size  Location     Type
 21123 ;;                  1    wreg      void 
 21124 ;; Registers used:
 21125 ;;		wreg, status,2, status,0, pclath, cstack
 21126 ;; Tracked objects:
 21127 ;;		On entry : 0/0
 21128 ;;		On exit  : 0/0
 21129 ;;		Unchanged: 0/0
 21130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21135 ;;Total ram usage:        0 bytes
 21136 ;; Hardware stack levels used:    1
 21137 ;; Hardware stack levels required when called:    5
 21138 ;; This function calls:
 21139 ;;		_TMR0_SetInterruptHandler
 21140 ;; This function is called by:
 21141 ;;		_main
 21142 ;; This function uses a non-reentrant model
 21143 ;;
 21144                           
 21145                           
 21146                           ;psect for function _CLOCK_init
 21147  1E9A                     _CLOCK_init:	
 21148                           
 21149                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 21150                           
 21151                           ;incstack = 0
 21152                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 21153  1E9A  308E               	movlw	low _CLOCK_timerCallback
 21154  1E9B  0140               	movlb	0	; select bank0
 21155  1E9C  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 21156  1E9D  301E               	movlw	high _CLOCK_timerCallback
 21157  1E9E  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 21158  1E9F  319E  26CE         	fcall	_TMR0_SetInterruptHandler
 21159  1EA1  0008               	return
 21160  1EA2                     __end_of_CLOCK_init:	
 21161                           
 21162                           	psect	text76
 21163  1ECE                     __ptext76:	
 21164 ;; *************** function _TMR0_SetInterruptHandler *****************
 21165 ;; Defined at:
 21166 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 21167 ;; Parameters:    Size  Location     Type
 21168 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 21169 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 21170 ;; Auto vars:     Size  Location     Type
 21171 ;;		None
 21172 ;; Return value:  Size  Location     Type
 21173 ;;                  1    wreg      void 
 21174 ;; Registers used:
 21175 ;;		wreg
 21176 ;; Tracked objects:
 21177 ;;		On entry : 0/0
 21178 ;;		On exit  : 0/0
 21179 ;;		Unchanged: 0/0
 21180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21184 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21185 ;;Total ram usage:        2 bytes
 21186 ;; Hardware stack levels used:    1
 21187 ;; Hardware stack levels required when called:    4
 21188 ;; This function calls:
 21189 ;;		Nothing
 21190 ;; This function is called by:
 21191 ;;		_TMR0_Initialize
 21192 ;;		_CLOCK_init
 21193 ;; This function uses a non-reentrant model
 21194 ;;
 21195                           
 21196                           
 21197                           ;psect for function _TMR0_SetInterruptHandler
 21198  1ECE                     _TMR0_SetInterruptHandler:	
 21199                           
 21200                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 21201                           
 21202                           ;incstack = 0
 21203                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 21204  1ECE  0140               	movlb	0	; select bank0
 21205  1ECF  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 21206  1ED0  0142               	movlb	2	; select bank2
 21207  1ED1  00DB               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 21208  1ED2  0140               	movlb	0	; select bank0
 21209  1ED3  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 21210  1ED4  0142               	movlb	2	; select bank2
 21211  1ED5  00DA               	movwf	_TMR0_InterruptHandler^(0+256)
 21212  1ED6  0008               	return
 21213  1ED7                     __end_of_TMR0_SetInterruptHandler:	
 21214                           
 21215                           	psect	text77
 21216  0DC0                     __ptext77:	
 21217 ;; *************** function _BUTTONS_task *****************
 21218 ;; Defined at:
 21219 ;;		line 56 in file "buttons.c"
 21220 ;; Parameters:    Size  Location     Type
 21221 ;;		None
 21222 ;; Auto vars:     Size  Location     Type
 21223 ;;  btn             1    8[BANK0 ] PTR struct .
 21224 ;;		 -> buttons(32), 
 21225 ;;  i               1    5[BANK0 ] unsigned char 
 21226 ;;  time            2    6[BANK0 ] unsigned short 
 21227 ;; Return value:  Size  Location     Type
 21228 ;;                  1    wreg      void 
 21229 ;; Registers used:
 21230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21231 ;; Tracked objects:
 21232 ;;		On entry : 0/0
 21233 ;;		On exit  : 0/0
 21234 ;;		Unchanged: 0/0
 21235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21237 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21238 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21239 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21240 ;;Total ram usage:        7 bytes
 21241 ;; Hardware stack levels used:    1
 21242 ;; Hardware stack levels required when called:    5
 21243 ;; This function calls:
 21244 ;;		_CLOCK_getTime
 21245 ;; This function is called by:
 21246 ;;		_main
 21247 ;; This function uses a non-reentrant model
 21248 ;;
 21249                           
 21250                           
 21251                           ;psect for function _BUTTONS_task
 21252  0DC0                     _BUTTONS_task:	
 21253                           
 21254                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 21255                           
 21256                           ;incstack = 0
 21257                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21258  0DC0  319E  26C5  318D   	fcall	_CLOCK_getTime
 21259  0DC3  0140               	movlb	0	; select bank0
 21260  0DC4  0821               	movf	?_CLOCK_getTime+1,w
 21261  0DC5  00A7               	movwf	BUTTONS_task@time+1
 21262  0DC6  0820               	movf	?_CLOCK_getTime,w
 21263  0DC7  00A6               	movwf	BUTTONS_task@time
 21264                           
 21265                           ;buttons.c: 61:     if (time - lastTime < 10)
 21266  0DC8  0142               	movlb	2	; select bank2
 21267  0DC9  0848               	movf	_lastTime^(0+256),w
 21268  0DCA  0140               	movlb	0	; select bank0
 21269  0DCB  0226               	subwf	BUTTONS_task@time,w
 21270  0DCC  00A2               	movwf	??_BUTTONS_task
 21271  0DCD  0142               	movlb	2	; select bank2
 21272  0DCE  0849               	movf	(_lastTime+1)^(0+256),w
 21273  0DCF  0140               	movlb	0	; select bank0
 21274  0DD0  3B27               	subwfb	BUTTONS_task@time+1,w
 21275  0DD1  00A3               	movwf	??_BUTTONS_task+1
 21276  0DD2  3000               	movlw	0
 21277  0DD3  0223               	subwf	??_BUTTONS_task+1,w
 21278  0DD4  300A               	movlw	10
 21279  0DD5  1903               	skipnz
 21280  0DD6  0222               	subwf	??_BUTTONS_task,w
 21281  0DD7  1C03               	btfss	3,0
 21282  0DD8  0008               	return
 21283                           
 21284                           ;buttons.c: 64:     lastTime = time;
 21285  0DD9  0827               	movf	BUTTONS_task@time+1,w
 21286  0DDA  0142               	movlb	2	; select bank2
 21287  0DDB  00C9               	movwf	(_lastTime+1)^(0+256)
 21288  0DDC  0140               	movlb	0	; select bank0
 21289  0DDD  0826               	movf	BUTTONS_task@time,w
 21290  0DDE  0142               	movlb	2	; select bank2
 21291  0DDF  00C8               	movwf	_lastTime^(0+256)
 21292                           
 21293                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 21294  0DE0  0140               	movlb	0	; select bank0
 21295  0DE1  01A5               	clrf	BUTTONS_task@i
 21296  0DE2                     l8419:	
 21297                           
 21298                           ;buttons.c: 68:         button_t* btn = buttons + i;
 21299  0DE2  0825               	movf	BUTTONS_task@i,w
 21300  0DE3  00A2               	movwf	??_BUTTONS_task
 21301  0DE4  3002               	movlw	2
 21302  0DE5                     u8415:	
 21303  0DE5  35A2               	lslf	??_BUTTONS_task,f
 21304  0DE6  3EFF               	addlw	-1
 21305  0DE7  1D03               	skipz
 21306  0DE8  2DE5               	goto	u8415
 21307  0DE9  3522               	lslf	??_BUTTONS_task,w
 21308  0DEA  3EC0               	addlw	(low (_buttons| (0+256)))& (0+255)
 21309  0DEB  00A3               	movwf	??_BUTTONS_task+1
 21310  0DEC  0823               	movf	??_BUTTONS_task+1,w
 21311  0DED  00A8               	movwf	BUTTONS_task@btn
 21312                           
 21313                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 21314  0DEE  0828               	movf	BUTTONS_task@btn,w
 21315  0DEF  0086               	movwf	6
 21316  0DF0  3001               	movlw	1	; select bank2/3
 21317  0DF1  0087               	movwf	7
 21318  0DF2  3F40               	moviw [0]fsr1
 21319  0DF3  00A2               	movwf	??_BUTTONS_task
 21320  0DF4  3F41               	moviw [1]fsr1
 21321  0DF5  00A3               	movwf	??_BUTTONS_task+1
 21322  0DF6  0822               	movf	??_BUTTONS_task,w
 21323  0DF7  0086               	movwf	6
 21324  0DF8  0823               	movf	??_BUTTONS_task+1,w
 21325  0DF9  0087               	movwf	7
 21326  0DFA  3001               	movlw	1
 21327  0DFB  00A4               	movwf	??_BUTTONS_task+2
 21328  0DFC  0828               	movf	BUTTONS_task@btn,w
 21329  0DFD  3E02               	addlw	2
 21330  0DFE  0084               	movwf	4
 21331  0DFF  3001               	movlw	1	; select bank2/3
 21332  0E00  0085               	movwf	5
 21333  0E01  0A00               	incf	0,w
 21334  0E02  2E04               	goto	u8424
 21335  0E03                     u8425:	
 21336  0E03  35A4               	lslf	??_BUTTONS_task+2,f
 21337  0E04                     u8424:	
 21338  0E04  0B89               	decfsz	9,f
 21339  0E05  2E03               	goto	u8425
 21340  0E06  0824               	movf	??_BUTTONS_task+2,w
 21341  0E07  0501               	andwf	1,w
 21342  0E08  1D03               	btfss	3,2
 21343  0E09  2E23               	goto	l8427
 21344                           
 21345                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 21346  0E0A  0828               	movf	BUTTONS_task@btn,w
 21347  0E0B  3E03               	addlw	3
 21348  0E0C  0086               	movwf	6
 21349  0E0D  3001               	movlw	1	; select bank2/3
 21350  0E0E  0087               	movwf	7
 21351  0E0F  0181               	clrf	1
 21352  0E10  0A81               	incf	1,f
 21353                           
 21354                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 21355  0E11  0828               	movf	BUTTONS_task@btn,w
 21356  0E12  3E07               	addlw	7
 21357  0E13  0086               	movwf	6
 21358  0E14  3001               	movlw	1	; select bank2/3
 21359  0E15  0087               	movwf	7
 21360  0E16  0801               	movf	1,w
 21361  0E17  1D03               	btfss	3,2
 21362  0E18  2E29               	goto	l909
 21363                           
 21364                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 21365  0E19  0828               	movf	BUTTONS_task@btn,w
 21366  0E1A  3E05               	addlw	5
 21367  0E1B  0086               	movwf	6
 21368  0E1C  3001               	movlw	1	; select bank2/3
 21369  0E1D  0087               	movwf	7
 21370  0E1E  0826               	movf	BUTTONS_task@time,w
 21371  0E1F  3FC0               	movwi [0]fsr1
 21372  0E20  0827               	movf	BUTTONS_task@time+1,w
 21373  0E21  3FC1               	movwi [1]fsr1
 21374  0E22  2E29               	goto	l909
 21375  0E23                     l8427:	
 21376                           
 21377                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 21378  0E23  0828               	movf	BUTTONS_task@btn,w
 21379  0E24  3E03               	addlw	3
 21380  0E25  0086               	movwf	6
 21381  0E26  3001               	movlw	1	; select bank2/3
 21382  0E27  0087               	movwf	7
 21383  0E28  0181               	clrf	1
 21384  0E29                     l909:	
 21385                           ;buttons.c: 78:         }
 21386                           
 21387                           
 21388                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 21389  0E29  0828               	movf	BUTTONS_task@btn,w
 21390  0E2A  3E03               	addlw	3
 21391  0E2B  0086               	movwf	6
 21392  0E2C  3001               	movlw	1	; select bank2/3
 21393  0E2D  0087               	movwf	7
 21394  0E2E  0801               	movf	1,w
 21395  0E2F  1D03               	btfss	3,2
 21396  0E30  2E41               	goto	l8433
 21397  0E31  0828               	movf	BUTTONS_task@btn,w
 21398  0E32  3E04               	addlw	4
 21399  0E33  0086               	movwf	6
 21400  0E34  3001               	movlw	1	; select bank2/3
 21401  0E35  0087               	movwf	7
 21402  0E36  0301               	decf	1,w
 21403  0E37  1D03               	btfss	3,2
 21404  0E38  2E41               	goto	l8433
 21405                           
 21406                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 21407  0E39  0828               	movf	BUTTONS_task@btn,w
 21408  0E3A  3E07               	addlw	7
 21409  0E3B  0086               	movwf	6
 21410  0E3C  3001               	movlw	1	; select bank2/3
 21411  0E3D  0087               	movwf	7
 21412  0E3E  0181               	clrf	1
 21413  0E3F  0A81               	incf	1,f
 21414                           
 21415                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 21416  0E40  2E97               	goto	l911
 21417  0E41                     l8433:	
 21418  0E41  0828               	movf	BUTTONS_task@btn,w
 21419  0E42  3E03               	addlw	3
 21420  0E43  0086               	movwf	6
 21421  0E44  3001               	movlw	1	; select bank2/3
 21422  0E45  0087               	movwf	7
 21423  0E46  0301               	decf	1,w
 21424  0E47  1D03               	btfss	3,2
 21425  0E48  2E78               	goto	l8445
 21426  0E49  0828               	movf	BUTTONS_task@btn,w
 21427  0E4A  3E04               	addlw	4
 21428  0E4B  0086               	movwf	6
 21429  0E4C  3001               	movlw	1	; select bank2/3
 21430  0E4D  0087               	movwf	7
 21431  0E4E  0301               	decf	1,w
 21432  0E4F  1D03               	btfss	3,2
 21433  0E50  2E78               	goto	l8445
 21434                           
 21435                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 21436  0E51  0828               	movf	BUTTONS_task@btn,w
 21437  0E52  3E05               	addlw	5
 21438  0E53  0086               	movwf	6
 21439  0E54  3001               	movlw	1	; select bank2/3
 21440  0E55  0087               	movwf	7
 21441  0E56  3F40               	moviw [0]fsr1
 21442  0E57  0226               	subwf	BUTTONS_task@time,w
 21443  0E58  00A2               	movwf	??_BUTTONS_task
 21444  0E59  3F41               	moviw [1]fsr1
 21445  0E5A  3B27               	subwfb	BUTTONS_task@time+1,w
 21446  0E5B  00A3               	movwf	??_BUTTONS_task+1
 21447  0E5C  3000               	movlw	0
 21448  0E5D  0223               	subwf	??_BUTTONS_task+1,w
 21449  0E5E  30C9               	movlw	201
 21450  0E5F  1903               	skipnz
 21451  0E60  0222               	subwf	??_BUTTONS_task,w
 21452  0E61  1C03               	skipc
 21453  0E62  2E65               	goto	l8441
 21454                           
 21455                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 21456  0E63  3003               	movlw	3
 21457  0E64  2E6F               	goto	L22
 21458  0E65                     l8441:	
 21459                           ;buttons.c: 86:             } else if(btn->event != EVENT_HELD) {
 21460                           
 21461  0E65  0828               	movf	BUTTONS_task@btn,w
 21462  0E66  3E07               	addlw	7
 21463  0E67  0086               	movwf	6
 21464  0E68  3001               	movlw	1	; select bank2/3
 21465  0E69  0087               	movwf	7
 21466  0E6A  3003               	movlw	3
 21467  0E6B  0601               	xorwf	1,w
 21468  0E6C  1903               	btfsc	3,2
 21469  0E6D  2E97               	goto	l911
 21470                           
 21471                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 21472  0E6E  3002               	movlw	2
 21473  0E6F                     L22:	
 21474  0E6F  00A2               	movwf	??_BUTTONS_task
 21475  0E70  0828               	movf	BUTTONS_task@btn,w
 21476  0E71  3E07               	addlw	7
 21477  0E72  0086               	movwf	6
 21478  0E73  3001               	movlw	1	; select bank2/3
 21479  0E74  0087               	movwf	7
 21480  0E75  0822               	movf	??_BUTTONS_task,w
 21481  0E76  0081               	movwf	1
 21482  0E77  2E97               	goto	l911
 21483  0E78                     l8445:	
 21484  0E78  0828               	movf	BUTTONS_task@btn,w
 21485  0E79  3E03               	addlw	3
 21486  0E7A  0086               	movwf	6
 21487  0E7B  3001               	movlw	1	; select bank2/3
 21488  0E7C  0087               	movwf	7
 21489  0E7D  0801               	movf	1,w
 21490  0E7E  1D03               	btfss	3,2
 21491  0E7F  2E97               	goto	l911
 21492  0E80  0828               	movf	BUTTONS_task@btn,w
 21493  0E81  3E04               	addlw	4
 21494  0E82  0086               	movwf	6
 21495  0E83  3001               	movlw	1	; select bank2/3
 21496  0E84  0087               	movwf	7
 21497  0E85  0301               	decf	1,w
 21498  0E86  1D03               	btfss	3,2
 21499  0E87  2E97               	goto	l911
 21500  0E88  0828               	movf	BUTTONS_task@btn,w
 21501  0E89  3E07               	addlw	7
 21502  0E8A  0086               	movwf	6
 21503  0E8B  3001               	movlw	1	; select bank2/3
 21504  0E8C  0087               	movwf	7
 21505  0E8D  3003               	movlw	3
 21506  0E8E  0601               	xorwf	1,w
 21507  0E8F  1D03               	btfss	3,2
 21508  0E90  2E97               	goto	l911
 21509                           
 21510                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 21511  0E91  0828               	movf	BUTTONS_task@btn,w
 21512  0E92  3E07               	addlw	7
 21513  0E93  0086               	movwf	6
 21514  0E94  3001               	movlw	1	; select bank2/3
 21515  0E95  0087               	movwf	7
 21516  0E96  0181               	clrf	1
 21517  0E97                     l911:	
 21518                           
 21519                           ;buttons.c: 93:         btn->lastState = btn->state;
 21520  0E97  0828               	movf	BUTTONS_task@btn,w
 21521  0E98  3E03               	addlw	3
 21522  0E99  0086               	movwf	6
 21523  0E9A  3001               	movlw	1	; select bank2/3
 21524  0E9B  0087               	movwf	7
 21525  0E9C  0801               	movf	1,w
 21526  0E9D  00A2               	movwf	??_BUTTONS_task
 21527  0E9E  0828               	movf	BUTTONS_task@btn,w
 21528  0E9F  3E04               	addlw	4
 21529  0EA0  0086               	movwf	6
 21530  0EA1  3001               	movlw	1	; select bank2/3
 21531  0EA2  0087               	movwf	7
 21532  0EA3  0822               	movf	??_BUTTONS_task,w
 21533  0EA4  0081               	movwf	1
 21534                           
 21535                           ;buttons.c: 94:     }
 21536  0EA5  3001               	movlw	1
 21537  0EA6  00A2               	movwf	??_BUTTONS_task
 21538  0EA7  0822               	movf	??_BUTTONS_task,w
 21539  0EA8  07A5               	addwf	BUTTONS_task@i,f
 21540  0EA9  3004               	movlw	4
 21541  0EAA  0225               	subwf	BUTTONS_task@i,w
 21542  0EAB  1803               	btfsc	3,0
 21543  0EAC  0008               	return
 21544  0EAD  2DE2               	goto	l8419
 21545  0EAE                     __end_of_BUTTONS_task:	
 21546                           
 21547                           	psect	text78
 21548  14EB                     __ptext78:	
 21549 ;; *************** function _BUTTONS_init *****************
 21550 ;; Defined at:
 21551 ;;		line 23 in file "buttons.c"
 21552 ;; Parameters:    Size  Location     Type
 21553 ;;		None
 21554 ;; Auto vars:     Size  Location     Type
 21555 ;;		None
 21556 ;; Return value:  Size  Location     Type
 21557 ;;                  1    wreg      void 
 21558 ;; Registers used:
 21559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21560 ;; Tracked objects:
 21561 ;;		On entry : 0/0
 21562 ;;		On exit  : 0/0
 21563 ;;		Unchanged: 0/0
 21564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21568 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21569 ;;Total ram usage:        1 bytes
 21570 ;; Hardware stack levels used:    1
 21571 ;; Hardware stack levels required when called:    5
 21572 ;; This function calls:
 21573 ;;		_GPIO_init
 21574 ;;		_init
 21575 ;; This function is called by:
 21576 ;;		_main
 21577 ;; This function uses a non-reentrant model
 21578 ;;
 21579                           
 21580                           
 21581                           ;psect for function _BUTTONS_init
 21582  14EB                     _BUTTONS_init:	
 21583                           
 21584                           ;buttons.c: 24:     menu = &buttons[0];
 21585                           
 21586                           ;incstack = 0
 21587                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21588  14EB  30C0               	movlw	(low (_buttons| (0+256)))& (0+255)
 21589  14EC  0140               	movlb	0	; select bank0
 21590  14ED  00A5               	movwf	??_BUTTONS_init
 21591  14EE  0825               	movf	??_BUTTONS_init,w
 21592  14EF  0141               	movlb	1	; select bank1
 21593  14F0  00BE               	movwf	_menu^(0+128)
 21594                           
 21595                           ;buttons.c: 25:     up = &buttons[1];
 21596  14F1  30C8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 21597  14F2  0140               	movlb	0	; select bank0
 21598  14F3  00A5               	movwf	??_BUTTONS_init
 21599  14F4  0825               	movf	??_BUTTONS_init,w
 21600  14F5  0141               	movlb	1	; select bank1
 21601  14F6  00BD               	movwf	_up^(0+128)
 21602                           
 21603                           ;buttons.c: 26:     down = &buttons[2];
 21604  14F7  30D0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 21605  14F8  0140               	movlb	0	; select bank0
 21606  14F9  00A5               	movwf	??_BUTTONS_init
 21607  14FA  0825               	movf	??_BUTTONS_init,w
 21608  14FB  0141               	movlb	1	; select bank1
 21609  14FC  00BC               	movwf	_down^(0+128)
 21610                           
 21611                           ;buttons.c: 27:     enter = &buttons[3];
 21612  14FD  30D8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 21613  14FE  0140               	movlb	0	; select bank0
 21614  14FF  00A5               	movwf	??_BUTTONS_init
 21615  1500  0825               	movf	??_BUTTONS_init,w
 21616  1501  0141               	movlb	1	; select bank1
 21617  1502  00BB               	movwf	_enter^(0+128)
 21618                           
 21619                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 21620  1503  300E               	movlw	14
 21621  1504  0140               	movlb	0	; select bank0
 21622  1505  00A0               	movwf	init@port
 21623  1506  3000               	movlw	0
 21624  1507  00A1               	movwf	init@port+1
 21625  1508  3002               	movlw	2
 21626  1509  00A5               	movwf	??_BUTTONS_init
 21627  150A  0825               	movf	??_BUTTONS_init,w
 21628  150B  00A2               	movwf	init@pin
 21629  150C  0141               	movlb	1	; select bank1
 21630  150D  083E               	movf	_menu^(0+128),w
 21631  150E  3191  216F  3194   	fcall	_init
 21632                           
 21633                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 21634  1511  300C               	movlw	12
 21635  1512  0140               	movlb	0	; select bank0
 21636  1513  00A0               	movwf	init@port
 21637  1514  3000               	movlw	0
 21638  1515  00A1               	movwf	init@port+1
 21639  1516  3002               	movlw	2
 21640  1517  00A5               	movwf	??_BUTTONS_init
 21641  1518  0825               	movf	??_BUTTONS_init,w
 21642  1519  00A2               	movwf	init@pin
 21643  151A  0141               	movlb	1	; select bank1
 21644  151B  083B               	movf	_enter^(0+128),w
 21645  151C  3191  216F  3194   	fcall	_init
 21646                           
 21647                           ;buttons.c: 31:     init(down, &PORTC, 0);
 21648  151F  300E               	movlw	14
 21649  1520  0140               	movlb	0	; select bank0
 21650  1521  00A0               	movwf	init@port
 21651  1522  3000               	movlw	0
 21652  1523  00A1               	movwf	init@port+1
 21653  1524  01A2               	clrf	init@pin
 21654  1525  0141               	movlb	1	; select bank1
 21655  1526  083C               	movf	_down^(0+128),w
 21656  1527  3191  216F  3194   	fcall	_init
 21657                           
 21658                           ;buttons.c: 32:     init(up, &PORTC, 1);
 21659  152A  300E               	movlw	14
 21660  152B  0140               	movlb	0	; select bank0
 21661  152C  00A0               	movwf	init@port
 21662  152D  3000               	movlw	0
 21663  152E  00A1               	movwf	init@port+1
 21664  152F  01A2               	clrf	init@pin
 21665  1530  0AA2               	incf	init@pin,f
 21666  1531  0141               	movlb	1	; select bank1
 21667  1532  083D               	movf	_up^(0+128),w
 21668  1533  3191  216F  3194   	fcall	_init
 21669                           
 21670                           ;buttons.c: 34:     GPIO_init();
 21671  1536  319F  278E         	fcall	_GPIO_init
 21672  1538  0008               	return
 21673  1539                     __end_of_BUTTONS_init:	
 21674                           
 21675                           	psect	text79
 21676  116F                     __ptext79:	
 21677 ;; *************** function _init *****************
 21678 ;; Defined at:
 21679 ;;		line 16 in file "buttons.c"
 21680 ;; Parameters:    Size  Location     Type
 21681 ;;  btn             1    wreg     PTR struct .
 21682 ;;		 -> buttons(32), NULL(0), 
 21683 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 21684 ;;		 -> PORTA(1), PORTC(1), 
 21685 ;;  pin             1    2[BANK0 ] unsigned char 
 21686 ;; Auto vars:     Size  Location     Type
 21687 ;;  btn             1    4[BANK0 ] PTR struct .
 21688 ;;		 -> buttons(32), NULL(0), 
 21689 ;; Return value:  Size  Location     Type
 21690 ;;                  1    wreg      void 
 21691 ;; Registers used:
 21692 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21693 ;; Tracked objects:
 21694 ;;		On entry : 0/0
 21695 ;;		On exit  : 0/0
 21696 ;;		Unchanged: 0/0
 21697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21698 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21701 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21702 ;;Total ram usage:        5 bytes
 21703 ;; Hardware stack levels used:    1
 21704 ;; Hardware stack levels required when called:    4
 21705 ;; This function calls:
 21706 ;;		Nothing
 21707 ;; This function is called by:
 21708 ;;		_BUTTONS_init
 21709 ;; This function uses a non-reentrant model
 21710 ;;
 21711                           
 21712                           
 21713                           ;psect for function _init
 21714  116F                     _init:	
 21715                           
 21716                           ;incstack = 0
 21717                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 21718                           ;init@btn stored from wreg
 21719  116F  0140               	movlb	0	; select bank0
 21720  1170  00A4               	movwf	init@btn
 21721                           
 21722                           ;buttons.c: 17:     btn->port = port;
 21723  1171  0824               	movf	init@btn,w
 21724  1172  0086               	movwf	6
 21725  1173  3001               	movlw	1	; select bank2/3
 21726  1174  0087               	movwf	7
 21727  1175  0820               	movf	init@port,w
 21728  1176  3FC0               	movwi [0]fsr1
 21729  1177  0821               	movf	init@port+1,w
 21730  1178  3FC1               	movwi [1]fsr1
 21731                           
 21732                           ;buttons.c: 18:     btn->pin = pin;
 21733  1179  0822               	movf	init@pin,w
 21734  117A  00A3               	movwf	??_init
 21735  117B  0824               	movf	init@btn,w
 21736  117C  3E02               	addlw	2
 21737  117D  0086               	movwf	6
 21738  117E  3001               	movlw	1	; select bank2/3
 21739  117F  0087               	movwf	7
 21740  1180  0823               	movf	??_init,w
 21741  1181  0081               	movwf	1
 21742                           
 21743                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 21744  1182  0824               	movf	init@btn,w
 21745  1183  3E03               	addlw	3
 21746  1184  0086               	movwf	6
 21747  1185  3001               	movlw	1	; select bank2/3
 21748  1186  0087               	movwf	7
 21749  1187  0181               	clrf	1
 21750                           
 21751                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 21752  1188  0824               	movf	init@btn,w
 21753  1189  3E07               	addlw	7
 21754  118A  0086               	movwf	6
 21755  118B  3001               	movlw	1	; select bank2/3
 21756  118C  0087               	movwf	7
 21757  118D  0181               	clrf	1
 21758  118E  0008               	return
 21759  118F                     __end_of_init:	
 21760                           
 21761                           	psect	text80
 21762  1F8E                     __ptext80:	
 21763 ;; *************** function _GPIO_init *****************
 21764 ;; Defined at:
 21765 ;;		line 38 in file "buttons.c"
 21766 ;; Parameters:    Size  Location     Type
 21767 ;;		None
 21768 ;; Auto vars:     Size  Location     Type
 21769 ;;		None
 21770 ;; Return value:  Size  Location     Type
 21771 ;;                  1    wreg      void 
 21772 ;; Registers used:
 21773 ;;		None
 21774 ;; Tracked objects:
 21775 ;;		On entry : 0/0
 21776 ;;		On exit  : 0/0
 21777 ;;		Unchanged: 0/0
 21778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21783 ;;Total ram usage:        0 bytes
 21784 ;; Hardware stack levels used:    1
 21785 ;; Hardware stack levels required when called:    4
 21786 ;; This function calls:
 21787 ;;		Nothing
 21788 ;; This function is called by:
 21789 ;;		_BUTTONS_init
 21790 ;; This function uses a non-reentrant model
 21791 ;;
 21792                           
 21793                           
 21794                           ;psect for function _GPIO_init
 21795  1F8E                     _GPIO_init:	
 21796                           
 21797                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 21798                           
 21799                           ;incstack = 0
 21800                           ; Regs used in _GPIO_init: []
 21801  1F8E  0140               	movlb	0	; select bank0
 21802  1F8F  1512               	bsf	18,2	;volatile
 21803                           
 21804                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 21805  1F90  017E               	movlb	62	; select bank62
 21806  1F91  1138               	bcf	56,2	;volatile
 21807                           
 21808                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 21809  1F92  1539               	bsf	57,2	;volatile
 21810                           
 21811                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 21812  1F93  0140               	movlb	0	; select bank0
 21813  1F94  1414               	bsf	20,0	;volatile
 21814                           
 21815                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 21816  1F95  1494               	bsf	20,1	;volatile
 21817                           
 21818                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 21819  1F96  1514               	bsf	20,2	;volatile
 21820                           
 21821                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 21822  1F97  017E               	movlb	62	; select bank62
 21823  1F98  104E               	bcf	78,0	;volatile
 21824                           
 21825                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 21826  1F99  10CE               	bcf	78,1	;volatile
 21827                           
 21828                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 21829  1F9A  114E               	bcf	78,2	;volatile
 21830                           
 21831                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 21832  1F9B  144F               	bsf	79,0	;volatile
 21833                           
 21834                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 21835  1F9C  14CF               	bsf	79,1	;volatile
 21836                           
 21837                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 21838  1F9D  154F               	bsf	79,2	;volatile
 21839  1F9E  0008               	return
 21840  1F9F                     __end_of_GPIO_init:	
 21841                           
 21842                           	psect	text81
 21843  0C0F                     __ptext81:	
 21844 ;; *************** function _BEAT_task *****************
 21845 ;; Defined at:
 21846 ;;		line 65 in file "beat.c"
 21847 ;; Parameters:    Size  Location     Type
 21848 ;;		None
 21849 ;; Auto vars:     Size  Location     Type
 21850 ;;  offset          2   10[BANK0 ] unsigned short 
 21851 ;; Return value:  Size  Location     Type
 21852 ;;                  1    wreg      void 
 21853 ;; Registers used:
 21854 ;;		wreg, status,2, status,0, pclath, cstack
 21855 ;; Tracked objects:
 21856 ;;		On entry : 0/0
 21857 ;;		On exit  : 0/0
 21858 ;;		Unchanged: 0/0
 21859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21861 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21862 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21863 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21864 ;;Total ram usage:        4 bytes
 21865 ;; Hardware stack levels used:    1
 21866 ;; Hardware stack levels required when called:    5
 21867 ;; This function calls:
 21868 ;;		_ADCC_SetUpperThreshold
 21869 ;;		_CLOCK_getTime
 21870 ;;		___lwdiv
 21871 ;; This function is called by:
 21872 ;;		_main
 21873 ;; This function uses a non-reentrant model
 21874 ;;
 21875                           
 21876                           
 21877                           ;psect for function _BEAT_task
 21878  0C0F                     _BEAT_task:	
 21879                           
 21880                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 21881                           
 21882                           ;incstack = 0
 21883                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 21884  0C0F  319E  26C5  318C   	fcall	_CLOCK_getTime
 21885  0C12  0142               	movlb	2	; select bank2
 21886  0C13  083E               	movf	_lastRun^(0+256),w
 21887  0C14  0140               	movlb	0	; select bank0
 21888  0C15  0220               	subwf	?_CLOCK_getTime,w
 21889  0C16  00A8               	movwf	??_BEAT_task
 21890  0C17  0142               	movlb	2	; select bank2
 21891  0C18  083F               	movf	(_lastRun+1)^(0+256),w
 21892  0C19  0140               	movlb	0	; select bank0
 21893  0C1A  3B21               	subwfb	?_CLOCK_getTime+1,w
 21894  0C1B  00A9               	movwf	??_BEAT_task+1
 21895  0C1C  0142               	movlb	2	; select bank2
 21896  0C1D  0867               	movf	(_delay+1)^(0+256),w
 21897  0C1E  0140               	movlb	0	; select bank0
 21898  0C1F  0229               	subwf	??_BEAT_task+1,w
 21899  0C20  1D03               	skipz
 21900  0C21  2C26               	goto	u8965
 21901  0C22  0142               	movlb	2	; select bank2
 21902  0C23  0866               	movf	_delay^(0+256),w
 21903  0C24  0140               	movlb	0	; select bank0
 21904  0C25  0228               	subwf	??_BEAT_task,w
 21905  0C26                     u8965:	
 21906  0C26  1C03               	btfss	3,0
 21907  0C27  0008               	return
 21908                           
 21909                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 21910  0C28  319E  26C5  318C   	fcall	_CLOCK_getTime
 21911  0C2B  0140               	movlb	0	; select bank0
 21912  0C2C  0821               	movf	?_CLOCK_getTime+1,w
 21913  0C2D  0142               	movlb	2	; select bank2
 21914  0C2E  00BF               	movwf	(_lastRun+1)^(0+256)
 21915  0C2F  0140               	movlb	0	; select bank0
 21916  0C30  0820               	movf	?_CLOCK_getTime,w
 21917  0C31  0142               	movlb	2	; select bank2
 21918  0C32  00BE               	movwf	_lastRun^(0+256)
 21919                           
 21920                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 21921  0C33  0141               	movlb	1	; select bank1
 21922  0C34  032E               	decf	_thresholdExceeded^(0+128),w
 21923  0C35  1D03               	btfss	3,2
 21924  0C36  2C3D               	goto	l8633
 21925                           
 21926                           ;beat.c: 77:         thresholdCount++;
 21927  0C37  3001               	movlw	1
 21928  0C38  0142               	movlb	2	; select bank2
 21929  0C39  07BC               	addwf	_thresholdCount^(0+256),f
 21930  0C3A  3000               	movlw	0
 21931  0C3B  3DBD               	addwfc	(_thresholdCount+1)^(0+256),f
 21932                           
 21933                           ;beat.c: 78:     } else {
 21934  0C3C  2C44               	goto	l8637
 21935  0C3D                     l8633:	
 21936                           
 21937                           ;beat.c: 80:         thresholdCount = 0;
 21938  0C3D  0142               	movlb	2	; select bank2
 21939  0C3E  01BC               	clrf	_thresholdCount^(0+256)
 21940  0C3F  01BD               	clrf	(_thresholdCount+1)^(0+256)
 21941                           
 21942                           ;beat.c: 81:         delay = 30;
 21943  0C40  301E               	movlw	30
 21944  0C41  00E6               	movwf	_delay^(0+256)
 21945  0C42  3000               	movlw	0
 21946  0C43  00E7               	movwf	(_delay^(0+256)+1)
 21947  0C44                     l8637:	
 21948                           
 21949                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 21950  0C44  0141               	movlb	1	; select bank1
 21951  0C45  032E               	decf	_thresholdExceeded^(0+128),w
 21952  0C46  1D03               	btfss	3,2
 21953  0C47  2C8B               	goto	l8655
 21954  0C48  082D               	movf	_lastDetected^(0+128),w
 21955  0C49  1D03               	btfss	3,2
 21956  0C4A  2C8B               	goto	l8655
 21957                           
 21958                           ;beat.c: 89:         detected = 1;
 21959  0C4B  01AF               	clrf	_detected^(0+128)
 21960  0C4C  0AAF               	incf	_detected^(0+128),f
 21961                           
 21962                           ;beat.c: 92:         delay = 50;
 21963  0C4D  3032               	movlw	50
 21964  0C4E  0142               	movlb	2	; select bank2
 21965  0C4F  00E6               	movwf	_delay^(0+256)
 21966  0C50  3000               	movlw	0
 21967  0C51  00E7               	movwf	(_delay^(0+256)+1)
 21968                           
 21969                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 21970  0C52  319E  26C5  318C   	fcall	_CLOCK_getTime
 21971  0C55  0142               	movlb	2	; select bank2
 21972  0C56  0842               	movf	_lastBeat^(0+256),w
 21973  0C57  0140               	movlb	0	; select bank0
 21974  0C58  0220               	subwf	?_CLOCK_getTime,w
 21975  0C59  00AA               	movwf	BEAT_task@offset
 21976  0C5A  0142               	movlb	2	; select bank2
 21977  0C5B  0843               	movf	(_lastBeat+1)^(0+256),w
 21978  0C5C  0140               	movlb	0	; select bank0
 21979  0C5D  3B21               	subwfb	?_CLOCK_getTime+1,w
 21980  0C5E  00AB               	movwf	BEAT_task@offset+1
 21981                           
 21982                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 21983  0C5F  319E  26C5  318C   	fcall	_CLOCK_getTime
 21984  0C62  0140               	movlb	0	; select bank0
 21985  0C63  0821               	movf	?_CLOCK_getTime+1,w
 21986  0C64  0142               	movlb	2	; select bank2
 21987  0C65  00C3               	movwf	(_lastBeat+1)^(0+256)
 21988  0C66  0140               	movlb	0	; select bank0
 21989  0C67  0820               	movf	?_CLOCK_getTime,w
 21990  0C68  0142               	movlb	2	; select bank2
 21991  0C69  00C2               	movwf	_lastBeat^(0+256)
 21992                           
 21993                           ;beat.c: 99:         if (offset < 150)
 21994  0C6A  3000               	movlw	0
 21995  0C6B  0140               	movlb	0	; select bank0
 21996  0C6C  022B               	subwf	BEAT_task@offset+1,w
 21997  0C6D  3096               	movlw	150
 21998  0C6E  1903               	skipnz
 21999  0C6F  022A               	subwf	BEAT_task@offset,w
 22000  0C70  1803               	skipnc
 22001  0C71  2C78               	goto	l8653
 22002                           
 22003                           ;beat.c: 100:             bpm = 400;
 22004  0C72  3090               	movlw	144
 22005  0C73  0142               	movlb	2	; select bank2
 22006  0C74  00C0               	movwf	_bpm^(0+256)
 22007  0C75  3001               	movlw	1
 22008  0C76  00C1               	movwf	(_bpm^(0+256)+1)
 22009  0C77  2C8B               	goto	l8655
 22010  0C78                     l8653:	
 22011                           
 22012                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 22013  0C78  082B               	movf	BEAT_task@offset+1,w
 22014  0C79  00A1               	movwf	___lwdiv@divisor+1
 22015  0C7A  082A               	movf	BEAT_task@offset,w
 22016  0C7B  00A0               	movwf	___lwdiv@divisor
 22017  0C7C  3060               	movlw	96
 22018  0C7D  00A2               	movwf	___lwdiv@dividend
 22019  0C7E  30EA               	movlw	234
 22020  0C7F  00A3               	movwf	___lwdiv@dividend+1
 22021  0C80  3194  240D  318C   	fcall	___lwdiv
 22022  0C83  0140               	movlb	0	; select bank0
 22023  0C84  0821               	movf	?___lwdiv+1,w
 22024  0C85  0142               	movlb	2	; select bank2
 22025  0C86  00C1               	movwf	(_bpm+1)^(0+256)
 22026  0C87  0140               	movlb	0	; select bank0
 22027  0C88  0820               	movf	?___lwdiv,w
 22028  0C89  0142               	movlb	2	; select bank2
 22029  0C8A  00C0               	movwf	_bpm^(0+256)
 22030  0C8B                     l8655:	
 22031                           
 22032                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 22033  0C8B  0141               	movlb	1	; select bank1
 22034  0C8C  082E               	movf	_thresholdExceeded^(0+128),w
 22035  0C8D  0140               	movlb	0	; select bank0
 22036  0C8E  00A8               	movwf	??_BEAT_task
 22037  0C8F  0828               	movf	??_BEAT_task,w
 22038  0C90  0141               	movlb	1	; select bank1
 22039  0C91  00AD               	movwf	_lastDetected^(0+128)
 22040                           
 22041                           ;beat.c: 109:     thresholdExceeded = 0;
 22042  0C92  01AE               	clrf	_thresholdExceeded^(0+128)
 22043                           
 22044                           ;beat.c: 111:     if (thresholdCount > 3) {
 22045  0C93  0142               	movlb	2	; select bank2
 22046  0C94  083D               	movf	(_thresholdCount+1)^(0+256),w
 22047  0C95  3A80               	xorlw	128
 22048  0C96  0140               	movlb	0	; select bank0
 22049  0C97  00A8               	movwf	??_BEAT_task
 22050  0C98  3080               	movlw	128
 22051  0C99  0228               	subwf	??_BEAT_task,w
 22052  0C9A  1D03               	skipz
 22053  0C9B  2C9F               	goto	u9015
 22054  0C9C  3004               	movlw	4
 22055  0C9D  0142               	movlb	2	; select bank2
 22056  0C9E  023C               	subwf	_thresholdCount^(0+256),w
 22057  0C9F                     u9015:	
 22058  0C9F  1C03               	skipc
 22059  0CA0  2CBE               	goto	l8669
 22060                           
 22061                           ;beat.c: 112:         threshold += 1;
 22062  0CA1  3001               	movlw	1
 22063  0CA2  0142               	movlb	2	; select bank2
 22064  0CA3  07E8               	addwf	_threshold^(0+256),f
 22065  0CA4  3000               	movlw	0
 22066  0CA5  3DE9               	addwfc	(_threshold+1)^(0+256),f
 22067                           
 22068                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 22069  0CA6  0869               	movf	(_threshold+1)^(0+256),w
 22070  0CA7  0140               	movlb	0	; select bank0
 22071  0CA8  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22072  0CA9  0142               	movlb	2	; select bank2
 22073  0CAA  0868               	movf	_threshold^(0+256),w
 22074  0CAB  0140               	movlb	0	; select bank0
 22075  0CAC  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22076  0CAD  319E  26B3  318C   	fcall	_ADCC_SetUpperThreshold
 22077                           
 22078                           ;beat.c: 114:         thresholdCount = 0;
 22079  0CB0  0142               	movlb	2	; select bank2
 22080  0CB1  01BC               	clrf	_thresholdCount^(0+256)
 22081  0CB2  01BD               	clrf	(_thresholdCount+1)^(0+256)
 22082                           
 22083                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 22084  0CB3  319E  26C5         	fcall	_CLOCK_getTime
 22085  0CB5  0140               	movlb	0	; select bank0
 22086  0CB6  0821               	movf	?_CLOCK_getTime+1,w
 22087  0CB7  0142               	movlb	2	; select bank2
 22088  0CB8  00C3               	movwf	(_lastBeat+1)^(0+256)
 22089  0CB9  0140               	movlb	0	; select bank0
 22090  0CBA  0820               	movf	?_CLOCK_getTime,w
 22091  0CBB  0142               	movlb	2	; select bank2
 22092  0CBC  00C2               	movwf	_lastBeat^(0+256)
 22093                           
 22094                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 22095  0CBD  0008               	return
 22096  0CBE                     l8669:	
 22097  0CBE  319E  26C5  318C   	fcall	_CLOCK_getTime
 22098  0CC1  0142               	movlb	2	; select bank2
 22099  0CC2  0842               	movf	_lastBeat^(0+256),w
 22100  0CC3  0140               	movlb	0	; select bank0
 22101  0CC4  0220               	subwf	?_CLOCK_getTime,w
 22102  0CC5  00A8               	movwf	??_BEAT_task
 22103  0CC6  0142               	movlb	2	; select bank2
 22104  0CC7  0843               	movf	(_lastBeat+1)^(0+256),w
 22105  0CC8  0140               	movlb	0	; select bank0
 22106  0CC9  3B21               	subwfb	?_CLOCK_getTime+1,w
 22107  0CCA  00A9               	movwf	??_BEAT_task+1
 22108  0CCB  3003               	movlw	3
 22109  0CCC  0229               	subwf	??_BEAT_task+1,w
 22110  0CCD  30E9               	movlw	233
 22111  0CCE  1903               	skipnz
 22112  0CCF  0228               	subwf	??_BEAT_task,w
 22113  0CD0  1C03               	skipc
 22114  0CD1  0008               	return
 22115                           
 22116                           ;beat.c: 119:         threshold -= 1;
 22117  0CD2  3001               	movlw	1
 22118  0CD3  0142               	movlb	2	; select bank2
 22119  0CD4  02E8               	subwf	_threshold^(0+256),f
 22120  0CD5  3000               	movlw	0
 22121  0CD6  3BE9               	subwfb	(_threshold+1)^(0+256),f
 22122                           
 22123                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 22124  0CD7  0869               	movf	(_threshold+1)^(0+256),w
 22125  0CD8  0140               	movlb	0	; select bank0
 22126  0CD9  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22127  0CDA  0142               	movlb	2	; select bank2
 22128  0CDB  0868               	movf	_threshold^(0+256),w
 22129  0CDC  0140               	movlb	0	; select bank0
 22130  0CDD  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22131  0CDE  319E  26B3         	fcall	_ADCC_SetUpperThreshold
 22132  0CE0  0008               	return
 22133  0CE1                     __end_of_BEAT_task:	
 22134                           
 22135                           	psect	text82
 22136  140D                     __ptext82:	
 22137 ;; *************** function ___lwdiv *****************
 22138 ;; Defined at:
 22139 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 22140 ;; Parameters:    Size  Location     Type
 22141 ;;  divisor         2    0[BANK0 ] unsigned int 
 22142 ;;  dividend        2    2[BANK0 ] unsigned int 
 22143 ;; Auto vars:     Size  Location     Type
 22144 ;;  quotient        2    5[BANK0 ] unsigned int 
 22145 ;;  counter         1    7[BANK0 ] unsigned char 
 22146 ;; Return value:  Size  Location     Type
 22147 ;;                  2    0[BANK0 ] unsigned int 
 22148 ;; Registers used:
 22149 ;;		wreg, status,2, status,0
 22150 ;; Tracked objects:
 22151 ;;		On entry : 0/0
 22152 ;;		On exit  : 0/0
 22153 ;;		Unchanged: 0/0
 22154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22155 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22156 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22157 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22158 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22159 ;;Total ram usage:        8 bytes
 22160 ;; Hardware stack levels used:    1
 22161 ;; Hardware stack levels required when called:    4
 22162 ;; This function calls:
 22163 ;;		Nothing
 22164 ;; This function is called by:
 22165 ;;		_TM1650_fastPrintNum
 22166 ;;		_BEAT_task
 22167 ;; This function uses a non-reentrant model
 22168 ;;
 22169                           
 22170                           
 22171                           ;psect for function ___lwdiv
 22172  140D                     ___lwdiv:	
 22173                           
 22174                           ;incstack = 0
 22175                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 22176  140D  0140               	movlb	0	; select bank0
 22177  140E  01A5               	clrf	___lwdiv@quotient
 22178  140F  01A6               	clrf	___lwdiv@quotient+1
 22179  1410  0820               	movf	___lwdiv@divisor,w
 22180  1411  0421               	iorwf	___lwdiv@divisor+1,w
 22181  1412  1903               	btfsc	3,2
 22182  1413  2C3D               	goto	l4897
 22183  1414  01A7               	clrf	___lwdiv@counter
 22184  1415  0AA7               	incf	___lwdiv@counter,f
 22185  1416                     l4885:	
 22186  1416  1BA1               	btfsc	___lwdiv@divisor+1,7
 22187  1417  2C22               	goto	l4887
 22188  1418  3001               	movlw	1
 22189  1419                     u3565:	
 22190  1419  35A0               	lslf	___lwdiv@divisor,f
 22191  141A  0DA1               	rlf	___lwdiv@divisor+1,f
 22192  141B  0B89               	decfsz	9,f
 22193  141C  2C19               	goto	u3565
 22194  141D  3001               	movlw	1
 22195  141E  00A4               	movwf	??___lwdiv
 22196  141F  0824               	movf	??___lwdiv,w
 22197  1420  07A7               	addwf	___lwdiv@counter,f
 22198  1421  2C16               	goto	l4885
 22199  1422                     l4887:	
 22200  1422  3001               	movlw	1
 22201  1423                     u3585:	
 22202  1423  35A5               	lslf	___lwdiv@quotient,f
 22203  1424  0DA6               	rlf	___lwdiv@quotient+1,f
 22204  1425  0B89               	decfsz	9,f
 22205  1426  2C23               	goto	u3585
 22206  1427  0821               	movf	___lwdiv@divisor+1,w
 22207  1428  0223               	subwf	___lwdiv@dividend+1,w
 22208  1429  1D03               	skipz
 22209  142A  2C2D               	goto	u3595
 22210  142B  0820               	movf	___lwdiv@divisor,w
 22211  142C  0222               	subwf	___lwdiv@dividend,w
 22212  142D                     u3595:	
 22213  142D  1C03               	skipc
 22214  142E  2C34               	goto	l4893
 22215  142F  0820               	movf	___lwdiv@divisor,w
 22216  1430  02A2               	subwf	___lwdiv@dividend,f
 22217  1431  0821               	movf	___lwdiv@divisor+1,w
 22218  1432  3BA3               	subwfb	___lwdiv@dividend+1,f
 22219  1433  1425               	bsf	___lwdiv@quotient,0
 22220  1434                     l4893:	
 22221  1434  3001               	movlw	1
 22222  1435                     u3605:	
 22223  1435  36A1               	lsrf	___lwdiv@divisor+1,f
 22224  1436  0CA0               	rrf	___lwdiv@divisor,f
 22225  1437  0B89               	decfsz	9,f
 22226  1438  2C35               	goto	u3605
 22227  1439  3001               	movlw	1
 22228  143A  02A7               	subwf	___lwdiv@counter,f
 22229  143B  1D03               	btfss	3,2
 22230  143C  2C22               	goto	l4887
 22231  143D                     l4897:	
 22232  143D  0826               	movf	___lwdiv@quotient+1,w
 22233  143E  00A1               	movwf	?___lwdiv+1
 22234  143F  0825               	movf	___lwdiv@quotient,w
 22235  1440  00A0               	movwf	?___lwdiv
 22236  1441  0008               	return
 22237  1442                     __end_of___lwdiv:	
 22238                           
 22239                           	psect	text83
 22240  1EC5                     __ptext83:	
 22241 ;; *************** function _CLOCK_getTime *****************
 22242 ;; Defined at:
 22243 ;;		line 16 in file "clock.c"
 22244 ;; Parameters:    Size  Location     Type
 22245 ;;		None
 22246 ;; Auto vars:     Size  Location     Type
 22247 ;;		None
 22248 ;; Return value:  Size  Location     Type
 22249 ;;                  2    0[BANK0 ] unsigned short 
 22250 ;; Registers used:
 22251 ;;		wreg
 22252 ;; Tracked objects:
 22253 ;;		On entry : 0/0
 22254 ;;		On exit  : 0/0
 22255 ;;		Unchanged: 0/0
 22256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22257 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22260 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22261 ;;Total ram usage:        2 bytes
 22262 ;; Hardware stack levels used:    1
 22263 ;; Hardware stack levels required when called:    4
 22264 ;; This function calls:
 22265 ;;		Nothing
 22266 ;; This function is called by:
 22267 ;;		_main
 22268 ;;		_BUTTONS_task
 22269 ;;		_CONTROLLER_task
 22270 ;;		_CONTROL_DMX
 22271 ;;		_CONTROL_MANUAL
 22272 ;;		_BEAT_task
 22273 ;;		_LED_task_BEAT_STROBE
 22274 ;; This function uses a non-reentrant model
 22275 ;;
 22276                           
 22277                           
 22278                           ;psect for function _CLOCK_getTime
 22279  1EC5                     _CLOCK_getTime:	
 22280                           
 22281                           ;clock.c: 17:     return currentTime;
 22282                           
 22283                           ;incstack = 0
 22284                           ; Regs used in _CLOCK_getTime: [wreg]
 22285  1EC5  0142               	movlb	2	; select bank2
 22286  1EC6  0847               	movf	(_currentTime+1)^(0+256),w
 22287  1EC7  0140               	movlb	0	; select bank0
 22288  1EC8  00A1               	movwf	?_CLOCK_getTime+1
 22289  1EC9  0142               	movlb	2	; select bank2
 22290  1ECA  0846               	movf	_currentTime^(0+256),w
 22291  1ECB  0140               	movlb	0	; select bank0
 22292  1ECC  00A0               	movwf	?_CLOCK_getTime
 22293  1ECD  0008               	return
 22294  1ECE                     __end_of_CLOCK_getTime:	
 22295                           
 22296                           	psect	text84
 22297  102C                     __ptext84:	
 22298 ;; *************** function _BEAT_init *****************
 22299 ;; Defined at:
 22300 ;;		line 39 in file "beat.c"
 22301 ;; Parameters:    Size  Location     Type
 22302 ;;		None
 22303 ;; Auto vars:     Size  Location     Type
 22304 ;;		None
 22305 ;; Return value:  Size  Location     Type
 22306 ;;                  1    wreg      void 
 22307 ;; Registers used:
 22308 ;;		wreg, status,2, status,0, pclath, cstack
 22309 ;; Tracked objects:
 22310 ;;		On entry : 0/0
 22311 ;;		On exit  : 0/0
 22312 ;;		Unchanged: 0/0
 22313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22318 ;;Total ram usage:        0 bytes
 22319 ;; Hardware stack levels used:    1
 22320 ;; Hardware stack levels required when called:    5
 22321 ;; This function calls:
 22322 ;;		_ADCC_SetADTIInterruptHandler
 22323 ;;		_ADCC_SetUpperThreshold
 22324 ;;		_ADCC_StartConversion
 22325 ;; This function is called by:
 22326 ;;		_main
 22327 ;; This function uses a non-reentrant model
 22328 ;;
 22329                           
 22330                           
 22331                           ;psect for function _BEAT_init
 22332  102C                     _BEAT_init:	
 22333                           
 22334                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 22335                           
 22336                           ;incstack = 0
 22337                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 22338  102C  0142               	movlb	2	; select bank2
 22339  102D  0869               	movf	(_threshold+1)^(0+256),w
 22340  102E  0140               	movlb	0	; select bank0
 22341  102F  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22342  1030  0142               	movlb	2	; select bank2
 22343  1031  0868               	movf	_threshold^(0+256),w
 22344  1032  0140               	movlb	0	; select bank0
 22345  1033  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22346  1034  319E  26B3  3190   	fcall	_ADCC_SetUpperThreshold
 22347                           
 22348                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 22349  1037  307D               	movlw	low _adcThresholdHandler
 22350  1038  0140               	movlb	0	; select bank0
 22351  1039  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 22352  103A  301E               	movlw	high _adcThresholdHandler
 22353  103B  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 22354  103C  319E  26AA  3190   	fcall	_ADCC_SetADTIInterruptHandler
 22355                           
 22356                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 22357  103F  300F               	movlw	15
 22358  1040  319E  26BC         	fcall	_ADCC_StartConversion
 22359  1042  0008               	return
 22360  1043                     __end_of_BEAT_init:	
 22361                           
 22362                           	psect	text85
 22363  1EBC                     __ptext85:	
 22364 ;; *************** function _ADCC_StartConversion *****************
 22365 ;; Defined at:
 22366 ;;		line 121 in file "mcc_generated_files/adcc.c"
 22367 ;; Parameters:    Size  Location     Type
 22368 ;;  channel         1    wreg     enum E10867
 22369 ;; Auto vars:     Size  Location     Type
 22370 ;;  channel         1    0[BANK0 ] enum E10867
 22371 ;; Return value:  Size  Location     Type
 22372 ;;                  1    wreg      void 
 22373 ;; Registers used:
 22374 ;;		wreg
 22375 ;; Tracked objects:
 22376 ;;		On entry : 0/0
 22377 ;;		On exit  : 0/0
 22378 ;;		Unchanged: 0/0
 22379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22383 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22384 ;;Total ram usage:        1 bytes
 22385 ;; Hardware stack levels used:    1
 22386 ;; Hardware stack levels required when called:    4
 22387 ;; This function calls:
 22388 ;;		Nothing
 22389 ;; This function is called by:
 22390 ;;		_BEAT_init
 22391 ;; This function uses a non-reentrant model
 22392 ;;
 22393                           
 22394                           
 22395                           ;psect for function _ADCC_StartConversion
 22396  1EBC                     _ADCC_StartConversion:	
 22397                           
 22398                           ;incstack = 0
 22399                           ; Regs used in _ADCC_StartConversion: [wreg]
 22400                           ;ADCC_StartConversion@channel stored from wreg
 22401  1EBC  0140               	movlb	0	; select bank0
 22402  1EBD  00A0               	movwf	ADCC_StartConversion@channel
 22403                           
 22404                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 22405  1EBE  0820               	movf	ADCC_StartConversion@channel,w
 22406  1EBF  0141               	movlb	1	; select bank1
 22407  1EC0  009F               	movwf	31	;volatile
 22408                           
 22409                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 22410  1EC1  0142               	movlb	2	; select bank2
 22411  1EC2  1791               	bsf	17,7	;volatile
 22412                           
 22413                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 22414  1EC3  1411               	bsf	17,0	;volatile
 22415  1EC4  0008               	return
 22416  1EC5                     __end_of_ADCC_StartConversion:	
 22417                           
 22418                           	psect	text86
 22419  1EB3                     __ptext86:	
 22420 ;; *************** function _ADCC_SetUpperThreshold *****************
 22421 ;; Defined at:
 22422 ;;		line 251 in file "mcc_generated_files/adcc.c"
 22423 ;; Parameters:    Size  Location     Type
 22424 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 22425 ;; Auto vars:     Size  Location     Type
 22426 ;;		None
 22427 ;; Return value:  Size  Location     Type
 22428 ;;                  1    wreg      void 
 22429 ;; Registers used:
 22430 ;;		wreg, status,2
 22431 ;; Tracked objects:
 22432 ;;		On entry : 0/0
 22433 ;;		On exit  : 0/0
 22434 ;;		Unchanged: 0/0
 22435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22436 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22439 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22440 ;;Total ram usage:        2 bytes
 22441 ;; Hardware stack levels used:    1
 22442 ;; Hardware stack levels required when called:    4
 22443 ;; This function calls:
 22444 ;;		Nothing
 22445 ;; This function is called by:
 22446 ;;		_BEAT_init
 22447 ;;		_BEAT_task
 22448 ;; This function uses a non-reentrant model
 22449 ;;
 22450                           
 22451                           
 22452                           ;psect for function _ADCC_SetUpperThreshold
 22453  1EB3                     _ADCC_SetUpperThreshold:	
 22454                           
 22455                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 22456                           
 22457                           ;incstack = 0
 22458                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 22459  1EB3  0140               	movlb	0	; select bank0
 22460  1EB4  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 22461  1EB5  0141               	movlb	1	; select bank1
 22462  1EB6  008F               	movwf	15	;volatile
 22463                           
 22464                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 22465  1EB7  0140               	movlb	0	; select bank0
 22466  1EB8  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 22467  1EB9  0141               	movlb	1	; select bank1
 22468  1EBA  008E               	movwf	14	;volatile
 22469  1EBB  0008               	return
 22470  1EBC                     __end_of_ADCC_SetUpperThreshold:	
 22471                           
 22472                           	psect	text87
 22473  1EAA                     __ptext87:	
 22474 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 22475 ;; Defined at:
 22476 ;;		line 317 in file "mcc_generated_files/adcc.c"
 22477 ;; Parameters:    Size  Location     Type
 22478 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 22479 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 22480 ;; Auto vars:     Size  Location     Type
 22481 ;;		None
 22482 ;; Return value:  Size  Location     Type
 22483 ;;                  1    wreg      void 
 22484 ;; Registers used:
 22485 ;;		wreg
 22486 ;; Tracked objects:
 22487 ;;		On entry : 0/0
 22488 ;;		On exit  : 0/0
 22489 ;;		Unchanged: 0/0
 22490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22494 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22495 ;;Total ram usage:        2 bytes
 22496 ;; Hardware stack levels used:    1
 22497 ;; Hardware stack levels required when called:    4
 22498 ;; This function calls:
 22499 ;;		Nothing
 22500 ;; This function is called by:
 22501 ;;		_ADCC_Initialize
 22502 ;;		_BEAT_init
 22503 ;; This function uses a non-reentrant model
 22504 ;;
 22505                           
 22506                           
 22507                           ;psect for function _ADCC_SetADTIInterruptHandler
 22508  1EAA                     _ADCC_SetADTIInterruptHandler:	
 22509                           
 22510                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 22511                           
 22512                           ;incstack = 0
 22513                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 22514  1EAA  0140               	movlb	0	; select bank0
 22515  1EAB  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 22516  1EAC  0142               	movlb	2	; select bank2
 22517  1EAD  00D9               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 22518  1EAE  0140               	movlb	0	; select bank0
 22519  1EAF  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 22520  1EB0  0142               	movlb	2	; select bank2
 22521  1EB1  00D8               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 22522  1EB2  0008               	return
 22523  1EB3                     __end_of_ADCC_SetADTIInterruptHandler:	
 22524                           
 22525                           	psect	intentry
 22526  0004                     __pintentry:	
 22527 ;; *************** function _INTERRUPT_InterruptManager *****************
 22528 ;; Defined at:
 22529 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22530 ;; Parameters:    Size  Location     Type
 22531 ;;		None
 22532 ;; Auto vars:     Size  Location     Type
 22533 ;;		None
 22534 ;; Return value:  Size  Location     Type
 22535 ;;                  1    wreg      void 
 22536 ;; Registers used:
 22537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22538 ;; Tracked objects:
 22539 ;;		On entry : 0/0
 22540 ;;		On exit  : 0/0
 22541 ;;		Unchanged: 0/0
 22542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22547 ;;Total ram usage:        0 bytes
 22548 ;; Hardware stack levels used:    1
 22549 ;; Hardware stack levels required when called:    3
 22550 ;; This function calls:
 22551 ;;		Absolute function
 22552 ;;		_ADCC_ThresholdISR
 22553 ;;		_DMX_interrupt
 22554 ;;		_EUSART1_Receive_ISR
 22555 ;;		_I2C1_BusCollisionISR
 22556 ;;		_I2C1_ISR
 22557 ;;		_TMR0_ISR
 22558 ;; This function is called by:
 22559 ;;		Interrupt level 1
 22560 ;; This function uses a non-reentrant model
 22561 ;;
 22562                           
 22563  0004                     _INTERRUPT_InterruptManager:	
 22564                           
 22565                           ;incstack = 0
 22566 ;; hardware stack exceeded
 22567  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 22568                           
 22569                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22570  0005  3180               	pagesel	$
 22571                           
 22572                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 22573  0006  014E               	movlb	14	; select bank14
 22574  0007  1A96               	btfsc	22,5	;volatile
 22575  0008  1E8C               	btfss	12,5	;volatile
 22576  0009  280E               	goto	i1l427
 22577                           
 22578                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 22579  000A  319F  2753  3180   	fcall	_TMR0_ISR
 22580                           
 22581                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 22582  000D  282E               	goto	i1l439
 22583  000E                     i1l427:	
 22584                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 22585                           
 22586  000E  1F0B               	btfss	11,6	;volatile
 22587  000F  282E               	goto	i1l439
 22588                           
 22589                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 22590  0010  1899               	btfsc	25,1	;volatile
 22591  0011  1C8F               	btfss	15,1	;volatile
 22592  0012  2817               	goto	i1l430
 22593                           
 22594                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 22595  0013  319E  2677  3180   	fcall	_I2C1_BusCollisionISR
 22596                           
 22597                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 22598  0016  282E               	goto	i1l439
 22599  0017                     i1l430:	
 22600                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 22601                           
 22602  0017  1819               	btfsc	25,0	;volatile
 22603  0018  1C0F               	btfss	15,0	;volatile
 22604  0019  281E               	goto	i1l432
 22605                           
 22606                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 22607  001A  318E  26AE  3180   	fcall	_I2C1_ISR
 22608                           
 22609                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 22610  001D  282E               	goto	i1l439
 22611  001E                     i1l432:	
 22612                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 22613                           
 22614  001E  1897               	btfsc	23,1	;volatile
 22615  001F  1C8D               	btfss	13,1	;volatile
 22616  0020  2825               	goto	i1l434
 22617                           
 22618                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 22619  0021  319F  2746  3180   	fcall	_ADCC_ThresholdISR
 22620                           
 22621                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 22622  0024  282E               	goto	i1l439
 22623  0025                     i1l434:	
 22624                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 22625                           
 22626  0025  1A99               	btfsc	25,5	;volatile
 22627  0026  1E8F               	btfss	15,5	;volatile
 22628  0027  282E               	goto	i1l439
 22629                           
 22630                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 22631  0028  0142               	movlb	2	; select bank2
 22632  0029  0863               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 22633  002A  008A               	movwf	10
 22634  002B  0862               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 22635  002C  000A               	callw
 22636  002D  3180               	pagesel	$
 22637  002E                     i1l439:	
 22638                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 22639                           
 22640  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 22641  002F  0009               	retfie
 22642  0030                     __end_of_INTERRUPT_InterruptManager:	
 22643                           
 22644                           	psect	text89
 22645  1F53                     __ptext89:	
 22646 ;; *************** function _TMR0_ISR *****************
 22647 ;; Defined at:
 22648 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 22649 ;; Parameters:    Size  Location     Type
 22650 ;;		None
 22651 ;; Auto vars:     Size  Location     Type
 22652 ;;		None
 22653 ;; Return value:  Size  Location     Type
 22654 ;;                  1    wreg      void 
 22655 ;; Registers used:
 22656 ;;		wreg, status,2, status,0, pclath, cstack
 22657 ;; Tracked objects:
 22658 ;;		On entry : 0/0
 22659 ;;		On exit  : 0/0
 22660 ;;		Unchanged: 0/0
 22661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22666 ;;Total ram usage:        0 bytes
 22667 ;; Hardware stack levels used:    1
 22668 ;; Hardware stack levels required when called:    1
 22669 ;; This function calls:
 22670 ;;		Absolute function
 22671 ;;		_CLOCK_timerCallback
 22672 ;;		_TMR0_DefaultInterruptHandler
 22673 ;; This function is called by:
 22674 ;;		_INTERRUPT_InterruptManager
 22675 ;; This function uses a non-reentrant model
 22676 ;;
 22677                           
 22678                           
 22679                           ;psect for function _TMR0_ISR
 22680  1F53                     _TMR0_ISR:	
 22681                           
 22682                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 22683                           
 22684                           ;incstack = 0
 22685 ;; hardware stack exceeded
 22686                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 22687  1F53  014E               	movlb	14	; select bank14
 22688  1F54  128C               	bcf	12,5	;volatile
 22689                           
 22690                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 22691  1F55  0142               	movlb	2	; select bank2
 22692  1F56  085A               	movf	_TMR0_InterruptHandler^(0+256),w
 22693  1F57  045B               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 22694  1F58  1903               	btfsc	3,2
 22695  1F59  0008               	return
 22696                           
 22697                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 22698  1F5A  085B               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 22699  1F5B  008A               	movwf	10
 22700  1F5C  085A               	movf	_TMR0_InterruptHandler^(0+256),w
 22701  1F5D  000A               	callw
 22702  1F5E  319F               	pagesel	$
 22703  1F5F  0008               	return
 22704  1F60                     __end_of_TMR0_ISR:	
 22705                           
 22706                           	psect	text90
 22707  1E8E                     __ptext90:	
 22708 ;; *************** function _CLOCK_timerCallback *****************
 22709 ;; Defined at:
 22710 ;;		line 20 in file "clock.c"
 22711 ;; Parameters:    Size  Location     Type
 22712 ;;		None
 22713 ;; Auto vars:     Size  Location     Type
 22714 ;;		None
 22715 ;; Return value:  Size  Location     Type
 22716 ;;                  1    wreg      void 
 22717 ;; Registers used:
 22718 ;;		wreg
 22719 ;; Tracked objects:
 22720 ;;		On entry : 0/0
 22721 ;;		On exit  : 0/0
 22722 ;;		Unchanged: 0/0
 22723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22728 ;;Total ram usage:        0 bytes
 22729 ;; Hardware stack levels used:    1
 22730 ;; This function calls:
 22731 ;;		Nothing
 22732 ;; This function is called by:
 22733 ;;		_CLOCK_init
 22734 ;;		_TMR0_ISR
 22735 ;; This function uses a non-reentrant model
 22736 ;;
 22737                           
 22738                           
 22739                           ;psect for function _CLOCK_timerCallback
 22740  1E8E                     _CLOCK_timerCallback:	
 22741                           
 22742                           ;clock.c: 21:     currentTime++;
 22743                           
 22744                           ;incstack = 0
 22745 ;; hardware stack exceeded
 22746                           ; Regs used in _CLOCK_timerCallback: [wreg]
 22747  1E8E  3001               	movlw	1
 22748  1E8F  0142               	movlb	2	; select bank2
 22749  1E90  07C6               	addwf	_currentTime^(0+256),f
 22750  1E91  3000               	movlw	0
 22751  1E92  3DC7               	addwfc	(_currentTime+1)^(0+256),f
 22752  1E93  0008               	return
 22753  1E94                     __end_of_CLOCK_timerCallback:	
 22754                           
 22755                           	psect	text91
 22756  1E6E                     __ptext91:	
 22757 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 22758 ;; Defined at:
 22759 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 22760 ;; Parameters:    Size  Location     Type
 22761 ;;		None
 22762 ;; Auto vars:     Size  Location     Type
 22763 ;;		None
 22764 ;; Return value:  Size  Location     Type
 22765 ;;                  1    wreg      void 
 22766 ;; Registers used:
 22767 ;;		None
 22768 ;; Tracked objects:
 22769 ;;		On entry : 0/0
 22770 ;;		On exit  : 0/0
 22771 ;;		Unchanged: 0/0
 22772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22777 ;;Total ram usage:        0 bytes
 22778 ;; Hardware stack levels used:    1
 22779 ;; This function calls:
 22780 ;;		Nothing
 22781 ;; This function is called by:
 22782 ;;		_TMR0_Initialize
 22783 ;;		_TMR0_ISR
 22784 ;; This function uses a non-reentrant model
 22785 ;;
 22786                           
 22787                           
 22788                           ;psect for function _TMR0_DefaultInterruptHandler
 22789  1E6E                     _TMR0_DefaultInterruptHandler:	
 22790                           
 22791                           ;incstack = 0
 22792 ;; hardware stack exceeded
 22793                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 22794  1E6E  0008               	return
 22795  1E6F                     __end_of_TMR0_DefaultInterruptHandler:	
 22796                           
 22797                           	psect	text92
 22798  0EAE                     __ptext92:	
 22799 ;; *************** function _I2C1_ISR *****************
 22800 ;; Defined at:
 22801 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 22802 ;; Parameters:    Size  Location     Type
 22803 ;;		None
 22804 ;; Auto vars:     Size  Location     Type
 22805 ;;		None
 22806 ;; Return value:  Size  Location     Type
 22807 ;;                  1    wreg      void 
 22808 ;; Registers used:
 22809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22810 ;; Tracked objects:
 22811 ;;		On entry : 0/0
 22812 ;;		On exit  : 0/0
 22813 ;;		Unchanged: 0/0
 22814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22817 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22818 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22819 ;;Total ram usage:        4 bytes
 22820 ;; Hardware stack levels used:    1
 22821 ;; Hardware stack levels required when called:    1
 22822 ;; This function calls:
 22823 ;;		_I2C1_FunctionComplete
 22824 ;;		_I2C1_Stop
 22825 ;; This function is called by:
 22826 ;;		_INTERRUPT_InterruptManager
 22827 ;; This function uses a non-reentrant model
 22828 ;;
 22829                           
 22830                           
 22831                           ;psect for function _I2C1_ISR
 22832  0EAE                     _I2C1_ISR:	
 22833                           
 22834                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 22835                           
 22836                           ;incstack = 0
 22837 ;; hardware stack exceeded
 22838                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22839  0EAE  014E               	movlb	14	; select bank14
 22840  0EAF  100F               	bcf	15,0	;volatile
 22841                           
 22842                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 22843  0EB0  0143               	movlb	3	; select bank3
 22844  0EB1  1F90               	btfss	16,7	;volatile
 22845  0EB2  2FD3               	goto	i1l6347
 22846                           
 22847                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 22848  0EB3  1390               	bcf	16,7	;volatile
 22849                           
 22850                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 22851  0EB4  0141               	movlb	1	; select bank1
 22852  0EB5  01C4               	clrf	_i2c1_state^(0+128)
 22853                           
 22854                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 22855  0EB6  0842               	movf	_p_i2c1_current^(0+128),w
 22856  0EB7  3E02               	addlw	2
 22857  0EB8  0086               	movwf	6
 22858  0EB9  3001               	movlw	1	; select bank2/3
 22859  0EBA  0087               	movwf	7
 22860  0EBB  0801               	movf	1,w
 22861  0EBC  0086               	movwf	6
 22862  0EBD  0187               	clrf	7
 22863  0EBE  0181               	clrf	1
 22864  0EBF  0A81               	incf	1,f
 22865                           
 22866                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 22867  0EC0  01C2               	clrf	_p_i2c1_current^(0+128)
 22868  0EC1  0008               	return
 22869  0EC2                     i1l547:	
 22870                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 22871                           
 22872                           
 22873                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 22874  0EC2  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 22875  0EC3  0008               	return
 22876                           
 22877                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 22878  0EC4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22879  0EC5  00F2               	movwf	??_I2C1_ISR
 22880  0EC6  0872               	movf	??_I2C1_ISR,w
 22881  0EC7  00C2               	movwf	_p_i2c1_current^(0+128)
 22882                           
 22883                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 22884  0EC8  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22885  0EC9  0086               	movwf	6
 22886  0ECA  3001               	movlw	1	; select bank2/3
 22887  0ECB  0087               	movwf	7
 22888  0ECC  0801               	movf	1,w
 22889  0ECD  00F2               	movwf	??_I2C1_ISR
 22890  0ECE  0872               	movf	??_I2C1_ISR,w
 22891  0ECF  00C3               	movwf	_i2c1_trb_count^(0+128)
 22892                           
 22893                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 22894  0ED0  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22895  0ED1  0086               	movwf	6
 22896  0ED2  3001               	movlw	1	; select bank2/3
 22897  0ED3  0087               	movwf	7
 22898  0ED4  3001               	movlw	1	; select bank2/3
 22899  0ED5  3F41               	moviw [1]fsr1
 22900  0ED6  00F7               	movwf	_p_i2c1_trb_current
 22901                           
 22902                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 22903  0ED7  3003               	movlw	3
 22904  0ED8  00F2               	movwf	??_I2C1_ISR
 22905  0ED9  0872               	movf	??_I2C1_ISR,w
 22906  0EDA  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 22907                           
 22908                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 22909  0EDB  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22910  0EDC  3A58               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 22911  0EDD  1D03               	skipz
 22912  0EDE  2EE3               	goto	i1l6235
 22913                           
 22914                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 22915  0EDF  3055               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 22916  0EE0  00F2               	movwf	??_I2C1_ISR
 22917  0EE1  0872               	movf	??_I2C1_ISR,w
 22918  0EE2  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 22919  0EE3                     i1l6235:	
 22920                           
 22921                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 22922  0EE3  1022               	bcf	(_i2c1_object^(0+128)+2),0
 22923                           
 22924                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 22925  0EE4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 22926  0EE5  0620               	xorwf	_i2c1_object^(0+128),w
 22927  0EE6  1903               	btfsc	3,2
 22928                           
 22929                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 22930  0EE7  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 22931                           
 22932                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 22933                           
 22934                           ;mcc_generated_files/i2c1.c: 290:                 }
 22935  0EE8  0143               	movlb	3	; select bank3
 22936  0EE9  1411               	bsf	17,0	;volatile
 22937  0EEA                     i1l6239:	
 22938                           
 22939                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 22940  0EEA  3002               	movlw	2
 22941  0EEB  00F2               	movwf	??_I2C1_ISR
 22942  0EEC  0872               	movf	??_I2C1_ISR,w
 22943  0EED  0141               	movlb	1	; select bank1
 22944  0EEE  00C4               	movwf	_i2c1_state^(0+128)
 22945  0EEF  0008               	return
 22946  0EF0                     i1l552:	
 22947                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 22948                           
 22949  0EF0  2F7C               	goto	i1l573
 22950  0EF1                     i1l553:	
 22951                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 22952                           
 22953                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 22954                           
 22955                           
 22956                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 22957  0EF1  0143               	movlb	3	; select bank3
 22958  0EF2  1F11               	btfss	17,6	;volatile
 22959  0EF3  2EFD               	goto	i1l6247
 22960                           
 22961                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 22962  0EF4  3001               	movlw	1
 22963  0EF5  00F2               	movwf	??_I2C1_ISR
 22964  0EF6  0872               	movf	??_I2C1_ISR,w
 22965  0EF7  0141               	movlb	1	; select bank1
 22966  0EF8  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 22967                           
 22968                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 22969  0EF9  3004               	movlw	4
 22970  0EFA  3190  20A4         	fcall	_I2C1_Stop
 22971                           
 22972                           ;mcc_generated_files/i2c1.c: 319:             }
 22973  0EFC  0008               	return
 22974  0EFD                     i1l6247:	
 22975                           
 22976                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 22977  0EFD  087B               	movf	I2C1_ISR@i2c_address+1,w
 22978  0EFE  00F3               	movwf	??_I2C1_ISR+1
 22979  0EFF  087A               	movf	I2C1_ISR@i2c_address,w
 22980  0F00  00F2               	movwf	??_I2C1_ISR
 22981  0F01  36F3               	lsrf	??_I2C1_ISR+1,f
 22982  0F02  0CF2               	rrf	??_I2C1_ISR,f
 22983  0F03  0872               	movf	??_I2C1_ISR,w
 22984  0F04  008C               	movwf	12	;volatile
 22985                           
 22986                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 22987  0F05  1C7A               	btfss	I2C1_ISR@i2c_address,0
 22988  0F06  2F0D               	goto	i1l6253
 22989                           
 22990                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 22991  0F07  300B               	movlw	11
 22992  0F08  00F2               	movwf	??_I2C1_ISR
 22993  0F09  0872               	movf	??_I2C1_ISR,w
 22994  0F0A  0141               	movlb	1	; select bank1
 22995  0F0B  00C4               	movwf	_i2c1_state^(0+128)
 22996                           
 22997                           ;mcc_generated_files/i2c1.c: 331:                 }
 22998  0F0C  0008               	return
 22999  0F0D                     i1l6253:	
 23000                           
 23001                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 23002  0F0D  3003               	movlw	3
 23003  0F0E  00F2               	movwf	??_I2C1_ISR
 23004  0F0F  0872               	movf	??_I2C1_ISR,w
 23005  0F10  0141               	movlb	1	; select bank1
 23006  0F11  00C4               	movwf	_i2c1_state^(0+128)
 23007  0F12  0008               	return
 23008  0F13                     i1l558:	
 23009                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 23010                           
 23011                           
 23012                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 23013  0F13  0143               	movlb	3	; select bank3
 23014  0F14  1F11               	btfss	17,6	;volatile
 23015  0F15  2F1F               	goto	i1l559
 23016                           
 23017                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 23018  0F16  3001               	movlw	1
 23019  0F17  00F2               	movwf	??_I2C1_ISR
 23020  0F18  0872               	movf	??_I2C1_ISR,w
 23021  0F19  0141               	movlb	1	; select bank1
 23022  0F1A  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23023                           
 23024                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 23025  0F1B  3004               	movlw	4
 23026  0F1C  3190  20A4         	fcall	_I2C1_Stop
 23027                           
 23028                           ;mcc_generated_files/i2c1.c: 347:             }
 23029  0F1E  0008               	return
 23030  0F1F                     i1l559:	
 23031                           ;mcc_generated_files/i2c1.c: 348:             else
 23032                           
 23033                           
 23034                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 23035  0F1F  1491               	bsf	17,1	;volatile
 23036                           
 23037                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 23038  0F20  087B               	movf	I2C1_ISR@i2c_address+1,w
 23039  0F21  00F3               	movwf	??_I2C1_ISR+1
 23040  0F22  087A               	movf	I2C1_ISR@i2c_address,w
 23041  0F23  00F2               	movwf	??_I2C1_ISR
 23042  0F24  0873               	movf	??_I2C1_ISR+1,w
 23043  0F25  00F2               	movwf	??_I2C1_ISR
 23044  0F26  01F3               	clrf	??_I2C1_ISR+1
 23045  0F27  3006               	movlw	6
 23046  0F28  0572               	andwf	??_I2C1_ISR,w
 23047  0F29  00F4               	movwf	??_I2C1_ISR+2
 23048  0F2A  3000               	movlw	0
 23049  0F2B  0573               	andwf	??_I2C1_ISR+1,w
 23050  0F2C  00F5               	movwf	??_I2C1_ISR+3
 23051  0F2D  30F0               	movlw	240
 23052  0F2E  0474               	iorwf	??_I2C1_ISR+2,w
 23053  0F2F  00FA               	movwf	I2C1_ISR@i2c_address
 23054  0F30  3000               	movlw	0
 23055  0F31  0475               	iorwf	??_I2C1_ISR+3,w
 23056  0F32  00FB               	movwf	I2C1_ISR@i2c_address+1
 23057                           
 23058                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 23059  0F33  147A               	bsf	I2C1_ISR@i2c_address,0
 23060                           
 23061                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 23062  0F34  0141               	movlb	1	; select bank1
 23063  0F35  01BF               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 23064  0F36  0ABF               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 23065  0F37  2EEA               	goto	i1l6239
 23066  0F38                     i1l6267:	
 23067                           
 23068                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 23069  0F38  033F               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 23070  0F39  1903               	btfsc	3,2
 23071  0F3A  2F51               	goto	i1l6287
 23072                           
 23073                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 23074  0F3B  0877               	movf	_p_i2c1_trb_current,w
 23075  0F3C  0086               	movwf	6
 23076  0F3D  3001               	movlw	1	; select bank2/3
 23077  0F3E  0087               	movwf	7
 23078  0F3F  3F40               	moviw [0]fsr1
 23079  0F40  00FA               	movwf	I2C1_ISR@i2c_address
 23080  0F41  3F41               	moviw [1]fsr1
 23081  0F42  00FB               	movwf	I2C1_ISR@i2c_address+1
 23082                           
 23083                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 23084  0F43  0877               	movf	_p_i2c1_trb_current,w
 23085  0F44  0086               	movwf	6
 23086  0F45  3001               	movlw	1	; select bank2/3
 23087  0F46  0087               	movwf	7
 23088  0F47  3001               	movlw	1	; select bank2/3
 23089  0F48  3F43               	moviw [3]fsr1
 23090  0F49  00C1               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 23091                           
 23092                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 23093  0F4A  0877               	movf	_p_i2c1_trb_current,w
 23094  0F4B  0086               	movwf	6
 23095  0F4C  3001               	movlw	1	; select bank2/3
 23096  0F4D  0087               	movwf	7
 23097  0F4E  3001               	movlw	1	; select bank2/3
 23098  0F4F  3F42               	moviw [2]fsr1
 23099  0F50  00C0               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 23100  0F51                     i1l6287:	
 23101                           
 23102                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 23103  0F51  087A               	movf	I2C1_ISR@i2c_address,w
 23104  0F52  0143               	movlb	3	; select bank3
 23105  0F53  008C               	movwf	12	;volatile
 23106                           
 23107                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 23108  0F54  1C7A               	btfss	I2C1_ISR@i2c_address,0
 23109  0F55  2F0D               	goto	i1l6253
 23110                           
 23111                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 23112  0F56  3005               	movlw	5
 23113  0F57  00F2               	movwf	??_I2C1_ISR
 23114  0F58  0872               	movf	??_I2C1_ISR,w
 23115  0F59  0141               	movlb	1	; select bank1
 23116  0F5A  00C4               	movwf	_i2c1_state^(0+128)
 23117                           
 23118                           ;mcc_generated_files/i2c1.c: 419:                 }
 23119  0F5B  0008               	return
 23120  0F5C                     i1l569:	
 23121                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 23122                           
 23123                           
 23124                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 23125  0F5C  0143               	movlb	3	; select bank3
 23126  0F5D  1F11               	btfss	17,6	;volatile
 23127  0F5E  2F6A               	goto	i1l6301
 23128                           
 23129                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 23130  0F5F  3001               	movlw	1
 23131  0F60  00F2               	movwf	??_I2C1_ISR
 23132  0F61  0872               	movf	??_I2C1_ISR,w
 23133  0F62  0141               	movlb	1	; select bank1
 23134  0F63  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23135                           
 23136                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 23137  0F64  0143               	movlb	3	; select bank3
 23138  0F65  1311               	bcf	17,6	;volatile
 23139                           
 23140                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 23141  0F66  3005               	movlw	5
 23142  0F67  3190  20A4         	fcall	_I2C1_Stop
 23143                           
 23144                           ;mcc_generated_files/i2c1.c: 442:             }
 23145  0F69  0008               	return
 23146  0F6A                     i1l6301:	
 23147                           
 23148                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 23149  0F6A  3001               	movlw	1
 23150  0F6B  0141               	movlb	1	; select bank1
 23151  0F6C  02C0               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 23152  0F6D  0A40               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 23153  0F6E  1D03               	btfss	3,2
 23154  0F6F  2F7F               	goto	i1l6309
 23155                           
 23156                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 23157  0F70  3004               	movlw	4
 23158  0F71  00F2               	movwf	??_I2C1_ISR
 23159  0F72  0872               	movf	??_I2C1_ISR,w
 23160  0F73  07F7               	addwf	_p_i2c1_trb_current,f
 23161                           
 23162                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 23163  0F74  3001               	movlw	1
 23164  0F75  02C3               	subwf	_i2c1_trb_count^(0+128),f
 23165  0F76  1D03               	btfss	3,2
 23166  0F77  2F7C               	goto	i1l573
 23167                           
 23168                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 23169  0F78  3000               	movlw	0
 23170  0F79  3190  20A4         	fcall	_I2C1_Stop
 23171                           
 23172                           ;mcc_generated_files/i2c1.c: 457:                     }
 23173  0F7B  0008               	return
 23174  0F7C                     i1l573:	
 23175                           ;mcc_generated_files/i2c1.c: 458:                     else
 23176                           
 23177                           
 23178                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 23179  0F7C  0143               	movlb	3	; select bank3
 23180  0F7D  1491               	bsf	17,1	;volatile
 23181  0F7E  2EEA               	goto	i1l6239
 23182  0F7F                     i1l6309:	
 23183                           
 23184                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 23185  0F7F  0841               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 23186  0F80  0086               	movwf	6
 23187  0F81  0187               	clrf	7
 23188  0F82  0801               	movf	1,w
 23189  0F83  0143               	movlb	3	; select bank3
 23190  0F84  008C               	movwf	12	;volatile
 23191  0F85  3001               	movlw	1
 23192  0F86  00F2               	movwf	??_I2C1_ISR
 23193  0F87  0872               	movf	??_I2C1_ISR,w
 23194  0F88  0141               	movlb	1	; select bank1
 23195  0F89  07C1               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 23196  0F8A  0008               	return
 23197  0F8B                     i1l576:	
 23198                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 23199                           
 23200                           
 23201                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 23202  0F8B  0143               	movlb	3	; select bank3
 23203  0F8C  1F11               	btfss	17,6	;volatile
 23204  0F8D  2F99               	goto	i1l577
 23205                           
 23206                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 23207  0F8E  3001               	movlw	1
 23208  0F8F  00F2               	movwf	??_I2C1_ISR
 23209  0F90  0872               	movf	??_I2C1_ISR,w
 23210  0F91  0141               	movlb	1	; select bank1
 23211  0F92  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23212                           
 23213                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 23214  0F93  3004               	movlw	4
 23215  0F94  3190  20A4         	fcall	_I2C1_Stop
 23216                           
 23217                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 23218  0F96  0143               	movlb	3	; select bank3
 23219  0F97  1311               	bcf	17,6	;volatile
 23220                           
 23221                           ;mcc_generated_files/i2c1.c: 495:             }
 23222  0F98  0008               	return
 23223  0F99                     i1l577:	
 23224                           ;mcc_generated_files/i2c1.c: 496:             else
 23225                           
 23226                           
 23227                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 23228  0F99  1591               	bsf	17,3	;volatile
 23229                           
 23230                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 23231  0F9A  3008               	movlw	8
 23232  0F9B  00F2               	movwf	??_I2C1_ISR
 23233  0F9C  0872               	movf	??_I2C1_ISR,w
 23234  0F9D  0141               	movlb	1	; select bank1
 23235  0F9E  00C4               	movwf	_i2c1_state^(0+128)
 23236  0F9F  0008               	return
 23237  0FA0                     i1l6321:	
 23238                           
 23239                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 23240  0FA0  3008               	movlw	8
 23241  0FA1  00F2               	movwf	??_I2C1_ISR
 23242  0FA2  0872               	movf	??_I2C1_ISR,w
 23243  0FA3  00C4               	movwf	_i2c1_state^(0+128)
 23244                           
 23245                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 23246  0FA4  0143               	movlb	3	; select bank3
 23247  0FA5  1591               	bsf	17,3	;volatile
 23248                           
 23249                           ;mcc_generated_files/i2c1.c: 513:             break;
 23250  0FA6  0008               	return
 23251  0FA7                     i1l6325:	
 23252                           
 23253                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 23254  0FA7  0143               	movlb	3	; select bank3
 23255  0FA8  080C               	movf	12,w	;volatile
 23256  0FA9  00F2               	movwf	??_I2C1_ISR
 23257  0FAA  0141               	movlb	1	; select bank1
 23258  0FAB  0841               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 23259  0FAC  0086               	movwf	6
 23260  0FAD  0187               	clrf	7
 23261  0FAE  0872               	movf	??_I2C1_ISR,w
 23262  0FAF  0081               	movwf	1
 23263  0FB0  3001               	movlw	1
 23264  0FB1  00F2               	movwf	??_I2C1_ISR
 23265  0FB2  0872               	movf	??_I2C1_ISR,w
 23266  0FB3  07C1               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 23267                           
 23268                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 23269  0FB4  3001               	movlw	1
 23270  0FB5  02C0               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 23271  0FB6  1903               	btfsc	3,2
 23272  0FB7  2FC0               	goto	i1l581
 23273                           
 23274                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 23275  0FB8  0143               	movlb	3	; select bank3
 23276  0FB9  1291               	bcf	17,5	;volatile
 23277                           
 23278                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 23279  0FBA  3006               	movlw	6
 23280  0FBB  00F2               	movwf	??_I2C1_ISR
 23281  0FBC  0872               	movf	??_I2C1_ISR,w
 23282  0FBD  0141               	movlb	1	; select bank1
 23283  0FBE  00C4               	movwf	_i2c1_state^(0+128)
 23284                           
 23285                           ;mcc_generated_files/i2c1.c: 532:             }
 23286  0FBF  2FC4               	goto	i1l6337
 23287  0FC0                     i1l581:	
 23288                           ;mcc_generated_files/i2c1.c: 533:             else
 23289                           
 23290                           
 23291                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 23292  0FC0  0143               	movlb	3	; select bank3
 23293  0FC1  1691               	bsf	17,5	;volatile
 23294                           
 23295                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 23296  0FC2  319F  277D         	fcall	_I2C1_FunctionComplete
 23297  0FC4                     i1l6337:	
 23298                           
 23299                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 23300  0FC4  0143               	movlb	3	; select bank3
 23301  0FC5  1611               	bsf	17,4	;volatile
 23302                           
 23303                           ;mcc_generated_files/i2c1.c: 545:             break;
 23304  0FC6  0008               	return
 23305  0FC7                     i1l6339:	
 23306                           
 23307                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 23308  0FC7  3000               	movlw	0
 23309  0FC8  3190  20A4         	fcall	_I2C1_Stop
 23310                           
 23311                           ;mcc_generated_files/i2c1.c: 552:             break;
 23312  0FCA  0008               	return
 23313  0FCB                     i1l6341:	
 23314                           
 23315                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 23316  0FCB  3001               	movlw	1
 23317  0FCC  00F2               	movwf	??_I2C1_ISR
 23318  0FCD  0872               	movf	??_I2C1_ISR,w
 23319  0FCE  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23320                           
 23321                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 23322  0FCF  3006               	movlw	6
 23323  0FD0  3190  20A4         	fcall	_I2C1_Stop
 23324                           
 23325                           ;mcc_generated_files/i2c1.c: 560:             break;
 23326  0FD2  0008               	return
 23327  0FD3                     i1l6347:	
 23328  0FD3  0141               	movlb	1	; select bank1
 23329  0FD4  0844               	movf	_i2c1_state^(0+128),w
 23330  0FD5  00F2               	movwf	??_I2C1_ISR
 23331  0FD6  01F3               	clrf	??_I2C1_ISR+1
 23332                           
 23333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23334                           ; Switch size 1, requested type "simple"
 23335                           ; Number of cases is 1, Range of values is 0 to 0
 23336                           ; switch strategies available:
 23337                           ; Name         Instructions Cycles
 23338                           ; simple_byte            4     3 (average)
 23339                           ; direct_byte            8     6 (fixed)
 23340                           ; jumptable            260     6 (fixed)
 23341                           ;	Chosen strategy is simple_byte
 23342  0FD7  0873               	movf	??_I2C1_ISR+1,w
 23343  0FD8  3A00               	xorlw	0	; case 0
 23344  0FD9  1903               	skipnz
 23345  0FDA  2FDC               	goto	i1l9023
 23346  0FDB  2FCB               	goto	i1l6341
 23347  0FDC                     i1l9023:	
 23348                           
 23349                           ; Switch size 1, requested type "simple"
 23350                           ; Number of cases is 11, Range of values is 0 to 11
 23351                           ; switch strategies available:
 23352                           ; Name         Instructions Cycles
 23353                           ; direct_byte           30     6 (fixed)
 23354                           ; simple_byte           34    18 (average)
 23355                           ; jumptable            260     6 (fixed)
 23356                           ;	Chosen strategy is simple_byte
 23357  0FDC  0872               	movf	??_I2C1_ISR,w
 23358  0FDD  3A00               	xorlw	0	; case 0
 23359  0FDE  1903               	skipnz
 23360  0FDF  2EC2               	goto	i1l547
 23361  0FE0  3A01               	xorlw	1	; case 1
 23362  0FE1  1903               	skipnz
 23363  0FE2  2EF0               	goto	i1l552
 23364  0FE3  3A03               	xorlw	3	; case 2
 23365  0FE4  1903               	skipnz
 23366  0FE5  2F38               	goto	i1l6267
 23367  0FE6  3A01               	xorlw	1	; case 3
 23368  0FE7  1903               	skipnz
 23369  0FE8  2F5C               	goto	i1l569
 23370  0FE9  3A07               	xorlw	7	; case 4
 23371  0FEA  1903               	skipnz
 23372  0FEB  2FC7               	goto	i1l6339
 23373  0FEC  3A01               	xorlw	1	; case 5
 23374  0FED  1903               	skipnz
 23375  0FEE  2F8B               	goto	i1l576
 23376  0FEF  3A03               	xorlw	3	; case 6
 23377  0FF0  1903               	skipnz
 23378  0FF1  2FA0               	goto	i1l6321
 23379  0FF2  3A01               	xorlw	1	; case 7
 23380  0FF3  1903               	skipnz
 23381  0FF4  2FC7               	goto	i1l6339
 23382  0FF5  3A0F               	xorlw	15	; case 8
 23383  0FF6  1903               	skipnz
 23384  0FF7  2FA7               	goto	i1l6325
 23385  0FF8  3A02               	xorlw	2	; case 10
 23386  0FF9  1903               	skipnz
 23387  0FFA  2EF1               	goto	i1l553
 23388  0FFB  3A01               	xorlw	1	; case 11
 23389  0FFC  1903               	skipnz
 23390  0FFD  2F13               	goto	i1l558
 23391  0FFE  2FCB               	goto	i1l6341
 23392  0FFF  0008               	return
 23393  1000                     __end_of_I2C1_ISR:	
 23394                           
 23395                           	psect	text93
 23396  10A4                     __ptext93:	
 23397 ;; *************** function _I2C1_Stop *****************
 23398 ;; Defined at:
 23399 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 23400 ;; Parameters:    Size  Location     Type
 23401 ;;  completion_c    1    wreg     enum E10866
 23402 ;; Auto vars:     Size  Location     Type
 23403 ;;  completion_c    1    1[COMMON] enum E10866
 23404 ;; Return value:  Size  Location     Type
 23405 ;;                  1    wreg      void 
 23406 ;; Registers used:
 23407 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23408 ;; Tracked objects:
 23409 ;;		On entry : 0/0
 23410 ;;		On exit  : 0/0
 23411 ;;		Unchanged: 0/0
 23412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23417 ;;Total ram usage:        2 bytes
 23418 ;; Hardware stack levels used:    1
 23419 ;; This function calls:
 23420 ;;		Nothing
 23421 ;; This function is called by:
 23422 ;;		_I2C1_ISR
 23423 ;; This function uses a non-reentrant model
 23424 ;;
 23425                           
 23426                           
 23427                           ;psect for function _I2C1_Stop
 23428  10A4                     _I2C1_Stop:	
 23429                           
 23430                           ;incstack = 0
 23431 ;; hardware stack exceeded
 23432                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 23433                           ;I2C1_Stop@completion_code stored from wreg
 23434  10A4  00F1               	movwf	I2C1_Stop@completion_code
 23435                           
 23436                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 23437  10A5  0143               	movlb	3	; select bank3
 23438  10A6  1511               	bsf	17,2	;volatile
 23439                           
 23440                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 23441  10A7  0141               	movlb	1	; select bank1
 23442  10A8  0842               	movf	_p_i2c1_current^(0+128),w
 23443  10A9  3E02               	addlw	2
 23444  10AA  0086               	movwf	6
 23445  10AB  3001               	movlw	1	; select bank2/3
 23446  10AC  0087               	movwf	7
 23447  10AD  0801               	movf	1,w
 23448  10AE  1903               	btfsc	3,2
 23449  10AF  28BC               	goto	i1l5669
 23450                           
 23451                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 23452  10B0  0871               	movf	I2C1_Stop@completion_code,w
 23453  10B1  00F0               	movwf	??_I2C1_Stop
 23454  10B2  0842               	movf	_p_i2c1_current^(0+128),w
 23455  10B3  3E02               	addlw	2
 23456  10B4  0086               	movwf	6
 23457  10B5  3001               	movlw	1	; select bank2/3
 23458  10B6  0087               	movwf	7
 23459  10B7  0801               	movf	1,w
 23460  10B8  0086               	movwf	6
 23461  10B9  0187               	clrf	7
 23462  10BA  0870               	movf	??_I2C1_Stop,w
 23463  10BB  0081               	movwf	1
 23464  10BC                     i1l5669:	
 23465                           
 23466                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 23467  10BC  01C4               	clrf	_i2c1_state^(0+128)
 23468  10BD  0008               	return
 23469  10BE                     __end_of_I2C1_Stop:	
 23470                           
 23471                           	psect	text94
 23472  1F7D                     __ptext94:	
 23473 ;; *************** function _I2C1_FunctionComplete *****************
 23474 ;; Defined at:
 23475 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 23476 ;; Parameters:    Size  Location     Type
 23477 ;;		None
 23478 ;; Auto vars:     Size  Location     Type
 23479 ;;		None
 23480 ;; Return value:  Size  Location     Type
 23481 ;;                  1    wreg      void 
 23482 ;; Registers used:
 23483 ;;		wreg, status,2, status,0
 23484 ;; Tracked objects:
 23485 ;;		On entry : 0/0
 23486 ;;		On exit  : 0/0
 23487 ;;		Unchanged: 0/0
 23488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23493 ;;Total ram usage:        1 bytes
 23494 ;; Hardware stack levels used:    1
 23495 ;; This function calls:
 23496 ;;		Nothing
 23497 ;; This function is called by:
 23498 ;;		_I2C1_ISR
 23499 ;; This function uses a non-reentrant model
 23500 ;;
 23501                           
 23502                           
 23503                           ;psect for function _I2C1_FunctionComplete
 23504  1F7D                     _I2C1_FunctionComplete:	
 23505                           
 23506                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 23507                           
 23508                           ;incstack = 0
 23509 ;; hardware stack exceeded
 23510                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 23511  1F7D  3004               	movlw	4
 23512  1F7E  00F0               	movwf	??_I2C1_FunctionComplete
 23513  1F7F  0870               	movf	??_I2C1_FunctionComplete,w
 23514  1F80  07F7               	addwf	_p_i2c1_trb_current,f
 23515                           
 23516                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 23517  1F81  3001               	movlw	1
 23518  1F82  0141               	movlb	1	; select bank1
 23519  1F83  02C3               	subwf	_i2c1_trb_count^(0+128),f
 23520  1F84  1D03               	btfss	3,2
 23521  1F85  2F8B               	goto	i1l588
 23522                           
 23523                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 23524  1F86  3004               	movlw	4
 23525  1F87  00F0               	movwf	??_I2C1_FunctionComplete
 23526  1F88  0870               	movf	??_I2C1_FunctionComplete,w
 23527  1F89  00C4               	movwf	_i2c1_state^(0+128)
 23528                           
 23529                           ;mcc_generated_files/i2c1.c: 575:     }
 23530  1F8A  0008               	return
 23531  1F8B                     i1l588:	
 23532                           ;mcc_generated_files/i2c1.c: 576:     else
 23533                           
 23534                           
 23535                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 23536  1F8B  01C4               	clrf	_i2c1_state^(0+128)
 23537  1F8C  0AC4               	incf	_i2c1_state^(0+128),f
 23538  1F8D  0008               	return
 23539  1F8E                     __end_of_I2C1_FunctionComplete:	
 23540                           
 23541                           	psect	text95
 23542  1E77                     __ptext95:	
 23543 ;; *************** function _I2C1_BusCollisionISR *****************
 23544 ;; Defined at:
 23545 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 23546 ;; Parameters:    Size  Location     Type
 23547 ;;		None
 23548 ;; Auto vars:     Size  Location     Type
 23549 ;;		None
 23550 ;; Return value:  Size  Location     Type
 23551 ;;                  1    wreg      void 
 23552 ;; Registers used:
 23553 ;;		None
 23554 ;; Tracked objects:
 23555 ;;		On entry : 0/0
 23556 ;;		On exit  : 0/0
 23557 ;;		Unchanged: 0/0
 23558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23563 ;;Total ram usage:        0 bytes
 23564 ;; Hardware stack levels used:    1
 23565 ;; This function calls:
 23566 ;;		Nothing
 23567 ;; This function is called by:
 23568 ;;		_INTERRUPT_InterruptManager
 23569 ;; This function uses a non-reentrant model
 23570 ;;
 23571                           
 23572                           
 23573                           ;psect for function _I2C1_BusCollisionISR
 23574  1E77                     _I2C1_BusCollisionISR:	
 23575                           
 23576                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 23577                           
 23578                           ;incstack = 0
 23579 ;; hardware stack exceeded
 23580                           ; Regs used in _I2C1_BusCollisionISR: []
 23581  1E77  014E               	movlb	14	; select bank14
 23582  1E78  108F               	bcf	15,1	;volatile
 23583  1E79  0008               	return
 23584  1E7A                     __end_of_I2C1_BusCollisionISR:	
 23585                           
 23586                           	psect	text96
 23587  1342                     __ptext96:	
 23588 ;; *************** function _DMX_interrupt *****************
 23589 ;; Defined at:
 23590 ;;		line 54 in file "dmx.c"
 23591 ;; Parameters:    Size  Location     Type
 23592 ;;		None
 23593 ;; Auto vars:     Size  Location     Type
 23594 ;;  dummy           1    6[COMMON] volatile unsigned char 
 23595 ;; Return value:  Size  Location     Type
 23596 ;;                  1    wreg      void 
 23597 ;; Registers used:
 23598 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23599 ;; Tracked objects:
 23600 ;;		On entry : 0/0
 23601 ;;		On exit  : 0/0
 23602 ;;		Unchanged: 0/0
 23603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23606 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23607 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23608 ;;Total ram usage:        7 bytes
 23609 ;; Hardware stack levels used:    1
 23610 ;; This function calls:
 23611 ;;		Nothing
 23612 ;; This function is called by:
 23613 ;;		_DMX_init
 23614 ;;		_INTERRUPT_InterruptManager
 23615 ;; This function uses a non-reentrant model
 23616 ;;
 23617                           
 23618                           
 23619                           ;psect for function _DMX_interrupt
 23620  1342                     _DMX_interrupt:	
 23621                           
 23622                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 23623                           
 23624                           ;incstack = 0
 23625 ;; hardware stack exceeded
 23626                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 23627  1342  0142               	movlb	2	; select bank2
 23628  1343  1C9D               	btfss	29,1	;volatile
 23629  1344  2B47               	goto	i1l6697
 23630                           
 23631                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 23632  1345  121D               	bcf	29,4	;volatile
 23633                           
 23634                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 23635  1346  161D               	bsf	29,4	;volatile
 23636  1347                     i1l6697:	
 23637                           
 23638                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 23639  1347  0864               	movf	_initial^(0+256),w
 23640  1348  0465               	iorwf	(_initial+1)^(0+256),w
 23641  1349  1903               	btfsc	3,2
 23642  134A  191D               	btfsc	29,2	;volatile
 23643  134B  2B68               	goto	i1l6705
 23644                           
 23645                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 23646  134C  0819               	movf	25,w	;volatile
 23647  134D  00F0               	movwf	??_DMX_interrupt
 23648  134E  01F1               	clrf	??_DMX_interrupt+1
 23649  134F  083B               	movf	(_arrayIndex+1)^(0+256),w
 23650  1350  00F3               	movwf	??_DMX_interrupt+3
 23651  1351  083A               	movf	_arrayIndex^(0+256),w
 23652  1352  00F2               	movwf	??_DMX_interrupt+2
 23653  1353  35F2               	lslf	??_DMX_interrupt+2,f
 23654  1354  0DF3               	rlf	??_DMX_interrupt+3,f
 23655  1355  30EE               	movlw	238
 23656  1356  00F4               	movwf	??_DMX_interrupt+4
 23657  1357  3023               	movlw	35
 23658  1358  00F5               	movwf	??_DMX_interrupt+5
 23659  1359  0872               	movf	??_DMX_interrupt+2,w
 23660  135A  0774               	addwf	??_DMX_interrupt+4,w
 23661  135B  0086               	movwf	6
 23662  135C  0873               	movf	??_DMX_interrupt+3,w
 23663  135D  3D75               	addwfc	??_DMX_interrupt+5,w
 23664  135E  0087               	movwf	7
 23665  135F  0870               	movf	??_DMX_interrupt,w
 23666  1360  3FC0               	movwi [0]fsr1
 23667  1361  0871               	movf	??_DMX_interrupt+1,w
 23668  1362  3FC1               	movwi [1]fsr1
 23669                           
 23670                           ;dmx.c: 63:         arrayIndex += 1;
 23671  1363  3001               	movlw	1
 23672  1364  07BA               	addwf	_arrayIndex^(0+256),f
 23673  1365  3000               	movlw	0
 23674  1366  3DBB               	addwfc	(_arrayIndex+1)^(0+256),f
 23675                           
 23676                           ;dmx.c: 64:     } else {
 23677  1367  2B70               	goto	i1l6709
 23678  1368                     i1l6705:	
 23679                           
 23680                           ;dmx.c: 65:         arrayIndex = 0;
 23681  1368  01BA               	clrf	_arrayIndex^(0+256)
 23682  1369  01BB               	clrf	(_arrayIndex+1)^(0+256)
 23683                           
 23684                           ;dmx.c: 66:         initial = 0;
 23685  136A  01E4               	clrf	_initial^(0+256)
 23686  136B  01E5               	clrf	(_initial+1)^(0+256)
 23687                           
 23688                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 23689  136C  0819               	movf	25,w	;volatile
 23690  136D  00F0               	movwf	??_DMX_interrupt
 23691  136E  0870               	movf	??_DMX_interrupt,w
 23692  136F  00F6               	movwf	DMX_interrupt@dummy	;volatile
 23693  1370                     i1l6709:	
 23694                           
 23695                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 23696  1370  014E               	movlb	14	; select bank14
 23697  1371  128F               	bcf	15,5	;volatile
 23698  1372  0008               	return
 23699  1373                     __end_of_DMX_interrupt:	
 23700                           
 23701                           	psect	text97
 23702  13D9                     __ptext97:	
 23703 ;; *************** function _EUSART1_Receive_ISR *****************
 23704 ;; Defined at:
 23705 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 23706 ;; Parameters:    Size  Location     Type
 23707 ;;		None
 23708 ;; Auto vars:     Size  Location     Type
 23709 ;;		None
 23710 ;; Return value:  Size  Location     Type
 23711 ;;                  1    wreg      void 
 23712 ;; Registers used:
 23713 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23714 ;; Tracked objects:
 23715 ;;		On entry : 0/0
 23716 ;;		On exit  : 0/0
 23717 ;;		Unchanged: 0/0
 23718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23723 ;;Total ram usage:        0 bytes
 23724 ;; Hardware stack levels used:    1
 23725 ;; Hardware stack levels required when called:    2
 23726 ;; This function calls:
 23727 ;;		Absolute function
 23728 ;;		_EUSART1_DefaultErrorHandler
 23729 ;;		_EUSART1_DefaultFramingErrorHandler
 23730 ;;		_EUSART1_DefaultOverrunErrorHandler
 23731 ;;		_EUSART1_RxDataHandler
 23732 ;; This function is called by:
 23733 ;;		_EUSART1_Initialize
 23734 ;;		_INTERRUPT_InterruptManager
 23735 ;; This function uses a non-reentrant model
 23736 ;;
 23737                           
 23738                           
 23739                           ;psect for function _EUSART1_Receive_ISR
 23740  13D9                     _EUSART1_Receive_ISR:	
 23741                           
 23742                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 23743                           
 23744                           ;incstack = 0
 23745 ;; hardware stack exceeded
 23746                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23747  13D9  0879               	movf	_eusart1RxHead,w	;volatile
 23748  13DA  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23749  13DB  0086               	movwf	6
 23750  13DC  3001               	movlw	1	; select bank2/3
 23751  13DD  0087               	movwf	7
 23752  13DE  0181               	clrf	1
 23753                           
 23754                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 23755  13DF  0142               	movlb	2	; select bank2
 23756  13E0  1D1D               	btfss	29,2	;volatile
 23757  13E1  2BED               	goto	i1l6191
 23758                           
 23759                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 23760  13E2  0879               	movf	_eusart1RxHead,w	;volatile
 23761  13E3  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23762  13E4  0086               	movwf	6
 23763  13E5  3001               	movlw	1	; select bank2/3
 23764  13E6  0087               	movwf	7
 23765  13E7  1481               	bsf	1,1
 23766                           
 23767                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 23768  13E8  0861               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 23769  13E9  008A               	movwf	10
 23770  13EA  0860               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 23771  13EB  000A               	callw
 23772  13EC  3193               	pagesel	$
 23773  13ED                     i1l6191:	
 23774                           
 23775                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 23776  13ED  0142               	movlb	2	; select bank2
 23777  13EE  1C9D               	btfss	29,1	;volatile
 23778  13EF  2BFB               	goto	i1l6197
 23779                           
 23780                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 23781  13F0  0879               	movf	_eusart1RxHead,w	;volatile
 23782  13F1  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23783  13F2  0086               	movwf	6
 23784  13F3  3001               	movlw	1	; select bank2/3
 23785  13F4  0087               	movwf	7
 23786  13F5  1501               	bsf	1,2
 23787                           
 23788                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 23789  13F6  085F               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 23790  13F7  008A               	movwf	10
 23791  13F8  085E               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 23792  13F9  000A               	callw
 23793  13FA  3193               	pagesel	$
 23794  13FB                     i1l6197:	
 23795                           
 23796                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 23797  13FB  0879               	movf	_eusart1RxHead,w	;volatile
 23798  13FC  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 23799  13FD  0086               	movwf	6
 23800  13FE  3001               	movlw	1	; select bank2/3
 23801  13FF  0087               	movwf	7
 23802  1400  0801               	movf	1,w
 23803  1401  1903               	btfsc	3,2
 23804  1402  2C0A               	goto	i1l6201
 23805                           
 23806                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 23807  1403  0142               	movlb	2	; select bank2
 23808  1404  085D               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 23809  1405  008A               	movwf	10
 23810  1406  085C               	movf	_EUSART1_ErrorHandler^(0+256),w
 23811  1407  000A               	callw
 23812  1408  3193               	pagesel	$
 23813                           
 23814                           ;mcc_generated_files/eusart1.c: 188:     } else {
 23815  1409  0008               	return
 23816  140A                     i1l6201:	
 23817                           
 23818                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 23819  140A  3190  2043         	fcall	_EUSART1_RxDataHandler
 23820  140C  0008               	return
 23821  140D                     __end_of_EUSART1_Receive_ISR:	
 23822                           
 23823                           	psect	text98
 23824  1E81                     __ptext98:	
 23825 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 23826 ;; Defined at:
 23827 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 23828 ;; Parameters:    Size  Location     Type
 23829 ;;		None
 23830 ;; Auto vars:     Size  Location     Type
 23831 ;;		None
 23832 ;; Return value:  Size  Location     Type
 23833 ;;                  1    wreg      void 
 23834 ;; Registers used:
 23835 ;;		None
 23836 ;; Tracked objects:
 23837 ;;		On entry : 0/0
 23838 ;;		On exit  : 0/0
 23839 ;;		Unchanged: 0/0
 23840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23845 ;;Total ram usage:        0 bytes
 23846 ;; Hardware stack levels used:    1
 23847 ;; This function calls:
 23848 ;;		Nothing
 23849 ;; This function is called by:
 23850 ;;		_EUSART1_Initialize
 23851 ;;		_EUSART1_Receive_ISR
 23852 ;; This function uses a non-reentrant model
 23853 ;;
 23854                           
 23855                           
 23856                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 23857  1E81                     _EUSART1_DefaultOverrunErrorHandler:	
 23858                           
 23859                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 23860                           
 23861                           ;incstack = 0
 23862 ;; hardware stack exceeded
 23863                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 23864  1E81  0142               	movlb	2	; select bank2
 23865  1E82  121D               	bcf	29,4	;volatile
 23866                           
 23867                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 23868  1E83  161D               	bsf	29,4	;volatile
 23869  1E84  0008               	return
 23870  1E85                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 23871                           
 23872                           	psect	text99
 23873  1E6D                     __ptext99:	
 23874 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 23875 ;; Defined at:
 23876 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 23877 ;; Parameters:    Size  Location     Type
 23878 ;;		None
 23879 ;; Auto vars:     Size  Location     Type
 23880 ;;		None
 23881 ;; Return value:  Size  Location     Type
 23882 ;;                  1    wreg      void 
 23883 ;; Registers used:
 23884 ;;		None
 23885 ;; Tracked objects:
 23886 ;;		On entry : 0/0
 23887 ;;		On exit  : 0/0
 23888 ;;		Unchanged: 0/0
 23889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23894 ;;Total ram usage:        0 bytes
 23895 ;; Hardware stack levels used:    1
 23896 ;; This function calls:
 23897 ;;		Nothing
 23898 ;; This function is called by:
 23899 ;;		_EUSART1_Initialize
 23900 ;;		_EUSART1_Receive_ISR
 23901 ;; This function uses a non-reentrant model
 23902 ;;
 23903                           
 23904                           
 23905                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 23906  1E6D                     _EUSART1_DefaultFramingErrorHandler:	
 23907                           
 23908                           ;incstack = 0
 23909 ;; hardware stack exceeded
 23910                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 23911  1E6D  0008               	return
 23912  1E6E                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 23913                           
 23914                           	psect	text100
 23915  1E74                     __ptext100:	
 23916 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 23917 ;; Defined at:
 23918 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 23919 ;; Parameters:    Size  Location     Type
 23920 ;;		None
 23921 ;; Auto vars:     Size  Location     Type
 23922 ;;		None
 23923 ;; Return value:  Size  Location     Type
 23924 ;;                  1    wreg      void 
 23925 ;; Registers used:
 23926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23927 ;; Tracked objects:
 23928 ;;		On entry : 0/0
 23929 ;;		On exit  : 0/0
 23930 ;;		Unchanged: 0/0
 23931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23936 ;;Total ram usage:        0 bytes
 23937 ;; Hardware stack levels used:    1
 23938 ;; Hardware stack levels required when called:    1
 23939 ;; This function calls:
 23940 ;;		_EUSART1_RxDataHandler
 23941 ;; This function is called by:
 23942 ;;		_EUSART1_Initialize
 23943 ;;		_EUSART1_Receive_ISR
 23944 ;; This function uses a non-reentrant model
 23945 ;;
 23946                           
 23947                           
 23948                           ;psect for function _EUSART1_DefaultErrorHandler
 23949  1E74                     _EUSART1_DefaultErrorHandler:	
 23950                           
 23951                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 23952                           
 23953                           ;incstack = 0
 23954 ;; hardware stack exceeded
 23955                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 23956  1E74  3190  2043         	fcall	_EUSART1_RxDataHandler
 23957  1E76  0008               	return
 23958  1E77                     __end_of_EUSART1_DefaultErrorHandler:	
 23959                           
 23960                           	psect	text101
 23961  1043                     __ptext101:	
 23962 ;; *************** function _EUSART1_RxDataHandler *****************
 23963 ;; Defined at:
 23964 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 23965 ;; Parameters:    Size  Location     Type
 23966 ;;		None
 23967 ;; Auto vars:     Size  Location     Type
 23968 ;;		None
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  1    wreg      void 
 23971 ;; Registers used:
 23972 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23973 ;; Tracked objects:
 23974 ;;		On entry : 0/0
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23980 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23982 ;;Total ram usage:        1 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; This function calls:
 23985 ;;		Nothing
 23986 ;; This function is called by:
 23987 ;;		_EUSART1_Receive_ISR
 23988 ;;		_EUSART1_DefaultErrorHandler
 23989 ;; This function uses a non-reentrant model
 23990 ;;
 23991                           
 23992                           
 23993                           ;psect for function _EUSART1_RxDataHandler
 23994  1043                     _EUSART1_RxDataHandler:	
 23995                           
 23996                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 23997                           
 23998                           ;incstack = 0
 23999 ;; hardware stack exceeded
 24000                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 24001  1043  0142               	movlb	2	; select bank2
 24002  1044  0819               	movf	25,w	;volatile
 24003  1045  00F0               	movwf	??_EUSART1_RxDataHandler
 24004  1046  0879               	movf	_eusart1RxHead,w
 24005  1047  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 24006  1048  0086               	movwf	6
 24007  1049  3001               	movlw	1	; select bank2/3
 24008  104A  0087               	movwf	7
 24009  104B  0870               	movf	??_EUSART1_RxDataHandler,w
 24010  104C  0081               	movwf	1
 24011  104D  3001               	movlw	1
 24012  104E  00F0               	movwf	??_EUSART1_RxDataHandler
 24013  104F  0870               	movf	??_EUSART1_RxDataHandler,w
 24014  1050  07F9               	addwf	_eusart1RxHead,f	;volatile
 24015                           
 24016                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 24017  1051  3008               	movlw	8
 24018  1052  0279               	subwf	_eusart1RxHead,w	;volatile
 24019  1053  1803               	btfsc	3,0
 24020                           
 24021                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 24022  1054  01F9               	clrf	_eusart1RxHead	;volatile
 24023                           
 24024                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 24025  1055  3001               	movlw	1
 24026  1056  00F0               	movwf	??_EUSART1_RxDataHandler
 24027  1057  0870               	movf	??_EUSART1_RxDataHandler,w
 24028  1058  0141               	movlb	1	; select bank1
 24029  1059  07C6               	addwf	_eusart1RxCount^(0+128),f	;volatile
 24030  105A  0008               	return
 24031  105B                     __end_of_EUSART1_RxDataHandler:	
 24032                           
 24033                           	psect	text102
 24034  1F46                     __ptext102:	
 24035 ;; *************** function _ADCC_ThresholdISR *****************
 24036 ;; Defined at:
 24037 ;;		line 308 in file "mcc_generated_files/adcc.c"
 24038 ;; Parameters:    Size  Location     Type
 24039 ;;		None
 24040 ;; Auto vars:     Size  Location     Type
 24041 ;;		None
 24042 ;; Return value:  Size  Location     Type
 24043 ;;                  1    wreg      void 
 24044 ;; Registers used:
 24045 ;;		wreg, status,2, status,0, pclath, cstack
 24046 ;; Tracked objects:
 24047 ;;		On entry : 0/0
 24048 ;;		On exit  : 0/0
 24049 ;;		Unchanged: 0/0
 24050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24055 ;;Total ram usage:        0 bytes
 24056 ;; Hardware stack levels used:    1
 24057 ;; Hardware stack levels required when called:    1
 24058 ;; This function calls:
 24059 ;;		Absolute function
 24060 ;;		_ADCC_DefaultInterruptHandler
 24061 ;;		_adcThresholdHandler
 24062 ;; This function is called by:
 24063 ;;		_INTERRUPT_InterruptManager
 24064 ;; This function uses a non-reentrant model
 24065 ;;
 24066                           
 24067                           
 24068                           ;psect for function _ADCC_ThresholdISR
 24069  1F46                     _ADCC_ThresholdISR:	
 24070                           
 24071                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 24072                           
 24073                           ;incstack = 0
 24074 ;; hardware stack exceeded
 24075                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 24076  1F46  014E               	movlb	14	; select bank14
 24077  1F47  108D               	bcf	13,1	;volatile
 24078                           
 24079                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 24080  1F48  0142               	movlb	2	; select bank2
 24081  1F49  0858               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 24082  1F4A  0459               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 24083  1F4B  1903               	btfsc	3,2
 24084  1F4C  0008               	return
 24085                           
 24086                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 24087  1F4D  0859               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 24088  1F4E  008A               	movwf	10
 24089  1F4F  0858               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 24090  1F50  000A               	callw
 24091  1F51  319F               	pagesel	$
 24092  1F52  0008               	return
 24093  1F53                     __end_of_ADCC_ThresholdISR:	
 24094                           
 24095                           	psect	text103
 24096  1E6C                     __ptext103:	
 24097 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24098 ;; Defined at:
 24099 ;;		line 320 in file "mcc_generated_files/adcc.c"
 24100 ;; Parameters:    Size  Location     Type
 24101 ;;		None
 24102 ;; Auto vars:     Size  Location     Type
 24103 ;;		None
 24104 ;; Return value:  Size  Location     Type
 24105 ;;                  1    wreg      void 
 24106 ;; Registers used:
 24107 ;;		None
 24108 ;; Tracked objects:
 24109 ;;		On entry : 0/0
 24110 ;;		On exit  : 0/0
 24111 ;;		Unchanged: 0/0
 24112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24117 ;;Total ram usage:        0 bytes
 24118 ;; Hardware stack levels used:    1
 24119 ;; This function calls:
 24120 ;;		Nothing
 24121 ;; This function is called by:
 24122 ;;		_ADCC_Initialize
 24123 ;;		_ADCC_ThresholdISR
 24124 ;; This function uses a non-reentrant model
 24125 ;;
 24126                           
 24127                           
 24128                           ;psect for function _ADCC_DefaultInterruptHandler
 24129  1E6C                     _ADCC_DefaultInterruptHandler:	
 24130                           
 24131                           ;incstack = 0
 24132 ;; hardware stack exceeded
 24133                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 24134  1E6C  0008               	return
 24135  1E6D                     __end_of_ADCC_DefaultInterruptHandler:	
 24136                           
 24137                           	psect	text104
 24138  1E7D                     __ptext104:	
 24139 ;; *************** function _adcThresholdHandler *****************
 24140 ;; Defined at:
 24141 ;;		line 35 in file "beat.c"
 24142 ;; Parameters:    Size  Location     Type
 24143 ;;		None
 24144 ;; Auto vars:     Size  Location     Type
 24145 ;;		None
 24146 ;; Return value:  Size  Location     Type
 24147 ;;                  1    wreg      void 
 24148 ;; Registers used:
 24149 ;;		None
 24150 ;; Tracked objects:
 24151 ;;		On entry : 0/0
 24152 ;;		On exit  : 0/0
 24153 ;;		Unchanged: 0/0
 24154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24159 ;;Total ram usage:        0 bytes
 24160 ;; Hardware stack levels used:    1
 24161 ;; This function calls:
 24162 ;;		Nothing
 24163 ;; This function is called by:
 24164 ;;		_BEAT_init
 24165 ;;		_ADCC_ThresholdISR
 24166 ;; This function uses a non-reentrant model
 24167 ;;
 24168                           
 24169                           
 24170                           ;psect for function _adcThresholdHandler
 24171  1E7D                     _adcThresholdHandler:	
 24172                           
 24173                           ;beat.c: 36:     thresholdExceeded = 1;
 24174                           
 24175                           ;incstack = 0
 24176 ;; hardware stack exceeded
 24177                           ; Regs used in _adcThresholdHandler: []
 24178  1E7D  0141               	movlb	1	; select bank1
 24179  1E7E  01AE               	clrf	_thresholdExceeded^(0+128)
 24180  1E7F  0AAE               	incf	_thresholdExceeded^(0+128),f
 24181  1E80  0008               	return
 24182  1E81                     __end_of_adcThresholdHandler:	
 24183  007E                     btemp	set	126	;btemp
 24184  007E                     int$flags	set	126
 24185  007E                     wtemp0	set	126


Data Sizes:
    Strings     146
    Constant    96
    Data        12
    BSS         164
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     37      80
    BANK2            80      6      80
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_14(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_14(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_22(CODE[6]), STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[9]), 
		 -> STR_18(CODE[10]), STR_17(CODE[9]), STR_16(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[6]), 
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S3105_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_22(CODE[6]), STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[9]), 
		 -> STR_18(CODE[10]), STR_17(CODE[9]), STR_16(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[6]), 
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_22(CODE[6]), STR_21(CODE[7]), STR_20(CODE[8]), STR_19(CODE[9]), 
		 -> STR_18(CODE[10]), STR_17(CODE[9]), STR_16(CODE[8]), STR_15(CODE[7]), 
		 -> STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[8]), 
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[6]), 
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1993$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1139$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S1162$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S1162$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_printf
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_LED_task_BEAT_STROBE
    _LED_task_BEAT_STROBE->_beatColorCreator
    _beatColorCreator->_beatBrightnessCalculation
    _beatBrightnessCalculation->___fltol
    _LED_setColor->_beatColorCreator
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _DMX_init->_TM1650_fastPrintNum
    _CONTROLLER_task->_menuSelection
    _menuSelection->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _CONTROL_MANUAL->_colorDec
    _CONTROL_MANUAL->_colorInc
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->_I2C1_MasterWrite
    _writeData->___lwmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CONTROL_BEAT->_BUTTONS_isHeld
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _TM1650_init->_printf
    _LED_task->_LED_task_DMX
    _LED_task_DMX->_LED_setColor
    _LED_task_BEAT_STROBE->_LED_setColor
    _beatColorCreator->_beatBrightnessCalculation
    _LED_setColor->_beatColorCreator
    _CONTROLLER_task->_printf
    _menuSelection->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _LED_task->_LED_task_DMX

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  145020
                                              4 BANK2      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   19447
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0   62492
                                             35 BANK1      2     2      0
                       _LED_setColor
                 _LED_task_ANIMATION
           _LED_task_BEAT_CONTINUOUS
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
                       _LED_task_DMX
                    _LED_task_MANUAL
                   _beatColorCreator
                          _getIsHold
                            _getMode
 ---------------------------------------------------------------------------------
 (2) _getMode                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getIsHold                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_MANUAL                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_DMX                                         9     9      0   11377
                                             30 BANK1      5     5      0
                                              0 BANK2      4     4      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (3) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_STROBE                                 3     3      0   25590
                                             79 BANK0      1     1      0
                                             30 BANK1      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
                   _beatColorCreator
 ---------------------------------------------------------------------------------
 (2) _beatColorCreator                                    14    10      4   14293
                                             78 BANK0      1     1      0
                                              9 BANK1     13     9      4
                            ___fltol
          _beatBrightnessCalculation
 ---------------------------------------------------------------------------------
 (3) _beatBrightnessCalculation                           10     6      4    8509
                                             77 BANK0      1     1      0
                                              0 BANK1      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         8     4      4   11232
                                             22 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _beatColorCreator (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     930
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4    1061
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4073
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    2411
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_MIXED                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_FADE                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_CONTINUOUS                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    5293
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   53088
                                             79 BANK0      1     1      0
                                             10 BANK1      2     2      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                       _CONTROL_BEAT
                        _CONTROL_DMX
                     _CONTROL_MANUAL
                      _TM1650_enable
                _TM1650_fastPrintNum
                     _getManualColor
                      _menuSelection
                             _printf
 ---------------------------------------------------------------------------------
 (2) _menuSelection                                        2     2      0   16746
                                             77 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   16746
                                             73 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   14775
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   14340
                                             56 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2    9778
                                             50 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    9534
                                             41 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    4282
                                             33 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    3890
                                             25 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    2946
                                             23 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    2822
                                             20 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _getManualColor                                       3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2701
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _CONTROL_MANUAL                                       3     3      0     590
                                              3 BANK0      3     3      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                           _colorDec
                           _colorInc
 ---------------------------------------------------------------------------------
 (3) _colorInc                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _colorDec                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0   10555
                                             23 BANK0      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0    5082
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0    5082
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    5082
                                             20 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                     _getManualColor (ARG)
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    2670
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1400
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         1     1      0     391
                                              1 BANK0      1     1      0
                     _BUTTONS_isHeld
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     391
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     880
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1167
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _CONTROL_BEAT
       _BUTTONS_isHeld
     _CONTROL_DMX
       _BUTTONS_isHeld
       _CLOCK_getTime
       _address_dec
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _getManualColor (ARG)
           _writeData (ARG)
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
       _address_inc
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _getManualColor (ARG)
           _writeData (ARG)
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
     _CONTROL_MANUAL
       _BUTTONS_isHeld
       _CLOCK_getTime
       _colorDec
       _colorInc
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _getManualColor (ARG)
       _writeData (ARG)
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _getManualColor
     _menuSelection
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _getManualColor (ARG)
       _writeData (ARG)
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_init
   _LED_task
     _LED_setColor
       _PWM1_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM2_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM3_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM4_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _beatColorCreator (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_ANIMATION
     _LED_task_BEAT_CONTINUOUS
     _LED_task_BEAT_FADE
     _LED_task_BEAT_MIXED
     _LED_task_BEAT_STROBE
       _BEAT_detected
       _CLOCK_getTime
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _beatColorCreator
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_DMX
       _DMX_getAddress
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _LED_task_MANUAL
     _beatColorCreator
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _beatBrightnessCalculation
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _getIsHold
     _getMode
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     13E       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      6      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     13E      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 29 12:35:19 2019

                       __end_of_LED_task_MANUAL 1E74                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0070                                              _up 00BD  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00D2  
                           __Umul8_16@word_mpld 0026                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 1E7D                                             l911 0E97  
                                           l909 0E29                                             _PR2 028D  
                                           _bpm 0140                                             _pad 1539  
                       __size_of_PMD_Initialize 000A                                 _TMR2_Initialize 1F60  
                               _PWM4_Initialize 1F2F                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                    ___flmul@aexp 0056  
                                  ___flmul@bexp 005B                              _LED_task_BEAT_FADE 1E71  
                                  ___flmul@sign 0055                                    ___flmul@temp 0060  
                                  ___flmul@prod 005C                                   __CFG_BBEN$OFF 0000  
                              __end_of_I2C1_ISR 1000                                    ___fltol@exp1 006C  
                                          l1021 030F                                            l1018 0305  
                                          l1141 07B7                                            l2111 08E5  
                                          l1064 0856                                            l1129 07A2  
                                          l1073 08C6                                            l2033 04AB  
                                          l2124 092F                                            l2125 0939  
                                          l2117 091B                                            l2054 05B2  
                                          l1087 09B1                                            l2055 05CA  
                                          l2057 05D7                                            l2163 11A0  
                                          l1453 0848                                            l2085 02AF  
                                          l1471 123F                                            l1375 163F  
                                          l1466 1477                                            l1651 1571  
                                          l1648 1551                                            l6011 121D  
                          _ADCC_StartConversion 1EBC                                            l6023 1223  
                                          l6017 1220                                            l5403 081C  
                                          l5413 0832                                            l6029 1226  
                                          l6037 1229                                            l1877 168A  
                                          ?_pad 0049                                            l5431 1453  
                                          l5423 1445                                            l5407 0827  
                                          l7111 11E2                                            l5441 1461  
                                          l5435 145A                                            l5427 144C  
                                          l7123 1482                                            l8101 1740  
                                          l8021 09BB                                            l8005 09B3  
                                          l7109 11E0                                            l4733 1078  
                                          l7213 0A6A                                            l7301 04A0  
                                          l4911 12C9                                            l8007 097E  
                                          l7127 14A5                                            l4735 1084  
                                          l7143 1547                                            l7207 0A49  
                                          l7223 0A7B                                            l8105 1746  
                                          l7065 1E89                                            l7081 15CE  
                                          l7137 1244                                            l7153 1553  
                                          l7217 0A70                                            l7401 05D3  
                                          l7321 04D6                                            l7305 04A3  
                                          l7233 164A                                            l8123 176B  
                                          l4915 12D5                                            l7083 15D4  
                                          l5395 0806                                            l7147 154F  
                                          l9011 0453                                            l7315 04CA  
                                          l8117 175E                                            l4909 12BD  
                                          l7077 15C7                                            l7093 12AF  
                                          l8029 09CA                                            l9021 1469  
                                          l7157 157D                                            l7165 1321  
                                          l9013 08B5                                            l7341 051D  
                                          l7421 00AA                                            l7253 1678  
                                          l7237 1653                                            l8301 0D35  
                                          l4919 12DE                                            l8039 09D2  
                                          l5399 0811                                            l8207 07DD  
                                          l8151 07A4                                            l9015 1231  
                                          l7167 132A                                            l7351 053B  
                                          l7511 0245                                            l7503 0217  
                                          l7423 00AC                                            l7263 1697  
                                          l7255 1686                                            l8129 1779  
                                          l8049 09D9                                            l8217 07F5  
                                          l9017 07CF                                            l8153 0763  
                                          l7281 047C                                            l7505 022E  
                                          l7441 00CF                                            l7425 00B4  
                                          l9009 1628                                            l8083 1747  
                                          l7099 10F1                                            l8067 09F4  
                                          l9019 083A                                            l8235 1010  
                                          l7347 0536                                            l7179 119A  
                                          l7515 0247                                            l7451 00E5  
                                          l7443 00D7                                            l8331 0D44  
                                          l8307 0D38                                            l4893 1434  
                                          l4885 1416                                            l7701 1F7B  
                                          l8093 1739                                            l7373 056F  
                                          l7365 0541                                            l7349 04FF  
                                          l7285 047F                                            l7525 0270  
                                          l8325 0D3F                                            l4887 1422  
                                          l8087 1749                                            l8191 07BB  
                                          l8167 07AC                                            l7631 110C  
                                          l7615 1166                                            l7367 0558  
                                          l7287 0487                                            l7535 029C  
                                          l7439 00CD                                            l8343 0D4F  
                                          l8319 0D3B                                            l4897 143D  
                                          l8441 0E65                                            l8433 0E41  
                                          l8089 172E                                            l8193 07BD  
                                          l8169 0798                                            l8521 0362  
                                          l7377 0571                                            l7529 0285  
                                          l7553 08DD                                            l8337 0D47  
                                          l8427 0E23                                            l8419 0DE2  
                                          l7723 1065                                            l7715 1096  
                                          l8195 07C3                                            l8179 079E  
                                          l8603 0415                                            l8515 0351  
                                          l8507 033C                                            l7387 059A  
                                          l7563 08F8                                            l8275 0D69  
                                          l8445 0E78                                            l7661 0B78  
                                          l7725 1069                                            l7717 109A  
                                          l8605 0417                                            l8509 0340  
                                          l8517 0353                                            l7573 092D  
                                          l7565 0908                                            l8269 0D26  
                                          l8199 07C6                                            l8607 0419  
                                          l8535 042B                                            l8527 038A  
                                          l7735 1EE7                                            l7647 112A  
                                          l7575 0920                                            l7559 08F4  
                                          l7751 0AC8                                            l8295 0D2F  
                                          l8633 0C3D                                            l7673 12EC  
                                          l8609 041B                                            l8537 042E  
                                          l8529 038E                                            l7753 0AC9  
                                          l8289 0D2D                                            l7675 1309  
                                          l8539 039D                                            l8547 0431  
                                          l8491 031E                                            l8475 0308  
                                          l7587 0954                                            l7771 0B44  
                                          l7763 0B1A                                            l8653 0C78  
                                          l8637 0C44                                            l8549 03B3  
                                          l8557 0435                                            l7765 0B1B  
                                          l7757 0AF1                                            l8733 14DE  
                                          l8655 0C8B                                            l7935 1FD6  
                                          l7951 0866                                            l8559 03C1  
                                          l8567 0438                                            l8495 0325  
                                          l7599 1148                                            l7759 0AF2  
                                          l7961 0877                                            l7953 086D  
                                          l7945 0858                                            l8569 03D6  
                                          l8577 043C                                            l7769 0B43  
                                          l7971 0884                                            l8579 03EB  
                                          l8587 0440                                            l8499 032D  
                                          l8691 160B                                            l8683 15FF  
                                          l8669 0CBE                                            l7973 088C  
                                          l8589 0400                                            l8597 0444  
                                          l8693 160E                                            l8685 1602  
                                          l8677 15E2                                            l7975 0894  
                                          l7983 08AC                                            l7959 0876  
                                          l8687 1605                                            l8679 15E5  
                                          l7977 089C                                            l8689 1608  
                                          l7979 08A4                                            l8699 161D  
                                ?_TM1650_enable 0070                                            STR_1 2081  
                                          STR_2 207B                                            STR_3 204D  
                                          STR_4 2045                                            STR_5 203D  
                                          STR_6 2035                                            STR_7 2075  
                                          STR_8 2087                                            STR_9 2087  
                       __end_of_PWM1_Initialize 1F19                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          _T2PR 028D                                            u3605 1435  
                                          u3635 12C0                                            _PMD0 0796  
                                          u3565 1419                                            _PMD1 0797  
                                          _PMD2 0798                                            u3655 12CF  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u3585 1423                                            u3665 12D6  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u3595 142D                                            _PMD7 079D  
                                          u7045 0588                                            u7205 0206  
                                          u7055 05A3                                            u7215 021A  
                                          u7065 05BC                                            u7305 025E  
                                          u8115 075C                                            u7315 0279  
                                          u7235 0223                                            u6605 155D  
                                          u7325 028F                                            u7165 015B  
                                          u9015 0C9F                                            u7175 018A  
                                          u7415 0927                                            u8145 0776  
                                          u7505 1144                                            u7185 01E0  
                                          u6705 165C                                            u8155 0791  
                                          u7195 01F7                                            u6565 14A3  
                                          u6645 11A1                                            u8415 0DE5  
                                          u7535 1162                                            u6735 1679  
                                          u7455 0941                                            u7375 0901  
                                          u8424 0E04                                            u8425 0E03  
                                          u6915 0517                                            u7395 0915  
                                          u7565 1108                                            u6925 052B  
                                          u6765 168E                                            u9077 14B8  
                    ?_beatBrightnessCalculation 00C7                                            u7815 0978  
                                          u7595 1126                                            u6955 0544  
                                          u7845 0991                                            u6885 0507  
                                          u7855 09AB                                            u6975 054D  
                                          u6895 050E                                            u7960 1725  
                                          u7970 1726                                            u8965 0C26  
                                          _TMR2 028C                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                            _LED_task_ANIMATION 1E6F                                   __CFG_FCMEN$ON 0000  
                           ?_LED_task_BEAT_FADE 0070                                   ?_BUTTONS_init 0070  
                                 ?_BUTTONS_task 0070                                            _dbuf 01A0  
                          ?_adcThresholdHandler 0070                                            _ctoa 1312  
                                          _main 14AF                                            _down 00BC  
                                          _init 116F                                            _menu 00BE  
                                          _prec 0134                                            _nout 0130  
                                          pad@i 004D                                            pad@p 004A  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 004F                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                                          start 0030                                 ___fldiv@new_exp 0040  
                       __end_of_TM1650_setDigit 1FB1                             ?_LED_task_ANIMATION 0070  
                            __size_of_GPIO_init 0011                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                          __size_of_address_dec 0018                            __size_of_address_inc 0019  
                I2C1_MasterWriteTRBBuild@length 0021                             _LED_task_BEAT_MIXED 1E72  
                                _BUTTONS_isHeld 1F6E                                           ??_pad 004C  
                       __end_of_PWM2_Initialize 1F24                         __end_of_TMR0_Initialize 1FEC  
                                    _i2c1_state 00C4                  ??_TMR0_DefaultInterruptHandler 0070  
                __size_of_OSCILLATOR_Initialize 0009                            ??_LED_task_BEAT_FADE 0020  
                     I2C1_MasterTRBInsert@count 0023                   __end_of_OSCILLATOR_Initialize 0800  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 0120  
                              __end_of_LED_init 1EAA                                   ___fltol@sign1 006B  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_ctoa 0052                                __end_of_LED_task 1640  
                                         ?_main 0070                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 05DC  
                                         _ADREF 0116                               __end_of_I2C1_Stop 10BE  
                                         STR_10 2069                                           STR_11 206F  
                                         STR_12 208D                                           STR_20 2025  
                                         STR_13 2067                                           STR_21 2055  
                                         STR_22 2063                                           STR_14 201C  
                                         STR_15 205C                                           STR_16 202D  
                                         STR_17 2013                                   __CFG_WDTE$OFF 0000  
                                         STR_18 2000                                           STR_19 200A  
                              __end_of_DMX_init 1FC4                                           _ADRPT 009A  
                               __end_of___flmul 02BC                                 __end_of___fltol 16A6  
                                         _T2CON 028E                                           _LATC5 00D5  
                                         _T2HLT 028F                                 __end_of___lwdiv 1442  
                    _ADCC_ADTI_InterruptHandler 0158                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l430 0017  
                                         i1l432 001E                                 __end_of___lwmod 12E3  
                                         i1l434 0025                                           i1l427 000E  
                                         i1l439 002E                                           i1l552 0EF0  
                                         i1l553 0EF1                                           i1l547 0EC2  
                                         i1l581 0FC0                                           i1l573 0F7C  
                                         i1l558 0F13                                           i1l559 0F1F  
                                         i1l576 0F8B                                           i1l577 0F99  
                                         i1l569 0F5C                                           i1l588 1F8B  
                                         _OSCEN 0891                                    vfpfcnvrt@fmt 0058  
                            _PWM4_LoadDutyValue 1151                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                __end_of_LED_task_BEAT_CONTINUOUS 1E71  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 1E7A                            ??_LED_task_ANIMATION 0020  
                     ?_TMR0_SetInterruptHandler 0020                                 __end_of_getMode 0803  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 1F60  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                           _delay 0166  
                          ?_LED_task_BEAT_MIXED 0070                                           _flags 0136  
                                         _enter 00BB                           ?_ADCC_StartConversion 0070  
                                         _fputc 1478                                           _fputs 1240  
                           ?_PWM4_LoadDutyValue 00C7                       __size_of_beatColorCreator 00AF  
                                         pad@fp 0051                                           _width 0132  
                                         ctoa@c 0052                                           _putch 11D2  
                                         ctoa@w 0055                         __end_of_PWM3_Initialize 1F2F  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0070  
                             __end_of_BEAT_init 1043                               __end_of_BEAT_task 0CE1  
                                         status 0003                                   colorDec@input 0022  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 1E6E  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0070  
           ?_EUSART1_DefaultFramingErrorHandler 0070              _EUSART1_DefaultFramingErrorHandler 1E6D  
               I2C1_MasterWriteTRBBuild@address 0022                          __end_of_BUTTONS_isHeld 1F7D  
                               __initialization 0032                            TM1650_setDigit@digit 0036  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                              ?_LED_task_MANUAL 0070                                    __end_of_ctoa 1342  
                    __end_of_EUSART1_Initialize 13A6                                    __end_of_main 14EB  
                                  __end_of_init 118F                                 _CONTROLLER_task 02BC  
                          ??_PWM4_LoadDutyValue 006D                                   ?_LED_setColor 00DD  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
                                 ?_LED_task_DMX 0070                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 1ECE                         __end_of_PWM4_Initialize 1F3A  
                       __end_of_TMR2_Initialize 1F6E                     ?_INTERRUPT_InterruptManager 0070  
                          _LED_task_BEAT_STROBE 0CE1                                     _i2c1_object 00A0  
                                        ??_ctoa 0054                                          ??_main 016E  
                                        ??_init 0023                            __end_of_CONTROL_BEAT 1783  
                                 colorInc@input 0022                               __end_of_GPIO_init 1F9F  
                         ??_LED_task_BEAT_MIXED 0020                                 ??_TM1650_enable 0034  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                            __size_of_CONTROL_DMX 0099  
                                        ?_fputc 0039                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          ?_fputs 0041  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR3H 0315                                          _CCPR1L 030C  
                                        _CCPR4H 0319                                          _CCPR2L 0310  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        ?_putch 0070                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RC4PPS 1F24  
                              ?_PWM1_Initialize 0070                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l6201 140A                                          i1l6301 0F6A  
                                        i1l6321 0FA0                                  __CFG_WDTCCS$SC 0000  
                                        i1l6235 0EE3                                          i1l6341 0FCB  
                                        i1l6325 0FA7                                          i1l6309 0F7F  
                                        i1l6253 0F0D                                          i1l6191 13ED  
                                        i1l6247 0EFD                                          i1l6239 0EEA  
                                        i1l6337 0FC4                                          i1l6339 0FC7  
                                        i1l6267 0F38                                          i1l6347 0FD3  
                                        i1l6197 13FB                                          i1l9023 0FDC  
                                        i1l6287 0F51                                          i1l6705 1368  
                                        i1l6709 1370                                          i1l5669 10BC  
                                        i1l6697 1347                                          _OSCFRQ 0893  
                        __size_of_DMX_interrupt 0031                                          _TX1REG 011A  
                                        _TX1STA 011E                                __end_of___xxtofl 095D  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0034                                 ?_BUTTONS_isHeld 0070  
                            ??_I2C1_MasterWrite 002B                                    _CCPTMRS0bits 021E  
                                  vfprintf@cfmt 0067                                __end_of_colorDec 1478  
                              __end_of_colorInc 0849                                  _p_i2c1_current 00C2  
                                ??_LED_setColor 00E1                     __size_of_PWM3_LoadDutyValue 001E  
                                ??_LED_task_DMX 00E5                     __end_of_TM1650_fastPrintNum 0C0F  
                             _ADCC_ThresholdISR 1F46                                       ??___fldiv 0036  
                        __size_of_menuSelection 007E                                  __CFG_STVREN$ON 0000  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 0024                                       ??___lwmod 002C  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                                        _manual 00A5                                ?_TMR0_Initialize 0070  
                              ?_PWM2_Initialize 0070                              ?_ADCC_ThresholdISR 0070  
                         ?_LED_task_BEAT_STROBE 0070                                       ?_I2C1_ISR 0070  
                                     ??_getMode 0020                                          _printf 1017  
                        __size_of_BEAT_detected 0009                                          pad@buf 0049  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                        ctoa@fp 0057                                  _lastActiveTime 0144  
                                        _strlen 1073                            __size_of_TM1650_init 0014  
                               _ADCC_Initialize 1266                                          fputc@c 0039  
                                _PMD_Initialize 1F04                                          fputs@c 0045  
                                  ??_CLOCK_init 0022                                          fputs@i 0046  
                                        fputs@s 0048                                    __pdataCOMMON 007C  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0070  
                        ??_ADCC_StartConversion 0020                                          putch@n 0038  
                              __end_of_vfprintf 1312            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 1EB3                   I2C1_MasterWriteTRBBuild@pdata 0020  
                      _LED_task_BEAT_CONTINUOUS 1E70                                   _tm1650_status 014C  
                               _eusart1RxBuffer 0128                         beatColorCreator@inGreen 00D0  
                              ?_PWM3_Initialize 0070                                    ___xxtofl@arg 002A  
                                  ___xxtofl@exp 0029                               _SYSTEM_Initialize 11F6  
                                  ___xxtofl@val 0020                         beatColorCreator@inWhite 00D2  
                       __end_of__initialization 008C                         __end_of_CONTROLLER_task 0462  
                            ?_SYSTEM_Initialize 0070                      __end_of_PWM2_LoadDutyValue 1133  
                                     ?_LED_init 0070                                       ?_LED_task 0070  
                                    ___fltol@f1 0062                                       ?_DMX_init 0070  
                                _i2c1_trb_count 00C3                     PWM1_LoadDutyValue@dutyValue 00C7  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 1F53  
                       __size_of_DMX_getAddress 0003                   __end_of_EUSART1_RxDataHandler 105B  
                         _I2C1_FunctionComplete 1F7D                            _I2C1_BusCollisionISR 1E77  
                                __pcstackCOMMON 0070                              __end_of_CLOCK_init 1EA2  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK1 1E85  
                                  __pidataBANK2 1E94                             ??_SYSTEM_Initialize 0022  
                                     ?_TMR0_ISR 0070                                   __end_of_fputc 14AF  
                                 __end_of_fputs 1266                                   __end_of_putch 11F6  
                            _PWM1_LoadDutyValue 10F7                                      ??_I2C1_ISR 0072  
                              ?_TMR2_Initialize 0070                                ?_PWM4_Initialize 0070  
                                 _DMX_interrupt 1342                            __end_of_BUTTONS_init 1539  
                        __end_of_PMD_Initialize 1F0E                            __end_of_BUTTONS_task 0EAE  
                   PWM4_LoadDutyValue@dutyValue 00C7                              __size_of_getIsHold 0002  
                       __size_of_getManualColor 0026                             ?_PWM1_LoadDutyValue 00C7  
                   __end_of_EUSART1_Receive_ISR 140D                               _thresholdExceeded 00AE  
                   ADCC_StartConversion@channel 0020                               LED_setColor@input 00DD  
                                 _menuSelection 0849                                         ??_fputc 003C  
                     __end_of_SYSTEM_Initialize 121A                                         ??_fputs 0042  
                              _beatColorCreator 0A9E                                         ??_putch 0037  
                                 _eusart1RxHead 0079                                   _eusart1RxTail 0078  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                 ??_EUSART1_SetRxInterruptHandler 0022  
                   ??_beatBrightnessCalculation 00CB                                   _BEAT_detected 1EE0  
                                    ??_LED_init 0020                                      ??_LED_task 00EA  
                                    ??_DMX_init 0037                            ??_PWM1_LoadDutyValue 006D  
                             __end_of__Umul8_16 11AF                           ?_I2C1_BusCollisionISR 0070  
               __end_of_EUSART1_SetErrorHandler 1EF2                                      __pmaintext 14AF  
              __end_of_TMR0_SetInterruptHandler 1ED7                                      ??_TMR0_ISR 0070  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 128C                          ??_LED_task_BEAT_STROBE 00E5  
                                    __pintentry 0004                                 _I2C1_Initialize 10BE  
                                       _CCP1CON 030E                                         _CCP2CON 0312  
                                       _CCP3CON 0316                           __size_of_CONTROL_BEAT 006F  
                                       _CCP4CON 031A                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                  ?_DMX_interrupt 0070  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 1EB3  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 1EAA  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               __CFG_ZCDDIS$OFF 0000                                         ?_printf 00C7  
                               ?_PMD_Initialize 0070                                         ?_strlen 0020  
        __end_of_EUSART1_SetFramingErrorHandler 1EFB         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 1EF2                                       ?___xxtofl 0020  
                  ?_EUSART1_DefaultErrorHandler 0070                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00A8  
                                     _I2C1_Stop 10A4                                      _arrayIndex 013A  
                                ?_menuSelection 0070                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 073F  
                             _colorModeSelected 00B1                                       ?_colorDec 0070  
                             __end_of_charTable 1860                             _CLOCK_timerCallback 1E8E  
                                     ?_colorInc 0070                            __end_of_LED_task_DMX 1714  
                                ?_BEAT_detected 0070                   I2C1_MasterTRBInsert@ptrb_list 0020  
                       __size_of_CONTROL_MANUAL 00B8                              __size_of_writeData 001D  
                             __end_of_getIsHold 1002                                   ??_address_dec 0037  
                                 ??_address_inc 0037                                ?_CONTROLLER_task 0070  
                                    _enterState 00B3                                 BUTTONS_task@btn 0028  
                                  _CONTROL_BEAT 1714                          ?_I2C1_FunctionComplete 0070  
                                     _BEAT_init 102C                   __size_of_I2C1_MasterTRBInsert 0055  
                                     _BEAT_task 0C0F                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 0077                                         ___fldiv 0462  
                          ?_CLOCK_timerCallback 0070                                         ___flmul 0090  
                                       ___fltol 1640                                         ___lwdiv 140D  
                                       ___lwmod 12B6                                       ?_vfprintf 0061  
                     _beatBrightnessCalculation 1783                                         _address 00EC  
                   __size_of_LED_task_BEAT_FADE 0001                                         _getMode 0800  
                                       __ptext1 1FEC                                         __ptext2 11F6  
                                       __ptext3 1F60                                         __ptext4 1FD8  
                                       __ptext5 1F2F                                         __ptext6 1F24  
                                       __ptext7 1F19                                         __ptext8 1F0E  
                                       __ptext9 1F04                                 __size_of_printf 0015  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                               __size_of_strlen 0018                                         _lastRun 013E  
                         _OSCILLATOR_Initialize 07F7                                       _T2CONbits 028E  
                                  __size_of_pad 0053                                         _initial 0164  
                                       _buttons 01C0                                      ??___xxtofl 0024  
                            _EUSART1_Initialize 1373                        ??_PIN_MANAGER_Initialize 0020  
                                     _T2HLTbits 028F                                 __CFG_WRTSAF$OFF 0000  
                   __size_of_LED_task_ANIMATION 0001                                      ?_I2C1_Stop 0070  
                   __end_of_adcThresholdHandler 1E81                                         _upState 00B6  
                 ??_EUSART1_DefaultErrorHandler 0071                                         _startup 00EE  
                    __size_of_SYSTEM_Initialize 0024                   LED_task_BEAT_STROBE@beatState 006F  
                          I2C1_ISR@pi2c_buf_ptr 00C1                                         clrloop0 1F3B  
                                    ??_colorDec 0020                                      ??_colorInc 0020  
                              _currentSelection 00B9                            end_of_initialization 008C  
                                     _T2RSTbits 0291                                       _GPIO_init 1F8E  
                           ?_EUSART1_Initialize 0070                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                                       fputc@fp 003B                     _EUSART1_OverrunErrorHandler 015E  
                                       fputs@fp 0041                          ??_I2C1_BusCollisionISR 0070  
                       __end_of_I2C1_Initialize 10DA                                  _DMX_getAddress 1E7A  
         __end_of_EUSART1_SetRxInterruptHandler 1EE0          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 1ED7                                      ?_BEAT_init 0070  
                                    ?_BEAT_task 0070                   beatBrightnessCalculation@temp 006D  
                             __end_of_vfpfcnvrt 0A9E                           __size_of_BUTTONS_init 004E  
                         __size_of_BUTTONS_task 00EE                           ??_CLOCK_timerCallback 0070  
                               ??_DMX_interrupt 0070                             __end_of_address_dec 1073  
                   __size_of_PWM4_LoadDutyValue 001E                             __end_of_address_inc 10A4  
                              ?_ADCC_Initialize 0070                                      ??_vfprintf 0064  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                                       strlen@a 0023                                         strlen@s 0020  
                      _TMR0_SetInterruptHandler 1ECE                     __end_of_LED_task_BEAT_MIXED 1E73  
                    ??_LED_task_BEAT_CONTINUOUS 0020                                  _getManualColor 121A  
                     __size_of_I2C1_MasterWrite 002A                               __size_of_I2C1_ISR 0152  
                      __size_of_LED_task_MANUAL 0001                               __end_of_writeData 10F7  
                               ??_menuSelection 006D                         ?_ADCC_SetUpperThreshold 0020  
                                 ??_CONTROL_DMX 0037                                   ___xxtofl@sign 0028  
                                     _TRISAbits 0012                                       _TRISCbits 0014  
                                   ___fldiv@grs 0042                                     ___fldiv@rem 003B  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 1017  
             I2C1_ISR@i2c_10bit_address_restart 00BF                                      ?_GPIO_init 0070  
                           getManualColor@input 0022                          __size_of_CLOCK_getTime 0009  
                                   ___flmul@grs 0057                                    _BUTTONS_init 14EB  
                                  _BUTTONS_task 0DC0                          __end_of_DMX_getAddress 1E7D  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028                      __end_of_PWM3_LoadDutyValue 1151  
          __size_of_EUSART1_DefaultErrorHandler 0003                        __size_of_PWM1_Initialize 000B  
                             __size_of_LED_init 0008                               __size_of_LED_task 005F  
                             __size_of_DMX_init 0013                        __end_of_beatColorCreator 0B4D  
                ??_ADCC_DefaultInterruptHandler 0070                                   ??_TM1650_init 006D  
                                   vfpfcnvrt@ap 0059                                     vfpfcnvrt@fp 0060  
                       I2C1_MasterWrite@trBlock 0151                          __end_of_getManualColor 1240  
                                 __pidataCOMMON 0002                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0071                              _PWM2_LoadDutyValue 1115  
                      __size_of_TM1650_setDigit 0012                          ?_OSCILLATOR_Initialize 0070  
                __end_of_ADCC_SetUpperThreshold 1EBC                    __size_of_TM1650_fastPrintNum 00C2  
                                __end_of_printf 102C                           __size_of_LED_setColor 0163  
                                __end_of_strlen 108B                                    _lastDetected 00AD  
                         __size_of_LED_task_DMX 006E                             start_initialization 0032  
                                  _enterPressed 00B7                                     ??_I2C1_Stop 0070  
                      __size_of_PWM2_Initialize 000B                        __size_of_TMR0_Initialize 0014  
                           ?_PWM2_LoadDutyValue 00C7                 __size_of_PIN_MANAGER_Initialize 0033  
                           TM1650_setDigit@data 0034                                     __end_of_pad 158C  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020                                  _beatBrightness 00EF  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 1FC4  
                           __end_of_CONTROL_DMX 09F6                                  _CONTROL_MANUAL 073F  
                               ?_DMX_getAddress 0070                              ?_BUTTONS_isClicked 0070  
                                   _address_dec 105B                                     _address_inc 108B  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0070  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                          ??_PWM2_LoadDutyValue 006D                        __size_of_PWM3_Initialize 000B  
                                   vfprintf@fmt 0061                     PWM2_LoadDutyValue@dutyValue 00C7  
                           ??_BUTTONS_isClicked 0020                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 1043                                    _LED_setColor 05DC  
                ?_EUSART1_SetRxInterruptHandler 0020                             CONTROL_MANUAL@input 0025  
                                     __Umul8_16 118F                                     __pdataBANK1 00EC  
                                   __pdataBANK2 0164                                    _LED_task_DMX 16A6  
                               ?_getManualColor 0070                                   _CLOCK_getTime 1EC5  
                                      ??_printf 0069                                        ??_strlen 0022  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 00C6  
                        beatColorCreator@inBlue 00D1                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 23EE  
                           __end_of_TM1650_init 2000                                       ___flmul@a 004C  
                                     ___flmul@b 0048                                     __pbssCOMMON 0077  
             _EUSART1_RxDefaultInterruptHandler 0162                                       ___latbits 0003  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00C7  
                                 __pcstackBANK2 016A              __size_of_beatBrightnessCalculation 007D  
                      __size_of_PWM4_Initialize 000B                        __size_of_TMR2_Initialize 000E  
                                 _i2c1_tr_queue 0155                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 1FD8                       beatColorCreator@tempColor 00D9  
                             ??_LED_task_MANUAL 0020                          __end_of_CONTROL_MANUAL 07F7  
                                   ??_GPIO_init 0020                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0070  
                  __size_of_EUSART1_Receive_ISR 0034                               __size_of_colorDec 0036  
                             __size_of_colorInc 0046                                    _menuSelected 00BA  
                                  _currentState 00A9                                       _charTable 1800  
                         _TMR0_InterruptHandler 015A                                       __pnvBANK2 0158  
                   __size_of_PWM1_LoadDutyValue 001E                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 13A6                                       _getIsHold 1000  
                                      ?___fldiv 002E                                       __ptext100 1E74  
                                     __ptext101 1043                                       __ptext102 1F46  
                                     __ptext103 1E6C                                       __ptext104 1E7D  
                                      ?___flmul 0048                                        ?___fltol 0062  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0028                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 0EAE                   __size_of_LED_task_BEAT_STROBE 00DF  
                             ??_PWM1_Initialize 0020                    ??_INTERRUPT_InterruptManager 0077  
                               writeData@status 0033                                        ?_getMode 0070  
                             __size_of_vfprintf 002F                                _I2C1_MasterWrite 128C  
                                      _BAUD1CON 011F                    __end_of_I2C1_MasterTRBInsert 15E1  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1E85     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0070             ?_EUSART1_DefaultOverrunErrorHandler 0070  
            _EUSART1_DefaultOverrunErrorHandler 1E81                            _EUSART1_ErrorHandler 015C  
                                     _downState 00B5                                     _CONTROL_DMX 095D  
                       _EUSART1_SetErrorHandler 1EE9                               ??_TM1650_setDigit 0035  
                              ___lwdiv@quotient 0025               __end_of_beatBrightnessCalculation 1800  
                                __size_of_fputc 0037                                        _T2CLKCON 0290  
                                     _menuState 00B4                                  __size_of_fputs 0026  
                               ?_CONTROL_MANUAL 0070                                  __size_of_putch 0024  
      __end_of_I2C1_WaitForLastPacketToComplete 1E8E       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0070  
              _I2C1_WaitForLastPacketToComplete 1E89                          I2C1_MasterRead@trBlock 014D  
                             ??_TMR0_Initialize 0022                               ??_PWM2_Initialize 0020  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0020  
                                     clear_ram0 1F3A                                        _PIE0bits 0716  
                                      _LED_init 1EA2                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 15E1  
                                      _DMX_init 1FB1             __size_of_INTERRUPT_InterruptManager 002C  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 007C                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0070  
                                    ?_getIsHold 0070                         CONTROLLER_task@isActive 006F  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 1F53  
                    __end_of_LED_task_BEAT_FADE 1E72                                        _SSP1STAT 018F  
                      __size_of_CONTROLLER_task 01A6                                     _TM1650_init 1FEC  
                                     _threshold 0168                                       _vfpfcnvrt 09F6  
                             ??_PWM3_Initialize 0020                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                       _startTime 014A  
                    __end_of_LED_task_ANIMATION 1E70                              DMX_interrupt@dummy 0076  
                                      _WPUAbits 1F39                                        _WPUCbits 1F4F  
                                     _writeData 10DA                      __size_of_BUTTONS_isClicked 0014  
                                    vfpfcnvrt@c 005F                                     _lastIncTime 00AB  
                             ??_TMR2_Initialize 0020                               ??_PWM4_Initialize 0020  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 1E94  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 0B4D  
                                    _ADSTATbits 0115                      __end_of_PWM4_LoadDutyValue 116F  
                 __size_of_I2C1_BusCollisionISR 0003                                      vfprintf@ap 0063  
                                    vfprintf@fp 0066                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 00C0                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fldiv 017A  
                             ?_beatColorCreator 00D0                           beatColorCreator@inRed 00D4  
                              __size_of___flmul 022C                                __size_of___fltol 0066  
                         __end_of_DMX_interrupt 1373                     __size_of_EUSART1_Initialize 0033  
                                    ?_vfpfcnvrt 0058                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                           _beatColorCreator$3568 00D5  
              __end_of_I2C1_MasterWriteTRBBuild 11D2                              ??_beatColorCreator 006E  
                            _PWM3_LoadDutyValue 1133                                      _ANSELAbits 1F38  
                                      _beatHold 00B2                                      _ANSELCbits 1F4E  
                              __size_of_getMode 0003                            ?_TM1650_fastPrintNum 0034  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                           TM1650_enable@enable 0034             __end_of_EUSART1_DefaultErrorHandler 1E77  
                   _EUSART1_DefaultErrorHandler 1E74                                     _currentTime 0146  
                                    _CLOCK_init 1E9A                                        ___xxtofl 08C7  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                                   _menuPressed 00B8                                 ___lwdiv@divisor 0020  
                         __end_of_menuSelection 08C7                             I2C1_ISR@i2c_address 007A  
                               ___lwdiv@counter 0027                                        _detected 00AF  
                                    ?_writeData 002E                                        __ptext10 13A6  
                                      __ptext11 07F7                                        __ptext20 1000  
                                      __ptext12 10BE                                        __ptext21 1E73  
                                      __ptext13 1373                                        __ptext30 0090  
                                      __ptext22 16A6                                        __ptext14 1EFB  
                                      __ptext31 118F                                        __ptext23 1E7A  
                                      __ptext15 1EF2                                        __ptext40 1E70  
                                      __ptext32 0462                                        __ptext24 0CE1  
                                      __ptext16 1EE9                                        __ptext41 1E6F  
                                      __ptext33 1151                                        __ptext25 0A9E  
                                      __ptext17 1266                                        __ptext50 1312  
                                      __ptext42 1EA2                                        __ptext34 1133  
                                      __ptext26 1783                                        __ptext18 15E1  
                                      __ptext51 1539                                        __ptext43 1FB1  
                                      __ptext35 1115                                        __ptext27 05DC  
                                      __ptext19 0800                                        __ptext60 0803  
                                      __ptext52 1073                                        __ptext44 1ED7  
                                      __ptext36 10F7                                        __ptext28 08C7  
                                      __ptext61 1442                                        __ptext53 1240  
                                      __ptext45 02BC                                        __ptext37 1EE0  
                                      __ptext29 1640                                        __ptext70 1E89  
                                      __ptext62 095D                                        __ptext54 1478  
                                      __ptext46 0849                                        __ptext38 1E72  
                                      __ptext71 12B6                                        __ptext63 108B  
                                      __ptext55 11D2                                        __ptext47 1017  
                                      __ptext39 1E71                                        __ptext80 1F8E  
                                      __ptext72 1714                                        __ptext64 105B  
                                      __ptext56 1F9F                                        __ptext48 12E3  
                                      __ptext81 0C0F                                        __ptext73 1F6E  
                                      __ptext65 0B4D                                        __ptext57 121A  
                                      __ptext49 09F6                                        __ptext90 1E8E  
                                      __ptext82 140D                                        __ptext74 1FC4  
                                      __ptext66 10DA                                        __ptext58 1002  
                           ?_PWM3_LoadDutyValue 00C7                                        __ptext91 1E6E  
                                      __ptext83 1EC5                                        __ptext75 1E9A  
                                      __ptext67 128C                                        __ptext59 073F  
                                      __ptext92 0EAE                                        __ptext84 102C  
                                      __ptext76 1ECE                                        __ptext68 11AF  
                                      __ptext93 10A4                                        __ptext85 1EBC  
                                      __ptext77 0DC0                                        __ptext69 158C  
                                      __ptext94 1F7D                                        __ptext86 1EB3  
                                      __ptext78 14EB                                        __ptext95 1E77  
                                      __ptext87 1EAA                                        __ptext79 116F  
                                      __ptext96 1342                                        __ptext97 13D9  
                                      __ptext89 1F53                                        __ptext98 1E81  
                                      __ptext99 1E6D                    __size_of_LED_task_BEAT_MIXED 0001  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _dmxArray 23EE                                ??_DMX_getAddress 0020  
                                      _colorDec 1442                                        _colorInc 0803  
                          BUTTONS_isHeld@button 0020                           __end_of_BEAT_detected 1EE9  
                                      _lastBeat 0142                                        _lastTime 0148  
             __size_of_LED_task_BEAT_CONTINUOUS 0001                                 LED_task_DMX@dmx 016A  
                     ?_LED_task_BEAT_CONTINUOUS 0070                                   __size_of_ctoa 0030  
                                 __size_of_main 003C                                   __size_of_init 0020  
                                  ?_address_dec 0070            __end_of_TMR0_DefaultInterruptHandler 1E6F  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 1E6E  
                                  ?_address_inc 0070                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 158C                                      _RC1STAbits 011D  
                              ??_getManualColor 0020  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                                   ??_getIsHold 0020                            ??_PWM3_LoadDutyValue 006D  
                  __end_of_ADCC_StartConversion 1EC5                                        int$flags 007E  
                                      _position 00B0                         __size_of_BUTTONS_isHeld 000F  
                                      _vfprintf 12E3              __end_of_INTERRUPT_InterruptManager 0030  
                    _INTERRUPT_InterruptManager 0004                                       printf@fmt 00C7  
                        __size_of_TM1650_enable 0015                     _EUSART1_FramingErrorHandler 0160  
                           _EUSART1_Receive_ISR 13D9                                 _LED_task_MANUAL 1E73  
                         ??_TM1650_fastPrintNum 0036                                      _INTCONbits 000B  
                             ??_CONTROLLER_task 00D1                                        init@port 0020  
                                __pstringtext10 2045                                  __pstringtext11 204D  
                                __pstringtext20 2087                                  __pstringtext12 2055  
                                __pstringtext21 208D                                  __pstringtext13 205C  
                                __pstringtext22 0000                                  __pstringtext14 2063  
                                __pstringtext15 2069                                  __pstringtext16 206F  
                                __pstringtext17 2075                                  __pstringtext18 207B  
                                __pstringtext19 2081            __end_of_ADCC_DefaultInterruptHandler 1E6D  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 1E6C  
                                      intlevel1 0000                                  _thresholdCount 013C  
                          ?_EUSART1_Receive_ISR 0070                                   writeData@data 002E  
                              ___lwmod@dividend 002A                         ?_PIN_MANAGER_Initialize 0070  
                      __end_of_I2C1_MasterWrite 12B6                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 1F04  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 1EFB  
                 __end_of_I2C1_FunctionComplete 1F8E                                   ?_CONTROL_BEAT 0070  
                         ?_I2C1_MasterTRBInsert 0020                                 _PWM1_Initialize 1F0E  
                 ?_TMR0_DefaultInterruptHandler 0070                     __size_of_PWM2_LoadDutyValue 001E  
                        TM1650_fastPrintNum@num 0034                               _lastLedActiveTime 0138  
                                      printf@ap 006C  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                   PWM3_LoadDutyValue@dutyValue 00C7                                 _TM1650_setDigit 1F9F  
                                   ??_vfpfcnvrt 005A                        __size_of_I2C1_Initialize 001C  
                            _eusart1RxLastError 00C5                                   __pstringtext1 1800  
                                 __pstringtext2 2000                                   __pstringtext3 200A  
                                 __pstringtext4 2013                                   __pstringtext5 201C  
                                 __pstringtext6 2025                                   __pstringtext7 202D  
                                 __pstringtext8 2035                                   __pstringtext9 203D  
                        __Umul8_16@multiplicand 0020                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0028  
                                   ?_CLOCK_init 0070                                 _TMR0_Initialize 1FD8  
                               _PWM2_Initialize 1F19                                ??_CONTROL_MANUAL 0023  
                               ___lwmod@counter 002D                                    ?_CONTROL_DMX 0070  
                      _I2C1_MasterWriteTRBBuild 11AF                                     ??_writeData 002F  
                                    _TX1STAbits 011E                    __end_of_LED_task_BEAT_STROBE 0DC0  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0071  
                __end_of_PIN_MANAGER_Initialize 13D9                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 1002                              __size_of_I2C1_Stop 001A  
                 ?_ADCC_DefaultInterruptHandler 0070                      __end_of_PWM1_LoadDutyValue 1115  
                          __Umul8_16@multiplier 0028                                  ??_CONTROL_BEAT 0021  
                       ??_EUSART1_RxDataHandler 0070                                 _PWM3_Initialize 1F24  
                             __Umul8_16@product 0024  
