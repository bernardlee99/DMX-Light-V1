

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 27 22:41:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    26                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    29                           	psect	inittext,global,class=CODE,delta=2
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    34                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,merge=1,delta=2
    36                           	psect	text2,local,class=CODE,merge=1,delta=2
    37                           	psect	text3,local,class=CODE,merge=1,delta=2
    38                           	psect	text4,local,class=CODE,merge=1,delta=2
    39                           	psect	text5,local,class=CODE,merge=1,delta=2
    40                           	psect	text6,local,class=CODE,merge=1,delta=2
    41                           	psect	text7,local,class=CODE,merge=1,delta=2
    42                           	psect	text8,local,class=CODE,merge=1,delta=2
    43                           	psect	text9,local,class=CODE,merge=1,delta=2
    44                           	psect	text10,local,class=CODE,merge=1,delta=2
    45                           	psect	text11,local,class=CODE,merge=1,delta=2
    46                           	psect	text12,local,class=CODE,merge=1,delta=2
    47                           	psect	text13,local,class=CODE,merge=1,delta=2
    48                           	psect	text14,local,class=CODE,merge=1,delta=2
    49                           	psect	text15,local,class=CODE,merge=1,delta=2
    50                           	psect	text16,local,class=CODE,merge=1,delta=2
    51                           	psect	text17,local,class=CODE,merge=1,delta=2
    52                           	psect	text18,local,class=CODE,merge=1,delta=2
    53                           	psect	text19,local,class=CODE,merge=1,delta=2
    54                           	psect	text20,local,class=CODE,merge=1,delta=2
    55                           	psect	text21,local,class=CODE,merge=1,delta=2
    56                           	psect	text22,local,class=CODE,merge=1,delta=2
    57                           	psect	text23,local,class=CODE,merge=1,delta=2
    58                           	psect	text24,local,class=CODE,merge=1,delta=2
    59                           	psect	text25,local,class=CODE,merge=1,delta=2
    60                           	psect	text26,local,class=CODE,merge=1,delta=2
    61                           	psect	text27,local,class=CODE,merge=1,delta=2
    62                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text29,local,class=CODE,merge=1,delta=2
    64                           	psect	text30,local,class=CODE,merge=1,delta=2
    65                           	psect	text31,local,class=CODE,merge=1,delta=2
    66                           	psect	text32,local,class=CODE,merge=1,delta=2
    67                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text36,local,class=CODE,merge=1,delta=2
    71                           	psect	text37,local,class=CODE,merge=1,delta=2
    72                           	psect	text38,local,class=CODE,merge=1,delta=2
    73                           	psect	text39,local,class=CODE,merge=1,delta=2
    74                           	psect	text40,local,class=CODE,merge=1,delta=2
    75                           	psect	text41,local,class=CODE,merge=1,delta=2
    76                           	psect	text42,local,class=CODE,merge=1,delta=2
    77                           	psect	text43,local,class=CODE,merge=1,delta=2
    78                           	psect	text44,local,class=CODE,merge=1,delta=2
    79                           	psect	text45,local,class=CODE,merge=1,delta=2
    80                           	psect	text46,local,class=CODE,merge=1,delta=2
    81                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    83                           	psect	text49,local,class=CODE,merge=1,delta=2
    84                           	psect	text50,local,class=CODE,merge=1,delta=2
    85                           	psect	text51,local,class=CODE,merge=1,delta=2
    86                           	psect	text52,local,class=CODE,merge=1,delta=2
    87                           	psect	text53,local,class=CODE,merge=1,delta=2
    88                           	psect	text54,local,class=CODE,merge=1,delta=2
    89                           	psect	text55,local,class=CODE,merge=1,delta=2
    90                           	psect	text56,local,class=CODE,merge=1,delta=2
    91                           	psect	text57,local,class=CODE,merge=1,delta=2
    92                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
    93                           	psect	text59,local,class=CODE,merge=1,delta=2
    94                           	psect	text60,local,class=CODE,merge=1,delta=2
    95                           	psect	text61,local,class=CODE,merge=1,delta=2
    96                           	psect	text62,local,class=CODE,merge=1,delta=2
    97                           	psect	text63,local,class=CODE,merge=1,delta=2
    98                           	psect	intentry,global,class=CODE,delta=2
    99                           	psect	text65,local,class=CODE,merge=1,delta=2
   100                           	psect	text66,local,class=CODE,merge=1,delta=2
   101                           	psect	text67,local,class=CODE,merge=1,delta=2
   102                           	psect	text68,local,class=CODE,merge=1,delta=2
   103                           	psect	text69,local,class=CODE,merge=1,delta=2
   104                           	psect	text70,local,class=CODE,merge=1,delta=2
   105                           	psect	text71,local,class=CODE,merge=1,delta=2
   106                           	psect	text72,local,class=CODE,merge=1,delta=2
   107                           	psect	text73,local,class=CODE,merge=1,delta=2
   108                           	psect	text74,local,class=CODE,merge=1,delta=2
   109                           	psect	text75,local,class=CODE,merge=1,delta=2
   110                           	psect	text76,local,class=CODE,merge=1,delta=2
   111                           	psect	text77,local,class=CODE,merge=1,delta=2
   112                           	psect	text78,local,class=CODE,merge=1,delta=2
   113                           	psect	text79,local,class=CODE,merge=1,delta=2
   114                           	psect	text80,local,class=CODE,merge=1,delta=2
   115                           	dabs	1,0xCA0,32
   116                           	dabs	1,0xC20,80
   117                           	dabs	1,0xBA0,80
   118                           	dabs	1,0xB20,80
   119                           	dabs	1,0xAA0,80
   120                           	dabs	1,0xA20,80
   121                           	dabs	1,0x9A0,80
   122                           	dabs	1,0x920,80
   123                           	dabs	1,0x8A0,80
   124                           	dabs	1,0x820,80
   125                           	dabs	1,0x7A0,80
   126                           	dabs	1,0x720,80
   127                           	dabs	1,0x6A0,80
   128                           	dabs	1,0x64E,34
   129                           	dabs	1,0x23EE,0,_dmxArray
   130                           	dabs	1,0x7E,2
   131  0000                     
   132                           ; Version 2.05
   133                           ; Generated 20/12/2018 GMT
   134                           ; 
   135                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC16F18446 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  008C                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  010F                     	;# 
   221  0110                     	;# 
   222  0111                     	;# 
   223  0112                     	;# 
   224  0113                     	;# 
   225  0114                     	;# 
   226  0115                     	;# 
   227  0116                     	;# 
   228  0117                     	;# 
   229  0118                     	;# 
   230  0119                     	;# 
   231  0119                     	;# 
   232  0119                     	;# 
   233  011A                     	;# 
   234  011A                     	;# 
   235  011A                     	;# 
   236  011B                     	;# 
   237  011B                     	;# 
   238  011B                     	;# 
   239  011B                     	;# 
   240  011B                     	;# 
   241  011C                     	;# 
   242  011C                     	;# 
   243  011C                     	;# 
   244  011D                     	;# 
   245  011D                     	;# 
   246  011D                     	;# 
   247  011E                     	;# 
   248  011E                     	;# 
   249  011E                     	;# 
   250  011F                     	;# 
   251  011F                     	;# 
   252  011F                     	;# 
   253  011F                     	;# 
   254  011F                     	;# 
   255  018C                     	;# 
   256  018D                     	;# 
   257  018E                     	;# 
   258  018F                     	;# 
   259  0190                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0196                     	;# 
   263  0197                     	;# 
   264  0198                     	;# 
   265  0199                     	;# 
   266  019A                     	;# 
   267  019B                     	;# 
   268  019C                     	;# 
   269  020C                     	;# 
   270  020D                     	;# 
   271  020E                     	;# 
   272  020E                     	;# 
   273  020F                     	;# 
   274  020F                     	;# 
   275  0210                     	;# 
   276  0210                     	;# 
   277  0211                     	;# 
   278  0211                     	;# 
   279  0212                     	;# 
   280  0213                     	;# 
   281  0214                     	;# 
   282  0214                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0216                     	;# 
   287  0217                     	;# 
   288  0217                     	;# 
   289  0218                     	;# 
   290  0219                     	;# 
   291  021A                     	;# 
   292  021A                     	;# 
   293  021B                     	;# 
   294  021B                     	;# 
   295  021C                     	;# 
   296  021C                     	;# 
   297  021D                     	;# 
   298  021D                     	;# 
   299  021E                     	;# 
   300  021F                     	;# 
   301  028C                     	;# 
   302  028C                     	;# 
   303  028D                     	;# 
   304  028D                     	;# 
   305  028E                     	;# 
   306  028F                     	;# 
   307  0290                     	;# 
   308  0291                     	;# 
   309  0292                     	;# 
   310  0292                     	;# 
   311  0293                     	;# 
   312  0293                     	;# 
   313  0294                     	;# 
   314  0295                     	;# 
   315  0296                     	;# 
   316  0297                     	;# 
   317  0298                     	;# 
   318  0298                     	;# 
   319  0299                     	;# 
   320  0299                     	;# 
   321  029A                     	;# 
   322  029B                     	;# 
   323  029C                     	;# 
   324  029D                     	;# 
   325  029F                     	;# 
   326  030C                     	;# 
   327  030C                     	;# 
   328  030D                     	;# 
   329  030E                     	;# 
   330  030F                     	;# 
   331  0310                     	;# 
   332  0310                     	;# 
   333  0311                     	;# 
   334  0312                     	;# 
   335  0313                     	;# 
   336  0314                     	;# 
   337  0314                     	;# 
   338  0315                     	;# 
   339  0316                     	;# 
   340  0317                     	;# 
   341  0318                     	;# 
   342  0318                     	;# 
   343  0319                     	;# 
   344  031A                     	;# 
   345  031B                     	;# 
   346  038C                     	;# 
   347  038C                     	;# 
   348  038D                     	;# 
   349  038E                     	;# 
   350  0390                     	;# 
   351  0390                     	;# 
   352  0391                     	;# 
   353  0392                     	;# 
   354  048C                     	;# 
   355  048C                     	;# 
   356  048D                     	;# 
   357  048E                     	;# 
   358  048F                     	;# 
   359  048F                     	;# 
   360  0490                     	;# 
   361  0491                     	;# 
   362  0492                     	;# 
   363  0492                     	;# 
   364  0493                     	;# 
   365  0494                     	;# 
   366  0495                     	;# 
   367  0495                     	;# 
   368  0496                     	;# 
   369  0497                     	;# 
   370  0498                     	;# 
   371  0499                     	;# 
   372  049A                     	;# 
   373  049B                     	;# 
   374  049C                     	;# 
   375  049D                     	;# 
   376  058C                     	;# 
   377  058C                     	;# 
   378  058D                     	;# 
   379  058E                     	;# 
   380  058F                     	;# 
   381  058F                     	;# 
   382  0590                     	;# 
   383  0591                     	;# 
   384  0592                     	;# 
   385  0593                     	;# 
   386  059C                     	;# 
   387  059C                     	;# 
   388  059D                     	;# 
   389  059D                     	;# 
   390  059E                     	;# 
   391  059F                     	;# 
   392  060C                     	;# 
   393  060C                     	;# 
   394  060D                     	;# 
   395  060D                     	;# 
   396  060E                     	;# 
   397  060F                     	;# 
   398  0610                     	;# 
   399  0611                     	;# 
   400  0612                     	;# 
   401  0613                     	;# 
   402  0614                     	;# 
   403  0616                     	;# 
   404  0616                     	;# 
   405  0617                     	;# 
   406  0617                     	;# 
   407  0618                     	;# 
   408  0619                     	;# 
   409  061A                     	;# 
   410  061B                     	;# 
   411  061C                     	;# 
   412  061D                     	;# 
   413  061E                     	;# 
   414  070C                     	;# 
   415  070D                     	;# 
   416  070E                     	;# 
   417  070F                     	;# 
   418  0710                     	;# 
   419  0711                     	;# 
   420  0712                     	;# 
   421  0713                     	;# 
   422  0714                     	;# 
   423  0716                     	;# 
   424  0717                     	;# 
   425  0718                     	;# 
   426  0719                     	;# 
   427  071A                     	;# 
   428  071B                     	;# 
   429  071C                     	;# 
   430  071D                     	;# 
   431  071E                     	;# 
   432  0796                     	;# 
   433  0797                     	;# 
   434  0798                     	;# 
   435  0799                     	;# 
   436  079A                     	;# 
   437  079B                     	;# 
   438  079C                     	;# 
   439  079D                     	;# 
   440  080C                     	;# 
   441  080D                     	;# 
   442  080E                     	;# 
   443  080F                     	;# 
   444  0810                     	;# 
   445  0811                     	;# 
   446  0812                     	;# 
   447  0813                     	;# 
   448  0814                     	;# 
   449  081A                     	;# 
   450  081A                     	;# 
   451  081B                     	;# 
   452  081C                     	;# 
   453  081C                     	;# 
   454  081D                     	;# 
   455  081E                     	;# 
   456  081F                     	;# 
   457  088C                     	;# 
   458  088D                     	;# 
   459  088E                     	;# 
   460  088F                     	;# 
   461  0890                     	;# 
   462  0891                     	;# 
   463  0892                     	;# 
   464  0893                     	;# 
   465  0895                     	;# 
   466  0896                     	;# 
   467  0897                     	;# 
   468  0898                     	;# 
   469  0899                     	;# 
   470  089A                     	;# 
   471  089B                     	;# 
   472  090C                     	;# 
   473  090E                     	;# 
   474  090F                     	;# 
   475  091F                     	;# 
   476  098F                     	;# 
   477  098F                     	;# 
   478  0990                     	;# 
   479  0991                     	;# 
   480  0992                     	;# 
   481  0993                     	;# 
   482  0994                     	;# 
   483  0995                     	;# 
   484  0996                     	;# 
   485  0997                     	;# 
   486  1E0F                     	;# 
   487  1E10                     	;# 
   488  1E11                     	;# 
   489  1E12                     	;# 
   490  1E13                     	;# 
   491  1E14                     	;# 
   492  1E15                     	;# 
   493  1E16                     	;# 
   494  1E17                     	;# 
   495  1E18                     	;# 
   496  1E19                     	;# 
   497  1E1A                     	;# 
   498  1E1B                     	;# 
   499  1E1C                     	;# 
   500  1E1D                     	;# 
   501  1E1E                     	;# 
   502  1E1F                     	;# 
   503  1E20                     	;# 
   504  1E21                     	;# 
   505  1E22                     	;# 
   506  1E23                     	;# 
   507  1E24                     	;# 
   508  1E25                     	;# 
   509  1E26                     	;# 
   510  1E27                     	;# 
   511  1E28                     	;# 
   512  1E29                     	;# 
   513  1E2A                     	;# 
   514  1E2B                     	;# 
   515  1E2C                     	;# 
   516  1E2D                     	;# 
   517  1E2E                     	;# 
   518  1E2F                     	;# 
   519  1E30                     	;# 
   520  1E31                     	;# 
   521  1E32                     	;# 
   522  1E33                     	;# 
   523  1E34                     	;# 
   524  1E35                     	;# 
   525  1E36                     	;# 
   526  1E37                     	;# 
   527  1E8F                     	;# 
   528  1E90                     	;# 
   529  1E91                     	;# 
   530  1E92                     	;# 
   531  1E93                     	;# 
   532  1E94                     	;# 
   533  1E95                     	;# 
   534  1E96                     	;# 
   535  1E97                     	;# 
   536  1E9C                     	;# 
   537  1E9D                     	;# 
   538  1E9E                     	;# 
   539  1EA1                     	;# 
   540  1EA2                     	;# 
   541  1EA3                     	;# 
   542  1EA4                     	;# 
   543  1EA9                     	;# 
   544  1EAA                     	;# 
   545  1EB1                     	;# 
   546  1EB2                     	;# 
   547  1EB8                     	;# 
   548  1EB9                     	;# 
   549  1EBA                     	;# 
   550  1EBB                     	;# 
   551  1EBC                     	;# 
   552  1EBD                     	;# 
   553  1EBE                     	;# 
   554  1EC3                     	;# 
   555  1EC5                     	;# 
   556  1EC6                     	;# 
   557  1EC7                     	;# 
   558  1EC8                     	;# 
   559  1EC9                     	;# 
   560  1ECA                     	;# 
   561  1ECB                     	;# 
   562  1ECB                     	;# 
   563  1ECB                     	;# 
   564  1ECC                     	;# 
   565  1ECC                     	;# 
   566  1ECC                     	;# 
   567  1F10                     	;# 
   568  1F11                     	;# 
   569  1F12                     	;# 
   570  1F14                     	;# 
   571  1F15                     	;# 
   572  1F1C                     	;# 
   573  1F1D                     	;# 
   574  1F1E                     	;# 
   575  1F1F                     	;# 
   576  1F20                     	;# 
   577  1F21                     	;# 
   578  1F22                     	;# 
   579  1F23                     	;# 
   580  1F24                     	;# 
   581  1F25                     	;# 
   582  1F26                     	;# 
   583  1F27                     	;# 
   584  1F38                     	;# 
   585  1F39                     	;# 
   586  1F3A                     	;# 
   587  1F3B                     	;# 
   588  1F3C                     	;# 
   589  1F3D                     	;# 
   590  1F3E                     	;# 
   591  1F3F                     	;# 
   592  1F43                     	;# 
   593  1F44                     	;# 
   594  1F45                     	;# 
   595  1F46                     	;# 
   596  1F47                     	;# 
   597  1F48                     	;# 
   598  1F49                     	;# 
   599  1F4A                     	;# 
   600  1F4E                     	;# 
   601  1F4F                     	;# 
   602  1F50                     	;# 
   603  1F51                     	;# 
   604  1F52                     	;# 
   605  1F53                     	;# 
   606  1F54                     	;# 
   607  1F55                     	;# 
   608  1FE4                     	;# 
   609  1FE5                     	;# 
   610  1FE6                     	;# 
   611  1FE7                     	;# 
   612  1FE8                     	;# 
   613  1FE8                     	;# 
   614  1FE9                     	;# 
   615  1FEA                     	;# 
   616  1FEB                     	;# 
   617  1FED                     	;# 
   618  1FEE                     	;# 
   619  1FEF                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0014                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  008C                     	;# 
   642  008C                     	;# 
   643  008D                     	;# 
   644  008E                     	;# 
   645  008E                     	;# 
   646  008F                     	;# 
   647  0090                     	;# 
   648  0090                     	;# 
   649  0091                     	;# 
   650  0092                     	;# 
   651  0092                     	;# 
   652  0093                     	;# 
   653  0094                     	;# 
   654  0094                     	;# 
   655  0095                     	;# 
   656  0096                     	;# 
   657  0096                     	;# 
   658  0097                     	;# 
   659  0098                     	;# 
   660  0099                     	;# 
   661  009A                     	;# 
   662  009B                     	;# 
   663  009B                     	;# 
   664  009C                     	;# 
   665  009D                     	;# 
   666  009D                     	;# 
   667  009E                     	;# 
   668  009F                     	;# 
   669  010C                     	;# 
   670  010C                     	;# 
   671  010D                     	;# 
   672  010E                     	;# 
   673  010F                     	;# 
   674  010F                     	;# 
   675  0110                     	;# 
   676  0111                     	;# 
   677  0112                     	;# 
   678  0113                     	;# 
   679  0114                     	;# 
   680  0115                     	;# 
   681  0116                     	;# 
   682  0117                     	;# 
   683  0118                     	;# 
   684  0119                     	;# 
   685  0119                     	;# 
   686  0119                     	;# 
   687  011A                     	;# 
   688  011A                     	;# 
   689  011A                     	;# 
   690  011B                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011C                     	;# 
   696  011C                     	;# 
   697  011C                     	;# 
   698  011D                     	;# 
   699  011D                     	;# 
   700  011D                     	;# 
   701  011E                     	;# 
   702  011E                     	;# 
   703  011E                     	;# 
   704  011F                     	;# 
   705  011F                     	;# 
   706  011F                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  018E                     	;# 
   712  018F                     	;# 
   713  0190                     	;# 
   714  0191                     	;# 
   715  0192                     	;# 
   716  0196                     	;# 
   717  0197                     	;# 
   718  0198                     	;# 
   719  0199                     	;# 
   720  019A                     	;# 
   721  019B                     	;# 
   722  019C                     	;# 
   723  020C                     	;# 
   724  020D                     	;# 
   725  020E                     	;# 
   726  020E                     	;# 
   727  020F                     	;# 
   728  020F                     	;# 
   729  0210                     	;# 
   730  0210                     	;# 
   731  0211                     	;# 
   732  0211                     	;# 
   733  0212                     	;# 
   734  0213                     	;# 
   735  0214                     	;# 
   736  0214                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0216                     	;# 
   740  0216                     	;# 
   741  0217                     	;# 
   742  0217                     	;# 
   743  0218                     	;# 
   744  0219                     	;# 
   745  021A                     	;# 
   746  021A                     	;# 
   747  021B                     	;# 
   748  021B                     	;# 
   749  021C                     	;# 
   750  021C                     	;# 
   751  021D                     	;# 
   752  021D                     	;# 
   753  021E                     	;# 
   754  021F                     	;# 
   755  028C                     	;# 
   756  028C                     	;# 
   757  028D                     	;# 
   758  028D                     	;# 
   759  028E                     	;# 
   760  028F                     	;# 
   761  0290                     	;# 
   762  0291                     	;# 
   763  0292                     	;# 
   764  0292                     	;# 
   765  0293                     	;# 
   766  0293                     	;# 
   767  0294                     	;# 
   768  0295                     	;# 
   769  0296                     	;# 
   770  0297                     	;# 
   771  0298                     	;# 
   772  0298                     	;# 
   773  0299                     	;# 
   774  0299                     	;# 
   775  029A                     	;# 
   776  029B                     	;# 
   777  029C                     	;# 
   778  029D                     	;# 
   779  029F                     	;# 
   780  030C                     	;# 
   781  030C                     	;# 
   782  030D                     	;# 
   783  030E                     	;# 
   784  030F                     	;# 
   785  0310                     	;# 
   786  0310                     	;# 
   787  0311                     	;# 
   788  0312                     	;# 
   789  0313                     	;# 
   790  0314                     	;# 
   791  0314                     	;# 
   792  0315                     	;# 
   793  0316                     	;# 
   794  0317                     	;# 
   795  0318                     	;# 
   796  0318                     	;# 
   797  0319                     	;# 
   798  031A                     	;# 
   799  031B                     	;# 
   800  038C                     	;# 
   801  038C                     	;# 
   802  038D                     	;# 
   803  038E                     	;# 
   804  0390                     	;# 
   805  0390                     	;# 
   806  0391                     	;# 
   807  0392                     	;# 
   808  048C                     	;# 
   809  048C                     	;# 
   810  048D                     	;# 
   811  048E                     	;# 
   812  048F                     	;# 
   813  048F                     	;# 
   814  0490                     	;# 
   815  0491                     	;# 
   816  0492                     	;# 
   817  0492                     	;# 
   818  0493                     	;# 
   819  0494                     	;# 
   820  0495                     	;# 
   821  0495                     	;# 
   822  0496                     	;# 
   823  0497                     	;# 
   824  0498                     	;# 
   825  0499                     	;# 
   826  049A                     	;# 
   827  049B                     	;# 
   828  049C                     	;# 
   829  049D                     	;# 
   830  058C                     	;# 
   831  058C                     	;# 
   832  058D                     	;# 
   833  058E                     	;# 
   834  058F                     	;# 
   835  058F                     	;# 
   836  0590                     	;# 
   837  0591                     	;# 
   838  0592                     	;# 
   839  0593                     	;# 
   840  059C                     	;# 
   841  059C                     	;# 
   842  059D                     	;# 
   843  059D                     	;# 
   844  059E                     	;# 
   845  059F                     	;# 
   846  060C                     	;# 
   847  060C                     	;# 
   848  060D                     	;# 
   849  060D                     	;# 
   850  060E                     	;# 
   851  060F                     	;# 
   852  0610                     	;# 
   853  0611                     	;# 
   854  0612                     	;# 
   855  0613                     	;# 
   856  0614                     	;# 
   857  0616                     	;# 
   858  0616                     	;# 
   859  0617                     	;# 
   860  0617                     	;# 
   861  0618                     	;# 
   862  0619                     	;# 
   863  061A                     	;# 
   864  061B                     	;# 
   865  061C                     	;# 
   866  061D                     	;# 
   867  061E                     	;# 
   868  070C                     	;# 
   869  070D                     	;# 
   870  070E                     	;# 
   871  070F                     	;# 
   872  0710                     	;# 
   873  0711                     	;# 
   874  0712                     	;# 
   875  0713                     	;# 
   876  0714                     	;# 
   877  0716                     	;# 
   878  0717                     	;# 
   879  0718                     	;# 
   880  0719                     	;# 
   881  071A                     	;# 
   882  071B                     	;# 
   883  071C                     	;# 
   884  071D                     	;# 
   885  071E                     	;# 
   886  0796                     	;# 
   887  0797                     	;# 
   888  0798                     	;# 
   889  0799                     	;# 
   890  079A                     	;# 
   891  079B                     	;# 
   892  079C                     	;# 
   893  079D                     	;# 
   894  080C                     	;# 
   895  080D                     	;# 
   896  080E                     	;# 
   897  080F                     	;# 
   898  0810                     	;# 
   899  0811                     	;# 
   900  0812                     	;# 
   901  0813                     	;# 
   902  0814                     	;# 
   903  081A                     	;# 
   904  081A                     	;# 
   905  081B                     	;# 
   906  081C                     	;# 
   907  081C                     	;# 
   908  081D                     	;# 
   909  081E                     	;# 
   910  081F                     	;# 
   911  088C                     	;# 
   912  088D                     	;# 
   913  088E                     	;# 
   914  088F                     	;# 
   915  0890                     	;# 
   916  0891                     	;# 
   917  0892                     	;# 
   918  0893                     	;# 
   919  0895                     	;# 
   920  0896                     	;# 
   921  0897                     	;# 
   922  0898                     	;# 
   923  0899                     	;# 
   924  089A                     	;# 
   925  089B                     	;# 
   926  090C                     	;# 
   927  090E                     	;# 
   928  090F                     	;# 
   929  091F                     	;# 
   930  098F                     	;# 
   931  098F                     	;# 
   932  0990                     	;# 
   933  0991                     	;# 
   934  0992                     	;# 
   935  0993                     	;# 
   936  0994                     	;# 
   937  0995                     	;# 
   938  0996                     	;# 
   939  0997                     	;# 
   940  1E0F                     	;# 
   941  1E10                     	;# 
   942  1E11                     	;# 
   943  1E12                     	;# 
   944  1E13                     	;# 
   945  1E14                     	;# 
   946  1E15                     	;# 
   947  1E16                     	;# 
   948  1E17                     	;# 
   949  1E18                     	;# 
   950  1E19                     	;# 
   951  1E1A                     	;# 
   952  1E1B                     	;# 
   953  1E1C                     	;# 
   954  1E1D                     	;# 
   955  1E1E                     	;# 
   956  1E1F                     	;# 
   957  1E20                     	;# 
   958  1E21                     	;# 
   959  1E22                     	;# 
   960  1E23                     	;# 
   961  1E24                     	;# 
   962  1E25                     	;# 
   963  1E26                     	;# 
   964  1E27                     	;# 
   965  1E28                     	;# 
   966  1E29                     	;# 
   967  1E2A                     	;# 
   968  1E2B                     	;# 
   969  1E2C                     	;# 
   970  1E2D                     	;# 
   971  1E2E                     	;# 
   972  1E2F                     	;# 
   973  1E30                     	;# 
   974  1E31                     	;# 
   975  1E32                     	;# 
   976  1E33                     	;# 
   977  1E34                     	;# 
   978  1E35                     	;# 
   979  1E36                     	;# 
   980  1E37                     	;# 
   981  1E8F                     	;# 
   982  1E90                     	;# 
   983  1E91                     	;# 
   984  1E92                     	;# 
   985  1E93                     	;# 
   986  1E94                     	;# 
   987  1E95                     	;# 
   988  1E96                     	;# 
   989  1E97                     	;# 
   990  1E9C                     	;# 
   991  1E9D                     	;# 
   992  1E9E                     	;# 
   993  1EA1                     	;# 
   994  1EA2                     	;# 
   995  1EA3                     	;# 
   996  1EA4                     	;# 
   997  1EA9                     	;# 
   998  1EAA                     	;# 
   999  1EB1                     	;# 
  1000  1EB2                     	;# 
  1001  1EB8                     	;# 
  1002  1EB9                     	;# 
  1003  1EBA                     	;# 
  1004  1EBB                     	;# 
  1005  1EBC                     	;# 
  1006  1EBD                     	;# 
  1007  1EBE                     	;# 
  1008  1EC3                     	;# 
  1009  1EC5                     	;# 
  1010  1EC6                     	;# 
  1011  1EC7                     	;# 
  1012  1EC8                     	;# 
  1013  1EC9                     	;# 
  1014  1ECA                     	;# 
  1015  1ECB                     	;# 
  1016  1ECB                     	;# 
  1017  1ECB                     	;# 
  1018  1ECC                     	;# 
  1019  1ECC                     	;# 
  1020  1ECC                     	;# 
  1021  1F10                     	;# 
  1022  1F11                     	;# 
  1023  1F12                     	;# 
  1024  1F14                     	;# 
  1025  1F15                     	;# 
  1026  1F1C                     	;# 
  1027  1F1D                     	;# 
  1028  1F1E                     	;# 
  1029  1F1F                     	;# 
  1030  1F20                     	;# 
  1031  1F21                     	;# 
  1032  1F22                     	;# 
  1033  1F23                     	;# 
  1034  1F24                     	;# 
  1035  1F25                     	;# 
  1036  1F26                     	;# 
  1037  1F27                     	;# 
  1038  1F38                     	;# 
  1039  1F39                     	;# 
  1040  1F3A                     	;# 
  1041  1F3B                     	;# 
  1042  1F3C                     	;# 
  1043  1F3D                     	;# 
  1044  1F3E                     	;# 
  1045  1F3F                     	;# 
  1046  1F43                     	;# 
  1047  1F44                     	;# 
  1048  1F45                     	;# 
  1049  1F46                     	;# 
  1050  1F47                     	;# 
  1051  1F48                     	;# 
  1052  1F49                     	;# 
  1053  1F4A                     	;# 
  1054  1F4E                     	;# 
  1055  1F4F                     	;# 
  1056  1F50                     	;# 
  1057  1F51                     	;# 
  1058  1F52                     	;# 
  1059  1F53                     	;# 
  1060  1F54                     	;# 
  1061  1F55                     	;# 
  1062  1FE4                     	;# 
  1063  1FE5                     	;# 
  1064  1FE6                     	;# 
  1065  1FE7                     	;# 
  1066  1FE8                     	;# 
  1067  1FE8                     	;# 
  1068  1FE9                     	;# 
  1069  1FEA                     	;# 
  1070  1FEB                     	;# 
  1071  1FED                     	;# 
  1072  1FEE                     	;# 
  1073  1FEF                     	;# 
  1074  0000                     	;# 
  1075  0001                     	;# 
  1076  0002                     	;# 
  1077  0003                     	;# 
  1078  0004                     	;# 
  1079  0005                     	;# 
  1080  0006                     	;# 
  1081  0007                     	;# 
  1082  0008                     	;# 
  1083  0009                     	;# 
  1084  000A                     	;# 
  1085  000B                     	;# 
  1086  000C                     	;# 
  1087  000D                     	;# 
  1088  000E                     	;# 
  1089  0012                     	;# 
  1090  0013                     	;# 
  1091  0014                     	;# 
  1092  0018                     	;# 
  1093  0019                     	;# 
  1094  001A                     	;# 
  1095  008C                     	;# 
  1096  008C                     	;# 
  1097  008D                     	;# 
  1098  008E                     	;# 
  1099  008E                     	;# 
  1100  008F                     	;# 
  1101  0090                     	;# 
  1102  0090                     	;# 
  1103  0091                     	;# 
  1104  0092                     	;# 
  1105  0092                     	;# 
  1106  0093                     	;# 
  1107  0094                     	;# 
  1108  0094                     	;# 
  1109  0095                     	;# 
  1110  0096                     	;# 
  1111  0096                     	;# 
  1112  0097                     	;# 
  1113  0098                     	;# 
  1114  0099                     	;# 
  1115  009A                     	;# 
  1116  009B                     	;# 
  1117  009B                     	;# 
  1118  009C                     	;# 
  1119  009D                     	;# 
  1120  009D                     	;# 
  1121  009E                     	;# 
  1122  009F                     	;# 
  1123  010C                     	;# 
  1124  010C                     	;# 
  1125  010D                     	;# 
  1126  010E                     	;# 
  1127  010F                     	;# 
  1128  010F                     	;# 
  1129  0110                     	;# 
  1130  0111                     	;# 
  1131  0112                     	;# 
  1132  0113                     	;# 
  1133  0114                     	;# 
  1134  0115                     	;# 
  1135  0116                     	;# 
  1136  0117                     	;# 
  1137  0118                     	;# 
  1138  0119                     	;# 
  1139  0119                     	;# 
  1140  0119                     	;# 
  1141  011A                     	;# 
  1142  011A                     	;# 
  1143  011A                     	;# 
  1144  011B                     	;# 
  1145  011B                     	;# 
  1146  011B                     	;# 
  1147  011B                     	;# 
  1148  011B                     	;# 
  1149  011C                     	;# 
  1150  011C                     	;# 
  1151  011C                     	;# 
  1152  011D                     	;# 
  1153  011D                     	;# 
  1154  011D                     	;# 
  1155  011E                     	;# 
  1156  011E                     	;# 
  1157  011E                     	;# 
  1158  011F                     	;# 
  1159  011F                     	;# 
  1160  011F                     	;# 
  1161  011F                     	;# 
  1162  011F                     	;# 
  1163  018C                     	;# 
  1164  018D                     	;# 
  1165  018E                     	;# 
  1166  018F                     	;# 
  1167  0190                     	;# 
  1168  0191                     	;# 
  1169  0192                     	;# 
  1170  0196                     	;# 
  1171  0197                     	;# 
  1172  0198                     	;# 
  1173  0199                     	;# 
  1174  019A                     	;# 
  1175  019B                     	;# 
  1176  019C                     	;# 
  1177  020C                     	;# 
  1178  020D                     	;# 
  1179  020E                     	;# 
  1180  020E                     	;# 
  1181  020F                     	;# 
  1182  020F                     	;# 
  1183  0210                     	;# 
  1184  0210                     	;# 
  1185  0211                     	;# 
  1186  0211                     	;# 
  1187  0212                     	;# 
  1188  0213                     	;# 
  1189  0214                     	;# 
  1190  0214                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0216                     	;# 
  1194  0216                     	;# 
  1195  0217                     	;# 
  1196  0217                     	;# 
  1197  0218                     	;# 
  1198  0219                     	;# 
  1199  021A                     	;# 
  1200  021A                     	;# 
  1201  021B                     	;# 
  1202  021B                     	;# 
  1203  021C                     	;# 
  1204  021C                     	;# 
  1205  021D                     	;# 
  1206  021D                     	;# 
  1207  021E                     	;# 
  1208  021F                     	;# 
  1209  028C                     	;# 
  1210  028C                     	;# 
  1211  028D                     	;# 
  1212  028D                     	;# 
  1213  028E                     	;# 
  1214  028F                     	;# 
  1215  0290                     	;# 
  1216  0291                     	;# 
  1217  0292                     	;# 
  1218  0292                     	;# 
  1219  0293                     	;# 
  1220  0293                     	;# 
  1221  0294                     	;# 
  1222  0295                     	;# 
  1223  0296                     	;# 
  1224  0297                     	;# 
  1225  0298                     	;# 
  1226  0298                     	;# 
  1227  0299                     	;# 
  1228  0299                     	;# 
  1229  029A                     	;# 
  1230  029B                     	;# 
  1231  029C                     	;# 
  1232  029D                     	;# 
  1233  029F                     	;# 
  1234  030C                     	;# 
  1235  030C                     	;# 
  1236  030D                     	;# 
  1237  030E                     	;# 
  1238  030F                     	;# 
  1239  0310                     	;# 
  1240  0310                     	;# 
  1241  0311                     	;# 
  1242  0312                     	;# 
  1243  0313                     	;# 
  1244  0314                     	;# 
  1245  0314                     	;# 
  1246  0315                     	;# 
  1247  0316                     	;# 
  1248  0317                     	;# 
  1249  0318                     	;# 
  1250  0318                     	;# 
  1251  0319                     	;# 
  1252  031A                     	;# 
  1253  031B                     	;# 
  1254  038C                     	;# 
  1255  038C                     	;# 
  1256  038D                     	;# 
  1257  038E                     	;# 
  1258  0390                     	;# 
  1259  0390                     	;# 
  1260  0391                     	;# 
  1261  0392                     	;# 
  1262  048C                     	;# 
  1263  048C                     	;# 
  1264  048D                     	;# 
  1265  048E                     	;# 
  1266  048F                     	;# 
  1267  048F                     	;# 
  1268  0490                     	;# 
  1269  0491                     	;# 
  1270  0492                     	;# 
  1271  0492                     	;# 
  1272  0493                     	;# 
  1273  0494                     	;# 
  1274  0495                     	;# 
  1275  0495                     	;# 
  1276  0496                     	;# 
  1277  0497                     	;# 
  1278  0498                     	;# 
  1279  0499                     	;# 
  1280  049A                     	;# 
  1281  049B                     	;# 
  1282  049C                     	;# 
  1283  049D                     	;# 
  1284  058C                     	;# 
  1285  058C                     	;# 
  1286  058D                     	;# 
  1287  058E                     	;# 
  1288  058F                     	;# 
  1289  058F                     	;# 
  1290  0590                     	;# 
  1291  0591                     	;# 
  1292  0592                     	;# 
  1293  0593                     	;# 
  1294  059C                     	;# 
  1295  059C                     	;# 
  1296  059D                     	;# 
  1297  059D                     	;# 
  1298  059E                     	;# 
  1299  059F                     	;# 
  1300  060C                     	;# 
  1301  060C                     	;# 
  1302  060D                     	;# 
  1303  060D                     	;# 
  1304  060E                     	;# 
  1305  060F                     	;# 
  1306  0610                     	;# 
  1307  0611                     	;# 
  1308  0612                     	;# 
  1309  0613                     	;# 
  1310  0614                     	;# 
  1311  0616                     	;# 
  1312  0616                     	;# 
  1313  0617                     	;# 
  1314  0617                     	;# 
  1315  0618                     	;# 
  1316  0619                     	;# 
  1317  061A                     	;# 
  1318  061B                     	;# 
  1319  061C                     	;# 
  1320  061D                     	;# 
  1321  061E                     	;# 
  1322  070C                     	;# 
  1323  070D                     	;# 
  1324  070E                     	;# 
  1325  070F                     	;# 
  1326  0710                     	;# 
  1327  0711                     	;# 
  1328  0712                     	;# 
  1329  0713                     	;# 
  1330  0714                     	;# 
  1331  0716                     	;# 
  1332  0717                     	;# 
  1333  0718                     	;# 
  1334  0719                     	;# 
  1335  071A                     	;# 
  1336  071B                     	;# 
  1337  071C                     	;# 
  1338  071D                     	;# 
  1339  071E                     	;# 
  1340  0796                     	;# 
  1341  0797                     	;# 
  1342  0798                     	;# 
  1343  0799                     	;# 
  1344  079A                     	;# 
  1345  079B                     	;# 
  1346  079C                     	;# 
  1347  079D                     	;# 
  1348  080C                     	;# 
  1349  080D                     	;# 
  1350  080E                     	;# 
  1351  080F                     	;# 
  1352  0810                     	;# 
  1353  0811                     	;# 
  1354  0812                     	;# 
  1355  0813                     	;# 
  1356  0814                     	;# 
  1357  081A                     	;# 
  1358  081A                     	;# 
  1359  081B                     	;# 
  1360  081C                     	;# 
  1361  081C                     	;# 
  1362  081D                     	;# 
  1363  081E                     	;# 
  1364  081F                     	;# 
  1365  088C                     	;# 
  1366  088D                     	;# 
  1367  088E                     	;# 
  1368  088F                     	;# 
  1369  0890                     	;# 
  1370  0891                     	;# 
  1371  0892                     	;# 
  1372  0893                     	;# 
  1373  0895                     	;# 
  1374  0896                     	;# 
  1375  0897                     	;# 
  1376  0898                     	;# 
  1377  0899                     	;# 
  1378  089A                     	;# 
  1379  089B                     	;# 
  1380  090C                     	;# 
  1381  090E                     	;# 
  1382  090F                     	;# 
  1383  091F                     	;# 
  1384  098F                     	;# 
  1385  098F                     	;# 
  1386  0990                     	;# 
  1387  0991                     	;# 
  1388  0992                     	;# 
  1389  0993                     	;# 
  1390  0994                     	;# 
  1391  0995                     	;# 
  1392  0996                     	;# 
  1393  0997                     	;# 
  1394  1E0F                     	;# 
  1395  1E10                     	;# 
  1396  1E11                     	;# 
  1397  1E12                     	;# 
  1398  1E13                     	;# 
  1399  1E14                     	;# 
  1400  1E15                     	;# 
  1401  1E16                     	;# 
  1402  1E17                     	;# 
  1403  1E18                     	;# 
  1404  1E19                     	;# 
  1405  1E1A                     	;# 
  1406  1E1B                     	;# 
  1407  1E1C                     	;# 
  1408  1E1D                     	;# 
  1409  1E1E                     	;# 
  1410  1E1F                     	;# 
  1411  1E20                     	;# 
  1412  1E21                     	;# 
  1413  1E22                     	;# 
  1414  1E23                     	;# 
  1415  1E24                     	;# 
  1416  1E25                     	;# 
  1417  1E26                     	;# 
  1418  1E27                     	;# 
  1419  1E28                     	;# 
  1420  1E29                     	;# 
  1421  1E2A                     	;# 
  1422  1E2B                     	;# 
  1423  1E2C                     	;# 
  1424  1E2D                     	;# 
  1425  1E2E                     	;# 
  1426  1E2F                     	;# 
  1427  1E30                     	;# 
  1428  1E31                     	;# 
  1429  1E32                     	;# 
  1430  1E33                     	;# 
  1431  1E34                     	;# 
  1432  1E35                     	;# 
  1433  1E36                     	;# 
  1434  1E37                     	;# 
  1435  1E8F                     	;# 
  1436  1E90                     	;# 
  1437  1E91                     	;# 
  1438  1E92                     	;# 
  1439  1E93                     	;# 
  1440  1E94                     	;# 
  1441  1E95                     	;# 
  1442  1E96                     	;# 
  1443  1E97                     	;# 
  1444  1E9C                     	;# 
  1445  1E9D                     	;# 
  1446  1E9E                     	;# 
  1447  1EA1                     	;# 
  1448  1EA2                     	;# 
  1449  1EA3                     	;# 
  1450  1EA4                     	;# 
  1451  1EA9                     	;# 
  1452  1EAA                     	;# 
  1453  1EB1                     	;# 
  1454  1EB2                     	;# 
  1455  1EB8                     	;# 
  1456  1EB9                     	;# 
  1457  1EBA                     	;# 
  1458  1EBB                     	;# 
  1459  1EBC                     	;# 
  1460  1EBD                     	;# 
  1461  1EBE                     	;# 
  1462  1EC3                     	;# 
  1463  1EC5                     	;# 
  1464  1EC6                     	;# 
  1465  1EC7                     	;# 
  1466  1EC8                     	;# 
  1467  1EC9                     	;# 
  1468  1ECA                     	;# 
  1469  1ECB                     	;# 
  1470  1ECB                     	;# 
  1471  1ECB                     	;# 
  1472  1ECC                     	;# 
  1473  1ECC                     	;# 
  1474  1ECC                     	;# 
  1475  1F10                     	;# 
  1476  1F11                     	;# 
  1477  1F12                     	;# 
  1478  1F14                     	;# 
  1479  1F15                     	;# 
  1480  1F1C                     	;# 
  1481  1F1D                     	;# 
  1482  1F1E                     	;# 
  1483  1F1F                     	;# 
  1484  1F20                     	;# 
  1485  1F21                     	;# 
  1486  1F22                     	;# 
  1487  1F23                     	;# 
  1488  1F24                     	;# 
  1489  1F25                     	;# 
  1490  1F26                     	;# 
  1491  1F27                     	;# 
  1492  1F38                     	;# 
  1493  1F39                     	;# 
  1494  1F3A                     	;# 
  1495  1F3B                     	;# 
  1496  1F3C                     	;# 
  1497  1F3D                     	;# 
  1498  1F3E                     	;# 
  1499  1F3F                     	;# 
  1500  1F43                     	;# 
  1501  1F44                     	;# 
  1502  1F45                     	;# 
  1503  1F46                     	;# 
  1504  1F47                     	;# 
  1505  1F48                     	;# 
  1506  1F49                     	;# 
  1507  1F4A                     	;# 
  1508  1F4E                     	;# 
  1509  1F4F                     	;# 
  1510  1F50                     	;# 
  1511  1F51                     	;# 
  1512  1F52                     	;# 
  1513  1F53                     	;# 
  1514  1F54                     	;# 
  1515  1F55                     	;# 
  1516  1FE4                     	;# 
  1517  1FE5                     	;# 
  1518  1FE6                     	;# 
  1519  1FE7                     	;# 
  1520  1FE8                     	;# 
  1521  1FE8                     	;# 
  1522  1FE9                     	;# 
  1523  1FEA                     	;# 
  1524  1FEB                     	;# 
  1525  1FED                     	;# 
  1526  1FEE                     	;# 
  1527  1FEF                     	;# 
  1528  0000                     	;# 
  1529  0001                     	;# 
  1530  0002                     	;# 
  1531  0003                     	;# 
  1532  0004                     	;# 
  1533  0005                     	;# 
  1534  0006                     	;# 
  1535  0007                     	;# 
  1536  0008                     	;# 
  1537  0009                     	;# 
  1538  000A                     	;# 
  1539  000B                     	;# 
  1540  000C                     	;# 
  1541  000D                     	;# 
  1542  000E                     	;# 
  1543  0012                     	;# 
  1544  0013                     	;# 
  1545  0014                     	;# 
  1546  0018                     	;# 
  1547  0019                     	;# 
  1548  001A                     	;# 
  1549  008C                     	;# 
  1550  008C                     	;# 
  1551  008D                     	;# 
  1552  008E                     	;# 
  1553  008E                     	;# 
  1554  008F                     	;# 
  1555  0090                     	;# 
  1556  0090                     	;# 
  1557  0091                     	;# 
  1558  0092                     	;# 
  1559  0092                     	;# 
  1560  0093                     	;# 
  1561  0094                     	;# 
  1562  0094                     	;# 
  1563  0095                     	;# 
  1564  0096                     	;# 
  1565  0096                     	;# 
  1566  0097                     	;# 
  1567  0098                     	;# 
  1568  0099                     	;# 
  1569  009A                     	;# 
  1570  009B                     	;# 
  1571  009B                     	;# 
  1572  009C                     	;# 
  1573  009D                     	;# 
  1574  009D                     	;# 
  1575  009E                     	;# 
  1576  009F                     	;# 
  1577  010C                     	;# 
  1578  010C                     	;# 
  1579  010D                     	;# 
  1580  010E                     	;# 
  1581  010F                     	;# 
  1582  010F                     	;# 
  1583  0110                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  0119                     	;# 
  1594  0119                     	;# 
  1595  011A                     	;# 
  1596  011A                     	;# 
  1597  011A                     	;# 
  1598  011B                     	;# 
  1599  011B                     	;# 
  1600  011B                     	;# 
  1601  011B                     	;# 
  1602  011B                     	;# 
  1603  011C                     	;# 
  1604  011C                     	;# 
  1605  011C                     	;# 
  1606  011D                     	;# 
  1607  011D                     	;# 
  1608  011D                     	;# 
  1609  011E                     	;# 
  1610  011E                     	;# 
  1611  011E                     	;# 
  1612  011F                     	;# 
  1613  011F                     	;# 
  1614  011F                     	;# 
  1615  011F                     	;# 
  1616  011F                     	;# 
  1617  018C                     	;# 
  1618  018D                     	;# 
  1619  018E                     	;# 
  1620  018F                     	;# 
  1621  0190                     	;# 
  1622  0191                     	;# 
  1623  0192                     	;# 
  1624  0196                     	;# 
  1625  0197                     	;# 
  1626  0198                     	;# 
  1627  0199                     	;# 
  1628  019A                     	;# 
  1629  019B                     	;# 
  1630  019C                     	;# 
  1631  020C                     	;# 
  1632  020D                     	;# 
  1633  020E                     	;# 
  1634  020E                     	;# 
  1635  020F                     	;# 
  1636  020F                     	;# 
  1637  0210                     	;# 
  1638  0210                     	;# 
  1639  0211                     	;# 
  1640  0211                     	;# 
  1641  0212                     	;# 
  1642  0213                     	;# 
  1643  0214                     	;# 
  1644  0214                     	;# 
  1645  0215                     	;# 
  1646  0215                     	;# 
  1647  0216                     	;# 
  1648  0216                     	;# 
  1649  0217                     	;# 
  1650  0217                     	;# 
  1651  0218                     	;# 
  1652  0219                     	;# 
  1653  021A                     	;# 
  1654  021A                     	;# 
  1655  021B                     	;# 
  1656  021B                     	;# 
  1657  021C                     	;# 
  1658  021C                     	;# 
  1659  021D                     	;# 
  1660  021D                     	;# 
  1661  021E                     	;# 
  1662  021F                     	;# 
  1663  028C                     	;# 
  1664  028C                     	;# 
  1665  028D                     	;# 
  1666  028D                     	;# 
  1667  028E                     	;# 
  1668  028F                     	;# 
  1669  0290                     	;# 
  1670  0291                     	;# 
  1671  0292                     	;# 
  1672  0292                     	;# 
  1673  0293                     	;# 
  1674  0293                     	;# 
  1675  0294                     	;# 
  1676  0295                     	;# 
  1677  0296                     	;# 
  1678  0297                     	;# 
  1679  0298                     	;# 
  1680  0298                     	;# 
  1681  0299                     	;# 
  1682  0299                     	;# 
  1683  029A                     	;# 
  1684  029B                     	;# 
  1685  029C                     	;# 
  1686  029D                     	;# 
  1687  029F                     	;# 
  1688  030C                     	;# 
  1689  030C                     	;# 
  1690  030D                     	;# 
  1691  030E                     	;# 
  1692  030F                     	;# 
  1693  0310                     	;# 
  1694  0310                     	;# 
  1695  0311                     	;# 
  1696  0312                     	;# 
  1697  0313                     	;# 
  1698  0314                     	;# 
  1699  0314                     	;# 
  1700  0315                     	;# 
  1701  0316                     	;# 
  1702  0317                     	;# 
  1703  0318                     	;# 
  1704  0318                     	;# 
  1705  0319                     	;# 
  1706  031A                     	;# 
  1707  031B                     	;# 
  1708  038C                     	;# 
  1709  038C                     	;# 
  1710  038D                     	;# 
  1711  038E                     	;# 
  1712  0390                     	;# 
  1713  0390                     	;# 
  1714  0391                     	;# 
  1715  0392                     	;# 
  1716  048C                     	;# 
  1717  048C                     	;# 
  1718  048D                     	;# 
  1719  048E                     	;# 
  1720  048F                     	;# 
  1721  048F                     	;# 
  1722  0490                     	;# 
  1723  0491                     	;# 
  1724  0492                     	;# 
  1725  0492                     	;# 
  1726  0493                     	;# 
  1727  0494                     	;# 
  1728  0495                     	;# 
  1729  0495                     	;# 
  1730  0496                     	;# 
  1731  0497                     	;# 
  1732  0498                     	;# 
  1733  0499                     	;# 
  1734  049A                     	;# 
  1735  049B                     	;# 
  1736  049C                     	;# 
  1737  049D                     	;# 
  1738  058C                     	;# 
  1739  058C                     	;# 
  1740  058D                     	;# 
  1741  058E                     	;# 
  1742  058F                     	;# 
  1743  058F                     	;# 
  1744  0590                     	;# 
  1745  0591                     	;# 
  1746  0592                     	;# 
  1747  0593                     	;# 
  1748  059C                     	;# 
  1749  059C                     	;# 
  1750  059D                     	;# 
  1751  059D                     	;# 
  1752  059E                     	;# 
  1753  059F                     	;# 
  1754  060C                     	;# 
  1755  060C                     	;# 
  1756  060D                     	;# 
  1757  060D                     	;# 
  1758  060E                     	;# 
  1759  060F                     	;# 
  1760  0610                     	;# 
  1761  0611                     	;# 
  1762  0612                     	;# 
  1763  0613                     	;# 
  1764  0614                     	;# 
  1765  0616                     	;# 
  1766  0616                     	;# 
  1767  0617                     	;# 
  1768  0617                     	;# 
  1769  0618                     	;# 
  1770  0619                     	;# 
  1771  061A                     	;# 
  1772  061B                     	;# 
  1773  061C                     	;# 
  1774  061D                     	;# 
  1775  061E                     	;# 
  1776  070C                     	;# 
  1777  070D                     	;# 
  1778  070E                     	;# 
  1779  070F                     	;# 
  1780  0710                     	;# 
  1781  0711                     	;# 
  1782  0712                     	;# 
  1783  0713                     	;# 
  1784  0714                     	;# 
  1785  0716                     	;# 
  1786  0717                     	;# 
  1787  0718                     	;# 
  1788  0719                     	;# 
  1789  071A                     	;# 
  1790  071B                     	;# 
  1791  071C                     	;# 
  1792  071D                     	;# 
  1793  071E                     	;# 
  1794  0796                     	;# 
  1795  0797                     	;# 
  1796  0798                     	;# 
  1797  0799                     	;# 
  1798  079A                     	;# 
  1799  079B                     	;# 
  1800  079C                     	;# 
  1801  079D                     	;# 
  1802  080C                     	;# 
  1803  080D                     	;# 
  1804  080E                     	;# 
  1805  080F                     	;# 
  1806  0810                     	;# 
  1807  0811                     	;# 
  1808  0812                     	;# 
  1809  0813                     	;# 
  1810  0814                     	;# 
  1811  081A                     	;# 
  1812  081A                     	;# 
  1813  081B                     	;# 
  1814  081C                     	;# 
  1815  081C                     	;# 
  1816  081D                     	;# 
  1817  081E                     	;# 
  1818  081F                     	;# 
  1819  088C                     	;# 
  1820  088D                     	;# 
  1821  088E                     	;# 
  1822  088F                     	;# 
  1823  0890                     	;# 
  1824  0891                     	;# 
  1825  0892                     	;# 
  1826  0893                     	;# 
  1827  0895                     	;# 
  1828  0896                     	;# 
  1829  0897                     	;# 
  1830  0898                     	;# 
  1831  0899                     	;# 
  1832  089A                     	;# 
  1833  089B                     	;# 
  1834  090C                     	;# 
  1835  090E                     	;# 
  1836  090F                     	;# 
  1837  091F                     	;# 
  1838  098F                     	;# 
  1839  098F                     	;# 
  1840  0990                     	;# 
  1841  0991                     	;# 
  1842  0992                     	;# 
  1843  0993                     	;# 
  1844  0994                     	;# 
  1845  0995                     	;# 
  1846  0996                     	;# 
  1847  0997                     	;# 
  1848  1E0F                     	;# 
  1849  1E10                     	;# 
  1850  1E11                     	;# 
  1851  1E12                     	;# 
  1852  1E13                     	;# 
  1853  1E14                     	;# 
  1854  1E15                     	;# 
  1855  1E16                     	;# 
  1856  1E17                     	;# 
  1857  1E18                     	;# 
  1858  1E19                     	;# 
  1859  1E1A                     	;# 
  1860  1E1B                     	;# 
  1861  1E1C                     	;# 
  1862  1E1D                     	;# 
  1863  1E1E                     	;# 
  1864  1E1F                     	;# 
  1865  1E20                     	;# 
  1866  1E21                     	;# 
  1867  1E22                     	;# 
  1868  1E23                     	;# 
  1869  1E24                     	;# 
  1870  1E25                     	;# 
  1871  1E26                     	;# 
  1872  1E27                     	;# 
  1873  1E28                     	;# 
  1874  1E29                     	;# 
  1875  1E2A                     	;# 
  1876  1E2B                     	;# 
  1877  1E2C                     	;# 
  1878  1E2D                     	;# 
  1879  1E2E                     	;# 
  1880  1E2F                     	;# 
  1881  1E30                     	;# 
  1882  1E31                     	;# 
  1883  1E32                     	;# 
  1884  1E33                     	;# 
  1885  1E34                     	;# 
  1886  1E35                     	;# 
  1887  1E36                     	;# 
  1888  1E37                     	;# 
  1889  1E8F                     	;# 
  1890  1E90                     	;# 
  1891  1E91                     	;# 
  1892  1E92                     	;# 
  1893  1E93                     	;# 
  1894  1E94                     	;# 
  1895  1E95                     	;# 
  1896  1E96                     	;# 
  1897  1E97                     	;# 
  1898  1E9C                     	;# 
  1899  1E9D                     	;# 
  1900  1E9E                     	;# 
  1901  1EA1                     	;# 
  1902  1EA2                     	;# 
  1903  1EA3                     	;# 
  1904  1EA4                     	;# 
  1905  1EA9                     	;# 
  1906  1EAA                     	;# 
  1907  1EB1                     	;# 
  1908  1EB2                     	;# 
  1909  1EB8                     	;# 
  1910  1EB9                     	;# 
  1911  1EBA                     	;# 
  1912  1EBB                     	;# 
  1913  1EBC                     	;# 
  1914  1EBD                     	;# 
  1915  1EBE                     	;# 
  1916  1EC3                     	;# 
  1917  1EC5                     	;# 
  1918  1EC6                     	;# 
  1919  1EC7                     	;# 
  1920  1EC8                     	;# 
  1921  1EC9                     	;# 
  1922  1ECA                     	;# 
  1923  1ECB                     	;# 
  1924  1ECB                     	;# 
  1925  1ECB                     	;# 
  1926  1ECC                     	;# 
  1927  1ECC                     	;# 
  1928  1ECC                     	;# 
  1929  1F10                     	;# 
  1930  1F11                     	;# 
  1931  1F12                     	;# 
  1932  1F14                     	;# 
  1933  1F15                     	;# 
  1934  1F1C                     	;# 
  1935  1F1D                     	;# 
  1936  1F1E                     	;# 
  1937  1F1F                     	;# 
  1938  1F20                     	;# 
  1939  1F21                     	;# 
  1940  1F22                     	;# 
  1941  1F23                     	;# 
  1942  1F24                     	;# 
  1943  1F25                     	;# 
  1944  1F26                     	;# 
  1945  1F27                     	;# 
  1946  1F38                     	;# 
  1947  1F39                     	;# 
  1948  1F3A                     	;# 
  1949  1F3B                     	;# 
  1950  1F3C                     	;# 
  1951  1F3D                     	;# 
  1952  1F3E                     	;# 
  1953  1F3F                     	;# 
  1954  1F43                     	;# 
  1955  1F44                     	;# 
  1956  1F45                     	;# 
  1957  1F46                     	;# 
  1958  1F47                     	;# 
  1959  1F48                     	;# 
  1960  1F49                     	;# 
  1961  1F4A                     	;# 
  1962  1F4E                     	;# 
  1963  1F4F                     	;# 
  1964  1F50                     	;# 
  1965  1F51                     	;# 
  1966  1F52                     	;# 
  1967  1F53                     	;# 
  1968  1F54                     	;# 
  1969  1F55                     	;# 
  1970  1FE4                     	;# 
  1971  1FE5                     	;# 
  1972  1FE6                     	;# 
  1973  1FE7                     	;# 
  1974  1FE8                     	;# 
  1975  1FE8                     	;# 
  1976  1FE9                     	;# 
  1977  1FEA                     	;# 
  1978  1FEB                     	;# 
  1979  1FED                     	;# 
  1980  1FEE                     	;# 
  1981  1FEF                     	;# 
  1982  0000                     	;# 
  1983  0001                     	;# 
  1984  0002                     	;# 
  1985  0003                     	;# 
  1986  0004                     	;# 
  1987  0005                     	;# 
  1988  0006                     	;# 
  1989  0007                     	;# 
  1990  0008                     	;# 
  1991  0009                     	;# 
  1992  000A                     	;# 
  1993  000B                     	;# 
  1994  000C                     	;# 
  1995  000D                     	;# 
  1996  000E                     	;# 
  1997  0012                     	;# 
  1998  0013                     	;# 
  1999  0014                     	;# 
  2000  0018                     	;# 
  2001  0019                     	;# 
  2002  001A                     	;# 
  2003  008C                     	;# 
  2004  008C                     	;# 
  2005  008D                     	;# 
  2006  008E                     	;# 
  2007  008E                     	;# 
  2008  008F                     	;# 
  2009  0090                     	;# 
  2010  0090                     	;# 
  2011  0091                     	;# 
  2012  0092                     	;# 
  2013  0092                     	;# 
  2014  0093                     	;# 
  2015  0094                     	;# 
  2016  0094                     	;# 
  2017  0095                     	;# 
  2018  0096                     	;# 
  2019  0096                     	;# 
  2020  0097                     	;# 
  2021  0098                     	;# 
  2022  0099                     	;# 
  2023  009A                     	;# 
  2024  009B                     	;# 
  2025  009B                     	;# 
  2026  009C                     	;# 
  2027  009D                     	;# 
  2028  009D                     	;# 
  2029  009E                     	;# 
  2030  009F                     	;# 
  2031  010C                     	;# 
  2032  010C                     	;# 
  2033  010D                     	;# 
  2034  010E                     	;# 
  2035  010F                     	;# 
  2036  010F                     	;# 
  2037  0110                     	;# 
  2038  0111                     	;# 
  2039  0112                     	;# 
  2040  0113                     	;# 
  2041  0114                     	;# 
  2042  0115                     	;# 
  2043  0116                     	;# 
  2044  0117                     	;# 
  2045  0118                     	;# 
  2046  0119                     	;# 
  2047  0119                     	;# 
  2048  0119                     	;# 
  2049  011A                     	;# 
  2050  011A                     	;# 
  2051  011A                     	;# 
  2052  011B                     	;# 
  2053  011B                     	;# 
  2054  011B                     	;# 
  2055  011B                     	;# 
  2056  011B                     	;# 
  2057  011C                     	;# 
  2058  011C                     	;# 
  2059  011C                     	;# 
  2060  011D                     	;# 
  2061  011D                     	;# 
  2062  011D                     	;# 
  2063  011E                     	;# 
  2064  011E                     	;# 
  2065  011E                     	;# 
  2066  011F                     	;# 
  2067  011F                     	;# 
  2068  011F                     	;# 
  2069  011F                     	;# 
  2070  011F                     	;# 
  2071  018C                     	;# 
  2072  018D                     	;# 
  2073  018E                     	;# 
  2074  018F                     	;# 
  2075  0190                     	;# 
  2076  0191                     	;# 
  2077  0192                     	;# 
  2078  0196                     	;# 
  2079  0197                     	;# 
  2080  0198                     	;# 
  2081  0199                     	;# 
  2082  019A                     	;# 
  2083  019B                     	;# 
  2084  019C                     	;# 
  2085  020C                     	;# 
  2086  020D                     	;# 
  2087  020E                     	;# 
  2088  020E                     	;# 
  2089  020F                     	;# 
  2090  020F                     	;# 
  2091  0210                     	;# 
  2092  0210                     	;# 
  2093  0211                     	;# 
  2094  0211                     	;# 
  2095  0212                     	;# 
  2096  0213                     	;# 
  2097  0214                     	;# 
  2098  0214                     	;# 
  2099  0215                     	;# 
  2100  0215                     	;# 
  2101  0216                     	;# 
  2102  0216                     	;# 
  2103  0217                     	;# 
  2104  0217                     	;# 
  2105  0218                     	;# 
  2106  0219                     	;# 
  2107  021A                     	;# 
  2108  021A                     	;# 
  2109  021B                     	;# 
  2110  021B                     	;# 
  2111  021C                     	;# 
  2112  021C                     	;# 
  2113  021D                     	;# 
  2114  021D                     	;# 
  2115  021E                     	;# 
  2116  021F                     	;# 
  2117  028C                     	;# 
  2118  028C                     	;# 
  2119  028D                     	;# 
  2120  028D                     	;# 
  2121  028E                     	;# 
  2122  028F                     	;# 
  2123  0290                     	;# 
  2124  0291                     	;# 
  2125  0292                     	;# 
  2126  0292                     	;# 
  2127  0293                     	;# 
  2128  0293                     	;# 
  2129  0294                     	;# 
  2130  0295                     	;# 
  2131  0296                     	;# 
  2132  0297                     	;# 
  2133  0298                     	;# 
  2134  0298                     	;# 
  2135  0299                     	;# 
  2136  0299                     	;# 
  2137  029A                     	;# 
  2138  029B                     	;# 
  2139  029C                     	;# 
  2140  029D                     	;# 
  2141  029F                     	;# 
  2142  030C                     	;# 
  2143  030C                     	;# 
  2144  030D                     	;# 
  2145  030E                     	;# 
  2146  030F                     	;# 
  2147  0310                     	;# 
  2148  0310                     	;# 
  2149  0311                     	;# 
  2150  0312                     	;# 
  2151  0313                     	;# 
  2152  0314                     	;# 
  2153  0314                     	;# 
  2154  0315                     	;# 
  2155  0316                     	;# 
  2156  0317                     	;# 
  2157  0318                     	;# 
  2158  0318                     	;# 
  2159  0319                     	;# 
  2160  031A                     	;# 
  2161  031B                     	;# 
  2162  038C                     	;# 
  2163  038C                     	;# 
  2164  038D                     	;# 
  2165  038E                     	;# 
  2166  0390                     	;# 
  2167  0390                     	;# 
  2168  0391                     	;# 
  2169  0392                     	;# 
  2170  048C                     	;# 
  2171  048C                     	;# 
  2172  048D                     	;# 
  2173  048E                     	;# 
  2174  048F                     	;# 
  2175  048F                     	;# 
  2176  0490                     	;# 
  2177  0491                     	;# 
  2178  0492                     	;# 
  2179  0492                     	;# 
  2180  0493                     	;# 
  2181  0494                     	;# 
  2182  0495                     	;# 
  2183  0495                     	;# 
  2184  0496                     	;# 
  2185  0497                     	;# 
  2186  0498                     	;# 
  2187  0499                     	;# 
  2188  049A                     	;# 
  2189  049B                     	;# 
  2190  049C                     	;# 
  2191  049D                     	;# 
  2192  058C                     	;# 
  2193  058C                     	;# 
  2194  058D                     	;# 
  2195  058E                     	;# 
  2196  058F                     	;# 
  2197  058F                     	;# 
  2198  0590                     	;# 
  2199  0591                     	;# 
  2200  0592                     	;# 
  2201  0593                     	;# 
  2202  059C                     	;# 
  2203  059C                     	;# 
  2204  059D                     	;# 
  2205  059D                     	;# 
  2206  059E                     	;# 
  2207  059F                     	;# 
  2208  060C                     	;# 
  2209  060C                     	;# 
  2210  060D                     	;# 
  2211  060D                     	;# 
  2212  060E                     	;# 
  2213  060F                     	;# 
  2214  0610                     	;# 
  2215  0611                     	;# 
  2216  0612                     	;# 
  2217  0613                     	;# 
  2218  0614                     	;# 
  2219  0616                     	;# 
  2220  0616                     	;# 
  2221  0617                     	;# 
  2222  0617                     	;# 
  2223  0618                     	;# 
  2224  0619                     	;# 
  2225  061A                     	;# 
  2226  061B                     	;# 
  2227  061C                     	;# 
  2228  061D                     	;# 
  2229  061E                     	;# 
  2230  070C                     	;# 
  2231  070D                     	;# 
  2232  070E                     	;# 
  2233  070F                     	;# 
  2234  0710                     	;# 
  2235  0711                     	;# 
  2236  0712                     	;# 
  2237  0713                     	;# 
  2238  0714                     	;# 
  2239  0716                     	;# 
  2240  0717                     	;# 
  2241  0718                     	;# 
  2242  0719                     	;# 
  2243  071A                     	;# 
  2244  071B                     	;# 
  2245  071C                     	;# 
  2246  071D                     	;# 
  2247  071E                     	;# 
  2248  0796                     	;# 
  2249  0797                     	;# 
  2250  0798                     	;# 
  2251  0799                     	;# 
  2252  079A                     	;# 
  2253  079B                     	;# 
  2254  079C                     	;# 
  2255  079D                     	;# 
  2256  080C                     	;# 
  2257  080D                     	;# 
  2258  080E                     	;# 
  2259  080F                     	;# 
  2260  0810                     	;# 
  2261  0811                     	;# 
  2262  0812                     	;# 
  2263  0813                     	;# 
  2264  0814                     	;# 
  2265  081A                     	;# 
  2266  081A                     	;# 
  2267  081B                     	;# 
  2268  081C                     	;# 
  2269  081C                     	;# 
  2270  081D                     	;# 
  2271  081E                     	;# 
  2272  081F                     	;# 
  2273  088C                     	;# 
  2274  088D                     	;# 
  2275  088E                     	;# 
  2276  088F                     	;# 
  2277  0890                     	;# 
  2278  0891                     	;# 
  2279  0892                     	;# 
  2280  0893                     	;# 
  2281  0895                     	;# 
  2282  0896                     	;# 
  2283  0897                     	;# 
  2284  0898                     	;# 
  2285  0899                     	;# 
  2286  089A                     	;# 
  2287  089B                     	;# 
  2288  090C                     	;# 
  2289  090E                     	;# 
  2290  090F                     	;# 
  2291  091F                     	;# 
  2292  098F                     	;# 
  2293  098F                     	;# 
  2294  0990                     	;# 
  2295  0991                     	;# 
  2296  0992                     	;# 
  2297  0993                     	;# 
  2298  0994                     	;# 
  2299  0995                     	;# 
  2300  0996                     	;# 
  2301  0997                     	;# 
  2302  1E0F                     	;# 
  2303  1E10                     	;# 
  2304  1E11                     	;# 
  2305  1E12                     	;# 
  2306  1E13                     	;# 
  2307  1E14                     	;# 
  2308  1E15                     	;# 
  2309  1E16                     	;# 
  2310  1E17                     	;# 
  2311  1E18                     	;# 
  2312  1E19                     	;# 
  2313  1E1A                     	;# 
  2314  1E1B                     	;# 
  2315  1E1C                     	;# 
  2316  1E1D                     	;# 
  2317  1E1E                     	;# 
  2318  1E1F                     	;# 
  2319  1E20                     	;# 
  2320  1E21                     	;# 
  2321  1E22                     	;# 
  2322  1E23                     	;# 
  2323  1E24                     	;# 
  2324  1E25                     	;# 
  2325  1E26                     	;# 
  2326  1E27                     	;# 
  2327  1E28                     	;# 
  2328  1E29                     	;# 
  2329  1E2A                     	;# 
  2330  1E2B                     	;# 
  2331  1E2C                     	;# 
  2332  1E2D                     	;# 
  2333  1E2E                     	;# 
  2334  1E2F                     	;# 
  2335  1E30                     	;# 
  2336  1E31                     	;# 
  2337  1E32                     	;# 
  2338  1E33                     	;# 
  2339  1E34                     	;# 
  2340  1E35                     	;# 
  2341  1E36                     	;# 
  2342  1E37                     	;# 
  2343  1E8F                     	;# 
  2344  1E90                     	;# 
  2345  1E91                     	;# 
  2346  1E92                     	;# 
  2347  1E93                     	;# 
  2348  1E94                     	;# 
  2349  1E95                     	;# 
  2350  1E96                     	;# 
  2351  1E97                     	;# 
  2352  1E9C                     	;# 
  2353  1E9D                     	;# 
  2354  1E9E                     	;# 
  2355  1EA1                     	;# 
  2356  1EA2                     	;# 
  2357  1EA3                     	;# 
  2358  1EA4                     	;# 
  2359  1EA9                     	;# 
  2360  1EAA                     	;# 
  2361  1EB1                     	;# 
  2362  1EB2                     	;# 
  2363  1EB8                     	;# 
  2364  1EB9                     	;# 
  2365  1EBA                     	;# 
  2366  1EBB                     	;# 
  2367  1EBC                     	;# 
  2368  1EBD                     	;# 
  2369  1EBE                     	;# 
  2370  1EC3                     	;# 
  2371  1EC5                     	;# 
  2372  1EC6                     	;# 
  2373  1EC7                     	;# 
  2374  1EC8                     	;# 
  2375  1EC9                     	;# 
  2376  1ECA                     	;# 
  2377  1ECB                     	;# 
  2378  1ECB                     	;# 
  2379  1ECB                     	;# 
  2380  1ECC                     	;# 
  2381  1ECC                     	;# 
  2382  1ECC                     	;# 
  2383  1F10                     	;# 
  2384  1F11                     	;# 
  2385  1F12                     	;# 
  2386  1F14                     	;# 
  2387  1F15                     	;# 
  2388  1F1C                     	;# 
  2389  1F1D                     	;# 
  2390  1F1E                     	;# 
  2391  1F1F                     	;# 
  2392  1F20                     	;# 
  2393  1F21                     	;# 
  2394  1F22                     	;# 
  2395  1F23                     	;# 
  2396  1F24                     	;# 
  2397  1F25                     	;# 
  2398  1F26                     	;# 
  2399  1F27                     	;# 
  2400  1F38                     	;# 
  2401  1F39                     	;# 
  2402  1F3A                     	;# 
  2403  1F3B                     	;# 
  2404  1F3C                     	;# 
  2405  1F3D                     	;# 
  2406  1F3E                     	;# 
  2407  1F3F                     	;# 
  2408  1F43                     	;# 
  2409  1F44                     	;# 
  2410  1F45                     	;# 
  2411  1F46                     	;# 
  2412  1F47                     	;# 
  2413  1F48                     	;# 
  2414  1F49                     	;# 
  2415  1F4A                     	;# 
  2416  1F4E                     	;# 
  2417  1F4F                     	;# 
  2418  1F50                     	;# 
  2419  1F51                     	;# 
  2420  1F52                     	;# 
  2421  1F53                     	;# 
  2422  1F54                     	;# 
  2423  1F55                     	;# 
  2424  1FE4                     	;# 
  2425  1FE5                     	;# 
  2426  1FE6                     	;# 
  2427  1FE7                     	;# 
  2428  1FE8                     	;# 
  2429  1FE8                     	;# 
  2430  1FE9                     	;# 
  2431  1FEA                     	;# 
  2432  1FEB                     	;# 
  2433  1FED                     	;# 
  2434  1FEE                     	;# 
  2435  1FEF                     	;# 
  2436  0000                     	;# 
  2437  0001                     	;# 
  2438  0002                     	;# 
  2439  0003                     	;# 
  2440  0004                     	;# 
  2441  0005                     	;# 
  2442  0006                     	;# 
  2443  0007                     	;# 
  2444  0008                     	;# 
  2445  0009                     	;# 
  2446  000A                     	;# 
  2447  000B                     	;# 
  2448  000C                     	;# 
  2449  000D                     	;# 
  2450  000E                     	;# 
  2451  0012                     	;# 
  2452  0013                     	;# 
  2453  0014                     	;# 
  2454  0018                     	;# 
  2455  0019                     	;# 
  2456  001A                     	;# 
  2457  008C                     	;# 
  2458  008C                     	;# 
  2459  008D                     	;# 
  2460  008E                     	;# 
  2461  008E                     	;# 
  2462  008F                     	;# 
  2463  0090                     	;# 
  2464  0090                     	;# 
  2465  0091                     	;# 
  2466  0092                     	;# 
  2467  0092                     	;# 
  2468  0093                     	;# 
  2469  0094                     	;# 
  2470  0094                     	;# 
  2471  0095                     	;# 
  2472  0096                     	;# 
  2473  0096                     	;# 
  2474  0097                     	;# 
  2475  0098                     	;# 
  2476  0099                     	;# 
  2477  009A                     	;# 
  2478  009B                     	;# 
  2479  009B                     	;# 
  2480  009C                     	;# 
  2481  009D                     	;# 
  2482  009D                     	;# 
  2483  009E                     	;# 
  2484  009F                     	;# 
  2485  010C                     	;# 
  2486  010C                     	;# 
  2487  010D                     	;# 
  2488  010E                     	;# 
  2489  010F                     	;# 
  2490  010F                     	;# 
  2491  0110                     	;# 
  2492  0111                     	;# 
  2493  0112                     	;# 
  2494  0113                     	;# 
  2495  0114                     	;# 
  2496  0115                     	;# 
  2497  0116                     	;# 
  2498  0117                     	;# 
  2499  0118                     	;# 
  2500  0119                     	;# 
  2501  0119                     	;# 
  2502  0119                     	;# 
  2503  011A                     	;# 
  2504  011A                     	;# 
  2505  011A                     	;# 
  2506  011B                     	;# 
  2507  011B                     	;# 
  2508  011B                     	;# 
  2509  011B                     	;# 
  2510  011B                     	;# 
  2511  011C                     	;# 
  2512  011C                     	;# 
  2513  011C                     	;# 
  2514  011D                     	;# 
  2515  011D                     	;# 
  2516  011D                     	;# 
  2517  011E                     	;# 
  2518  011E                     	;# 
  2519  011E                     	;# 
  2520  011F                     	;# 
  2521  011F                     	;# 
  2522  011F                     	;# 
  2523  011F                     	;# 
  2524  011F                     	;# 
  2525  018C                     	;# 
  2526  018D                     	;# 
  2527  018E                     	;# 
  2528  018F                     	;# 
  2529  0190                     	;# 
  2530  0191                     	;# 
  2531  0192                     	;# 
  2532  0196                     	;# 
  2533  0197                     	;# 
  2534  0198                     	;# 
  2535  0199                     	;# 
  2536  019A                     	;# 
  2537  019B                     	;# 
  2538  019C                     	;# 
  2539  020C                     	;# 
  2540  020D                     	;# 
  2541  020E                     	;# 
  2542  020E                     	;# 
  2543  020F                     	;# 
  2544  020F                     	;# 
  2545  0210                     	;# 
  2546  0210                     	;# 
  2547  0211                     	;# 
  2548  0211                     	;# 
  2549  0212                     	;# 
  2550  0213                     	;# 
  2551  0214                     	;# 
  2552  0214                     	;# 
  2553  0215                     	;# 
  2554  0215                     	;# 
  2555  0216                     	;# 
  2556  0216                     	;# 
  2557  0217                     	;# 
  2558  0217                     	;# 
  2559  0218                     	;# 
  2560  0219                     	;# 
  2561  021A                     	;# 
  2562  021A                     	;# 
  2563  021B                     	;# 
  2564  021B                     	;# 
  2565  021C                     	;# 
  2566  021C                     	;# 
  2567  021D                     	;# 
  2568  021D                     	;# 
  2569  021E                     	;# 
  2570  021F                     	;# 
  2571  028C                     	;# 
  2572  028C                     	;# 
  2573  028D                     	;# 
  2574  028D                     	;# 
  2575  028E                     	;# 
  2576  028F                     	;# 
  2577  0290                     	;# 
  2578  0291                     	;# 
  2579  0292                     	;# 
  2580  0292                     	;# 
  2581  0293                     	;# 
  2582  0293                     	;# 
  2583  0294                     	;# 
  2584  0295                     	;# 
  2585  0296                     	;# 
  2586  0297                     	;# 
  2587  0298                     	;# 
  2588  0298                     	;# 
  2589  0299                     	;# 
  2590  0299                     	;# 
  2591  029A                     	;# 
  2592  029B                     	;# 
  2593  029C                     	;# 
  2594  029D                     	;# 
  2595  029F                     	;# 
  2596  030C                     	;# 
  2597  030C                     	;# 
  2598  030D                     	;# 
  2599  030E                     	;# 
  2600  030F                     	;# 
  2601  0310                     	;# 
  2602  0310                     	;# 
  2603  0311                     	;# 
  2604  0312                     	;# 
  2605  0313                     	;# 
  2606  0314                     	;# 
  2607  0314                     	;# 
  2608  0315                     	;# 
  2609  0316                     	;# 
  2610  0317                     	;# 
  2611  0318                     	;# 
  2612  0318                     	;# 
  2613  0319                     	;# 
  2614  031A                     	;# 
  2615  031B                     	;# 
  2616  038C                     	;# 
  2617  038C                     	;# 
  2618  038D                     	;# 
  2619  038E                     	;# 
  2620  0390                     	;# 
  2621  0390                     	;# 
  2622  0391                     	;# 
  2623  0392                     	;# 
  2624  048C                     	;# 
  2625  048C                     	;# 
  2626  048D                     	;# 
  2627  048E                     	;# 
  2628  048F                     	;# 
  2629  048F                     	;# 
  2630  0490                     	;# 
  2631  0491                     	;# 
  2632  0492                     	;# 
  2633  0492                     	;# 
  2634  0493                     	;# 
  2635  0494                     	;# 
  2636  0495                     	;# 
  2637  0495                     	;# 
  2638  0496                     	;# 
  2639  0497                     	;# 
  2640  0498                     	;# 
  2641  0499                     	;# 
  2642  049A                     	;# 
  2643  049B                     	;# 
  2644  049C                     	;# 
  2645  049D                     	;# 
  2646  058C                     	;# 
  2647  058C                     	;# 
  2648  058D                     	;# 
  2649  058E                     	;# 
  2650  058F                     	;# 
  2651  058F                     	;# 
  2652  0590                     	;# 
  2653  0591                     	;# 
  2654  0592                     	;# 
  2655  0593                     	;# 
  2656  059C                     	;# 
  2657  059C                     	;# 
  2658  059D                     	;# 
  2659  059D                     	;# 
  2660  059E                     	;# 
  2661  059F                     	;# 
  2662  060C                     	;# 
  2663  060C                     	;# 
  2664  060D                     	;# 
  2665  060D                     	;# 
  2666  060E                     	;# 
  2667  060F                     	;# 
  2668  0610                     	;# 
  2669  0611                     	;# 
  2670  0612                     	;# 
  2671  0613                     	;# 
  2672  0614                     	;# 
  2673  0616                     	;# 
  2674  0616                     	;# 
  2675  0617                     	;# 
  2676  0617                     	;# 
  2677  0618                     	;# 
  2678  0619                     	;# 
  2679  061A                     	;# 
  2680  061B                     	;# 
  2681  061C                     	;# 
  2682  061D                     	;# 
  2683  061E                     	;# 
  2684  070C                     	;# 
  2685  070D                     	;# 
  2686  070E                     	;# 
  2687  070F                     	;# 
  2688  0710                     	;# 
  2689  0711                     	;# 
  2690  0712                     	;# 
  2691  0713                     	;# 
  2692  0714                     	;# 
  2693  0716                     	;# 
  2694  0717                     	;# 
  2695  0718                     	;# 
  2696  0719                     	;# 
  2697  071A                     	;# 
  2698  071B                     	;# 
  2699  071C                     	;# 
  2700  071D                     	;# 
  2701  071E                     	;# 
  2702  0796                     	;# 
  2703  0797                     	;# 
  2704  0798                     	;# 
  2705  0799                     	;# 
  2706  079A                     	;# 
  2707  079B                     	;# 
  2708  079C                     	;# 
  2709  079D                     	;# 
  2710  080C                     	;# 
  2711  080D                     	;# 
  2712  080E                     	;# 
  2713  080F                     	;# 
  2714  0810                     	;# 
  2715  0811                     	;# 
  2716  0812                     	;# 
  2717  0813                     	;# 
  2718  0814                     	;# 
  2719  081A                     	;# 
  2720  081A                     	;# 
  2721  081B                     	;# 
  2722  081C                     	;# 
  2723  081C                     	;# 
  2724  081D                     	;# 
  2725  081E                     	;# 
  2726  081F                     	;# 
  2727  088C                     	;# 
  2728  088D                     	;# 
  2729  088E                     	;# 
  2730  088F                     	;# 
  2731  0890                     	;# 
  2732  0891                     	;# 
  2733  0892                     	;# 
  2734  0893                     	;# 
  2735  0895                     	;# 
  2736  0896                     	;# 
  2737  0897                     	;# 
  2738  0898                     	;# 
  2739  0899                     	;# 
  2740  089A                     	;# 
  2741  089B                     	;# 
  2742  090C                     	;# 
  2743  090E                     	;# 
  2744  090F                     	;# 
  2745  091F                     	;# 
  2746  098F                     	;# 
  2747  098F                     	;# 
  2748  0990                     	;# 
  2749  0991                     	;# 
  2750  0992                     	;# 
  2751  0993                     	;# 
  2752  0994                     	;# 
  2753  0995                     	;# 
  2754  0996                     	;# 
  2755  0997                     	;# 
  2756  1E0F                     	;# 
  2757  1E10                     	;# 
  2758  1E11                     	;# 
  2759  1E12                     	;# 
  2760  1E13                     	;# 
  2761  1E14                     	;# 
  2762  1E15                     	;# 
  2763  1E16                     	;# 
  2764  1E17                     	;# 
  2765  1E18                     	;# 
  2766  1E19                     	;# 
  2767  1E1A                     	;# 
  2768  1E1B                     	;# 
  2769  1E1C                     	;# 
  2770  1E1D                     	;# 
  2771  1E1E                     	;# 
  2772  1E1F                     	;# 
  2773  1E20                     	;# 
  2774  1E21                     	;# 
  2775  1E22                     	;# 
  2776  1E23                     	;# 
  2777  1E24                     	;# 
  2778  1E25                     	;# 
  2779  1E26                     	;# 
  2780  1E27                     	;# 
  2781  1E28                     	;# 
  2782  1E29                     	;# 
  2783  1E2A                     	;# 
  2784  1E2B                     	;# 
  2785  1E2C                     	;# 
  2786  1E2D                     	;# 
  2787  1E2E                     	;# 
  2788  1E2F                     	;# 
  2789  1E30                     	;# 
  2790  1E31                     	;# 
  2791  1E32                     	;# 
  2792  1E33                     	;# 
  2793  1E34                     	;# 
  2794  1E35                     	;# 
  2795  1E36                     	;# 
  2796  1E37                     	;# 
  2797  1E8F                     	;# 
  2798  1E90                     	;# 
  2799  1E91                     	;# 
  2800  1E92                     	;# 
  2801  1E93                     	;# 
  2802  1E94                     	;# 
  2803  1E95                     	;# 
  2804  1E96                     	;# 
  2805  1E97                     	;# 
  2806  1E9C                     	;# 
  2807  1E9D                     	;# 
  2808  1E9E                     	;# 
  2809  1EA1                     	;# 
  2810  1EA2                     	;# 
  2811  1EA3                     	;# 
  2812  1EA4                     	;# 
  2813  1EA9                     	;# 
  2814  1EAA                     	;# 
  2815  1EB1                     	;# 
  2816  1EB2                     	;# 
  2817  1EB8                     	;# 
  2818  1EB9                     	;# 
  2819  1EBA                     	;# 
  2820  1EBB                     	;# 
  2821  1EBC                     	;# 
  2822  1EBD                     	;# 
  2823  1EBE                     	;# 
  2824  1EC3                     	;# 
  2825  1EC5                     	;# 
  2826  1EC6                     	;# 
  2827  1EC7                     	;# 
  2828  1EC8                     	;# 
  2829  1EC9                     	;# 
  2830  1ECA                     	;# 
  2831  1ECB                     	;# 
  2832  1ECB                     	;# 
  2833  1ECB                     	;# 
  2834  1ECC                     	;# 
  2835  1ECC                     	;# 
  2836  1ECC                     	;# 
  2837  1F10                     	;# 
  2838  1F11                     	;# 
  2839  1F12                     	;# 
  2840  1F14                     	;# 
  2841  1F15                     	;# 
  2842  1F1C                     	;# 
  2843  1F1D                     	;# 
  2844  1F1E                     	;# 
  2845  1F1F                     	;# 
  2846  1F20                     	;# 
  2847  1F21                     	;# 
  2848  1F22                     	;# 
  2849  1F23                     	;# 
  2850  1F24                     	;# 
  2851  1F25                     	;# 
  2852  1F26                     	;# 
  2853  1F27                     	;# 
  2854  1F38                     	;# 
  2855  1F39                     	;# 
  2856  1F3A                     	;# 
  2857  1F3B                     	;# 
  2858  1F3C                     	;# 
  2859  1F3D                     	;# 
  2860  1F3E                     	;# 
  2861  1F3F                     	;# 
  2862  1F43                     	;# 
  2863  1F44                     	;# 
  2864  1F45                     	;# 
  2865  1F46                     	;# 
  2866  1F47                     	;# 
  2867  1F48                     	;# 
  2868  1F49                     	;# 
  2869  1F4A                     	;# 
  2870  1F4E                     	;# 
  2871  1F4F                     	;# 
  2872  1F50                     	;# 
  2873  1F51                     	;# 
  2874  1F52                     	;# 
  2875  1F53                     	;# 
  2876  1F54                     	;# 
  2877  1F55                     	;# 
  2878  1FE4                     	;# 
  2879  1FE5                     	;# 
  2880  1FE6                     	;# 
  2881  1FE7                     	;# 
  2882  1FE8                     	;# 
  2883  1FE8                     	;# 
  2884  1FE9                     	;# 
  2885  1FEA                     	;# 
  2886  1FEB                     	;# 
  2887  1FED                     	;# 
  2888  1FEE                     	;# 
  2889  1FEF                     	;# 
  2890  0000                     	;# 
  2891  0001                     	;# 
  2892  0002                     	;# 
  2893  0003                     	;# 
  2894  0004                     	;# 
  2895  0005                     	;# 
  2896  0006                     	;# 
  2897  0007                     	;# 
  2898  0008                     	;# 
  2899  0009                     	;# 
  2900  000A                     	;# 
  2901  000B                     	;# 
  2902  000C                     	;# 
  2903  000D                     	;# 
  2904  000E                     	;# 
  2905  0012                     	;# 
  2906  0013                     	;# 
  2907  0014                     	;# 
  2908  0018                     	;# 
  2909  0019                     	;# 
  2910  001A                     	;# 
  2911  008C                     	;# 
  2912  008C                     	;# 
  2913  008D                     	;# 
  2914  008E                     	;# 
  2915  008E                     	;# 
  2916  008F                     	;# 
  2917  0090                     	;# 
  2918  0090                     	;# 
  2919  0091                     	;# 
  2920  0092                     	;# 
  2921  0092                     	;# 
  2922  0093                     	;# 
  2923  0094                     	;# 
  2924  0094                     	;# 
  2925  0095                     	;# 
  2926  0096                     	;# 
  2927  0096                     	;# 
  2928  0097                     	;# 
  2929  0098                     	;# 
  2930  0099                     	;# 
  2931  009A                     	;# 
  2932  009B                     	;# 
  2933  009B                     	;# 
  2934  009C                     	;# 
  2935  009D                     	;# 
  2936  009D                     	;# 
  2937  009E                     	;# 
  2938  009F                     	;# 
  2939  010C                     	;# 
  2940  010C                     	;# 
  2941  010D                     	;# 
  2942  010E                     	;# 
  2943  010F                     	;# 
  2944  010F                     	;# 
  2945  0110                     	;# 
  2946  0111                     	;# 
  2947  0112                     	;# 
  2948  0113                     	;# 
  2949  0114                     	;# 
  2950  0115                     	;# 
  2951  0116                     	;# 
  2952  0117                     	;# 
  2953  0118                     	;# 
  2954  0119                     	;# 
  2955  0119                     	;# 
  2956  0119                     	;# 
  2957  011A                     	;# 
  2958  011A                     	;# 
  2959  011A                     	;# 
  2960  011B                     	;# 
  2961  011B                     	;# 
  2962  011B                     	;# 
  2963  011B                     	;# 
  2964  011B                     	;# 
  2965  011C                     	;# 
  2966  011C                     	;# 
  2967  011C                     	;# 
  2968  011D                     	;# 
  2969  011D                     	;# 
  2970  011D                     	;# 
  2971  011E                     	;# 
  2972  011E                     	;# 
  2973  011E                     	;# 
  2974  011F                     	;# 
  2975  011F                     	;# 
  2976  011F                     	;# 
  2977  011F                     	;# 
  2978  011F                     	;# 
  2979  018C                     	;# 
  2980  018D                     	;# 
  2981  018E                     	;# 
  2982  018F                     	;# 
  2983  0190                     	;# 
  2984  0191                     	;# 
  2985  0192                     	;# 
  2986  0196                     	;# 
  2987  0197                     	;# 
  2988  0198                     	;# 
  2989  0199                     	;# 
  2990  019A                     	;# 
  2991  019B                     	;# 
  2992  019C                     	;# 
  2993  020C                     	;# 
  2994  020D                     	;# 
  2995  020E                     	;# 
  2996  020E                     	;# 
  2997  020F                     	;# 
  2998  020F                     	;# 
  2999  0210                     	;# 
  3000  0210                     	;# 
  3001  0211                     	;# 
  3002  0211                     	;# 
  3003  0212                     	;# 
  3004  0213                     	;# 
  3005  0214                     	;# 
  3006  0214                     	;# 
  3007  0215                     	;# 
  3008  0215                     	;# 
  3009  0216                     	;# 
  3010  0216                     	;# 
  3011  0217                     	;# 
  3012  0217                     	;# 
  3013  0218                     	;# 
  3014  0219                     	;# 
  3015  021A                     	;# 
  3016  021A                     	;# 
  3017  021B                     	;# 
  3018  021B                     	;# 
  3019  021C                     	;# 
  3020  021C                     	;# 
  3021  021D                     	;# 
  3022  021D                     	;# 
  3023  021E                     	;# 
  3024  021F                     	;# 
  3025  028C                     	;# 
  3026  028C                     	;# 
  3027  028D                     	;# 
  3028  028D                     	;# 
  3029  028E                     	;# 
  3030  028F                     	;# 
  3031  0290                     	;# 
  3032  0291                     	;# 
  3033  0292                     	;# 
  3034  0292                     	;# 
  3035  0293                     	;# 
  3036  0293                     	;# 
  3037  0294                     	;# 
  3038  0295                     	;# 
  3039  0296                     	;# 
  3040  0297                     	;# 
  3041  0298                     	;# 
  3042  0298                     	;# 
  3043  0299                     	;# 
  3044  0299                     	;# 
  3045  029A                     	;# 
  3046  029B                     	;# 
  3047  029C                     	;# 
  3048  029D                     	;# 
  3049  029F                     	;# 
  3050  030C                     	;# 
  3051  030C                     	;# 
  3052  030D                     	;# 
  3053  030E                     	;# 
  3054  030F                     	;# 
  3055  0310                     	;# 
  3056  0310                     	;# 
  3057  0311                     	;# 
  3058  0312                     	;# 
  3059  0313                     	;# 
  3060  0314                     	;# 
  3061  0314                     	;# 
  3062  0315                     	;# 
  3063  0316                     	;# 
  3064  0317                     	;# 
  3065  0318                     	;# 
  3066  0318                     	;# 
  3067  0319                     	;# 
  3068  031A                     	;# 
  3069  031B                     	;# 
  3070  038C                     	;# 
  3071  038C                     	;# 
  3072  038D                     	;# 
  3073  038E                     	;# 
  3074  0390                     	;# 
  3075  0390                     	;# 
  3076  0391                     	;# 
  3077  0392                     	;# 
  3078  048C                     	;# 
  3079  048C                     	;# 
  3080  048D                     	;# 
  3081  048E                     	;# 
  3082  048F                     	;# 
  3083  048F                     	;# 
  3084  0490                     	;# 
  3085  0491                     	;# 
  3086  0492                     	;# 
  3087  0492                     	;# 
  3088  0493                     	;# 
  3089  0494                     	;# 
  3090  0495                     	;# 
  3091  0495                     	;# 
  3092  0496                     	;# 
  3093  0497                     	;# 
  3094  0498                     	;# 
  3095  0499                     	;# 
  3096  049A                     	;# 
  3097  049B                     	;# 
  3098  049C                     	;# 
  3099  049D                     	;# 
  3100  058C                     	;# 
  3101  058C                     	;# 
  3102  058D                     	;# 
  3103  058E                     	;# 
  3104  058F                     	;# 
  3105  058F                     	;# 
  3106  0590                     	;# 
  3107  0591                     	;# 
  3108  0592                     	;# 
  3109  0593                     	;# 
  3110  059C                     	;# 
  3111  059C                     	;# 
  3112  059D                     	;# 
  3113  059D                     	;# 
  3114  059E                     	;# 
  3115  059F                     	;# 
  3116  060C                     	;# 
  3117  060C                     	;# 
  3118  060D                     	;# 
  3119  060D                     	;# 
  3120  060E                     	;# 
  3121  060F                     	;# 
  3122  0610                     	;# 
  3123  0611                     	;# 
  3124  0612                     	;# 
  3125  0613                     	;# 
  3126  0614                     	;# 
  3127  0616                     	;# 
  3128  0616                     	;# 
  3129  0617                     	;# 
  3130  0617                     	;# 
  3131  0618                     	;# 
  3132  0619                     	;# 
  3133  061A                     	;# 
  3134  061B                     	;# 
  3135  061C                     	;# 
  3136  061D                     	;# 
  3137  061E                     	;# 
  3138  070C                     	;# 
  3139  070D                     	;# 
  3140  070E                     	;# 
  3141  070F                     	;# 
  3142  0710                     	;# 
  3143  0711                     	;# 
  3144  0712                     	;# 
  3145  0713                     	;# 
  3146  0714                     	;# 
  3147  0716                     	;# 
  3148  0717                     	;# 
  3149  0718                     	;# 
  3150  0719                     	;# 
  3151  071A                     	;# 
  3152  071B                     	;# 
  3153  071C                     	;# 
  3154  071D                     	;# 
  3155  071E                     	;# 
  3156  0796                     	;# 
  3157  0797                     	;# 
  3158  0798                     	;# 
  3159  0799                     	;# 
  3160  079A                     	;# 
  3161  079B                     	;# 
  3162  079C                     	;# 
  3163  079D                     	;# 
  3164  080C                     	;# 
  3165  080D                     	;# 
  3166  080E                     	;# 
  3167  080F                     	;# 
  3168  0810                     	;# 
  3169  0811                     	;# 
  3170  0812                     	;# 
  3171  0813                     	;# 
  3172  0814                     	;# 
  3173  081A                     	;# 
  3174  081A                     	;# 
  3175  081B                     	;# 
  3176  081C                     	;# 
  3177  081C                     	;# 
  3178  081D                     	;# 
  3179  081E                     	;# 
  3180  081F                     	;# 
  3181  088C                     	;# 
  3182  088D                     	;# 
  3183  088E                     	;# 
  3184  088F                     	;# 
  3185  0890                     	;# 
  3186  0891                     	;# 
  3187  0892                     	;# 
  3188  0893                     	;# 
  3189  0895                     	;# 
  3190  0896                     	;# 
  3191  0897                     	;# 
  3192  0898                     	;# 
  3193  0899                     	;# 
  3194  089A                     	;# 
  3195  089B                     	;# 
  3196  090C                     	;# 
  3197  090E                     	;# 
  3198  090F                     	;# 
  3199  091F                     	;# 
  3200  098F                     	;# 
  3201  098F                     	;# 
  3202  0990                     	;# 
  3203  0991                     	;# 
  3204  0992                     	;# 
  3205  0993                     	;# 
  3206  0994                     	;# 
  3207  0995                     	;# 
  3208  0996                     	;# 
  3209  0997                     	;# 
  3210  1E0F                     	;# 
  3211  1E10                     	;# 
  3212  1E11                     	;# 
  3213  1E12                     	;# 
  3214  1E13                     	;# 
  3215  1E14                     	;# 
  3216  1E15                     	;# 
  3217  1E16                     	;# 
  3218  1E17                     	;# 
  3219  1E18                     	;# 
  3220  1E19                     	;# 
  3221  1E1A                     	;# 
  3222  1E1B                     	;# 
  3223  1E1C                     	;# 
  3224  1E1D                     	;# 
  3225  1E1E                     	;# 
  3226  1E1F                     	;# 
  3227  1E20                     	;# 
  3228  1E21                     	;# 
  3229  1E22                     	;# 
  3230  1E23                     	;# 
  3231  1E24                     	;# 
  3232  1E25                     	;# 
  3233  1E26                     	;# 
  3234  1E27                     	;# 
  3235  1E28                     	;# 
  3236  1E29                     	;# 
  3237  1E2A                     	;# 
  3238  1E2B                     	;# 
  3239  1E2C                     	;# 
  3240  1E2D                     	;# 
  3241  1E2E                     	;# 
  3242  1E2F                     	;# 
  3243  1E30                     	;# 
  3244  1E31                     	;# 
  3245  1E32                     	;# 
  3246  1E33                     	;# 
  3247  1E34                     	;# 
  3248  1E35                     	;# 
  3249  1E36                     	;# 
  3250  1E37                     	;# 
  3251  1E8F                     	;# 
  3252  1E90                     	;# 
  3253  1E91                     	;# 
  3254  1E92                     	;# 
  3255  1E93                     	;# 
  3256  1E94                     	;# 
  3257  1E95                     	;# 
  3258  1E96                     	;# 
  3259  1E97                     	;# 
  3260  1E9C                     	;# 
  3261  1E9D                     	;# 
  3262  1E9E                     	;# 
  3263  1EA1                     	;# 
  3264  1EA2                     	;# 
  3265  1EA3                     	;# 
  3266  1EA4                     	;# 
  3267  1EA9                     	;# 
  3268  1EAA                     	;# 
  3269  1EB1                     	;# 
  3270  1EB2                     	;# 
  3271  1EB8                     	;# 
  3272  1EB9                     	;# 
  3273  1EBA                     	;# 
  3274  1EBB                     	;# 
  3275  1EBC                     	;# 
  3276  1EBD                     	;# 
  3277  1EBE                     	;# 
  3278  1EC3                     	;# 
  3279  1EC5                     	;# 
  3280  1EC6                     	;# 
  3281  1EC7                     	;# 
  3282  1EC8                     	;# 
  3283  1EC9                     	;# 
  3284  1ECA                     	;# 
  3285  1ECB                     	;# 
  3286  1ECB                     	;# 
  3287  1ECB                     	;# 
  3288  1ECC                     	;# 
  3289  1ECC                     	;# 
  3290  1ECC                     	;# 
  3291  1F10                     	;# 
  3292  1F11                     	;# 
  3293  1F12                     	;# 
  3294  1F14                     	;# 
  3295  1F15                     	;# 
  3296  1F1C                     	;# 
  3297  1F1D                     	;# 
  3298  1F1E                     	;# 
  3299  1F1F                     	;# 
  3300  1F20                     	;# 
  3301  1F21                     	;# 
  3302  1F22                     	;# 
  3303  1F23                     	;# 
  3304  1F24                     	;# 
  3305  1F25                     	;# 
  3306  1F26                     	;# 
  3307  1F27                     	;# 
  3308  1F38                     	;# 
  3309  1F39                     	;# 
  3310  1F3A                     	;# 
  3311  1F3B                     	;# 
  3312  1F3C                     	;# 
  3313  1F3D                     	;# 
  3314  1F3E                     	;# 
  3315  1F3F                     	;# 
  3316  1F43                     	;# 
  3317  1F44                     	;# 
  3318  1F45                     	;# 
  3319  1F46                     	;# 
  3320  1F47                     	;# 
  3321  1F48                     	;# 
  3322  1F49                     	;# 
  3323  1F4A                     	;# 
  3324  1F4E                     	;# 
  3325  1F4F                     	;# 
  3326  1F50                     	;# 
  3327  1F51                     	;# 
  3328  1F52                     	;# 
  3329  1F53                     	;# 
  3330  1F54                     	;# 
  3331  1F55                     	;# 
  3332  1FE4                     	;# 
  3333  1FE5                     	;# 
  3334  1FE6                     	;# 
  3335  1FE7                     	;# 
  3336  1FE8                     	;# 
  3337  1FE8                     	;# 
  3338  1FE9                     	;# 
  3339  1FEA                     	;# 
  3340  1FEB                     	;# 
  3341  1FED                     	;# 
  3342  1FEE                     	;# 
  3343  1FEF                     	;# 
  3344  0000                     	;# 
  3345  0001                     	;# 
  3346  0002                     	;# 
  3347  0003                     	;# 
  3348  0004                     	;# 
  3349  0005                     	;# 
  3350  0006                     	;# 
  3351  0007                     	;# 
  3352  0008                     	;# 
  3353  0009                     	;# 
  3354  000A                     	;# 
  3355  000B                     	;# 
  3356  000C                     	;# 
  3357  000D                     	;# 
  3358  000E                     	;# 
  3359  0012                     	;# 
  3360  0013                     	;# 
  3361  0014                     	;# 
  3362  0018                     	;# 
  3363  0019                     	;# 
  3364  001A                     	;# 
  3365  008C                     	;# 
  3366  008C                     	;# 
  3367  008D                     	;# 
  3368  008E                     	;# 
  3369  008E                     	;# 
  3370  008F                     	;# 
  3371  0090                     	;# 
  3372  0090                     	;# 
  3373  0091                     	;# 
  3374  0092                     	;# 
  3375  0092                     	;# 
  3376  0093                     	;# 
  3377  0094                     	;# 
  3378  0094                     	;# 
  3379  0095                     	;# 
  3380  0096                     	;# 
  3381  0096                     	;# 
  3382  0097                     	;# 
  3383  0098                     	;# 
  3384  0099                     	;# 
  3385  009A                     	;# 
  3386  009B                     	;# 
  3387  009B                     	;# 
  3388  009C                     	;# 
  3389  009D                     	;# 
  3390  009D                     	;# 
  3391  009E                     	;# 
  3392  009F                     	;# 
  3393  010C                     	;# 
  3394  010C                     	;# 
  3395  010D                     	;# 
  3396  010E                     	;# 
  3397  010F                     	;# 
  3398  010F                     	;# 
  3399  0110                     	;# 
  3400  0111                     	;# 
  3401  0112                     	;# 
  3402  0113                     	;# 
  3403  0114                     	;# 
  3404  0115                     	;# 
  3405  0116                     	;# 
  3406  0117                     	;# 
  3407  0118                     	;# 
  3408  0119                     	;# 
  3409  0119                     	;# 
  3410  0119                     	;# 
  3411  011A                     	;# 
  3412  011A                     	;# 
  3413  011A                     	;# 
  3414  011B                     	;# 
  3415  011B                     	;# 
  3416  011B                     	;# 
  3417  011B                     	;# 
  3418  011B                     	;# 
  3419  011C                     	;# 
  3420  011C                     	;# 
  3421  011C                     	;# 
  3422  011D                     	;# 
  3423  011D                     	;# 
  3424  011D                     	;# 
  3425  011E                     	;# 
  3426  011E                     	;# 
  3427  011E                     	;# 
  3428  011F                     	;# 
  3429  011F                     	;# 
  3430  011F                     	;# 
  3431  011F                     	;# 
  3432  011F                     	;# 
  3433  018C                     	;# 
  3434  018D                     	;# 
  3435  018E                     	;# 
  3436  018F                     	;# 
  3437  0190                     	;# 
  3438  0191                     	;# 
  3439  0192                     	;# 
  3440  0196                     	;# 
  3441  0197                     	;# 
  3442  0198                     	;# 
  3443  0199                     	;# 
  3444  019A                     	;# 
  3445  019B                     	;# 
  3446  019C                     	;# 
  3447  020C                     	;# 
  3448  020D                     	;# 
  3449  020E                     	;# 
  3450  020E                     	;# 
  3451  020F                     	;# 
  3452  020F                     	;# 
  3453  0210                     	;# 
  3454  0210                     	;# 
  3455  0211                     	;# 
  3456  0211                     	;# 
  3457  0212                     	;# 
  3458  0213                     	;# 
  3459  0214                     	;# 
  3460  0214                     	;# 
  3461  0215                     	;# 
  3462  0215                     	;# 
  3463  0216                     	;# 
  3464  0216                     	;# 
  3465  0217                     	;# 
  3466  0217                     	;# 
  3467  0218                     	;# 
  3468  0219                     	;# 
  3469  021A                     	;# 
  3470  021A                     	;# 
  3471  021B                     	;# 
  3472  021B                     	;# 
  3473  021C                     	;# 
  3474  021C                     	;# 
  3475  021D                     	;# 
  3476  021D                     	;# 
  3477  021E                     	;# 
  3478  021F                     	;# 
  3479  028C                     	;# 
  3480  028C                     	;# 
  3481  028D                     	;# 
  3482  028D                     	;# 
  3483  028E                     	;# 
  3484  028F                     	;# 
  3485  0290                     	;# 
  3486  0291                     	;# 
  3487  0292                     	;# 
  3488  0292                     	;# 
  3489  0293                     	;# 
  3490  0293                     	;# 
  3491  0294                     	;# 
  3492  0295                     	;# 
  3493  0296                     	;# 
  3494  0297                     	;# 
  3495  0298                     	;# 
  3496  0298                     	;# 
  3497  0299                     	;# 
  3498  0299                     	;# 
  3499  029A                     	;# 
  3500  029B                     	;# 
  3501  029C                     	;# 
  3502  029D                     	;# 
  3503  029F                     	;# 
  3504  030C                     	;# 
  3505  030C                     	;# 
  3506  030D                     	;# 
  3507  030E                     	;# 
  3508  030F                     	;# 
  3509  0310                     	;# 
  3510  0310                     	;# 
  3511  0311                     	;# 
  3512  0312                     	;# 
  3513  0313                     	;# 
  3514  0314                     	;# 
  3515  0314                     	;# 
  3516  0315                     	;# 
  3517  0316                     	;# 
  3518  0317                     	;# 
  3519  0318                     	;# 
  3520  0318                     	;# 
  3521  0319                     	;# 
  3522  031A                     	;# 
  3523  031B                     	;# 
  3524  038C                     	;# 
  3525  038C                     	;# 
  3526  038D                     	;# 
  3527  038E                     	;# 
  3528  0390                     	;# 
  3529  0390                     	;# 
  3530  0391                     	;# 
  3531  0392                     	;# 
  3532  048C                     	;# 
  3533  048C                     	;# 
  3534  048D                     	;# 
  3535  048E                     	;# 
  3536  048F                     	;# 
  3537  048F                     	;# 
  3538  0490                     	;# 
  3539  0491                     	;# 
  3540  0492                     	;# 
  3541  0492                     	;# 
  3542  0493                     	;# 
  3543  0494                     	;# 
  3544  0495                     	;# 
  3545  0495                     	;# 
  3546  0496                     	;# 
  3547  0497                     	;# 
  3548  0498                     	;# 
  3549  0499                     	;# 
  3550  049A                     	;# 
  3551  049B                     	;# 
  3552  049C                     	;# 
  3553  049D                     	;# 
  3554  058C                     	;# 
  3555  058C                     	;# 
  3556  058D                     	;# 
  3557  058E                     	;# 
  3558  058F                     	;# 
  3559  058F                     	;# 
  3560  0590                     	;# 
  3561  0591                     	;# 
  3562  0592                     	;# 
  3563  0593                     	;# 
  3564  059C                     	;# 
  3565  059C                     	;# 
  3566  059D                     	;# 
  3567  059D                     	;# 
  3568  059E                     	;# 
  3569  059F                     	;# 
  3570  060C                     	;# 
  3571  060C                     	;# 
  3572  060D                     	;# 
  3573  060D                     	;# 
  3574  060E                     	;# 
  3575  060F                     	;# 
  3576  0610                     	;# 
  3577  0611                     	;# 
  3578  0612                     	;# 
  3579  0613                     	;# 
  3580  0614                     	;# 
  3581  0616                     	;# 
  3582  0616                     	;# 
  3583  0617                     	;# 
  3584  0617                     	;# 
  3585  0618                     	;# 
  3586  0619                     	;# 
  3587  061A                     	;# 
  3588  061B                     	;# 
  3589  061C                     	;# 
  3590  061D                     	;# 
  3591  061E                     	;# 
  3592  070C                     	;# 
  3593  070D                     	;# 
  3594  070E                     	;# 
  3595  070F                     	;# 
  3596  0710                     	;# 
  3597  0711                     	;# 
  3598  0712                     	;# 
  3599  0713                     	;# 
  3600  0714                     	;# 
  3601  0716                     	;# 
  3602  0717                     	;# 
  3603  0718                     	;# 
  3604  0719                     	;# 
  3605  071A                     	;# 
  3606  071B                     	;# 
  3607  071C                     	;# 
  3608  071D                     	;# 
  3609  071E                     	;# 
  3610  0796                     	;# 
  3611  0797                     	;# 
  3612  0798                     	;# 
  3613  0799                     	;# 
  3614  079A                     	;# 
  3615  079B                     	;# 
  3616  079C                     	;# 
  3617  079D                     	;# 
  3618  080C                     	;# 
  3619  080D                     	;# 
  3620  080E                     	;# 
  3621  080F                     	;# 
  3622  0810                     	;# 
  3623  0811                     	;# 
  3624  0812                     	;# 
  3625  0813                     	;# 
  3626  0814                     	;# 
  3627  081A                     	;# 
  3628  081A                     	;# 
  3629  081B                     	;# 
  3630  081C                     	;# 
  3631  081C                     	;# 
  3632  081D                     	;# 
  3633  081E                     	;# 
  3634  081F                     	;# 
  3635  088C                     	;# 
  3636  088D                     	;# 
  3637  088E                     	;# 
  3638  088F                     	;# 
  3639  0890                     	;# 
  3640  0891                     	;# 
  3641  0892                     	;# 
  3642  0893                     	;# 
  3643  0895                     	;# 
  3644  0896                     	;# 
  3645  0897                     	;# 
  3646  0898                     	;# 
  3647  0899                     	;# 
  3648  089A                     	;# 
  3649  089B                     	;# 
  3650  090C                     	;# 
  3651  090E                     	;# 
  3652  090F                     	;# 
  3653  091F                     	;# 
  3654  098F                     	;# 
  3655  098F                     	;# 
  3656  0990                     	;# 
  3657  0991                     	;# 
  3658  0992                     	;# 
  3659  0993                     	;# 
  3660  0994                     	;# 
  3661  0995                     	;# 
  3662  0996                     	;# 
  3663  0997                     	;# 
  3664  1E0F                     	;# 
  3665  1E10                     	;# 
  3666  1E11                     	;# 
  3667  1E12                     	;# 
  3668  1E13                     	;# 
  3669  1E14                     	;# 
  3670  1E15                     	;# 
  3671  1E16                     	;# 
  3672  1E17                     	;# 
  3673  1E18                     	;# 
  3674  1E19                     	;# 
  3675  1E1A                     	;# 
  3676  1E1B                     	;# 
  3677  1E1C                     	;# 
  3678  1E1D                     	;# 
  3679  1E1E                     	;# 
  3680  1E1F                     	;# 
  3681  1E20                     	;# 
  3682  1E21                     	;# 
  3683  1E22                     	;# 
  3684  1E23                     	;# 
  3685  1E24                     	;# 
  3686  1E25                     	;# 
  3687  1E26                     	;# 
  3688  1E27                     	;# 
  3689  1E28                     	;# 
  3690  1E29                     	;# 
  3691  1E2A                     	;# 
  3692  1E2B                     	;# 
  3693  1E2C                     	;# 
  3694  1E2D                     	;# 
  3695  1E2E                     	;# 
  3696  1E2F                     	;# 
  3697  1E30                     	;# 
  3698  1E31                     	;# 
  3699  1E32                     	;# 
  3700  1E33                     	;# 
  3701  1E34                     	;# 
  3702  1E35                     	;# 
  3703  1E36                     	;# 
  3704  1E37                     	;# 
  3705  1E8F                     	;# 
  3706  1E90                     	;# 
  3707  1E91                     	;# 
  3708  1E92                     	;# 
  3709  1E93                     	;# 
  3710  1E94                     	;# 
  3711  1E95                     	;# 
  3712  1E96                     	;# 
  3713  1E97                     	;# 
  3714  1E9C                     	;# 
  3715  1E9D                     	;# 
  3716  1E9E                     	;# 
  3717  1EA1                     	;# 
  3718  1EA2                     	;# 
  3719  1EA3                     	;# 
  3720  1EA4                     	;# 
  3721  1EA9                     	;# 
  3722  1EAA                     	;# 
  3723  1EB1                     	;# 
  3724  1EB2                     	;# 
  3725  1EB8                     	;# 
  3726  1EB9                     	;# 
  3727  1EBA                     	;# 
  3728  1EBB                     	;# 
  3729  1EBC                     	;# 
  3730  1EBD                     	;# 
  3731  1EBE                     	;# 
  3732  1EC3                     	;# 
  3733  1EC5                     	;# 
  3734  1EC6                     	;# 
  3735  1EC7                     	;# 
  3736  1EC8                     	;# 
  3737  1EC9                     	;# 
  3738  1ECA                     	;# 
  3739  1ECB                     	;# 
  3740  1ECB                     	;# 
  3741  1ECB                     	;# 
  3742  1ECC                     	;# 
  3743  1ECC                     	;# 
  3744  1ECC                     	;# 
  3745  1F10                     	;# 
  3746  1F11                     	;# 
  3747  1F12                     	;# 
  3748  1F14                     	;# 
  3749  1F15                     	;# 
  3750  1F1C                     	;# 
  3751  1F1D                     	;# 
  3752  1F1E                     	;# 
  3753  1F1F                     	;# 
  3754  1F20                     	;# 
  3755  1F21                     	;# 
  3756  1F22                     	;# 
  3757  1F23                     	;# 
  3758  1F24                     	;# 
  3759  1F25                     	;# 
  3760  1F26                     	;# 
  3761  1F27                     	;# 
  3762  1F38                     	;# 
  3763  1F39                     	;# 
  3764  1F3A                     	;# 
  3765  1F3B                     	;# 
  3766  1F3C                     	;# 
  3767  1F3D                     	;# 
  3768  1F3E                     	;# 
  3769  1F3F                     	;# 
  3770  1F43                     	;# 
  3771  1F44                     	;# 
  3772  1F45                     	;# 
  3773  1F46                     	;# 
  3774  1F47                     	;# 
  3775  1F48                     	;# 
  3776  1F49                     	;# 
  3777  1F4A                     	;# 
  3778  1F4E                     	;# 
  3779  1F4F                     	;# 
  3780  1F50                     	;# 
  3781  1F51                     	;# 
  3782  1F52                     	;# 
  3783  1F53                     	;# 
  3784  1F54                     	;# 
  3785  1F55                     	;# 
  3786  1FE4                     	;# 
  3787  1FE5                     	;# 
  3788  1FE6                     	;# 
  3789  1FE7                     	;# 
  3790  1FE8                     	;# 
  3791  1FE8                     	;# 
  3792  1FE9                     	;# 
  3793  1FEA                     	;# 
  3794  1FEB                     	;# 
  3795  1FED                     	;# 
  3796  1FEE                     	;# 
  3797  1FEF                     	;# 
  3798  0000                     	;# 
  3799  0001                     	;# 
  3800  0002                     	;# 
  3801  0003                     	;# 
  3802  0004                     	;# 
  3803  0005                     	;# 
  3804  0006                     	;# 
  3805  0007                     	;# 
  3806  0008                     	;# 
  3807  0009                     	;# 
  3808  000A                     	;# 
  3809  000B                     	;# 
  3810  000C                     	;# 
  3811  000D                     	;# 
  3812  000E                     	;# 
  3813  0012                     	;# 
  3814  0013                     	;# 
  3815  0014                     	;# 
  3816  0018                     	;# 
  3817  0019                     	;# 
  3818  001A                     	;# 
  3819  008C                     	;# 
  3820  008C                     	;# 
  3821  008D                     	;# 
  3822  008E                     	;# 
  3823  008E                     	;# 
  3824  008F                     	;# 
  3825  0090                     	;# 
  3826  0090                     	;# 
  3827  0091                     	;# 
  3828  0092                     	;# 
  3829  0092                     	;# 
  3830  0093                     	;# 
  3831  0094                     	;# 
  3832  0094                     	;# 
  3833  0095                     	;# 
  3834  0096                     	;# 
  3835  0096                     	;# 
  3836  0097                     	;# 
  3837  0098                     	;# 
  3838  0099                     	;# 
  3839  009A                     	;# 
  3840  009B                     	;# 
  3841  009B                     	;# 
  3842  009C                     	;# 
  3843  009D                     	;# 
  3844  009D                     	;# 
  3845  009E                     	;# 
  3846  009F                     	;# 
  3847  010C                     	;# 
  3848  010C                     	;# 
  3849  010D                     	;# 
  3850  010E                     	;# 
  3851  010F                     	;# 
  3852  010F                     	;# 
  3853  0110                     	;# 
  3854  0111                     	;# 
  3855  0112                     	;# 
  3856  0113                     	;# 
  3857  0114                     	;# 
  3858  0115                     	;# 
  3859  0116                     	;# 
  3860  0117                     	;# 
  3861  0118                     	;# 
  3862  0119                     	;# 
  3863  0119                     	;# 
  3864  0119                     	;# 
  3865  011A                     	;# 
  3866  011A                     	;# 
  3867  011A                     	;# 
  3868  011B                     	;# 
  3869  011B                     	;# 
  3870  011B                     	;# 
  3871  011B                     	;# 
  3872  011B                     	;# 
  3873  011C                     	;# 
  3874  011C                     	;# 
  3875  011C                     	;# 
  3876  011D                     	;# 
  3877  011D                     	;# 
  3878  011D                     	;# 
  3879  011E                     	;# 
  3880  011E                     	;# 
  3881  011E                     	;# 
  3882  011F                     	;# 
  3883  011F                     	;# 
  3884  011F                     	;# 
  3885  011F                     	;# 
  3886  011F                     	;# 
  3887  018C                     	;# 
  3888  018D                     	;# 
  3889  018E                     	;# 
  3890  018F                     	;# 
  3891  0190                     	;# 
  3892  0191                     	;# 
  3893  0192                     	;# 
  3894  0196                     	;# 
  3895  0197                     	;# 
  3896  0198                     	;# 
  3897  0199                     	;# 
  3898  019A                     	;# 
  3899  019B                     	;# 
  3900  019C                     	;# 
  3901  020C                     	;# 
  3902  020D                     	;# 
  3903  020E                     	;# 
  3904  020E                     	;# 
  3905  020F                     	;# 
  3906  020F                     	;# 
  3907  0210                     	;# 
  3908  0210                     	;# 
  3909  0211                     	;# 
  3910  0211                     	;# 
  3911  0212                     	;# 
  3912  0213                     	;# 
  3913  0214                     	;# 
  3914  0214                     	;# 
  3915  0215                     	;# 
  3916  0215                     	;# 
  3917  0216                     	;# 
  3918  0216                     	;# 
  3919  0217                     	;# 
  3920  0217                     	;# 
  3921  0218                     	;# 
  3922  0219                     	;# 
  3923  021A                     	;# 
  3924  021A                     	;# 
  3925  021B                     	;# 
  3926  021B                     	;# 
  3927  021C                     	;# 
  3928  021C                     	;# 
  3929  021D                     	;# 
  3930  021D                     	;# 
  3931  021E                     	;# 
  3932  021F                     	;# 
  3933  028C                     	;# 
  3934  028C                     	;# 
  3935  028D                     	;# 
  3936  028D                     	;# 
  3937  028E                     	;# 
  3938  028F                     	;# 
  3939  0290                     	;# 
  3940  0291                     	;# 
  3941  0292                     	;# 
  3942  0292                     	;# 
  3943  0293                     	;# 
  3944  0293                     	;# 
  3945  0294                     	;# 
  3946  0295                     	;# 
  3947  0296                     	;# 
  3948  0297                     	;# 
  3949  0298                     	;# 
  3950  0298                     	;# 
  3951  0299                     	;# 
  3952  0299                     	;# 
  3953  029A                     	;# 
  3954  029B                     	;# 
  3955  029C                     	;# 
  3956  029D                     	;# 
  3957  029F                     	;# 
  3958  030C                     	;# 
  3959  030C                     	;# 
  3960  030D                     	;# 
  3961  030E                     	;# 
  3962  030F                     	;# 
  3963  0310                     	;# 
  3964  0310                     	;# 
  3965  0311                     	;# 
  3966  0312                     	;# 
  3967  0313                     	;# 
  3968  0314                     	;# 
  3969  0314                     	;# 
  3970  0315                     	;# 
  3971  0316                     	;# 
  3972  0317                     	;# 
  3973  0318                     	;# 
  3974  0318                     	;# 
  3975  0319                     	;# 
  3976  031A                     	;# 
  3977  031B                     	;# 
  3978  038C                     	;# 
  3979  038C                     	;# 
  3980  038D                     	;# 
  3981  038E                     	;# 
  3982  0390                     	;# 
  3983  0390                     	;# 
  3984  0391                     	;# 
  3985  0392                     	;# 
  3986  048C                     	;# 
  3987  048C                     	;# 
  3988  048D                     	;# 
  3989  048E                     	;# 
  3990  048F                     	;# 
  3991  048F                     	;# 
  3992  0490                     	;# 
  3993  0491                     	;# 
  3994  0492                     	;# 
  3995  0492                     	;# 
  3996  0493                     	;# 
  3997  0494                     	;# 
  3998  0495                     	;# 
  3999  0495                     	;# 
  4000  0496                     	;# 
  4001  0497                     	;# 
  4002  0498                     	;# 
  4003  0499                     	;# 
  4004  049A                     	;# 
  4005  049B                     	;# 
  4006  049C                     	;# 
  4007  049D                     	;# 
  4008  058C                     	;# 
  4009  058C                     	;# 
  4010  058D                     	;# 
  4011  058E                     	;# 
  4012  058F                     	;# 
  4013  058F                     	;# 
  4014  0590                     	;# 
  4015  0591                     	;# 
  4016  0592                     	;# 
  4017  0593                     	;# 
  4018  059C                     	;# 
  4019  059C                     	;# 
  4020  059D                     	;# 
  4021  059D                     	;# 
  4022  059E                     	;# 
  4023  059F                     	;# 
  4024  060C                     	;# 
  4025  060C                     	;# 
  4026  060D                     	;# 
  4027  060D                     	;# 
  4028  060E                     	;# 
  4029  060F                     	;# 
  4030  0610                     	;# 
  4031  0611                     	;# 
  4032  0612                     	;# 
  4033  0613                     	;# 
  4034  0614                     	;# 
  4035  0616                     	;# 
  4036  0616                     	;# 
  4037  0617                     	;# 
  4038  0617                     	;# 
  4039  0618                     	;# 
  4040  0619                     	;# 
  4041  061A                     	;# 
  4042  061B                     	;# 
  4043  061C                     	;# 
  4044  061D                     	;# 
  4045  061E                     	;# 
  4046  070C                     	;# 
  4047  070D                     	;# 
  4048  070E                     	;# 
  4049  070F                     	;# 
  4050  0710                     	;# 
  4051  0711                     	;# 
  4052  0712                     	;# 
  4053  0713                     	;# 
  4054  0714                     	;# 
  4055  0716                     	;# 
  4056  0717                     	;# 
  4057  0718                     	;# 
  4058  0719                     	;# 
  4059  071A                     	;# 
  4060  071B                     	;# 
  4061  071C                     	;# 
  4062  071D                     	;# 
  4063  071E                     	;# 
  4064  0796                     	;# 
  4065  0797                     	;# 
  4066  0798                     	;# 
  4067  0799                     	;# 
  4068  079A                     	;# 
  4069  079B                     	;# 
  4070  079C                     	;# 
  4071  079D                     	;# 
  4072  080C                     	;# 
  4073  080D                     	;# 
  4074  080E                     	;# 
  4075  080F                     	;# 
  4076  0810                     	;# 
  4077  0811                     	;# 
  4078  0812                     	;# 
  4079  0813                     	;# 
  4080  0814                     	;# 
  4081  081A                     	;# 
  4082  081A                     	;# 
  4083  081B                     	;# 
  4084  081C                     	;# 
  4085  081C                     	;# 
  4086  081D                     	;# 
  4087  081E                     	;# 
  4088  081F                     	;# 
  4089  088C                     	;# 
  4090  088D                     	;# 
  4091  088E                     	;# 
  4092  088F                     	;# 
  4093  0890                     	;# 
  4094  0891                     	;# 
  4095  0892                     	;# 
  4096  0893                     	;# 
  4097  0895                     	;# 
  4098  0896                     	;# 
  4099  0897                     	;# 
  4100  0898                     	;# 
  4101  0899                     	;# 
  4102  089A                     	;# 
  4103  089B                     	;# 
  4104  090C                     	;# 
  4105  090E                     	;# 
  4106  090F                     	;# 
  4107  091F                     	;# 
  4108  098F                     	;# 
  4109  098F                     	;# 
  4110  0990                     	;# 
  4111  0991                     	;# 
  4112  0992                     	;# 
  4113  0993                     	;# 
  4114  0994                     	;# 
  4115  0995                     	;# 
  4116  0996                     	;# 
  4117  0997                     	;# 
  4118  1E0F                     	;# 
  4119  1E10                     	;# 
  4120  1E11                     	;# 
  4121  1E12                     	;# 
  4122  1E13                     	;# 
  4123  1E14                     	;# 
  4124  1E15                     	;# 
  4125  1E16                     	;# 
  4126  1E17                     	;# 
  4127  1E18                     	;# 
  4128  1E19                     	;# 
  4129  1E1A                     	;# 
  4130  1E1B                     	;# 
  4131  1E1C                     	;# 
  4132  1E1D                     	;# 
  4133  1E1E                     	;# 
  4134  1E1F                     	;# 
  4135  1E20                     	;# 
  4136  1E21                     	;# 
  4137  1E22                     	;# 
  4138  1E23                     	;# 
  4139  1E24                     	;# 
  4140  1E25                     	;# 
  4141  1E26                     	;# 
  4142  1E27                     	;# 
  4143  1E28                     	;# 
  4144  1E29                     	;# 
  4145  1E2A                     	;# 
  4146  1E2B                     	;# 
  4147  1E2C                     	;# 
  4148  1E2D                     	;# 
  4149  1E2E                     	;# 
  4150  1E2F                     	;# 
  4151  1E30                     	;# 
  4152  1E31                     	;# 
  4153  1E32                     	;# 
  4154  1E33                     	;# 
  4155  1E34                     	;# 
  4156  1E35                     	;# 
  4157  1E36                     	;# 
  4158  1E37                     	;# 
  4159  1E8F                     	;# 
  4160  1E90                     	;# 
  4161  1E91                     	;# 
  4162  1E92                     	;# 
  4163  1E93                     	;# 
  4164  1E94                     	;# 
  4165  1E95                     	;# 
  4166  1E96                     	;# 
  4167  1E97                     	;# 
  4168  1E9C                     	;# 
  4169  1E9D                     	;# 
  4170  1E9E                     	;# 
  4171  1EA1                     	;# 
  4172  1EA2                     	;# 
  4173  1EA3                     	;# 
  4174  1EA4                     	;# 
  4175  1EA9                     	;# 
  4176  1EAA                     	;# 
  4177  1EB1                     	;# 
  4178  1EB2                     	;# 
  4179  1EB8                     	;# 
  4180  1EB9                     	;# 
  4181  1EBA                     	;# 
  4182  1EBB                     	;# 
  4183  1EBC                     	;# 
  4184  1EBD                     	;# 
  4185  1EBE                     	;# 
  4186  1EC3                     	;# 
  4187  1EC5                     	;# 
  4188  1EC6                     	;# 
  4189  1EC7                     	;# 
  4190  1EC8                     	;# 
  4191  1EC9                     	;# 
  4192  1ECA                     	;# 
  4193  1ECB                     	;# 
  4194  1ECB                     	;# 
  4195  1ECB                     	;# 
  4196  1ECC                     	;# 
  4197  1ECC                     	;# 
  4198  1ECC                     	;# 
  4199  1F10                     	;# 
  4200  1F11                     	;# 
  4201  1F12                     	;# 
  4202  1F14                     	;# 
  4203  1F15                     	;# 
  4204  1F1C                     	;# 
  4205  1F1D                     	;# 
  4206  1F1E                     	;# 
  4207  1F1F                     	;# 
  4208  1F20                     	;# 
  4209  1F21                     	;# 
  4210  1F22                     	;# 
  4211  1F23                     	;# 
  4212  1F24                     	;# 
  4213  1F25                     	;# 
  4214  1F26                     	;# 
  4215  1F27                     	;# 
  4216  1F38                     	;# 
  4217  1F39                     	;# 
  4218  1F3A                     	;# 
  4219  1F3B                     	;# 
  4220  1F3C                     	;# 
  4221  1F3D                     	;# 
  4222  1F3E                     	;# 
  4223  1F3F                     	;# 
  4224  1F43                     	;# 
  4225  1F44                     	;# 
  4226  1F45                     	;# 
  4227  1F46                     	;# 
  4228  1F47                     	;# 
  4229  1F48                     	;# 
  4230  1F49                     	;# 
  4231  1F4A                     	;# 
  4232  1F4E                     	;# 
  4233  1F4F                     	;# 
  4234  1F50                     	;# 
  4235  1F51                     	;# 
  4236  1F52                     	;# 
  4237  1F53                     	;# 
  4238  1F54                     	;# 
  4239  1F55                     	;# 
  4240  1FE4                     	;# 
  4241  1FE5                     	;# 
  4242  1FE6                     	;# 
  4243  1FE7                     	;# 
  4244  1FE8                     	;# 
  4245  1FE8                     	;# 
  4246  1FE9                     	;# 
  4247  1FEA                     	;# 
  4248  1FEB                     	;# 
  4249  1FED                     	;# 
  4250  1FEE                     	;# 
  4251  1FEF                     	;# 
  4252  0000                     	;# 
  4253  0001                     	;# 
  4254  0002                     	;# 
  4255  0003                     	;# 
  4256  0004                     	;# 
  4257  0005                     	;# 
  4258  0006                     	;# 
  4259  0007                     	;# 
  4260  0008                     	;# 
  4261  0009                     	;# 
  4262  000A                     	;# 
  4263  000B                     	;# 
  4264  000C                     	;# 
  4265  000D                     	;# 
  4266  000E                     	;# 
  4267  0012                     	;# 
  4268  0013                     	;# 
  4269  0014                     	;# 
  4270  0018                     	;# 
  4271  0019                     	;# 
  4272  001A                     	;# 
  4273  008C                     	;# 
  4274  008C                     	;# 
  4275  008D                     	;# 
  4276  008E                     	;# 
  4277  008E                     	;# 
  4278  008F                     	;# 
  4279  0090                     	;# 
  4280  0090                     	;# 
  4281  0091                     	;# 
  4282  0092                     	;# 
  4283  0092                     	;# 
  4284  0093                     	;# 
  4285  0094                     	;# 
  4286  0094                     	;# 
  4287  0095                     	;# 
  4288  0096                     	;# 
  4289  0096                     	;# 
  4290  0097                     	;# 
  4291  0098                     	;# 
  4292  0099                     	;# 
  4293  009A                     	;# 
  4294  009B                     	;# 
  4295  009B                     	;# 
  4296  009C                     	;# 
  4297  009D                     	;# 
  4298  009D                     	;# 
  4299  009E                     	;# 
  4300  009F                     	;# 
  4301  010C                     	;# 
  4302  010C                     	;# 
  4303  010D                     	;# 
  4304  010E                     	;# 
  4305  010F                     	;# 
  4306  010F                     	;# 
  4307  0110                     	;# 
  4308  0111                     	;# 
  4309  0112                     	;# 
  4310  0113                     	;# 
  4311  0114                     	;# 
  4312  0115                     	;# 
  4313  0116                     	;# 
  4314  0117                     	;# 
  4315  0118                     	;# 
  4316  0119                     	;# 
  4317  0119                     	;# 
  4318  0119                     	;# 
  4319  011A                     	;# 
  4320  011A                     	;# 
  4321  011A                     	;# 
  4322  011B                     	;# 
  4323  011B                     	;# 
  4324  011B                     	;# 
  4325  011B                     	;# 
  4326  011B                     	;# 
  4327  011C                     	;# 
  4328  011C                     	;# 
  4329  011C                     	;# 
  4330  011D                     	;# 
  4331  011D                     	;# 
  4332  011D                     	;# 
  4333  011E                     	;# 
  4334  011E                     	;# 
  4335  011E                     	;# 
  4336  011F                     	;# 
  4337  011F                     	;# 
  4338  011F                     	;# 
  4339  011F                     	;# 
  4340  011F                     	;# 
  4341  018C                     	;# 
  4342  018D                     	;# 
  4343  018E                     	;# 
  4344  018F                     	;# 
  4345  0190                     	;# 
  4346  0191                     	;# 
  4347  0192                     	;# 
  4348  0196                     	;# 
  4349  0197                     	;# 
  4350  0198                     	;# 
  4351  0199                     	;# 
  4352  019A                     	;# 
  4353  019B                     	;# 
  4354  019C                     	;# 
  4355  020C                     	;# 
  4356  020D                     	;# 
  4357  020E                     	;# 
  4358  020E                     	;# 
  4359  020F                     	;# 
  4360  020F                     	;# 
  4361  0210                     	;# 
  4362  0210                     	;# 
  4363  0211                     	;# 
  4364  0211                     	;# 
  4365  0212                     	;# 
  4366  0213                     	;# 
  4367  0214                     	;# 
  4368  0214                     	;# 
  4369  0215                     	;# 
  4370  0215                     	;# 
  4371  0216                     	;# 
  4372  0216                     	;# 
  4373  0217                     	;# 
  4374  0217                     	;# 
  4375  0218                     	;# 
  4376  0219                     	;# 
  4377  021A                     	;# 
  4378  021A                     	;# 
  4379  021B                     	;# 
  4380  021B                     	;# 
  4381  021C                     	;# 
  4382  021C                     	;# 
  4383  021D                     	;# 
  4384  021D                     	;# 
  4385  021E                     	;# 
  4386  021F                     	;# 
  4387  028C                     	;# 
  4388  028C                     	;# 
  4389  028D                     	;# 
  4390  028D                     	;# 
  4391  028E                     	;# 
  4392  028F                     	;# 
  4393  0290                     	;# 
  4394  0291                     	;# 
  4395  0292                     	;# 
  4396  0292                     	;# 
  4397  0293                     	;# 
  4398  0293                     	;# 
  4399  0294                     	;# 
  4400  0295                     	;# 
  4401  0296                     	;# 
  4402  0297                     	;# 
  4403  0298                     	;# 
  4404  0298                     	;# 
  4405  0299                     	;# 
  4406  0299                     	;# 
  4407  029A                     	;# 
  4408  029B                     	;# 
  4409  029C                     	;# 
  4410  029D                     	;# 
  4411  029F                     	;# 
  4412  030C                     	;# 
  4413  030C                     	;# 
  4414  030D                     	;# 
  4415  030E                     	;# 
  4416  030F                     	;# 
  4417  0310                     	;# 
  4418  0310                     	;# 
  4419  0311                     	;# 
  4420  0312                     	;# 
  4421  0313                     	;# 
  4422  0314                     	;# 
  4423  0314                     	;# 
  4424  0315                     	;# 
  4425  0316                     	;# 
  4426  0317                     	;# 
  4427  0318                     	;# 
  4428  0318                     	;# 
  4429  0319                     	;# 
  4430  031A                     	;# 
  4431  031B                     	;# 
  4432  038C                     	;# 
  4433  038C                     	;# 
  4434  038D                     	;# 
  4435  038E                     	;# 
  4436  0390                     	;# 
  4437  0390                     	;# 
  4438  0391                     	;# 
  4439  0392                     	;# 
  4440  048C                     	;# 
  4441  048C                     	;# 
  4442  048D                     	;# 
  4443  048E                     	;# 
  4444  048F                     	;# 
  4445  048F                     	;# 
  4446  0490                     	;# 
  4447  0491                     	;# 
  4448  0492                     	;# 
  4449  0492                     	;# 
  4450  0493                     	;# 
  4451  0494                     	;# 
  4452  0495                     	;# 
  4453  0495                     	;# 
  4454  0496                     	;# 
  4455  0497                     	;# 
  4456  0498                     	;# 
  4457  0499                     	;# 
  4458  049A                     	;# 
  4459  049B                     	;# 
  4460  049C                     	;# 
  4461  049D                     	;# 
  4462  058C                     	;# 
  4463  058C                     	;# 
  4464  058D                     	;# 
  4465  058E                     	;# 
  4466  058F                     	;# 
  4467  058F                     	;# 
  4468  0590                     	;# 
  4469  0591                     	;# 
  4470  0592                     	;# 
  4471  0593                     	;# 
  4472  059C                     	;# 
  4473  059C                     	;# 
  4474  059D                     	;# 
  4475  059D                     	;# 
  4476  059E                     	;# 
  4477  059F                     	;# 
  4478  060C                     	;# 
  4479  060C                     	;# 
  4480  060D                     	;# 
  4481  060D                     	;# 
  4482  060E                     	;# 
  4483  060F                     	;# 
  4484  0610                     	;# 
  4485  0611                     	;# 
  4486  0612                     	;# 
  4487  0613                     	;# 
  4488  0614                     	;# 
  4489  0616                     	;# 
  4490  0616                     	;# 
  4491  0617                     	;# 
  4492  0617                     	;# 
  4493  0618                     	;# 
  4494  0619                     	;# 
  4495  061A                     	;# 
  4496  061B                     	;# 
  4497  061C                     	;# 
  4498  061D                     	;# 
  4499  061E                     	;# 
  4500  070C                     	;# 
  4501  070D                     	;# 
  4502  070E                     	;# 
  4503  070F                     	;# 
  4504  0710                     	;# 
  4505  0711                     	;# 
  4506  0712                     	;# 
  4507  0713                     	;# 
  4508  0714                     	;# 
  4509  0716                     	;# 
  4510  0717                     	;# 
  4511  0718                     	;# 
  4512  0719                     	;# 
  4513  071A                     	;# 
  4514  071B                     	;# 
  4515  071C                     	;# 
  4516  071D                     	;# 
  4517  071E                     	;# 
  4518  0796                     	;# 
  4519  0797                     	;# 
  4520  0798                     	;# 
  4521  0799                     	;# 
  4522  079A                     	;# 
  4523  079B                     	;# 
  4524  079C                     	;# 
  4525  079D                     	;# 
  4526  080C                     	;# 
  4527  080D                     	;# 
  4528  080E                     	;# 
  4529  080F                     	;# 
  4530  0810                     	;# 
  4531  0811                     	;# 
  4532  0812                     	;# 
  4533  0813                     	;# 
  4534  0814                     	;# 
  4535  081A                     	;# 
  4536  081A                     	;# 
  4537  081B                     	;# 
  4538  081C                     	;# 
  4539  081C                     	;# 
  4540  081D                     	;# 
  4541  081E                     	;# 
  4542  081F                     	;# 
  4543  088C                     	;# 
  4544  088D                     	;# 
  4545  088E                     	;# 
  4546  088F                     	;# 
  4547  0890                     	;# 
  4548  0891                     	;# 
  4549  0892                     	;# 
  4550  0893                     	;# 
  4551  0895                     	;# 
  4552  0896                     	;# 
  4553  0897                     	;# 
  4554  0898                     	;# 
  4555  0899                     	;# 
  4556  089A                     	;# 
  4557  089B                     	;# 
  4558  090C                     	;# 
  4559  090E                     	;# 
  4560  090F                     	;# 
  4561  091F                     	;# 
  4562  098F                     	;# 
  4563  098F                     	;# 
  4564  0990                     	;# 
  4565  0991                     	;# 
  4566  0992                     	;# 
  4567  0993                     	;# 
  4568  0994                     	;# 
  4569  0995                     	;# 
  4570  0996                     	;# 
  4571  0997                     	;# 
  4572  1E0F                     	;# 
  4573  1E10                     	;# 
  4574  1E11                     	;# 
  4575  1E12                     	;# 
  4576  1E13                     	;# 
  4577  1E14                     	;# 
  4578  1E15                     	;# 
  4579  1E16                     	;# 
  4580  1E17                     	;# 
  4581  1E18                     	;# 
  4582  1E19                     	;# 
  4583  1E1A                     	;# 
  4584  1E1B                     	;# 
  4585  1E1C                     	;# 
  4586  1E1D                     	;# 
  4587  1E1E                     	;# 
  4588  1E1F                     	;# 
  4589  1E20                     	;# 
  4590  1E21                     	;# 
  4591  1E22                     	;# 
  4592  1E23                     	;# 
  4593  1E24                     	;# 
  4594  1E25                     	;# 
  4595  1E26                     	;# 
  4596  1E27                     	;# 
  4597  1E28                     	;# 
  4598  1E29                     	;# 
  4599  1E2A                     	;# 
  4600  1E2B                     	;# 
  4601  1E2C                     	;# 
  4602  1E2D                     	;# 
  4603  1E2E                     	;# 
  4604  1E2F                     	;# 
  4605  1E30                     	;# 
  4606  1E31                     	;# 
  4607  1E32                     	;# 
  4608  1E33                     	;# 
  4609  1E34                     	;# 
  4610  1E35                     	;# 
  4611  1E36                     	;# 
  4612  1E37                     	;# 
  4613  1E8F                     	;# 
  4614  1E90                     	;# 
  4615  1E91                     	;# 
  4616  1E92                     	;# 
  4617  1E93                     	;# 
  4618  1E94                     	;# 
  4619  1E95                     	;# 
  4620  1E96                     	;# 
  4621  1E97                     	;# 
  4622  1E9C                     	;# 
  4623  1E9D                     	;# 
  4624  1E9E                     	;# 
  4625  1EA1                     	;# 
  4626  1EA2                     	;# 
  4627  1EA3                     	;# 
  4628  1EA4                     	;# 
  4629  1EA9                     	;# 
  4630  1EAA                     	;# 
  4631  1EB1                     	;# 
  4632  1EB2                     	;# 
  4633  1EB8                     	;# 
  4634  1EB9                     	;# 
  4635  1EBA                     	;# 
  4636  1EBB                     	;# 
  4637  1EBC                     	;# 
  4638  1EBD                     	;# 
  4639  1EBE                     	;# 
  4640  1EC3                     	;# 
  4641  1EC5                     	;# 
  4642  1EC6                     	;# 
  4643  1EC7                     	;# 
  4644  1EC8                     	;# 
  4645  1EC9                     	;# 
  4646  1ECA                     	;# 
  4647  1ECB                     	;# 
  4648  1ECB                     	;# 
  4649  1ECB                     	;# 
  4650  1ECC                     	;# 
  4651  1ECC                     	;# 
  4652  1ECC                     	;# 
  4653  1F10                     	;# 
  4654  1F11                     	;# 
  4655  1F12                     	;# 
  4656  1F14                     	;# 
  4657  1F15                     	;# 
  4658  1F1C                     	;# 
  4659  1F1D                     	;# 
  4660  1F1E                     	;# 
  4661  1F1F                     	;# 
  4662  1F20                     	;# 
  4663  1F21                     	;# 
  4664  1F22                     	;# 
  4665  1F23                     	;# 
  4666  1F24                     	;# 
  4667  1F25                     	;# 
  4668  1F26                     	;# 
  4669  1F27                     	;# 
  4670  1F38                     	;# 
  4671  1F39                     	;# 
  4672  1F3A                     	;# 
  4673  1F3B                     	;# 
  4674  1F3C                     	;# 
  4675  1F3D                     	;# 
  4676  1F3E                     	;# 
  4677  1F3F                     	;# 
  4678  1F43                     	;# 
  4679  1F44                     	;# 
  4680  1F45                     	;# 
  4681  1F46                     	;# 
  4682  1F47                     	;# 
  4683  1F48                     	;# 
  4684  1F49                     	;# 
  4685  1F4A                     	;# 
  4686  1F4E                     	;# 
  4687  1F4F                     	;# 
  4688  1F50                     	;# 
  4689  1F51                     	;# 
  4690  1F52                     	;# 
  4691  1F53                     	;# 
  4692  1F54                     	;# 
  4693  1F55                     	;# 
  4694  1FE4                     	;# 
  4695  1FE5                     	;# 
  4696  1FE6                     	;# 
  4697  1FE7                     	;# 
  4698  1FE8                     	;# 
  4699  1FE8                     	;# 
  4700  1FE9                     	;# 
  4701  1FEA                     	;# 
  4702  1FEB                     	;# 
  4703  1FED                     	;# 
  4704  1FEE                     	;# 
  4705  1FEF                     	;# 
  4706  0000                     	;# 
  4707  0001                     	;# 
  4708  0002                     	;# 
  4709  0003                     	;# 
  4710  0004                     	;# 
  4711  0005                     	;# 
  4712  0006                     	;# 
  4713  0007                     	;# 
  4714  0008                     	;# 
  4715  0009                     	;# 
  4716  000A                     	;# 
  4717  000B                     	;# 
  4718  000C                     	;# 
  4719  000D                     	;# 
  4720  000E                     	;# 
  4721  0012                     	;# 
  4722  0013                     	;# 
  4723  0014                     	;# 
  4724  0018                     	;# 
  4725  0019                     	;# 
  4726  001A                     	;# 
  4727  008C                     	;# 
  4728  008C                     	;# 
  4729  008D                     	;# 
  4730  008E                     	;# 
  4731  008E                     	;# 
  4732  008F                     	;# 
  4733  0090                     	;# 
  4734  0090                     	;# 
  4735  0091                     	;# 
  4736  0092                     	;# 
  4737  0092                     	;# 
  4738  0093                     	;# 
  4739  0094                     	;# 
  4740  0094                     	;# 
  4741  0095                     	;# 
  4742  0096                     	;# 
  4743  0096                     	;# 
  4744  0097                     	;# 
  4745  0098                     	;# 
  4746  0099                     	;# 
  4747  009A                     	;# 
  4748  009B                     	;# 
  4749  009B                     	;# 
  4750  009C                     	;# 
  4751  009D                     	;# 
  4752  009D                     	;# 
  4753  009E                     	;# 
  4754  009F                     	;# 
  4755  010C                     	;# 
  4756  010C                     	;# 
  4757  010D                     	;# 
  4758  010E                     	;# 
  4759  010F                     	;# 
  4760  010F                     	;# 
  4761  0110                     	;# 
  4762  0111                     	;# 
  4763  0112                     	;# 
  4764  0113                     	;# 
  4765  0114                     	;# 
  4766  0115                     	;# 
  4767  0116                     	;# 
  4768  0117                     	;# 
  4769  0118                     	;# 
  4770  0119                     	;# 
  4771  0119                     	;# 
  4772  0119                     	;# 
  4773  011A                     	;# 
  4774  011A                     	;# 
  4775  011A                     	;# 
  4776  011B                     	;# 
  4777  011B                     	;# 
  4778  011B                     	;# 
  4779  011B                     	;# 
  4780  011B                     	;# 
  4781  011C                     	;# 
  4782  011C                     	;# 
  4783  011C                     	;# 
  4784  011D                     	;# 
  4785  011D                     	;# 
  4786  011D                     	;# 
  4787  011E                     	;# 
  4788  011E                     	;# 
  4789  011E                     	;# 
  4790  011F                     	;# 
  4791  011F                     	;# 
  4792  011F                     	;# 
  4793  011F                     	;# 
  4794  011F                     	;# 
  4795  018C                     	;# 
  4796  018D                     	;# 
  4797  018E                     	;# 
  4798  018F                     	;# 
  4799  0190                     	;# 
  4800  0191                     	;# 
  4801  0192                     	;# 
  4802  0196                     	;# 
  4803  0197                     	;# 
  4804  0198                     	;# 
  4805  0199                     	;# 
  4806  019A                     	;# 
  4807  019B                     	;# 
  4808  019C                     	;# 
  4809  020C                     	;# 
  4810  020D                     	;# 
  4811  020E                     	;# 
  4812  020E                     	;# 
  4813  020F                     	;# 
  4814  020F                     	;# 
  4815  0210                     	;# 
  4816  0210                     	;# 
  4817  0211                     	;# 
  4818  0211                     	;# 
  4819  0212                     	;# 
  4820  0213                     	;# 
  4821  0214                     	;# 
  4822  0214                     	;# 
  4823  0215                     	;# 
  4824  0215                     	;# 
  4825  0216                     	;# 
  4826  0216                     	;# 
  4827  0217                     	;# 
  4828  0217                     	;# 
  4829  0218                     	;# 
  4830  0219                     	;# 
  4831  021A                     	;# 
  4832  021A                     	;# 
  4833  021B                     	;# 
  4834  021B                     	;# 
  4835  021C                     	;# 
  4836  021C                     	;# 
  4837  021D                     	;# 
  4838  021D                     	;# 
  4839  021E                     	;# 
  4840  021F                     	;# 
  4841  028C                     	;# 
  4842  028C                     	;# 
  4843  028D                     	;# 
  4844  028D                     	;# 
  4845  028E                     	;# 
  4846  028F                     	;# 
  4847  0290                     	;# 
  4848  0291                     	;# 
  4849  0292                     	;# 
  4850  0292                     	;# 
  4851  0293                     	;# 
  4852  0293                     	;# 
  4853  0294                     	;# 
  4854  0295                     	;# 
  4855  0296                     	;# 
  4856  0297                     	;# 
  4857  0298                     	;# 
  4858  0298                     	;# 
  4859  0299                     	;# 
  4860  0299                     	;# 
  4861  029A                     	;# 
  4862  029B                     	;# 
  4863  029C                     	;# 
  4864  029D                     	;# 
  4865  029F                     	;# 
  4866  030C                     	;# 
  4867  030C                     	;# 
  4868  030D                     	;# 
  4869  030E                     	;# 
  4870  030F                     	;# 
  4871  0310                     	;# 
  4872  0310                     	;# 
  4873  0311                     	;# 
  4874  0312                     	;# 
  4875  0313                     	;# 
  4876  0314                     	;# 
  4877  0314                     	;# 
  4878  0315                     	;# 
  4879  0316                     	;# 
  4880  0317                     	;# 
  4881  0318                     	;# 
  4882  0318                     	;# 
  4883  0319                     	;# 
  4884  031A                     	;# 
  4885  031B                     	;# 
  4886  038C                     	;# 
  4887  038C                     	;# 
  4888  038D                     	;# 
  4889  038E                     	;# 
  4890  0390                     	;# 
  4891  0390                     	;# 
  4892  0391                     	;# 
  4893  0392                     	;# 
  4894  048C                     	;# 
  4895  048C                     	;# 
  4896  048D                     	;# 
  4897  048E                     	;# 
  4898  048F                     	;# 
  4899  048F                     	;# 
  4900  0490                     	;# 
  4901  0491                     	;# 
  4902  0492                     	;# 
  4903  0492                     	;# 
  4904  0493                     	;# 
  4905  0494                     	;# 
  4906  0495                     	;# 
  4907  0495                     	;# 
  4908  0496                     	;# 
  4909  0497                     	;# 
  4910  0498                     	;# 
  4911  0499                     	;# 
  4912  049A                     	;# 
  4913  049B                     	;# 
  4914  049C                     	;# 
  4915  049D                     	;# 
  4916  058C                     	;# 
  4917  058C                     	;# 
  4918  058D                     	;# 
  4919  058E                     	;# 
  4920  058F                     	;# 
  4921  058F                     	;# 
  4922  0590                     	;# 
  4923  0591                     	;# 
  4924  0592                     	;# 
  4925  0593                     	;# 
  4926  059C                     	;# 
  4927  059C                     	;# 
  4928  059D                     	;# 
  4929  059D                     	;# 
  4930  059E                     	;# 
  4931  059F                     	;# 
  4932  060C                     	;# 
  4933  060C                     	;# 
  4934  060D                     	;# 
  4935  060D                     	;# 
  4936  060E                     	;# 
  4937  060F                     	;# 
  4938  0610                     	;# 
  4939  0611                     	;# 
  4940  0612                     	;# 
  4941  0613                     	;# 
  4942  0614                     	;# 
  4943  0616                     	;# 
  4944  0616                     	;# 
  4945  0617                     	;# 
  4946  0617                     	;# 
  4947  0618                     	;# 
  4948  0619                     	;# 
  4949  061A                     	;# 
  4950  061B                     	;# 
  4951  061C                     	;# 
  4952  061D                     	;# 
  4953  061E                     	;# 
  4954  070C                     	;# 
  4955  070D                     	;# 
  4956  070E                     	;# 
  4957  070F                     	;# 
  4958  0710                     	;# 
  4959  0711                     	;# 
  4960  0712                     	;# 
  4961  0713                     	;# 
  4962  0714                     	;# 
  4963  0716                     	;# 
  4964  0717                     	;# 
  4965  0718                     	;# 
  4966  0719                     	;# 
  4967  071A                     	;# 
  4968  071B                     	;# 
  4969  071C                     	;# 
  4970  071D                     	;# 
  4971  071E                     	;# 
  4972  0796                     	;# 
  4973  0797                     	;# 
  4974  0798                     	;# 
  4975  0799                     	;# 
  4976  079A                     	;# 
  4977  079B                     	;# 
  4978  079C                     	;# 
  4979  079D                     	;# 
  4980  080C                     	;# 
  4981  080D                     	;# 
  4982  080E                     	;# 
  4983  080F                     	;# 
  4984  0810                     	;# 
  4985  0811                     	;# 
  4986  0812                     	;# 
  4987  0813                     	;# 
  4988  0814                     	;# 
  4989  081A                     	;# 
  4990  081A                     	;# 
  4991  081B                     	;# 
  4992  081C                     	;# 
  4993  081C                     	;# 
  4994  081D                     	;# 
  4995  081E                     	;# 
  4996  081F                     	;# 
  4997  088C                     	;# 
  4998  088D                     	;# 
  4999  088E                     	;# 
  5000  088F                     	;# 
  5001  0890                     	;# 
  5002  0891                     	;# 
  5003  0892                     	;# 
  5004  0893                     	;# 
  5005  0895                     	;# 
  5006  0896                     	;# 
  5007  0897                     	;# 
  5008  0898                     	;# 
  5009  0899                     	;# 
  5010  089A                     	;# 
  5011  089B                     	;# 
  5012  090C                     	;# 
  5013  090E                     	;# 
  5014  090F                     	;# 
  5015  091F                     	;# 
  5016  098F                     	;# 
  5017  098F                     	;# 
  5018  0990                     	;# 
  5019  0991                     	;# 
  5020  0992                     	;# 
  5021  0993                     	;# 
  5022  0994                     	;# 
  5023  0995                     	;# 
  5024  0996                     	;# 
  5025  0997                     	;# 
  5026  1E0F                     	;# 
  5027  1E10                     	;# 
  5028  1E11                     	;# 
  5029  1E12                     	;# 
  5030  1E13                     	;# 
  5031  1E14                     	;# 
  5032  1E15                     	;# 
  5033  1E16                     	;# 
  5034  1E17                     	;# 
  5035  1E18                     	;# 
  5036  1E19                     	;# 
  5037  1E1A                     	;# 
  5038  1E1B                     	;# 
  5039  1E1C                     	;# 
  5040  1E1D                     	;# 
  5041  1E1E                     	;# 
  5042  1E1F                     	;# 
  5043  1E20                     	;# 
  5044  1E21                     	;# 
  5045  1E22                     	;# 
  5046  1E23                     	;# 
  5047  1E24                     	;# 
  5048  1E25                     	;# 
  5049  1E26                     	;# 
  5050  1E27                     	;# 
  5051  1E28                     	;# 
  5052  1E29                     	;# 
  5053  1E2A                     	;# 
  5054  1E2B                     	;# 
  5055  1E2C                     	;# 
  5056  1E2D                     	;# 
  5057  1E2E                     	;# 
  5058  1E2F                     	;# 
  5059  1E30                     	;# 
  5060  1E31                     	;# 
  5061  1E32                     	;# 
  5062  1E33                     	;# 
  5063  1E34                     	;# 
  5064  1E35                     	;# 
  5065  1E36                     	;# 
  5066  1E37                     	;# 
  5067  1E8F                     	;# 
  5068  1E90                     	;# 
  5069  1E91                     	;# 
  5070  1E92                     	;# 
  5071  1E93                     	;# 
  5072  1E94                     	;# 
  5073  1E95                     	;# 
  5074  1E96                     	;# 
  5075  1E97                     	;# 
  5076  1E9C                     	;# 
  5077  1E9D                     	;# 
  5078  1E9E                     	;# 
  5079  1EA1                     	;# 
  5080  1EA2                     	;# 
  5081  1EA3                     	;# 
  5082  1EA4                     	;# 
  5083  1EA9                     	;# 
  5084  1EAA                     	;# 
  5085  1EB1                     	;# 
  5086  1EB2                     	;# 
  5087  1EB8                     	;# 
  5088  1EB9                     	;# 
  5089  1EBA                     	;# 
  5090  1EBB                     	;# 
  5091  1EBC                     	;# 
  5092  1EBD                     	;# 
  5093  1EBE                     	;# 
  5094  1EC3                     	;# 
  5095  1EC5                     	;# 
  5096  1EC6                     	;# 
  5097  1EC7                     	;# 
  5098  1EC8                     	;# 
  5099  1EC9                     	;# 
  5100  1ECA                     	;# 
  5101  1ECB                     	;# 
  5102  1ECB                     	;# 
  5103  1ECB                     	;# 
  5104  1ECC                     	;# 
  5105  1ECC                     	;# 
  5106  1ECC                     	;# 
  5107  1F10                     	;# 
  5108  1F11                     	;# 
  5109  1F12                     	;# 
  5110  1F14                     	;# 
  5111  1F15                     	;# 
  5112  1F1C                     	;# 
  5113  1F1D                     	;# 
  5114  1F1E                     	;# 
  5115  1F1F                     	;# 
  5116  1F20                     	;# 
  5117  1F21                     	;# 
  5118  1F22                     	;# 
  5119  1F23                     	;# 
  5120  1F24                     	;# 
  5121  1F25                     	;# 
  5122  1F26                     	;# 
  5123  1F27                     	;# 
  5124  1F38                     	;# 
  5125  1F39                     	;# 
  5126  1F3A                     	;# 
  5127  1F3B                     	;# 
  5128  1F3C                     	;# 
  5129  1F3D                     	;# 
  5130  1F3E                     	;# 
  5131  1F3F                     	;# 
  5132  1F43                     	;# 
  5133  1F44                     	;# 
  5134  1F45                     	;# 
  5135  1F46                     	;# 
  5136  1F47                     	;# 
  5137  1F48                     	;# 
  5138  1F49                     	;# 
  5139  1F4A                     	;# 
  5140  1F4E                     	;# 
  5141  1F4F                     	;# 
  5142  1F50                     	;# 
  5143  1F51                     	;# 
  5144  1F52                     	;# 
  5145  1F53                     	;# 
  5146  1F54                     	;# 
  5147  1F55                     	;# 
  5148  1FE4                     	;# 
  5149  1FE5                     	;# 
  5150  1FE6                     	;# 
  5151  1FE7                     	;# 
  5152  1FE8                     	;# 
  5153  1FE8                     	;# 
  5154  1FE9                     	;# 
  5155  1FEA                     	;# 
  5156  1FEB                     	;# 
  5157  1FED                     	;# 
  5158  1FEE                     	;# 
  5159  1FEF                     	;# 
  5160  0000                     	;# 
  5161  0001                     	;# 
  5162  0002                     	;# 
  5163  0003                     	;# 
  5164  0004                     	;# 
  5165  0005                     	;# 
  5166  0006                     	;# 
  5167  0007                     	;# 
  5168  0008                     	;# 
  5169  0009                     	;# 
  5170  000A                     	;# 
  5171  000B                     	;# 
  5172  000C                     	;# 
  5173  000D                     	;# 
  5174  000E                     	;# 
  5175  0012                     	;# 
  5176  0013                     	;# 
  5177  0014                     	;# 
  5178  0018                     	;# 
  5179  0019                     	;# 
  5180  001A                     	;# 
  5181  008C                     	;# 
  5182  008C                     	;# 
  5183  008D                     	;# 
  5184  008E                     	;# 
  5185  008E                     	;# 
  5186  008F                     	;# 
  5187  0090                     	;# 
  5188  0090                     	;# 
  5189  0091                     	;# 
  5190  0092                     	;# 
  5191  0092                     	;# 
  5192  0093                     	;# 
  5193  0094                     	;# 
  5194  0094                     	;# 
  5195  0095                     	;# 
  5196  0096                     	;# 
  5197  0096                     	;# 
  5198  0097                     	;# 
  5199  0098                     	;# 
  5200  0099                     	;# 
  5201  009A                     	;# 
  5202  009B                     	;# 
  5203  009B                     	;# 
  5204  009C                     	;# 
  5205  009D                     	;# 
  5206  009D                     	;# 
  5207  009E                     	;# 
  5208  009F                     	;# 
  5209  010C                     	;# 
  5210  010C                     	;# 
  5211  010D                     	;# 
  5212  010E                     	;# 
  5213  010F                     	;# 
  5214  010F                     	;# 
  5215  0110                     	;# 
  5216  0111                     	;# 
  5217  0112                     	;# 
  5218  0113                     	;# 
  5219  0114                     	;# 
  5220  0115                     	;# 
  5221  0116                     	;# 
  5222  0117                     	;# 
  5223  0118                     	;# 
  5224  0119                     	;# 
  5225  0119                     	;# 
  5226  0119                     	;# 
  5227  011A                     	;# 
  5228  011A                     	;# 
  5229  011A                     	;# 
  5230  011B                     	;# 
  5231  011B                     	;# 
  5232  011B                     	;# 
  5233  011B                     	;# 
  5234  011B                     	;# 
  5235  011C                     	;# 
  5236  011C                     	;# 
  5237  011C                     	;# 
  5238  011D                     	;# 
  5239  011D                     	;# 
  5240  011D                     	;# 
  5241  011E                     	;# 
  5242  011E                     	;# 
  5243  011E                     	;# 
  5244  011F                     	;# 
  5245  011F                     	;# 
  5246  011F                     	;# 
  5247  011F                     	;# 
  5248  011F                     	;# 
  5249  018C                     	;# 
  5250  018D                     	;# 
  5251  018E                     	;# 
  5252  018F                     	;# 
  5253  0190                     	;# 
  5254  0191                     	;# 
  5255  0192                     	;# 
  5256  0196                     	;# 
  5257  0197                     	;# 
  5258  0198                     	;# 
  5259  0199                     	;# 
  5260  019A                     	;# 
  5261  019B                     	;# 
  5262  019C                     	;# 
  5263  020C                     	;# 
  5264  020D                     	;# 
  5265  020E                     	;# 
  5266  020E                     	;# 
  5267  020F                     	;# 
  5268  020F                     	;# 
  5269  0210                     	;# 
  5270  0210                     	;# 
  5271  0211                     	;# 
  5272  0211                     	;# 
  5273  0212                     	;# 
  5274  0213                     	;# 
  5275  0214                     	;# 
  5276  0214                     	;# 
  5277  0215                     	;# 
  5278  0215                     	;# 
  5279  0216                     	;# 
  5280  0216                     	;# 
  5281  0217                     	;# 
  5282  0217                     	;# 
  5283  0218                     	;# 
  5284  0219                     	;# 
  5285  021A                     	;# 
  5286  021A                     	;# 
  5287  021B                     	;# 
  5288  021B                     	;# 
  5289  021C                     	;# 
  5290  021C                     	;# 
  5291  021D                     	;# 
  5292  021D                     	;# 
  5293  021E                     	;# 
  5294  021F                     	;# 
  5295  028C                     	;# 
  5296  028C                     	;# 
  5297  028D                     	;# 
  5298  028D                     	;# 
  5299  028E                     	;# 
  5300  028F                     	;# 
  5301  0290                     	;# 
  5302  0291                     	;# 
  5303  0292                     	;# 
  5304  0292                     	;# 
  5305  0293                     	;# 
  5306  0293                     	;# 
  5307  0294                     	;# 
  5308  0295                     	;# 
  5309  0296                     	;# 
  5310  0297                     	;# 
  5311  0298                     	;# 
  5312  0298                     	;# 
  5313  0299                     	;# 
  5314  0299                     	;# 
  5315  029A                     	;# 
  5316  029B                     	;# 
  5317  029C                     	;# 
  5318  029D                     	;# 
  5319  029F                     	;# 
  5320  030C                     	;# 
  5321  030C                     	;# 
  5322  030D                     	;# 
  5323  030E                     	;# 
  5324  030F                     	;# 
  5325  0310                     	;# 
  5326  0310                     	;# 
  5327  0311                     	;# 
  5328  0312                     	;# 
  5329  0313                     	;# 
  5330  0314                     	;# 
  5331  0314                     	;# 
  5332  0315                     	;# 
  5333  0316                     	;# 
  5334  0317                     	;# 
  5335  0318                     	;# 
  5336  0318                     	;# 
  5337  0319                     	;# 
  5338  031A                     	;# 
  5339  031B                     	;# 
  5340  038C                     	;# 
  5341  038C                     	;# 
  5342  038D                     	;# 
  5343  038E                     	;# 
  5344  0390                     	;# 
  5345  0390                     	;# 
  5346  0391                     	;# 
  5347  0392                     	;# 
  5348  048C                     	;# 
  5349  048C                     	;# 
  5350  048D                     	;# 
  5351  048E                     	;# 
  5352  048F                     	;# 
  5353  048F                     	;# 
  5354  0490                     	;# 
  5355  0491                     	;# 
  5356  0492                     	;# 
  5357  0492                     	;# 
  5358  0493                     	;# 
  5359  0494                     	;# 
  5360  0495                     	;# 
  5361  0495                     	;# 
  5362  0496                     	;# 
  5363  0497                     	;# 
  5364  0498                     	;# 
  5365  0499                     	;# 
  5366  049A                     	;# 
  5367  049B                     	;# 
  5368  049C                     	;# 
  5369  049D                     	;# 
  5370  058C                     	;# 
  5371  058C                     	;# 
  5372  058D                     	;# 
  5373  058E                     	;# 
  5374  058F                     	;# 
  5375  058F                     	;# 
  5376  0590                     	;# 
  5377  0591                     	;# 
  5378  0592                     	;# 
  5379  0593                     	;# 
  5380  059C                     	;# 
  5381  059C                     	;# 
  5382  059D                     	;# 
  5383  059D                     	;# 
  5384  059E                     	;# 
  5385  059F                     	;# 
  5386  060C                     	;# 
  5387  060C                     	;# 
  5388  060D                     	;# 
  5389  060D                     	;# 
  5390  060E                     	;# 
  5391  060F                     	;# 
  5392  0610                     	;# 
  5393  0611                     	;# 
  5394  0612                     	;# 
  5395  0613                     	;# 
  5396  0614                     	;# 
  5397  0616                     	;# 
  5398  0616                     	;# 
  5399  0617                     	;# 
  5400  0617                     	;# 
  5401  0618                     	;# 
  5402  0619                     	;# 
  5403  061A                     	;# 
  5404  061B                     	;# 
  5405  061C                     	;# 
  5406  061D                     	;# 
  5407  061E                     	;# 
  5408  070C                     	;# 
  5409  070D                     	;# 
  5410  070E                     	;# 
  5411  070F                     	;# 
  5412  0710                     	;# 
  5413  0711                     	;# 
  5414  0712                     	;# 
  5415  0713                     	;# 
  5416  0714                     	;# 
  5417  0716                     	;# 
  5418  0717                     	;# 
  5419  0718                     	;# 
  5420  0719                     	;# 
  5421  071A                     	;# 
  5422  071B                     	;# 
  5423  071C                     	;# 
  5424  071D                     	;# 
  5425  071E                     	;# 
  5426  0796                     	;# 
  5427  0797                     	;# 
  5428  0798                     	;# 
  5429  0799                     	;# 
  5430  079A                     	;# 
  5431  079B                     	;# 
  5432  079C                     	;# 
  5433  079D                     	;# 
  5434  080C                     	;# 
  5435  080D                     	;# 
  5436  080E                     	;# 
  5437  080F                     	;# 
  5438  0810                     	;# 
  5439  0811                     	;# 
  5440  0812                     	;# 
  5441  0813                     	;# 
  5442  0814                     	;# 
  5443  081A                     	;# 
  5444  081A                     	;# 
  5445  081B                     	;# 
  5446  081C                     	;# 
  5447  081C                     	;# 
  5448  081D                     	;# 
  5449  081E                     	;# 
  5450  081F                     	;# 
  5451  088C                     	;# 
  5452  088D                     	;# 
  5453  088E                     	;# 
  5454  088F                     	;# 
  5455  0890                     	;# 
  5456  0891                     	;# 
  5457  0892                     	;# 
  5458  0893                     	;# 
  5459  0895                     	;# 
  5460  0896                     	;# 
  5461  0897                     	;# 
  5462  0898                     	;# 
  5463  0899                     	;# 
  5464  089A                     	;# 
  5465  089B                     	;# 
  5466  090C                     	;# 
  5467  090E                     	;# 
  5468  090F                     	;# 
  5469  091F                     	;# 
  5470  098F                     	;# 
  5471  098F                     	;# 
  5472  0990                     	;# 
  5473  0991                     	;# 
  5474  0992                     	;# 
  5475  0993                     	;# 
  5476  0994                     	;# 
  5477  0995                     	;# 
  5478  0996                     	;# 
  5479  0997                     	;# 
  5480  1E0F                     	;# 
  5481  1E10                     	;# 
  5482  1E11                     	;# 
  5483  1E12                     	;# 
  5484  1E13                     	;# 
  5485  1E14                     	;# 
  5486  1E15                     	;# 
  5487  1E16                     	;# 
  5488  1E17                     	;# 
  5489  1E18                     	;# 
  5490  1E19                     	;# 
  5491  1E1A                     	;# 
  5492  1E1B                     	;# 
  5493  1E1C                     	;# 
  5494  1E1D                     	;# 
  5495  1E1E                     	;# 
  5496  1E1F                     	;# 
  5497  1E20                     	;# 
  5498  1E21                     	;# 
  5499  1E22                     	;# 
  5500  1E23                     	;# 
  5501  1E24                     	;# 
  5502  1E25                     	;# 
  5503  1E26                     	;# 
  5504  1E27                     	;# 
  5505  1E28                     	;# 
  5506  1E29                     	;# 
  5507  1E2A                     	;# 
  5508  1E2B                     	;# 
  5509  1E2C                     	;# 
  5510  1E2D                     	;# 
  5511  1E2E                     	;# 
  5512  1E2F                     	;# 
  5513  1E30                     	;# 
  5514  1E31                     	;# 
  5515  1E32                     	;# 
  5516  1E33                     	;# 
  5517  1E34                     	;# 
  5518  1E35                     	;# 
  5519  1E36                     	;# 
  5520  1E37                     	;# 
  5521  1E8F                     	;# 
  5522  1E90                     	;# 
  5523  1E91                     	;# 
  5524  1E92                     	;# 
  5525  1E93                     	;# 
  5526  1E94                     	;# 
  5527  1E95                     	;# 
  5528  1E96                     	;# 
  5529  1E97                     	;# 
  5530  1E9C                     	;# 
  5531  1E9D                     	;# 
  5532  1E9E                     	;# 
  5533  1EA1                     	;# 
  5534  1EA2                     	;# 
  5535  1EA3                     	;# 
  5536  1EA4                     	;# 
  5537  1EA9                     	;# 
  5538  1EAA                     	;# 
  5539  1EB1                     	;# 
  5540  1EB2                     	;# 
  5541  1EB8                     	;# 
  5542  1EB9                     	;# 
  5543  1EBA                     	;# 
  5544  1EBB                     	;# 
  5545  1EBC                     	;# 
  5546  1EBD                     	;# 
  5547  1EBE                     	;# 
  5548  1EC3                     	;# 
  5549  1EC5                     	;# 
  5550  1EC6                     	;# 
  5551  1EC7                     	;# 
  5552  1EC8                     	;# 
  5553  1EC9                     	;# 
  5554  1ECA                     	;# 
  5555  1ECB                     	;# 
  5556  1ECB                     	;# 
  5557  1ECB                     	;# 
  5558  1ECC                     	;# 
  5559  1ECC                     	;# 
  5560  1ECC                     	;# 
  5561  1F10                     	;# 
  5562  1F11                     	;# 
  5563  1F12                     	;# 
  5564  1F14                     	;# 
  5565  1F15                     	;# 
  5566  1F1C                     	;# 
  5567  1F1D                     	;# 
  5568  1F1E                     	;# 
  5569  1F1F                     	;# 
  5570  1F20                     	;# 
  5571  1F21                     	;# 
  5572  1F22                     	;# 
  5573  1F23                     	;# 
  5574  1F24                     	;# 
  5575  1F25                     	;# 
  5576  1F26                     	;# 
  5577  1F27                     	;# 
  5578  1F38                     	;# 
  5579  1F39                     	;# 
  5580  1F3A                     	;# 
  5581  1F3B                     	;# 
  5582  1F3C                     	;# 
  5583  1F3D                     	;# 
  5584  1F3E                     	;# 
  5585  1F3F                     	;# 
  5586  1F43                     	;# 
  5587  1F44                     	;# 
  5588  1F45                     	;# 
  5589  1F46                     	;# 
  5590  1F47                     	;# 
  5591  1F48                     	;# 
  5592  1F49                     	;# 
  5593  1F4A                     	;# 
  5594  1F4E                     	;# 
  5595  1F4F                     	;# 
  5596  1F50                     	;# 
  5597  1F51                     	;# 
  5598  1F52                     	;# 
  5599  1F53                     	;# 
  5600  1F54                     	;# 
  5601  1F55                     	;# 
  5602  1FE4                     	;# 
  5603  1FE5                     	;# 
  5604  1FE6                     	;# 
  5605  1FE7                     	;# 
  5606  1FE8                     	;# 
  5607  1FE8                     	;# 
  5608  1FE9                     	;# 
  5609  1FEA                     	;# 
  5610  1FEB                     	;# 
  5611  1FED                     	;# 
  5612  1FEE                     	;# 
  5613  1FEF                     	;# 
  5614  0000                     	;# 
  5615  0001                     	;# 
  5616  0002                     	;# 
  5617  0003                     	;# 
  5618  0004                     	;# 
  5619  0005                     	;# 
  5620  0006                     	;# 
  5621  0007                     	;# 
  5622  0008                     	;# 
  5623  0009                     	;# 
  5624  000A                     	;# 
  5625  000B                     	;# 
  5626  000C                     	;# 
  5627  000D                     	;# 
  5628  000E                     	;# 
  5629  0012                     	;# 
  5630  0013                     	;# 
  5631  0014                     	;# 
  5632  0018                     	;# 
  5633  0019                     	;# 
  5634  001A                     	;# 
  5635  008C                     	;# 
  5636  008C                     	;# 
  5637  008D                     	;# 
  5638  008E                     	;# 
  5639  008E                     	;# 
  5640  008F                     	;# 
  5641  0090                     	;# 
  5642  0090                     	;# 
  5643  0091                     	;# 
  5644  0092                     	;# 
  5645  0092                     	;# 
  5646  0093                     	;# 
  5647  0094                     	;# 
  5648  0094                     	;# 
  5649  0095                     	;# 
  5650  0096                     	;# 
  5651  0096                     	;# 
  5652  0097                     	;# 
  5653  0098                     	;# 
  5654  0099                     	;# 
  5655  009A                     	;# 
  5656  009B                     	;# 
  5657  009B                     	;# 
  5658  009C                     	;# 
  5659  009D                     	;# 
  5660  009D                     	;# 
  5661  009E                     	;# 
  5662  009F                     	;# 
  5663  010C                     	;# 
  5664  010C                     	;# 
  5665  010D                     	;# 
  5666  010E                     	;# 
  5667  010F                     	;# 
  5668  010F                     	;# 
  5669  0110                     	;# 
  5670  0111                     	;# 
  5671  0112                     	;# 
  5672  0113                     	;# 
  5673  0114                     	;# 
  5674  0115                     	;# 
  5675  0116                     	;# 
  5676  0117                     	;# 
  5677  0118                     	;# 
  5678  0119                     	;# 
  5679  0119                     	;# 
  5680  0119                     	;# 
  5681  011A                     	;# 
  5682  011A                     	;# 
  5683  011A                     	;# 
  5684  011B                     	;# 
  5685  011B                     	;# 
  5686  011B                     	;# 
  5687  011B                     	;# 
  5688  011B                     	;# 
  5689  011C                     	;# 
  5690  011C                     	;# 
  5691  011C                     	;# 
  5692  011D                     	;# 
  5693  011D                     	;# 
  5694  011D                     	;# 
  5695  011E                     	;# 
  5696  011E                     	;# 
  5697  011E                     	;# 
  5698  011F                     	;# 
  5699  011F                     	;# 
  5700  011F                     	;# 
  5701  011F                     	;# 
  5702  011F                     	;# 
  5703  018C                     	;# 
  5704  018D                     	;# 
  5705  018E                     	;# 
  5706  018F                     	;# 
  5707  0190                     	;# 
  5708  0191                     	;# 
  5709  0192                     	;# 
  5710  0196                     	;# 
  5711  0197                     	;# 
  5712  0198                     	;# 
  5713  0199                     	;# 
  5714  019A                     	;# 
  5715  019B                     	;# 
  5716  019C                     	;# 
  5717  020C                     	;# 
  5718  020D                     	;# 
  5719  020E                     	;# 
  5720  020E                     	;# 
  5721  020F                     	;# 
  5722  020F                     	;# 
  5723  0210                     	;# 
  5724  0210                     	;# 
  5725  0211                     	;# 
  5726  0211                     	;# 
  5727  0212                     	;# 
  5728  0213                     	;# 
  5729  0214                     	;# 
  5730  0214                     	;# 
  5731  0215                     	;# 
  5732  0215                     	;# 
  5733  0216                     	;# 
  5734  0216                     	;# 
  5735  0217                     	;# 
  5736  0217                     	;# 
  5737  0218                     	;# 
  5738  0219                     	;# 
  5739  021A                     	;# 
  5740  021A                     	;# 
  5741  021B                     	;# 
  5742  021B                     	;# 
  5743  021C                     	;# 
  5744  021C                     	;# 
  5745  021D                     	;# 
  5746  021D                     	;# 
  5747  021E                     	;# 
  5748  021F                     	;# 
  5749  028C                     	;# 
  5750  028C                     	;# 
  5751  028D                     	;# 
  5752  028D                     	;# 
  5753  028E                     	;# 
  5754  028F                     	;# 
  5755  0290                     	;# 
  5756  0291                     	;# 
  5757  0292                     	;# 
  5758  0292                     	;# 
  5759  0293                     	;# 
  5760  0293                     	;# 
  5761  0294                     	;# 
  5762  0295                     	;# 
  5763  0296                     	;# 
  5764  0297                     	;# 
  5765  0298                     	;# 
  5766  0298                     	;# 
  5767  0299                     	;# 
  5768  0299                     	;# 
  5769  029A                     	;# 
  5770  029B                     	;# 
  5771  029C                     	;# 
  5772  029D                     	;# 
  5773  029F                     	;# 
  5774  030C                     	;# 
  5775  030C                     	;# 
  5776  030D                     	;# 
  5777  030E                     	;# 
  5778  030F                     	;# 
  5779  0310                     	;# 
  5780  0310                     	;# 
  5781  0311                     	;# 
  5782  0312                     	;# 
  5783  0313                     	;# 
  5784  0314                     	;# 
  5785  0314                     	;# 
  5786  0315                     	;# 
  5787  0316                     	;# 
  5788  0317                     	;# 
  5789  0318                     	;# 
  5790  0318                     	;# 
  5791  0319                     	;# 
  5792  031A                     	;# 
  5793  031B                     	;# 
  5794  038C                     	;# 
  5795  038C                     	;# 
  5796  038D                     	;# 
  5797  038E                     	;# 
  5798  0390                     	;# 
  5799  0390                     	;# 
  5800  0391                     	;# 
  5801  0392                     	;# 
  5802  048C                     	;# 
  5803  048C                     	;# 
  5804  048D                     	;# 
  5805  048E                     	;# 
  5806  048F                     	;# 
  5807  048F                     	;# 
  5808  0490                     	;# 
  5809  0491                     	;# 
  5810  0492                     	;# 
  5811  0492                     	;# 
  5812  0493                     	;# 
  5813  0494                     	;# 
  5814  0495                     	;# 
  5815  0495                     	;# 
  5816  0496                     	;# 
  5817  0497                     	;# 
  5818  0498                     	;# 
  5819  0499                     	;# 
  5820  049A                     	;# 
  5821  049B                     	;# 
  5822  049C                     	;# 
  5823  049D                     	;# 
  5824  058C                     	;# 
  5825  058C                     	;# 
  5826  058D                     	;# 
  5827  058E                     	;# 
  5828  058F                     	;# 
  5829  058F                     	;# 
  5830  0590                     	;# 
  5831  0591                     	;# 
  5832  0592                     	;# 
  5833  0593                     	;# 
  5834  059C                     	;# 
  5835  059C                     	;# 
  5836  059D                     	;# 
  5837  059D                     	;# 
  5838  059E                     	;# 
  5839  059F                     	;# 
  5840  060C                     	;# 
  5841  060C                     	;# 
  5842  060D                     	;# 
  5843  060D                     	;# 
  5844  060E                     	;# 
  5845  060F                     	;# 
  5846  0610                     	;# 
  5847  0611                     	;# 
  5848  0612                     	;# 
  5849  0613                     	;# 
  5850  0614                     	;# 
  5851  0616                     	;# 
  5852  0616                     	;# 
  5853  0617                     	;# 
  5854  0617                     	;# 
  5855  0618                     	;# 
  5856  0619                     	;# 
  5857  061A                     	;# 
  5858  061B                     	;# 
  5859  061C                     	;# 
  5860  061D                     	;# 
  5861  061E                     	;# 
  5862  070C                     	;# 
  5863  070D                     	;# 
  5864  070E                     	;# 
  5865  070F                     	;# 
  5866  0710                     	;# 
  5867  0711                     	;# 
  5868  0712                     	;# 
  5869  0713                     	;# 
  5870  0714                     	;# 
  5871  0716                     	;# 
  5872  0717                     	;# 
  5873  0718                     	;# 
  5874  0719                     	;# 
  5875  071A                     	;# 
  5876  071B                     	;# 
  5877  071C                     	;# 
  5878  071D                     	;# 
  5879  071E                     	;# 
  5880  0796                     	;# 
  5881  0797                     	;# 
  5882  0798                     	;# 
  5883  0799                     	;# 
  5884  079A                     	;# 
  5885  079B                     	;# 
  5886  079C                     	;# 
  5887  079D                     	;# 
  5888  080C                     	;# 
  5889  080D                     	;# 
  5890  080E                     	;# 
  5891  080F                     	;# 
  5892  0810                     	;# 
  5893  0811                     	;# 
  5894  0812                     	;# 
  5895  0813                     	;# 
  5896  0814                     	;# 
  5897  081A                     	;# 
  5898  081A                     	;# 
  5899  081B                     	;# 
  5900  081C                     	;# 
  5901  081C                     	;# 
  5902  081D                     	;# 
  5903  081E                     	;# 
  5904  081F                     	;# 
  5905  088C                     	;# 
  5906  088D                     	;# 
  5907  088E                     	;# 
  5908  088F                     	;# 
  5909  0890                     	;# 
  5910  0891                     	;# 
  5911  0892                     	;# 
  5912  0893                     	;# 
  5913  0895                     	;# 
  5914  0896                     	;# 
  5915  0897                     	;# 
  5916  0898                     	;# 
  5917  0899                     	;# 
  5918  089A                     	;# 
  5919  089B                     	;# 
  5920  090C                     	;# 
  5921  090E                     	;# 
  5922  090F                     	;# 
  5923  091F                     	;# 
  5924  098F                     	;# 
  5925  098F                     	;# 
  5926  0990                     	;# 
  5927  0991                     	;# 
  5928  0992                     	;# 
  5929  0993                     	;# 
  5930  0994                     	;# 
  5931  0995                     	;# 
  5932  0996                     	;# 
  5933  0997                     	;# 
  5934  1E0F                     	;# 
  5935  1E10                     	;# 
  5936  1E11                     	;# 
  5937  1E12                     	;# 
  5938  1E13                     	;# 
  5939  1E14                     	;# 
  5940  1E15                     	;# 
  5941  1E16                     	;# 
  5942  1E17                     	;# 
  5943  1E18                     	;# 
  5944  1E19                     	;# 
  5945  1E1A                     	;# 
  5946  1E1B                     	;# 
  5947  1E1C                     	;# 
  5948  1E1D                     	;# 
  5949  1E1E                     	;# 
  5950  1E1F                     	;# 
  5951  1E20                     	;# 
  5952  1E21                     	;# 
  5953  1E22                     	;# 
  5954  1E23                     	;# 
  5955  1E24                     	;# 
  5956  1E25                     	;# 
  5957  1E26                     	;# 
  5958  1E27                     	;# 
  5959  1E28                     	;# 
  5960  1E29                     	;# 
  5961  1E2A                     	;# 
  5962  1E2B                     	;# 
  5963  1E2C                     	;# 
  5964  1E2D                     	;# 
  5965  1E2E                     	;# 
  5966  1E2F                     	;# 
  5967  1E30                     	;# 
  5968  1E31                     	;# 
  5969  1E32                     	;# 
  5970  1E33                     	;# 
  5971  1E34                     	;# 
  5972  1E35                     	;# 
  5973  1E36                     	;# 
  5974  1E37                     	;# 
  5975  1E8F                     	;# 
  5976  1E90                     	;# 
  5977  1E91                     	;# 
  5978  1E92                     	;# 
  5979  1E93                     	;# 
  5980  1E94                     	;# 
  5981  1E95                     	;# 
  5982  1E96                     	;# 
  5983  1E97                     	;# 
  5984  1E9C                     	;# 
  5985  1E9D                     	;# 
  5986  1E9E                     	;# 
  5987  1EA1                     	;# 
  5988  1EA2                     	;# 
  5989  1EA3                     	;# 
  5990  1EA4                     	;# 
  5991  1EA9                     	;# 
  5992  1EAA                     	;# 
  5993  1EB1                     	;# 
  5994  1EB2                     	;# 
  5995  1EB8                     	;# 
  5996  1EB9                     	;# 
  5997  1EBA                     	;# 
  5998  1EBB                     	;# 
  5999  1EBC                     	;# 
  6000  1EBD                     	;# 
  6001  1EBE                     	;# 
  6002  1EC3                     	;# 
  6003  1EC5                     	;# 
  6004  1EC6                     	;# 
  6005  1EC7                     	;# 
  6006  1EC8                     	;# 
  6007  1EC9                     	;# 
  6008  1ECA                     	;# 
  6009  1ECB                     	;# 
  6010  1ECB                     	;# 
  6011  1ECB                     	;# 
  6012  1ECC                     	;# 
  6013  1ECC                     	;# 
  6014  1ECC                     	;# 
  6015  1F10                     	;# 
  6016  1F11                     	;# 
  6017  1F12                     	;# 
  6018  1F14                     	;# 
  6019  1F15                     	;# 
  6020  1F1C                     	;# 
  6021  1F1D                     	;# 
  6022  1F1E                     	;# 
  6023  1F1F                     	;# 
  6024  1F20                     	;# 
  6025  1F21                     	;# 
  6026  1F22                     	;# 
  6027  1F23                     	;# 
  6028  1F24                     	;# 
  6029  1F25                     	;# 
  6030  1F26                     	;# 
  6031  1F27                     	;# 
  6032  1F38                     	;# 
  6033  1F39                     	;# 
  6034  1F3A                     	;# 
  6035  1F3B                     	;# 
  6036  1F3C                     	;# 
  6037  1F3D                     	;# 
  6038  1F3E                     	;# 
  6039  1F3F                     	;# 
  6040  1F43                     	;# 
  6041  1F44                     	;# 
  6042  1F45                     	;# 
  6043  1F46                     	;# 
  6044  1F47                     	;# 
  6045  1F48                     	;# 
  6046  1F49                     	;# 
  6047  1F4A                     	;# 
  6048  1F4E                     	;# 
  6049  1F4F                     	;# 
  6050  1F50                     	;# 
  6051  1F51                     	;# 
  6052  1F52                     	;# 
  6053  1F53                     	;# 
  6054  1F54                     	;# 
  6055  1F55                     	;# 
  6056  1FE4                     	;# 
  6057  1FE5                     	;# 
  6058  1FE6                     	;# 
  6059  1FE7                     	;# 
  6060  1FE8                     	;# 
  6061  1FE8                     	;# 
  6062  1FE9                     	;# 
  6063  1FEA                     	;# 
  6064  1FEB                     	;# 
  6065  1FED                     	;# 
  6066  1FEE                     	;# 
  6067  1FEF                     	;# 
  6068  0000                     	;# 
  6069  0001                     	;# 
  6070  0002                     	;# 
  6071  0003                     	;# 
  6072  0004                     	;# 
  6073  0005                     	;# 
  6074  0006                     	;# 
  6075  0007                     	;# 
  6076  0008                     	;# 
  6077  0009                     	;# 
  6078  000A                     	;# 
  6079  000B                     	;# 
  6080  000C                     	;# 
  6081  000D                     	;# 
  6082  000E                     	;# 
  6083  0012                     	;# 
  6084  0013                     	;# 
  6085  0014                     	;# 
  6086  0018                     	;# 
  6087  0019                     	;# 
  6088  001A                     	;# 
  6089  008C                     	;# 
  6090  008C                     	;# 
  6091  008D                     	;# 
  6092  008E                     	;# 
  6093  008E                     	;# 
  6094  008F                     	;# 
  6095  0090                     	;# 
  6096  0090                     	;# 
  6097  0091                     	;# 
  6098  0092                     	;# 
  6099  0092                     	;# 
  6100  0093                     	;# 
  6101  0094                     	;# 
  6102  0094                     	;# 
  6103  0095                     	;# 
  6104  0096                     	;# 
  6105  0096                     	;# 
  6106  0097                     	;# 
  6107  0098                     	;# 
  6108  0099                     	;# 
  6109  009A                     	;# 
  6110  009B                     	;# 
  6111  009B                     	;# 
  6112  009C                     	;# 
  6113  009D                     	;# 
  6114  009D                     	;# 
  6115  009E                     	;# 
  6116  009F                     	;# 
  6117  010C                     	;# 
  6118  010C                     	;# 
  6119  010D                     	;# 
  6120  010E                     	;# 
  6121  010F                     	;# 
  6122  010F                     	;# 
  6123  0110                     	;# 
  6124  0111                     	;# 
  6125  0112                     	;# 
  6126  0113                     	;# 
  6127  0114                     	;# 
  6128  0115                     	;# 
  6129  0116                     	;# 
  6130  0117                     	;# 
  6131  0118                     	;# 
  6132  0119                     	;# 
  6133  0119                     	;# 
  6134  0119                     	;# 
  6135  011A                     	;# 
  6136  011A                     	;# 
  6137  011A                     	;# 
  6138  011B                     	;# 
  6139  011B                     	;# 
  6140  011B                     	;# 
  6141  011B                     	;# 
  6142  011B                     	;# 
  6143  011C                     	;# 
  6144  011C                     	;# 
  6145  011C                     	;# 
  6146  011D                     	;# 
  6147  011D                     	;# 
  6148  011D                     	;# 
  6149  011E                     	;# 
  6150  011E                     	;# 
  6151  011E                     	;# 
  6152  011F                     	;# 
  6153  011F                     	;# 
  6154  011F                     	;# 
  6155  011F                     	;# 
  6156  011F                     	;# 
  6157  018C                     	;# 
  6158  018D                     	;# 
  6159  018E                     	;# 
  6160  018F                     	;# 
  6161  0190                     	;# 
  6162  0191                     	;# 
  6163  0192                     	;# 
  6164  0196                     	;# 
  6165  0197                     	;# 
  6166  0198                     	;# 
  6167  0199                     	;# 
  6168  019A                     	;# 
  6169  019B                     	;# 
  6170  019C                     	;# 
  6171  020C                     	;# 
  6172  020D                     	;# 
  6173  020E                     	;# 
  6174  020E                     	;# 
  6175  020F                     	;# 
  6176  020F                     	;# 
  6177  0210                     	;# 
  6178  0210                     	;# 
  6179  0211                     	;# 
  6180  0211                     	;# 
  6181  0212                     	;# 
  6182  0213                     	;# 
  6183  0214                     	;# 
  6184  0214                     	;# 
  6185  0215                     	;# 
  6186  0215                     	;# 
  6187  0216                     	;# 
  6188  0216                     	;# 
  6189  0217                     	;# 
  6190  0217                     	;# 
  6191  0218                     	;# 
  6192  0219                     	;# 
  6193  021A                     	;# 
  6194  021A                     	;# 
  6195  021B                     	;# 
  6196  021B                     	;# 
  6197  021C                     	;# 
  6198  021C                     	;# 
  6199  021D                     	;# 
  6200  021D                     	;# 
  6201  021E                     	;# 
  6202  021F                     	;# 
  6203  028C                     	;# 
  6204  028C                     	;# 
  6205  028D                     	;# 
  6206  028D                     	;# 
  6207  028E                     	;# 
  6208  028F                     	;# 
  6209  0290                     	;# 
  6210  0291                     	;# 
  6211  0292                     	;# 
  6212  0292                     	;# 
  6213  0293                     	;# 
  6214  0293                     	;# 
  6215  0294                     	;# 
  6216  0295                     	;# 
  6217  0296                     	;# 
  6218  0297                     	;# 
  6219  0298                     	;# 
  6220  0298                     	;# 
  6221  0299                     	;# 
  6222  0299                     	;# 
  6223  029A                     	;# 
  6224  029B                     	;# 
  6225  029C                     	;# 
  6226  029D                     	;# 
  6227  029F                     	;# 
  6228  030C                     	;# 
  6229  030C                     	;# 
  6230  030D                     	;# 
  6231  030E                     	;# 
  6232  030F                     	;# 
  6233  0310                     	;# 
  6234  0310                     	;# 
  6235  0311                     	;# 
  6236  0312                     	;# 
  6237  0313                     	;# 
  6238  0314                     	;# 
  6239  0314                     	;# 
  6240  0315                     	;# 
  6241  0316                     	;# 
  6242  0317                     	;# 
  6243  0318                     	;# 
  6244  0318                     	;# 
  6245  0319                     	;# 
  6246  031A                     	;# 
  6247  031B                     	;# 
  6248  038C                     	;# 
  6249  038C                     	;# 
  6250  038D                     	;# 
  6251  038E                     	;# 
  6252  0390                     	;# 
  6253  0390                     	;# 
  6254  0391                     	;# 
  6255  0392                     	;# 
  6256  048C                     	;# 
  6257  048C                     	;# 
  6258  048D                     	;# 
  6259  048E                     	;# 
  6260  048F                     	;# 
  6261  048F                     	;# 
  6262  0490                     	;# 
  6263  0491                     	;# 
  6264  0492                     	;# 
  6265  0492                     	;# 
  6266  0493                     	;# 
  6267  0494                     	;# 
  6268  0495                     	;# 
  6269  0495                     	;# 
  6270  0496                     	;# 
  6271  0497                     	;# 
  6272  0498                     	;# 
  6273  0499                     	;# 
  6274  049A                     	;# 
  6275  049B                     	;# 
  6276  049C                     	;# 
  6277  049D                     	;# 
  6278  058C                     	;# 
  6279  058C                     	;# 
  6280  058D                     	;# 
  6281  058E                     	;# 
  6282  058F                     	;# 
  6283  058F                     	;# 
  6284  0590                     	;# 
  6285  0591                     	;# 
  6286  0592                     	;# 
  6287  0593                     	;# 
  6288  059C                     	;# 
  6289  059C                     	;# 
  6290  059D                     	;# 
  6291  059D                     	;# 
  6292  059E                     	;# 
  6293  059F                     	;# 
  6294  060C                     	;# 
  6295  060C                     	;# 
  6296  060D                     	;# 
  6297  060D                     	;# 
  6298  060E                     	;# 
  6299  060F                     	;# 
  6300  0610                     	;# 
  6301  0611                     	;# 
  6302  0612                     	;# 
  6303  0613                     	;# 
  6304  0614                     	;# 
  6305  0616                     	;# 
  6306  0616                     	;# 
  6307  0617                     	;# 
  6308  0617                     	;# 
  6309  0618                     	;# 
  6310  0619                     	;# 
  6311  061A                     	;# 
  6312  061B                     	;# 
  6313  061C                     	;# 
  6314  061D                     	;# 
  6315  061E                     	;# 
  6316  070C                     	;# 
  6317  070D                     	;# 
  6318  070E                     	;# 
  6319  070F                     	;# 
  6320  0710                     	;# 
  6321  0711                     	;# 
  6322  0712                     	;# 
  6323  0713                     	;# 
  6324  0714                     	;# 
  6325  0716                     	;# 
  6326  0717                     	;# 
  6327  0718                     	;# 
  6328  0719                     	;# 
  6329  071A                     	;# 
  6330  071B                     	;# 
  6331  071C                     	;# 
  6332  071D                     	;# 
  6333  071E                     	;# 
  6334  0796                     	;# 
  6335  0797                     	;# 
  6336  0798                     	;# 
  6337  0799                     	;# 
  6338  079A                     	;# 
  6339  079B                     	;# 
  6340  079C                     	;# 
  6341  079D                     	;# 
  6342  080C                     	;# 
  6343  080D                     	;# 
  6344  080E                     	;# 
  6345  080F                     	;# 
  6346  0810                     	;# 
  6347  0811                     	;# 
  6348  0812                     	;# 
  6349  0813                     	;# 
  6350  0814                     	;# 
  6351  081A                     	;# 
  6352  081A                     	;# 
  6353  081B                     	;# 
  6354  081C                     	;# 
  6355  081C                     	;# 
  6356  081D                     	;# 
  6357  081E                     	;# 
  6358  081F                     	;# 
  6359  088C                     	;# 
  6360  088D                     	;# 
  6361  088E                     	;# 
  6362  088F                     	;# 
  6363  0890                     	;# 
  6364  0891                     	;# 
  6365  0892                     	;# 
  6366  0893                     	;# 
  6367  0895                     	;# 
  6368  0896                     	;# 
  6369  0897                     	;# 
  6370  0898                     	;# 
  6371  0899                     	;# 
  6372  089A                     	;# 
  6373  089B                     	;# 
  6374  090C                     	;# 
  6375  090E                     	;# 
  6376  090F                     	;# 
  6377  091F                     	;# 
  6378  098F                     	;# 
  6379  098F                     	;# 
  6380  0990                     	;# 
  6381  0991                     	;# 
  6382  0992                     	;# 
  6383  0993                     	;# 
  6384  0994                     	;# 
  6385  0995                     	;# 
  6386  0996                     	;# 
  6387  0997                     	;# 
  6388  1E0F                     	;# 
  6389  1E10                     	;# 
  6390  1E11                     	;# 
  6391  1E12                     	;# 
  6392  1E13                     	;# 
  6393  1E14                     	;# 
  6394  1E15                     	;# 
  6395  1E16                     	;# 
  6396  1E17                     	;# 
  6397  1E18                     	;# 
  6398  1E19                     	;# 
  6399  1E1A                     	;# 
  6400  1E1B                     	;# 
  6401  1E1C                     	;# 
  6402  1E1D                     	;# 
  6403  1E1E                     	;# 
  6404  1E1F                     	;# 
  6405  1E20                     	;# 
  6406  1E21                     	;# 
  6407  1E22                     	;# 
  6408  1E23                     	;# 
  6409  1E24                     	;# 
  6410  1E25                     	;# 
  6411  1E26                     	;# 
  6412  1E27                     	;# 
  6413  1E28                     	;# 
  6414  1E29                     	;# 
  6415  1E2A                     	;# 
  6416  1E2B                     	;# 
  6417  1E2C                     	;# 
  6418  1E2D                     	;# 
  6419  1E2E                     	;# 
  6420  1E2F                     	;# 
  6421  1E30                     	;# 
  6422  1E31                     	;# 
  6423  1E32                     	;# 
  6424  1E33                     	;# 
  6425  1E34                     	;# 
  6426  1E35                     	;# 
  6427  1E36                     	;# 
  6428  1E37                     	;# 
  6429  1E8F                     	;# 
  6430  1E90                     	;# 
  6431  1E91                     	;# 
  6432  1E92                     	;# 
  6433  1E93                     	;# 
  6434  1E94                     	;# 
  6435  1E95                     	;# 
  6436  1E96                     	;# 
  6437  1E97                     	;# 
  6438  1E9C                     	;# 
  6439  1E9D                     	;# 
  6440  1E9E                     	;# 
  6441  1EA1                     	;# 
  6442  1EA2                     	;# 
  6443  1EA3                     	;# 
  6444  1EA4                     	;# 
  6445  1EA9                     	;# 
  6446  1EAA                     	;# 
  6447  1EB1                     	;# 
  6448  1EB2                     	;# 
  6449  1EB8                     	;# 
  6450  1EB9                     	;# 
  6451  1EBA                     	;# 
  6452  1EBB                     	;# 
  6453  1EBC                     	;# 
  6454  1EBD                     	;# 
  6455  1EBE                     	;# 
  6456  1EC3                     	;# 
  6457  1EC5                     	;# 
  6458  1EC6                     	;# 
  6459  1EC7                     	;# 
  6460  1EC8                     	;# 
  6461  1EC9                     	;# 
  6462  1ECA                     	;# 
  6463  1ECB                     	;# 
  6464  1ECB                     	;# 
  6465  1ECB                     	;# 
  6466  1ECC                     	;# 
  6467  1ECC                     	;# 
  6468  1ECC                     	;# 
  6469  1F10                     	;# 
  6470  1F11                     	;# 
  6471  1F12                     	;# 
  6472  1F14                     	;# 
  6473  1F15                     	;# 
  6474  1F1C                     	;# 
  6475  1F1D                     	;# 
  6476  1F1E                     	;# 
  6477  1F1F                     	;# 
  6478  1F20                     	;# 
  6479  1F21                     	;# 
  6480  1F22                     	;# 
  6481  1F23                     	;# 
  6482  1F24                     	;# 
  6483  1F25                     	;# 
  6484  1F26                     	;# 
  6485  1F27                     	;# 
  6486  1F38                     	;# 
  6487  1F39                     	;# 
  6488  1F3A                     	;# 
  6489  1F3B                     	;# 
  6490  1F3C                     	;# 
  6491  1F3D                     	;# 
  6492  1F3E                     	;# 
  6493  1F3F                     	;# 
  6494  1F43                     	;# 
  6495  1F44                     	;# 
  6496  1F45                     	;# 
  6497  1F46                     	;# 
  6498  1F47                     	;# 
  6499  1F48                     	;# 
  6500  1F49                     	;# 
  6501  1F4A                     	;# 
  6502  1F4E                     	;# 
  6503  1F4F                     	;# 
  6504  1F50                     	;# 
  6505  1F51                     	;# 
  6506  1F52                     	;# 
  6507  1F53                     	;# 
  6508  1F54                     	;# 
  6509  1F55                     	;# 
  6510  1FE4                     	;# 
  6511  1FE5                     	;# 
  6512  1FE6                     	;# 
  6513  1FE7                     	;# 
  6514  1FE8                     	;# 
  6515  1FE8                     	;# 
  6516  1FE9                     	;# 
  6517  1FEA                     	;# 
  6518  1FEB                     	;# 
  6519  1FED                     	;# 
  6520  1FEE                     	;# 
  6521  1FEF                     	;# 
  6522  0000                     	;# 
  6523  0001                     	;# 
  6524  0002                     	;# 
  6525  0003                     	;# 
  6526  0004                     	;# 
  6527  0005                     	;# 
  6528  0006                     	;# 
  6529  0007                     	;# 
  6530  0008                     	;# 
  6531  0009                     	;# 
  6532  000A                     	;# 
  6533  000B                     	;# 
  6534  000C                     	;# 
  6535  000D                     	;# 
  6536  000E                     	;# 
  6537  0012                     	;# 
  6538  0013                     	;# 
  6539  0014                     	;# 
  6540  0018                     	;# 
  6541  0019                     	;# 
  6542  001A                     	;# 
  6543  008C                     	;# 
  6544  008C                     	;# 
  6545  008D                     	;# 
  6546  008E                     	;# 
  6547  008E                     	;# 
  6548  008F                     	;# 
  6549  0090                     	;# 
  6550  0090                     	;# 
  6551  0091                     	;# 
  6552  0092                     	;# 
  6553  0092                     	;# 
  6554  0093                     	;# 
  6555  0094                     	;# 
  6556  0094                     	;# 
  6557  0095                     	;# 
  6558  0096                     	;# 
  6559  0096                     	;# 
  6560  0097                     	;# 
  6561  0098                     	;# 
  6562  0099                     	;# 
  6563  009A                     	;# 
  6564  009B                     	;# 
  6565  009B                     	;# 
  6566  009C                     	;# 
  6567  009D                     	;# 
  6568  009D                     	;# 
  6569  009E                     	;# 
  6570  009F                     	;# 
  6571  010C                     	;# 
  6572  010C                     	;# 
  6573  010D                     	;# 
  6574  010E                     	;# 
  6575  010F                     	;# 
  6576  010F                     	;# 
  6577  0110                     	;# 
  6578  0111                     	;# 
  6579  0112                     	;# 
  6580  0113                     	;# 
  6581  0114                     	;# 
  6582  0115                     	;# 
  6583  0116                     	;# 
  6584  0117                     	;# 
  6585  0118                     	;# 
  6586  0119                     	;# 
  6587  0119                     	;# 
  6588  0119                     	;# 
  6589  011A                     	;# 
  6590  011A                     	;# 
  6591  011A                     	;# 
  6592  011B                     	;# 
  6593  011B                     	;# 
  6594  011B                     	;# 
  6595  011B                     	;# 
  6596  011B                     	;# 
  6597  011C                     	;# 
  6598  011C                     	;# 
  6599  011C                     	;# 
  6600  011D                     	;# 
  6601  011D                     	;# 
  6602  011D                     	;# 
  6603  011E                     	;# 
  6604  011E                     	;# 
  6605  011E                     	;# 
  6606  011F                     	;# 
  6607  011F                     	;# 
  6608  011F                     	;# 
  6609  011F                     	;# 
  6610  011F                     	;# 
  6611  018C                     	;# 
  6612  018D                     	;# 
  6613  018E                     	;# 
  6614  018F                     	;# 
  6615  0190                     	;# 
  6616  0191                     	;# 
  6617  0192                     	;# 
  6618  0196                     	;# 
  6619  0197                     	;# 
  6620  0198                     	;# 
  6621  0199                     	;# 
  6622  019A                     	;# 
  6623  019B                     	;# 
  6624  019C                     	;# 
  6625  020C                     	;# 
  6626  020D                     	;# 
  6627  020E                     	;# 
  6628  020E                     	;# 
  6629  020F                     	;# 
  6630  020F                     	;# 
  6631  0210                     	;# 
  6632  0210                     	;# 
  6633  0211                     	;# 
  6634  0211                     	;# 
  6635  0212                     	;# 
  6636  0213                     	;# 
  6637  0214                     	;# 
  6638  0214                     	;# 
  6639  0215                     	;# 
  6640  0215                     	;# 
  6641  0216                     	;# 
  6642  0216                     	;# 
  6643  0217                     	;# 
  6644  0217                     	;# 
  6645  0218                     	;# 
  6646  0219                     	;# 
  6647  021A                     	;# 
  6648  021A                     	;# 
  6649  021B                     	;# 
  6650  021B                     	;# 
  6651  021C                     	;# 
  6652  021C                     	;# 
  6653  021D                     	;# 
  6654  021D                     	;# 
  6655  021E                     	;# 
  6656  021F                     	;# 
  6657  028C                     	;# 
  6658  028C                     	;# 
  6659  028D                     	;# 
  6660  028D                     	;# 
  6661  028E                     	;# 
  6662  028F                     	;# 
  6663  0290                     	;# 
  6664  0291                     	;# 
  6665  0292                     	;# 
  6666  0292                     	;# 
  6667  0293                     	;# 
  6668  0293                     	;# 
  6669  0294                     	;# 
  6670  0295                     	;# 
  6671  0296                     	;# 
  6672  0297                     	;# 
  6673  0298                     	;# 
  6674  0298                     	;# 
  6675  0299                     	;# 
  6676  0299                     	;# 
  6677  029A                     	;# 
  6678  029B                     	;# 
  6679  029C                     	;# 
  6680  029D                     	;# 
  6681  029F                     	;# 
  6682  030C                     	;# 
  6683  030C                     	;# 
  6684  030D                     	;# 
  6685  030E                     	;# 
  6686  030F                     	;# 
  6687  0310                     	;# 
  6688  0310                     	;# 
  6689  0311                     	;# 
  6690  0312                     	;# 
  6691  0313                     	;# 
  6692  0314                     	;# 
  6693  0314                     	;# 
  6694  0315                     	;# 
  6695  0316                     	;# 
  6696  0317                     	;# 
  6697  0318                     	;# 
  6698  0318                     	;# 
  6699  0319                     	;# 
  6700  031A                     	;# 
  6701  031B                     	;# 
  6702  038C                     	;# 
  6703  038C                     	;# 
  6704  038D                     	;# 
  6705  038E                     	;# 
  6706  0390                     	;# 
  6707  0390                     	;# 
  6708  0391                     	;# 
  6709  0392                     	;# 
  6710  048C                     	;# 
  6711  048C                     	;# 
  6712  048D                     	;# 
  6713  048E                     	;# 
  6714  048F                     	;# 
  6715  048F                     	;# 
  6716  0490                     	;# 
  6717  0491                     	;# 
  6718  0492                     	;# 
  6719  0492                     	;# 
  6720  0493                     	;# 
  6721  0494                     	;# 
  6722  0495                     	;# 
  6723  0495                     	;# 
  6724  0496                     	;# 
  6725  0497                     	;# 
  6726  0498                     	;# 
  6727  0499                     	;# 
  6728  049A                     	;# 
  6729  049B                     	;# 
  6730  049C                     	;# 
  6731  049D                     	;# 
  6732  058C                     	;# 
  6733  058C                     	;# 
  6734  058D                     	;# 
  6735  058E                     	;# 
  6736  058F                     	;# 
  6737  058F                     	;# 
  6738  0590                     	;# 
  6739  0591                     	;# 
  6740  0592                     	;# 
  6741  0593                     	;# 
  6742  059C                     	;# 
  6743  059C                     	;# 
  6744  059D                     	;# 
  6745  059D                     	;# 
  6746  059E                     	;# 
  6747  059F                     	;# 
  6748  060C                     	;# 
  6749  060C                     	;# 
  6750  060D                     	;# 
  6751  060D                     	;# 
  6752  060E                     	;# 
  6753  060F                     	;# 
  6754  0610                     	;# 
  6755  0611                     	;# 
  6756  0612                     	;# 
  6757  0613                     	;# 
  6758  0614                     	;# 
  6759  0616                     	;# 
  6760  0616                     	;# 
  6761  0617                     	;# 
  6762  0617                     	;# 
  6763  0618                     	;# 
  6764  0619                     	;# 
  6765  061A                     	;# 
  6766  061B                     	;# 
  6767  061C                     	;# 
  6768  061D                     	;# 
  6769  061E                     	;# 
  6770  070C                     	;# 
  6771  070D                     	;# 
  6772  070E                     	;# 
  6773  070F                     	;# 
  6774  0710                     	;# 
  6775  0711                     	;# 
  6776  0712                     	;# 
  6777  0713                     	;# 
  6778  0714                     	;# 
  6779  0716                     	;# 
  6780  0717                     	;# 
  6781  0718                     	;# 
  6782  0719                     	;# 
  6783  071A                     	;# 
  6784  071B                     	;# 
  6785  071C                     	;# 
  6786  071D                     	;# 
  6787  071E                     	;# 
  6788  0796                     	;# 
  6789  0797                     	;# 
  6790  0798                     	;# 
  6791  0799                     	;# 
  6792  079A                     	;# 
  6793  079B                     	;# 
  6794  079C                     	;# 
  6795  079D                     	;# 
  6796  080C                     	;# 
  6797  080D                     	;# 
  6798  080E                     	;# 
  6799  080F                     	;# 
  6800  0810                     	;# 
  6801  0811                     	;# 
  6802  0812                     	;# 
  6803  0813                     	;# 
  6804  0814                     	;# 
  6805  081A                     	;# 
  6806  081A                     	;# 
  6807  081B                     	;# 
  6808  081C                     	;# 
  6809  081C                     	;# 
  6810  081D                     	;# 
  6811  081E                     	;# 
  6812  081F                     	;# 
  6813  088C                     	;# 
  6814  088D                     	;# 
  6815  088E                     	;# 
  6816  088F                     	;# 
  6817  0890                     	;# 
  6818  0891                     	;# 
  6819  0892                     	;# 
  6820  0893                     	;# 
  6821  0895                     	;# 
  6822  0896                     	;# 
  6823  0897                     	;# 
  6824  0898                     	;# 
  6825  0899                     	;# 
  6826  089A                     	;# 
  6827  089B                     	;# 
  6828  090C                     	;# 
  6829  090E                     	;# 
  6830  090F                     	;# 
  6831  091F                     	;# 
  6832  098F                     	;# 
  6833  098F                     	;# 
  6834  0990                     	;# 
  6835  0991                     	;# 
  6836  0992                     	;# 
  6837  0993                     	;# 
  6838  0994                     	;# 
  6839  0995                     	;# 
  6840  0996                     	;# 
  6841  0997                     	;# 
  6842  1E0F                     	;# 
  6843  1E10                     	;# 
  6844  1E11                     	;# 
  6845  1E12                     	;# 
  6846  1E13                     	;# 
  6847  1E14                     	;# 
  6848  1E15                     	;# 
  6849  1E16                     	;# 
  6850  1E17                     	;# 
  6851  1E18                     	;# 
  6852  1E19                     	;# 
  6853  1E1A                     	;# 
  6854  1E1B                     	;# 
  6855  1E1C                     	;# 
  6856  1E1D                     	;# 
  6857  1E1E                     	;# 
  6858  1E1F                     	;# 
  6859  1E20                     	;# 
  6860  1E21                     	;# 
  6861  1E22                     	;# 
  6862  1E23                     	;# 
  6863  1E24                     	;# 
  6864  1E25                     	;# 
  6865  1E26                     	;# 
  6866  1E27                     	;# 
  6867  1E28                     	;# 
  6868  1E29                     	;# 
  6869  1E2A                     	;# 
  6870  1E2B                     	;# 
  6871  1E2C                     	;# 
  6872  1E2D                     	;# 
  6873  1E2E                     	;# 
  6874  1E2F                     	;# 
  6875  1E30                     	;# 
  6876  1E31                     	;# 
  6877  1E32                     	;# 
  6878  1E33                     	;# 
  6879  1E34                     	;# 
  6880  1E35                     	;# 
  6881  1E36                     	;# 
  6882  1E37                     	;# 
  6883  1E8F                     	;# 
  6884  1E90                     	;# 
  6885  1E91                     	;# 
  6886  1E92                     	;# 
  6887  1E93                     	;# 
  6888  1E94                     	;# 
  6889  1E95                     	;# 
  6890  1E96                     	;# 
  6891  1E97                     	;# 
  6892  1E9C                     	;# 
  6893  1E9D                     	;# 
  6894  1E9E                     	;# 
  6895  1EA1                     	;# 
  6896  1EA2                     	;# 
  6897  1EA3                     	;# 
  6898  1EA4                     	;# 
  6899  1EA9                     	;# 
  6900  1EAA                     	;# 
  6901  1EB1                     	;# 
  6902  1EB2                     	;# 
  6903  1EB8                     	;# 
  6904  1EB9                     	;# 
  6905  1EBA                     	;# 
  6906  1EBB                     	;# 
  6907  1EBC                     	;# 
  6908  1EBD                     	;# 
  6909  1EBE                     	;# 
  6910  1EC3                     	;# 
  6911  1EC5                     	;# 
  6912  1EC6                     	;# 
  6913  1EC7                     	;# 
  6914  1EC8                     	;# 
  6915  1EC9                     	;# 
  6916  1ECA                     	;# 
  6917  1ECB                     	;# 
  6918  1ECB                     	;# 
  6919  1ECB                     	;# 
  6920  1ECC                     	;# 
  6921  1ECC                     	;# 
  6922  1ECC                     	;# 
  6923  1F10                     	;# 
  6924  1F11                     	;# 
  6925  1F12                     	;# 
  6926  1F14                     	;# 
  6927  1F15                     	;# 
  6928  1F1C                     	;# 
  6929  1F1D                     	;# 
  6930  1F1E                     	;# 
  6931  1F1F                     	;# 
  6932  1F20                     	;# 
  6933  1F21                     	;# 
  6934  1F22                     	;# 
  6935  1F23                     	;# 
  6936  1F24                     	;# 
  6937  1F25                     	;# 
  6938  1F26                     	;# 
  6939  1F27                     	;# 
  6940  1F38                     	;# 
  6941  1F39                     	;# 
  6942  1F3A                     	;# 
  6943  1F3B                     	;# 
  6944  1F3C                     	;# 
  6945  1F3D                     	;# 
  6946  1F3E                     	;# 
  6947  1F3F                     	;# 
  6948  1F43                     	;# 
  6949  1F44                     	;# 
  6950  1F45                     	;# 
  6951  1F46                     	;# 
  6952  1F47                     	;# 
  6953  1F48                     	;# 
  6954  1F49                     	;# 
  6955  1F4A                     	;# 
  6956  1F4E                     	;# 
  6957  1F4F                     	;# 
  6958  1F50                     	;# 
  6959  1F51                     	;# 
  6960  1F52                     	;# 
  6961  1F53                     	;# 
  6962  1F54                     	;# 
  6963  1F55                     	;# 
  6964  1FE4                     	;# 
  6965  1FE5                     	;# 
  6966  1FE6                     	;# 
  6967  1FE7                     	;# 
  6968  1FE8                     	;# 
  6969  1FE8                     	;# 
  6970  1FE9                     	;# 
  6971  1FEA                     	;# 
  6972  1FEB                     	;# 
  6973  1FED                     	;# 
  6974  1FEE                     	;# 
  6975  1FEF                     	;# 
  6976  0000                     	;# 
  6977  0001                     	;# 
  6978  0002                     	;# 
  6979  0003                     	;# 
  6980  0004                     	;# 
  6981  0005                     	;# 
  6982  0006                     	;# 
  6983  0007                     	;# 
  6984  0008                     	;# 
  6985  0009                     	;# 
  6986  000A                     	;# 
  6987  000B                     	;# 
  6988  000C                     	;# 
  6989  000D                     	;# 
  6990  000E                     	;# 
  6991  0012                     	;# 
  6992  0013                     	;# 
  6993  0014                     	;# 
  6994  0018                     	;# 
  6995  0019                     	;# 
  6996  001A                     	;# 
  6997  008C                     	;# 
  6998  008C                     	;# 
  6999  008D                     	;# 
  7000  008E                     	;# 
  7001  008E                     	;# 
  7002  008F                     	;# 
  7003  0090                     	;# 
  7004  0090                     	;# 
  7005  0091                     	;# 
  7006  0092                     	;# 
  7007  0092                     	;# 
  7008  0093                     	;# 
  7009  0094                     	;# 
  7010  0094                     	;# 
  7011  0095                     	;# 
  7012  0096                     	;# 
  7013  0096                     	;# 
  7014  0097                     	;# 
  7015  0098                     	;# 
  7016  0099                     	;# 
  7017  009A                     	;# 
  7018  009B                     	;# 
  7019  009B                     	;# 
  7020  009C                     	;# 
  7021  009D                     	;# 
  7022  009D                     	;# 
  7023  009E                     	;# 
  7024  009F                     	;# 
  7025  010C                     	;# 
  7026  010C                     	;# 
  7027  010D                     	;# 
  7028  010E                     	;# 
  7029  010F                     	;# 
  7030  010F                     	;# 
  7031  0110                     	;# 
  7032  0111                     	;# 
  7033  0112                     	;# 
  7034  0113                     	;# 
  7035  0114                     	;# 
  7036  0115                     	;# 
  7037  0116                     	;# 
  7038  0117                     	;# 
  7039  0118                     	;# 
  7040  0119                     	;# 
  7041  0119                     	;# 
  7042  0119                     	;# 
  7043  011A                     	;# 
  7044  011A                     	;# 
  7045  011A                     	;# 
  7046  011B                     	;# 
  7047  011B                     	;# 
  7048  011B                     	;# 
  7049  011B                     	;# 
  7050  011B                     	;# 
  7051  011C                     	;# 
  7052  011C                     	;# 
  7053  011C                     	;# 
  7054  011D                     	;# 
  7055  011D                     	;# 
  7056  011D                     	;# 
  7057  011E                     	;# 
  7058  011E                     	;# 
  7059  011E                     	;# 
  7060  011F                     	;# 
  7061  011F                     	;# 
  7062  011F                     	;# 
  7063  011F                     	;# 
  7064  011F                     	;# 
  7065  018C                     	;# 
  7066  018D                     	;# 
  7067  018E                     	;# 
  7068  018F                     	;# 
  7069  0190                     	;# 
  7070  0191                     	;# 
  7071  0192                     	;# 
  7072  0196                     	;# 
  7073  0197                     	;# 
  7074  0198                     	;# 
  7075  0199                     	;# 
  7076  019A                     	;# 
  7077  019B                     	;# 
  7078  019C                     	;# 
  7079  020C                     	;# 
  7080  020D                     	;# 
  7081  020E                     	;# 
  7082  020E                     	;# 
  7083  020F                     	;# 
  7084  020F                     	;# 
  7085  0210                     	;# 
  7086  0210                     	;# 
  7087  0211                     	;# 
  7088  0211                     	;# 
  7089  0212                     	;# 
  7090  0213                     	;# 
  7091  0214                     	;# 
  7092  0214                     	;# 
  7093  0215                     	;# 
  7094  0215                     	;# 
  7095  0216                     	;# 
  7096  0216                     	;# 
  7097  0217                     	;# 
  7098  0217                     	;# 
  7099  0218                     	;# 
  7100  0219                     	;# 
  7101  021A                     	;# 
  7102  021A                     	;# 
  7103  021B                     	;# 
  7104  021B                     	;# 
  7105  021C                     	;# 
  7106  021C                     	;# 
  7107  021D                     	;# 
  7108  021D                     	;# 
  7109  021E                     	;# 
  7110  021F                     	;# 
  7111  028C                     	;# 
  7112  028C                     	;# 
  7113  028D                     	;# 
  7114  028D                     	;# 
  7115  028E                     	;# 
  7116  028F                     	;# 
  7117  0290                     	;# 
  7118  0291                     	;# 
  7119  0292                     	;# 
  7120  0292                     	;# 
  7121  0293                     	;# 
  7122  0293                     	;# 
  7123  0294                     	;# 
  7124  0295                     	;# 
  7125  0296                     	;# 
  7126  0297                     	;# 
  7127  0298                     	;# 
  7128  0298                     	;# 
  7129  0299                     	;# 
  7130  0299                     	;# 
  7131  029A                     	;# 
  7132  029B                     	;# 
  7133  029C                     	;# 
  7134  029D                     	;# 
  7135  029F                     	;# 
  7136  030C                     	;# 
  7137  030C                     	;# 
  7138  030D                     	;# 
  7139  030E                     	;# 
  7140  030F                     	;# 
  7141  0310                     	;# 
  7142  0310                     	;# 
  7143  0311                     	;# 
  7144  0312                     	;# 
  7145  0313                     	;# 
  7146  0314                     	;# 
  7147  0314                     	;# 
  7148  0315                     	;# 
  7149  0316                     	;# 
  7150  0317                     	;# 
  7151  0318                     	;# 
  7152  0318                     	;# 
  7153  0319                     	;# 
  7154  031A                     	;# 
  7155  031B                     	;# 
  7156  038C                     	;# 
  7157  038C                     	;# 
  7158  038D                     	;# 
  7159  038E                     	;# 
  7160  0390                     	;# 
  7161  0390                     	;# 
  7162  0391                     	;# 
  7163  0392                     	;# 
  7164  048C                     	;# 
  7165  048C                     	;# 
  7166  048D                     	;# 
  7167  048E                     	;# 
  7168  048F                     	;# 
  7169  048F                     	;# 
  7170  0490                     	;# 
  7171  0491                     	;# 
  7172  0492                     	;# 
  7173  0492                     	;# 
  7174  0493                     	;# 
  7175  0494                     	;# 
  7176  0495                     	;# 
  7177  0495                     	;# 
  7178  0496                     	;# 
  7179  0497                     	;# 
  7180  0498                     	;# 
  7181  0499                     	;# 
  7182  049A                     	;# 
  7183  049B                     	;# 
  7184  049C                     	;# 
  7185  049D                     	;# 
  7186  058C                     	;# 
  7187  058C                     	;# 
  7188  058D                     	;# 
  7189  058E                     	;# 
  7190  058F                     	;# 
  7191  058F                     	;# 
  7192  0590                     	;# 
  7193  0591                     	;# 
  7194  0592                     	;# 
  7195  0593                     	;# 
  7196  059C                     	;# 
  7197  059C                     	;# 
  7198  059D                     	;# 
  7199  059D                     	;# 
  7200  059E                     	;# 
  7201  059F                     	;# 
  7202  060C                     	;# 
  7203  060C                     	;# 
  7204  060D                     	;# 
  7205  060D                     	;# 
  7206  060E                     	;# 
  7207  060F                     	;# 
  7208  0610                     	;# 
  7209  0611                     	;# 
  7210  0612                     	;# 
  7211  0613                     	;# 
  7212  0614                     	;# 
  7213  0616                     	;# 
  7214  0616                     	;# 
  7215  0617                     	;# 
  7216  0617                     	;# 
  7217  0618                     	;# 
  7218  0619                     	;# 
  7219  061A                     	;# 
  7220  061B                     	;# 
  7221  061C                     	;# 
  7222  061D                     	;# 
  7223  061E                     	;# 
  7224  070C                     	;# 
  7225  070D                     	;# 
  7226  070E                     	;# 
  7227  070F                     	;# 
  7228  0710                     	;# 
  7229  0711                     	;# 
  7230  0712                     	;# 
  7231  0713                     	;# 
  7232  0714                     	;# 
  7233  0716                     	;# 
  7234  0717                     	;# 
  7235  0718                     	;# 
  7236  0719                     	;# 
  7237  071A                     	;# 
  7238  071B                     	;# 
  7239  071C                     	;# 
  7240  071D                     	;# 
  7241  071E                     	;# 
  7242  0796                     	;# 
  7243  0797                     	;# 
  7244  0798                     	;# 
  7245  0799                     	;# 
  7246  079A                     	;# 
  7247  079B                     	;# 
  7248  079C                     	;# 
  7249  079D                     	;# 
  7250  080C                     	;# 
  7251  080D                     	;# 
  7252  080E                     	;# 
  7253  080F                     	;# 
  7254  0810                     	;# 
  7255  0811                     	;# 
  7256  0812                     	;# 
  7257  0813                     	;# 
  7258  0814                     	;# 
  7259  081A                     	;# 
  7260  081A                     	;# 
  7261  081B                     	;# 
  7262  081C                     	;# 
  7263  081C                     	;# 
  7264  081D                     	;# 
  7265  081E                     	;# 
  7266  081F                     	;# 
  7267  088C                     	;# 
  7268  088D                     	;# 
  7269  088E                     	;# 
  7270  088F                     	;# 
  7271  0890                     	;# 
  7272  0891                     	;# 
  7273  0892                     	;# 
  7274  0893                     	;# 
  7275  0895                     	;# 
  7276  0896                     	;# 
  7277  0897                     	;# 
  7278  0898                     	;# 
  7279  0899                     	;# 
  7280  089A                     	;# 
  7281  089B                     	;# 
  7282  090C                     	;# 
  7283  090E                     	;# 
  7284  090F                     	;# 
  7285  091F                     	;# 
  7286  098F                     	;# 
  7287  098F                     	;# 
  7288  0990                     	;# 
  7289  0991                     	;# 
  7290  0992                     	;# 
  7291  0993                     	;# 
  7292  0994                     	;# 
  7293  0995                     	;# 
  7294  0996                     	;# 
  7295  0997                     	;# 
  7296  1E0F                     	;# 
  7297  1E10                     	;# 
  7298  1E11                     	;# 
  7299  1E12                     	;# 
  7300  1E13                     	;# 
  7301  1E14                     	;# 
  7302  1E15                     	;# 
  7303  1E16                     	;# 
  7304  1E17                     	;# 
  7305  1E18                     	;# 
  7306  1E19                     	;# 
  7307  1E1A                     	;# 
  7308  1E1B                     	;# 
  7309  1E1C                     	;# 
  7310  1E1D                     	;# 
  7311  1E1E                     	;# 
  7312  1E1F                     	;# 
  7313  1E20                     	;# 
  7314  1E21                     	;# 
  7315  1E22                     	;# 
  7316  1E23                     	;# 
  7317  1E24                     	;# 
  7318  1E25                     	;# 
  7319  1E26                     	;# 
  7320  1E27                     	;# 
  7321  1E28                     	;# 
  7322  1E29                     	;# 
  7323  1E2A                     	;# 
  7324  1E2B                     	;# 
  7325  1E2C                     	;# 
  7326  1E2D                     	;# 
  7327  1E2E                     	;# 
  7328  1E2F                     	;# 
  7329  1E30                     	;# 
  7330  1E31                     	;# 
  7331  1E32                     	;# 
  7332  1E33                     	;# 
  7333  1E34                     	;# 
  7334  1E35                     	;# 
  7335  1E36                     	;# 
  7336  1E37                     	;# 
  7337  1E8F                     	;# 
  7338  1E90                     	;# 
  7339  1E91                     	;# 
  7340  1E92                     	;# 
  7341  1E93                     	;# 
  7342  1E94                     	;# 
  7343  1E95                     	;# 
  7344  1E96                     	;# 
  7345  1E97                     	;# 
  7346  1E9C                     	;# 
  7347  1E9D                     	;# 
  7348  1E9E                     	;# 
  7349  1EA1                     	;# 
  7350  1EA2                     	;# 
  7351  1EA3                     	;# 
  7352  1EA4                     	;# 
  7353  1EA9                     	;# 
  7354  1EAA                     	;# 
  7355  1EB1                     	;# 
  7356  1EB2                     	;# 
  7357  1EB8                     	;# 
  7358  1EB9                     	;# 
  7359  1EBA                     	;# 
  7360  1EBB                     	;# 
  7361  1EBC                     	;# 
  7362  1EBD                     	;# 
  7363  1EBE                     	;# 
  7364  1EC3                     	;# 
  7365  1EC5                     	;# 
  7366  1EC6                     	;# 
  7367  1EC7                     	;# 
  7368  1EC8                     	;# 
  7369  1EC9                     	;# 
  7370  1ECA                     	;# 
  7371  1ECB                     	;# 
  7372  1ECB                     	;# 
  7373  1ECB                     	;# 
  7374  1ECC                     	;# 
  7375  1ECC                     	;# 
  7376  1ECC                     	;# 
  7377  1F10                     	;# 
  7378  1F11                     	;# 
  7379  1F12                     	;# 
  7380  1F14                     	;# 
  7381  1F15                     	;# 
  7382  1F1C                     	;# 
  7383  1F1D                     	;# 
  7384  1F1E                     	;# 
  7385  1F1F                     	;# 
  7386  1F20                     	;# 
  7387  1F21                     	;# 
  7388  1F22                     	;# 
  7389  1F23                     	;# 
  7390  1F24                     	;# 
  7391  1F25                     	;# 
  7392  1F26                     	;# 
  7393  1F27                     	;# 
  7394  1F38                     	;# 
  7395  1F39                     	;# 
  7396  1F3A                     	;# 
  7397  1F3B                     	;# 
  7398  1F3C                     	;# 
  7399  1F3D                     	;# 
  7400  1F3E                     	;# 
  7401  1F3F                     	;# 
  7402  1F43                     	;# 
  7403  1F44                     	;# 
  7404  1F45                     	;# 
  7405  1F46                     	;# 
  7406  1F47                     	;# 
  7407  1F48                     	;# 
  7408  1F49                     	;# 
  7409  1F4A                     	;# 
  7410  1F4E                     	;# 
  7411  1F4F                     	;# 
  7412  1F50                     	;# 
  7413  1F51                     	;# 
  7414  1F52                     	;# 
  7415  1F53                     	;# 
  7416  1F54                     	;# 
  7417  1F55                     	;# 
  7418  1FE4                     	;# 
  7419  1FE5                     	;# 
  7420  1FE6                     	;# 
  7421  1FE7                     	;# 
  7422  1FE8                     	;# 
  7423  1FE8                     	;# 
  7424  1FE9                     	;# 
  7425  1FEA                     	;# 
  7426  1FEB                     	;# 
  7427  1FED                     	;# 
  7428  1FEE                     	;# 
  7429  1FEF                     	;# 
  7430  0000                     	;# 
  7431  0001                     	;# 
  7432  0002                     	;# 
  7433  0003                     	;# 
  7434  0004                     	;# 
  7435  0005                     	;# 
  7436  0006                     	;# 
  7437  0007                     	;# 
  7438  0008                     	;# 
  7439  0009                     	;# 
  7440  000A                     	;# 
  7441  000B                     	;# 
  7442  000C                     	;# 
  7443  000D                     	;# 
  7444  000E                     	;# 
  7445  0012                     	;# 
  7446  0013                     	;# 
  7447  0014                     	;# 
  7448  0018                     	;# 
  7449  0019                     	;# 
  7450  001A                     	;# 
  7451  008C                     	;# 
  7452  008C                     	;# 
  7453  008D                     	;# 
  7454  008E                     	;# 
  7455  008E                     	;# 
  7456  008F                     	;# 
  7457  0090                     	;# 
  7458  0090                     	;# 
  7459  0091                     	;# 
  7460  0092                     	;# 
  7461  0092                     	;# 
  7462  0093                     	;# 
  7463  0094                     	;# 
  7464  0094                     	;# 
  7465  0095                     	;# 
  7466  0096                     	;# 
  7467  0096                     	;# 
  7468  0097                     	;# 
  7469  0098                     	;# 
  7470  0099                     	;# 
  7471  009A                     	;# 
  7472  009B                     	;# 
  7473  009B                     	;# 
  7474  009C                     	;# 
  7475  009D                     	;# 
  7476  009D                     	;# 
  7477  009E                     	;# 
  7478  009F                     	;# 
  7479  010C                     	;# 
  7480  010C                     	;# 
  7481  010D                     	;# 
  7482  010E                     	;# 
  7483  010F                     	;# 
  7484  010F                     	;# 
  7485  0110                     	;# 
  7486  0111                     	;# 
  7487  0112                     	;# 
  7488  0113                     	;# 
  7489  0114                     	;# 
  7490  0115                     	;# 
  7491  0116                     	;# 
  7492  0117                     	;# 
  7493  0118                     	;# 
  7494  0119                     	;# 
  7495  0119                     	;# 
  7496  0119                     	;# 
  7497  011A                     	;# 
  7498  011A                     	;# 
  7499  011A                     	;# 
  7500  011B                     	;# 
  7501  011B                     	;# 
  7502  011B                     	;# 
  7503  011B                     	;# 
  7504  011B                     	;# 
  7505  011C                     	;# 
  7506  011C                     	;# 
  7507  011C                     	;# 
  7508  011D                     	;# 
  7509  011D                     	;# 
  7510  011D                     	;# 
  7511  011E                     	;# 
  7512  011E                     	;# 
  7513  011E                     	;# 
  7514  011F                     	;# 
  7515  011F                     	;# 
  7516  011F                     	;# 
  7517  011F                     	;# 
  7518  011F                     	;# 
  7519  018C                     	;# 
  7520  018D                     	;# 
  7521  018E                     	;# 
  7522  018F                     	;# 
  7523  0190                     	;# 
  7524  0191                     	;# 
  7525  0192                     	;# 
  7526  0196                     	;# 
  7527  0197                     	;# 
  7528  0198                     	;# 
  7529  0199                     	;# 
  7530  019A                     	;# 
  7531  019B                     	;# 
  7532  019C                     	;# 
  7533  020C                     	;# 
  7534  020D                     	;# 
  7535  020E                     	;# 
  7536  020E                     	;# 
  7537  020F                     	;# 
  7538  020F                     	;# 
  7539  0210                     	;# 
  7540  0210                     	;# 
  7541  0211                     	;# 
  7542  0211                     	;# 
  7543  0212                     	;# 
  7544  0213                     	;# 
  7545  0214                     	;# 
  7546  0214                     	;# 
  7547  0215                     	;# 
  7548  0215                     	;# 
  7549  0216                     	;# 
  7550  0216                     	;# 
  7551  0217                     	;# 
  7552  0217                     	;# 
  7553  0218                     	;# 
  7554  0219                     	;# 
  7555  021A                     	;# 
  7556  021A                     	;# 
  7557  021B                     	;# 
  7558  021B                     	;# 
  7559  021C                     	;# 
  7560  021C                     	;# 
  7561  021D                     	;# 
  7562  021D                     	;# 
  7563  021E                     	;# 
  7564  021F                     	;# 
  7565  028C                     	;# 
  7566  028C                     	;# 
  7567  028D                     	;# 
  7568  028D                     	;# 
  7569  028E                     	;# 
  7570  028F                     	;# 
  7571  0290                     	;# 
  7572  0291                     	;# 
  7573  0292                     	;# 
  7574  0292                     	;# 
  7575  0293                     	;# 
  7576  0293                     	;# 
  7577  0294                     	;# 
  7578  0295                     	;# 
  7579  0296                     	;# 
  7580  0297                     	;# 
  7581  0298                     	;# 
  7582  0298                     	;# 
  7583  0299                     	;# 
  7584  0299                     	;# 
  7585  029A                     	;# 
  7586  029B                     	;# 
  7587  029C                     	;# 
  7588  029D                     	;# 
  7589  029F                     	;# 
  7590  030C                     	;# 
  7591  030C                     	;# 
  7592  030D                     	;# 
  7593  030E                     	;# 
  7594  030F                     	;# 
  7595  0310                     	;# 
  7596  0310                     	;# 
  7597  0311                     	;# 
  7598  0312                     	;# 
  7599  0313                     	;# 
  7600  0314                     	;# 
  7601  0314                     	;# 
  7602  0315                     	;# 
  7603  0316                     	;# 
  7604  0317                     	;# 
  7605  0318                     	;# 
  7606  0318                     	;# 
  7607  0319                     	;# 
  7608  031A                     	;# 
  7609  031B                     	;# 
  7610  038C                     	;# 
  7611  038C                     	;# 
  7612  038D                     	;# 
  7613  038E                     	;# 
  7614  0390                     	;# 
  7615  0390                     	;# 
  7616  0391                     	;# 
  7617  0392                     	;# 
  7618  048C                     	;# 
  7619  048C                     	;# 
  7620  048D                     	;# 
  7621  048E                     	;# 
  7622  048F                     	;# 
  7623  048F                     	;# 
  7624  0490                     	;# 
  7625  0491                     	;# 
  7626  0492                     	;# 
  7627  0492                     	;# 
  7628  0493                     	;# 
  7629  0494                     	;# 
  7630  0495                     	;# 
  7631  0495                     	;# 
  7632  0496                     	;# 
  7633  0497                     	;# 
  7634  0498                     	;# 
  7635  0499                     	;# 
  7636  049A                     	;# 
  7637  049B                     	;# 
  7638  049C                     	;# 
  7639  049D                     	;# 
  7640  058C                     	;# 
  7641  058C                     	;# 
  7642  058D                     	;# 
  7643  058E                     	;# 
  7644  058F                     	;# 
  7645  058F                     	;# 
  7646  0590                     	;# 
  7647  0591                     	;# 
  7648  0592                     	;# 
  7649  0593                     	;# 
  7650  059C                     	;# 
  7651  059C                     	;# 
  7652  059D                     	;# 
  7653  059D                     	;# 
  7654  059E                     	;# 
  7655  059F                     	;# 
  7656  060C                     	;# 
  7657  060C                     	;# 
  7658  060D                     	;# 
  7659  060D                     	;# 
  7660  060E                     	;# 
  7661  060F                     	;# 
  7662  0610                     	;# 
  7663  0611                     	;# 
  7664  0612                     	;# 
  7665  0613                     	;# 
  7666  0614                     	;# 
  7667  0616                     	;# 
  7668  0616                     	;# 
  7669  0617                     	;# 
  7670  0617                     	;# 
  7671  0618                     	;# 
  7672  0619                     	;# 
  7673  061A                     	;# 
  7674  061B                     	;# 
  7675  061C                     	;# 
  7676  061D                     	;# 
  7677  061E                     	;# 
  7678  070C                     	;# 
  7679  070D                     	;# 
  7680  070E                     	;# 
  7681  070F                     	;# 
  7682  0710                     	;# 
  7683  0711                     	;# 
  7684  0712                     	;# 
  7685  0713                     	;# 
  7686  0714                     	;# 
  7687  0716                     	;# 
  7688  0717                     	;# 
  7689  0718                     	;# 
  7690  0719                     	;# 
  7691  071A                     	;# 
  7692  071B                     	;# 
  7693  071C                     	;# 
  7694  071D                     	;# 
  7695  071E                     	;# 
  7696  0796                     	;# 
  7697  0797                     	;# 
  7698  0798                     	;# 
  7699  0799                     	;# 
  7700  079A                     	;# 
  7701  079B                     	;# 
  7702  079C                     	;# 
  7703  079D                     	;# 
  7704  080C                     	;# 
  7705  080D                     	;# 
  7706  080E                     	;# 
  7707  080F                     	;# 
  7708  0810                     	;# 
  7709  0811                     	;# 
  7710  0812                     	;# 
  7711  0813                     	;# 
  7712  0814                     	;# 
  7713  081A                     	;# 
  7714  081A                     	;# 
  7715  081B                     	;# 
  7716  081C                     	;# 
  7717  081C                     	;# 
  7718  081D                     	;# 
  7719  081E                     	;# 
  7720  081F                     	;# 
  7721  088C                     	;# 
  7722  088D                     	;# 
  7723  088E                     	;# 
  7724  088F                     	;# 
  7725  0890                     	;# 
  7726  0891                     	;# 
  7727  0892                     	;# 
  7728  0893                     	;# 
  7729  0895                     	;# 
  7730  0896                     	;# 
  7731  0897                     	;# 
  7732  0898                     	;# 
  7733  0899                     	;# 
  7734  089A                     	;# 
  7735  089B                     	;# 
  7736  090C                     	;# 
  7737  090E                     	;# 
  7738  090F                     	;# 
  7739  091F                     	;# 
  7740  098F                     	;# 
  7741  098F                     	;# 
  7742  0990                     	;# 
  7743  0991                     	;# 
  7744  0992                     	;# 
  7745  0993                     	;# 
  7746  0994                     	;# 
  7747  0995                     	;# 
  7748  0996                     	;# 
  7749  0997                     	;# 
  7750  1E0F                     	;# 
  7751  1E10                     	;# 
  7752  1E11                     	;# 
  7753  1E12                     	;# 
  7754  1E13                     	;# 
  7755  1E14                     	;# 
  7756  1E15                     	;# 
  7757  1E16                     	;# 
  7758  1E17                     	;# 
  7759  1E18                     	;# 
  7760  1E19                     	;# 
  7761  1E1A                     	;# 
  7762  1E1B                     	;# 
  7763  1E1C                     	;# 
  7764  1E1D                     	;# 
  7765  1E1E                     	;# 
  7766  1E1F                     	;# 
  7767  1E20                     	;# 
  7768  1E21                     	;# 
  7769  1E22                     	;# 
  7770  1E23                     	;# 
  7771  1E24                     	;# 
  7772  1E25                     	;# 
  7773  1E26                     	;# 
  7774  1E27                     	;# 
  7775  1E28                     	;# 
  7776  1E29                     	;# 
  7777  1E2A                     	;# 
  7778  1E2B                     	;# 
  7779  1E2C                     	;# 
  7780  1E2D                     	;# 
  7781  1E2E                     	;# 
  7782  1E2F                     	;# 
  7783  1E30                     	;# 
  7784  1E31                     	;# 
  7785  1E32                     	;# 
  7786  1E33                     	;# 
  7787  1E34                     	;# 
  7788  1E35                     	;# 
  7789  1E36                     	;# 
  7790  1E37                     	;# 
  7791  1E8F                     	;# 
  7792  1E90                     	;# 
  7793  1E91                     	;# 
  7794  1E92                     	;# 
  7795  1E93                     	;# 
  7796  1E94                     	;# 
  7797  1E95                     	;# 
  7798  1E96                     	;# 
  7799  1E97                     	;# 
  7800  1E9C                     	;# 
  7801  1E9D                     	;# 
  7802  1E9E                     	;# 
  7803  1EA1                     	;# 
  7804  1EA2                     	;# 
  7805  1EA3                     	;# 
  7806  1EA4                     	;# 
  7807  1EA9                     	;# 
  7808  1EAA                     	;# 
  7809  1EB1                     	;# 
  7810  1EB2                     	;# 
  7811  1EB8                     	;# 
  7812  1EB9                     	;# 
  7813  1EBA                     	;# 
  7814  1EBB                     	;# 
  7815  1EBC                     	;# 
  7816  1EBD                     	;# 
  7817  1EBE                     	;# 
  7818  1EC3                     	;# 
  7819  1EC5                     	;# 
  7820  1EC6                     	;# 
  7821  1EC7                     	;# 
  7822  1EC8                     	;# 
  7823  1EC9                     	;# 
  7824  1ECA                     	;# 
  7825  1ECB                     	;# 
  7826  1ECB                     	;# 
  7827  1ECB                     	;# 
  7828  1ECC                     	;# 
  7829  1ECC                     	;# 
  7830  1ECC                     	;# 
  7831  1F10                     	;# 
  7832  1F11                     	;# 
  7833  1F12                     	;# 
  7834  1F14                     	;# 
  7835  1F15                     	;# 
  7836  1F1C                     	;# 
  7837  1F1D                     	;# 
  7838  1F1E                     	;# 
  7839  1F1F                     	;# 
  7840  1F20                     	;# 
  7841  1F21                     	;# 
  7842  1F22                     	;# 
  7843  1F23                     	;# 
  7844  1F24                     	;# 
  7845  1F25                     	;# 
  7846  1F26                     	;# 
  7847  1F27                     	;# 
  7848  1F38                     	;# 
  7849  1F39                     	;# 
  7850  1F3A                     	;# 
  7851  1F3B                     	;# 
  7852  1F3C                     	;# 
  7853  1F3D                     	;# 
  7854  1F3E                     	;# 
  7855  1F3F                     	;# 
  7856  1F43                     	;# 
  7857  1F44                     	;# 
  7858  1F45                     	;# 
  7859  1F46                     	;# 
  7860  1F47                     	;# 
  7861  1F48                     	;# 
  7862  1F49                     	;# 
  7863  1F4A                     	;# 
  7864  1F4E                     	;# 
  7865  1F4F                     	;# 
  7866  1F50                     	;# 
  7867  1F51                     	;# 
  7868  1F52                     	;# 
  7869  1F53                     	;# 
  7870  1F54                     	;# 
  7871  1F55                     	;# 
  7872  1FE4                     	;# 
  7873  1FE5                     	;# 
  7874  1FE6                     	;# 
  7875  1FE7                     	;# 
  7876  1FE8                     	;# 
  7877  1FE8                     	;# 
  7878  1FE9                     	;# 
  7879  1FEA                     	;# 
  7880  1FEB                     	;# 
  7881  1FED                     	;# 
  7882  1FEE                     	;# 
  7883  1FEF                     	;# 
  7884  0000                     	;# 
  7885  0001                     	;# 
  7886  0002                     	;# 
  7887  0003                     	;# 
  7888  0004                     	;# 
  7889  0005                     	;# 
  7890  0006                     	;# 
  7891  0007                     	;# 
  7892  0008                     	;# 
  7893  0009                     	;# 
  7894  000A                     	;# 
  7895  000B                     	;# 
  7896  000C                     	;# 
  7897  000D                     	;# 
  7898  000E                     	;# 
  7899  0012                     	;# 
  7900  0013                     	;# 
  7901  0014                     	;# 
  7902  0018                     	;# 
  7903  0019                     	;# 
  7904  001A                     	;# 
  7905  008C                     	;# 
  7906  008C                     	;# 
  7907  008D                     	;# 
  7908  008E                     	;# 
  7909  008E                     	;# 
  7910  008F                     	;# 
  7911  0090                     	;# 
  7912  0090                     	;# 
  7913  0091                     	;# 
  7914  0092                     	;# 
  7915  0092                     	;# 
  7916  0093                     	;# 
  7917  0094                     	;# 
  7918  0094                     	;# 
  7919  0095                     	;# 
  7920  0096                     	;# 
  7921  0096                     	;# 
  7922  0097                     	;# 
  7923  0098                     	;# 
  7924  0099                     	;# 
  7925  009A                     	;# 
  7926  009B                     	;# 
  7927  009B                     	;# 
  7928  009C                     	;# 
  7929  009D                     	;# 
  7930  009D                     	;# 
  7931  009E                     	;# 
  7932  009F                     	;# 
  7933  010C                     	;# 
  7934  010C                     	;# 
  7935  010D                     	;# 
  7936  010E                     	;# 
  7937  010F                     	;# 
  7938  010F                     	;# 
  7939  0110                     	;# 
  7940  0111                     	;# 
  7941  0112                     	;# 
  7942  0113                     	;# 
  7943  0114                     	;# 
  7944  0115                     	;# 
  7945  0116                     	;# 
  7946  0117                     	;# 
  7947  0118                     	;# 
  7948  0119                     	;# 
  7949  0119                     	;# 
  7950  0119                     	;# 
  7951  011A                     	;# 
  7952  011A                     	;# 
  7953  011A                     	;# 
  7954  011B                     	;# 
  7955  011B                     	;# 
  7956  011B                     	;# 
  7957  011B                     	;# 
  7958  011B                     	;# 
  7959  011C                     	;# 
  7960  011C                     	;# 
  7961  011C                     	;# 
  7962  011D                     	;# 
  7963  011D                     	;# 
  7964  011D                     	;# 
  7965  011E                     	;# 
  7966  011E                     	;# 
  7967  011E                     	;# 
  7968  011F                     	;# 
  7969  011F                     	;# 
  7970  011F                     	;# 
  7971  011F                     	;# 
  7972  011F                     	;# 
  7973  018C                     	;# 
  7974  018D                     	;# 
  7975  018E                     	;# 
  7976  018F                     	;# 
  7977  0190                     	;# 
  7978  0191                     	;# 
  7979  0192                     	;# 
  7980  0196                     	;# 
  7981  0197                     	;# 
  7982  0198                     	;# 
  7983  0199                     	;# 
  7984  019A                     	;# 
  7985  019B                     	;# 
  7986  019C                     	;# 
  7987  020C                     	;# 
  7988  020D                     	;# 
  7989  020E                     	;# 
  7990  020E                     	;# 
  7991  020F                     	;# 
  7992  020F                     	;# 
  7993  0210                     	;# 
  7994  0210                     	;# 
  7995  0211                     	;# 
  7996  0211                     	;# 
  7997  0212                     	;# 
  7998  0213                     	;# 
  7999  0214                     	;# 
  8000  0214                     	;# 
  8001  0215                     	;# 
  8002  0215                     	;# 
  8003  0216                     	;# 
  8004  0216                     	;# 
  8005  0217                     	;# 
  8006  0217                     	;# 
  8007  0218                     	;# 
  8008  0219                     	;# 
  8009  021A                     	;# 
  8010  021A                     	;# 
  8011  021B                     	;# 
  8012  021B                     	;# 
  8013  021C                     	;# 
  8014  021C                     	;# 
  8015  021D                     	;# 
  8016  021D                     	;# 
  8017  021E                     	;# 
  8018  021F                     	;# 
  8019  028C                     	;# 
  8020  028C                     	;# 
  8021  028D                     	;# 
  8022  028D                     	;# 
  8023  028E                     	;# 
  8024  028F                     	;# 
  8025  0290                     	;# 
  8026  0291                     	;# 
  8027  0292                     	;# 
  8028  0292                     	;# 
  8029  0293                     	;# 
  8030  0293                     	;# 
  8031  0294                     	;# 
  8032  0295                     	;# 
  8033  0296                     	;# 
  8034  0297                     	;# 
  8035  0298                     	;# 
  8036  0298                     	;# 
  8037  0299                     	;# 
  8038  0299                     	;# 
  8039  029A                     	;# 
  8040  029B                     	;# 
  8041  029C                     	;# 
  8042  029D                     	;# 
  8043  029F                     	;# 
  8044  030C                     	;# 
  8045  030C                     	;# 
  8046  030D                     	;# 
  8047  030E                     	;# 
  8048  030F                     	;# 
  8049  0310                     	;# 
  8050  0310                     	;# 
  8051  0311                     	;# 
  8052  0312                     	;# 
  8053  0313                     	;# 
  8054  0314                     	;# 
  8055  0314                     	;# 
  8056  0315                     	;# 
  8057  0316                     	;# 
  8058  0317                     	;# 
  8059  0318                     	;# 
  8060  0318                     	;# 
  8061  0319                     	;# 
  8062  031A                     	;# 
  8063  031B                     	;# 
  8064  038C                     	;# 
  8065  038C                     	;# 
  8066  038D                     	;# 
  8067  038E                     	;# 
  8068  0390                     	;# 
  8069  0390                     	;# 
  8070  0391                     	;# 
  8071  0392                     	;# 
  8072  048C                     	;# 
  8073  048C                     	;# 
  8074  048D                     	;# 
  8075  048E                     	;# 
  8076  048F                     	;# 
  8077  048F                     	;# 
  8078  0490                     	;# 
  8079  0491                     	;# 
  8080  0492                     	;# 
  8081  0492                     	;# 
  8082  0493                     	;# 
  8083  0494                     	;# 
  8084  0495                     	;# 
  8085  0495                     	;# 
  8086  0496                     	;# 
  8087  0497                     	;# 
  8088  0498                     	;# 
  8089  0499                     	;# 
  8090  049A                     	;# 
  8091  049B                     	;# 
  8092  049C                     	;# 
  8093  049D                     	;# 
  8094  058C                     	;# 
  8095  058C                     	;# 
  8096  058D                     	;# 
  8097  058E                     	;# 
  8098  058F                     	;# 
  8099  058F                     	;# 
  8100  0590                     	;# 
  8101  0591                     	;# 
  8102  0592                     	;# 
  8103  0593                     	;# 
  8104  059C                     	;# 
  8105  059C                     	;# 
  8106  059D                     	;# 
  8107  059D                     	;# 
  8108  059E                     	;# 
  8109  059F                     	;# 
  8110  060C                     	;# 
  8111  060C                     	;# 
  8112  060D                     	;# 
  8113  060D                     	;# 
  8114  060E                     	;# 
  8115  060F                     	;# 
  8116  0610                     	;# 
  8117  0611                     	;# 
  8118  0612                     	;# 
  8119  0613                     	;# 
  8120  0614                     	;# 
  8121  0616                     	;# 
  8122  0616                     	;# 
  8123  0617                     	;# 
  8124  0617                     	;# 
  8125  0618                     	;# 
  8126  0619                     	;# 
  8127  061A                     	;# 
  8128  061B                     	;# 
  8129  061C                     	;# 
  8130  061D                     	;# 
  8131  061E                     	;# 
  8132  070C                     	;# 
  8133  070D                     	;# 
  8134  070E                     	;# 
  8135  070F                     	;# 
  8136  0710                     	;# 
  8137  0711                     	;# 
  8138  0712                     	;# 
  8139  0713                     	;# 
  8140  0714                     	;# 
  8141  0716                     	;# 
  8142  0717                     	;# 
  8143  0718                     	;# 
  8144  0719                     	;# 
  8145  071A                     	;# 
  8146  071B                     	;# 
  8147  071C                     	;# 
  8148  071D                     	;# 
  8149  071E                     	;# 
  8150  0796                     	;# 
  8151  0797                     	;# 
  8152  0798                     	;# 
  8153  0799                     	;# 
  8154  079A                     	;# 
  8155  079B                     	;# 
  8156  079C                     	;# 
  8157  079D                     	;# 
  8158  080C                     	;# 
  8159  080D                     	;# 
  8160  080E                     	;# 
  8161  080F                     	;# 
  8162  0810                     	;# 
  8163  0811                     	;# 
  8164  0812                     	;# 
  8165  0813                     	;# 
  8166  0814                     	;# 
  8167  081A                     	;# 
  8168  081A                     	;# 
  8169  081B                     	;# 
  8170  081C                     	;# 
  8171  081C                     	;# 
  8172  081D                     	;# 
  8173  081E                     	;# 
  8174  081F                     	;# 
  8175  088C                     	;# 
  8176  088D                     	;# 
  8177  088E                     	;# 
  8178  088F                     	;# 
  8179  0890                     	;# 
  8180  0891                     	;# 
  8181  0892                     	;# 
  8182  0893                     	;# 
  8183  0895                     	;# 
  8184  0896                     	;# 
  8185  0897                     	;# 
  8186  0898                     	;# 
  8187  0899                     	;# 
  8188  089A                     	;# 
  8189  089B                     	;# 
  8190  090C                     	;# 
  8191  090E                     	;# 
  8192  090F                     	;# 
  8193  091F                     	;# 
  8194  098F                     	;# 
  8195  098F                     	;# 
  8196  0990                     	;# 
  8197  0991                     	;# 
  8198  0992                     	;# 
  8199  0993                     	;# 
  8200  0994                     	;# 
  8201  0995                     	;# 
  8202  0996                     	;# 
  8203  0997                     	;# 
  8204  1E0F                     	;# 
  8205  1E10                     	;# 
  8206  1E11                     	;# 
  8207  1E12                     	;# 
  8208  1E13                     	;# 
  8209  1E14                     	;# 
  8210  1E15                     	;# 
  8211  1E16                     	;# 
  8212  1E17                     	;# 
  8213  1E18                     	;# 
  8214  1E19                     	;# 
  8215  1E1A                     	;# 
  8216  1E1B                     	;# 
  8217  1E1C                     	;# 
  8218  1E1D                     	;# 
  8219  1E1E                     	;# 
  8220  1E1F                     	;# 
  8221  1E20                     	;# 
  8222  1E21                     	;# 
  8223  1E22                     	;# 
  8224  1E23                     	;# 
  8225  1E24                     	;# 
  8226  1E25                     	;# 
  8227  1E26                     	;# 
  8228  1E27                     	;# 
  8229  1E28                     	;# 
  8230  1E29                     	;# 
  8231  1E2A                     	;# 
  8232  1E2B                     	;# 
  8233  1E2C                     	;# 
  8234  1E2D                     	;# 
  8235  1E2E                     	;# 
  8236  1E2F                     	;# 
  8237  1E30                     	;# 
  8238  1E31                     	;# 
  8239  1E32                     	;# 
  8240  1E33                     	;# 
  8241  1E34                     	;# 
  8242  1E35                     	;# 
  8243  1E36                     	;# 
  8244  1E37                     	;# 
  8245  1E8F                     	;# 
  8246  1E90                     	;# 
  8247  1E91                     	;# 
  8248  1E92                     	;# 
  8249  1E93                     	;# 
  8250  1E94                     	;# 
  8251  1E95                     	;# 
  8252  1E96                     	;# 
  8253  1E97                     	;# 
  8254  1E9C                     	;# 
  8255  1E9D                     	;# 
  8256  1E9E                     	;# 
  8257  1EA1                     	;# 
  8258  1EA2                     	;# 
  8259  1EA3                     	;# 
  8260  1EA4                     	;# 
  8261  1EA9                     	;# 
  8262  1EAA                     	;# 
  8263  1EB1                     	;# 
  8264  1EB2                     	;# 
  8265  1EB8                     	;# 
  8266  1EB9                     	;# 
  8267  1EBA                     	;# 
  8268  1EBB                     	;# 
  8269  1EBC                     	;# 
  8270  1EBD                     	;# 
  8271  1EBE                     	;# 
  8272  1EC3                     	;# 
  8273  1EC5                     	;# 
  8274  1EC6                     	;# 
  8275  1EC7                     	;# 
  8276  1EC8                     	;# 
  8277  1EC9                     	;# 
  8278  1ECA                     	;# 
  8279  1ECB                     	;# 
  8280  1ECB                     	;# 
  8281  1ECB                     	;# 
  8282  1ECC                     	;# 
  8283  1ECC                     	;# 
  8284  1ECC                     	;# 
  8285  1F10                     	;# 
  8286  1F11                     	;# 
  8287  1F12                     	;# 
  8288  1F14                     	;# 
  8289  1F15                     	;# 
  8290  1F1C                     	;# 
  8291  1F1D                     	;# 
  8292  1F1E                     	;# 
  8293  1F1F                     	;# 
  8294  1F20                     	;# 
  8295  1F21                     	;# 
  8296  1F22                     	;# 
  8297  1F23                     	;# 
  8298  1F24                     	;# 
  8299  1F25                     	;# 
  8300  1F26                     	;# 
  8301  1F27                     	;# 
  8302  1F38                     	;# 
  8303  1F39                     	;# 
  8304  1F3A                     	;# 
  8305  1F3B                     	;# 
  8306  1F3C                     	;# 
  8307  1F3D                     	;# 
  8308  1F3E                     	;# 
  8309  1F3F                     	;# 
  8310  1F43                     	;# 
  8311  1F44                     	;# 
  8312  1F45                     	;# 
  8313  1F46                     	;# 
  8314  1F47                     	;# 
  8315  1F48                     	;# 
  8316  1F49                     	;# 
  8317  1F4A                     	;# 
  8318  1F4E                     	;# 
  8319  1F4F                     	;# 
  8320  1F50                     	;# 
  8321  1F51                     	;# 
  8322  1F52                     	;# 
  8323  1F53                     	;# 
  8324  1F54                     	;# 
  8325  1F55                     	;# 
  8326  1FE4                     	;# 
  8327  1FE5                     	;# 
  8328  1FE6                     	;# 
  8329  1FE7                     	;# 
  8330  1FE8                     	;# 
  8331  1FE8                     	;# 
  8332  1FE9                     	;# 
  8333  1FEA                     	;# 
  8334  1FEB                     	;# 
  8335  1FED                     	;# 
  8336  1FEE                     	;# 
  8337  1FEF                     	;# 
  8338  0000                     	;# 
  8339  0001                     	;# 
  8340  0002                     	;# 
  8341  0003                     	;# 
  8342  0004                     	;# 
  8343  0005                     	;# 
  8344  0006                     	;# 
  8345  0007                     	;# 
  8346  0008                     	;# 
  8347  0009                     	;# 
  8348  000A                     	;# 
  8349  000B                     	;# 
  8350  000C                     	;# 
  8351  000D                     	;# 
  8352  000E                     	;# 
  8353  0012                     	;# 
  8354  0013                     	;# 
  8355  0014                     	;# 
  8356  0018                     	;# 
  8357  0019                     	;# 
  8358  001A                     	;# 
  8359  008C                     	;# 
  8360  008C                     	;# 
  8361  008D                     	;# 
  8362  008E                     	;# 
  8363  008E                     	;# 
  8364  008F                     	;# 
  8365  0090                     	;# 
  8366  0090                     	;# 
  8367  0091                     	;# 
  8368  0092                     	;# 
  8369  0092                     	;# 
  8370  0093                     	;# 
  8371  0094                     	;# 
  8372  0094                     	;# 
  8373  0095                     	;# 
  8374  0096                     	;# 
  8375  0096                     	;# 
  8376  0097                     	;# 
  8377  0098                     	;# 
  8378  0099                     	;# 
  8379  009A                     	;# 
  8380  009B                     	;# 
  8381  009B                     	;# 
  8382  009C                     	;# 
  8383  009D                     	;# 
  8384  009D                     	;# 
  8385  009E                     	;# 
  8386  009F                     	;# 
  8387  010C                     	;# 
  8388  010C                     	;# 
  8389  010D                     	;# 
  8390  010E                     	;# 
  8391  010F                     	;# 
  8392  010F                     	;# 
  8393  0110                     	;# 
  8394  0111                     	;# 
  8395  0112                     	;# 
  8396  0113                     	;# 
  8397  0114                     	;# 
  8398  0115                     	;# 
  8399  0116                     	;# 
  8400  0117                     	;# 
  8401  0118                     	;# 
  8402  0119                     	;# 
  8403  0119                     	;# 
  8404  0119                     	;# 
  8405  011A                     	;# 
  8406  011A                     	;# 
  8407  011A                     	;# 
  8408  011B                     	;# 
  8409  011B                     	;# 
  8410  011B                     	;# 
  8411  011B                     	;# 
  8412  011B                     	;# 
  8413  011C                     	;# 
  8414  011C                     	;# 
  8415  011C                     	;# 
  8416  011D                     	;# 
  8417  011D                     	;# 
  8418  011D                     	;# 
  8419  011E                     	;# 
  8420  011E                     	;# 
  8421  011E                     	;# 
  8422  011F                     	;# 
  8423  011F                     	;# 
  8424  011F                     	;# 
  8425  011F                     	;# 
  8426  011F                     	;# 
  8427  018C                     	;# 
  8428  018D                     	;# 
  8429  018E                     	;# 
  8430  018F                     	;# 
  8431  0190                     	;# 
  8432  0191                     	;# 
  8433  0192                     	;# 
  8434  0196                     	;# 
  8435  0197                     	;# 
  8436  0198                     	;# 
  8437  0199                     	;# 
  8438  019A                     	;# 
  8439  019B                     	;# 
  8440  019C                     	;# 
  8441  020C                     	;# 
  8442  020D                     	;# 
  8443  020E                     	;# 
  8444  020E                     	;# 
  8445  020F                     	;# 
  8446  020F                     	;# 
  8447  0210                     	;# 
  8448  0210                     	;# 
  8449  0211                     	;# 
  8450  0211                     	;# 
  8451  0212                     	;# 
  8452  0213                     	;# 
  8453  0214                     	;# 
  8454  0214                     	;# 
  8455  0215                     	;# 
  8456  0215                     	;# 
  8457  0216                     	;# 
  8458  0216                     	;# 
  8459  0217                     	;# 
  8460  0217                     	;# 
  8461  0218                     	;# 
  8462  0219                     	;# 
  8463  021A                     	;# 
  8464  021A                     	;# 
  8465  021B                     	;# 
  8466  021B                     	;# 
  8467  021C                     	;# 
  8468  021C                     	;# 
  8469  021D                     	;# 
  8470  021D                     	;# 
  8471  021E                     	;# 
  8472  021F                     	;# 
  8473  028C                     	;# 
  8474  028C                     	;# 
  8475  028D                     	;# 
  8476  028D                     	;# 
  8477  028E                     	;# 
  8478  028F                     	;# 
  8479  0290                     	;# 
  8480  0291                     	;# 
  8481  0292                     	;# 
  8482  0292                     	;# 
  8483  0293                     	;# 
  8484  0293                     	;# 
  8485  0294                     	;# 
  8486  0295                     	;# 
  8487  0296                     	;# 
  8488  0297                     	;# 
  8489  0298                     	;# 
  8490  0298                     	;# 
  8491  0299                     	;# 
  8492  0299                     	;# 
  8493  029A                     	;# 
  8494  029B                     	;# 
  8495  029C                     	;# 
  8496  029D                     	;# 
  8497  029F                     	;# 
  8498  030C                     	;# 
  8499  030C                     	;# 
  8500  030D                     	;# 
  8501  030E                     	;# 
  8502  030F                     	;# 
  8503  0310                     	;# 
  8504  0310                     	;# 
  8505  0311                     	;# 
  8506  0312                     	;# 
  8507  0313                     	;# 
  8508  0314                     	;# 
  8509  0314                     	;# 
  8510  0315                     	;# 
  8511  0316                     	;# 
  8512  0317                     	;# 
  8513  0318                     	;# 
  8514  0318                     	;# 
  8515  0319                     	;# 
  8516  031A                     	;# 
  8517  031B                     	;# 
  8518  038C                     	;# 
  8519  038C                     	;# 
  8520  038D                     	;# 
  8521  038E                     	;# 
  8522  0390                     	;# 
  8523  0390                     	;# 
  8524  0391                     	;# 
  8525  0392                     	;# 
  8526  048C                     	;# 
  8527  048C                     	;# 
  8528  048D                     	;# 
  8529  048E                     	;# 
  8530  048F                     	;# 
  8531  048F                     	;# 
  8532  0490                     	;# 
  8533  0491                     	;# 
  8534  0492                     	;# 
  8535  0492                     	;# 
  8536  0493                     	;# 
  8537  0494                     	;# 
  8538  0495                     	;# 
  8539  0495                     	;# 
  8540  0496                     	;# 
  8541  0497                     	;# 
  8542  0498                     	;# 
  8543  0499                     	;# 
  8544  049A                     	;# 
  8545  049B                     	;# 
  8546  049C                     	;# 
  8547  049D                     	;# 
  8548  058C                     	;# 
  8549  058C                     	;# 
  8550  058D                     	;# 
  8551  058E                     	;# 
  8552  058F                     	;# 
  8553  058F                     	;# 
  8554  0590                     	;# 
  8555  0591                     	;# 
  8556  0592                     	;# 
  8557  0593                     	;# 
  8558  059C                     	;# 
  8559  059C                     	;# 
  8560  059D                     	;# 
  8561  059D                     	;# 
  8562  059E                     	;# 
  8563  059F                     	;# 
  8564  060C                     	;# 
  8565  060C                     	;# 
  8566  060D                     	;# 
  8567  060D                     	;# 
  8568  060E                     	;# 
  8569  060F                     	;# 
  8570  0610                     	;# 
  8571  0611                     	;# 
  8572  0612                     	;# 
  8573  0613                     	;# 
  8574  0614                     	;# 
  8575  0616                     	;# 
  8576  0616                     	;# 
  8577  0617                     	;# 
  8578  0617                     	;# 
  8579  0618                     	;# 
  8580  0619                     	;# 
  8581  061A                     	;# 
  8582  061B                     	;# 
  8583  061C                     	;# 
  8584  061D                     	;# 
  8585  061E                     	;# 
  8586  070C                     	;# 
  8587  070D                     	;# 
  8588  070E                     	;# 
  8589  070F                     	;# 
  8590  0710                     	;# 
  8591  0711                     	;# 
  8592  0712                     	;# 
  8593  0713                     	;# 
  8594  0714                     	;# 
  8595  0716                     	;# 
  8596  0717                     	;# 
  8597  0718                     	;# 
  8598  0719                     	;# 
  8599  071A                     	;# 
  8600  071B                     	;# 
  8601  071C                     	;# 
  8602  071D                     	;# 
  8603  071E                     	;# 
  8604  0796                     	;# 
  8605  0797                     	;# 
  8606  0798                     	;# 
  8607  0799                     	;# 
  8608  079A                     	;# 
  8609  079B                     	;# 
  8610  079C                     	;# 
  8611  079D                     	;# 
  8612  080C                     	;# 
  8613  080D                     	;# 
  8614  080E                     	;# 
  8615  080F                     	;# 
  8616  0810                     	;# 
  8617  0811                     	;# 
  8618  0812                     	;# 
  8619  0813                     	;# 
  8620  0814                     	;# 
  8621  081A                     	;# 
  8622  081A                     	;# 
  8623  081B                     	;# 
  8624  081C                     	;# 
  8625  081C                     	;# 
  8626  081D                     	;# 
  8627  081E                     	;# 
  8628  081F                     	;# 
  8629  088C                     	;# 
  8630  088D                     	;# 
  8631  088E                     	;# 
  8632  088F                     	;# 
  8633  0890                     	;# 
  8634  0891                     	;# 
  8635  0892                     	;# 
  8636  0893                     	;# 
  8637  0895                     	;# 
  8638  0896                     	;# 
  8639  0897                     	;# 
  8640  0898                     	;# 
  8641  0899                     	;# 
  8642  089A                     	;# 
  8643  089B                     	;# 
  8644  090C                     	;# 
  8645  090E                     	;# 
  8646  090F                     	;# 
  8647  091F                     	;# 
  8648  098F                     	;# 
  8649  098F                     	;# 
  8650  0990                     	;# 
  8651  0991                     	;# 
  8652  0992                     	;# 
  8653  0993                     	;# 
  8654  0994                     	;# 
  8655  0995                     	;# 
  8656  0996                     	;# 
  8657  0997                     	;# 
  8658  1E0F                     	;# 
  8659  1E10                     	;# 
  8660  1E11                     	;# 
  8661  1E12                     	;# 
  8662  1E13                     	;# 
  8663  1E14                     	;# 
  8664  1E15                     	;# 
  8665  1E16                     	;# 
  8666  1E17                     	;# 
  8667  1E18                     	;# 
  8668  1E19                     	;# 
  8669  1E1A                     	;# 
  8670  1E1B                     	;# 
  8671  1E1C                     	;# 
  8672  1E1D                     	;# 
  8673  1E1E                     	;# 
  8674  1E1F                     	;# 
  8675  1E20                     	;# 
  8676  1E21                     	;# 
  8677  1E22                     	;# 
  8678  1E23                     	;# 
  8679  1E24                     	;# 
  8680  1E25                     	;# 
  8681  1E26                     	;# 
  8682  1E27                     	;# 
  8683  1E28                     	;# 
  8684  1E29                     	;# 
  8685  1E2A                     	;# 
  8686  1E2B                     	;# 
  8687  1E2C                     	;# 
  8688  1E2D                     	;# 
  8689  1E2E                     	;# 
  8690  1E2F                     	;# 
  8691  1E30                     	;# 
  8692  1E31                     	;# 
  8693  1E32                     	;# 
  8694  1E33                     	;# 
  8695  1E34                     	;# 
  8696  1E35                     	;# 
  8697  1E36                     	;# 
  8698  1E37                     	;# 
  8699  1E8F                     	;# 
  8700  1E90                     	;# 
  8701  1E91                     	;# 
  8702  1E92                     	;# 
  8703  1E93                     	;# 
  8704  1E94                     	;# 
  8705  1E95                     	;# 
  8706  1E96                     	;# 
  8707  1E97                     	;# 
  8708  1E9C                     	;# 
  8709  1E9D                     	;# 
  8710  1E9E                     	;# 
  8711  1EA1                     	;# 
  8712  1EA2                     	;# 
  8713  1EA3                     	;# 
  8714  1EA4                     	;# 
  8715  1EA9                     	;# 
  8716  1EAA                     	;# 
  8717  1EB1                     	;# 
  8718  1EB2                     	;# 
  8719  1EB8                     	;# 
  8720  1EB9                     	;# 
  8721  1EBA                     	;# 
  8722  1EBB                     	;# 
  8723  1EBC                     	;# 
  8724  1EBD                     	;# 
  8725  1EBE                     	;# 
  8726  1EC3                     	;# 
  8727  1EC5                     	;# 
  8728  1EC6                     	;# 
  8729  1EC7                     	;# 
  8730  1EC8                     	;# 
  8731  1EC9                     	;# 
  8732  1ECA                     	;# 
  8733  1ECB                     	;# 
  8734  1ECB                     	;# 
  8735  1ECB                     	;# 
  8736  1ECC                     	;# 
  8737  1ECC                     	;# 
  8738  1ECC                     	;# 
  8739  1F10                     	;# 
  8740  1F11                     	;# 
  8741  1F12                     	;# 
  8742  1F14                     	;# 
  8743  1F15                     	;# 
  8744  1F1C                     	;# 
  8745  1F1D                     	;# 
  8746  1F1E                     	;# 
  8747  1F1F                     	;# 
  8748  1F20                     	;# 
  8749  1F21                     	;# 
  8750  1F22                     	;# 
  8751  1F23                     	;# 
  8752  1F24                     	;# 
  8753  1F25                     	;# 
  8754  1F26                     	;# 
  8755  1F27                     	;# 
  8756  1F38                     	;# 
  8757  1F39                     	;# 
  8758  1F3A                     	;# 
  8759  1F3B                     	;# 
  8760  1F3C                     	;# 
  8761  1F3D                     	;# 
  8762  1F3E                     	;# 
  8763  1F3F                     	;# 
  8764  1F43                     	;# 
  8765  1F44                     	;# 
  8766  1F45                     	;# 
  8767  1F46                     	;# 
  8768  1F47                     	;# 
  8769  1F48                     	;# 
  8770  1F49                     	;# 
  8771  1F4A                     	;# 
  8772  1F4E                     	;# 
  8773  1F4F                     	;# 
  8774  1F50                     	;# 
  8775  1F51                     	;# 
  8776  1F52                     	;# 
  8777  1F53                     	;# 
  8778  1F54                     	;# 
  8779  1F55                     	;# 
  8780  1FE4                     	;# 
  8781  1FE5                     	;# 
  8782  1FE6                     	;# 
  8783  1FE7                     	;# 
  8784  1FE8                     	;# 
  8785  1FE8                     	;# 
  8786  1FE9                     	;# 
  8787  1FEA                     	;# 
  8788  1FEB                     	;# 
  8789  1FED                     	;# 
  8790  1FEE                     	;# 
  8791  1FEF                     	;# 
  8792  0000                     	;# 
  8793  0001                     	;# 
  8794  0002                     	;# 
  8795  0003                     	;# 
  8796  0004                     	;# 
  8797  0005                     	;# 
  8798  0006                     	;# 
  8799  0007                     	;# 
  8800  0008                     	;# 
  8801  0009                     	;# 
  8802  000A                     	;# 
  8803  000B                     	;# 
  8804  000C                     	;# 
  8805  000D                     	;# 
  8806  000E                     	;# 
  8807  0012                     	;# 
  8808  0013                     	;# 
  8809  0014                     	;# 
  8810  0018                     	;# 
  8811  0019                     	;# 
  8812  001A                     	;# 
  8813  008C                     	;# 
  8814  008C                     	;# 
  8815  008D                     	;# 
  8816  008E                     	;# 
  8817  008E                     	;# 
  8818  008F                     	;# 
  8819  0090                     	;# 
  8820  0090                     	;# 
  8821  0091                     	;# 
  8822  0092                     	;# 
  8823  0092                     	;# 
  8824  0093                     	;# 
  8825  0094                     	;# 
  8826  0094                     	;# 
  8827  0095                     	;# 
  8828  0096                     	;# 
  8829  0096                     	;# 
  8830  0097                     	;# 
  8831  0098                     	;# 
  8832  0099                     	;# 
  8833  009A                     	;# 
  8834  009B                     	;# 
  8835  009B                     	;# 
  8836  009C                     	;# 
  8837  009D                     	;# 
  8838  009D                     	;# 
  8839  009E                     	;# 
  8840  009F                     	;# 
  8841  010C                     	;# 
  8842  010C                     	;# 
  8843  010D                     	;# 
  8844  010E                     	;# 
  8845  010F                     	;# 
  8846  010F                     	;# 
  8847  0110                     	;# 
  8848  0111                     	;# 
  8849  0112                     	;# 
  8850  0113                     	;# 
  8851  0114                     	;# 
  8852  0115                     	;# 
  8853  0116                     	;# 
  8854  0117                     	;# 
  8855  0118                     	;# 
  8856  0119                     	;# 
  8857  0119                     	;# 
  8858  0119                     	;# 
  8859  011A                     	;# 
  8860  011A                     	;# 
  8861  011A                     	;# 
  8862  011B                     	;# 
  8863  011B                     	;# 
  8864  011B                     	;# 
  8865  011B                     	;# 
  8866  011B                     	;# 
  8867  011C                     	;# 
  8868  011C                     	;# 
  8869  011C                     	;# 
  8870  011D                     	;# 
  8871  011D                     	;# 
  8872  011D                     	;# 
  8873  011E                     	;# 
  8874  011E                     	;# 
  8875  011E                     	;# 
  8876  011F                     	;# 
  8877  011F                     	;# 
  8878  011F                     	;# 
  8879  011F                     	;# 
  8880  011F                     	;# 
  8881  018C                     	;# 
  8882  018D                     	;# 
  8883  018E                     	;# 
  8884  018F                     	;# 
  8885  0190                     	;# 
  8886  0191                     	;# 
  8887  0192                     	;# 
  8888  0196                     	;# 
  8889  0197                     	;# 
  8890  0198                     	;# 
  8891  0199                     	;# 
  8892  019A                     	;# 
  8893  019B                     	;# 
  8894  019C                     	;# 
  8895  020C                     	;# 
  8896  020D                     	;# 
  8897  020E                     	;# 
  8898  020E                     	;# 
  8899  020F                     	;# 
  8900  020F                     	;# 
  8901  0210                     	;# 
  8902  0210                     	;# 
  8903  0211                     	;# 
  8904  0211                     	;# 
  8905  0212                     	;# 
  8906  0213                     	;# 
  8907  0214                     	;# 
  8908  0214                     	;# 
  8909  0215                     	;# 
  8910  0215                     	;# 
  8911  0216                     	;# 
  8912  0216                     	;# 
  8913  0217                     	;# 
  8914  0217                     	;# 
  8915  0218                     	;# 
  8916  0219                     	;# 
  8917  021A                     	;# 
  8918  021A                     	;# 
  8919  021B                     	;# 
  8920  021B                     	;# 
  8921  021C                     	;# 
  8922  021C                     	;# 
  8923  021D                     	;# 
  8924  021D                     	;# 
  8925  021E                     	;# 
  8926  021F                     	;# 
  8927  028C                     	;# 
  8928  028C                     	;# 
  8929  028D                     	;# 
  8930  028D                     	;# 
  8931  028E                     	;# 
  8932  028F                     	;# 
  8933  0290                     	;# 
  8934  0291                     	;# 
  8935  0292                     	;# 
  8936  0292                     	;# 
  8937  0293                     	;# 
  8938  0293                     	;# 
  8939  0294                     	;# 
  8940  0295                     	;# 
  8941  0296                     	;# 
  8942  0297                     	;# 
  8943  0298                     	;# 
  8944  0298                     	;# 
  8945  0299                     	;# 
  8946  0299                     	;# 
  8947  029A                     	;# 
  8948  029B                     	;# 
  8949  029C                     	;# 
  8950  029D                     	;# 
  8951  029F                     	;# 
  8952  030C                     	;# 
  8953  030C                     	;# 
  8954  030D                     	;# 
  8955  030E                     	;# 
  8956  030F                     	;# 
  8957  0310                     	;# 
  8958  0310                     	;# 
  8959  0311                     	;# 
  8960  0312                     	;# 
  8961  0313                     	;# 
  8962  0314                     	;# 
  8963  0314                     	;# 
  8964  0315                     	;# 
  8965  0316                     	;# 
  8966  0317                     	;# 
  8967  0318                     	;# 
  8968  0318                     	;# 
  8969  0319                     	;# 
  8970  031A                     	;# 
  8971  031B                     	;# 
  8972  038C                     	;# 
  8973  038C                     	;# 
  8974  038D                     	;# 
  8975  038E                     	;# 
  8976  0390                     	;# 
  8977  0390                     	;# 
  8978  0391                     	;# 
  8979  0392                     	;# 
  8980  048C                     	;# 
  8981  048C                     	;# 
  8982  048D                     	;# 
  8983  048E                     	;# 
  8984  048F                     	;# 
  8985  048F                     	;# 
  8986  0490                     	;# 
  8987  0491                     	;# 
  8988  0492                     	;# 
  8989  0492                     	;# 
  8990  0493                     	;# 
  8991  0494                     	;# 
  8992  0495                     	;# 
  8993  0495                     	;# 
  8994  0496                     	;# 
  8995  0497                     	;# 
  8996  0498                     	;# 
  8997  0499                     	;# 
  8998  049A                     	;# 
  8999  049B                     	;# 
  9000  049C                     	;# 
  9001  049D                     	;# 
  9002  058C                     	;# 
  9003  058C                     	;# 
  9004  058D                     	;# 
  9005  058E                     	;# 
  9006  058F                     	;# 
  9007  058F                     	;# 
  9008  0590                     	;# 
  9009  0591                     	;# 
  9010  0592                     	;# 
  9011  0593                     	;# 
  9012  059C                     	;# 
  9013  059C                     	;# 
  9014  059D                     	;# 
  9015  059D                     	;# 
  9016  059E                     	;# 
  9017  059F                     	;# 
  9018  060C                     	;# 
  9019  060C                     	;# 
  9020  060D                     	;# 
  9021  060D                     	;# 
  9022  060E                     	;# 
  9023  060F                     	;# 
  9024  0610                     	;# 
  9025  0611                     	;# 
  9026  0612                     	;# 
  9027  0613                     	;# 
  9028  0614                     	;# 
  9029  0616                     	;# 
  9030  0616                     	;# 
  9031  0617                     	;# 
  9032  0617                     	;# 
  9033  0618                     	;# 
  9034  0619                     	;# 
  9035  061A                     	;# 
  9036  061B                     	;# 
  9037  061C                     	;# 
  9038  061D                     	;# 
  9039  061E                     	;# 
  9040  070C                     	;# 
  9041  070D                     	;# 
  9042  070E                     	;# 
  9043  070F                     	;# 
  9044  0710                     	;# 
  9045  0711                     	;# 
  9046  0712                     	;# 
  9047  0713                     	;# 
  9048  0714                     	;# 
  9049  0716                     	;# 
  9050  0717                     	;# 
  9051  0718                     	;# 
  9052  0719                     	;# 
  9053  071A                     	;# 
  9054  071B                     	;# 
  9055  071C                     	;# 
  9056  071D                     	;# 
  9057  071E                     	;# 
  9058  0796                     	;# 
  9059  0797                     	;# 
  9060  0798                     	;# 
  9061  0799                     	;# 
  9062  079A                     	;# 
  9063  079B                     	;# 
  9064  079C                     	;# 
  9065  079D                     	;# 
  9066  080C                     	;# 
  9067  080D                     	;# 
  9068  080E                     	;# 
  9069  080F                     	;# 
  9070  0810                     	;# 
  9071  0811                     	;# 
  9072  0812                     	;# 
  9073  0813                     	;# 
  9074  0814                     	;# 
  9075  081A                     	;# 
  9076  081A                     	;# 
  9077  081B                     	;# 
  9078  081C                     	;# 
  9079  081C                     	;# 
  9080  081D                     	;# 
  9081  081E                     	;# 
  9082  081F                     	;# 
  9083  088C                     	;# 
  9084  088D                     	;# 
  9085  088E                     	;# 
  9086  088F                     	;# 
  9087  0890                     	;# 
  9088  0891                     	;# 
  9089  0892                     	;# 
  9090  0893                     	;# 
  9091  0895                     	;# 
  9092  0896                     	;# 
  9093  0897                     	;# 
  9094  0898                     	;# 
  9095  0899                     	;# 
  9096  089A                     	;# 
  9097  089B                     	;# 
  9098  090C                     	;# 
  9099  090E                     	;# 
  9100  090F                     	;# 
  9101  091F                     	;# 
  9102  098F                     	;# 
  9103  098F                     	;# 
  9104  0990                     	;# 
  9105  0991                     	;# 
  9106  0992                     	;# 
  9107  0993                     	;# 
  9108  0994                     	;# 
  9109  0995                     	;# 
  9110  0996                     	;# 
  9111  0997                     	;# 
  9112  1E0F                     	;# 
  9113  1E10                     	;# 
  9114  1E11                     	;# 
  9115  1E12                     	;# 
  9116  1E13                     	;# 
  9117  1E14                     	;# 
  9118  1E15                     	;# 
  9119  1E16                     	;# 
  9120  1E17                     	;# 
  9121  1E18                     	;# 
  9122  1E19                     	;# 
  9123  1E1A                     	;# 
  9124  1E1B                     	;# 
  9125  1E1C                     	;# 
  9126  1E1D                     	;# 
  9127  1E1E                     	;# 
  9128  1E1F                     	;# 
  9129  1E20                     	;# 
  9130  1E21                     	;# 
  9131  1E22                     	;# 
  9132  1E23                     	;# 
  9133  1E24                     	;# 
  9134  1E25                     	;# 
  9135  1E26                     	;# 
  9136  1E27                     	;# 
  9137  1E28                     	;# 
  9138  1E29                     	;# 
  9139  1E2A                     	;# 
  9140  1E2B                     	;# 
  9141  1E2C                     	;# 
  9142  1E2D                     	;# 
  9143  1E2E                     	;# 
  9144  1E2F                     	;# 
  9145  1E30                     	;# 
  9146  1E31                     	;# 
  9147  1E32                     	;# 
  9148  1E33                     	;# 
  9149  1E34                     	;# 
  9150  1E35                     	;# 
  9151  1E36                     	;# 
  9152  1E37                     	;# 
  9153  1E8F                     	;# 
  9154  1E90                     	;# 
  9155  1E91                     	;# 
  9156  1E92                     	;# 
  9157  1E93                     	;# 
  9158  1E94                     	;# 
  9159  1E95                     	;# 
  9160  1E96                     	;# 
  9161  1E97                     	;# 
  9162  1E9C                     	;# 
  9163  1E9D                     	;# 
  9164  1E9E                     	;# 
  9165  1EA1                     	;# 
  9166  1EA2                     	;# 
  9167  1EA3                     	;# 
  9168  1EA4                     	;# 
  9169  1EA9                     	;# 
  9170  1EAA                     	;# 
  9171  1EB1                     	;# 
  9172  1EB2                     	;# 
  9173  1EB8                     	;# 
  9174  1EB9                     	;# 
  9175  1EBA                     	;# 
  9176  1EBB                     	;# 
  9177  1EBC                     	;# 
  9178  1EBD                     	;# 
  9179  1EBE                     	;# 
  9180  1EC3                     	;# 
  9181  1EC5                     	;# 
  9182  1EC6                     	;# 
  9183  1EC7                     	;# 
  9184  1EC8                     	;# 
  9185  1EC9                     	;# 
  9186  1ECA                     	;# 
  9187  1ECB                     	;# 
  9188  1ECB                     	;# 
  9189  1ECB                     	;# 
  9190  1ECC                     	;# 
  9191  1ECC                     	;# 
  9192  1ECC                     	;# 
  9193  1F10                     	;# 
  9194  1F11                     	;# 
  9195  1F12                     	;# 
  9196  1F14                     	;# 
  9197  1F15                     	;# 
  9198  1F1C                     	;# 
  9199  1F1D                     	;# 
  9200  1F1E                     	;# 
  9201  1F1F                     	;# 
  9202  1F20                     	;# 
  9203  1F21                     	;# 
  9204  1F22                     	;# 
  9205  1F23                     	;# 
  9206  1F24                     	;# 
  9207  1F25                     	;# 
  9208  1F26                     	;# 
  9209  1F27                     	;# 
  9210  1F38                     	;# 
  9211  1F39                     	;# 
  9212  1F3A                     	;# 
  9213  1F3B                     	;# 
  9214  1F3C                     	;# 
  9215  1F3D                     	;# 
  9216  1F3E                     	;# 
  9217  1F3F                     	;# 
  9218  1F43                     	;# 
  9219  1F44                     	;# 
  9220  1F45                     	;# 
  9221  1F46                     	;# 
  9222  1F47                     	;# 
  9223  1F48                     	;# 
  9224  1F49                     	;# 
  9225  1F4A                     	;# 
  9226  1F4E                     	;# 
  9227  1F4F                     	;# 
  9228  1F50                     	;# 
  9229  1F51                     	;# 
  9230  1F52                     	;# 
  9231  1F53                     	;# 
  9232  1F54                     	;# 
  9233  1F55                     	;# 
  9234  1FE4                     	;# 
  9235  1FE5                     	;# 
  9236  1FE6                     	;# 
  9237  1FE7                     	;# 
  9238  1FE8                     	;# 
  9239  1FE8                     	;# 
  9240  1FE9                     	;# 
  9241  1FEA                     	;# 
  9242  1FEB                     	;# 
  9243  1FED                     	;# 
  9244  1FEE                     	;# 
  9245  1FEF                     	;# 
  9246  0000                     	;# 
  9247  0001                     	;# 
  9248  0002                     	;# 
  9249  0003                     	;# 
  9250  0004                     	;# 
  9251  0005                     	;# 
  9252  0006                     	;# 
  9253  0007                     	;# 
  9254  0008                     	;# 
  9255  0009                     	;# 
  9256  000A                     	;# 
  9257  000B                     	;# 
  9258  000C                     	;# 
  9259  000D                     	;# 
  9260  000E                     	;# 
  9261  0012                     	;# 
  9262  0013                     	;# 
  9263  0014                     	;# 
  9264  0018                     	;# 
  9265  0019                     	;# 
  9266  001A                     	;# 
  9267  008C                     	;# 
  9268  008C                     	;# 
  9269  008D                     	;# 
  9270  008E                     	;# 
  9271  008E                     	;# 
  9272  008F                     	;# 
  9273  0090                     	;# 
  9274  0090                     	;# 
  9275  0091                     	;# 
  9276  0092                     	;# 
  9277  0092                     	;# 
  9278  0093                     	;# 
  9279  0094                     	;# 
  9280  0094                     	;# 
  9281  0095                     	;# 
  9282  0096                     	;# 
  9283  0096                     	;# 
  9284  0097                     	;# 
  9285  0098                     	;# 
  9286  0099                     	;# 
  9287  009A                     	;# 
  9288  009B                     	;# 
  9289  009B                     	;# 
  9290  009C                     	;# 
  9291  009D                     	;# 
  9292  009D                     	;# 
  9293  009E                     	;# 
  9294  009F                     	;# 
  9295  010C                     	;# 
  9296  010C                     	;# 
  9297  010D                     	;# 
  9298  010E                     	;# 
  9299  010F                     	;# 
  9300  010F                     	;# 
  9301  0110                     	;# 
  9302  0111                     	;# 
  9303  0112                     	;# 
  9304  0113                     	;# 
  9305  0114                     	;# 
  9306  0115                     	;# 
  9307  0116                     	;# 
  9308  0117                     	;# 
  9309  0118                     	;# 
  9310  0119                     	;# 
  9311  0119                     	;# 
  9312  0119                     	;# 
  9313  011A                     	;# 
  9314  011A                     	;# 
  9315  011A                     	;# 
  9316  011B                     	;# 
  9317  011B                     	;# 
  9318  011B                     	;# 
  9319  011B                     	;# 
  9320  011B                     	;# 
  9321  011C                     	;# 
  9322  011C                     	;# 
  9323  011C                     	;# 
  9324  011D                     	;# 
  9325  011D                     	;# 
  9326  011D                     	;# 
  9327  011E                     	;# 
  9328  011E                     	;# 
  9329  011E                     	;# 
  9330  011F                     	;# 
  9331  011F                     	;# 
  9332  011F                     	;# 
  9333  011F                     	;# 
  9334  011F                     	;# 
  9335  018C                     	;# 
  9336  018D                     	;# 
  9337  018E                     	;# 
  9338  018F                     	;# 
  9339  0190                     	;# 
  9340  0191                     	;# 
  9341  0192                     	;# 
  9342  0196                     	;# 
  9343  0197                     	;# 
  9344  0198                     	;# 
  9345  0199                     	;# 
  9346  019A                     	;# 
  9347  019B                     	;# 
  9348  019C                     	;# 
  9349  020C                     	;# 
  9350  020D                     	;# 
  9351  020E                     	;# 
  9352  020E                     	;# 
  9353  020F                     	;# 
  9354  020F                     	;# 
  9355  0210                     	;# 
  9356  0210                     	;# 
  9357  0211                     	;# 
  9358  0211                     	;# 
  9359  0212                     	;# 
  9360  0213                     	;# 
  9361  0214                     	;# 
  9362  0214                     	;# 
  9363  0215                     	;# 
  9364  0215                     	;# 
  9365  0216                     	;# 
  9366  0216                     	;# 
  9367  0217                     	;# 
  9368  0217                     	;# 
  9369  0218                     	;# 
  9370  0219                     	;# 
  9371  021A                     	;# 
  9372  021A                     	;# 
  9373  021B                     	;# 
  9374  021B                     	;# 
  9375  021C                     	;# 
  9376  021C                     	;# 
  9377  021D                     	;# 
  9378  021D                     	;# 
  9379  021E                     	;# 
  9380  021F                     	;# 
  9381  028C                     	;# 
  9382  028C                     	;# 
  9383  028D                     	;# 
  9384  028D                     	;# 
  9385  028E                     	;# 
  9386  028F                     	;# 
  9387  0290                     	;# 
  9388  0291                     	;# 
  9389  0292                     	;# 
  9390  0292                     	;# 
  9391  0293                     	;# 
  9392  0293                     	;# 
  9393  0294                     	;# 
  9394  0295                     	;# 
  9395  0296                     	;# 
  9396  0297                     	;# 
  9397  0298                     	;# 
  9398  0298                     	;# 
  9399  0299                     	;# 
  9400  0299                     	;# 
  9401  029A                     	;# 
  9402  029B                     	;# 
  9403  029C                     	;# 
  9404  029D                     	;# 
  9405  029F                     	;# 
  9406  030C                     	;# 
  9407  030C                     	;# 
  9408  030D                     	;# 
  9409  030E                     	;# 
  9410  030F                     	;# 
  9411  0310                     	;# 
  9412  0310                     	;# 
  9413  0311                     	;# 
  9414  0312                     	;# 
  9415  0313                     	;# 
  9416  0314                     	;# 
  9417  0314                     	;# 
  9418  0315                     	;# 
  9419  0316                     	;# 
  9420  0317                     	;# 
  9421  0318                     	;# 
  9422  0318                     	;# 
  9423  0319                     	;# 
  9424  031A                     	;# 
  9425  031B                     	;# 
  9426  038C                     	;# 
  9427  038C                     	;# 
  9428  038D                     	;# 
  9429  038E                     	;# 
  9430  0390                     	;# 
  9431  0390                     	;# 
  9432  0391                     	;# 
  9433  0392                     	;# 
  9434  048C                     	;# 
  9435  048C                     	;# 
  9436  048D                     	;# 
  9437  048E                     	;# 
  9438  048F                     	;# 
  9439  048F                     	;# 
  9440  0490                     	;# 
  9441  0491                     	;# 
  9442  0492                     	;# 
  9443  0492                     	;# 
  9444  0493                     	;# 
  9445  0494                     	;# 
  9446  0495                     	;# 
  9447  0495                     	;# 
  9448  0496                     	;# 
  9449  0497                     	;# 
  9450  0498                     	;# 
  9451  0499                     	;# 
  9452  049A                     	;# 
  9453  049B                     	;# 
  9454  049C                     	;# 
  9455  049D                     	;# 
  9456  058C                     	;# 
  9457  058C                     	;# 
  9458  058D                     	;# 
  9459  058E                     	;# 
  9460  058F                     	;# 
  9461  058F                     	;# 
  9462  0590                     	;# 
  9463  0591                     	;# 
  9464  0592                     	;# 
  9465  0593                     	;# 
  9466  059C                     	;# 
  9467  059C                     	;# 
  9468  059D                     	;# 
  9469  059D                     	;# 
  9470  059E                     	;# 
  9471  059F                     	;# 
  9472  060C                     	;# 
  9473  060C                     	;# 
  9474  060D                     	;# 
  9475  060D                     	;# 
  9476  060E                     	;# 
  9477  060F                     	;# 
  9478  0610                     	;# 
  9479  0611                     	;# 
  9480  0612                     	;# 
  9481  0613                     	;# 
  9482  0614                     	;# 
  9483  0616                     	;# 
  9484  0616                     	;# 
  9485  0617                     	;# 
  9486  0617                     	;# 
  9487  0618                     	;# 
  9488  0619                     	;# 
  9489  061A                     	;# 
  9490  061B                     	;# 
  9491  061C                     	;# 
  9492  061D                     	;# 
  9493  061E                     	;# 
  9494  070C                     	;# 
  9495  070D                     	;# 
  9496  070E                     	;# 
  9497  070F                     	;# 
  9498  0710                     	;# 
  9499  0711                     	;# 
  9500  0712                     	;# 
  9501  0713                     	;# 
  9502  0714                     	;# 
  9503  0716                     	;# 
  9504  0717                     	;# 
  9505  0718                     	;# 
  9506  0719                     	;# 
  9507  071A                     	;# 
  9508  071B                     	;# 
  9509  071C                     	;# 
  9510  071D                     	;# 
  9511  071E                     	;# 
  9512  0796                     	;# 
  9513  0797                     	;# 
  9514  0798                     	;# 
  9515  0799                     	;# 
  9516  079A                     	;# 
  9517  079B                     	;# 
  9518  079C                     	;# 
  9519  079D                     	;# 
  9520  080C                     	;# 
  9521  080D                     	;# 
  9522  080E                     	;# 
  9523  080F                     	;# 
  9524  0810                     	;# 
  9525  0811                     	;# 
  9526  0812                     	;# 
  9527  0813                     	;# 
  9528  0814                     	;# 
  9529  081A                     	;# 
  9530  081A                     	;# 
  9531  081B                     	;# 
  9532  081C                     	;# 
  9533  081C                     	;# 
  9534  081D                     	;# 
  9535  081E                     	;# 
  9536  081F                     	;# 
  9537  088C                     	;# 
  9538  088D                     	;# 
  9539  088E                     	;# 
  9540  088F                     	;# 
  9541  0890                     	;# 
  9542  0891                     	;# 
  9543  0892                     	;# 
  9544  0893                     	;# 
  9545  0895                     	;# 
  9546  0896                     	;# 
  9547  0897                     	;# 
  9548  0898                     	;# 
  9549  0899                     	;# 
  9550  089A                     	;# 
  9551  089B                     	;# 
  9552  090C                     	;# 
  9553  090E                     	;# 
  9554  090F                     	;# 
  9555  091F                     	;# 
  9556  098F                     	;# 
  9557  098F                     	;# 
  9558  0990                     	;# 
  9559  0991                     	;# 
  9560  0992                     	;# 
  9561  0993                     	;# 
  9562  0994                     	;# 
  9563  0995                     	;# 
  9564  0996                     	;# 
  9565  0997                     	;# 
  9566  1E0F                     	;# 
  9567  1E10                     	;# 
  9568  1E11                     	;# 
  9569  1E12                     	;# 
  9570  1E13                     	;# 
  9571  1E14                     	;# 
  9572  1E15                     	;# 
  9573  1E16                     	;# 
  9574  1E17                     	;# 
  9575  1E18                     	;# 
  9576  1E19                     	;# 
  9577  1E1A                     	;# 
  9578  1E1B                     	;# 
  9579  1E1C                     	;# 
  9580  1E1D                     	;# 
  9581  1E1E                     	;# 
  9582  1E1F                     	;# 
  9583  1E20                     	;# 
  9584  1E21                     	;# 
  9585  1E22                     	;# 
  9586  1E23                     	;# 
  9587  1E24                     	;# 
  9588  1E25                     	;# 
  9589  1E26                     	;# 
  9590  1E27                     	;# 
  9591  1E28                     	;# 
  9592  1E29                     	;# 
  9593  1E2A                     	;# 
  9594  1E2B                     	;# 
  9595  1E2C                     	;# 
  9596  1E2D                     	;# 
  9597  1E2E                     	;# 
  9598  1E2F                     	;# 
  9599  1E30                     	;# 
  9600  1E31                     	;# 
  9601  1E32                     	;# 
  9602  1E33                     	;# 
  9603  1E34                     	;# 
  9604  1E35                     	;# 
  9605  1E36                     	;# 
  9606  1E37                     	;# 
  9607  1E8F                     	;# 
  9608  1E90                     	;# 
  9609  1E91                     	;# 
  9610  1E92                     	;# 
  9611  1E93                     	;# 
  9612  1E94                     	;# 
  9613  1E95                     	;# 
  9614  1E96                     	;# 
  9615  1E97                     	;# 
  9616  1E9C                     	;# 
  9617  1E9D                     	;# 
  9618  1E9E                     	;# 
  9619  1EA1                     	;# 
  9620  1EA2                     	;# 
  9621  1EA3                     	;# 
  9622  1EA4                     	;# 
  9623  1EA9                     	;# 
  9624  1EAA                     	;# 
  9625  1EB1                     	;# 
  9626  1EB2                     	;# 
  9627  1EB8                     	;# 
  9628  1EB9                     	;# 
  9629  1EBA                     	;# 
  9630  1EBB                     	;# 
  9631  1EBC                     	;# 
  9632  1EBD                     	;# 
  9633  1EBE                     	;# 
  9634  1EC3                     	;# 
  9635  1EC5                     	;# 
  9636  1EC6                     	;# 
  9637  1EC7                     	;# 
  9638  1EC8                     	;# 
  9639  1EC9                     	;# 
  9640  1ECA                     	;# 
  9641  1ECB                     	;# 
  9642  1ECB                     	;# 
  9643  1ECB                     	;# 
  9644  1ECC                     	;# 
  9645  1ECC                     	;# 
  9646  1ECC                     	;# 
  9647  1F10                     	;# 
  9648  1F11                     	;# 
  9649  1F12                     	;# 
  9650  1F14                     	;# 
  9651  1F15                     	;# 
  9652  1F1C                     	;# 
  9653  1F1D                     	;# 
  9654  1F1E                     	;# 
  9655  1F1F                     	;# 
  9656  1F20                     	;# 
  9657  1F21                     	;# 
  9658  1F22                     	;# 
  9659  1F23                     	;# 
  9660  1F24                     	;# 
  9661  1F25                     	;# 
  9662  1F26                     	;# 
  9663  1F27                     	;# 
  9664  1F38                     	;# 
  9665  1F39                     	;# 
  9666  1F3A                     	;# 
  9667  1F3B                     	;# 
  9668  1F3C                     	;# 
  9669  1F3D                     	;# 
  9670  1F3E                     	;# 
  9671  1F3F                     	;# 
  9672  1F43                     	;# 
  9673  1F44                     	;# 
  9674  1F45                     	;# 
  9675  1F46                     	;# 
  9676  1F47                     	;# 
  9677  1F48                     	;# 
  9678  1F49                     	;# 
  9679  1F4A                     	;# 
  9680  1F4E                     	;# 
  9681  1F4F                     	;# 
  9682  1F50                     	;# 
  9683  1F51                     	;# 
  9684  1F52                     	;# 
  9685  1F53                     	;# 
  9686  1F54                     	;# 
  9687  1F55                     	;# 
  9688  1FE4                     	;# 
  9689  1FE5                     	;# 
  9690  1FE6                     	;# 
  9691  1FE7                     	;# 
  9692  1FE8                     	;# 
  9693  1FE8                     	;# 
  9694  1FE9                     	;# 
  9695  1FEA                     	;# 
  9696  1FEB                     	;# 
  9697  1FED                     	;# 
  9698  1FEE                     	;# 
  9699  1FEF                     	;_dmxArray
  9700                           
  9701                           	psect	idataBANK1
  9702  09CD                     __pidataBANK1:	
  9703                           
  9704                           ;initializer for _initial
  9705  09CD  3401               	retlw	1
  9706  09CE  3400               	retlw	0
  9707                           
  9708                           ;initializer for _delay
  9709  09CF  340A               	retlw	10
  9710  09D0  3400               	retlw	0
  9711                           
  9712                           ;initializer for _threshold
  9713  09D1  3490               	retlw	144
  9714  09D2  3406               	retlw	6
  9715                           
  9716                           ;initializer for _incInterval
  9717  09D3  3464               	retlw	100
  9718  09D4  3400               	retlw	0
  9719                           
  9720                           ;initializer for _address
  9721  09D5  3401               	retlw	1
  9722  09D6  3400               	retlw	0
  9723                           
  9724                           ;initializer for _currentSelection
  9725  09D7  3403               	retlw	3
  9726                           
  9727                           ;initializer for _menuSelected
  9728  09D8  3403               	retlw	3
  9729                           
  9730                           ;initializer for _startup
  9731  09D9  3401               	retlw	1
  9732                           
  9733                           	psect	stringtext1
  9734  0760                     __pstringtext1:	
  9735  0760                     _charTable:	
  9736  0760  3400               	retlw	0
  9737  0761  3482               	retlw	130
  9738  0762  3421               	retlw	33
  9739  0763  3400               	retlw	0
  9740  0764  3400               	retlw	0
  9741  0765  3400               	retlw	0
  9742  0766  3400               	retlw	0
  9743  0767  3402               	retlw	2
  9744  0768  3439               	retlw	57
  9745  0769  340F               	retlw	15
  9746  076A  3400               	retlw	0
  9747  076B  3400               	retlw	0
  9748  076C  3400               	retlw	0
  9749  076D  3440               	retlw	64
  9750  076E  3480               	retlw	128
  9751  076F  3400               	retlw	0
  9752  0770  343F               	retlw	63
  9753  0771  3406               	retlw	6
  9754  0772  345B               	retlw	91
  9755  0773  344F               	retlw	79
  9756  0774  3466               	retlw	102
  9757  0775  346D               	retlw	109
  9758  0776  347D               	retlw	125
  9759  0777  3407               	retlw	7
  9760  0778  347F               	retlw	127
  9761  0779  346F               	retlw	111
  9762  077A  3400               	retlw	0
  9763  077B  3400               	retlw	0
  9764  077C  3400               	retlw	0
  9765  077D  3448               	retlw	72
  9766  077E  3400               	retlw	0
  9767  077F  3453               	retlw	83
  9768  0780  3400               	retlw	0
  9769  0781  3477               	retlw	119
  9770  0782  347C               	retlw	124
  9771  0783  3439               	retlw	57
  9772  0784  345E               	retlw	94
  9773  0785  3479               	retlw	121
  9774  0786  3471               	retlw	113
  9775  0787  346F               	retlw	111
  9776  0788  3476               	retlw	118
  9777  0789  3406               	retlw	6
  9778  078A  341E               	retlw	30
  9779  078B  3400               	retlw	0
  9780  078C  3438               	retlw	56
  9781  078D  3400               	retlw	0
  9782  078E  3454               	retlw	84
  9783  078F  343F               	retlw	63
  9784  0790  3473               	retlw	115
  9785  0791  3467               	retlw	103
  9786  0792  3450               	retlw	80
  9787  0793  346D               	retlw	109
  9788  0794  3478               	retlw	120
  9789  0795  343E               	retlw	62
  9790  0796  3400               	retlw	0
  9791  0797  3400               	retlw	0
  9792  0798  3400               	retlw	0
  9793  0799  346E               	retlw	110
  9794  079A  3400               	retlw	0
  9795  079B  3439               	retlw	57
  9796  079C  3400               	retlw	0
  9797  079D  340F               	retlw	15
  9798  079E  3400               	retlw	0
  9799  079F  3408               	retlw	8
  9800  07A0  3463               	retlw	99
  9801  07A1  345F               	retlw	95
  9802  07A2  347C               	retlw	124
  9803  07A3  3458               	retlw	88
  9804  07A4  345E               	retlw	94
  9805  07A5  347B               	retlw	123
  9806  07A6  3471               	retlw	113
  9807  07A7  346F               	retlw	111
  9808  07A8  3474               	retlw	116
  9809  07A9  3402               	retlw	2
  9810  07AA  341E               	retlw	30
  9811  07AB  3400               	retlw	0
  9812  07AC  3406               	retlw	6
  9813  07AD  3400               	retlw	0
  9814  07AE  3454               	retlw	84
  9815  07AF  345C               	retlw	92
  9816  07B0  3473               	retlw	115
  9817  07B1  3467               	retlw	103
  9818  07B2  3450               	retlw	80
  9819  07B3  346D               	retlw	109
  9820  07B4  3478               	retlw	120
  9821  07B5  341C               	retlw	28
  9822  07B6  3400               	retlw	0
  9823  07B7  3400               	retlw	0
  9824  07B8  3400               	retlw	0
  9825  07B9  346E               	retlw	110
  9826  07BA  3400               	retlw	0
  9827  07BB  3439               	retlw	57
  9828  07BC  3430               	retlw	48
  9829  07BD  340F               	retlw	15
  9830  07BE  3400               	retlw	0
  9831  07BF  3400               	retlw	0
  9832  07C0                     __end_of_charTable:	
  9833                           
  9834                           	psect	nvBANK2
  9835  0160                     __pnvBANK2:	
  9836  0160                     _ADCC_ADTI_InterruptHandler:	
  9837  0160                     	ds	2
  9838  0162                     _TMR0_InterruptHandler:	
  9839  0162                     	ds	2
  9840  0164                     _EUSART1_ErrorHandler:	
  9841  0164                     	ds	2
  9842  0166                     _EUSART1_OverrunErrorHandler:	
  9843  0166                     	ds	2
  9844  0168                     _EUSART1_FramingErrorHandler:	
  9845  0168                     	ds	2
  9846  016A                     _EUSART1_RxDefaultInterruptHandler:	
  9847  016A                     	ds	2
  9848  0014                     _TRISCbits	set	20
  9849  0012                     _TRISAbits	set	18
  9850  000B                     _INTCONbits	set	11
  9851  0014                     _TRISC	set	20
  9852  0013                     _TRISB	set	19
  9853  0012                     _TRISA	set	18
  9854  001A                     _LATC	set	26
  9855  0019                     _LATB	set	25
  9856  0018                     _LATA	set	24
  9857  000C                     _PORTA	set	12
  9858  000E                     _PORTC	set	14
  9859  0090                     _ADERRL	set	144
  9860  0091                     _ADERRH	set	145
  9861  009B                     _ADPREVL	set	155
  9862  009C                     _ADPREVH	set	156
  9863  0094                     _ADFLTRL	set	148
  9864  0095                     _ADFLTRH	set	149
  9865  0096                     _ADACCL	set	150
  9866  0097                     _ADACCH	set	151
  9867  0099                     _ADCNT	set	153
  9868  009D                     _ADRESL	set	157
  9869  009E                     _ADRESH	set	158
  9870  009F                     _ADPCH	set	159
  9871  009A                     _ADRPT	set	154
  9872  0098                     _ADACCU	set	152
  9873  0093                     _ADSTPTH	set	147
  9874  0092                     _ADSTPTL	set	146
  9875  008F                     _ADUTHH	set	143
  9876  008E                     _ADUTHL	set	142
  9877  008D                     _ADLTHH	set	141
  9878  008C                     _ADLTHL	set	140
  9879  0112                     _ADCON1bits	set	274
  9880  0115                     _ADSTATbits	set	277
  9881  0113                     _ADCON2bits	set	275
  9882  0114                     _ADCON3bits	set	276
  9883  0111                     _ADCON0bits	set	273
  9884  0111                     _ADCON0	set	273
  9885  0118                     _ADCLK	set	280
  9886  0117                     _ADACT	set	279
  9887  0116                     _ADREF	set	278
  9888  0115                     _ADSTAT	set	277
  9889  0114                     _ADCON3	set	276
  9890  0113                     _ADCON2	set	275
  9891  0112                     _ADCON1	set	274
  9892  0110                     _ADPREH	set	272
  9893  010F                     _ADPREL	set	271
  9894  010E                     _ADCAP	set	270
  9895  010D                     _ADACQH	set	269
  9896  010C                     _ADACQL	set	268
  9897  0119                     _RC1REG	set	281
  9898  011D                     _RC1STAbits	set	285
  9899  011A                     _TX1REG	set	282
  9900  011E                     _TX1STAbits	set	286
  9901  011C                     _SP1BRGH	set	284
  9902  011B                     _SP1BRGL	set	283
  9903  011E                     _TX1STA	set	286
  9904  011D                     _RC1STA	set	285
  9905  011F                     _BAUD1CON	set	287
  9906  018C                     _SSP1BUF	set	396
  9907  0191                     _SSP1CON2bits	set	401
  9908  0190                     _SSP1CON1bits	set	400
  9909  018D                     _SSP1ADD	set	397
  9910  0192                     _SSP1CON3	set	402
  9911  0190                     _SSP1CON1	set	400
  9912  018F                     _SSP1STAT	set	399
  9913  021E                     _CCPTMRS0bits	set	542
  9914  028D                     _PR2	set	653
  9915  028C                     _TMR2	set	652
  9916  028E                     _T2CONbits	set	654
  9917  0291                     _T2RSTbits	set	657
  9918  028F                     _T2HLTbits	set	655
  9919  028E                     _T2CON	set	654
  9920  028C                     _T2TMR	set	652
  9921  028D                     _T2PR	set	653
  9922  0291                     _T2RST	set	657
  9923  028F                     _T2HLT	set	655
  9924  0290                     _T2CLKCON	set	656
  9925  0312                     _CCP2CONbits	set	786
  9926  0310                     _CCPR2L	set	784
  9927  0311                     _CCPR2H	set	785
  9928  0312                     _CCP2CON	set	786
  9929  030E                     _CCP1CONbits	set	782
  9930  030C                     _CCPR1L	set	780
  9931  030D                     _CCPR1H	set	781
  9932  030E                     _CCP1CON	set	782
  9933  031A                     _CCP4CONbits	set	794
  9934  0318                     _CCPR4L	set	792
  9935  0319                     _CCPR4H	set	793
  9936  031A                     _CCP4CON	set	794
  9937  0316                     _CCP3CONbits	set	790
  9938  0314                     _CCPR3L	set	788
  9939  0315                     _CCPR3H	set	789
  9940  0316                     _CCP3CON	set	790
  9941  059E                     _T0CON0bits	set	1438
  9942  059E                     _T0CON0	set	1438
  9943  059C                     _TMR0L	set	1436
  9944  059D                     _TMR0H	set	1437
  9945  059F                     _T0CON1	set	1439
  9946  070D                     _PIR1bits	set	1805
  9947  0717                     _PIE1bits	set	1815
  9948  070C                     _PIR0bits	set	1804
  9949  0716                     _PIE0bits	set	1814
  9950  070F                     _PIR3bits	set	1807
  9951  0719                     _PIE3bits	set	1817
  9952  0710                     _PIR4bits	set	1808
  9953  079D                     _PMD7	set	1949
  9954  079C                     _PMD6	set	1948
  9955  079B                     _PMD5	set	1947
  9956  079A                     _PMD4	set	1946
  9957  0799                     _PMD3	set	1945
  9958  0798                     _PMD2	set	1944
  9959  0797                     _PMD1	set	1943
  9960  0796                     _PMD0	set	1942
  9961  0892                     _OSCTUNE	set	2194
  9962  0893                     _OSCFRQ	set	2195
  9963  0891                     _OSCEN	set	2193
  9964  088F                     _OSCCON3	set	2191
  9965  088D                     _OSCCON1	set	2189
  9966  1ECB                     _RX1DTPPS	set	7883
  9967  1EC6                     _SSP1DATPPS	set	7878
  9968  1EC5                     _SSP1CLKPPS	set	7877
  9969  1F4F                     _WPUCbits	set	8015
  9970  1F4E                     _ANSELCbits	set	8014
  9971  1F39                     _WPUAbits	set	7993
  9972  1F38                     _ANSELAbits	set	7992
  9973  1F27                     _RC7PPS	set	7975
  9974  1F26                     _RC6PPS	set	7974
  9975  1F25                     _RC5PPS	set	7973
  9976  1F15                     _RA5PPS	set	7957
  9977  1F24                     _RC4PPS	set	7972
  9978  1F23                     _RC3PPS	set	7971
  9979  1F14                     _RA4PPS	set	7956
  9980  1F51                     _SLRCONC	set	8017
  9981  1F46                     _SLRCONB	set	8006
  9982  1F3B                     _SLRCONA	set	7995
  9983  1F50                     _ODCONC	set	8016
  9984  1F45                     _ODCONB	set	8005
  9985  1F3A                     _ODCONA	set	7994
  9986  1F4F                     _WPUC	set	8015
  9987  1F39                     _WPUA	set	7993
  9988  1F44                     _WPUB	set	8004
  9989  1F38                     _ANSELA	set	7992
  9990  1F43                     _ANSELB	set	8003
  9991  1F4E                     _ANSELC	set	8014
  9992                           
  9993                           	psect	stringtext2
  9994  1000                     __pstringtext2:	
  9995  1000                     STR_12:	
  9996  1000  3425               	retlw	37	;'%'
  9997  1001  3463               	retlw	99	;'c'
  9998  1002  3425               	retlw	37	;'%'
  9999  1003  3463               	retlw	99	;'c'
 10000  1004  3425               	retlw	37	;'%'
 10001  1005  3463               	retlw	99	;'c'
 10002  1006  3425               	retlw	37	;'%'
 10003  1007  3463               	retlw	99	;'c'
 10004  1008  340D               	retlw	13
 10005  1009  3400               	retlw	0
 10006                           
 10007                           	psect	stringtext3
 10008  100A                     __pstringtext3:	
 10009  100A                     STR_13:	
 10010  100A  3425               	retlw	37	;'%'
 10011  100B  3463               	retlw	99	;'c'
 10012  100C  3425               	retlw	37	;'%'
 10013  100D  3463               	retlw	99	;'c'
 10014  100E  3425               	retlw	37	;'%'
 10015  100F  3463               	retlw	99	;'c'
 10016  1010  3420               	retlw	32	;' '
 10017  1011  340D               	retlw	13
 10018  1012  3400               	retlw	0
 10019                           
 10020                           	psect	stringtext4
 10021  1013                     __pstringtext4:	
 10022  1013                     STR_11:	
 10023  1013  3420               	retlw	32	;' '
 10024  1014  3425               	retlw	37	;'%'
 10025  1015  3463               	retlw	99	;'c'
 10026  1016  3425               	retlw	37	;'%'
 10027  1017  3463               	retlw	99	;'c'
 10028  1018  3425               	retlw	37	;'%'
 10029  1019  3463               	retlw	99	;'c'
 10030  101A  340D               	retlw	13
 10031  101B  3400               	retlw	0
 10032                           
 10033                           	psect	stringtext5
 10034  101C                     __pstringtext5:	
 10035  101C                     STR_8:	
 10036  101C  3448               	retlw	72	;'H'
 10037  101D  3445               	retlw	69	;'E'
 10038  101E  3459               	retlw	89	;'Y'
 10039  101F  3459               	retlw	89	;'Y'
 10040  1020  3459               	retlw	89	;'Y'
 10041  1021  3459               	retlw	89	;'Y'
 10042  1022  3459               	retlw	89	;'Y'
 10043  1023  3459               	retlw	89	;'Y'
 10044  1024  3400               	retlw	0
 10045                           
 10046                           	psect	stringtext6
 10047  1025                     __pstringtext6:	
 10048  1025                     STR_14:	
 10049  1025  3425               	retlw	37	;'%'
 10050  1026  3463               	retlw	99	;'c'
 10051  1027  3425               	retlw	37	;'%'
 10052  1028  3463               	retlw	99	;'c'
 10053  1029  3420               	retlw	32	;' '
 10054  102A  3420               	retlw	32	;' '
 10055  102B  340D               	retlw	13
 10056  102C  3400               	retlw	0
 10057                           
 10058                           	psect	stringtext7
 10059  102D                     __pstringtext7:	
 10060  102D                     STR_10:	
 10061  102D  3420               	retlw	32	;' '
 10062  102E  3420               	retlw	32	;' '
 10063  102F  3425               	retlw	37	;'%'
 10064  1030  3463               	retlw	99	;'c'
 10065  1031  3425               	retlw	37	;'%'
 10066  1032  3463               	retlw	99	;'c'
 10067  1033  340D               	retlw	13
 10068  1034  3400               	retlw	0
 10069                           
 10070                           	psect	stringtext8
 10071  1035                     __pstringtext8:	
 10072  1035                     STR_15:	
 10073  1035  3425               	retlw	37	;'%'
 10074  1036  3463               	retlw	99	;'c'
 10075  1037  3420               	retlw	32	;' '
 10076  1038  3420               	retlw	32	;' '
 10077  1039  3420               	retlw	32	;' '
 10078  103A  340D               	retlw	13
 10079  103B  3400               	retlw	0
 10080                           
 10081                           	psect	stringtext9
 10082  103C                     __pstringtext9:	
 10083  103C                     STR_9:	
 10084  103C  3420               	retlw	32	;' '
 10085  103D  3420               	retlw	32	;' '
 10086  103E  3420               	retlw	32	;' '
 10087  103F  3425               	retlw	37	;'%'
 10088  1040  3463               	retlw	99	;'c'
 10089  1041  340D               	retlw	13
 10090  1042  3400               	retlw	0
 10091                           
 10092                           	psect	stringtext10
 10093  1043                     __pstringtext10:	
 10094  1043                     STR_16:	
 10095  1043  3420               	retlw	32	;' '
 10096  1044  3420               	retlw	32	;' '
 10097  1045  3420               	retlw	32	;' '
 10098  1046  3420               	retlw	32	;' '
 10099  1047  340D               	retlw	13
 10100  1048  3400               	retlw	0
 10101                           
 10102                           	psect	stringtext11
 10103  1049                     __pstringtext11:	
 10104  1049                     STR_5:	
 10105  1049  3450               	retlw	80	;'P'
 10106  104A  3443               	retlw	67	;'C'
 10107  104B  3420               	retlw	32	;' '
 10108  104C  3420               	retlw	32	;' '
 10109  104D  340D               	retlw	13
 10110  104E  3400               	retlw	0
 10111                           
 10112                           	psect	stringtext12
 10113  104F                     __pstringtext12:	
 10114  104F                     STR_2:	
 10115  104F  3442               	retlw	66	;'B'
 10116  1050  342D               	retlw	45	;'-'
 10117  1051  3431               	retlw	49	;'1'
 10118  1052  3420               	retlw	32	;' '
 10119  1053  340D               	retlw	13
 10120  1054  3400               	retlw	0
 10121                           
 10122                           	psect	stringtext13
 10123  1055                     __pstringtext13:	
 10124  1055                     STR_3:	
 10125  1055  3441               	retlw	65	;'A'
 10126  1056  344E               	retlw	78	;'N'
 10127  1057  3449               	retlw	73	;'I'
 10128  1058  3420               	retlw	32	;' '
 10129  1059  340D               	retlw	13
 10130  105A  3400               	retlw	0
 10131                           
 10132                           	psect	stringtext14
 10133  105B                     __pstringtext14:	
 10134  105B                     STR_1:	
 10135  105B  3453               	retlw	83	;'S'
 10136  105C  3445               	retlw	69	;'E'
 10137  105D  344C               	retlw	76	;'L'
 10138  105E  3431               	retlw	49	;'1'
 10139  105F  340D               	retlw	13
 10140  1060  3400               	retlw	0
 10141                           
 10142                           	psect	stringtext15
 10143  1061                     __pstringtext15:	
 10144  1061                     STR_4:	
 10145  1061  3442               	retlw	66	;'B'
 10146  1062  3445               	retlw	69	;'E'
 10147  1063  3441               	retlw	65	;'A'
 10148  1064  3454               	retlw	84	;'T'
 10149  1065  340D               	retlw	13
 10150  1066  3400               	retlw	0
 10151                           
 10152                           	psect	stringtext16
 10153  1067                     __pstringtext16:	
 10154  1067                     STR_6:	
 10155  1067  3420               	retlw	32	;' '
 10156  1068  3420               	retlw	32	;' '
 10157  1069  3420               	retlw	32	;' '
 10158  106A  3420               	retlw	32	;' '
 10159  106B  3400               	retlw	0
 10160                           
 10161                           	psect	stringtext17
 10162  0000                     __pstringtext17:	
 10163  1047                     
 10164                           ; #config settings
 10165  0000                     
 10166                           	psect	cinit
 10167  0032                     start_initialization:	
 10168  0032                     __initialization:		;BIGRAM
 10169                           
 10170                           ; Initialize objects allocated to BANK1
 10171  0032  30CD               	movlw	low __pidataBANK1
 10172  0033  0084               	movwf	4
 10173  0034  3089               	movlw	(high __pidataBANK1)| (0+128)
 10174  0035  0085               	movwf	5
 10175  0036  30E3               	movlw	low __pdataBANK1
 10176  0037  0086               	movwf	6
 10177  0038  3000               	movlw	high __pdataBANK1
 10178  0039  0087               	movwf	7
 10179  003A  3000               	movlw	0
 10180  003B  00FF               	movwf	btemp+1
 10181  003C  300D               	movlw	13
 10182  003D  3189  21A7  3180   	fcall	init_ram
 10183                           
 10184                           ; Clear objects allocated to BIGRAM
 10185  0040  30EE               	movlw	low (0+9198)
 10186  0041  0084               	movwf	4
 10187  0042  3023               	movlw	high (0+9198)
 10188  0043  0085               	movwf	5
 10189  0044  3002               	movlw	2
 10190  0045  00FE               	movwf	btemp
 10191  0046  3004               	movlw	4
 10192  0047  00FF               	movwf	btemp+1
 10193  0048  3189  219B  3180   	fcall	clear_ram0
 10194                           
 10195                           ; Clear objects allocated to COMMON
 10196  004B  01F0               	clrf	__pbssCOMMON& (0+127)
 10197  004C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
 10198  004D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
 10199  004E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
 10200  004F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
 10201  0050  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
 10202  0051  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
 10203                           
 10204                           ; Clear objects allocated to BANK1
 10205  0052  30A0               	movlw	low __pbssBANK1
 10206  0053  0084               	movwf	4
 10207  0054  3000               	movlw	high __pbssBANK1
 10208  0055  0085               	movwf	5
 10209  0056  3035               	movlw	53
 10210  0057  00FE               	movwf	btemp
 10211  0058  3000               	movlw	0
 10212  0059  00FF               	movwf	btemp+1
 10213  005A  3189  219B  3180   	fcall	clear_ram0
 10214                           
 10215                           ; Clear objects allocated to BANK2
 10216  005D  3020               	movlw	low __pbssBANK2
 10217  005E  0084               	movwf	4
 10218  005F  3001               	movlw	high __pbssBANK2
 10219  0060  0085               	movwf	5
 10220  0061  3040               	movlw	64
 10221  0062  00FE               	movwf	btemp
 10222  0063  3000               	movlw	0
 10223  0064  00FF               	movwf	btemp+1
 10224  0065  3189  219B  3180   	fcall	clear_ram0
 10225                           
 10226                           ; Clear objects allocated to BANK3
 10227  0068  30A0               	movlw	low __pbssBANK3
 10228  0069  0084               	movwf	4
 10229  006A  3001               	movlw	high __pbssBANK3
 10230  006B  0085               	movwf	5
 10231  006C  3020               	movlw	32
 10232  006D  00FE               	movwf	btemp
 10233  006E  3000               	movlw	0
 10234  006F  00FF               	movwf	btemp+1
 10235  0070  3189  219B         	fcall	clear_ram0
 10236  0072                     end_of_initialization:	
 10237                           ;End of C runtime variable initialization code
 10238                           
 10239  0072                     __end_of__initialization:	
 10240  0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10241  0073  0140               	movlb	0
 10242  0074  3187  2FC0         	ljmp	_main	;jump to C main() function
 10243                           
 10244                           	psect	bssCOMMON
 10245  0070                     __pbssCOMMON:	
 10246  0070                     _currentState:	
 10247  0070                     	ds	2
 10248  0072                     _p_i2c1_trb_current:	
 10249  0072                     	ds	1
 10250  0073                     _eusart1RxTail:	
 10251  0073                     	ds	1
 10252  0074                     _eusart1RxHead:	
 10253  0074                     	ds	1
 10254  0075                     I2C1_ISR@i2c_address:	
 10255  0075                     	ds	2
 10256                           
 10257                           	psect	bssBANK1
 10258  00A0                     __pbssBANK1:	
 10259  00A0                     _i2c1_object:	
 10260  00A0                     	ds	5
 10261  00A5                     _width:	
 10262  00A5                     	ds	2
 10263  00A7                     _flags:	
 10264  00A7                     	ds	2
 10265  00A9                     _arrayIndex:	
 10266  00A9                     	ds	2
 10267  00AB                     _thresholdCount:	
 10268  00AB                     	ds	2
 10269  00AD                     _lastRun:	
 10270  00AD                     	ds	2
 10271  00AF                     _lastBeat:	
 10272  00AF                     	ds	2
 10273  00B1                     _lastActiveTime:	
 10274  00B1                     	ds	2
 10275  00B3                     _lastIncTime:	
 10276  00B3                     	ds	2
 10277  00B5                     _currentTime:	
 10278  00B5                     	ds	2
 10279  00B7                     _lastTime:	
 10280  00B7                     	ds	2
 10281  00B9                     _startTime:	
 10282  00B9                     	ds	2
 10283  00BB                     _lastDetected:	
 10284  00BB                     	ds	1
 10285  00BC                     _thresholdExceeded:	
 10286  00BC                     	ds	1
 10287  00BD                     _detected:	
 10288  00BD                     	ds	1
 10289  00BE                     _position:	
 10290  00BE                     	ds	1
 10291  00BF                     _tm1650_status:	
 10292  00BF                     	ds	1
 10293  00C0                     _enterState:	
 10294  00C0                     	ds	1
 10295  00C1                     _menuState:	
 10296  00C1                     	ds	1
 10297  00C2                     _downState:	
 10298  00C2                     	ds	1
 10299  00C3                     _upState:	
 10300  00C3                     	ds	1
 10301  00C4                     _enterPressed:	
 10302  00C4                     	ds	1
 10303  00C5                     _menuPressed:	
 10304  00C5                     	ds	1
 10305  00C6                     _enter:	
 10306  00C6                     	ds	1
 10307  00C7                     _down:	
 10308  00C7                     	ds	1
 10309  00C8                     _up:	
 10310  00C8                     	ds	1
 10311  00C9                     _menu:	
 10312  00C9                     	ds	1
 10313  00CA                     I2C1_ISR@i2c_10bit_address_restart:	
 10314  00CA                     	ds	1
 10315  00CB                     I2C1_ISR@i2c_bytes_left:	
 10316  00CB                     	ds	1
 10317  00CC                     I2C1_ISR@pi2c_buf_ptr:	
 10318  00CC                     	ds	1
 10319  00CD                     _p_i2c1_current:	
 10320  00CD                     	ds	1
 10321  00CE                     _i2c1_trb_count:	
 10322  00CE                     	ds	1
 10323  00CF                     _i2c1_state:	
 10324  00CF                     	ds	1
 10325  00D0                     _eusart1RxLastError:	
 10326  00D0                     	ds	1
 10327  00D1                     _eusart1RxCount:	
 10328  00D1                     	ds	1
 10329  00D2                     _i2c1_tr_queue:	
 10330  00D2                     	ds	3
 10331                           
 10332                           	psect	dataBANK1
 10333  00E3                     __pdataBANK1:	
 10334  00E3                     _initial:	
 10335  00E3                     	ds	2
 10336  00E5                     _delay:	
 10337  00E5                     	ds	2
 10338  00E7                     _threshold:	
 10339  00E7                     	ds	2
 10340  00E9                     _incInterval:	
 10341  00E9                     	ds	2
 10342  00EB                     _address:	
 10343  00EB                     	ds	2
 10344  00ED                     _currentSelection:	
 10345  00ED                     	ds	1
 10346  00EE                     _menuSelected:	
 10347  00EE                     	ds	1
 10348  00EF                     _startup:	
 10349  00EF                     	ds	1
 10350                           
 10351                           	psect	bssBANK2
 10352  0120                     __pbssBANK2:	
 10353  0120                     _eusart1RxStatusBuffer:	
 10354  0120                     	ds	8
 10355  0128                     _eusart1RxBuffer:	
 10356  0128                     	ds	8
 10357  0130                     _nout:	
 10358  0130                     	ds	2
 10359  0132                     _prec:	
 10360  0132                     	ds	2
 10361  0134                     _lastLedActiveTime:	
 10362  0134                     	ds	2
 10363  0136                     _bpm:	
 10364  0136                     	ds	2
 10365  0138                     _buttons:	
 10366  0138                     	ds	32
 10367  0158                     I2C1_MasterRead@trBlock:	
 10368  0158                     	ds	4
 10369  015C                     I2C1_MasterWrite@trBlock:	
 10370  015C                     	ds	4
 10371                           
 10372                           	psect	bssBANK3
 10373  01A0                     __pbssBANK3:	
 10374  01A0                     _dbuf:	
 10375  01A0                     	ds	32
 10376                           
 10377                           	psect	inittext
 10378  09A7                     init_ram:	
 10379  09A7  00FE               	movwf	126
 10380  09A8                     initloop:	
 10381  09A8  0012               	moviw fsr0++
 10382  09A9  001E               	movwi fsr1++
 10383  09AA  3001               	movlw	1
 10384  09AB  02FE               	subwf	126,f
 10385  09AC  3000               	movlw	0
 10386  09AD  3BFF               	subwfb	127,f
 10387  09AE  087F               	movf	127,w
 10388  09AF  047E               	iorwf	126,w
 10389  09B0  1903               	btfsc	3,2
 10390  09B1  3400               	retlw	0
 10391  09B2  29A8               	goto	initloop
 10392                           
 10393                           	psect	clrtext
 10394  099B                     clear_ram0:	
 10395                           ;	Called with FSR0 containing the base address, and
 10396                           ;	btemp/btemp+1 has the size to clear
 10397                           
 10398  099B  0064               	clrwdt	;clear the watchdog before getting into this loop
 10399  099C                     clrloop0:	
 10400  099C  0180               	clrf	0	;clear RAM location pointed to by FSR
 10401  099D  3101               	addfsr 0,1
 10402  099E  3001               	movlw	1
 10403  099F  02FE               	subwf	126,f
 10404  09A0  3000               	movlw	0
 10405  09A1  3BFF               	subwfb	127,f
 10406  09A2  087F               	movf	127,w
 10407  09A3  047E               	iorwf	126,w
 10408  09A4  1903               	btfsc	3,2
 10409  09A5  3400               	retlw	0	;all done for this memory range, return
 10410  09A6  299C               	goto	clrloop0	;have we reached the end yet?
 10411                           
 10412                           	psect	cstackBANK1
 10413  00D5                     __pcstackBANK1:	
 10414  00D5                     ?_printf:	
 10415  00D5                     printf@fmt:	
 10416                           ; 2 bytes @ 0x0
 10417                           
 10418                           
 10419                           ; 2 bytes @ 0x0
 10420  00D5                     	ds	10
 10421  00DF                     ??_CONTROLLER_task:	
 10422                           
 10423                           ; 1 bytes @ 0xA
 10424  00DF                     	ds	2
 10425  00E1                     ??_main:	
 10426                           
 10427                           ; 1 bytes @ 0xC
 10428  00E1                     	ds	2
 10429                           
 10430                           	psect	cstackCOMMON
 10431  0077                     __pcstackCOMMON:	
 10432  0077                     ?_PMD_Initialize:	
 10433  0077                     ?_PIN_MANAGER_Initialize:	
 10434                           ; 1 bytes @ 0x0
 10435                           
 10436  0077                     ?_OSCILLATOR_Initialize:	
 10437                           ; 1 bytes @ 0x0
 10438                           
 10439  0077                     ?_I2C1_Initialize:	
 10440                           ; 1 bytes @ 0x0
 10441                           
 10442  0077                     ?_PWM1_Initialize:	
 10443                           ; 1 bytes @ 0x0
 10444                           
 10445  0077                     ?_PWM2_Initialize:	
 10446                           ; 1 bytes @ 0x0
 10447                           
 10448  0077                     ?_ADCC_Initialize:	
 10449                           ; 1 bytes @ 0x0
 10450                           
 10451  0077                     ?_PWM4_Initialize:	
 10452                           ; 1 bytes @ 0x0
 10453                           
 10454  0077                     ?_PWM3_Initialize:	
 10455                           ; 1 bytes @ 0x0
 10456                           
 10457  0077                     ?_TMR2_Initialize:	
 10458                           ; 1 bytes @ 0x0
 10459                           
 10460  0077                     ?_TMR0_Initialize:	
 10461                           ; 1 bytes @ 0x0
 10462                           
 10463  0077                     ?_EUSART1_Initialize:	
 10464                           ; 1 bytes @ 0x0
 10465                           
 10466  0077                     ?_EUSART1_Receive_ISR:	
 10467                           ; 1 bytes @ 0x0
 10468                           
 10469  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
 10470                           ; 1 bytes @ 0x0
 10471                           
 10472  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
 10473                           ; 1 bytes @ 0x0
 10474                           
 10475  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10476                           ; 1 bytes @ 0x0
 10477                           
 10478  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10479                           ; 1 bytes @ 0x0
 10480                           
 10481  0077                     ?_EUSART1_DefaultErrorHandler:	
 10482                           ; 1 bytes @ 0x0
 10483                           
 10484  0077                     ?_EUSART1_RxDataHandler:	
 10485                           ; 1 bytes @ 0x0
 10486                           
 10487  0077                     ??_EUSART1_RxDataHandler:	
 10488                           ; 1 bytes @ 0x0
 10489                           
 10490  0077                     ?_TMR0_ISR:	
 10491                           ; 1 bytes @ 0x0
 10492                           
 10493  0077                     ??_TMR0_ISR:	
 10494                           ; 1 bytes @ 0x0
 10495                           
 10496  0077                     ?_I2C1_BusCollisionISR:	
 10497                           ; 1 bytes @ 0x0
 10498                           
 10499  0077                     ??_I2C1_BusCollisionISR:	
 10500                           ; 1 bytes @ 0x0
 10501                           
 10502  0077                     ?_I2C1_ISR:	
 10503                           ; 1 bytes @ 0x0
 10504                           
 10505  0077                     ?_ADCC_ThresholdISR:	
 10506                           ; 1 bytes @ 0x0
 10507                           
 10508  0077                     ??_ADCC_ThresholdISR:	
 10509                           ; 1 bytes @ 0x0
 10510                           
 10511  0077                     ?_TMR0_DefaultInterruptHandler:	
 10512                           ; 1 bytes @ 0x0
 10513                           
 10514  0077                     ??_TMR0_DefaultInterruptHandler:	
 10515                           ; 1 bytes @ 0x0
 10516                           
 10517  0077                     ?_I2C1_Stop:	
 10518                           ; 1 bytes @ 0x0
 10519                           
 10520  0077                     ??_I2C1_Stop:	
 10521                           ; 1 bytes @ 0x0
 10522                           
 10523  0077                     ?_I2C1_FunctionComplete:	
 10524                           ; 1 bytes @ 0x0
 10525                           
 10526  0077                     ??_I2C1_FunctionComplete:	
 10527                           ; 1 bytes @ 0x0
 10528                           
 10529  0077                     ?_ADCC_DefaultInterruptHandler:	
 10530                           ; 1 bytes @ 0x0
 10531                           
 10532  0077                     ??_ADCC_DefaultInterruptHandler:	
 10533                           ; 1 bytes @ 0x0
 10534                           
 10535  0077                     ?_CLOCK_init:	
 10536                           ; 1 bytes @ 0x0
 10537                           
 10538  0077                     ?_BUTTONS_init:	
 10539                           ; 1 bytes @ 0x0
 10540                           
 10541  0077                     ?_BEAT_init:	
 10542                           ; 1 bytes @ 0x0
 10543                           
 10544  0077                     ?_TM1650_init:	
 10545                           ; 1 bytes @ 0x0
 10546                           
 10547  0077                     ?_DMX_init:	
 10548                           ; 1 bytes @ 0x0
 10549                           
 10550  0077                     ?_BUTTONS_task:	
 10551                           ; 1 bytes @ 0x0
 10552                           
 10553  0077                     ?_CONTROLLER_task:	
 10554                           ; 1 bytes @ 0x0
 10555                           
 10556  0077                     ?_BEAT_task:	
 10557                           ; 1 bytes @ 0x0
 10558                           
 10559  0077                     ?_LED_task:	
 10560                           ; 1 bytes @ 0x0
 10561                           
 10562  0077                     ?_GPIO_init:	
 10563                           ; 1 bytes @ 0x0
 10564                           
 10565  0077                     ?_CLOCK_timerCallback:	
 10566                           ; 1 bytes @ 0x0
 10567                           
 10568  0077                     ??_CLOCK_timerCallback:	
 10569                           ; 1 bytes @ 0x0
 10570                           
 10571  0077                     ?_menuSelection:	
 10572                           ; 1 bytes @ 0x0
 10573                           
 10574  0077                     ?_CONTROL_DMX:	
 10575                           ; 1 bytes @ 0x0
 10576                           
 10577  0077                     ?_TM1650_enable:	
 10578                           ; 1 bytes @ 0x0
 10579                           
 10580  0077                     ?_address_inc:	
 10581                           ; 1 bytes @ 0x0
 10582                           
 10583  0077                     ?_address_dec:	
 10584                           ; 1 bytes @ 0x0
 10585                           
 10586  0077                     ?_DMX_interrupt:	
 10587                           ; 1 bytes @ 0x0
 10588                           
 10589  0077                     ??_DMX_interrupt:	
 10590                           ; 1 bytes @ 0x0
 10591                           
 10592  0077                     ?_SYSTEM_Initialize:	
 10593                           ; 1 bytes @ 0x0
 10594                           
 10595  0077                     ?_INTERRUPT_InterruptManager:	
 10596                           ; 1 bytes @ 0x0
 10597                           
 10598  0077                     ?_I2C1_WaitForLastPacketToComplete:	
 10599                           ; 1 bytes @ 0x0
 10600                           
 10601  0077                     ?_ADCC_StartConversion:	
 10602                           ; 1 bytes @ 0x0
 10603                           
 10604  0077                     ?_main:	
 10605                           ; 1 bytes @ 0x0
 10606                           
 10607  0077                     ?_BUTTONS_isClicked:	
 10608                           ; 1 bytes @ 0x0
 10609                           
 10610  0077                     ?_BUTTONS_isHeld:	
 10611                           ; 1 bytes @ 0x0
 10612                           
 10613  0077                     ?_putch:	
 10614                           ; 1 bytes @ 0x0
 10615                           
 10616  0077                     ?_adcThresholdHandler:	
 10617                           ; 1 bytes @ 0x0
 10618                           
 10619  0077                     ??_adcThresholdHandler:	
 10620                           ; 1 bytes @ 0x0
 10621                           
 10622  0077                     ?_BEAT_detected:	
 10623                           ; 1 bytes @ 0x0
 10624                           
 10625                           
 10626                           ; 1 bytes @ 0x0
 10627  0077                     	ds	1
 10628  0078                     ??_EUSART1_Receive_ISR:	
 10629  0078                     ??_EUSART1_DefaultErrorHandler:	
 10630                           ; 1 bytes @ 0x1
 10631                           
 10632  0078                     I2C1_Stop@completion_code:	
 10633                           ; 1 bytes @ 0x1
 10634                           
 10635                           
 10636                           ; 1 bytes @ 0x1
 10637  0078                     	ds	1
 10638  0079                     ??_I2C1_ISR:	
 10639                           
 10640                           ; 1 bytes @ 0x2
 10641  0079                     	ds	4
 10642  007D                     DMX_interrupt@dummy:	
 10643                           
 10644                           ; 1 bytes @ 0x6
 10645  007D                     	ds	1
 10646  007E                     ??_INTERRUPT_InterruptManager:	
 10647                           
 10648                           	psect	cstackBANK0
 10649  0020                     __pcstackBANK0:	
 10650                           ; 1 bytes @ 0x7
 10651                           
 10652  0020                     ??_PMD_Initialize:	
 10653  0020                     ??_PIN_MANAGER_Initialize:	
 10654                           ; 1 bytes @ 0x0
 10655                           
 10656  0020                     ??_OSCILLATOR_Initialize:	
 10657                           ; 1 bytes @ 0x0
 10658                           
 10659  0020                     ??_I2C1_Initialize:	
 10660                           ; 1 bytes @ 0x0
 10661                           
 10662  0020                     ??_PWM1_Initialize:	
 10663                           ; 1 bytes @ 0x0
 10664                           
 10665  0020                     ??_PWM2_Initialize:	
 10666                           ; 1 bytes @ 0x0
 10667                           
 10668  0020                     ??_PWM4_Initialize:	
 10669                           ; 1 bytes @ 0x0
 10670                           
 10671  0020                     ??_PWM3_Initialize:	
 10672                           ; 1 bytes @ 0x0
 10673                           
 10674  0020                     ??_TMR2_Initialize:	
 10675                           ; 1 bytes @ 0x0
 10676                           
 10677  0020                     ?_EUSART1_SetRxInterruptHandler:	
 10678                           ; 1 bytes @ 0x0
 10679                           
 10680  0020                     ?_EUSART1_SetFramingErrorHandler:	
 10681                           ; 1 bytes @ 0x0
 10682                           
 10683  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 10684                           ; 1 bytes @ 0x0
 10685                           
 10686  0020                     ?_EUSART1_SetErrorHandler:	
 10687                           ; 1 bytes @ 0x0
 10688                           
 10689  0020                     ?_TMR0_SetInterruptHandler:	
 10690                           ; 1 bytes @ 0x0
 10691                           
 10692  0020                     ?_I2C1_MasterWriteTRBBuild:	
 10693                           ; 1 bytes @ 0x0
 10694                           
 10695  0020                     ?_I2C1_MasterTRBInsert:	
 10696                           ; 1 bytes @ 0x0
 10697                           
 10698  0020                     ?_ADCC_SetADTIInterruptHandler:	
 10699                           ; 1 bytes @ 0x0
 10700                           
 10701  0020                     ??_GPIO_init:	
 10702                           ; 1 bytes @ 0x0
 10703                           
 10704  0020                     ?_PWM3_LoadDutyValue:	
 10705                           ; 1 bytes @ 0x0
 10706                           
 10707  0020                     ?_PWM4_LoadDutyValue:	
 10708                           ; 1 bytes @ 0x0
 10709                           
 10710  0020                     ?_PWM1_LoadDutyValue:	
 10711                           ; 1 bytes @ 0x0
 10712                           
 10713  0020                     ?_PWM2_LoadDutyValue:	
 10714                           ; 1 bytes @ 0x0
 10715                           
 10716  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 10717                           ; 1 bytes @ 0x0
 10718                           
 10719  0020                     ??_ADCC_StartConversion:	
 10720                           ; 1 bytes @ 0x0
 10721                           
 10722  0020                     ?_ADCC_SetUpperThreshold:	
 10723                           ; 1 bytes @ 0x0
 10724                           
 10725  0020                     ?_init:	
 10726                           ; 1 bytes @ 0x0
 10727                           
 10728  0020                     ??_BUTTONS_isClicked:	
 10729                           ; 1 bytes @ 0x0
 10730                           
 10731  0020                     ??_BUTTONS_isHeld:	
 10732                           ; 1 bytes @ 0x0
 10733                           
 10734  0020                     ??_BEAT_detected:	
 10735                           ; 1 bytes @ 0x0
 10736                           
 10737  0020                     ?_CLOCK_getTime:	
 10738                           ; 1 bytes @ 0x0
 10739                           
 10740  0020                     ?_strlen:	
 10741                           ; 2 bytes @ 0x0
 10742                           
 10743  0020                     ?___lwdiv:	
 10744                           ; 2 bytes @ 0x0
 10745                           
 10746  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 10747                           ; 2 bytes @ 0x0
 10748                           
 10749  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 10750                           ; 1 bytes @ 0x0
 10751                           
 10752  0020                     ADCC_StartConversion@channel:	
 10753                           ; 1 bytes @ 0x0
 10754                           
 10755  0020                     BUTTONS_isClicked@button:	
 10756                           ; 1 bytes @ 0x0
 10757                           
 10758  0020                     BUTTONS_isHeld@button:	
 10759                           ; 1 bytes @ 0x0
 10760                           
 10761  0020                     PWM3_LoadDutyValue@dutyValue:	
 10762                           ; 1 bytes @ 0x0
 10763                           
 10764  0020                     PWM4_LoadDutyValue@dutyValue:	
 10765                           ; 2 bytes @ 0x0
 10766                           
 10767  0020                     PWM1_LoadDutyValue@dutyValue:	
 10768                           ; 2 bytes @ 0x0
 10769                           
 10770  0020                     PWM2_LoadDutyValue@dutyValue:	
 10771                           ; 2 bytes @ 0x0
 10772                           
 10773  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 10774                           ; 2 bytes @ 0x0
 10775                           
 10776  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 10777                           ; 2 bytes @ 0x0
 10778                           
 10779  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 10780                           ; 2 bytes @ 0x0
 10781                           
 10782  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 10783                           ; 2 bytes @ 0x0
 10784                           
 10785  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 10786                           ; 2 bytes @ 0x0
 10787                           
 10788  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 10789                           ; 2 bytes @ 0x0
 10790                           
 10791  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 10792                           ; 2 bytes @ 0x0
 10793                           
 10794  0020                     init@port:	
 10795                           ; 2 bytes @ 0x0
 10796                           
 10797  0020                     ___lwdiv@divisor:	
 10798                           ; 2 bytes @ 0x0
 10799                           
 10800  0020                     strlen@s:	
 10801                           ; 2 bytes @ 0x0
 10802                           
 10803                           
 10804                           ; 2 bytes @ 0x0
 10805  0020                     	ds	1
 10806  0021                     I2C1_MasterTRBInsert@pflag:	
 10807  0021                     I2C1_MasterWriteTRBBuild@length:	
 10808                           ; 1 bytes @ 0x1
 10809                           
 10810                           
 10811                           ; 1 bytes @ 0x1
 10812  0021                     	ds	1
 10813  0022                     ??_ADCC_Initialize:	
 10814  0022                     ??_TMR0_Initialize:	
 10815                           ; 1 bytes @ 0x2
 10816                           
 10817  0022                     ??_EUSART1_Initialize:	
 10818                           ; 1 bytes @ 0x2
 10819                           
 10820  0022                     ??_EUSART1_SetRxInterruptHandler:	
 10821                           ; 1 bytes @ 0x2
 10822                           
 10823  0022                     ??_EUSART1_SetFramingErrorHandler:	
 10824                           ; 1 bytes @ 0x2
 10825                           
 10826  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 10827                           ; 1 bytes @ 0x2
 10828                           
 10829  0022                     ??_EUSART1_SetErrorHandler:	
 10830                           ; 1 bytes @ 0x2
 10831                           
 10832  0022                     ??_TMR0_SetInterruptHandler:	
 10833                           ; 1 bytes @ 0x2
 10834                           
 10835  0022                     ??_I2C1_MasterTRBInsert:	
 10836                           ; 1 bytes @ 0x2
 10837                           
 10838  0022                     ??_ADCC_SetADTIInterruptHandler:	
 10839                           ; 1 bytes @ 0x2
 10840                           
 10841  0022                     ??_CLOCK_init:	
 10842                           ; 1 bytes @ 0x2
 10843                           
 10844  0022                     ??_BEAT_init:	
 10845                           ; 1 bytes @ 0x2
 10846                           
 10847  0022                     ??_CLOCK_getTime:	
 10848                           ; 1 bytes @ 0x2
 10849                           
 10850  0022                     ??_BUTTONS_task:	
 10851                           ; 1 bytes @ 0x2
 10852                           
 10853  0022                     ??_LED_task:	
 10854                           ; 1 bytes @ 0x2
 10855                           
 10856  0022                     ??_strlen:	
 10857                           ; 1 bytes @ 0x2
 10858                           
 10859  0022                     ??_SYSTEM_Initialize:	
 10860                           ; 1 bytes @ 0x2
 10861                           
 10862  0022                     ??_PWM3_LoadDutyValue:	
 10863                           ; 1 bytes @ 0x2
 10864                           
 10865  0022                     ??_PWM4_LoadDutyValue:	
 10866                           ; 1 bytes @ 0x2
 10867                           
 10868  0022                     ??_PWM1_LoadDutyValue:	
 10869                           ; 1 bytes @ 0x2
 10870                           
 10871  0022                     ??_PWM2_LoadDutyValue:	
 10872                           ; 1 bytes @ 0x2
 10873                           
 10874  0022                     ??_ADCC_SetUpperThreshold:	
 10875                           ; 1 bytes @ 0x2
 10876                           
 10877  0022                     init@pin:	
 10878                           ; 1 bytes @ 0x2
 10879                           
 10880  0022                     I2C1_MasterWriteTRBBuild@address:	
 10881                           ; 1 bytes @ 0x2
 10882                           
 10883  0022                     ___lwdiv@dividend:	
 10884                           ; 2 bytes @ 0x2
 10885                           
 10886                           
 10887                           ; 2 bytes @ 0x2
 10888  0022                     	ds	1
 10889  0023                     ??_init:	
 10890  0023                     I2C1_MasterTRBInsert@count:	
 10891                           ; 1 bytes @ 0x3
 10892                           
 10893  0023                     strlen@a:	
 10894                           ; 1 bytes @ 0x3
 10895                           
 10896                           
 10897                           ; 2 bytes @ 0x3
 10898  0023                     	ds	1
 10899  0024                     ??_I2C1_MasterWriteTRBBuild:	
 10900  0024                     ??___lwdiv:	
 10901                           ; 1 bytes @ 0x4
 10902                           
 10903  0024                     init@btn:	
 10904                           ; 1 bytes @ 0x4
 10905                           
 10906                           
 10907                           ; 1 bytes @ 0x4
 10908  0024                     	ds	1
 10909  0025                     ??_BUTTONS_init:	
 10910  0025                     BUTTONS_task@i:	
 10911                           ; 1 bytes @ 0x5
 10912                           
 10913  0025                     ___lwdiv@quotient:	
 10914                           ; 1 bytes @ 0x5
 10915                           
 10916                           
 10917                           ; 2 bytes @ 0x5
 10918  0025                     	ds	1
 10919  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 10920  0026                     BUTTONS_task@time:	
 10921                           ; 1 bytes @ 0x6
 10922                           
 10923                           
 10924                           ; 2 bytes @ 0x6
 10925  0026                     	ds	1
 10926  0027                     ?_I2C1_MasterWrite:	
 10927  0027                     I2C1_MasterWrite@length:	
 10928                           ; 1 bytes @ 0x7
 10929                           
 10930  0027                     ___lwdiv@counter:	
 10931                           ; 1 bytes @ 0x7
 10932                           
 10933                           
 10934                           ; 1 bytes @ 0x7
 10935  0027                     	ds	1
 10936  0028                     ??_BEAT_task:	
 10937  0028                     ?___lwmod:	
 10938                           ; 1 bytes @ 0x8
 10939                           
 10940  0028                     BUTTONS_task@btn:	
 10941                           ; 2 bytes @ 0x8
 10942                           
 10943  0028                     I2C1_MasterWrite@address:	
 10944                           ; 1 bytes @ 0x8
 10945                           
 10946  0028                     ___lwmod@divisor:	
 10947                           ; 2 bytes @ 0x8
 10948                           
 10949                           
 10950                           ; 2 bytes @ 0x8
 10951  0028                     	ds	2
 10952  002A                     I2C1_MasterWrite@pflag:	
 10953  002A                     BEAT_task@offset:	
 10954                           ; 1 bytes @ 0xA
 10955                           
 10956  002A                     ___lwmod@dividend:	
 10957                           ; 2 bytes @ 0xA
 10958                           
 10959                           
 10960                           ; 2 bytes @ 0xA
 10961  002A                     	ds	1
 10962  002B                     ??_I2C1_MasterWrite:	
 10963                           
 10964                           ; 1 bytes @ 0xB
 10965  002B                     	ds	1
 10966  002C                     ??___lwmod:	
 10967                           
 10968                           ; 1 bytes @ 0xC
 10969  002C                     	ds	1
 10970  002D                     I2C1_MasterWrite@pdata:	
 10971  002D                     ___lwmod@counter:	
 10972                           ; 1 bytes @ 0xD
 10973                           
 10974                           
 10975                           ; 1 bytes @ 0xD
 10976  002D                     	ds	1
 10977  002E                     ?_writeData:	
 10978  002E                     writeData@data:	
 10979                           ; 1 bytes @ 0xE
 10980                           
 10981                           
 10982                           ; 1 bytes @ 0xE
 10983  002E                     	ds	1
 10984  002F                     ??_writeData:	
 10985                           
 10986                           ; 1 bytes @ 0xF
 10987  002F                     	ds	3
 10988  0032                     writeData@address:	
 10989                           
 10990                           ; 1 bytes @ 0x12
 10991  0032                     	ds	1
 10992  0033                     writeData@status:	
 10993                           
 10994                           ; 1 bytes @ 0x13
 10995  0033                     	ds	1
 10996  0034                     ??_TM1650_enable:	
 10997  0034                     ?_TM1650_fastPrintNum:	
 10998                           ; 1 bytes @ 0x14
 10999                           
 11000  0034                     ?_TM1650_setDigit:	
 11001                           ; 1 bytes @ 0x14
 11002                           
 11003  0034                     TM1650_enable@enable:	
 11004                           ; 1 bytes @ 0x14
 11005                           
 11006  0034                     TM1650_setDigit@data:	
 11007                           ; 1 bytes @ 0x14
 11008                           
 11009  0034                     TM1650_fastPrintNum@num:	
 11010                           ; 1 bytes @ 0x14
 11011                           
 11012                           
 11013                           ; 2 bytes @ 0x14
 11014  0034                     	ds	1
 11015  0035                     ??_TM1650_setDigit:	
 11016                           
 11017                           ; 1 bytes @ 0x15
 11018  0035                     	ds	1
 11019  0036                     ??_TM1650_fastPrintNum:	
 11020  0036                     TM1650_setDigit@digit:	
 11021                           ; 1 bytes @ 0x16
 11022                           
 11023                           
 11024                           ; 1 bytes @ 0x16
 11025  0036                     	ds	1
 11026  0037                     ??_DMX_init:	
 11027  0037                     ??_CONTROL_DMX:	
 11028                           ; 1 bytes @ 0x17
 11029                           
 11030  0037                     ??_address_inc:	
 11031                           ; 1 bytes @ 0x17
 11032                           
 11033  0037                     ??_address_dec:	
 11034                           ; 1 bytes @ 0x17
 11035                           
 11036  0037                     ??_putch:	
 11037                           ; 1 bytes @ 0x17
 11038                           
 11039                           
 11040                           ; 1 bytes @ 0x17
 11041  0037                     	ds	1
 11042  0038                     putch@n:	
 11043                           
 11044                           ; 1 bytes @ 0x18
 11045  0038                     	ds	1
 11046  0039                     ?_fputc:	
 11047  0039                     fputc@c:	
 11048                           ; 2 bytes @ 0x19
 11049                           
 11050                           
 11051                           ; 2 bytes @ 0x19
 11052  0039                     	ds	2
 11053  003B                     fputc@fp:	
 11054                           
 11055                           ; 1 bytes @ 0x1B
 11056  003B                     	ds	1
 11057  003C                     ??_fputc:	
 11058                           
 11059                           ; 1 bytes @ 0x1C
 11060  003C                     	ds	5
 11061  0041                     ?_fputs:	
 11062  0041                     fputs@fp:	
 11063                           ; 2 bytes @ 0x21
 11064                           
 11065                           
 11066                           ; 1 bytes @ 0x21
 11067  0041                     	ds	1
 11068  0042                     ??_fputs:	
 11069                           
 11070                           ; 1 bytes @ 0x22
 11071  0042                     	ds	3
 11072  0045                     fputs@c:	
 11073                           
 11074                           ; 1 bytes @ 0x25
 11075  0045                     	ds	1
 11076  0046                     fputs@i:	
 11077                           
 11078                           ; 2 bytes @ 0x26
 11079  0046                     	ds	2
 11080  0048                     fputs@s:	
 11081                           
 11082                           ; 1 bytes @ 0x28
 11083  0048                     	ds	1
 11084  0049                     ?_pad:	
 11085  0049                     pad@buf:	
 11086                           ; 2 bytes @ 0x29
 11087                           
 11088                           
 11089                           ; 1 bytes @ 0x29
 11090  0049                     	ds	1
 11091  004A                     pad@p:	
 11092                           
 11093                           ; 2 bytes @ 0x2A
 11094  004A                     	ds	2
 11095  004C                     ??_pad:	
 11096                           
 11097                           ; 1 bytes @ 0x2C
 11098  004C                     	ds	1
 11099  004D                     pad@i:	
 11100                           
 11101                           ; 2 bytes @ 0x2D
 11102  004D                     	ds	2
 11103  004F                     pad@w:	
 11104                           
 11105                           ; 2 bytes @ 0x2F
 11106  004F                     	ds	2
 11107  0051                     pad@fp:	
 11108                           
 11109                           ; 1 bytes @ 0x31
 11110  0051                     	ds	1
 11111  0052                     ?_ctoa:	
 11112  0052                     ctoa@c:	
 11113                           ; 2 bytes @ 0x32
 11114                           
 11115                           
 11116                           ; 1 bytes @ 0x32
 11117  0052                     	ds	2
 11118  0054                     ??_ctoa:	
 11119                           
 11120                           ; 1 bytes @ 0x34
 11121  0054                     	ds	1
 11122  0055                     ctoa@w:	
 11123                           
 11124                           ; 2 bytes @ 0x35
 11125  0055                     	ds	2
 11126  0057                     ctoa@fp:	
 11127                           
 11128                           ; 1 bytes @ 0x37
 11129  0057                     	ds	1
 11130  0058                     ?_vfpfcnvrt:	
 11131  0058                     vfpfcnvrt@fmt:	
 11132                           ; 2 bytes @ 0x38
 11133                           
 11134                           
 11135                           ; 1 bytes @ 0x38
 11136  0058                     	ds	1
 11137  0059                     vfpfcnvrt@ap:	
 11138                           
 11139                           ; 1 bytes @ 0x39
 11140  0059                     	ds	1
 11141  005A                     ??_vfpfcnvrt:	
 11142                           
 11143                           ; 1 bytes @ 0x3A
 11144  005A                     	ds	5
 11145  005F                     vfpfcnvrt@c:	
 11146                           
 11147                           ; 1 bytes @ 0x3F
 11148  005F                     	ds	1
 11149  0060                     vfpfcnvrt@fp:	
 11150                           
 11151                           ; 1 bytes @ 0x40
 11152  0060                     	ds	1
 11153  0061                     ?_vfprintf:	
 11154  0061                     vfprintf@fmt:	
 11155                           ; 2 bytes @ 0x41
 11156                           
 11157                           
 11158                           ; 2 bytes @ 0x41
 11159  0061                     	ds	2
 11160  0063                     vfprintf@ap:	
 11161                           
 11162                           ; 1 bytes @ 0x43
 11163  0063                     	ds	1
 11164  0064                     ??_vfprintf:	
 11165                           
 11166                           ; 1 bytes @ 0x44
 11167  0064                     	ds	2
 11168  0066                     vfprintf@fp:	
 11169                           
 11170                           ; 1 bytes @ 0x46
 11171  0066                     	ds	1
 11172  0067                     vfprintf@cfmt:	
 11173                           
 11174                           ; 2 bytes @ 0x47
 11175  0067                     	ds	2
 11176  0069                     ??_printf:	
 11177                           
 11178                           ; 1 bytes @ 0x49
 11179  0069                     	ds	3
 11180  006C                     printf@ap:	
 11181                           
 11182                           ; 1 bytes @ 0x4C
 11183  006C                     	ds	1
 11184  006D                     ??_TM1650_init:	
 11185  006D                     ??_menuSelection:	
 11186                           ; 1 bytes @ 0x4D
 11187                           
 11188                           
 11189                           ; 1 bytes @ 0x4D
 11190  006D                     	ds	2
 11191  006F                     CONTROLLER_task@isActive:	
 11192                           
 11193                           ; 1 bytes @ 0x4F
 11194  006F                     	ds	1
 11195                           
 11196                           	psect	maintext
 11197  07C0                     __pmaintext:	
 11198 ;;
 11199 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11200 ;;
 11201 ;; *************** function _main *****************
 11202 ;; Defined at:
 11203 ;;		line 58 in file "main.c"
 11204 ;; Parameters:    Size  Location     Type
 11205 ;;		None
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;		None
 11208 ;; Return value:  Size  Location     Type
 11209 ;;                  1    wreg      void 
 11210 ;; Registers used:
 11211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11212 ;; Tracked objects:
 11213 ;;		On entry : B3F/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11219 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11220 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11221 ;;Total ram usage:        2 bytes
 11222 ;; Hardware stack levels required when called:   19
 11223 ;; This function calls:
 11224 ;;		_BEAT_init
 11225 ;;		_BEAT_task
 11226 ;;		_BUTTONS_init
 11227 ;;		_BUTTONS_task
 11228 ;;		_CLOCK_getTime
 11229 ;;		_CLOCK_init
 11230 ;;		_CONTROLLER_task
 11231 ;;		_DMX_init
 11232 ;;		_LED_task
 11233 ;;		_SYSTEM_Initialize
 11234 ;;		_TM1650_init
 11235 ;; This function is called by:
 11236 ;;		Startup code after reset
 11237 ;; This function uses a non-reentrant model
 11238 ;;
 11239                           
 11240                           
 11241                           ;psect for function _main
 11242  07C0                     _main:	
 11243                           
 11244                           ;main.c: 61:     SYSTEM_Initialize();
 11245                           
 11246                           ;incstack = 0
 11247 ;; hardware stack exceeded
 11248                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11249  07C0  318C  244C  3187   	fcall	_SYSTEM_Initialize
 11250                           
 11251                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11252  07C3  3015               	movlw	21
 11253  07C4  0141               	movlb	1	; select bank1
 11254  07C5  00E2               	movwf	(??_main^(0+128)+1)
 11255  07C6  304B               	movlw	75
 11256  07C7  00E1               	movwf	??_main^(0+128)
 11257  07C8  30BE               	movlw	190
 11258  07C9                     u4547:	
 11259  07C9  0B89               	decfsz	9,f
 11260  07CA  2FC9               	goto	u4547
 11261  07CB  0BE1               	decfsz	??_main^(0+128),f
 11262  07CC  2FC9               	goto	u4547
 11263  07CD  0BE2               	decfsz	(??_main^(0+128)+1),f
 11264  07CE  2FC9               	goto	u4547
 11265  07CF  0000               	nop
 11266                           
 11267                           ;main.c: 63:     CLOCK_init();
 11268  07D0  3188  20FA  3187   	fcall	_CLOCK_init
 11269                           
 11270                           ;main.c: 64:     BUTTONS_init();
 11271  07D3  318E  26B1  3187   	fcall	_BUTTONS_init
 11272                           
 11273                           ;main.c: 65:     BEAT_init();
 11274  07D6  318A  22A4  3187   	fcall	_BEAT_init
 11275                           
 11276                           ;main.c: 67:     (INTCONbits.GIE = 1);
 11277  07D9  178B               	bsf	11,7	;volatile
 11278                           
 11279                           ;main.c: 68:     (INTCONbits.PEIE = 1);
 11280  07DA  170B               	bsf	11,6	;volatile
 11281                           
 11282                           ;main.c: 70:     TM1650_init();
 11283  07DB  318A  2266  3187   	fcall	_TM1650_init
 11284                           
 11285                           ;main.c: 71:     DMX_init();
 11286  07DE  318A  222B  3187   	fcall	_DMX_init
 11287                           
 11288                           ;main.c: 72:     startTime = CLOCK_getTime();
 11289  07E1  3189  211D  3187   	fcall	_CLOCK_getTime
 11290  07E4  0140               	movlb	0	; select bank0
 11291  07E5  0821               	movf	?_CLOCK_getTime+1,w
 11292  07E6  0141               	movlb	1	; select bank1
 11293  07E7  00BA               	movwf	(_startTime+1)^(0+128)
 11294  07E8  0140               	movlb	0	; select bank0
 11295  07E9  0820               	movf	?_CLOCK_getTime,w
 11296  07EA  0141               	movlb	1	; select bank1
 11297  07EB  00B9               	movwf	_startTime^(0+128)
 11298  07EC                     l5794:	
 11299                           
 11300                           ;main.c: 75:     {;main.c: 76:         BUTTONS_task();
 11301  07EC  3183  23A2  3187   	fcall	_BUTTONS_task
 11302                           
 11303                           ;main.c: 77:         CONTROLLER_task();
 11304  07EF  3182  22BD  3187   	fcall	_CONTROLLER_task
 11305                           
 11306                           ;main.c: 78:         BEAT_task();
 11307  07F2  3184  2487  3187   	fcall	_BEAT_task
 11308                           
 11309                           ;main.c: 79:         LED_task();
 11310  07F5  3181  21C4  3187   	fcall	_LED_task
 11311  07F8  2FEC               	goto	l5794
 11312  07F9                     __end_of_main:	
 11313                           
 11314                           	psect	text1
 11315  0A66                     __ptext1:	
 11316 ;; *************** function _TM1650_init *****************
 11317 ;; Defined at:
 11318 ;;		line 51 in file "tm1650.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;		None
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;		None
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  1    wreg      void 
 11325 ;; Registers used:
 11326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11336 ;;Total ram usage:        0 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:   17
 11339 ;; This function calls:
 11340 ;;		_TM1650_enable
 11341 ;;		_printf
 11342 ;; This function is called by:
 11343 ;;		_main
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347                           
 11348                           ;psect for function _TM1650_init
 11349  0A66                     _TM1650_init:	
 11350                           
 11351                           ;tm1650.c: 53:     TM1650_enable(1);
 11352                           
 11353                           ;incstack = 0
 11354 ;; hardware stack exceeded
 11355                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11356  0A66  3001               	movlw	1
 11357  0A67  318A  227A  318A   	fcall	_TM1650_enable
 11358                           
 11359                           ;tm1650.c: 54:     printf("    ");
 11360  0A6A  3067               	movlw	low (STR_6| (0+32768))
 11361  0A6B  0141               	movlb	1	; select bank1
 11362  0A6C  00D5               	movwf	printf@fmt^(0+128)
 11363  0A6D  3090               	movlw	high (STR_6| (0+32768))
 11364  0A6E  00D6               	movwf	(printf@fmt^(0+128)+1)
 11365  0A6F  318A  228F  318A   	fcall	_printf
 11366                           
 11367                           ;tm1650.c: 55:     printf("\r");
 11368  0A72  3047               	movlw	low ((STR_16+4)| (0+32768))
 11369  0A73  0141               	movlb	1	; select bank1
 11370  0A74  00D5               	movwf	printf@fmt^(0+128)
 11371  0A75  3090               	movlw	high ((STR_16+4)| (0+32768))
 11372  0A76  00D6               	movwf	(printf@fmt^(0+128)+1)
 11373  0A77  318A  228F         	fcall	_printf
 11374  0A79  0008               	return
 11375  0A7A                     __end_of_TM1650_init:	
 11376                           
 11377                           	psect	text2
 11378  0C4C                     __ptext2:	
 11379 ;; *************** function _SYSTEM_Initialize *****************
 11380 ;; Defined at:
 11381 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11382 ;; Parameters:    Size  Location     Type
 11383 ;;		None
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;		None
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  1    wreg      void 
 11388 ;; Registers used:
 11389 ;;		wreg, status,2, status,0, pclath, cstack
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11399 ;;Total ram usage:        0 bytes
 11400 ;; Hardware stack levels used:    1
 11401 ;; Hardware stack levels required when called:    6
 11402 ;; This function calls:
 11403 ;;		_ADCC_Initialize
 11404 ;;		_EUSART1_Initialize
 11405 ;;		_I2C1_Initialize
 11406 ;;		_OSCILLATOR_Initialize
 11407 ;;		_PIN_MANAGER_Initialize
 11408 ;;		_PMD_Initialize
 11409 ;;		_PWM1_Initialize
 11410 ;;		_PWM2_Initialize
 11411 ;;		_PWM3_Initialize
 11412 ;;		_PWM4_Initialize
 11413 ;;		_TMR0_Initialize
 11414 ;;		_TMR2_Initialize
 11415 ;; This function is called by:
 11416 ;;		_main
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           
 11421                           ;psect for function _SYSTEM_Initialize
 11422  0C4C                     _SYSTEM_Initialize:	
 11423                           
 11424                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11425                           
 11426                           ;incstack = 0
 11427                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11428  0C4C  3189  2165  318C   	fcall	_PMD_Initialize
 11429                           
 11430                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11431  0C4F  318E  260E  318C   	fcall	_PIN_MANAGER_Initialize
 11432                           
 11433                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11434  0C52  3189  215C  318C   	fcall	_OSCILLATOR_Initialize
 11435                           
 11436                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 11437  0C55  318B  2334  318C   	fcall	_I2C1_Initialize
 11438                           
 11439                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 11440  0C58  3189  216F  318C   	fcall	_PWM1_Initialize
 11441                           
 11442                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 11443  0C5B  3189  217A  318C   	fcall	_PWM2_Initialize
 11444                           
 11445                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 11446  0C5E  318C  2496  318C   	fcall	_ADCC_Initialize
 11447                           
 11448                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 11449  0C61  3189  2190  318C   	fcall	_PWM4_Initialize
 11450                           
 11451                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 11452  0C64  3189  2185  318C   	fcall	_PWM3_Initialize
 11453                           
 11454                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 11455  0C67  3189  21DA  318C   	fcall	_TMR2_Initialize
 11456                           
 11457                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 11458  0C6A  318A  2252  318C   	fcall	_TMR0_Initialize
 11459                           
 11460                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 11461  0C6D  318D  2572         	fcall	_EUSART1_Initialize
 11462  0C6F  0008               	return
 11463  0C70                     __end_of_SYSTEM_Initialize:	
 11464                           
 11465                           	psect	text3
 11466  09DA                     __ptext3:	
 11467 ;; *************** function _TMR2_Initialize *****************
 11468 ;; Defined at:
 11469 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;		None
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;		None
 11474 ;; Return value:  Size  Location     Type
 11475 ;;                  1    wreg      void 
 11476 ;; Registers used:
 11477 ;;		wreg, status,2
 11478 ;; Tracked objects:
 11479 ;;		On entry : 0/0
 11480 ;;		On exit  : 0/0
 11481 ;;		Unchanged: 0/0
 11482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11487 ;;Total ram usage:        0 bytes
 11488 ;; Hardware stack levels used:    1
 11489 ;; Hardware stack levels required when called:    4
 11490 ;; This function calls:
 11491 ;;		Nothing
 11492 ;; This function is called by:
 11493 ;;		_SYSTEM_Initialize
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           
 11498                           ;psect for function _TMR2_Initialize
 11499  09DA                     _TMR2_Initialize:	
 11500                           
 11501                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11502                           
 11503                           ;incstack = 0
 11504                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11505  09DA  3001               	movlw	1
 11506  09DB  0145               	movlb	5	; select bank5
 11507  09DC  0090               	movwf	16	;volatile
 11508                           
 11509                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11510  09DD  018F               	clrf	15	;volatile
 11511                           
 11512                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11513  09DE  0191               	clrf	17	;volatile
 11514                           
 11515                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 11516  09DF  30FF               	movlw	255
 11517  09E0  008D               	movwf	13	;volatile
 11518                           
 11519                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11520  09E1  018C               	clrf	12	;volatile
 11521                           
 11522                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11523  09E2  014E               	movlb	14	; select bank14
 11524  09E3  1090               	bcf	16,1	;volatile
 11525                           
 11526                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xD0;
 11527  09E4  30D0               	movlw	208
 11528  09E5  0145               	movlb	5	; select bank5
 11529  09E6  008E               	movwf	14	;volatile
 11530  09E7  0008               	return
 11531  09E8                     __end_of_TMR2_Initialize:	
 11532                           
 11533                           	psect	text4
 11534  0A52                     __ptext4:	
 11535 ;; *************** function _TMR0_Initialize *****************
 11536 ;; Defined at:
 11537 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 11538 ;; Parameters:    Size  Location     Type
 11539 ;;		None
 11540 ;; Auto vars:     Size  Location     Type
 11541 ;;		None
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  1    wreg      void 
 11544 ;; Registers used:
 11545 ;;		wreg, status,2, status,0, pclath, cstack
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11555 ;;Total ram usage:        0 bytes
 11556 ;; Hardware stack levels used:    1
 11557 ;; Hardware stack levels required when called:    5
 11558 ;; This function calls:
 11559 ;;		_TMR0_SetInterruptHandler
 11560 ;; This function is called by:
 11561 ;;		_SYSTEM_Initialize
 11562 ;; This function uses a non-reentrant model
 11563 ;;
 11564                           
 11565                           
 11566                           ;psect for function _TMR0_Initialize
 11567  0A52                     _TMR0_Initialize:	
 11568                           
 11569                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 11570                           
 11571                           ;incstack = 0
 11572                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11573  0A52  3045               	movlw	69
 11574  0A53  014B               	movlb	11	; select bank11
 11575  0A54  009F               	movwf	31	;volatile
 11576                           
 11577                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 11578  0A55  30F9               	movlw	249
 11579  0A56  009D               	movwf	29	;volatile
 11580                           
 11581                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 11582  0A57  019C               	clrf	28	;volatile
 11583                           
 11584                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 11585  0A58  014E               	movlb	14	; select bank14
 11586  0A59  128C               	bcf	12,5	;volatile
 11587                           
 11588                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 11589  0A5A  1696               	bsf	22,5	;volatile
 11590                           
 11591                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 11592  0A5B  30FF               	movlw	low _TMR0_DefaultInterruptHandler
 11593  0A5C  0140               	movlb	0	; select bank0
 11594  0A5D  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11595  0A5E  3007               	movlw	high _TMR0_DefaultInterruptHandler
 11596  0A5F  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11597  0A60  3189  2126         	fcall	_TMR0_SetInterruptHandler
 11598                           
 11599                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 11600  0A62  3080               	movlw	128
 11601  0A63  014B               	movlb	11	; select bank11
 11602  0A64  009E               	movwf	30	;volatile
 11603  0A65  0008               	return
 11604  0A66                     __end_of_TMR0_Initialize:	
 11605                           
 11606                           	psect	text5
 11607  0990                     __ptext5:	
 11608 ;; *************** function _PWM4_Initialize *****************
 11609 ;; Defined at:
 11610 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 11611 ;; Parameters:    Size  Location     Type
 11612 ;;		None
 11613 ;; Auto vars:     Size  Location     Type
 11614 ;;		None
 11615 ;; Return value:  Size  Location     Type
 11616 ;;                  1    wreg      void 
 11617 ;; Registers used:
 11618 ;;		wreg, status,2, status,0
 11619 ;; Tracked objects:
 11620 ;;		On entry : 0/0
 11621 ;;		On exit  : 0/0
 11622 ;;		Unchanged: 0/0
 11623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11628 ;;Total ram usage:        0 bytes
 11629 ;; Hardware stack levels used:    1
 11630 ;; Hardware stack levels required when called:    4
 11631 ;; This function calls:
 11632 ;;		Nothing
 11633 ;; This function is called by:
 11634 ;;		_SYSTEM_Initialize
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           
 11639                           ;psect for function _PWM4_Initialize
 11640  0990                     _PWM4_Initialize:	
 11641                           
 11642                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 11643                           
 11644                           ;incstack = 0
 11645                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 11646  0990  308C               	movlw	140
 11647  0991  0146               	movlb	6	; select bank6
 11648  0992  009A               	movwf	26	;volatile
 11649                           
 11650                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 11651  0993  0199               	clrf	25	;volatile
 11652                           
 11653                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 11654  0994  0198               	clrf	24	;volatile
 11655                           
 11656                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 11657  0995  0144               	movlb	4	; select bank4
 11658  0996  081E               	movf	30,w	;volatile
 11659  0997  393F               	andlw	-193
 11660  0998  3840               	iorlw	64
 11661  0999  009E               	movwf	30	;volatile
 11662  099A  0008               	return
 11663  099B                     __end_of_PWM4_Initialize:	
 11664                           
 11665                           	psect	text6
 11666  0985                     __ptext6:	
 11667 ;; *************** function _PWM3_Initialize *****************
 11668 ;; Defined at:
 11669 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 11670 ;; Parameters:    Size  Location     Type
 11671 ;;		None
 11672 ;; Auto vars:     Size  Location     Type
 11673 ;;		None
 11674 ;; Return value:  Size  Location     Type
 11675 ;;                  1    wreg      void 
 11676 ;; Registers used:
 11677 ;;		wreg, status,2, status,0
 11678 ;; Tracked objects:
 11679 ;;		On entry : 0/0
 11680 ;;		On exit  : 0/0
 11681 ;;		Unchanged: 0/0
 11682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11687 ;;Total ram usage:        0 bytes
 11688 ;; Hardware stack levels used:    1
 11689 ;; Hardware stack levels required when called:    4
 11690 ;; This function calls:
 11691 ;;		Nothing
 11692 ;; This function is called by:
 11693 ;;		_SYSTEM_Initialize
 11694 ;; This function uses a non-reentrant model
 11695 ;;
 11696                           
 11697                           
 11698                           ;psect for function _PWM3_Initialize
 11699  0985                     _PWM3_Initialize:	
 11700                           
 11701                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 11702                           
 11703                           ;incstack = 0
 11704                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 11705  0985  308C               	movlw	140
 11706  0986  0146               	movlb	6	; select bank6
 11707  0987  0096               	movwf	22	;volatile
 11708                           
 11709                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 11710  0988  0195               	clrf	21	;volatile
 11711                           
 11712                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 11713  0989  0194               	clrf	20	;volatile
 11714                           
 11715                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 11716  098A  0144               	movlb	4	; select bank4
 11717  098B  081E               	movf	30,w	;volatile
 11718  098C  39CF               	andlw	-49
 11719  098D  3810               	iorlw	16
 11720  098E  009E               	movwf	30	;volatile
 11721  098F  0008               	return
 11722  0990                     __end_of_PWM3_Initialize:	
 11723                           
 11724                           	psect	text7
 11725  097A                     __ptext7:	
 11726 ;; *************** function _PWM2_Initialize *****************
 11727 ;; Defined at:
 11728 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 11729 ;; Parameters:    Size  Location     Type
 11730 ;;		None
 11731 ;; Auto vars:     Size  Location     Type
 11732 ;;		None
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  1    wreg      void 
 11735 ;; Registers used:
 11736 ;;		wreg, status,2, status,0
 11737 ;; Tracked objects:
 11738 ;;		On entry : 0/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11746 ;;Total ram usage:        0 bytes
 11747 ;; Hardware stack levels used:    1
 11748 ;; Hardware stack levels required when called:    4
 11749 ;; This function calls:
 11750 ;;		Nothing
 11751 ;; This function is called by:
 11752 ;;		_SYSTEM_Initialize
 11753 ;; This function uses a non-reentrant model
 11754 ;;
 11755                           
 11756                           
 11757                           ;psect for function _PWM2_Initialize
 11758  097A                     _PWM2_Initialize:	
 11759                           
 11760                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 11761                           
 11762                           ;incstack = 0
 11763                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 11764  097A  308C               	movlw	140
 11765  097B  0146               	movlb	6	; select bank6
 11766  097C  0092               	movwf	18	;volatile
 11767                           
 11768                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 11769  097D  0191               	clrf	17	;volatile
 11770                           
 11771                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 11772  097E  0190               	clrf	16	;volatile
 11773                           
 11774                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 11775  097F  0144               	movlb	4	; select bank4
 11776  0980  081E               	movf	30,w	;volatile
 11777  0981  39F3               	andlw	-13
 11778  0982  3804               	iorlw	4
 11779  0983  009E               	movwf	30	;volatile
 11780  0984  0008               	return
 11781  0985                     __end_of_PWM2_Initialize:	
 11782                           
 11783                           	psect	text8
 11784  096F                     __ptext8:	
 11785 ;; *************** function _PWM1_Initialize *****************
 11786 ;; Defined at:
 11787 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;		None
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;		None
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  1    wreg      void 
 11794 ;; Registers used:
 11795 ;;		wreg, status,2, status,0
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11805 ;;Total ram usage:        0 bytes
 11806 ;; Hardware stack levels used:    1
 11807 ;; Hardware stack levels required when called:    4
 11808 ;; This function calls:
 11809 ;;		Nothing
 11810 ;; This function is called by:
 11811 ;;		_SYSTEM_Initialize
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815                           
 11816                           ;psect for function _PWM1_Initialize
 11817  096F                     _PWM1_Initialize:	
 11818                           
 11819                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 11820                           
 11821                           ;incstack = 0
 11822                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 11823  096F  308C               	movlw	140
 11824  0970  0146               	movlb	6	; select bank6
 11825  0971  008E               	movwf	14	;volatile
 11826                           
 11827                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 11828  0972  018D               	clrf	13	;volatile
 11829                           
 11830                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 11831  0973  018C               	clrf	12	;volatile
 11832                           
 11833                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 11834  0974  0144               	movlb	4	; select bank4
 11835  0975  081E               	movf	30,w	;volatile
 11836  0976  39FC               	andlw	-4
 11837  0977  3801               	iorlw	1
 11838  0978  009E               	movwf	30	;volatile
 11839  0979  0008               	return
 11840  097A                     __end_of_PWM1_Initialize:	
 11841                           
 11842                           	psect	text9
 11843  0965                     __ptext9:	
 11844 ;; *************** function _PMD_Initialize *****************
 11845 ;; Defined at:
 11846 ;;		line 80 in file "mcc_generated_files/mcc.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;		None
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;		None
 11851 ;; Return value:  Size  Location     Type
 11852 ;;                  1    wreg      void 
 11853 ;; Registers used:
 11854 ;;		status,2
 11855 ;; Tracked objects:
 11856 ;;		On entry : 0/0
 11857 ;;		On exit  : 0/0
 11858 ;;		Unchanged: 0/0
 11859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11864 ;;Total ram usage:        0 bytes
 11865 ;; Hardware stack levels used:    1
 11866 ;; Hardware stack levels required when called:    4
 11867 ;; This function calls:
 11868 ;;		Nothing
 11869 ;; This function is called by:
 11870 ;;		_SYSTEM_Initialize
 11871 ;; This function uses a non-reentrant model
 11872 ;;
 11873                           
 11874                           
 11875                           ;psect for function _PMD_Initialize
 11876  0965                     _PMD_Initialize:	
 11877                           
 11878                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 11879                           
 11880                           ;incstack = 0
 11881                           ; Regs used in _PMD_Initialize: [status,2]
 11882  0965  014F               	movlb	15	; select bank15
 11883  0966  0196               	clrf	22	;volatile
 11884                           
 11885                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 11886  0967  0197               	clrf	23	;volatile
 11887                           
 11888                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 11889  0968  0198               	clrf	24	;volatile
 11890                           
 11891                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 11892  0969  0199               	clrf	25	;volatile
 11893                           
 11894                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 11895  096A  019A               	clrf	26	;volatile
 11896                           
 11897                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 11898  096B  019B               	clrf	27	;volatile
 11899                           
 11900                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 11901  096C  019C               	clrf	28	;volatile
 11902                           
 11903                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 11904  096D  019D               	clrf	29	;volatile
 11905  096E  0008               	return
 11906  096F                     __end_of_PMD_Initialize:	
 11907                           
 11908                           	psect	text10
 11909  0E0E                     __ptext10:	
 11910 ;; *************** function _PIN_MANAGER_Initialize *****************
 11911 ;; Defined at:
 11912 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;		None
 11915 ;; Auto vars:     Size  Location     Type
 11916 ;;		None
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      void 
 11919 ;; Registers used:
 11920 ;;		wreg, status,2
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11930 ;;Total ram usage:        0 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; Hardware stack levels required when called:    4
 11933 ;; This function calls:
 11934 ;;		Nothing
 11935 ;; This function is called by:
 11936 ;;		_SYSTEM_Initialize
 11937 ;; This function uses a non-reentrant model
 11938 ;;
 11939                           
 11940                           
 11941                           ;psect for function _PIN_MANAGER_Initialize
 11942  0E0E                     _PIN_MANAGER_Initialize:	
 11943                           
 11944                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 11945                           
 11946                           ;incstack = 0
 11947                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11948  0E0E  0140               	movlb	0	; select bank0
 11949  0E0F  0198               	clrf	24	;volatile
 11950                           
 11951                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 11952  0E10  0199               	clrf	25	;volatile
 11953                           
 11954                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 11955  0E11  019A               	clrf	26	;volatile
 11956                           
 11957                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 11958  0E12  303F               	movlw	63
 11959  0E13  0092               	movwf	18	;volatile
 11960                           
 11961                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 11962  0E14  30F0               	movlw	240
 11963  0E15  0093               	movwf	19	;volatile
 11964                           
 11965                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x06;
 11966  0E16  3006               	movlw	6
 11967  0E17  0094               	movwf	20	;volatile
 11968                           
 11969                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 11970  0E18  30FF               	movlw	255
 11971  0E19  017E               	movlb	62	; select bank62
 11972  0E1A  00CE               	movwf	78	;volatile
 11973                           
 11974                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 11975  0E1B  30E0               	movlw	224
 11976  0E1C  00C3               	movwf	67	;volatile
 11977                           
 11978                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 11979  0E1D  3007               	movlw	7
 11980  0E1E  00B8               	movwf	56	;volatile
 11981                           
 11982                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 11983  0E1F  01C4               	clrf	68	;volatile
 11984                           
 11985                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 11986  0E20  01B9               	clrf	57	;volatile
 11987                           
 11988                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 11989  0E21  01CF               	clrf	79	;volatile
 11990                           
 11991                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 11992  0E22  01BA               	clrf	58	;volatile
 11993                           
 11994                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 11995  0E23  01C5               	clrf	69	;volatile
 11996                           
 11997                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 11998  0E24  01D0               	clrf	80	;volatile
 11999                           
 12000                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12001  0E25  3037               	movlw	55
 12002  0E26  00BB               	movwf	59	;volatile
 12003                           
 12004                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12005  0E27  30F0               	movlw	240
 12006  0E28  00C6               	movwf	70	;volatile
 12007                           
 12008                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12009  0E29  30FF               	movlw	255
 12010  0E2A  00D1               	movwf	81	;volatile
 12011                           
 12012                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12013  0E2B  3005               	movlw	5
 12014  0E2C  017D               	movlb	61	; select bank61
 12015  0E2D  00C5               	movwf	69	;volatile
 12016                           
 12017                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12018  0E2E  3014               	movlw	20
 12019  0E2F  017E               	movlb	62	; select bank62
 12020  0E30  0094               	movwf	20	;volatile
 12021                           
 12022                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12023  0E31  300B               	movlw	11
 12024  0E32  00A3               	movwf	35	;volatile
 12025                           
 12026                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12027  0E33  300C               	movlw	12
 12028  0E34  00A4               	movwf	36	;volatile
 12029                           
 12030                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12031  0E35  3013               	movlw	19
 12032  0E36  0095               	movwf	21	;volatile
 12033                           
 12034                           ;mcc_generated_files/pin_manager.c: 111:     RC5PPS = 0x09;
 12035  0E37  3009               	movlw	9
 12036  0E38  00A5               	movwf	37	;volatile
 12037                           
 12038                           ;mcc_generated_files/pin_manager.c: 112:     RC6PPS = 0x0A;
 12039  0E39  300A               	movlw	10
 12040  0E3A  00A6               	movwf	38	;volatile
 12041                           
 12042                           ;mcc_generated_files/pin_manager.c: 113:     RC7PPS = 0x09;
 12043  0E3B  3009               	movlw	9
 12044  0E3C  00A7               	movwf	39	;volatile
 12045                           
 12046                           ;mcc_generated_files/pin_manager.c: 114:     SSP1DATPPS = 0x04;
 12047  0E3D  3004               	movlw	4
 12048  0E3E  017D               	movlb	61	; select bank61
 12049  0E3F  00C6               	movwf	70	;volatile
 12050                           
 12051                           ;mcc_generated_files/pin_manager.c: 115:     RX1DTPPS = 0x0C;
 12052  0E40  300C               	movlw	12
 12053  0E41  00CB               	movwf	75	;volatile
 12054  0E42  0008               	return
 12055  0E43                     __end_of_PIN_MANAGER_Initialize:	
 12056                           
 12057                           	psect	text11
 12058  095C                     __ptext11:	
 12059 ;; *************** function _OSCILLATOR_Initialize *****************
 12060 ;; Defined at:
 12061 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12062 ;; Parameters:    Size  Location     Type
 12063 ;;		None
 12064 ;; Auto vars:     Size  Location     Type
 12065 ;;		None
 12066 ;; Return value:  Size  Location     Type
 12067 ;;                  1    wreg      void 
 12068 ;; Registers used:
 12069 ;;		wreg, status,2
 12070 ;; Tracked objects:
 12071 ;;		On entry : 0/0
 12072 ;;		On exit  : 0/0
 12073 ;;		Unchanged: 0/0
 12074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12079 ;;Total ram usage:        0 bytes
 12080 ;; Hardware stack levels used:    1
 12081 ;; Hardware stack levels required when called:    4
 12082 ;; This function calls:
 12083 ;;		Nothing
 12084 ;; This function is called by:
 12085 ;;		_SYSTEM_Initialize
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           
 12090                           ;psect for function _OSCILLATOR_Initialize
 12091  095C                     _OSCILLATOR_Initialize:	
 12092                           
 12093                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12094                           
 12095                           ;incstack = 0
 12096                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12097  095C  3060               	movlw	96
 12098  095D  0151               	movlb	17	; select bank17
 12099  095E  008D               	movwf	13	;volatile
 12100                           
 12101                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12102  095F  018F               	clrf	15	;volatile
 12103                           
 12104                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12105  0960  0191               	clrf	17	;volatile
 12106                           
 12107                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12108  0961  3006               	movlw	6
 12109  0962  0093               	movwf	19	;volatile
 12110                           
 12111                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12112  0963  0192               	clrf	18	;volatile
 12113  0964  0008               	return
 12114  0965                     __end_of_OSCILLATOR_Initialize:	
 12115                           
 12116                           	psect	text12
 12117  0B34                     __ptext12:	
 12118 ;; *************** function _I2C1_Initialize *****************
 12119 ;; Defined at:
 12120 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;		None
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;		None
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  1    wreg      void 
 12127 ;; Registers used:
 12128 ;;		wreg, status,2
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12136 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12137 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12138 ;;Total ram usage:        1 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:    4
 12141 ;; This function calls:
 12142 ;;		Nothing
 12143 ;; This function is called by:
 12144 ;;		_SYSTEM_Initialize
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           
 12149                           ;psect for function _I2C1_Initialize
 12150  0B34                     _I2C1_Initialize:	
 12151                           
 12152                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12153                           
 12154                           ;incstack = 0
 12155                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12156  0B34  30D2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12157  0B35  0140               	movlb	0	; select bank0
 12158  0B36  00A0               	movwf	??_I2C1_Initialize
 12159  0B37  0820               	movf	??_I2C1_Initialize,w
 12160  0B38  0141               	movlb	1	; select bank1
 12161  0B39  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12162                           
 12163                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12164  0B3A  30D2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12165  0B3B  0140               	movlb	0	; select bank0
 12166  0B3C  00A0               	movwf	??_I2C1_Initialize
 12167  0B3D  0820               	movf	??_I2C1_Initialize,w
 12168  0B3E  0141               	movlb	1	; select bank1
 12169  0B3F  00A0               	movwf	_i2c1_object^(0+128)
 12170                           
 12171                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12172  0B40  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12173                           
 12174                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12175  0B41  1022               	bcf	(_i2c1_object^(0+128)+2),0
 12176                           
 12177                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12178  0B42  01A4               	clrf	(_i2c1_object^(0+128)+4)
 12179                           
 12180                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12181  0B43  0143               	movlb	3	; select bank3
 12182  0B44  018F               	clrf	15	;volatile
 12183                           
 12184                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12185  0B45  3028               	movlw	40
 12186  0B46  0090               	movwf	16	;volatile
 12187                           
 12188                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12189  0B47  0192               	clrf	18	;volatile
 12190                           
 12191                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12192  0B48  304F               	movlw	79
 12193  0B49  008D               	movwf	13	;volatile
 12194                           
 12195                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12196  0B4A  014E               	movlb	14	; select bank14
 12197  0B4B  100F               	bcf	15,0	;volatile
 12198                           
 12199                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12200  0B4C  108F               	bcf	15,1	;volatile
 12201                           
 12202                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12203  0B4D  1419               	bsf	25,0	;volatile
 12204                           
 12205                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12206  0B4E  1499               	bsf	25,1	;volatile
 12207  0B4F  0008               	return
 12208  0B50                     __end_of_I2C1_Initialize:	
 12209                           
 12210                           	psect	text13
 12211  0D72                     __ptext13:	
 12212 ;; *************** function _EUSART1_Initialize *****************
 12213 ;; Defined at:
 12214 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12215 ;; Parameters:    Size  Location     Type
 12216 ;;		None
 12217 ;; Auto vars:     Size  Location     Type
 12218 ;;		None
 12219 ;; Return value:  Size  Location     Type
 12220 ;;                  1    wreg      void 
 12221 ;; Registers used:
 12222 ;;		wreg, status,2, status,0, pclath, cstack
 12223 ;; Tracked objects:
 12224 ;;		On entry : 0/0
 12225 ;;		On exit  : 0/0
 12226 ;;		Unchanged: 0/0
 12227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12232 ;;Total ram usage:        0 bytes
 12233 ;; Hardware stack levels used:    1
 12234 ;; Hardware stack levels required when called:    5
 12235 ;; This function calls:
 12236 ;;		_EUSART1_SetErrorHandler
 12237 ;;		_EUSART1_SetFramingErrorHandler
 12238 ;;		_EUSART1_SetOverrunErrorHandler
 12239 ;;		_EUSART1_SetRxInterruptHandler
 12240 ;; This function is called by:
 12241 ;;		_SYSTEM_Initialize
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           
 12246                           ;psect for function _EUSART1_Initialize
 12247  0D72                     _EUSART1_Initialize:	
 12248                           
 12249                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12250                           
 12251                           ;incstack = 0
 12252                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12253  0D72  014E               	movlb	14	; select bank14
 12254  0D73  1299               	bcf	25,5	;volatile
 12255                           
 12256                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12257  0D74  30A5               	movlw	low _EUSART1_Receive_ISR
 12258  0D75  0140               	movlb	0	; select bank0
 12259  0D76  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12260  0D77  300D               	movlw	high _EUSART1_Receive_ISR
 12261  0D78  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12262  0D79  3189  212F  318D   	fcall	_EUSART1_SetRxInterruptHandler
 12263                           
 12264                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12265  0D7C  3008               	movlw	8
 12266  0D7D  0142               	movlb	2	; select bank2
 12267  0D7E  009F               	movwf	31	;volatile
 12268                           
 12269                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12270  0D7F  3090               	movlw	144
 12271  0D80  009D               	movwf	29	;volatile
 12272                           
 12273                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12274  0D81  3004               	movlw	4
 12275  0D82  009E               	movwf	30	;volatile
 12276                           
 12277                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12278  0D83  301F               	movlw	31
 12279  0D84  009B               	movwf	27	;volatile
 12280                           
 12281                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12282  0D85  019C               	clrf	28	;volatile
 12283                           
 12284                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12285  0D86  3003               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12286  0D87  0140               	movlb	0	; select bank0
 12287  0D88  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12288  0D89  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12289  0D8A  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12290  0D8B  3189  214A  318D   	fcall	_EUSART1_SetFramingErrorHandler
 12291                           
 12292                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12293  0D8E  30F1               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12294  0D8F  0140               	movlb	0	; select bank0
 12295  0D90  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12296  0D91  3008               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12297  0D92  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12298  0D93  3189  2153  318D   	fcall	_EUSART1_SetOverrunErrorHandler
 12299                           
 12300                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12301  0D96  30E7               	movlw	low _EUSART1_DefaultErrorHandler
 12302  0D97  0140               	movlb	0	; select bank0
 12303  0D98  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12304  0D99  3008               	movlw	high _EUSART1_DefaultErrorHandler
 12305  0D9A  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12306  0D9B  3189  2141         	fcall	_EUSART1_SetErrorHandler
 12307                           
 12308                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12309  0D9D  0141               	movlb	1	; select bank1
 12310  0D9E  01D0               	clrf	_eusart1RxLastError^(0+128)	;volatile
 12311                           
 12312                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12313  0D9F  01F4               	clrf	_eusart1RxHead	;volatile
 12314                           
 12315                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12316  0DA0  01F3               	clrf	_eusart1RxTail	;volatile
 12317                           
 12318                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12319  0DA1  01D1               	clrf	_eusart1RxCount^(0+128)	;volatile
 12320                           
 12321                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12322  0DA2  014E               	movlb	14	; select bank14
 12323  0DA3  1699               	bsf	25,5	;volatile
 12324  0DA4  0008               	return
 12325  0DA5                     __end_of_EUSART1_Initialize:	
 12326                           
 12327                           	psect	text14
 12328  0953                     __ptext14:	
 12329 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12330 ;; Defined at:
 12331 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12334 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;		None
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  1    wreg      void 
 12339 ;; Registers used:
 12340 ;;		wreg
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12350 ;;Total ram usage:        2 bytes
 12351 ;; Hardware stack levels used:    1
 12352 ;; Hardware stack levels required when called:    4
 12353 ;; This function calls:
 12354 ;;		Nothing
 12355 ;; This function is called by:
 12356 ;;		_EUSART1_Initialize
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360                           
 12361                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12362  0953                     _EUSART1_SetOverrunErrorHandler:	
 12363                           
 12364                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12365                           
 12366                           ;incstack = 0
 12367                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12368  0953  0140               	movlb	0	; select bank0
 12369  0954  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12370  0955  0142               	movlb	2	; select bank2
 12371  0956  00E7               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12372  0957  0140               	movlb	0	; select bank0
 12373  0958  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12374  0959  0142               	movlb	2	; select bank2
 12375  095A  00E6               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12376  095B  0008               	return
 12377  095C                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12378                           
 12379                           	psect	text15
 12380  094A                     __ptext15:	
 12381 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12382 ;; Defined at:
 12383 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12386 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;		None
 12389 ;; Return value:  Size  Location     Type
 12390 ;;                  1    wreg      void 
 12391 ;; Registers used:
 12392 ;;		wreg
 12393 ;; Tracked objects:
 12394 ;;		On entry : 0/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12398 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12401 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12402 ;;Total ram usage:        2 bytes
 12403 ;; Hardware stack levels used:    1
 12404 ;; Hardware stack levels required when called:    4
 12405 ;; This function calls:
 12406 ;;		Nothing
 12407 ;; This function is called by:
 12408 ;;		_EUSART1_Initialize
 12409 ;; This function uses a non-reentrant model
 12410 ;;
 12411                           
 12412                           
 12413                           ;psect for function _EUSART1_SetFramingErrorHandler
 12414  094A                     _EUSART1_SetFramingErrorHandler:	
 12415                           
 12416                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12417                           
 12418                           ;incstack = 0
 12419                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12420  094A  0140               	movlb	0	; select bank0
 12421  094B  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12422  094C  0142               	movlb	2	; select bank2
 12423  094D  00E9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12424  094E  0140               	movlb	0	; select bank0
 12425  094F  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12426  0950  0142               	movlb	2	; select bank2
 12427  0951  00E8               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12428  0952  0008               	return
 12429  0953                     __end_of_EUSART1_SetFramingErrorHandler:	
 12430                           
 12431                           	psect	text16
 12432  0941                     __ptext16:	
 12433 ;; *************** function _EUSART1_SetErrorHandler *****************
 12434 ;; Defined at:
 12435 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12438 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;		None
 12441 ;; Return value:  Size  Location     Type
 12442 ;;                  1    wreg      void 
 12443 ;; Registers used:
 12444 ;;		wreg
 12445 ;; Tracked objects:
 12446 ;;		On entry : 0/0
 12447 ;;		On exit  : 0/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12450 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12454 ;;Total ram usage:        2 bytes
 12455 ;; Hardware stack levels used:    1
 12456 ;; Hardware stack levels required when called:    4
 12457 ;; This function calls:
 12458 ;;		Nothing
 12459 ;; This function is called by:
 12460 ;;		_EUSART1_Initialize
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           
 12464                           
 12465                           ;psect for function _EUSART1_SetErrorHandler
 12466  0941                     _EUSART1_SetErrorHandler:	
 12467                           
 12468                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 12469                           
 12470                           ;incstack = 0
 12471                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 12472  0941  0140               	movlb	0	; select bank0
 12473  0942  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 12474  0943  0142               	movlb	2	; select bank2
 12475  0944  00E5               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 12476  0945  0140               	movlb	0	; select bank0
 12477  0946  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 12478  0947  0142               	movlb	2	; select bank2
 12479  0948  00E4               	movwf	_EUSART1_ErrorHandler^(0+256)
 12480  0949  0008               	return
 12481  094A                     __end_of_EUSART1_SetErrorHandler:	
 12482                           
 12483                           	psect	text17
 12484  0C96                     __ptext17:	
 12485 ;; *************** function _ADCC_Initialize *****************
 12486 ;; Defined at:
 12487 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12488 ;; Parameters:    Size  Location     Type
 12489 ;;		None
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;		None
 12492 ;; Return value:  Size  Location     Type
 12493 ;;                  1    wreg      void 
 12494 ;; Registers used:
 12495 ;;		wreg, status,2, status,0, pclath, cstack
 12496 ;; Tracked objects:
 12497 ;;		On entry : 0/0
 12498 ;;		On exit  : 0/0
 12499 ;;		Unchanged: 0/0
 12500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12505 ;;Total ram usage:        0 bytes
 12506 ;; Hardware stack levels used:    1
 12507 ;; Hardware stack levels required when called:    5
 12508 ;; This function calls:
 12509 ;;		_ADCC_SetADTIInterruptHandler
 12510 ;; This function is called by:
 12511 ;;		_SYSTEM_Initialize
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           
 12516                           ;psect for function _ADCC_Initialize
 12517  0C96                     _ADCC_Initialize:	
 12518                           
 12519                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12520                           
 12521                           ;incstack = 0
 12522                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12523  0C96  0141               	movlb	1	; select bank1
 12524  0C97  018C               	clrf	12	;volatile
 12525                           
 12526                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12527  0C98  018D               	clrf	13	;volatile
 12528                           
 12529                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12530  0C99  018E               	clrf	14	;volatile
 12531                           
 12532                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12533  0C9A  018F               	clrf	15	;volatile
 12534                           
 12535                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12536  0C9B  0192               	clrf	18	;volatile
 12537                           
 12538                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12539  0C9C  0193               	clrf	19	;volatile
 12540                           
 12541                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12542  0C9D  0198               	clrf	24	;volatile
 12543                           
 12544                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12545  0C9E  019A               	clrf	26	;volatile
 12546                           
 12547                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12548  0C9F  019F               	clrf	31	;volatile
 12549                           
 12550                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12551  0CA0  0142               	movlb	2	; select bank2
 12552  0CA1  018C               	clrf	12	;volatile
 12553                           
 12554                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12555  0CA2  018D               	clrf	13	;volatile
 12556                           
 12557                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12558  0CA3  018E               	clrf	14	;volatile
 12559                           
 12560                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12561  0CA4  018F               	clrf	15	;volatile
 12562                           
 12563                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12564  0CA5  0190               	clrf	16	;volatile
 12565                           
 12566                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12567  0CA6  0192               	clrf	18	;volatile
 12568                           
 12569                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 12570  0CA7  3054               	movlw	84
 12571  0CA8  0093               	movwf	19	;volatile
 12572                           
 12573                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 12574  0CA9  3056               	movlw	86
 12575  0CAA  0094               	movwf	20	;volatile
 12576                           
 12577                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12578  0CAB  0195               	clrf	21	;volatile
 12579                           
 12580                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 12581  0CAC  0196               	clrf	22	;volatile
 12582                           
 12583                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12584  0CAD  0197               	clrf	23	;volatile
 12585                           
 12586                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12587  0CAE  0198               	clrf	24	;volatile
 12588                           
 12589                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 12590  0CAF  30D4               	movlw	212
 12591  0CB0  0091               	movwf	17	;volatile
 12592                           
 12593                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 12594  0CB1  014E               	movlb	14	; select bank14
 12595  0CB2  108D               	bcf	13,1	;volatile
 12596                           
 12597                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 12598  0CB3  1497               	bsf	23,1	;volatile
 12599                           
 12600                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 12601  0CB4  3002               	movlw	low _ADCC_DefaultInterruptHandler
 12602  0CB5  0140               	movlb	0	; select bank0
 12603  0CB6  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 12604  0CB7  3000               	movlw	high _ADCC_DefaultInterruptHandler
 12605  0CB8  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 12606  0CB9  3189  2102         	fcall	_ADCC_SetADTIInterruptHandler
 12607  0CBB  0008               	return
 12608  0CBC                     __end_of_ADCC_Initialize:	
 12609                           
 12610                           	psect	text18
 12611  01C4                     __ptext18:	
 12612 ;; *************** function _LED_task *****************
 12613 ;; Defined at:
 12614 ;;		line 21 in file "led.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;		None
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;		None
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  1    wreg      void 
 12621 ;; Registers used:
 12622 ;;		wreg, status,2, status,0, pclath, cstack
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12631 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12632 ;;Total ram usage:        2 bytes
 12633 ;; Hardware stack levels used:    1
 12634 ;; Hardware stack levels required when called:    5
 12635 ;; This function calls:
 12636 ;;		_BEAT_detected
 12637 ;;		_CLOCK_getTime
 12638 ;;		_PWM1_LoadDutyValue
 12639 ;;		_PWM2_LoadDutyValue
 12640 ;;		_PWM3_LoadDutyValue
 12641 ;;		_PWM4_LoadDutyValue
 12642 ;; This function is called by:
 12643 ;;		_main
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           
 12648                           ;psect for function _LED_task
 12649  01C4                     _LED_task:	
 12650                           
 12651                           ;led.c: 23:     if(CLOCK_getTime() - lastLedActiveTime < 100){
 12652                           
 12653                           ;incstack = 0
 12654                           ; Regs used in _LED_task: [wreg+status,2+status,0+pclath+cstack]
 12655  01C4  3189  211D  3181   	fcall	_CLOCK_getTime
 12656  01C7  0142               	movlb	2	; select bank2
 12657  01C8  0834               	movf	_lastLedActiveTime^(0+256),w
 12658  01C9  0140               	movlb	0	; select bank0
 12659  01CA  0220               	subwf	?_CLOCK_getTime,w
 12660  01CB  00A2               	movwf	??_LED_task
 12661  01CC  0142               	movlb	2	; select bank2
 12662  01CD  0835               	movf	(_lastLedActiveTime+1)^(0+256),w
 12663  01CE  0140               	movlb	0	; select bank0
 12664  01CF  3B21               	subwfb	?_CLOCK_getTime+1,w
 12665  01D0  00A3               	movwf	??_LED_task+1
 12666  01D1  3000               	movlw	0
 12667  01D2  0223               	subwf	??_LED_task+1,w
 12668  01D3  3064               	movlw	100
 12669  01D4  1903               	skipnz
 12670  01D5  0222               	subwf	??_LED_task,w
 12671  01D6  1C03               	btfss	3,0
 12672  01D7  0008               	return
 12673                           
 12674                           ;led.c: 27:     lastLedActiveTime = CLOCK_getTime();
 12675  01D8  3189  211D  3181   	fcall	_CLOCK_getTime
 12676  01DB  0140               	movlb	0	; select bank0
 12677  01DC  0821               	movf	?_CLOCK_getTime+1,w
 12678  01DD  0142               	movlb	2	; select bank2
 12679  01DE  00B5               	movwf	(_lastLedActiveTime+1)^(0+256)
 12680  01DF  0140               	movlb	0	; select bank0
 12681  01E0  0820               	movf	?_CLOCK_getTime,w
 12682  01E1  0142               	movlb	2	; select bank2
 12683  01E2  00B4               	movwf	_lastLedActiveTime^(0+256)
 12684                           
 12685                           ;led.c: 29:     if(!BEAT_detected()){
 12686  01E3  3189  2138  3181   	fcall	_BEAT_detected
 12687  01E6  3A00               	xorlw	0
 12688  01E7  1D03               	skipz
 12689  01E8  2A05               	goto	l5724
 12690                           
 12691                           ;led.c: 30:         PWM1_LoadDutyValue(0);
 12692  01E9  3000               	movlw	0
 12693  01EA  0140               	movlb	0	; select bank0
 12694  01EB  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12695  01EC  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12696  01ED  318B  236D  3181   	fcall	_PWM1_LoadDutyValue
 12697                           
 12698                           ;led.c: 31:         PWM2_LoadDutyValue(0);
 12699  01F0  3000               	movlw	0
 12700  01F1  0140               	movlb	0	; select bank0
 12701  01F2  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12702  01F3  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 12703  01F4  318B  238B  3181   	fcall	_PWM2_LoadDutyValue
 12704                           
 12705                           ;led.c: 32:         PWM3_LoadDutyValue(0);
 12706  01F7  3000               	movlw	0
 12707  01F8  0140               	movlb	0	; select bank0
 12708  01F9  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 12709  01FA  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 12710  01FB  318B  23A9  3181   	fcall	_PWM3_LoadDutyValue
 12711                           
 12712                           ;led.c: 33:         PWM4_LoadDutyValue(0);
 12713  01FE  3000               	movlw	0
 12714  01FF  0140               	movlb	0	; select bank0
 12715  0200  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 12716  0201  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 12717  0202  318B  23C7         	fcall	_PWM4_LoadDutyValue
 12718                           
 12719                           ;led.c: 34:     } else if (currentState == 1){
 12720  0204  0008               	return
 12721  0205                     l5724:	
 12722  0205  0370               	decf	_currentState,w
 12723  0206  0471               	iorwf	_currentState+1,w
 12724  0207  1D03               	btfss	3,2
 12725  0208  2A7B               	goto	l5730
 12726                           
 12727                           ;led.c: 35:         PWM1_LoadDutyValue(120);
 12728  0209  3078               	movlw	120
 12729  020A  0140               	movlb	0	; select bank0
 12730  020B  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12731  020C  3000               	movlw	0
 12732  020D  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12733  020E  318B  236D  3181   	fcall	_PWM1_LoadDutyValue
 12734                           
 12735                           ;led.c: 36:         PWM2_LoadDutyValue(0);
 12736  0211  3000               	movlw	0
 12737  0212  0140               	movlb	0	; select bank0
 12738  0213  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12739  0214  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 12740  0215  318B  238B  3181   	fcall	_PWM2_LoadDutyValue
 12741                           
 12742                           ;led.c: 37:         PWM3_LoadDutyValue(0);
 12743  0218  3000               	movlw	0
 12744  0219  0140               	movlb	0	; select bank0
 12745  021A  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 12746  021B  2A44               	goto	L10
 12747  021C                     l5732:	
 12748                           ;led.c: 38:         PWM4_LoadDutyValue(0);
 12749                           
 12750                           
 12751                           ;led.c: 41:         PWM1_LoadDutyValue(0);
 12752  021C  3000               	movlw	0
 12753  021D  0140               	movlb	0	; select bank0
 12754  021E  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12755  021F  2A34               	goto	L7
 12756  0220                     l5738:	
 12757                           ;led.c: 44:         PWM4_LoadDutyValue(0);
 12758                           
 12759                           ;led.c: 43:         PWM3_LoadDutyValue(120);
 12760                           
 12761                           ;led.c: 42:         PWM2_LoadDutyValue(120);
 12762                           
 12763                           
 12764                           ;led.c: 47:         PWM1_LoadDutyValue(120);
 12765  0220  3078               	movlw	120
 12766  0221  0140               	movlb	0	; select bank0
 12767  0222  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12768  0223  3000               	movlw	0
 12769  0224  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12770  0225  318B  236D  3181   	fcall	_PWM1_LoadDutyValue
 12771                           
 12772                           ;led.c: 48:         PWM2_LoadDutyValue(0);
 12773  0228  3000               	movlw	0
 12774  0229  0140               	movlb	0	; select bank0
 12775  022A  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12776  022B  2A3C               	goto	L8
 12777  022C                     l5744:	
 12778                           ;led.c: 50:         PWM4_LoadDutyValue(0);
 12779                           
 12780                           ;led.c: 49:         PWM3_LoadDutyValue(120);
 12781                           
 12782                           
 12783                           ;led.c: 53:         PWM1_LoadDutyValue(0);
 12784  022C  3000               	movlw	0
 12785  022D  0140               	movlb	0	; select bank0
 12786  022E  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12787  022F  2A50               	goto	L9
 12788  0230                     l5750:	
 12789                           ;led.c: 56:         PWM4_LoadDutyValue(120);
 12790                           
 12791                           ;led.c: 55:         PWM3_LoadDutyValue(120);
 12792                           
 12793                           ;led.c: 54:         PWM2_LoadDutyValue(0);
 12794                           
 12795                           
 12796                           ;led.c: 59:         PWM1_LoadDutyValue(120);
 12797  0230  3078               	movlw	120
 12798  0231  0140               	movlb	0	; select bank0
 12799  0232  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12800  0233  3000               	movlw	0
 12801  0234                     L7:	
 12802  0234  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12803  0235  318B  236D  3181   	fcall	_PWM1_LoadDutyValue
 12804                           
 12805                           ;led.c: 60:         PWM2_LoadDutyValue(120);
 12806  0238  3078               	movlw	120
 12807  0239  0140               	movlb	0	; select bank0
 12808  023A  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12809  023B  3000               	movlw	0
 12810  023C                     L8:	
 12811  023C  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 12812  023D  318B  238B  3181   	fcall	_PWM2_LoadDutyValue
 12813                           
 12814                           ;led.c: 61:         PWM3_LoadDutyValue(120);
 12815  0240  3078               	movlw	120
 12816  0241  0140               	movlb	0	; select bank0
 12817  0242  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 12818  0243  3000               	movlw	0
 12819  0244                     L10:	
 12820  0244  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 12821  0245  318B  23A9  3181   	fcall	_PWM3_LoadDutyValue
 12822                           
 12823                           ;led.c: 62:         PWM4_LoadDutyValue(0);
 12824  0248  3000               	movlw	0
 12825  0249  0140               	movlb	0	; select bank0
 12826  024A  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 12827  024B  2A73               	goto	L1
 12828  024C                     l5756:	
 12829                           
 12830                           ;led.c: 65:         PWM1_LoadDutyValue(120);
 12831  024C  3078               	movlw	120
 12832  024D  0140               	movlb	0	; select bank0
 12833  024E  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12834  024F  3000               	movlw	0
 12835  0250                     L9:	
 12836  0250  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12837  0251  318B  236D  3181   	fcall	_PWM1_LoadDutyValue
 12838                           
 12839                           ;led.c: 66:         PWM2_LoadDutyValue(0);
 12840  0254  3000               	movlw	0
 12841  0255  0140               	movlb	0	; select bank0
 12842  0256  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12843  0257  2A63               	goto	L5
 12844  0258                     l5762:	
 12845                           ;led.c: 68:         PWM4_LoadDutyValue(120);
 12846                           
 12847                           ;led.c: 67:         PWM3_LoadDutyValue(120);
 12848                           
 12849                           
 12850                           ;led.c: 71:         PWM1_LoadDutyValue(0);
 12851  0258  3000               	movlw	0
 12852  0259  0140               	movlb	0	; select bank0
 12853  025A  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12854  025B  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12855  025C  318B  236D  3181   	fcall	_PWM1_LoadDutyValue
 12856                           
 12857                           ;led.c: 72:         PWM2_LoadDutyValue(120);
 12858  025F  3078               	movlw	120
 12859  0260  0140               	movlb	0	; select bank0
 12860  0261  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12861  0262  3000               	movlw	0
 12862  0263                     L5:	
 12863  0263  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 12864  0264  318B  238B  3181   	fcall	_PWM2_LoadDutyValue
 12865                           
 12866                           ;led.c: 73:         PWM3_LoadDutyValue(120);
 12867  0267  3078               	movlw	120
 12868  0268  0140               	movlb	0	; select bank0
 12869  0269  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 12870  026A  3000               	movlw	0
 12871  026B  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 12872  026C  318B  23A9  3181   	fcall	_PWM3_LoadDutyValue
 12873                           
 12874                           ;led.c: 74:         PWM4_LoadDutyValue(120);
 12875  026F  3078               	movlw	120
 12876  0270  0140               	movlb	0	; select bank0
 12877  0271  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 12878  0272  3000               	movlw	0
 12879  0273                     L1:	
 12880  0273  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 12881  0274  318B  23C7         	fcall	_PWM4_LoadDutyValue
 12882                           
 12883                           ;led.c: 39:         currentState++;
 12884  0276  3001               	movlw	1
 12885  0277  07F0               	addwf	_currentState,f
 12886  0278  3000               	movlw	0
 12887  0279  3DF1               	addwfc	_currentState+1,f
 12888                           
 12889                           ;led.c: 40:     } else if(currentState == 2){
 12890  027A  0008               	return
 12891  027B                     l5730:	
 12892  027B  3002               	movlw	2
 12893  027C  0670               	xorwf	_currentState,w
 12894  027D  0471               	iorwf	_currentState+1,w
 12895  027E  1903               	btfsc	3,2
 12896  027F  2A1C               	goto	l5732
 12897  0280  3003               	movlw	3
 12898  0281  0670               	xorwf	_currentState,w
 12899  0282  0471               	iorwf	_currentState+1,w
 12900  0283  1903               	btfsc	3,2
 12901  0284  2A20               	goto	l5738
 12902  0285  3004               	movlw	4
 12903  0286  0670               	xorwf	_currentState,w
 12904  0287  0471               	iorwf	_currentState+1,w
 12905  0288  1903               	btfsc	3,2
 12906  0289  2A2C               	goto	l5744
 12907  028A  3005               	movlw	5
 12908  028B  0670               	xorwf	_currentState,w
 12909  028C  0471               	iorwf	_currentState+1,w
 12910  028D  1903               	btfsc	3,2
 12911  028E  2A30               	goto	l5750
 12912  028F  3006               	movlw	6
 12913  0290  0670               	xorwf	_currentState,w
 12914  0291  0471               	iorwf	_currentState+1,w
 12915  0292  1903               	btfsc	3,2
 12916  0293  2A4C               	goto	l5756
 12917  0294  3008               	movlw	8
 12918  0295  0670               	xorwf	_currentState,w
 12919  0296  0471               	iorwf	_currentState+1,w
 12920  0297  1903               	btfsc	3,2
 12921  0298  2A58               	goto	l5762
 12922                           
 12923                           ;led.c: 77:         PWM1_LoadDutyValue(120);
 12924  0299  3078               	movlw	120
 12925  029A  0140               	movlb	0	; select bank0
 12926  029B  00A0               	movwf	PWM1_LoadDutyValue@dutyValue
 12927  029C  3000               	movlw	0
 12928  029D  00A1               	movwf	PWM1_LoadDutyValue@dutyValue+1
 12929  029E  318B  236D  3181   	fcall	_PWM1_LoadDutyValue
 12930                           
 12931                           ;led.c: 78:         PWM2_LoadDutyValue(120);
 12932  02A1  3078               	movlw	120
 12933  02A2  0140               	movlb	0	; select bank0
 12934  02A3  00A0               	movwf	PWM2_LoadDutyValue@dutyValue
 12935  02A4  3000               	movlw	0
 12936  02A5  00A1               	movwf	PWM2_LoadDutyValue@dutyValue+1
 12937  02A6  318B  238B  3181   	fcall	_PWM2_LoadDutyValue
 12938                           
 12939                           ;led.c: 79:         PWM3_LoadDutyValue(120);
 12940  02A9  3078               	movlw	120
 12941  02AA  0140               	movlb	0	; select bank0
 12942  02AB  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 12943  02AC  3000               	movlw	0
 12944  02AD  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 12945  02AE  318B  23A9  3181   	fcall	_PWM3_LoadDutyValue
 12946                           
 12947                           ;led.c: 80:         PWM4_LoadDutyValue(120);
 12948  02B1  3078               	movlw	120
 12949  02B2  0140               	movlb	0	; select bank0
 12950  02B3  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 12951  02B4  3000               	movlw	0
 12952  02B5  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 12953  02B6  318B  23C7         	fcall	_PWM4_LoadDutyValue
 12954                           
 12955                           ;led.c: 81:         currentState = 1;
 12956  02B8  3001               	movlw	1
 12957  02B9  00F0               	movwf	_currentState
 12958  02BA  3000               	movlw	0
 12959  02BB  00F1               	movwf	_currentState+1
 12960  02BC  0008               	return
 12961  02BD                     __end_of_LED_task:	
 12962                           
 12963                           	psect	text19
 12964  0BC7                     __ptext19:	
 12965 ;; *************** function _PWM4_LoadDutyValue *****************
 12966 ;; Defined at:
 12967 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 12968 ;; Parameters:    Size  Location     Type
 12969 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 12970 ;; Auto vars:     Size  Location     Type
 12971 ;;		None
 12972 ;; Return value:  Size  Location     Type
 12973 ;;                  1    wreg      void 
 12974 ;; Registers used:
 12975 ;;		wreg, status,2
 12976 ;; Tracked objects:
 12977 ;;		On entry : 0/0
 12978 ;;		On exit  : 0/0
 12979 ;;		Unchanged: 0/0
 12980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12985 ;;Total ram usage:        2 bytes
 12986 ;; Hardware stack levels used:    1
 12987 ;; Hardware stack levels required when called:    4
 12988 ;; This function calls:
 12989 ;;		Nothing
 12990 ;; This function is called by:
 12991 ;;		_LED_task
 12992 ;; This function uses a non-reentrant model
 12993 ;;
 12994                           
 12995                           
 12996                           ;psect for function _PWM4_LoadDutyValue
 12997  0BC7                     _PWM4_LoadDutyValue:	
 12998                           
 12999                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 120){
 13000                           
 13001                           ;incstack = 0
 13002                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 13003  0BC7  3000               	movlw	0
 13004  0BC8  0140               	movlb	0	; select bank0
 13005  0BC9  0221               	subwf	PWM4_LoadDutyValue@dutyValue+1,w
 13006  0BCA  3079               	movlw	121
 13007  0BCB  1903               	skipnz
 13008  0BCC  0220               	subwf	PWM4_LoadDutyValue@dutyValue,w
 13009  0BCD  1803               	skipnc
 13010  0BCE  0008               	return
 13011                           
 13012                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 13013  0BCF  30FF               	movlw	255
 13014  0BD0  05A0               	andwf	PWM4_LoadDutyValue@dutyValue,f
 13015  0BD1  3003               	movlw	3
 13016  0BD2  05A1               	andwf	PWM4_LoadDutyValue@dutyValue+1,f
 13017                           
 13018                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 13019  0BD3  0146               	movlb	6	; select bank6
 13020  0BD4  1E1A               	btfss	26,4	;volatile
 13021  0BD5  2BDC               	goto	l5266
 13022                           
 13023                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 13024  0BD6  3006               	movlw	6
 13025  0BD7  0140               	movlb	0	; select bank0
 13026  0BD8                     u3715:	
 13027  0BD8  35A0               	lslf	PWM4_LoadDutyValue@dutyValue,f
 13028  0BD9  0DA1               	rlf	PWM4_LoadDutyValue@dutyValue+1,f
 13029  0BDA  0B89               	decfsz	9,f
 13030  0BDB  2BD8               	goto	u3715
 13031  0BDC                     l5266:	
 13032                           
 13033                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 13034  0BDC  0140               	movlb	0	; select bank0
 13035  0BDD  0821               	movf	PWM4_LoadDutyValue@dutyValue+1,w
 13036  0BDE  0146               	movlb	6	; select bank6
 13037  0BDF  0099               	movwf	25	;volatile
 13038                           
 13039                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 13040  0BE0  0140               	movlb	0	; select bank0
 13041  0BE1  0820               	movf	PWM4_LoadDutyValue@dutyValue,w
 13042  0BE2  0146               	movlb	6	; select bank6
 13043  0BE3  0098               	movwf	24	;volatile
 13044                           
 13045                           ;mcc_generated_files/pwm4.c: 93:         }
 13046  0BE4  0008               	return
 13047  0BE5                     __end_of_PWM4_LoadDutyValue:	
 13048                           
 13049                           	psect	text20
 13050  0BA9                     __ptext20:	
 13051 ;; *************** function _PWM3_LoadDutyValue *****************
 13052 ;; Defined at:
 13053 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;		None
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      void 
 13060 ;; Registers used:
 13061 ;;		wreg, status,2
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/0
 13064 ;;		On exit  : 0/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13070 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13071 ;;Total ram usage:        2 bytes
 13072 ;; Hardware stack levels used:    1
 13073 ;; Hardware stack levels required when called:    4
 13074 ;; This function calls:
 13075 ;;		Nothing
 13076 ;; This function is called by:
 13077 ;;		_LED_task
 13078 ;; This function uses a non-reentrant model
 13079 ;;
 13080                           
 13081                           
 13082                           ;psect for function _PWM3_LoadDutyValue
 13083  0BA9                     _PWM3_LoadDutyValue:	
 13084                           
 13085                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 120){
 13086                           
 13087                           ;incstack = 0
 13088                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 13089  0BA9  3000               	movlw	0
 13090  0BAA  0140               	movlb	0	; select bank0
 13091  0BAB  0221               	subwf	PWM3_LoadDutyValue@dutyValue+1,w
 13092  0BAC  3079               	movlw	121
 13093  0BAD  1903               	skipnz
 13094  0BAE  0220               	subwf	PWM3_LoadDutyValue@dutyValue,w
 13095  0BAF  1803               	skipnc
 13096  0BB0  0008               	return
 13097                           
 13098                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 13099  0BB1  30FF               	movlw	255
 13100  0BB2  05A0               	andwf	PWM3_LoadDutyValue@dutyValue,f
 13101  0BB3  3003               	movlw	3
 13102  0BB4  05A1               	andwf	PWM3_LoadDutyValue@dutyValue+1,f
 13103                           
 13104                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 13105  0BB5  0146               	movlb	6	; select bank6
 13106  0BB6  1E16               	btfss	22,4	;volatile
 13107  0BB7  2BBE               	goto	l5250
 13108                           
 13109                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 13110  0BB8  3006               	movlw	6
 13111  0BB9  0140               	movlb	0	; select bank0
 13112  0BBA                     u3685:	
 13113  0BBA  35A0               	lslf	PWM3_LoadDutyValue@dutyValue,f
 13114  0BBB  0DA1               	rlf	PWM3_LoadDutyValue@dutyValue+1,f
 13115  0BBC  0B89               	decfsz	9,f
 13116  0BBD  2BBA               	goto	u3685
 13117  0BBE                     l5250:	
 13118                           
 13119                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 13120  0BBE  0140               	movlb	0	; select bank0
 13121  0BBF  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 13122  0BC0  0146               	movlb	6	; select bank6
 13123  0BC1  0095               	movwf	21	;volatile
 13124                           
 13125                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 13126  0BC2  0140               	movlb	0	; select bank0
 13127  0BC3  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
 13128  0BC4  0146               	movlb	6	; select bank6
 13129  0BC5  0094               	movwf	20	;volatile
 13130                           
 13131                           ;mcc_generated_files/pwm3.c: 93:         }
 13132  0BC6  0008               	return
 13133  0BC7                     __end_of_PWM3_LoadDutyValue:	
 13134                           
 13135                           	psect	text21
 13136  0B8B                     __ptext21:	
 13137 ;; *************** function _PWM2_LoadDutyValue *****************
 13138 ;; Defined at:
 13139 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 13140 ;; Parameters:    Size  Location     Type
 13141 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;		None
 13144 ;; Return value:  Size  Location     Type
 13145 ;;                  1    wreg      void 
 13146 ;; Registers used:
 13147 ;;		wreg, status,2
 13148 ;; Tracked objects:
 13149 ;;		On entry : 0/0
 13150 ;;		On exit  : 0/0
 13151 ;;		Unchanged: 0/0
 13152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13156 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13157 ;;Total ram usage:        2 bytes
 13158 ;; Hardware stack levels used:    1
 13159 ;; Hardware stack levels required when called:    4
 13160 ;; This function calls:
 13161 ;;		Nothing
 13162 ;; This function is called by:
 13163 ;;		_LED_task
 13164 ;; This function uses a non-reentrant model
 13165 ;;
 13166                           
 13167                           
 13168                           ;psect for function _PWM2_LoadDutyValue
 13169  0B8B                     _PWM2_LoadDutyValue:	
 13170                           
 13171                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 120){
 13172                           
 13173                           ;incstack = 0
 13174                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 13175  0B8B  3000               	movlw	0
 13176  0B8C  0140               	movlb	0	; select bank0
 13177  0B8D  0221               	subwf	PWM2_LoadDutyValue@dutyValue+1,w
 13178  0B8E  3079               	movlw	121
 13179  0B8F  1903               	skipnz
 13180  0B90  0220               	subwf	PWM2_LoadDutyValue@dutyValue,w
 13181  0B91  1803               	skipnc
 13182  0B92  0008               	return
 13183                           
 13184                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 13185  0B93  30FF               	movlw	255
 13186  0B94  05A0               	andwf	PWM2_LoadDutyValue@dutyValue,f
 13187  0B95  3003               	movlw	3
 13188  0B96  05A1               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 13189                           
 13190                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 13191  0B97  0146               	movlb	6	; select bank6
 13192  0B98  1E12               	btfss	18,4	;volatile
 13193  0B99  2BA0               	goto	l5298
 13194                           
 13195                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 13196  0B9A  3006               	movlw	6
 13197  0B9B  0140               	movlb	0	; select bank0
 13198  0B9C                     u3775:	
 13199  0B9C  35A0               	lslf	PWM2_LoadDutyValue@dutyValue,f
 13200  0B9D  0DA1               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 13201  0B9E  0B89               	decfsz	9,f
 13202  0B9F  2B9C               	goto	u3775
 13203  0BA0                     l5298:	
 13204                           
 13205                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 13206  0BA0  0140               	movlb	0	; select bank0
 13207  0BA1  0821               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 13208  0BA2  0146               	movlb	6	; select bank6
 13209  0BA3  0091               	movwf	17	;volatile
 13210                           
 13211                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 13212  0BA4  0140               	movlb	0	; select bank0
 13213  0BA5  0820               	movf	PWM2_LoadDutyValue@dutyValue,w
 13214  0BA6  0146               	movlb	6	; select bank6
 13215  0BA7  0090               	movwf	16	;volatile
 13216                           
 13217                           ;mcc_generated_files/pwm2.c: 93:         }
 13218  0BA8  0008               	return
 13219  0BA9                     __end_of_PWM2_LoadDutyValue:	
 13220                           
 13221                           	psect	text22
 13222  0B6D                     __ptext22:	
 13223 ;; *************** function _PWM1_LoadDutyValue *****************
 13224 ;; Defined at:
 13225 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 13226 ;; Parameters:    Size  Location     Type
 13227 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;		None
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  1    wreg      void 
 13232 ;; Registers used:
 13233 ;;		wreg, status,2
 13234 ;; Tracked objects:
 13235 ;;		On entry : 0/0
 13236 ;;		On exit  : 0/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13239 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13243 ;;Total ram usage:        2 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; Hardware stack levels required when called:    4
 13246 ;; This function calls:
 13247 ;;		Nothing
 13248 ;; This function is called by:
 13249 ;;		_LED_task
 13250 ;; This function uses a non-reentrant model
 13251 ;;
 13252                           
 13253                           
 13254                           ;psect for function _PWM1_LoadDutyValue
 13255  0B6D                     _PWM1_LoadDutyValue:	
 13256                           
 13257                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 120){
 13258                           
 13259                           ;incstack = 0
 13260                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 13261  0B6D  3000               	movlw	0
 13262  0B6E  0140               	movlb	0	; select bank0
 13263  0B6F  0221               	subwf	PWM1_LoadDutyValue@dutyValue+1,w
 13264  0B70  3079               	movlw	121
 13265  0B71  1903               	skipnz
 13266  0B72  0220               	subwf	PWM1_LoadDutyValue@dutyValue,w
 13267  0B73  1803               	skipnc
 13268  0B74  0008               	return
 13269                           
 13270                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 13271  0B75  30FF               	movlw	255
 13272  0B76  05A0               	andwf	PWM1_LoadDutyValue@dutyValue,f
 13273  0B77  3003               	movlw	3
 13274  0B78  05A1               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 13275                           
 13276                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 13277  0B79  0146               	movlb	6	; select bank6
 13278  0B7A  1E0E               	btfss	14,4	;volatile
 13279  0B7B  2B82               	goto	l5282
 13280                           
 13281                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 13282  0B7C  3006               	movlw	6
 13283  0B7D  0140               	movlb	0	; select bank0
 13284  0B7E                     u3745:	
 13285  0B7E  35A0               	lslf	PWM1_LoadDutyValue@dutyValue,f
 13286  0B7F  0DA1               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 13287  0B80  0B89               	decfsz	9,f
 13288  0B81  2B7E               	goto	u3745
 13289  0B82                     l5282:	
 13290                           
 13291                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 13292  0B82  0140               	movlb	0	; select bank0
 13293  0B83  0821               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 13294  0B84  0146               	movlb	6	; select bank6
 13295  0B85  008D               	movwf	13	;volatile
 13296                           
 13297                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 13298  0B86  0140               	movlb	0	; select bank0
 13299  0B87  0820               	movf	PWM1_LoadDutyValue@dutyValue,w
 13300  0B88  0146               	movlb	6	; select bank6
 13301  0B89  008C               	movwf	12	;volatile
 13302                           
 13303                           ;mcc_generated_files/pwm1.c: 93:         }
 13304  0B8A  0008               	return
 13305  0B8B                     __end_of_PWM1_LoadDutyValue:	
 13306                           
 13307                           	psect	text23
 13308  0938                     __ptext23:	
 13309 ;; *************** function _BEAT_detected *****************
 13310 ;; Defined at:
 13311 ;;		line 49 in file "beat.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;		None
 13314 ;; Auto vars:     Size  Location     Type
 13315 ;;		None
 13316 ;; Return value:  Size  Location     Type
 13317 ;;                  1    wreg      _Bool 
 13318 ;; Registers used:
 13319 ;;		wreg, status,2, status,0
 13320 ;; Tracked objects:
 13321 ;;		On entry : 0/0
 13322 ;;		On exit  : 0/0
 13323 ;;		Unchanged: 0/0
 13324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13329 ;;Total ram usage:        0 bytes
 13330 ;; Hardware stack levels used:    1
 13331 ;; Hardware stack levels required when called:    4
 13332 ;; This function calls:
 13333 ;;		Nothing
 13334 ;; This function is called by:
 13335 ;;		_LED_task
 13336 ;; This function uses a non-reentrant model
 13337 ;;
 13338                           
 13339                           
 13340                           ;psect for function _BEAT_detected
 13341  0938                     _BEAT_detected:	
 13342                           
 13343                           ;beat.c: 50:     if (detected) {
 13344                           
 13345                           ;incstack = 0
 13346                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 13347  0938  0141               	movlb	1	; select bank1
 13348  0939  083D               	movf	_detected^(0+128),w
 13349  093A  1903               	btfsc	3,2
 13350  093B  293F               	goto	l5472
 13351                           
 13352                           ;beat.c: 51:         detected = 0;
 13353  093C  01BD               	clrf	_detected^(0+128)
 13354                           
 13355                           ;beat.c: 52:         return 1;
 13356  093D  3001               	movlw	1
 13357  093E  0008               	return
 13358  093F                     l5472:	
 13359                           
 13360                           ;beat.c: 55:     return 0;
 13361  093F  3000               	movlw	0
 13362  0940  0008               	return
 13363  0941                     __end_of_BEAT_detected:	
 13364                           
 13365                           	psect	text24
 13366  0A2B                     __ptext24:	
 13367 ;; *************** function _DMX_init *****************
 13368 ;; Defined at:
 13369 ;;		line 21 in file "dmx.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;		None
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;		None
 13374 ;; Return value:  Size  Location     Type
 13375 ;;                  1    wreg      void 
 13376 ;; Registers used:
 13377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13378 ;; Tracked objects:
 13379 ;;		On entry : 0/0
 13380 ;;		On exit  : 0/0
 13381 ;;		Unchanged: 0/0
 13382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13387 ;;Total ram usage:        0 bytes
 13388 ;; Hardware stack levels used:    1
 13389 ;; Hardware stack levels required when called:    9
 13390 ;; This function calls:
 13391 ;;		_EUSART1_SetRxInterruptHandler
 13392 ;;		_TM1650_fastPrintNum
 13393 ;; This function is called by:
 13394 ;;		_main
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           
 13399                           ;psect for function _DMX_init
 13400  0A2B                     _DMX_init:	
 13401                           
 13402                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 13403                           
 13404                           ;incstack = 0
 13405                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13406  0A2B  3043               	movlw	low _DMX_interrupt
 13407  0A2C  0140               	movlb	0	; select bank0
 13408  0A2D  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13409  0A2E  300E               	movlw	high _DMX_interrupt
 13410  0A2F  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13411  0A30  3189  212F  318A   	fcall	_EUSART1_SetRxInterruptHandler
 13412                           
 13413                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 13414  0A33  0141               	movlb	1	; select bank1
 13415  0A34  086C               	movf	(_address+1)^(0+128),w
 13416  0A35  0140               	movlb	0	; select bank0
 13417  0A36  00B5               	movwf	TM1650_fastPrintNum@num+1
 13418  0A37  0141               	movlb	1	; select bank1
 13419  0A38  086B               	movf	_address^(0+128),w
 13420  0A39  0140               	movlb	0	; select bank0
 13421  0A3A  00B4               	movwf	TM1650_fastPrintNum@num
 13422  0A3B  3185  2553         	fcall	_TM1650_fastPrintNum
 13423  0A3D  0008               	return
 13424  0A3E                     __end_of_DMX_init:	
 13425                           
 13426                           	psect	text25
 13427  092F                     __ptext25:	
 13428 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 13429 ;; Defined at:
 13430 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13433 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;		None
 13436 ;; Return value:  Size  Location     Type
 13437 ;;                  1    wreg      void 
 13438 ;; Registers used:
 13439 ;;		wreg
 13440 ;; Tracked objects:
 13441 ;;		On entry : 0/0
 13442 ;;		On exit  : 0/0
 13443 ;;		Unchanged: 0/0
 13444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13449 ;;Total ram usage:        2 bytes
 13450 ;; Hardware stack levels used:    1
 13451 ;; Hardware stack levels required when called:    4
 13452 ;; This function calls:
 13453 ;;		Nothing
 13454 ;; This function is called by:
 13455 ;;		_EUSART1_Initialize
 13456 ;;		_DMX_init
 13457 ;; This function uses a non-reentrant model
 13458 ;;
 13459                           
 13460                           
 13461                           ;psect for function _EUSART1_SetRxInterruptHandler
 13462  092F                     _EUSART1_SetRxInterruptHandler:	
 13463                           
 13464                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13465                           
 13466                           ;incstack = 0
 13467                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 13468  092F  0140               	movlb	0	; select bank0
 13469  0930  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 13470  0931  0142               	movlb	2	; select bank2
 13471  0932  00EB               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 13472  0933  0140               	movlb	0	; select bank0
 13473  0934  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 13474  0935  0142               	movlb	2	; select bank2
 13475  0936  00EA               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 13476  0937  0008               	return
 13477  0938                     __end_of_EUSART1_SetRxInterruptHandler:	
 13478                           
 13479                           	psect	text26
 13480  02BD                     __ptext26:	
 13481 ;; *************** function _CONTROLLER_task *****************
 13482 ;; Defined at:
 13483 ;;		line 20 in file "controller.c"
 13484 ;; Parameters:    Size  Location     Type
 13485 ;;		None
 13486 ;; Auto vars:     Size  Location     Type
 13487 ;;  isActive        1   79[BANK0 ] _Bool 
 13488 ;; Return value:  Size  Location     Type
 13489 ;;                  1    wreg      void 
 13490 ;; Registers used:
 13491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13492 ;; Tracked objects:
 13493 ;;		On entry : 0/0
 13494 ;;		On exit  : 0/0
 13495 ;;		Unchanged: 0/0
 13496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13498 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13499 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13500 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13501 ;;Total ram usage:        3 bytes
 13502 ;; Hardware stack levels used:    1
 13503 ;; Hardware stack levels required when called:   18
 13504 ;; This function calls:
 13505 ;;		_BUTTONS_isClicked
 13506 ;;		_CLOCK_getTime
 13507 ;;		_CONTROL_DMX
 13508 ;;		_TM1650_enable
 13509 ;;		_TM1650_fastPrintNum
 13510 ;;		_menuSelection
 13511 ;;		_printf
 13512 ;; This function is called by:
 13513 ;;		_main
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           
 13518                           ;psect for function _CONTROLLER_task
 13519  02BD                     _CONTROLLER_task:	
 13520                           
 13521                           ;controller.c: 22:     _Bool isActive = 1;
 13522                           
 13523                           ;incstack = 0
 13524 ;; hardware stack exceeded
 13525                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13526  02BD  0140               	movlb	0	; select bank0
 13527  02BE  01EF               	clrf	CONTROLLER_task@isActive
 13528  02BF  0AEF               	incf	CONTROLLER_task@isActive,f
 13529                           
 13530                           ;controller.c: 23:     upState = BUTTONS_isClicked(up);
 13531  02C0  0141               	movlb	1	; select bank1
 13532  02C1  0848               	movf	_up^(0+128),w
 13533  02C2  318A  223E  3182   	fcall	_BUTTONS_isClicked
 13534  02C5  0141               	movlb	1	; select bank1
 13535  02C6  00DF               	movwf	??_CONTROLLER_task^(0+128)
 13536  02C7  085F               	movf	??_CONTROLLER_task^(0+128),w
 13537  02C8  00C3               	movwf	_upState^(0+128)
 13538                           
 13539                           ;controller.c: 24:     downState = BUTTONS_isClicked(down);
 13540  02C9  0847               	movf	_down^(0+128),w
 13541  02CA  318A  223E  3182   	fcall	_BUTTONS_isClicked
 13542  02CD  0141               	movlb	1	; select bank1
 13543  02CE  00DF               	movwf	??_CONTROLLER_task^(0+128)
 13544  02CF  085F               	movf	??_CONTROLLER_task^(0+128),w
 13545  02D0  00C2               	movwf	_downState^(0+128)
 13546                           
 13547                           ;controller.c: 25:     menuState = BUTTONS_isClicked(menu);
 13548  02D1  0849               	movf	_menu^(0+128),w
 13549  02D2  318A  223E  3182   	fcall	_BUTTONS_isClicked
 13550  02D5  0141               	movlb	1	; select bank1
 13551  02D6  00DF               	movwf	??_CONTROLLER_task^(0+128)
 13552  02D7  085F               	movf	??_CONTROLLER_task^(0+128),w
 13553  02D8  00C1               	movwf	_menuState^(0+128)
 13554                           
 13555                           ;controller.c: 26:     enterState = BUTTONS_isClicked(enter);
 13556  02D9  0846               	movf	_enter^(0+128),w
 13557  02DA  318A  223E  3182   	fcall	_BUTTONS_isClicked
 13558  02DD  0141               	movlb	1	; select bank1
 13559  02DE  00DF               	movwf	??_CONTROLLER_task^(0+128)
 13560  02DF  085F               	movf	??_CONTROLLER_task^(0+128),w
 13561  02E0  00C0               	movwf	_enterState^(0+128)
 13562                           
 13563                           ;controller.c: 28:     if (startup == 1 && CLOCK_getTime() - startTime < 5000) {
 13564  02E1  036F               	decf	_startup^(0+128),w
 13565  02E2  1D03               	btfss	3,2
 13566  02E3  2B08               	goto	l5594
 13567  02E4  3189  211D  3182   	fcall	_CLOCK_getTime
 13568  02E7  0141               	movlb	1	; select bank1
 13569  02E8  0839               	movf	_startTime^(0+128),w
 13570  02E9  0140               	movlb	0	; select bank0
 13571  02EA  0220               	subwf	?_CLOCK_getTime,w
 13572  02EB  0141               	movlb	1	; select bank1
 13573  02EC  00DF               	movwf	??_CONTROLLER_task^(0+128)
 13574  02ED  083A               	movf	(_startTime+1)^(0+128),w
 13575  02EE  0140               	movlb	0	; select bank0
 13576  02EF  3B21               	subwfb	?_CLOCK_getTime+1,w
 13577  02F0  0141               	movlb	1	; select bank1
 13578  02F1  00E0               	movwf	(??_CONTROLLER_task+1)^(0+128)
 13579  02F2  3013               	movlw	19
 13580  02F3  0260               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 13581  02F4  3088               	movlw	136
 13582  02F5  1903               	skipnz
 13583  02F6  025F               	subwf	??_CONTROLLER_task^(0+128),w
 13584  02F7  1803               	skipnc
 13585  02F8  2B08               	goto	l5594
 13586                           
 13587                           ;controller.c: 29:         menuSelection();
 13588  02F9  318F  27A4  3182   	fcall	_menuSelection
 13589                           
 13590                           ;controller.c: 30:         if (upState || downState || menuState) {
 13591  02FC  0141               	movlb	1	; select bank1
 13592  02FD  0843               	movf	_upState^(0+128),w
 13593  02FE  1D03               	btfss	3,2
 13594  02FF  2B05               	goto	l1001
 13595  0300  0842               	movf	_downState^(0+128),w
 13596  0301  1903               	btfsc	3,2
 13597  0302  0841               	movf	_menuState^(0+128),w
 13598  0303  1903               	btfsc	3,2
 13599  0304  0008               	return
 13600  0305                     l1001:	
 13601                           
 13602                           ;controller.c: 31:             menuPressed = 1;
 13603  0305  01C5               	clrf	_menuPressed^(0+128)
 13604  0306  0AC5               	incf	_menuPressed^(0+128),f
 13605  0307  0008               	return
 13606  0308                     l5594:	
 13607                           
 13608                           ;controller.c: 37:         if (menuPressed == 0 && startup == 1)
 13609  0308  0845               	movf	_menuPressed^(0+128),w
 13610  0309  1D03               	btfss	3,2
 13611  030A  2B12               	goto	l5600
 13612  030B  036F               	decf	_startup^(0+128),w
 13613  030C  1D03               	btfss	3,2
 13614  030D  2B12               	goto	l5600
 13615                           
 13616                           ;controller.c: 38:             currentSelection = 3;
 13617  030E  3003               	movlw	3
 13618  030F  00DF               	movwf	??_CONTROLLER_task^(0+128)
 13619  0310  085F               	movf	??_CONTROLLER_task^(0+128),w
 13620  0311  00ED               	movwf	_currentSelection^(0+128)
 13621  0312                     l5600:	
 13622                           
 13623                           ;controller.c: 39:         startup = 0;
 13624  0312  01EF               	clrf	_startup^(0+128)
 13625                           
 13626                           ;controller.c: 42:     if ((menuState || menuPressed) && !enterPressed) {
 13627  0313  0841               	movf	_menuState^(0+128),w
 13628  0314  1903               	btfsc	3,2
 13629  0315  0845               	movf	_menuPressed^(0+128),w
 13630  0316  1903               	btfsc	3,2
 13631  0317  2B21               	goto	l5612
 13632  0318  0844               	movf	_enterPressed^(0+128),w
 13633  0319  1D03               	btfss	3,2
 13634  031A  2B21               	goto	l5612
 13635                           
 13636                           ;controller.c: 43:         menuPressed = 1;
 13637  031B  01C5               	clrf	_menuPressed^(0+128)
 13638  031C  0AC5               	incf	_menuPressed^(0+128),f
 13639                           
 13640                           ;controller.c: 44:         menuSelection();
 13641  031D  318F  27A4  3182   	fcall	_menuSelection
 13642                           
 13643                           ;controller.c: 45:     } else if (currentSelection == 3) {
 13644  0320  2B3B               	goto	l5626
 13645  0321                     l5612:	
 13646  0321  3003               	movlw	3
 13647  0322  066D               	xorwf	_currentSelection^(0+128),w
 13648  0323  1D03               	btfss	3,2
 13649  0324  2B2E               	goto	l5616
 13650                           
 13651                           ;controller.c: 46:         isActive = CONTROL_DMX();
 13652  0325  3186  26BE  3182   	fcall	_CONTROL_DMX
 13653  0328  0141               	movlb	1	; select bank1
 13654  0329  00DF               	movwf	??_CONTROLLER_task^(0+128)
 13655  032A  085F               	movf	??_CONTROLLER_task^(0+128),w
 13656  032B  0140               	movlb	0	; select bank0
 13657  032C  00EF               	movwf	CONTROLLER_task@isActive
 13658                           
 13659                           ;controller.c: 47:     } else if (currentSelection == 1) {
 13660  032D  2B3B               	goto	l5626
 13661  032E                     l5616:	
 13662  032E  036D               	decf	_currentSelection^(0+128),w
 13663  032F  1D03               	btfss	3,2
 13664  0330  2B35               	goto	l5620
 13665  0331                     l5618:	
 13666                           
 13667                           ;controller.c: 48:         isActive = 1;
 13668  0331  0140               	movlb	0	; select bank0
 13669  0332  01EF               	clrf	CONTROLLER_task@isActive
 13670  0333  0AEF               	incf	CONTROLLER_task@isActive,f
 13671                           
 13672                           ;controller.c: 49:     } else if (currentSelection == 2) {
 13673  0334  2B3B               	goto	l5626
 13674  0335                     l5620:	
 13675  0335  3002               	movlw	2
 13676  0336  066D               	xorwf	_currentSelection^(0+128),w
 13677  0337  1903               	btfsc	3,2
 13678  0338  2B31               	goto	l5618
 13679                           
 13680                           ;controller.c: 52:         isActive = 0;
 13681  0339  0140               	movlb	0	; select bank0
 13682  033A  01EF               	clrf	CONTROLLER_task@isActive
 13683  033B                     l5626:	
 13684                           
 13685                           ;controller.c: 55:     if (isActive) {
 13686  033B  0140               	movlb	0	; select bank0
 13687  033C  086F               	movf	CONTROLLER_task@isActive,w
 13688  033D  1903               	btfsc	3,2
 13689  033E  2B4A               	goto	l5630
 13690                           
 13691                           ;controller.c: 56:         lastActiveTime = CLOCK_getTime();
 13692  033F  3189  211D  3182   	fcall	_CLOCK_getTime
 13693  0342  0140               	movlb	0	; select bank0
 13694  0343  0821               	movf	?_CLOCK_getTime+1,w
 13695  0344  0141               	movlb	1	; select bank1
 13696  0345  00B2               	movwf	(_lastActiveTime+1)^(0+128)
 13697  0346  0140               	movlb	0	; select bank0
 13698  0347  0820               	movf	?_CLOCK_getTime,w
 13699  0348  0141               	movlb	1	; select bank1
 13700  0349  00B1               	movwf	_lastActiveTime^(0+128)
 13701  034A                     l5630:	
 13702                           
 13703                           ;controller.c: 59:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 13704  034A  3189  211D  3182   	fcall	_CLOCK_getTime
 13705  034D  0141               	movlb	1	; select bank1
 13706  034E  0831               	movf	_lastActiveTime^(0+128),w
 13707  034F  0140               	movlb	0	; select bank0
 13708  0350  0220               	subwf	?_CLOCK_getTime,w
 13709  0351  0141               	movlb	1	; select bank1
 13710  0352  00DF               	movwf	??_CONTROLLER_task^(0+128)
 13711  0353  0832               	movf	(_lastActiveTime+1)^(0+128),w
 13712  0354  0140               	movlb	0	; select bank0
 13713  0355  3B21               	subwfb	?_CLOCK_getTime+1,w
 13714  0356  0141               	movlb	1	; select bank1
 13715  0357  00E0               	movwf	(??_CONTROLLER_task+1)^(0+128)
 13716  0358  3013               	movlw	19
 13717  0359  0260               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 13718  035A  3088               	movlw	136
 13719  035B  1903               	skipnz
 13720  035C  025F               	subwf	??_CONTROLLER_task^(0+128),w
 13721  035D  1C03               	skipc
 13722  035E  2B71               	goto	l5636
 13723                           
 13724                           ;controller.c: 60:         TM1650_enable(0);
 13725  035F  3000               	movlw	0
 13726  0360  318A  227A  3182   	fcall	_TM1650_enable
 13727                           
 13728                           ;controller.c: 61:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 13729  0363  3189  211D  3182   	fcall	_CLOCK_getTime
 13730  0366  0140               	movlb	0	; select bank0
 13731  0367  0820               	movf	?_CLOCK_getTime,w
 13732  0368  3E77               	addlw	119
 13733  0369  0141               	movlb	1	; select bank1
 13734  036A  00B1               	movwf	_lastActiveTime^(0+128)
 13735  036B  30EC               	movlw	236
 13736  036C  0140               	movlb	0	; select bank0
 13737  036D  3D21               	addwfc	?_CLOCK_getTime+1,w
 13738  036E  0141               	movlb	1	; select bank1
 13739  036F  00B2               	movwf	(_lastActiveTime+1)^(0+128)
 13740                           
 13741                           ;controller.c: 62:     } else {
 13742  0370  2B75               	goto	l5638
 13743  0371                     l5636:	
 13744                           
 13745                           ;controller.c: 63:         TM1650_enable(1);
 13746  0371  3001               	movlw	1
 13747  0372  318A  227A  3182   	fcall	_TM1650_enable
 13748  0375                     l5638:	
 13749                           
 13750                           ;controller.c: 66:     if (currentSelection == 3 && !menuPressed) {
 13751  0375  3003               	movlw	3
 13752  0376  0141               	movlb	1	; select bank1
 13753  0377  066D               	xorwf	_currentSelection^(0+128),w
 13754  0378  1D03               	btfss	3,2
 13755  0379  2B94               	goto	l5646
 13756  037A  0845               	movf	_menuPressed^(0+128),w
 13757  037B  1D03               	btfss	3,2
 13758  037C  2B94               	goto	l5646
 13759                           
 13760                           ;controller.c: 67:         TM1650_fastPrintNum(address);
 13761  037D  086C               	movf	(_address+1)^(0+128),w
 13762  037E  0140               	movlb	0	; select bank0
 13763  037F  00B5               	movwf	TM1650_fastPrintNum@num+1
 13764  0380  0141               	movlb	1	; select bank1
 13765  0381  086B               	movf	_address^(0+128),w
 13766  0382  0140               	movlb	0	; select bank0
 13767  0383  00B4               	movwf	TM1650_fastPrintNum@num
 13768  0384  3185  2553  3182   	fcall	_TM1650_fastPrintNum
 13769  0387  2B91               	goto	l5644
 13770  0388                     l5648:	
 13771  0388  0845               	movf	_menuPressed^(0+128),w
 13772  0389  1D03               	btfss	3,2
 13773  038A  2B97               	goto	l5654
 13774                           
 13775                           ;controller.c: 70:         printf("SEL1\r");
 13776  038B  305B               	movlw	low (STR_1| (0+32768))
 13777  038C  00D5               	movwf	printf@fmt^(0+128)
 13778  038D  3090               	movlw	high (STR_1| (0+32768))
 13779  038E                     L11:	
 13780  038E  00D6               	movwf	(printf@fmt^(0+128)+1)
 13781  038F  318A  228F         	fcall	_printf
 13782  0391                     l5644:	
 13783                           
 13784                           ;controller.c: 68:         enterPressed = 0;
 13785  0391  0141               	movlb	1	; select bank1
 13786  0392  01C4               	clrf	_enterPressed^(0+128)
 13787                           
 13788                           ;controller.c: 69:     } else if (currentSelection == 1 && !menuPressed) {
 13789  0393  0008               	return
 13790  0394                     l5646:	
 13791  0394  036D               	decf	_currentSelection^(0+128),w
 13792  0395  1903               	btfsc	3,2
 13793  0396  2B88               	goto	l5648
 13794  0397                     l5654:	
 13795  0397  3002               	movlw	2
 13796  0398  066D               	xorwf	_currentSelection^(0+128),w
 13797  0399  1D03               	btfss	3,2
 13798  039A  0008               	return
 13799  039B  0845               	movf	_menuPressed^(0+128),w
 13800  039C  1D03               	btfss	3,2
 13801  039D  0008               	return
 13802                           
 13803                           ;controller.c: 73:         printf("B-1 \r");
 13804  039E  304F               	movlw	low (STR_2| (0+32768))
 13805  039F  00D5               	movwf	printf@fmt^(0+128)
 13806  03A0  3090               	movlw	high (STR_2| (0+32768))
 13807  03A1  2B8E               	goto	L11
 13808  03A2                     __end_of_CONTROLLER_task:	
 13809                           
 13810                           	psect	text27
 13811  0FA4                     __ptext27:	
 13812 ;; *************** function _menuSelection *****************
 13813 ;; Defined at:
 13814 ;;		line 79 in file "controller.c"
 13815 ;; Parameters:    Size  Location     Type
 13816 ;;		None
 13817 ;; Auto vars:     Size  Location     Type
 13818 ;;		None
 13819 ;; Return value:  Size  Location     Type
 13820 ;;                  1    wreg      void 
 13821 ;; Registers used:
 13822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13823 ;; Tracked objects:
 13824 ;;		On entry : 0/0
 13825 ;;		On exit  : 0/0
 13826 ;;		Unchanged: 0/0
 13827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13830 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13831 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13832 ;;Total ram usage:        2 bytes
 13833 ;; Hardware stack levels used:    1
 13834 ;; Hardware stack levels required when called:   17
 13835 ;; This function calls:
 13836 ;;		_printf
 13837 ;; This function is called by:
 13838 ;;		_CONTROLLER_task
 13839 ;; This function uses a non-reentrant model
 13840 ;;
 13841                           
 13842                           
 13843                           ;psect for function _menuSelection
 13844  0FA4                     _menuSelection:	
 13845                           
 13846                           ;controller.c: 81:     if(upState){
 13847                           
 13848                           ;incstack = 0
 13849 ;; hardware stack exceeded
 13850                           ; Regs used in _menuSelection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13851  0FA4  0141               	movlb	1	; select bank1
 13852  0FA5  0843               	movf	_upState^(0+128),w
 13853  0FA6  1903               	btfsc	3,2
 13854  0FA7  2FBA               	goto	l5338
 13855                           
 13856                           ;controller.c: 82:         if(menuSelected < 3){
 13857  0FA8  3003               	movlw	3
 13858  0FA9  026E               	subwf	_menuSelected^(0+128),w
 13859  0FAA  1803               	skipnc
 13860  0FAB  2FB3               	goto	l5336
 13861                           
 13862                           ;controller.c: 83:             menuSelected++;
 13863  0FAC  3001               	movlw	1
 13864  0FAD  0140               	movlb	0	; select bank0
 13865  0FAE  00ED               	movwf	??_menuSelection
 13866  0FAF  086D               	movf	??_menuSelection,w
 13867  0FB0  0141               	movlb	1	; select bank1
 13868  0FB1  07EE               	addwf	_menuSelected^(0+128),f
 13869                           
 13870                           ;controller.c: 84:         } else {
 13871  0FB2  2FC6               	goto	l5344
 13872  0FB3                     l5336:	
 13873                           
 13874                           ;controller.c: 85:             menuSelected = 2;
 13875  0FB3  3002               	movlw	2
 13876  0FB4  0140               	movlb	0	; select bank0
 13877  0FB5  00ED               	movwf	??_menuSelection
 13878  0FB6  086D               	movf	??_menuSelection,w
 13879  0FB7  0141               	movlb	1	; select bank1
 13880  0FB8  00EE               	movwf	_menuSelected^(0+128)
 13881  0FB9  2FC6               	goto	l5344
 13882  0FBA                     l5338:	
 13883  0FBA  0842               	movf	_downState^(0+128),w
 13884  0FBB  1903               	btfsc	3,2
 13885  0FBC  2FC6               	goto	l5344
 13886                           
 13887                           ;controller.c: 88:         if(menuSelected > 1){
 13888  0FBD  3002               	movlw	2
 13889  0FBE  026E               	subwf	_menuSelected^(0+128),w
 13890  0FBF  1C03               	skipc
 13891  0FC0  2FC4               	goto	l1030
 13892                           
 13893                           ;controller.c: 89:             menuSelected--;
 13894  0FC1  3001               	movlw	1
 13895  0FC2  02EE               	subwf	_menuSelected^(0+128),f
 13896                           
 13897                           ;controller.c: 90:         } else {
 13898  0FC3  2FC6               	goto	l5344
 13899  0FC4                     l1030:	
 13900                           
 13901                           ;controller.c: 91:             menuSelected = 1;
 13902  0FC4  01EE               	clrf	_menuSelected^(0+128)
 13903  0FC5  0AEE               	incf	_menuSelected^(0+128),f
 13904  0FC6                     l5344:	
 13905                           
 13906                           ;controller.c: 95:     if (enterState) {
 13907  0FC6  0840               	movf	_enterState^(0+128),w
 13908  0FC7  1903               	btfsc	3,2
 13909  0FC8  2FEB               	goto	l5362
 13910                           
 13911                           ;controller.c: 96:         currentSelection = menuSelected;
 13912  0FC9  086E               	movf	_menuSelected^(0+128),w
 13913  0FCA  0140               	movlb	0	; select bank0
 13914  0FCB  00ED               	movwf	??_menuSelection
 13915  0FCC  086D               	movf	??_menuSelection,w
 13916  0FCD  0141               	movlb	1	; select bank1
 13917  0FCE  00ED               	movwf	_currentSelection^(0+128)
 13918                           
 13919                           ;controller.c: 97:         menuPressed = 0;
 13920  0FCF  01C5               	clrf	_menuPressed^(0+128)
 13921                           
 13922                           ;controller.c: 98:         enterPressed = 1;
 13923  0FD0  01C4               	clrf	_enterPressed^(0+128)
 13924  0FD1  0AC4               	incf	_enterPressed^(0+128),f
 13925  0FD2  0008               	return
 13926  0FD3                     l5354:	
 13927                           
 13928                           ;controller.c: 104:             printf("ANI \r");
 13929  0FD3  3055               	movlw	low (STR_3| (0+32768))
 13930  0FD4  0141               	movlb	1	; select bank1
 13931  0FD5  00D5               	movwf	printf@fmt^(0+128)
 13932  0FD6  3090               	movlw	high (STR_3| (0+32768))
 13933  0FD7  00D6               	movwf	(printf@fmt^(0+128)+1)
 13934  0FD8  318A  228F         	fcall	_printf
 13935                           
 13936                           ;controller.c: 105:             break;
 13937  0FDA  0008               	return
 13938  0FDB                     l5356:	
 13939                           
 13940                           ;controller.c: 108:             printf("BEAT\r");
 13941  0FDB  3061               	movlw	low (STR_4| (0+32768))
 13942  0FDC  0141               	movlb	1	; select bank1
 13943  0FDD  00D5               	movwf	printf@fmt^(0+128)
 13944  0FDE  3090               	movlw	high (STR_4| (0+32768))
 13945  0FDF  00D6               	movwf	(printf@fmt^(0+128)+1)
 13946  0FE0  318A  228F         	fcall	_printf
 13947                           
 13948                           ;controller.c: 109:             break;
 13949  0FE2  0008               	return
 13950  0FE3                     l5358:	
 13951                           
 13952                           ;controller.c: 112:             printf("PC  \r");
 13953  0FE3  3049               	movlw	low (STR_5| (0+32768))
 13954  0FE4  0141               	movlb	1	; select bank1
 13955  0FE5  00D5               	movwf	printf@fmt^(0+128)
 13956  0FE6  3090               	movlw	high (STR_5| (0+32768))
 13957  0FE7  00D6               	movwf	(printf@fmt^(0+128)+1)
 13958  0FE8  318A  228F         	fcall	_printf
 13959                           
 13960                           ;controller.c: 113:             break;
 13961  0FEA  0008               	return
 13962  0FEB                     l5362:	
 13963  0FEB  086E               	movf	_menuSelected^(0+128),w
 13964  0FEC  0140               	movlb	0	; select bank0
 13965  0FED  00ED               	movwf	??_menuSelection
 13966  0FEE  01EE               	clrf	??_menuSelection+1
 13967                           
 13968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13969                           ; Switch size 1, requested type "simple"
 13970                           ; Number of cases is 1, Range of values is 0 to 0
 13971                           ; switch strategies available:
 13972                           ; Name         Instructions Cycles
 13973                           ; simple_byte            4     3 (average)
 13974                           ; direct_byte            8     6 (fixed)
 13975                           ; jumptable            260     6 (fixed)
 13976                           ;	Chosen strategy is simple_byte
 13977  0FEF  086E               	movf	??_menuSelection+1,w
 13978  0FF0  3A00               	xorlw	0	; case 0
 13979  0FF1  1903               	skipnz
 13980  0FF2  2FF4               	goto	l5900
 13981  0FF3  2FFF               	goto	l1033
 13982  0FF4                     l5900:	
 13983                           
 13984                           ; Switch size 1, requested type "simple"
 13985                           ; Number of cases is 3, Range of values is 1 to 3
 13986                           ; switch strategies available:
 13987                           ; Name         Instructions Cycles
 13988                           ; simple_byte           10     6 (average)
 13989                           ; direct_byte           15     9 (fixed)
 13990                           ; jumptable            263     9 (fixed)
 13991                           ;	Chosen strategy is simple_byte
 13992  0FF4  086D               	movf	??_menuSelection,w
 13993  0FF5  3A01               	xorlw	1	; case 1
 13994  0FF6  1903               	skipnz
 13995  0FF7  2FD3               	goto	l5354
 13996  0FF8  3A03               	xorlw	3	; case 2
 13997  0FF9  1903               	skipnz
 13998  0FFA  2FDB               	goto	l5356
 13999  0FFB  3A01               	xorlw	1	; case 3
 14000  0FFC  1903               	skipnz
 14001  0FFD  2FE3               	goto	l5358
 14002  0FFE  2FFF               	goto	l1033
 14003  0FFF                     l1033:	
 14004  0FFF  0008               	return
 14005  1000                     __end_of_menuSelection:	
 14006                           
 14007                           	psect	text28
 14008  0A8F                     __ptext28:	
 14009 ;; *************** function _printf *****************
 14010 ;; Defined at:
 14011 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 14012 ;; Parameters:    Size  Location     Type
 14013 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 14014 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 14015 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 14016 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 14017 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 14018 ;; Auto vars:     Size  Location     Type
 14019 ;;  ret             2    0        int 
 14020 ;;  ap              1   76[BANK0 ] PTR void [1]
 14021 ;;		 -> ?_printf(2), 
 14022 ;; Return value:  Size  Location     Type
 14023 ;;                  2    0[BANK1 ] int 
 14024 ;; Registers used:
 14025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14026 ;; Tracked objects:
 14027 ;;		On entry : 0/0
 14028 ;;		On exit  : 0/0
 14029 ;;		Unchanged: 0/0
 14030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14031 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14032 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14033 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14034 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14035 ;;Total ram usage:       14 bytes
 14036 ;; Hardware stack levels used:    1
 14037 ;; Hardware stack levels required when called:   16
 14038 ;; This function calls:
 14039 ;;		_vfprintf
 14040 ;; This function is called by:
 14041 ;;		_CONTROLLER_task
 14042 ;;		_menuSelection
 14043 ;;		_TM1650_init
 14044 ;;		_TM1650_scrollPrint
 14045 ;; This function uses a non-reentrant model
 14046 ;;
 14047                           
 14048                           
 14049                           ;psect for function _printf
 14050  0A8F                     _printf:	
 14051                           
 14052                           ;incstack = 0
 14053 ;; hardware stack exceeded
 14054                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14055  0A8F  30D7               	movlw	(low ((?_printf| 0+2)))& (0+255)
 14056  0A90  0140               	movlb	0	; select bank0
 14057  0A91  00E9               	movwf	??_printf
 14058  0A92  0869               	movf	??_printf,w
 14059  0A93  00EC               	movwf	printf@ap
 14060  0A94  0141               	movlb	1	; select bank1
 14061  0A95  0856               	movf	(printf@fmt+1)^(0+128),w
 14062  0A96  0140               	movlb	0	; select bank0
 14063  0A97  00E2               	movwf	vfprintf@fmt+1
 14064  0A98  0141               	movlb	1	; select bank1
 14065  0A99  0855               	movf	printf@fmt^(0+128),w
 14066  0A9A  0140               	movlb	0	; select bank0
 14067  0A9B  00E1               	movwf	vfprintf@fmt
 14068  0A9C  306C               	movlw	(low (printf@ap| 0))& (0+255)
 14069  0A9D  00E9               	movwf	??_printf
 14070  0A9E  0869               	movf	??_printf,w
 14071  0A9F  00E3               	movwf	vfprintf@ap
 14072  0AA0  3000               	movlw	0
 14073  0AA1  318D  2513         	fcall	_vfprintf
 14074  0AA3  0008               	return
 14075  0AA4                     __end_of_printf:	
 14076                           
 14077                           	psect	text29
 14078  0D13                     __ptext29:	
 14079 ;; *************** function _vfprintf *****************
 14080 ;; Defined at:
 14081 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 14082 ;; Parameters:    Size  Location     Type
 14083 ;;  fp              1    wreg     PTR struct _IO_FILE
 14084 ;;		 -> NULL(0), 
 14085 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
 14086 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 14087 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 14088 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 14089 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 14090 ;;  ap              1   67[BANK0 ] PTR PTR void 
 14091 ;;		 -> printf@ap(1), 
 14092 ;; Auto vars:     Size  Location     Type
 14093 ;;  fp              1   70[BANK0 ] PTR struct _IO_FILE
 14094 ;;		 -> NULL(0), 
 14095 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 14096 ;;		 -> STR_16(6), STR_15(7), STR_14(8), STR_13(9), 
 14097 ;;		 -> STR_12(10), STR_11(9), STR_10(8), STR_9(7), 
 14098 ;;		 -> STR_7(2), STR_6(5), STR_5(6), STR_4(6), 
 14099 ;;		 -> STR_3(6), STR_2(6), STR_1(6), 
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  2   65[BANK0 ] int 
 14102 ;; Registers used:
 14103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14109 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14110 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14111 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14112 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14113 ;;Total ram usage:        8 bytes
 14114 ;; Hardware stack levels used:    1
 14115 ;; Hardware stack levels required when called:   15
 14116 ;; This function calls:
 14117 ;;		_vfpfcnvrt
 14118 ;; This function is called by:
 14119 ;;		_printf
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           
 14124                           ;psect for function _vfprintf
 14125  0D13                     _vfprintf:	
 14126                           
 14127                           ;incstack = 0
 14128 ;; hardware stack exceeded
 14129                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14130                           ;vfprintf@fp stored from wreg
 14131  0D13  0140               	movlb	0	; select bank0
 14132  0D14  00E6               	movwf	vfprintf@fp
 14133                           
 14134                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 14135  0D15  0862               	movf	vfprintf@fmt+1,w
 14136  0D16  00E8               	movwf	vfprintf@cfmt+1
 14137  0D17  0861               	movf	vfprintf@fmt,w
 14138  0D18  00E7               	movwf	vfprintf@cfmt
 14139                           
 14140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 14141  0D19  0142               	movlb	2	; select bank2
 14142  0D1A  01B0               	clrf	_nout^(0+256)
 14143  0D1B  01B1               	clrf	(_nout+1)^(0+256)
 14144  0D1C                     l5046:	
 14145                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 14146                           
 14147                           
 14148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 14149  0D1C  0140               	movlb	0	; select bank0
 14150  0D1D  0867               	movf	vfprintf@cfmt,w
 14151  0D1E  0084               	movwf	4
 14152  0D1F  0868               	movf	vfprintf@cfmt+1,w
 14153  0D20  0085               	movwf	5
 14154  0D21  0012               	moviw fsr0++
 14155  0D22  1903               	btfsc	3,2
 14156  0D23  2D39               	goto	l5048
 14157                           
 14158                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 14159  0D24  3067               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 14160  0D25  00E4               	movwf	??_vfprintf
 14161  0D26  0864               	movf	??_vfprintf,w
 14162  0D27  00D8               	movwf	vfpfcnvrt@fmt
 14163  0D28  0863               	movf	vfprintf@ap,w
 14164  0D29  00E5               	movwf	??_vfprintf+1
 14165  0D2A  0865               	movf	??_vfprintf+1,w
 14166  0D2B  00D9               	movwf	vfpfcnvrt@ap
 14167  0D2C  0866               	movf	vfprintf@fp,w
 14168  0D2D  3186  2615  318D   	fcall	_vfpfcnvrt
 14169  0D30  0140               	movlb	0	; select bank0
 14170  0D31  0858               	movf	?_vfpfcnvrt,w
 14171  0D32  0142               	movlb	2	; select bank2
 14172  0D33  07B0               	addwf	_nout^(0+256),f
 14173  0D34  0140               	movlb	0	; select bank0
 14174  0D35  0859               	movf	?_vfpfcnvrt+1,w
 14175  0D36  0142               	movlb	2	; select bank2
 14176  0D37  3DB1               	addwfc	(_nout+1)^(0+256),f
 14177  0D38  2D1C               	goto	l5046
 14178  0D39                     l5048:	
 14179                           
 14180                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 14181  0D39  0142               	movlb	2	; select bank2
 14182  0D3A  0831               	movf	(_nout+1)^(0+256),w
 14183  0D3B  0140               	movlb	0	; select bank0
 14184  0D3C  00E2               	movwf	?_vfprintf+1
 14185  0D3D  0142               	movlb	2	; select bank2
 14186  0D3E  0830               	movf	_nout^(0+256),w
 14187  0D3F  0140               	movlb	0	; select bank0
 14188  0D40  00E1               	movwf	?_vfprintf
 14189  0D41  0008               	return
 14190  0D42                     __end_of_vfprintf:	
 14191                           
 14192                           	psect	text30
 14193  0615                     __ptext30:	
 14194 ;; *************** function _vfpfcnvrt *****************
 14195 ;; Defined at:
 14196 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;  fp              1    wreg     PTR struct _IO_FILE
 14199 ;;		 -> NULL(0), 
 14200 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
 14201 ;;		 -> vfprintf@cfmt(2), 
 14202 ;;  ap              1   57[BANK0 ] PTR PTR void 
 14203 ;;		 -> printf@ap(1), 
 14204 ;; Auto vars:     Size  Location     Type
 14205 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
 14206 ;;		 -> NULL(0), 
 14207 ;;  llu             8    0        unsigned long long 
 14208 ;;  ll              8    0        long long 
 14209 ;;  f               4    0        long long 
 14210 ;;  ct              3    0        unsigned char [3]
 14211 ;;  vp              2    0        PTR void 
 14212 ;;  i               2    0        int 
 14213 ;;  done            2    0        int 
 14214 ;;  cp              2    0        PTR unsigned char 
 14215 ;;  c               1   63[BANK0 ] unsigned char 
 14216 ;; Return value:  Size  Location     Type
 14217 ;;                  2   56[BANK0 ] int 
 14218 ;; Registers used:
 14219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14220 ;; Tracked objects:
 14221 ;;		On entry : 0/0
 14222 ;;		On exit  : 0/0
 14223 ;;		Unchanged: 0/0
 14224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14225 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14226 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14227 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14228 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14229 ;;Total ram usage:        9 bytes
 14230 ;; Hardware stack levels used:    1
 14231 ;; Hardware stack levels required when called:   14
 14232 ;; This function calls:
 14233 ;;		_ctoa
 14234 ;;		_fputc
 14235 ;; This function is called by:
 14236 ;;		_vfprintf
 14237 ;; This function uses a non-reentrant model
 14238 ;;
 14239                           
 14240                           
 14241                           ;psect for function _vfpfcnvrt
 14242  0615                     _vfpfcnvrt:	
 14243                           
 14244                           ;incstack = 0
 14245 ;; hardware stack exceeded
 14246                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14247                           ;vfpfcnvrt@fp stored from wreg
 14248  0615  0140               	movlb	0	; select bank0
 14249  0616  00E0               	movwf	vfpfcnvrt@fp
 14250                           
 14251                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 14252  0617  0858               	movf	vfpfcnvrt@fmt,w
 14253  0618  0086               	movwf	6
 14254  0619  0187               	clrf	7
 14255  061A  3F40               	moviw [0]fsr1
 14256  061B  00DA               	movwf	??_vfpfcnvrt
 14257  061C  3F41               	moviw [1]fsr1
 14258  061D  00DB               	movwf	??_vfpfcnvrt+1
 14259  061E  085A               	movf	??_vfpfcnvrt,w
 14260  061F  0084               	movwf	4
 14261  0620  085B               	movf	??_vfpfcnvrt+1,w
 14262  0621  0085               	movwf	5
 14263  0622  0012               	moviw fsr0++
 14264  0623  3A25               	xorlw	37
 14265  0624  1D03               	btfss	3,2
 14266  0625  2E9B               	goto	l5024
 14267                           
 14268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 14269  0626  0858               	movf	vfpfcnvrt@fmt,w
 14270  0627  0086               	movwf	6
 14271  0628  0187               	clrf	7
 14272  0629  3001               	movlw	1
 14273  062A  0781               	addwf	1,f
 14274  062B  3141               	addfsr 1,1
 14275  062C  1803               	skipnc
 14276  062D  0A81               	incf	1,f
 14277                           
 14278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 14279  062E  0141               	movlb	1	; select bank1
 14280  062F  01A5               	clrf	_width^(0+128)
 14281  0630  01A6               	clrf	(_width+1)^(0+128)
 14282  0631  01A7               	clrf	_flags^(0+128)
 14283  0632  01A8               	clrf	(_flags+1)^(0+128)
 14284                           
 14285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 14286  0633  30FF               	movlw	255
 14287  0634  0142               	movlb	2	; select bank2
 14288  0635  00B2               	movwf	_prec^(0+256)
 14289  0636  30FF               	movlw	255
 14290  0637  00B3               	movwf	(_prec^(0+256)+1)
 14291                           
 14292                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 14293  0638  0140               	movlb	0	; select bank0
 14294  0639  0858               	movf	vfpfcnvrt@fmt,w
 14295  063A  0086               	movwf	6
 14296  063B  0187               	clrf	7
 14297  063C  3F40               	moviw [0]fsr1
 14298  063D  00DA               	movwf	??_vfpfcnvrt
 14299  063E  3F41               	moviw [1]fsr1
 14300  063F  00DB               	movwf	??_vfpfcnvrt+1
 14301  0640  085A               	movf	??_vfpfcnvrt,w
 14302  0641  0084               	movwf	4
 14303  0642  085B               	movf	??_vfpfcnvrt+1,w
 14304  0643  0085               	movwf	5
 14305  0644  0012               	moviw fsr0++
 14306  0645  3A63               	xorlw	99
 14307  0646  1D03               	btfss	3,2
 14308  0647  2E69               	goto	l5008
 14309                           
 14310                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 14311  0648  0858               	movf	vfpfcnvrt@fmt,w
 14312  0649  0086               	movwf	6
 14313  064A  0187               	clrf	7
 14314  064B  3001               	movlw	1
 14315  064C  0781               	addwf	1,f
 14316  064D  3141               	addfsr 1,1
 14317  064E  1803               	skipnc
 14318  064F  0A81               	incf	1,f
 14319                           
 14320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 14321  0650  0859               	movf	vfpfcnvrt@ap,w
 14322  0651  0086               	movwf	6
 14323  0652  0187               	clrf	7
 14324  0653  0801               	movf	1,w
 14325  0654  0084               	movwf	4
 14326  0655  0185               	clrf	5
 14327  0656  3002               	movlw	2
 14328  0657  0781               	addwf	1,f
 14329  0658  0800               	movf	0,w
 14330  0659  00DA               	movwf	??_vfpfcnvrt
 14331  065A  085A               	movf	??_vfpfcnvrt,w
 14332  065B  00DF               	movwf	vfpfcnvrt@c
 14333                           
 14334                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 14335  065C  085F               	movf	vfpfcnvrt@c,w
 14336  065D  00DA               	movwf	??_vfpfcnvrt
 14337  065E  085A               	movf	??_vfpfcnvrt,w
 14338  065F  00D2               	movwf	ctoa@c
 14339  0660  0860               	movf	vfpfcnvrt@fp,w
 14340  0661  318D  2542         	fcall	_ctoa
 14341  0663  0140               	movlb	0	; select bank0
 14342  0664  0853               	movf	?_ctoa+1,w
 14343  0665  00D9               	movwf	?_vfpfcnvrt+1
 14344  0666  0852               	movf	?_ctoa,w
 14345  0667  00D8               	movwf	?_vfpfcnvrt
 14346  0668  0008               	return
 14347  0669                     l5008:	
 14348                           
 14349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 14350  0669  0858               	movf	vfpfcnvrt@fmt,w
 14351  066A  0086               	movwf	6
 14352  066B  0187               	clrf	7
 14353  066C  3F40               	moviw [0]fsr1
 14354  066D  00DA               	movwf	??_vfpfcnvrt
 14355  066E  3F41               	moviw [1]fsr1
 14356  066F  00DB               	movwf	??_vfpfcnvrt+1
 14357  0670  085A               	movf	??_vfpfcnvrt,w
 14358  0671  0084               	movwf	4
 14359  0672  085B               	movf	??_vfpfcnvrt+1,w
 14360  0673  0085               	movwf	5
 14361  0674  0012               	moviw fsr0++
 14362  0675  3A25               	xorlw	37
 14363  0676  1D03               	btfss	3,2
 14364  0677  2E90               	goto	l5018
 14365                           
 14366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 14367  0678  0858               	movf	vfpfcnvrt@fmt,w
 14368  0679  0086               	movwf	6
 14369  067A  0187               	clrf	7
 14370  067B  3001               	movlw	1
 14371  067C  0781               	addwf	1,f
 14372  067D  3141               	addfsr 1,1
 14373  067E  1803               	skipnc
 14374  067F  0A81               	incf	1,f
 14375                           
 14376                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 14377  0680  3025               	movlw	37
 14378  0681  00B9               	movwf	fputc@c
 14379  0682  3000               	movlw	0
 14380  0683  00BA               	movwf	fputc@c+1
 14381  0684  0860               	movf	vfpfcnvrt@fp,w
 14382  0685  00DA               	movwf	??_vfpfcnvrt
 14383  0686  085A               	movf	??_vfpfcnvrt,w
 14384  0687  00BB               	movwf	fputc@fp
 14385  0688  318E  267A         	fcall	_fputc
 14386  068A                     l5014:	
 14387                           
 14388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14389  068A  3001               	movlw	1
 14390  068B  0140               	movlb	0	; select bank0
 14391  068C  00D8               	movwf	?_vfpfcnvrt
 14392  068D  3000               	movlw	0
 14393  068E  00D9               	movwf	?_vfpfcnvrt+1
 14394  068F  0008               	return
 14395  0690                     l5018:	
 14396                           
 14397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 14398  0690  0858               	movf	vfpfcnvrt@fmt,w
 14399  0691  0086               	movwf	6
 14400  0692  0187               	clrf	7
 14401  0693  3001               	movlw	1
 14402  0694  0781               	addwf	1,f
 14403  0695  3141               	addfsr 1,1
 14404  0696  1803               	skipnc
 14405  0697  0A81               	incf	1,f
 14406                           
 14407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 14408  0698  01D8               	clrf	?_vfpfcnvrt
 14409  0699  01D9               	clrf	?_vfpfcnvrt+1
 14410  069A  0008               	return
 14411  069B                     l5024:	
 14412                           
 14413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 14414  069B  0858               	movf	vfpfcnvrt@fmt,w
 14415  069C  0086               	movwf	6
 14416  069D  0187               	clrf	7
 14417  069E  3F40               	moviw [0]fsr1
 14418  069F  00DA               	movwf	??_vfpfcnvrt
 14419  06A0  3F41               	moviw [1]fsr1
 14420  06A1  00DB               	movwf	??_vfpfcnvrt+1
 14421  06A2  085A               	movf	??_vfpfcnvrt,w
 14422  06A3  0084               	movwf	4
 14423  06A4  085B               	movf	??_vfpfcnvrt+1,w
 14424  06A5  0085               	movwf	5
 14425  06A6  0800               	movf	0,w	;code access
 14426  06A7  00DC               	movwf	??_vfpfcnvrt+2
 14427  06A8  01DD               	clrf	??_vfpfcnvrt+3
 14428  06A9  085C               	movf	??_vfpfcnvrt+2,w
 14429  06AA  00B9               	movwf	fputc@c
 14430  06AB  085D               	movf	??_vfpfcnvrt+3,w
 14431  06AC  00BA               	movwf	fputc@c+1
 14432  06AD  0860               	movf	vfpfcnvrt@fp,w
 14433  06AE  00DE               	movwf	??_vfpfcnvrt+4
 14434  06AF  085E               	movf	??_vfpfcnvrt+4,w
 14435  06B0  00BB               	movwf	fputc@fp
 14436  06B1  318E  267A  3186   	fcall	_fputc
 14437                           
 14438                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 14439  06B4  0140               	movlb	0	; select bank0
 14440  06B5  0858               	movf	vfpfcnvrt@fmt,w
 14441  06B6  0086               	movwf	6
 14442  06B7  0187               	clrf	7
 14443  06B8  3001               	movlw	1
 14444  06B9  0781               	addwf	1,f
 14445  06BA  3141               	addfsr 1,1
 14446  06BB  1803               	skipnc
 14447  06BC  0A81               	incf	1,f
 14448  06BD  2E8A               	goto	l5014
 14449  06BE                     __end_of_vfpfcnvrt:	
 14450                           
 14451                           	psect	text31
 14452  0D42                     __ptext31:	
 14453 ;; *************** function _ctoa *****************
 14454 ;; Defined at:
 14455 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 14456 ;; Parameters:    Size  Location     Type
 14457 ;;  fp              1    wreg     PTR struct _IO_FILE
 14458 ;;		 -> NULL(0), 
 14459 ;;  c               1   50[BANK0 ] unsigned char 
 14460 ;; Auto vars:     Size  Location     Type
 14461 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
 14462 ;;		 -> NULL(0), 
 14463 ;;  w               2   53[BANK0 ] int 
 14464 ;;  l               2    0        int 
 14465 ;; Return value:  Size  Location     Type
 14466 ;;                  2   50[BANK0 ] int 
 14467 ;; Registers used:
 14468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14469 ;; Tracked objects:
 14470 ;;		On entry : 0/0
 14471 ;;		On exit  : 0/0
 14472 ;;		Unchanged: 0/0
 14473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14475 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14476 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14477 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14478 ;;Total ram usage:        6 bytes
 14479 ;; Hardware stack levels used:    1
 14480 ;; Hardware stack levels required when called:   13
 14481 ;; This function calls:
 14482 ;;		_pad
 14483 ;; This function is called by:
 14484 ;;		_vfpfcnvrt
 14485 ;; This function uses a non-reentrant model
 14486 ;;
 14487                           
 14488                           
 14489                           ;psect for function _ctoa
 14490  0D42                     _ctoa:	
 14491                           
 14492                           ;incstack = 0
 14493 ;; hardware stack exceeded
 14494                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14495                           ;ctoa@fp stored from wreg
 14496  0D42  0140               	movlb	0	; select bank0
 14497  0D43  00D7               	movwf	ctoa@fp
 14498                           
 14499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 14500  0D44  0141               	movlb	1	; select bank1
 14501  0D45  0825               	movf	_width^(0+128),w
 14502  0D46  0426               	iorwf	(_width+1)^(0+128),w
 14503  0D47  1D03               	btfss	3,2
 14504  0D48  2D51               	goto	l4980
 14505  0D49  0826               	movf	(_width+1)^(0+128),w
 14506  0D4A  0140               	movlb	0	; select bank0
 14507  0D4B  00D6               	movwf	ctoa@w+1
 14508  0D4C  0141               	movlb	1	; select bank1
 14509  0D4D  0825               	movf	_width^(0+128),w
 14510  0D4E  0140               	movlb	0	; select bank0
 14511  0D4F  00D5               	movwf	ctoa@w
 14512  0D50  2D5A               	goto	l4982
 14513  0D51                     l4980:	
 14514  0D51  0825               	movf	_width^(0+128),w
 14515  0D52  3EFF               	addlw	255
 14516  0D53  0140               	movlb	0	; select bank0
 14517  0D54  00D5               	movwf	ctoa@w
 14518  0D55  30FF               	movlw	255
 14519  0D56  0141               	movlb	1	; select bank1
 14520  0D57  3D26               	addwfc	(_width+1)^(0+128),w
 14521  0D58  0140               	movlb	0	; select bank0
 14522  0D59  00D6               	movwf	ctoa@w+1
 14523  0D5A                     l4982:	
 14524                           
 14525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 14526  0D5A  0852               	movf	ctoa@c,w
 14527  0D5B  00D4               	movwf	??_ctoa
 14528  0D5C  0854               	movf	??_ctoa,w
 14529  0D5D  0143               	movlb	3	; select bank3
 14530  0D5E  00A0               	movwf	_dbuf^(0+384)
 14531                           
 14532                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 14533  0D5F  01A1               	clrf	(_dbuf^(0+384)+1)
 14534                           
 14535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 14536  0D60  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 14537  0D61  0140               	movlb	0	; select bank0
 14538  0D62  00D4               	movwf	??_ctoa
 14539  0D63  0854               	movf	??_ctoa,w
 14540  0D64  00C9               	movwf	pad@buf
 14541  0D65  0856               	movf	ctoa@w+1,w
 14542  0D66  00CB               	movwf	pad@p+1
 14543  0D67  0855               	movf	ctoa@w,w
 14544  0D68  00CA               	movwf	pad@p
 14545  0D69  0857               	movf	ctoa@fp,w
 14546  0D6A  318F  2751         	fcall	_pad
 14547  0D6C  0140               	movlb	0	; select bank0
 14548  0D6D  084A               	movf	?_pad+1,w
 14549  0D6E  00D3               	movwf	?_ctoa+1
 14550  0D6F  0849               	movf	?_pad,w
 14551  0D70  00D2               	movwf	?_ctoa
 14552  0D71  0008               	return
 14553  0D72                     __end_of_ctoa:	
 14554                           
 14555                           	psect	text32
 14556  0F51                     __ptext32:	
 14557 ;; *************** function _pad *****************
 14558 ;; Defined at:
 14559 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 14560 ;; Parameters:    Size  Location     Type
 14561 ;;  fp              1    wreg     PTR struct _IO_FILE
 14562 ;;		 -> NULL(0), 
 14563 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 14564 ;;		 -> dbuf(32), 
 14565 ;;  p               2   42[BANK0 ] int 
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;  fp              1   49[BANK0 ] PTR struct _IO_FILE
 14568 ;;		 -> NULL(0), 
 14569 ;;  w               2   47[BANK0 ] int 
 14570 ;;  i               2   45[BANK0 ] int 
 14571 ;; Return value:  Size  Location     Type
 14572 ;;                  2   41[BANK0 ] int 
 14573 ;; Registers used:
 14574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14575 ;; Tracked objects:
 14576 ;;		On entry : 0/0
 14577 ;;		On exit  : 0/0
 14578 ;;		Unchanged: 0/0
 14579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14580 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14581 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14582 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14583 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14584 ;;Total ram usage:        9 bytes
 14585 ;; Hardware stack levels used:    1
 14586 ;; Hardware stack levels required when called:   12
 14587 ;; This function calls:
 14588 ;;		_fputc
 14589 ;;		_fputs
 14590 ;;		_strlen
 14591 ;; This function is called by:
 14592 ;;		_ctoa
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           
 14597                           ;psect for function _pad
 14598  0F51                     _pad:	
 14599                           
 14600                           ;incstack = 0
 14601 ;; hardware stack exceeded
 14602                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14603                           ;pad@fp stored from wreg
 14604  0F51  0140               	movlb	0	; select bank0
 14605  0F52  00D1               	movwf	pad@fp
 14606                           
 14607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 14608  0F53  0141               	movlb	1	; select bank1
 14609  0F54  1C27               	btfss	_flags^(0+128),0
 14610  0F55  2F5F               	goto	l4958
 14611                           
 14612                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 14613  0F56  0140               	movlb	0	; select bank0
 14614  0F57  0851               	movf	pad@fp,w
 14615  0F58  00CC               	movwf	??_pad
 14616  0F59  084C               	movf	??_pad,w
 14617  0F5A  00C1               	movwf	fputs@fp
 14618  0F5B  0849               	movf	pad@buf,w
 14619  0F5C  318C  2470  318F   	fcall	_fputs
 14620  0F5F                     l4958:	
 14621                           
 14622                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 14623  0F5F  0140               	movlb	0	; select bank0
 14624  0F60  1BCB               	btfsc	pad@p+1,7
 14625  0F61  2F67               	goto	l4962
 14626  0F62  084B               	movf	pad@p+1,w
 14627  0F63  00D0               	movwf	pad@w+1
 14628  0F64  084A               	movf	pad@p,w
 14629  0F65  00CF               	movwf	pad@w
 14630  0F66  2F69               	goto	l1429
 14631  0F67                     l4962:	
 14632  0F67  01CF               	clrf	pad@w
 14633  0F68  01D0               	clrf	pad@w+1
 14634  0F69                     l1429:	
 14635                           
 14636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 14637  0F69  01CD               	clrf	pad@i
 14638  0F6A  01CE               	clrf	pad@i+1
 14639  0F6B                     l4968:	
 14640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 14641                           
 14642                           
 14643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 14644  0F6B  084E               	movf	pad@i+1,w
 14645  0F6C  3A80               	xorlw	128
 14646  0F6D  00CC               	movwf	??_pad
 14647  0F6E  0850               	movf	pad@w+1,w
 14648  0F6F  3A80               	xorlw	128
 14649  0F70  024C               	subwf	??_pad,w
 14650  0F71  1D03               	skipz
 14651  0F72  2F75               	goto	u3555
 14652  0F73  084F               	movf	pad@w,w
 14653  0F74  024D               	subwf	pad@i,w
 14654  0F75                     u3555:	
 14655  0F75  1803               	btfsc	3,0
 14656  0F76  2F89               	goto	l1432
 14657                           
 14658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 14659  0F77  3020               	movlw	32
 14660  0F78  0140               	movlb	0	; select bank0
 14661  0F79  00B9               	movwf	fputc@c
 14662  0F7A  3000               	movlw	0
 14663  0F7B  00BA               	movwf	fputc@c+1
 14664  0F7C  0851               	movf	pad@fp,w
 14665  0F7D  00CC               	movwf	??_pad
 14666  0F7E  084C               	movf	??_pad,w
 14667  0F7F  00BB               	movwf	fputc@fp
 14668  0F80  318E  267A  318F   	fcall	_fputc
 14669                           
 14670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 14671  0F83  3001               	movlw	1
 14672  0F84  0140               	movlb	0	; select bank0
 14673  0F85  07CD               	addwf	pad@i,f
 14674  0F86  3000               	movlw	0
 14675  0F87  3DCE               	addwfc	pad@i+1,f
 14676  0F88  2F6B               	goto	l4968
 14677  0F89                     l1432:	
 14678                           
 14679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 14680  0F89  0141               	movlb	1	; select bank1
 14681  0F8A  1827               	btfsc	_flags^(0+128),0
 14682  0F8B  2F95               	goto	l4972
 14683                           
 14684                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 14685  0F8C  0140               	movlb	0	; select bank0
 14686  0F8D  0851               	movf	pad@fp,w
 14687  0F8E  00CC               	movwf	??_pad
 14688  0F8F  084C               	movf	??_pad,w
 14689  0F90  00C1               	movwf	fputs@fp
 14690  0F91  0849               	movf	pad@buf,w
 14691  0F92  318C  2470  318F   	fcall	_fputs
 14692  0F95                     l4972:	
 14693                           
 14694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 14695  0F95  0140               	movlb	0	; select bank0
 14696  0F96  0849               	movf	pad@buf,w
 14697  0F97  00A0               	movwf	strlen@s
 14698  0F98  3001               	movlw	1
 14699  0F99  00A1               	movwf	strlen@s+1
 14700  0F9A  318B  2303         	fcall	_strlen
 14701  0F9C  0140               	movlb	0	; select bank0
 14702  0F9D  084F               	movf	pad@w,w
 14703  0F9E  0720               	addwf	?_strlen,w
 14704  0F9F  00C9               	movwf	?_pad
 14705  0FA0  0850               	movf	pad@w+1,w
 14706  0FA1  3D21               	addwfc	?_strlen+1,w
 14707  0FA2  00CA               	movwf	?_pad+1
 14708  0FA3  0008               	return
 14709  0FA4                     __end_of_pad:	
 14710                           
 14711                           	psect	text33
 14712  0B03                     __ptext33:	
 14713 ;; *************** function _strlen *****************
 14714 ;; Defined at:
 14715 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 14716 ;; Parameters:    Size  Location     Type
 14717 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 14718 ;;		 -> dbuf(32), STR_8(9), 
 14719 ;; Auto vars:     Size  Location     Type
 14720 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 14721 ;;		 -> dbuf(32), STR_8(9), 
 14722 ;; Return value:  Size  Location     Type
 14723 ;;                  2    0[BANK0 ] unsigned int 
 14724 ;; Registers used:
 14725 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14726 ;; Tracked objects:
 14727 ;;		On entry : 0/0
 14728 ;;		On exit  : 0/0
 14729 ;;		Unchanged: 0/0
 14730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14732 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14734 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14735 ;;Total ram usage:        5 bytes
 14736 ;; Hardware stack levels used:    1
 14737 ;; Hardware stack levels required when called:    4
 14738 ;; This function calls:
 14739 ;;		Nothing
 14740 ;; This function is called by:
 14741 ;;		_pad
 14742 ;;		_TM1650_scrollPrint
 14743 ;; This function uses a non-reentrant model
 14744 ;;
 14745                           
 14746                           
 14747                           ;psect for function _strlen
 14748  0B03                     _strlen:	
 14749                           
 14750                           ;incstack = 0
 14751                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 14752  0B03  0140               	movlb	0	; select bank0
 14753  0B04  0821               	movf	strlen@s+1,w
 14754  0B05  00A4               	movwf	strlen@a+1
 14755  0B06  0820               	movf	strlen@s,w
 14756  0B07  00A3               	movwf	strlen@a
 14757  0B08                     l3564:	
 14758  0B08  0820               	movf	strlen@s,w
 14759  0B09  0084               	movwf	4
 14760  0B0A  0821               	movf	strlen@s+1,w
 14761  0B0B  0085               	movwf	5
 14762  0B0C  0012               	moviw fsr0++
 14763  0B0D  1903               	btfsc	3,2
 14764  0B0E  2B14               	goto	l3566
 14765  0B0F  3001               	movlw	1
 14766  0B10  07A0               	addwf	strlen@s,f
 14767  0B11  3000               	movlw	0
 14768  0B12  3DA1               	addwfc	strlen@s+1,f
 14769  0B13  2B08               	goto	l3564
 14770  0B14                     l3566:	
 14771  0B14  0823               	movf	strlen@a,w
 14772  0B15  0220               	subwf	strlen@s,w
 14773  0B16  00A0               	movwf	?_strlen
 14774  0B17  0824               	movf	strlen@a+1,w
 14775  0B18  3B21               	subwfb	strlen@s+1,w
 14776  0B19  00A1               	movwf	?_strlen+1
 14777  0B1A  0008               	return
 14778  0B1B                     __end_of_strlen:	
 14779                           
 14780                           	psect	text34
 14781  0C70                     __ptext34:	
 14782 ;; *************** function _fputs *****************
 14783 ;; Defined at:
 14784 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  s               1    wreg     PTR const unsigned char 
 14787 ;;		 -> dbuf(32), 
 14788 ;;  fp              1   33[BANK0 ] PTR struct _IO_FILE
 14789 ;;		 -> NULL(0), 
 14790 ;; Auto vars:     Size  Location     Type
 14791 ;;  s               1   40[BANK0 ] PTR const unsigned char 
 14792 ;;		 -> dbuf(32), 
 14793 ;;  i               2   38[BANK0 ] int 
 14794 ;;  c               1   37[BANK0 ] unsigned char 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  2   33[BANK0 ] int 
 14797 ;; Registers used:
 14798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/0
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14804 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14805 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14806 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14807 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14808 ;;Total ram usage:        8 bytes
 14809 ;; Hardware stack levels used:    1
 14810 ;; Hardware stack levels required when called:   11
 14811 ;; This function calls:
 14812 ;;		_fputc
 14813 ;; This function is called by:
 14814 ;;		_pad
 14815 ;; This function uses a non-reentrant model
 14816 ;;
 14817                           
 14818                           
 14819                           ;psect for function _fputs
 14820  0C70                     _fputs:	
 14821                           
 14822                           ;incstack = 0
 14823 ;; hardware stack exceeded
 14824                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14825                           ;fputs@s stored from wreg
 14826  0C70  0140               	movlb	0	; select bank0
 14827  0C71  00C8               	movwf	fputs@s
 14828  0C72  01C6               	clrf	fputs@i
 14829  0C73  01C7               	clrf	fputs@i+1
 14830  0C74                     l4952:	
 14831  0C74  0846               	movf	fputs@i,w
 14832  0C75  0748               	addwf	fputs@s,w
 14833  0C76  00C2               	movwf	??_fputs
 14834  0C77  0842               	movf	??_fputs,w
 14835  0C78  0086               	movwf	6
 14836  0C79  3001               	movlw	1	; select bank2/3
 14837  0C7A  0087               	movwf	7
 14838  0C7B  0801               	movf	1,w
 14839  0C7C  00C3               	movwf	??_fputs+1
 14840  0C7D  0843               	movf	??_fputs+1,w
 14841  0C7E  00C5               	movwf	fputs@c
 14842  0C7F  0845               	movf	fputs@c,w
 14843  0C80  1903               	btfsc	3,2
 14844  0C81  0008               	return
 14845  0C82  0845               	movf	fputs@c,w
 14846  0C83  00C2               	movwf	??_fputs
 14847  0C84  01C3               	clrf	??_fputs+1
 14848  0C85  0842               	movf	??_fputs,w
 14849  0C86  00B9               	movwf	fputc@c
 14850  0C87  0843               	movf	??_fputs+1,w
 14851  0C88  00BA               	movwf	fputc@c+1
 14852  0C89  0841               	movf	fputs@fp,w
 14853  0C8A  00C4               	movwf	??_fputs+2
 14854  0C8B  0844               	movf	??_fputs+2,w
 14855  0C8C  00BB               	movwf	fputc@fp
 14856  0C8D  318E  267A  318C   	fcall	_fputc
 14857  0C90  3001               	movlw	1
 14858  0C91  0140               	movlb	0	; select bank0
 14859  0C92  07C6               	addwf	fputs@i,f
 14860  0C93  3000               	movlw	0
 14861  0C94  3DC7               	addwfc	fputs@i+1,f
 14862  0C95  2C74               	goto	l4952
 14863  0C96                     __end_of_fputs:	
 14864                           
 14865                           	psect	text35
 14866  0E7A                     __ptext35:	
 14867 ;; *************** function _fputc *****************
 14868 ;; Defined at:
 14869 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;  c               2   25[BANK0 ] int 
 14872 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 14873 ;;		 -> NULL(0), 
 14874 ;; Auto vars:     Size  Location     Type
 14875 ;;		None
 14876 ;; Return value:  Size  Location     Type
 14877 ;;                  2   25[BANK0 ] int 
 14878 ;; Registers used:
 14879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14880 ;; Tracked objects:
 14881 ;;		On entry : 0/0
 14882 ;;		On exit  : 0/0
 14883 ;;		Unchanged: 0/0
 14884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14885 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14887 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14888 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14889 ;;Total ram usage:        8 bytes
 14890 ;; Hardware stack levels used:    1
 14891 ;; Hardware stack levels required when called:   10
 14892 ;; This function calls:
 14893 ;;		_putch
 14894 ;; This function is called by:
 14895 ;;		_pad
 14896 ;;		_vfpfcnvrt
 14897 ;;		_fputs
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           
 14901                           
 14902                           ;psect for function _fputc
 14903  0E7A                     _fputc:	
 14904                           
 14905                           ;incstack = 0
 14906                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14907  0E7A  0140               	movlb	0	; select bank0
 14908  0E7B  083B               	movf	fputc@fp,w
 14909  0E7C  1D03               	btfss	3,2
 14910  0E7D  083B               	movf	fputc@fp,w
 14911  0E7E  1D03               	btfss	3,2
 14912  0E7F  2E84               	goto	l4938
 14913  0E80  0839               	movf	fputc@c,w
 14914  0E81  318C  2428         	fcall	_putch
 14915  0E83  0008               	return
 14916  0E84                     l4938:	
 14917  0E84  083B               	movf	fputc@fp,w
 14918  0E85  3E03               	addlw	3
 14919  0E86  0086               	movwf	6
 14920  0E87  0187               	clrf	7
 14921  0E88  0016               	moviw fsr1++
 14922  0E89  0401               	iorwf	1,w
 14923  0E8A  1903               	btfsc	3,2
 14924  0E8B  2EA7               	goto	l4942
 14925  0E8C  083B               	movf	fputc@fp,w
 14926  0E8D  3E03               	addlw	3
 14927  0E8E  0086               	movwf	6
 14928  0E8F  0187               	clrf	7
 14929  0E90  3F40               	moviw [0]fsr1
 14930  0E91  00BC               	movwf	??_fputc
 14931  0E92  3F41               	moviw [1]fsr1
 14932  0E93  00BD               	movwf	??_fputc+1
 14933  0E94  0A3B               	incf	fputc@fp,w
 14934  0E95  0086               	movwf	6
 14935  0E96  0187               	clrf	7
 14936  0E97  3F40               	moviw [0]fsr1
 14937  0E98  00BE               	movwf	??_fputc+2
 14938  0E99  3F41               	moviw [1]fsr1
 14939  0E9A  00BF               	movwf	??_fputc+3
 14940  0E9B  083F               	movf	??_fputc+3,w
 14941  0E9C  3A80               	xorlw	128
 14942  0E9D  00C0               	movwf	??_fputc+4
 14943  0E9E  083D               	movf	??_fputc+1,w
 14944  0E9F  3A80               	xorlw	128
 14945  0EA0  0240               	subwf	??_fputc+4,w
 14946  0EA1  1D03               	skipz
 14947  0EA2  2EA5               	goto	u3515
 14948  0EA3  083C               	movf	??_fputc,w
 14949  0EA4  023E               	subwf	??_fputc+2,w
 14950  0EA5                     u3515:	
 14951  0EA5  1803               	skipnc
 14952  0EA6  0008               	return
 14953  0EA7                     l4942:	
 14954  0EA7  0140               	movlb	0	; select bank0
 14955  0EA8  0A3B               	incf	fputc@fp,w
 14956  0EA9  0086               	movwf	6
 14957  0EAA  0187               	clrf	7
 14958  0EAB  3001               	movlw	1
 14959  0EAC  0781               	addwf	1,f
 14960  0EAD  3141               	addfsr 1,1
 14961  0EAE  1803               	skipnc
 14962  0EAF  0A81               	incf	1,f
 14963  0EB0  0008               	return
 14964  0EB1                     __end_of_fputc:	
 14965                           
 14966                           	psect	text36
 14967  0C28                     __ptext36:	
 14968 ;; *************** function _putch *****************
 14969 ;; Defined at:
 14970 ;;		line 120 in file "tm1650.c"
 14971 ;; Parameters:    Size  Location     Type
 14972 ;;  n               1    wreg     unsigned char 
 14973 ;; Auto vars:     Size  Location     Type
 14974 ;;  n               1   24[BANK0 ] unsigned char 
 14975 ;; Return value:  Size  Location     Type
 14976 ;;                  1    wreg      void 
 14977 ;; Registers used:
 14978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14979 ;; Tracked objects:
 14980 ;;		On entry : 0/0
 14981 ;;		On exit  : 0/0
 14982 ;;		Unchanged: 0/0
 14983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14986 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14987 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14988 ;;Total ram usage:        2 bytes
 14989 ;; Hardware stack levels used:    1
 14990 ;; Hardware stack levels required when called:    9
 14991 ;; This function calls:
 14992 ;;		_TM1650_setDigit
 14993 ;; This function is called by:
 14994 ;;		_fputc
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998                           
 14999                           ;psect for function _putch
 15000  0C28                     _putch:	
 15001                           
 15002                           ;incstack = 0
 15003                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15004                           ;putch@n stored from wreg
 15005  0C28  0140               	movlb	0	; select bank0
 15006  0C29  00B8               	movwf	putch@n
 15007                           
 15008                           ;tm1650.c: 122:     if(position > 3 || n == '\r' || n == '\0')
 15009  0C2A  3004               	movlw	4
 15010  0C2B  0141               	movlb	1	; select bank1
 15011  0C2C  023E               	subwf	_position^(0+128),w
 15012  0C2D  1803               	skipnc
 15013  0C2E  2C36               	goto	l4924
 15014  0C2F  300D               	movlw	13
 15015  0C30  0140               	movlb	0	; select bank0
 15016  0C31  0638               	xorwf	putch@n,w
 15017  0C32  1D03               	btfss	3,2
 15018  0C33  0838               	movf	putch@n,w
 15019  0C34  1D03               	btfss	3,2
 15020  0C35  2C38               	goto	l4926
 15021  0C36                     l4924:	
 15022                           
 15023                           ;tm1650.c: 123:         position = 0;
 15024  0C36  0141               	movlb	1	; select bank1
 15025  0C37  01BE               	clrf	_position^(0+128)
 15026  0C38                     l4926:	
 15027                           
 15028                           ;tm1650.c: 125:     if(n != '\r'){
 15029  0C38  300D               	movlw	13
 15030  0C39  0140               	movlb	0	; select bank0
 15031  0C3A  0638               	xorwf	putch@n,w
 15032  0C3B  1903               	btfsc	3,2
 15033  0C3C  0008               	return
 15034                           
 15035                           ;tm1650.c: 126:         TM1650_setDigit(position, n);
 15036  0C3D  0838               	movf	putch@n,w
 15037  0C3E  00B7               	movwf	??_putch
 15038  0C3F  0837               	movf	??_putch,w
 15039  0C40  00B4               	movwf	TM1650_setDigit@data
 15040  0C41  0141               	movlb	1	; select bank1
 15041  0C42  083E               	movf	_position^(0+128),w
 15042  0C43  318A  2219         	fcall	_TM1650_setDigit
 15043                           
 15044                           ;tm1650.c: 127:         position++;
 15045  0C45  3001               	movlw	1
 15046  0C46  0140               	movlb	0	; select bank0
 15047  0C47  00B7               	movwf	??_putch
 15048  0C48  0837               	movf	??_putch,w
 15049  0C49  0141               	movlb	1	; select bank1
 15050  0C4A  07BE               	addwf	_position^(0+128),f
 15051  0C4B  0008               	return
 15052  0C4C                     __end_of_putch:	
 15053                           
 15054                           	psect	text37
 15055  0A19                     __ptext37:	
 15056 ;; *************** function _TM1650_setDigit *****************
 15057 ;; Defined at:
 15058 ;;		line 95 in file "tm1650.c"
 15059 ;; Parameters:    Size  Location     Type
 15060 ;;  digit           1    wreg     unsigned char 
 15061 ;;  data            1   20[BANK0 ] unsigned char 
 15062 ;; Auto vars:     Size  Location     Type
 15063 ;;  digit           1   22[BANK0 ] unsigned char 
 15064 ;; Return value:  Size  Location     Type
 15065 ;;                  1    wreg      void 
 15066 ;; Registers used:
 15067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15068 ;; Tracked objects:
 15069 ;;		On entry : 0/0
 15070 ;;		On exit  : 0/0
 15071 ;;		Unchanged: 0/0
 15072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15073 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15074 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15075 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15076 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15077 ;;Total ram usage:        3 bytes
 15078 ;; Hardware stack levels used:    1
 15079 ;; Hardware stack levels required when called:    8
 15080 ;; This function calls:
 15081 ;;		_writeData
 15082 ;; This function is called by:
 15083 ;;		_putch
 15084 ;; This function uses a non-reentrant model
 15085 ;;
 15086                           
 15087                           
 15088                           ;psect for function _TM1650_setDigit
 15089  0A19                     _TM1650_setDigit:	
 15090                           
 15091                           ;incstack = 0
 15092                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15093                           ;TM1650_setDigit@digit stored from wreg
 15094  0A19  0140               	movlb	0	; select bank0
 15095  0A1A  00B6               	movwf	TM1650_setDigit@digit
 15096                           
 15097                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 15098  0A1B  0834               	movf	TM1650_setDigit@data,w
 15099  0A1C  3E40               	addlw	low ((_charTable+65504)| (0+32768))
 15100  0A1D  0084               	movwf	4
 15101  0A1E  3087               	movlw	high ((_charTable+65504)| (0+32768))
 15102  0A1F  1803               	skipnc
 15103  0A20  3E01               	addlw	1
 15104  0A21  0085               	movwf	5
 15105  0A22  0800               	movf	0,w	;code access
 15106  0A23  00B5               	movwf	??_TM1650_setDigit
 15107  0A24  0835               	movf	??_TM1650_setDigit,w
 15108  0A25  00AE               	movwf	writeData@data
 15109  0A26  0836               	movf	TM1650_setDigit@digit,w
 15110  0A27  3E34               	addlw	52
 15111  0A28  318B  2350         	fcall	_writeData
 15112  0A2A  0008               	return
 15113  0A2B                     __end_of_TM1650_setDigit:	
 15114                           
 15115                           	psect	text38
 15116  0A7A                     __ptext38:	
 15117 ;; *************** function _TM1650_enable *****************
 15118 ;; Defined at:
 15119 ;;		line 41 in file "tm1650.c"
 15120 ;; Parameters:    Size  Location     Type
 15121 ;;  enable          1    wreg     _Bool 
 15122 ;; Auto vars:     Size  Location     Type
 15123 ;;  enable          1   20[BANK0 ] _Bool 
 15124 ;; Return value:  Size  Location     Type
 15125 ;;                  1    wreg      void 
 15126 ;; Registers used:
 15127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15128 ;; Tracked objects:
 15129 ;;		On entry : 0/0
 15130 ;;		On exit  : 0/0
 15131 ;;		Unchanged: 0/0
 15132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15137 ;;Total ram usage:        1 bytes
 15138 ;; Hardware stack levels used:    1
 15139 ;; Hardware stack levels required when called:    8
 15140 ;; This function calls:
 15141 ;;		_writeData
 15142 ;; This function is called by:
 15143 ;;		_CONTROLLER_task
 15144 ;;		_TM1650_init
 15145 ;; This function uses a non-reentrant model
 15146 ;;
 15147                           
 15148                           
 15149                           ;psect for function _TM1650_enable
 15150  0A7A                     _TM1650_enable:	
 15151                           
 15152                           ;incstack = 0
 15153                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15154                           ;TM1650_enable@enable stored from wreg
 15155  0A7A  0140               	movlb	0	; select bank0
 15156  0A7B  00B4               	movwf	TM1650_enable@enable
 15157                           
 15158                           ;tm1650.c: 42:     if(enable){
 15159  0A7C  0834               	movf	TM1650_enable@enable,w
 15160  0A7D  1903               	btfsc	3,2
 15161  0A7E  2A88               	goto	l5460
 15162                           
 15163                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 15164  0A7F  01AE               	clrf	writeData@data
 15165  0A80  0AAE               	incf	writeData@data,f
 15166  0A81  3024               	movlw	36
 15167  0A82  318B  2350         	fcall	_writeData
 15168                           
 15169                           ;tm1650.c: 44:         tm1650_status = 1;
 15170  0A84  0141               	movlb	1	; select bank1
 15171  0A85  01BF               	clrf	_tm1650_status^(0+128)
 15172  0A86  0ABF               	incf	_tm1650_status^(0+128),f
 15173                           
 15174                           ;tm1650.c: 45:     } else {
 15175  0A87  0008               	return
 15176  0A88                     l5460:	
 15177                           
 15178                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 15179  0A88  01AE               	clrf	writeData@data
 15180  0A89  3024               	movlw	36
 15181  0A8A  318B  2350         	fcall	_writeData
 15182                           
 15183                           ;tm1650.c: 47:         tm1650_status = 0;
 15184  0A8C  0141               	movlb	1	; select bank1
 15185  0A8D  01BF               	clrf	_tm1650_status^(0+128)
 15186  0A8E  0008               	return
 15187  0A8F                     __end_of_TM1650_enable:	
 15188                           
 15189                           	psect	text39
 15190  06BE                     __ptext39:	
 15191 ;; *************** function _CONTROL_DMX *****************
 15192 ;; Defined at:
 15193 ;;		line 117 in file "controller.c"
 15194 ;; Parameters:    Size  Location     Type
 15195 ;;		None
 15196 ;; Auto vars:     Size  Location     Type
 15197 ;;		None
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  1    wreg      _Bool 
 15200 ;; Registers used:
 15201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15202 ;; Tracked objects:
 15203 ;;		On entry : 0/0
 15204 ;;		On exit  : 0/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15209 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15210 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15211 ;;Total ram usage:        2 bytes
 15212 ;; Hardware stack levels used:    1
 15213 ;; Hardware stack levels required when called:   10
 15214 ;; This function calls:
 15215 ;;		_BUTTONS_isHeld
 15216 ;;		_CLOCK_getTime
 15217 ;;		_address_dec
 15218 ;;		_address_inc
 15219 ;; This function is called by:
 15220 ;;		_CONTROLLER_task
 15221 ;; This function uses a non-reentrant model
 15222 ;;
 15223                           
 15224                           
 15225                           ;psect for function _CONTROL_DMX
 15226  06BE                     _CONTROL_DMX:	
 15227                           
 15228                           ;controller.c: 119:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 15229                           
 15230                           ;incstack = 0
 15231                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15232  06BE  0141               	movlb	1	; select bank1
 15233  06BF  0848               	movf	_up^(0+128),w
 15234  06C0  3189  21E8  3186   	fcall	_BUTTONS_isHeld
 15235  06C3  3A00               	xorlw	0
 15236  06C4  1903               	skipnz
 15237  06C5  2F1C               	goto	l5384
 15238  06C6  3189  211D  3186   	fcall	_CLOCK_getTime
 15239  06C9  0141               	movlb	1	; select bank1
 15240  06CA  0833               	movf	_lastIncTime^(0+128),w
 15241  06CB  0140               	movlb	0	; select bank0
 15242  06CC  0220               	subwf	?_CLOCK_getTime,w
 15243  06CD  00B7               	movwf	??_CONTROL_DMX
 15244  06CE  0141               	movlb	1	; select bank1
 15245  06CF  0834               	movf	(_lastIncTime+1)^(0+128),w
 15246  06D0  0140               	movlb	0	; select bank0
 15247  06D1  3B21               	subwfb	?_CLOCK_getTime+1,w
 15248  06D2  00B8               	movwf	??_CONTROL_DMX+1
 15249  06D3  0838               	movf	??_CONTROL_DMX+1,w
 15250  06D4  0141               	movlb	1	; select bank1
 15251  06D5  026A               	subwf	(_incInterval+1)^(0+128),w
 15252  06D6  1D03               	skipz
 15253  06D7  2EDC               	goto	u3855
 15254  06D8  0140               	movlb	0	; select bank0
 15255  06D9  0837               	movf	??_CONTROL_DMX,w
 15256  06DA  0141               	movlb	1	; select bank1
 15257  06DB  0269               	subwf	_incInterval^(0+128),w
 15258  06DC                     u3855:	
 15259  06DC  1803               	skipnc
 15260  06DD  2F1C               	goto	l5384
 15261                           
 15262                           ;controller.c: 120:         address_inc();
 15263  06DE  318B  231B  3186   	fcall	_address_inc
 15264  06E1  2EFD               	goto	L12
 15265  06E2                     l5386:	
 15266                           ;controller.c: 122:         if(incInterval > 20){
 15267                           
 15268                           ;controller.c: 121:         lastIncTime = CLOCK_getTime();
 15269                           
 15270  06E2  3189  211D  3186   	fcall	_CLOCK_getTime
 15271  06E5  0141               	movlb	1	; select bank1
 15272  06E6  0833               	movf	_lastIncTime^(0+128),w
 15273  06E7  0140               	movlb	0	; select bank0
 15274  06E8  0220               	subwf	?_CLOCK_getTime,w
 15275  06E9  00B7               	movwf	??_CONTROL_DMX
 15276  06EA  0141               	movlb	1	; select bank1
 15277  06EB  0834               	movf	(_lastIncTime+1)^(0+128),w
 15278  06EC  0140               	movlb	0	; select bank0
 15279  06ED  3B21               	subwfb	?_CLOCK_getTime+1,w
 15280  06EE  00B8               	movwf	??_CONTROL_DMX+1
 15281  06EF  0838               	movf	??_CONTROL_DMX+1,w
 15282  06F0  0141               	movlb	1	; select bank1
 15283  06F1  026A               	subwf	(_incInterval+1)^(0+128),w
 15284  06F2  1D03               	skipz
 15285  06F3  2EF8               	goto	u3885
 15286  06F4  0140               	movlb	0	; select bank0
 15287  06F5  0837               	movf	??_CONTROL_DMX,w
 15288  06F6  0141               	movlb	1	; select bank1
 15289  06F7  0269               	subwf	_incInterval^(0+128),w
 15290  06F8                     u3885:	
 15291  06F8  1803               	skipnc
 15292  06F9  2F24               	goto	l5400
 15293                           
 15294                           ;controller.c: 127:         address_dec();
 15295  06FA  318A  22EB  3186   	fcall	_address_dec
 15296  06FD                     L12:	
 15297                           
 15298                           ;controller.c: 128:         lastIncTime = CLOCK_getTime();
 15299  06FD  3189  211D  3186   	fcall	_CLOCK_getTime
 15300  0700  0140               	movlb	0	; select bank0
 15301  0701  0821               	movf	?_CLOCK_getTime+1,w
 15302  0702  0141               	movlb	1	; select bank1
 15303  0703  00B4               	movwf	(_lastIncTime+1)^(0+128)
 15304  0704  0140               	movlb	0	; select bank0
 15305  0705  0820               	movf	?_CLOCK_getTime,w
 15306  0706  0141               	movlb	1	; select bank1
 15307  0707  00B3               	movwf	_lastIncTime^(0+128)
 15308                           
 15309                           ;controller.c: 129:         if(incInterval > 20){
 15310  0708  086A               	movf	(_incInterval+1)^(0+128),w
 15311  0709  3A80               	xorlw	128
 15312  070A  0140               	movlb	0	; select bank0
 15313  070B  00B7               	movwf	??_CONTROL_DMX
 15314  070C  3080               	movlw	128
 15315  070D  0237               	subwf	??_CONTROL_DMX,w
 15316  070E  1D03               	skipz
 15317  070F  2F13               	goto	u3895
 15318  0710  3015               	movlw	21
 15319  0711  0141               	movlb	1	; select bank1
 15320  0712  0269               	subwf	_incInterval^(0+128),w
 15321  0713                     u3895:	
 15322  0713  1C03               	skipc
 15323  0714  2F1A               	goto	l1042
 15324                           
 15325                           ;controller.c: 123:             incInterval-=1;
 15326  0715  30FF               	movlw	255
 15327  0716  0141               	movlb	1	; select bank1
 15328  0717  07E9               	addwf	_incInterval^(0+128),f
 15329  0718  30FF               	movlw	255
 15330  0719  3DEA               	addwfc	(_incInterval+1)^(0+128),f
 15331  071A                     l1042:	
 15332                           ;controller.c: 124:         }
 15333                           
 15334                           
 15335                           ;controller.c: 125:         return 1;
 15336  071A  3001               	movlw	1
 15337  071B  0008               	return
 15338  071C                     l5384:	
 15339  071C  0141               	movlb	1	; select bank1
 15340  071D  0847               	movf	_down^(0+128),w
 15341  071E  3189  21E8  3186   	fcall	_BUTTONS_isHeld
 15342  0721  3A00               	xorlw	0
 15343  0722  1D03               	btfss	3,2
 15344  0723  2EE2               	goto	l5386
 15345  0724                     l5400:	
 15346  0724  0141               	movlb	1	; select bank1
 15347  0725  0846               	movf	_enter^(0+128),w
 15348  0726  3189  21E8  3186   	fcall	_BUTTONS_isHeld
 15349  0729  3A00               	xorlw	0
 15350  072A  1903               	skipnz
 15351  072B  2F33               	goto	l5408
 15352                           
 15353                           ;controller.c: 134:         address = 1;
 15354  072C  3001               	movlw	1
 15355  072D  0141               	movlb	1	; select bank1
 15356  072E  00EB               	movwf	_address^(0+128)
 15357  072F  3000               	movlw	0
 15358  0730  00EC               	movwf	(_address^(0+128)+1)
 15359                           
 15360                           ;controller.c: 135:         return 1;
 15361  0731  3001               	movlw	1
 15362  0732  0008               	return
 15363  0733                     l5408:	
 15364  0733  0141               	movlb	1	; select bank1
 15365  0734  0843               	movf	_upState^(0+128),w
 15366  0735  1903               	btfsc	3,2
 15367  0736  2F3B               	goto	l5418
 15368                           
 15369                           ;controller.c: 137:         address_inc();
 15370  0737  318B  231B  3186   	fcall	_address_inc
 15371  073A  2F1A               	goto	l1042
 15372  073B                     l5418:	
 15373  073B  0842               	movf	_downState^(0+128),w
 15374  073C  1903               	btfsc	3,2
 15375  073D  2F42               	goto	l5428
 15376                           
 15377                           ;controller.c: 141:         address_dec();
 15378  073E  318A  22EB  3186   	fcall	_address_dec
 15379  0741  2F1A               	goto	l1042
 15380  0742                     l5428:	
 15381  0742  0840               	movf	_enterState^(0+128),w
 15382  0743  1D03               	btfss	3,2
 15383  0744  2F1A               	goto	l1042
 15384  0745  0843               	movf	_upState^(0+128),w
 15385  0746  1D03               	btfss	3,2
 15386  0747  0842               	movf	_downState^(0+128),w
 15387  0748  1D03               	btfss	3,2
 15388  0749  2F5E               	goto	l5446
 15389  074A  0847               	movf	_down^(0+128),w
 15390  074B  3189  21E8  3186   	fcall	_BUTTONS_isHeld
 15391  074E  3A00               	xorlw	0
 15392  074F  1D03               	skipz
 15393  0750  2F5E               	goto	l5446
 15394  0751  0141               	movlb	1	; select bank1
 15395  0752  0848               	movf	_up^(0+128),w
 15396  0753  3189  21E8  3186   	fcall	_BUTTONS_isHeld
 15397  0756  3A00               	xorlw	0
 15398  0757  1D03               	skipz
 15399  0758  2F5E               	goto	l5446
 15400                           
 15401                           ;controller.c: 146:         incInterval = 100;
 15402  0759  3064               	movlw	100
 15403  075A  0141               	movlb	1	; select bank1
 15404  075B  00E9               	movwf	_incInterval^(0+128)
 15405  075C  3000               	movlw	0
 15406  075D  00EA               	movwf	(_incInterval^(0+128)+1)
 15407  075E                     l5446:	
 15408                           ;controller.c: 147:     } else {
 15409                           
 15410                           
 15411                           ;controller.c: 148:         return 0;
 15412  075E  3000               	movlw	0
 15413  075F  0008               	return
 15414  0760                     __end_of_CONTROL_DMX:	
 15415                           
 15416                           	psect	text40
 15417  0B1B                     __ptext40:	
 15418 ;; *************** function _address_inc *****************
 15419 ;; Defined at:
 15420 ;;		line 29 in file "dmx.c"
 15421 ;; Parameters:    Size  Location     Type
 15422 ;;		None
 15423 ;; Auto vars:     Size  Location     Type
 15424 ;;		None
 15425 ;; Return value:  Size  Location     Type
 15426 ;;                  1    wreg      void 
 15427 ;; Registers used:
 15428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15429 ;; Tracked objects:
 15430 ;;		On entry : 0/0
 15431 ;;		On exit  : 0/0
 15432 ;;		Unchanged: 0/0
 15433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15438 ;;Total ram usage:        0 bytes
 15439 ;; Hardware stack levels used:    1
 15440 ;; Hardware stack levels required when called:    9
 15441 ;; This function calls:
 15442 ;;		_TM1650_fastPrintNum
 15443 ;; This function is called by:
 15444 ;;		_CONTROL_DMX
 15445 ;; This function uses a non-reentrant model
 15446 ;;
 15447                           
 15448                           
 15449                           ;psect for function _address_inc
 15450  0B1B                     _address_inc:	
 15451                           
 15452                           ;dmx.c: 31:     if(address == 512)
 15453                           
 15454                           ;incstack = 0
 15455                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15456  0B1B  3002               	movlw	2
 15457  0B1C  0141               	movlb	1	; select bank1
 15458  0B1D  066C               	xorwf	(_address+1)^(0+128),w
 15459  0B1E  046B               	iorwf	_address^(0+128),w
 15460  0B1F  1D03               	btfss	3,2
 15461  0B20  2B26               	goto	l5088
 15462                           
 15463                           ;dmx.c: 32:         address = 1;
 15464  0B21  3001               	movlw	1
 15465  0B22  00EB               	movwf	_address^(0+128)
 15466  0B23  3000               	movlw	0
 15467  0B24  00EC               	movwf	(_address^(0+128)+1)
 15468  0B25  2B2A               	goto	l5090
 15469  0B26                     l5088:	
 15470                           
 15471                           ;dmx.c: 34:         address++;
 15472  0B26  3001               	movlw	1
 15473  0B27  07EB               	addwf	_address^(0+128),f
 15474  0B28  3000               	movlw	0
 15475  0B29  3DEC               	addwfc	(_address+1)^(0+128),f
 15476  0B2A                     l5090:	
 15477                           
 15478                           ;dmx.c: 37:     TM1650_fastPrintNum(address);
 15479  0B2A  086C               	movf	(_address+1)^(0+128),w
 15480  0B2B  0140               	movlb	0	; select bank0
 15481  0B2C  00B5               	movwf	TM1650_fastPrintNum@num+1
 15482  0B2D  0141               	movlb	1	; select bank1
 15483  0B2E  086B               	movf	_address^(0+128),w
 15484  0B2F  0140               	movlb	0	; select bank0
 15485  0B30  00B4               	movwf	TM1650_fastPrintNum@num
 15486  0B31  3185  2553         	fcall	_TM1650_fastPrintNum
 15487  0B33  0008               	return
 15488  0B34                     __end_of_address_inc:	
 15489                           
 15490                           	psect	text41
 15491  0AEB                     __ptext41:	
 15492 ;; *************** function _address_dec *****************
 15493 ;; Defined at:
 15494 ;;		line 43 in file "dmx.c"
 15495 ;; Parameters:    Size  Location     Type
 15496 ;;		None
 15497 ;; Auto vars:     Size  Location     Type
 15498 ;;		None
 15499 ;; Return value:  Size  Location     Type
 15500 ;;                  1    wreg      void 
 15501 ;; Registers used:
 15502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15503 ;; Tracked objects:
 15504 ;;		On entry : 0/0
 15505 ;;		On exit  : 0/0
 15506 ;;		Unchanged: 0/0
 15507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15512 ;;Total ram usage:        0 bytes
 15513 ;; Hardware stack levels used:    1
 15514 ;; Hardware stack levels required when called:    9
 15515 ;; This function calls:
 15516 ;;		_TM1650_fastPrintNum
 15517 ;; This function is called by:
 15518 ;;		_CONTROL_DMX
 15519 ;; This function uses a non-reentrant model
 15520 ;;
 15521                           
 15522                           
 15523                           ;psect for function _address_dec
 15524  0AEB                     _address_dec:	
 15525                           
 15526                           ;dmx.c: 45:     if(address == 1)
 15527                           
 15528                           ;incstack = 0
 15529                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15530  0AEB  0141               	movlb	1	; select bank1
 15531  0AEC  036B               	decf	_address^(0+128),w
 15532  0AED  046C               	iorwf	(_address+1)^(0+128),w
 15533  0AEE  1D03               	btfss	3,2
 15534  0AEF  2AF5               	goto	l5096
 15535                           
 15536                           ;dmx.c: 46:         address = 512;
 15537  0AF0  3000               	movlw	0
 15538  0AF1  00EB               	movwf	_address^(0+128)
 15539  0AF2  3002               	movlw	2
 15540  0AF3  00EC               	movwf	(_address^(0+128)+1)
 15541  0AF4  2AF9               	goto	l5098
 15542  0AF5                     l5096:	
 15543                           
 15544                           ;dmx.c: 48:         address--;
 15545  0AF5  3001               	movlw	1
 15546  0AF6  02EB               	subwf	_address^(0+128),f
 15547  0AF7  3000               	movlw	0
 15548  0AF8  3BEC               	subwfb	(_address+1)^(0+128),f
 15549  0AF9                     l5098:	
 15550                           
 15551                           ;dmx.c: 51:     TM1650_fastPrintNum(address);
 15552  0AF9  086C               	movf	(_address+1)^(0+128),w
 15553  0AFA  0140               	movlb	0	; select bank0
 15554  0AFB  00B5               	movwf	TM1650_fastPrintNum@num+1
 15555  0AFC  0141               	movlb	1	; select bank1
 15556  0AFD  086B               	movf	_address^(0+128),w
 15557  0AFE  0140               	movlb	0	; select bank0
 15558  0AFF  00B4               	movwf	TM1650_fastPrintNum@num
 15559  0B00  3185  2553         	fcall	_TM1650_fastPrintNum
 15560  0B02  0008               	return
 15561  0B03                     __end_of_address_dec:	
 15562                           
 15563                           	psect	text42
 15564  0553                     __ptext42:	
 15565 ;; *************** function _TM1650_fastPrintNum *****************
 15566 ;; Defined at:
 15567 ;;		line 101 in file "tm1650.c"
 15568 ;; Parameters:    Size  Location     Type
 15569 ;;  num             2   20[BANK0 ] unsigned short 
 15570 ;; Auto vars:     Size  Location     Type
 15571 ;;		None
 15572 ;; Return value:  Size  Location     Type
 15573 ;;                  1    wreg      void 
 15574 ;; Registers used:
 15575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15576 ;; Tracked objects:
 15577 ;;		On entry : 0/0
 15578 ;;		On exit  : 0/0
 15579 ;;		Unchanged: 0/0
 15580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15584 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15585 ;;Total ram usage:        3 bytes
 15586 ;; Hardware stack levels used:    1
 15587 ;; Hardware stack levels required when called:    8
 15588 ;; This function calls:
 15589 ;;		___lwdiv
 15590 ;;		___lwmod
 15591 ;;		_writeData
 15592 ;; This function is called by:
 15593 ;;		_CONTROLLER_task
 15594 ;;		_DMX_init
 15595 ;;		_address_inc
 15596 ;;		_address_dec
 15597 ;; This function uses a non-reentrant model
 15598 ;;
 15599                           
 15600                           
 15601                           ;psect for function _TM1650_fastPrintNum
 15602  0553                     _TM1650_fastPrintNum:	
 15603                           
 15604                           ;tm1650.c: 103:     if(num > 9999){
 15605                           
 15606                           ;incstack = 0
 15607                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15608  0553  3027               	movlw	39
 15609  0554  0140               	movlb	0	; select bank0
 15610  0555  0235               	subwf	TM1650_fastPrintNum@num+1,w
 15611  0556  3010               	movlw	16
 15612  0557  1903               	skipnz
 15613  0558  0234               	subwf	TM1650_fastPrintNum@num,w
 15614  0559  1C03               	skipc
 15615  055A  2D7E               	goto	l5038
 15616                           
 15617                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 15618  055B  3079               	movlw	121
 15619  055C  00B6               	movwf	??_TM1650_fastPrintNum
 15620  055D  0836               	movf	??_TM1650_fastPrintNum,w
 15621  055E  00AE               	movwf	writeData@data
 15622  055F  3034               	movlw	52
 15623  0560  318B  2350  3185   	fcall	_writeData
 15624                           
 15625                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 15626  0563  3079               	movlw	121
 15627  0564  0140               	movlb	0	; select bank0
 15628  0565  00B6               	movwf	??_TM1650_fastPrintNum
 15629  0566  0836               	movf	??_TM1650_fastPrintNum,w
 15630  0567  00AE               	movwf	writeData@data
 15631  0568  3035               	movlw	53
 15632  0569  318B  2350  3185   	fcall	_writeData
 15633                           
 15634                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 15635  056C  3079               	movlw	121
 15636  056D  0140               	movlb	0	; select bank0
 15637  056E  00B6               	movwf	??_TM1650_fastPrintNum
 15638  056F  0836               	movf	??_TM1650_fastPrintNum,w
 15639  0570  00AE               	movwf	writeData@data
 15640  0571  3036               	movlw	54
 15641  0572  318B  2350  3185   	fcall	_writeData
 15642                           
 15643                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 15644  0575  3079               	movlw	121
 15645  0576  0140               	movlb	0	; select bank0
 15646  0577  00B6               	movwf	??_TM1650_fastPrintNum
 15647  0578  0836               	movf	??_TM1650_fastPrintNum,w
 15648  0579  00AE               	movwf	writeData@data
 15649  057A  3037               	movlw	55
 15650  057B  318B  2350         	fcall	_writeData
 15651  057D  0008               	return
 15652  057E                     l5038:	
 15653                           
 15654                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 15655  057E  300A               	movlw	10
 15656  057F  00A8               	movwf	___lwmod@divisor
 15657  0580  3000               	movlw	0
 15658  0581  00A9               	movwf	___lwmod@divisor+1
 15659  0582  0835               	movf	TM1650_fastPrintNum@num+1,w
 15660  0583  00AB               	movwf	___lwmod@dividend+1
 15661  0584  0834               	movf	TM1650_fastPrintNum@num,w
 15662  0585  00AA               	movwf	___lwmod@dividend
 15663  0586  318C  24E6  3185   	fcall	___lwmod
 15664  0589  0140               	movlb	0	; select bank0
 15665  058A  0829               	movf	?___lwmod+1,w
 15666  058B  0085               	movwf	5
 15667  058C  0828               	movf	?___lwmod,w
 15668  058D  0084               	movwf	4
 15669  058E  3070               	movlw	low ((_charTable+16)| (0+32768))
 15670  058F  0784               	addwf	4,f
 15671  0590  3087               	movlw	high ((_charTable+16)| (0+32768))
 15672  0591  3D85               	addwfc	5,f
 15673  0592  0800               	movf	0,w	;code access
 15674  0593  00B6               	movwf	??_TM1650_fastPrintNum
 15675  0594  0836               	movf	??_TM1650_fastPrintNum,w
 15676  0595  00AE               	movwf	writeData@data
 15677  0596  3037               	movlw	55
 15678  0597  318B  2350  3185   	fcall	_writeData
 15679                           
 15680                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 15681  059A  300A               	movlw	10
 15682  059B  0140               	movlb	0	; select bank0
 15683  059C  00A8               	movwf	___lwmod@divisor
 15684  059D  3000               	movlw	0
 15685  059E  00A9               	movwf	___lwmod@divisor+1
 15686  059F  300A               	movlw	10
 15687  05A0  00A0               	movwf	___lwdiv@divisor
 15688  05A1  3000               	movlw	0
 15689  05A2  00A1               	movwf	___lwdiv@divisor+1
 15690  05A3  0835               	movf	TM1650_fastPrintNum@num+1,w
 15691  05A4  00A3               	movwf	___lwdiv@dividend+1
 15692  05A5  0834               	movf	TM1650_fastPrintNum@num,w
 15693  05A6  00A2               	movwf	___lwdiv@dividend
 15694  05A7  318D  25D9  3185   	fcall	___lwdiv
 15695  05AA  0140               	movlb	0	; select bank0
 15696  05AB  0821               	movf	?___lwdiv+1,w
 15697  05AC  00AB               	movwf	___lwmod@dividend+1
 15698  05AD  0820               	movf	?___lwdiv,w
 15699  05AE  00AA               	movwf	___lwmod@dividend
 15700  05AF  318C  24E6  3185   	fcall	___lwmod
 15701  05B2  0140               	movlb	0	; select bank0
 15702  05B3  0829               	movf	?___lwmod+1,w
 15703  05B4  0085               	movwf	5
 15704  05B5  0828               	movf	?___lwmod,w
 15705  05B6  0084               	movwf	4
 15706  05B7  3070               	movlw	low ((_charTable+16)| (0+32768))
 15707  05B8  0784               	addwf	4,f
 15708  05B9  3087               	movlw	high ((_charTable+16)| (0+32768))
 15709  05BA  3D85               	addwfc	5,f
 15710  05BB  0800               	movf	0,w	;code access
 15711  05BC  00B6               	movwf	??_TM1650_fastPrintNum
 15712  05BD  0836               	movf	??_TM1650_fastPrintNum,w
 15713  05BE  00AE               	movwf	writeData@data
 15714  05BF  3036               	movlw	54
 15715  05C0  318B  2350  3185   	fcall	_writeData
 15716                           
 15717                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 15718  05C3  300A               	movlw	10
 15719  05C4  0140               	movlb	0	; select bank0
 15720  05C5  00A8               	movwf	___lwmod@divisor
 15721  05C6  3000               	movlw	0
 15722  05C7  00A9               	movwf	___lwmod@divisor+1
 15723  05C8  3064               	movlw	100
 15724  05C9  00A0               	movwf	___lwdiv@divisor
 15725  05CA  3000               	movlw	0
 15726  05CB  00A1               	movwf	___lwdiv@divisor+1
 15727  05CC  0835               	movf	TM1650_fastPrintNum@num+1,w
 15728  05CD  00A3               	movwf	___lwdiv@dividend+1
 15729  05CE  0834               	movf	TM1650_fastPrintNum@num,w
 15730  05CF  00A2               	movwf	___lwdiv@dividend
 15731  05D0  318D  25D9  3185   	fcall	___lwdiv
 15732  05D3  0140               	movlb	0	; select bank0
 15733  05D4  0821               	movf	?___lwdiv+1,w
 15734  05D5  00AB               	movwf	___lwmod@dividend+1
 15735  05D6  0820               	movf	?___lwdiv,w
 15736  05D7  00AA               	movwf	___lwmod@dividend
 15737  05D8  318C  24E6  3185   	fcall	___lwmod
 15738  05DB  0140               	movlb	0	; select bank0
 15739  05DC  0829               	movf	?___lwmod+1,w
 15740  05DD  0085               	movwf	5
 15741  05DE  0828               	movf	?___lwmod,w
 15742  05DF  0084               	movwf	4
 15743  05E0  3070               	movlw	low ((_charTable+16)| (0+32768))
 15744  05E1  0784               	addwf	4,f
 15745  05E2  3087               	movlw	high ((_charTable+16)| (0+32768))
 15746  05E3  3D85               	addwfc	5,f
 15747  05E4  0800               	movf	0,w	;code access
 15748  05E5  00B6               	movwf	??_TM1650_fastPrintNum
 15749  05E6  0836               	movf	??_TM1650_fastPrintNum,w
 15750  05E7  00AE               	movwf	writeData@data
 15751  05E8  3035               	movlw	53
 15752  05E9  318B  2350  3185   	fcall	_writeData
 15753                           
 15754                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 15755  05EC  300A               	movlw	10
 15756  05ED  0140               	movlb	0	; select bank0
 15757  05EE  00A8               	movwf	___lwmod@divisor
 15758  05EF  3000               	movlw	0
 15759  05F0  00A9               	movwf	___lwmod@divisor+1
 15760  05F1  30E8               	movlw	232
 15761  05F2  00A0               	movwf	___lwdiv@divisor
 15762  05F3  3003               	movlw	3
 15763  05F4  00A1               	movwf	___lwdiv@divisor+1
 15764  05F5  0835               	movf	TM1650_fastPrintNum@num+1,w
 15765  05F6  00A3               	movwf	___lwdiv@dividend+1
 15766  05F7  0834               	movf	TM1650_fastPrintNum@num,w
 15767  05F8  00A2               	movwf	___lwdiv@dividend
 15768  05F9  318D  25D9  3185   	fcall	___lwdiv
 15769  05FC  0140               	movlb	0	; select bank0
 15770  05FD  0821               	movf	?___lwdiv+1,w
 15771  05FE  00AB               	movwf	___lwmod@dividend+1
 15772  05FF  0820               	movf	?___lwdiv,w
 15773  0600  00AA               	movwf	___lwmod@dividend
 15774  0601  318C  24E6  3185   	fcall	___lwmod
 15775  0604  0140               	movlb	0	; select bank0
 15776  0605  0829               	movf	?___lwmod+1,w
 15777  0606  0085               	movwf	5
 15778  0607  0828               	movf	?___lwmod,w
 15779  0608  0084               	movwf	4
 15780  0609  3070               	movlw	low ((_charTable+16)| (0+32768))
 15781  060A  0784               	addwf	4,f
 15782  060B  3087               	movlw	high ((_charTable+16)| (0+32768))
 15783  060C  3D85               	addwfc	5,f
 15784  060D  0800               	movf	0,w	;code access
 15785  060E  00B6               	movwf	??_TM1650_fastPrintNum
 15786  060F  0836               	movf	??_TM1650_fastPrintNum,w
 15787  0610  00AE               	movwf	writeData@data
 15788  0611  3034               	movlw	52
 15789  0612  318B  2350         	fcall	_writeData
 15790  0614  0008               	return
 15791  0615                     __end_of_TM1650_fastPrintNum:	
 15792                           
 15793                           	psect	text43
 15794  0B50                     __ptext43:	
 15795 ;; *************** function _writeData *****************
 15796 ;; Defined at:
 15797 ;;		line 31 in file "tm1650.c"
 15798 ;; Parameters:    Size  Location     Type
 15799 ;;  address         1    wreg     unsigned char 
 15800 ;;  data            1   14[BANK0 ] unsigned char 
 15801 ;; Auto vars:     Size  Location     Type
 15802 ;;  address         1   18[BANK0 ] unsigned char 
 15803 ;;  status          1   19[BANK0 ] enum E11370
 15804 ;; Return value:  Size  Location     Type
 15805 ;;                  1    wreg      void 
 15806 ;; Registers used:
 15807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15808 ;; Tracked objects:
 15809 ;;		On entry : 0/0
 15810 ;;		On exit  : 0/0
 15811 ;;		Unchanged: 0/0
 15812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15813 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15815 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15816 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15817 ;;Total ram usage:        6 bytes
 15818 ;; Hardware stack levels used:    1
 15819 ;; Hardware stack levels required when called:    7
 15820 ;; This function calls:
 15821 ;;		_I2C1_MasterWrite
 15822 ;; This function is called by:
 15823 ;;		_TM1650_enable
 15824 ;;		_TM1650_setDigit
 15825 ;;		_TM1650_fastPrintNum
 15826 ;;		_TM1650_brightness
 15827 ;; This function uses a non-reentrant model
 15828 ;;
 15829                           
 15830                           
 15831                           ;psect for function _writeData
 15832  0B50                     _writeData:	
 15833                           
 15834                           ;incstack = 0
 15835                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15836                           ;writeData@address stored from wreg
 15837  0B50  0140               	movlb	0	; select bank0
 15838  0B51  00B2               	movwf	writeData@address
 15839                           
 15840                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 15841  0B52  3002               	movlw	2
 15842  0B53  00AF               	movwf	??_writeData
 15843  0B54  082F               	movf	??_writeData,w
 15844  0B55  00B3               	movwf	writeData@status
 15845                           
 15846                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 15847  0B56  01A7               	clrf	I2C1_MasterWrite@length
 15848  0B57  0AA7               	incf	I2C1_MasterWrite@length,f
 15849  0B58  0832               	movf	writeData@address,w
 15850  0B59  00AF               	movwf	??_writeData
 15851  0B5A  01B0               	clrf	??_writeData+1
 15852  0B5B  082F               	movf	??_writeData,w
 15853  0B5C  00A8               	movwf	I2C1_MasterWrite@address
 15854  0B5D  0830               	movf	??_writeData+1,w
 15855  0B5E  00A9               	movwf	I2C1_MasterWrite@address+1
 15856  0B5F  3033               	movlw	(low (writeData@status| 0))& (0+255)
 15857  0B60  00B1               	movwf	??_writeData+2
 15858  0B61  0831               	movf	??_writeData+2,w
 15859  0B62  00AA               	movwf	I2C1_MasterWrite@pflag
 15860  0B63  302E               	movlw	(low (writeData@data| 0))& (0+255)
 15861  0B64  318C  24BC  318B   	fcall	_I2C1_MasterWrite
 15862  0B67                     l4914:	
 15863                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 15864                           
 15865  0B67  3002               	movlw	2
 15866  0B68  0140               	movlb	0	; select bank0
 15867  0B69  0633               	xorwf	writeData@status,w
 15868  0B6A  1D03               	btfss	3,2
 15869  0B6B  0008               	return
 15870  0B6C  2B67               	goto	l4914
 15871  0B6D                     __end_of_writeData:	
 15872                           
 15873                           	psect	text44
 15874  0CBC                     __ptext44:	
 15875 ;; *************** function _I2C1_MasterWrite *****************
 15876 ;; Defined at:
 15877 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 15878 ;; Parameters:    Size  Location     Type
 15879 ;;  pdata           1    wreg     PTR unsigned char 
 15880 ;;		 -> writeData@data(1), 
 15881 ;;  length          1    7[BANK0 ] unsigned char 
 15882 ;;  address         2    8[BANK0 ] unsigned short 
 15883 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 15884 ;;		 -> writeData@status(1), 
 15885 ;; Auto vars:     Size  Location     Type
 15886 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 15887 ;;		 -> writeData@data(1), 
 15888 ;; Return value:  Size  Location     Type
 15889 ;;                  1    wreg      void 
 15890 ;; Registers used:
 15891 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15892 ;; Tracked objects:
 15893 ;;		On entry : 0/0
 15894 ;;		On exit  : 0/0
 15895 ;;		Unchanged: 0/0
 15896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15900 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15901 ;;Total ram usage:        7 bytes
 15902 ;; Hardware stack levels used:    1
 15903 ;; Hardware stack levels required when called:    6
 15904 ;; This function calls:
 15905 ;;		_I2C1_MasterTRBInsert
 15906 ;;		_I2C1_MasterWriteTRBBuild
 15907 ;; This function is called by:
 15908 ;;		_writeData
 15909 ;; This function uses a non-reentrant model
 15910 ;;
 15911                           
 15912                           
 15913                           ;psect for function _I2C1_MasterWrite
 15914  0CBC                     _I2C1_MasterWrite:	
 15915                           
 15916                           ;incstack = 0
 15917                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15918                           ;I2C1_MasterWrite@pdata stored from wreg
 15919  0CBC  0140               	movlb	0	; select bank0
 15920  0CBD  00AD               	movwf	I2C1_MasterWrite@pdata
 15921                           
 15922                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 15923  0CBE  0141               	movlb	1	; select bank1
 15924  0CBF  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 15925  0CC0  2CDF               	goto	l4908
 15926                           
 15927                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 15928  0CC1  0140               	movlb	0	; select bank0
 15929  0CC2  082D               	movf	I2C1_MasterWrite@pdata,w
 15930  0CC3  00AB               	movwf	??_I2C1_MasterWrite
 15931  0CC4  082B               	movf	??_I2C1_MasterWrite,w
 15932  0CC5  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 15933  0CC6  0827               	movf	I2C1_MasterWrite@length,w
 15934  0CC7  00AC               	movwf	??_I2C1_MasterWrite+1
 15935  0CC8  082C               	movf	??_I2C1_MasterWrite+1,w
 15936  0CC9  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 15937  0CCA  0829               	movf	I2C1_MasterWrite@address+1,w
 15938  0CCB  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 15939  0CCC  0828               	movf	I2C1_MasterWrite@address,w
 15940  0CCD  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 15941  0CCE  305C               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 15942  0CCF  318C  2405  318C   	fcall	_I2C1_MasterWriteTRBBuild
 15943                           
 15944                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 15945  0CD2  305C               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 15946  0CD3  0140               	movlb	0	; select bank0
 15947  0CD4  00AB               	movwf	??_I2C1_MasterWrite
 15948  0CD5  082B               	movf	??_I2C1_MasterWrite,w
 15949  0CD6  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 15950  0CD7  082A               	movf	I2C1_MasterWrite@pflag,w
 15951  0CD8  00AC               	movwf	??_I2C1_MasterWrite+1
 15952  0CD9  082C               	movf	??_I2C1_MasterWrite+1,w
 15953  0CDA  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 15954  0CDB  3001               	movlw	1
 15955  0CDC  318E  26FF         	fcall	_I2C1_MasterTRBInsert
 15956                           
 15957                           ;mcc_generated_files/i2c1.c: 613:     }
 15958  0CDE  0008               	return
 15959  0CDF                     l4908:	
 15960                           
 15961                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 15962  0CDF  0140               	movlb	0	; select bank0
 15963  0CE0  082A               	movf	I2C1_MasterWrite@pflag,w
 15964  0CE1  0086               	movwf	6
 15965  0CE2  0187               	clrf	7
 15966  0CE3  0181               	clrf	1
 15967  0CE4  0A81               	incf	1,f
 15968  0CE5  0008               	return
 15969  0CE6                     __end_of_I2C1_MasterWrite:	
 15970                           
 15971                           	psect	text45
 15972  0C05                     __ptext45:	
 15973 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 15974 ;; Defined at:
 15975 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 15976 ;; Parameters:    Size  Location     Type
 15977 ;;  ptrb            1    wreg     PTR struct .
 15978 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 15979 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 15980 ;;		 -> writeData@data(1), 
 15981 ;;  length          1    1[BANK0 ] unsigned char 
 15982 ;;  address         2    2[BANK0 ] unsigned short 
 15983 ;; Auto vars:     Size  Location     Type
 15984 ;;  ptrb            1    6[BANK0 ] PTR struct .
 15985 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 15986 ;; Return value:  Size  Location     Type
 15987 ;;                  1    wreg      void 
 15988 ;; Registers used:
 15989 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15990 ;; Tracked objects:
 15991 ;;		On entry : 0/0
 15992 ;;		On exit  : 0/0
 15993 ;;		Unchanged: 0/0
 15994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15998 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15999 ;;Total ram usage:        7 bytes
 16000 ;; Hardware stack levels used:    1
 16001 ;; Hardware stack levels required when called:    4
 16002 ;; This function calls:
 16003 ;;		Nothing
 16004 ;; This function is called by:
 16005 ;;		_I2C1_MasterWrite
 16006 ;; This function uses a non-reentrant model
 16007 ;;
 16008                           
 16009                           
 16010                           ;psect for function _I2C1_MasterWriteTRBBuild
 16011  0C05                     _I2C1_MasterWriteTRBBuild:	
 16012                           
 16013                           ;incstack = 0
 16014                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 16015                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 16016  0C05  0140               	movlb	0	; select bank0
 16017  0C06  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 16018                           
 16019                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 16020  0C07  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 16021  0C08  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 16022  0C09  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 16023  0C0A  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 16024  0C0B  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 16025  0C0C  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 16026  0C0D  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 16027  0C0E  0086               	movwf	6
 16028  0C0F  3001               	movlw	1	; select bank2/3
 16029  0C10  0087               	movwf	7
 16030  0C11  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 16031  0C12  3FC0               	movwi [0]fsr1
 16032  0C13  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 16033  0C14  3FC1               	movwi [1]fsr1
 16034                           
 16035                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 16036  0C15  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 16037  0C16  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 16038  0C17  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 16039  0C18  3E02               	addlw	2
 16040  0C19  0086               	movwf	6
 16041  0C1A  3001               	movlw	1	; select bank2/3
 16042  0C1B  0087               	movwf	7
 16043  0C1C  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 16044  0C1D  0081               	movwf	1
 16045                           
 16046                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 16047  0C1E  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 16048  0C1F  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 16049  0C20  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 16050  0C21  3E03               	addlw	3
 16051  0C22  0086               	movwf	6
 16052  0C23  3001               	movlw	1	; select bank2/3
 16053  0C24  0087               	movwf	7
 16054  0C25  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 16055  0C26  0081               	movwf	1
 16056  0C27  0008               	return
 16057  0C28                     __end_of_I2C1_MasterWriteTRBBuild:	
 16058                           
 16059                           	psect	text46
 16060  0EFF                     __ptext46:	
 16061 ;; *************** function _I2C1_MasterTRBInsert *****************
 16062 ;; Defined at:
 16063 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 16064 ;; Parameters:    Size  Location     Type
 16065 ;;  count           1    wreg     unsigned char 
 16066 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 16067 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 16068 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 16069 ;;		 -> writeData@status(1), 
 16070 ;; Auto vars:     Size  Location     Type
 16071 ;;  count           1    3[BANK0 ] unsigned char 
 16072 ;; Return value:  Size  Location     Type
 16073 ;;                  1    wreg      void 
 16074 ;; Registers used:
 16075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16076 ;; Tracked objects:
 16077 ;;		On entry : 0/0
 16078 ;;		On exit  : 0/0
 16079 ;;		Unchanged: 0/0
 16080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16081 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16083 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16084 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16085 ;;Total ram usage:        4 bytes
 16086 ;; Hardware stack levels used:    1
 16087 ;; Hardware stack levels required when called:    5
 16088 ;; This function calls:
 16089 ;;		_I2C1_WaitForLastPacketToComplete
 16090 ;; This function is called by:
 16091 ;;		_I2C1_MasterWrite
 16092 ;;		_I2C1_MasterRead
 16093 ;; This function uses a non-reentrant model
 16094 ;;
 16095                           
 16096                           
 16097                           ;psect for function _I2C1_MasterTRBInsert
 16098  0EFF                     _I2C1_MasterTRBInsert:	
 16099                           
 16100                           ;incstack = 0
 16101                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16102                           ;I2C1_MasterTRBInsert@count stored from wreg
 16103  0EFF  0140               	movlb	0	; select bank0
 16104  0F00  00A3               	movwf	I2C1_MasterTRBInsert@count
 16105                           
 16106                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 16107  0F01  0141               	movlb	1	; select bank1
 16108  0F02  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 16109  0F03  2F3E               	goto	l4896
 16110                           
 16111                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 16112  0F04  3002               	movlw	2
 16113  0F05  0140               	movlb	0	; select bank0
 16114  0F06  00A2               	movwf	??_I2C1_MasterTRBInsert
 16115  0F07  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 16116  0F08  0086               	movwf	6
 16117  0F09  0187               	clrf	7
 16118  0F0A  0822               	movf	??_I2C1_MasterTRBInsert,w
 16119  0F0B  0081               	movwf	1
 16120                           
 16121                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 16122  0F0C  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 16123  0F0D  00A2               	movwf	??_I2C1_MasterTRBInsert
 16124  0F0E  0141               	movlb	1	; select bank1
 16125  0F0F  0A20               	incf	_i2c1_object^(0+128),w
 16126  0F10  0086               	movwf	6
 16127  0F11  0187               	clrf	7
 16128  0F12  0140               	movlb	0	; select bank0
 16129  0F13  0822               	movf	??_I2C1_MasterTRBInsert,w
 16130  0F14  0081               	movwf	1
 16131                           
 16132                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 16133  0F15  0823               	movf	I2C1_MasterTRBInsert@count,w
 16134  0F16  00A2               	movwf	??_I2C1_MasterTRBInsert
 16135  0F17  0141               	movlb	1	; select bank1
 16136  0F18  0820               	movf	_i2c1_object^(0+128),w
 16137  0F19  0086               	movwf	6
 16138  0F1A  0187               	clrf	7
 16139  0F1B  0140               	movlb	0	; select bank0
 16140  0F1C  0822               	movf	??_I2C1_MasterTRBInsert,w
 16141  0F1D  0081               	movwf	1
 16142                           
 16143                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 16144  0F1E  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 16145  0F1F  00A2               	movwf	??_I2C1_MasterTRBInsert
 16146  0F20  0141               	movlb	1	; select bank1
 16147  0F21  0820               	movf	_i2c1_object^(0+128),w
 16148  0F22  3E02               	addlw	2
 16149  0F23  0086               	movwf	6
 16150  0F24  0187               	clrf	7
 16151  0F25  0140               	movlb	0	; select bank0
 16152  0F26  0822               	movf	??_I2C1_MasterTRBInsert,w
 16153  0F27  0081               	movwf	1
 16154                           
 16155                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 16156  0F28  3003               	movlw	3
 16157  0F29  00A2               	movwf	??_I2C1_MasterTRBInsert
 16158  0F2A  0822               	movf	??_I2C1_MasterTRBInsert,w
 16159  0F2B  0141               	movlb	1	; select bank1
 16160  0F2C  07A0               	addwf	_i2c1_object^(0+128),f
 16161                           
 16162                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 16163  0F2D  0820               	movf	_i2c1_object^(0+128),w
 16164  0F2E  3AD5               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 16165  0F2F  1D03               	skipz
 16166  0F30  2F37               	goto	l4892
 16167                           
 16168                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 16169  0F31  30D2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 16170  0F32  0140               	movlb	0	; select bank0
 16171  0F33  00A2               	movwf	??_I2C1_MasterTRBInsert
 16172  0F34  0822               	movf	??_I2C1_MasterTRBInsert,w
 16173  0F35  0141               	movlb	1	; select bank1
 16174  0F36  00A0               	movwf	_i2c1_object^(0+128)
 16175  0F37                     l4892:	
 16176                           
 16177                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 16178  0F37  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 16179                           
 16180                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 16181  0F38  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 16182  0F39  0620               	xorwf	_i2c1_object^(0+128),w
 16183  0F3A  1D03               	skipz
 16184  0F3B  2F44               	goto	l4898
 16185                           
 16186                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 16187  0F3C  1422               	bsf	(_i2c1_object^(0+128)+2),0
 16188  0F3D  2F44               	goto	l4898
 16189  0F3E                     l4896:	
 16190                           
 16191                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 16192  0F3E  0140               	movlb	0	; select bank0
 16193  0F3F  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 16194  0F40  0086               	movwf	6
 16195  0F41  0187               	clrf	7
 16196  0F42  0181               	clrf	1
 16197  0F43  0A81               	incf	1,f
 16198  0F44                     l4898:	
 16199                           
 16200                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 16201  0F44  0140               	movlb	0	; select bank0
 16202  0F45  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 16203  0F46  0086               	movwf	6
 16204  0F47  0187               	clrf	7
 16205  0F48  3002               	movlw	2
 16206  0F49  0601               	xorwf	1,w
 16207  0F4A  1D03               	btfss	3,2
 16208  0F4B  0008               	return
 16209                           
 16210                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 16211  0F4C  3188  20F5         	fcall	_I2C1_WaitForLastPacketToComplete
 16212                           
 16213                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 16214  0F4E  014E               	movlb	14	; select bank14
 16215  0F4F  140F               	bsf	15,0	;volatile
 16216  0F50  0008               	return
 16217  0F51                     __end_of_I2C1_MasterTRBInsert:	
 16218                           
 16219                           	psect	text47
 16220  08F5                     __ptext47:	
 16221 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 16222 ;; Defined at:
 16223 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 16224 ;; Parameters:    Size  Location     Type
 16225 ;;		None
 16226 ;; Auto vars:     Size  Location     Type
 16227 ;;		None
 16228 ;; Return value:  Size  Location     Type
 16229 ;;                  1    wreg      void 
 16230 ;; Registers used:
 16231 ;;		wreg, status,2, status,0
 16232 ;; Tracked objects:
 16233 ;;		On entry : 0/0
 16234 ;;		On exit  : 0/0
 16235 ;;		Unchanged: 0/0
 16236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16241 ;;Total ram usage:        0 bytes
 16242 ;; Hardware stack levels used:    1
 16243 ;; Hardware stack levels required when called:    4
 16244 ;; This function calls:
 16245 ;;		Nothing
 16246 ;; This function is called by:
 16247 ;;		_I2C1_MasterTRBInsert
 16248 ;; This function uses a non-reentrant model
 16249 ;;
 16250                           
 16251                           
 16252                           ;psect for function _I2C1_WaitForLastPacketToComplete
 16253  08F5                     _I2C1_WaitForLastPacketToComplete:	
 16254  08F5                     l4880:	
 16255                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 16256                           
 16257                           ;incstack = 0
 16258                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 16259                           
 16260                           
 16261                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 16262  08F5  0141               	movlb	1	; select bank1
 16263  08F6  084F               	movf	_i2c1_state^(0+128),w
 16264  08F7  1903               	btfsc	3,2
 16265  08F8  0008               	return
 16266  08F9  28F5               	goto	l4880
 16267  08FA                     __end_of_I2C1_WaitForLastPacketToComplete:	
 16268                           
 16269                           	psect	text48
 16270  0CE6                     __ptext48:	
 16271 ;; *************** function ___lwmod *****************
 16272 ;; Defined at:
 16273 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 16274 ;; Parameters:    Size  Location     Type
 16275 ;;  divisor         2    8[BANK0 ] unsigned int 
 16276 ;;  dividend        2   10[BANK0 ] unsigned int 
 16277 ;; Auto vars:     Size  Location     Type
 16278 ;;  counter         1   13[BANK0 ] unsigned char 
 16279 ;; Return value:  Size  Location     Type
 16280 ;;                  2    8[BANK0 ] unsigned int 
 16281 ;; Registers used:
 16282 ;;		wreg, status,2, status,0
 16283 ;; Tracked objects:
 16284 ;;		On entry : 0/0
 16285 ;;		On exit  : 0/0
 16286 ;;		Unchanged: 0/0
 16287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16288 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16290 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16291 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16292 ;;Total ram usage:        6 bytes
 16293 ;; Hardware stack levels used:    1
 16294 ;; Hardware stack levels required when called:    4
 16295 ;; This function calls:
 16296 ;;		Nothing
 16297 ;; This function is called by:
 16298 ;;		_TM1650_fastPrintNum
 16299 ;; This function uses a non-reentrant model
 16300 ;;
 16301                           
 16302                           
 16303                           ;psect for function ___lwmod
 16304  0CE6                     ___lwmod:	
 16305                           
 16306                           ;incstack = 0
 16307                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16308  0CE6  0140               	movlb	0	; select bank0
 16309  0CE7  0828               	movf	___lwmod@divisor,w
 16310  0CE8  0429               	iorwf	___lwmod@divisor+1,w
 16311  0CE9  1903               	btfsc	3,2
 16312  0CEA  2D0E               	goto	l3700
 16313  0CEB  01AD               	clrf	___lwmod@counter
 16314  0CEC  0AAD               	incf	___lwmod@counter,f
 16315  0CED                     l3690:	
 16316  0CED  1BA9               	btfsc	___lwmod@divisor+1,7
 16317  0CEE  2CF9               	goto	l3692
 16318  0CEF  3001               	movlw	1
 16319  0CF0                     u2015:	
 16320  0CF0  35A8               	lslf	___lwmod@divisor,f
 16321  0CF1  0DA9               	rlf	___lwmod@divisor+1,f
 16322  0CF2  0B89               	decfsz	9,f
 16323  0CF3  2CF0               	goto	u2015
 16324  0CF4  3001               	movlw	1
 16325  0CF5  00AC               	movwf	??___lwmod
 16326  0CF6  082C               	movf	??___lwmod,w
 16327  0CF7  07AD               	addwf	___lwmod@counter,f
 16328  0CF8  2CED               	goto	l3690
 16329  0CF9                     l3692:	
 16330  0CF9  0829               	movf	___lwmod@divisor+1,w
 16331  0CFA  022B               	subwf	___lwmod@dividend+1,w
 16332  0CFB  1D03               	skipz
 16333  0CFC  2CFF               	goto	u2035
 16334  0CFD  0828               	movf	___lwmod@divisor,w
 16335  0CFE  022A               	subwf	___lwmod@dividend,w
 16336  0CFF                     u2035:	
 16337  0CFF  1C03               	skipc
 16338  0D00  2D05               	goto	l3696
 16339  0D01  0828               	movf	___lwmod@divisor,w
 16340  0D02  02AA               	subwf	___lwmod@dividend,f
 16341  0D03  0829               	movf	___lwmod@divisor+1,w
 16342  0D04  3BAB               	subwfb	___lwmod@dividend+1,f
 16343  0D05                     l3696:	
 16344  0D05  3001               	movlw	1
 16345  0D06                     u2045:	
 16346  0D06  36A9               	lsrf	___lwmod@divisor+1,f
 16347  0D07  0CA8               	rrf	___lwmod@divisor,f
 16348  0D08  0B89               	decfsz	9,f
 16349  0D09  2D06               	goto	u2045
 16350  0D0A  3001               	movlw	1
 16351  0D0B  02AD               	subwf	___lwmod@counter,f
 16352  0D0C  1D03               	btfss	3,2
 16353  0D0D  2CF9               	goto	l3692
 16354  0D0E                     l3700:	
 16355  0D0E  082B               	movf	___lwmod@dividend+1,w
 16356  0D0F  00A9               	movwf	?___lwmod+1
 16357  0D10  082A               	movf	___lwmod@dividend,w
 16358  0D11  00A8               	movwf	?___lwmod
 16359  0D12  0008               	return
 16360  0D13                     __end_of___lwmod:	
 16361                           
 16362                           	psect	text49
 16363  09E8                     __ptext49:	
 16364 ;; *************** function _BUTTONS_isHeld *****************
 16365 ;; Defined at:
 16366 ;;		line 106 in file "buttons.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;  button          1    wreg     PTR struct .
 16369 ;;		 -> buttons(32), NULL(0), 
 16370 ;; Auto vars:     Size  Location     Type
 16371 ;;  button          1    0[BANK0 ] PTR struct .
 16372 ;;		 -> buttons(32), NULL(0), 
 16373 ;; Return value:  Size  Location     Type
 16374 ;;                  1    wreg      _Bool 
 16375 ;; Registers used:
 16376 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16377 ;; Tracked objects:
 16378 ;;		On entry : 0/0
 16379 ;;		On exit  : 0/0
 16380 ;;		Unchanged: 0/0
 16381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16383 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16385 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16386 ;;Total ram usage:        1 bytes
 16387 ;; Hardware stack levels used:    1
 16388 ;; Hardware stack levels required when called:    4
 16389 ;; This function calls:
 16390 ;;		Nothing
 16391 ;; This function is called by:
 16392 ;;		_CONTROL_DMX
 16393 ;; This function uses a non-reentrant model
 16394 ;;
 16395                           
 16396                           
 16397                           ;psect for function _BUTTONS_isHeld
 16398  09E8                     _BUTTONS_isHeld:	
 16399                           
 16400                           ;incstack = 0
 16401                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 16402                           ;BUTTONS_isHeld@button stored from wreg
 16403  09E8  0140               	movlb	0	; select bank0
 16404  09E9  00A0               	movwf	BUTTONS_isHeld@button
 16405                           
 16406                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 16407  09EA  0820               	movf	BUTTONS_isHeld@button,w
 16408  09EB  3E07               	addlw	7
 16409  09EC  0086               	movwf	6
 16410  09ED  3001               	movlw	1	; select bank2/3
 16411  09EE  0087               	movwf	7
 16412  09EF  3003               	movlw	3
 16413  09F0  0601               	xorwf	1,w
 16414  09F1  1D03               	btfss	3,2
 16415  09F2  29F5               	goto	l5074
 16416                           
 16417                           ;buttons.c: 108:         return 1;
 16418  09F3  3001               	movlw	1
 16419  09F4  0008               	return
 16420  09F5                     l5074:	
 16421                           
 16422                           ;buttons.c: 111:     return 0;
 16423  09F5  3000               	movlw	0
 16424  09F6  0008               	return
 16425  09F7                     __end_of_BUTTONS_isHeld:	
 16426                           
 16427                           	psect	text50
 16428  0A3E                     __ptext50:	
 16429 ;; *************** function _BUTTONS_isClicked *****************
 16430 ;; Defined at:
 16431 ;;		line 97 in file "buttons.c"
 16432 ;; Parameters:    Size  Location     Type
 16433 ;;  button          1    wreg     PTR struct .
 16434 ;;		 -> buttons(32), NULL(0), 
 16435 ;; Auto vars:     Size  Location     Type
 16436 ;;  button          1    0[BANK0 ] PTR struct .
 16437 ;;		 -> buttons(32), NULL(0), 
 16438 ;; Return value:  Size  Location     Type
 16439 ;;                  1    wreg      _Bool 
 16440 ;; Registers used:
 16441 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16442 ;; Tracked objects:
 16443 ;;		On entry : 0/0
 16444 ;;		On exit  : 0/0
 16445 ;;		Unchanged: 0/0
 16446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16451 ;;Total ram usage:        1 bytes
 16452 ;; Hardware stack levels used:    1
 16453 ;; Hardware stack levels required when called:    4
 16454 ;; This function calls:
 16455 ;;		Nothing
 16456 ;; This function is called by:
 16457 ;;		_CONTROLLER_task
 16458 ;; This function uses a non-reentrant model
 16459 ;;
 16460                           
 16461                           
 16462                           ;psect for function _BUTTONS_isClicked
 16463  0A3E                     _BUTTONS_isClicked:	
 16464                           
 16465                           ;incstack = 0
 16466                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 16467                           ;BUTTONS_isClicked@button stored from wreg
 16468  0A3E  0140               	movlb	0	; select bank0
 16469  0A3F  00A0               	movwf	BUTTONS_isClicked@button
 16470                           
 16471                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 16472  0A40  0820               	movf	BUTTONS_isClicked@button,w
 16473  0A41  3E07               	addlw	7
 16474  0A42  0086               	movwf	6
 16475  0A43  3001               	movlw	1	; select bank2/3
 16476  0A44  0087               	movwf	7
 16477  0A45  0301               	decf	1,w
 16478  0A46  1D03               	btfss	3,2
 16479  0A47  2A50               	goto	l5326
 16480                           
 16481                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 16482  0A48  0820               	movf	BUTTONS_isClicked@button,w
 16483  0A49  3E07               	addlw	7
 16484  0A4A  0086               	movwf	6
 16485  0A4B  3001               	movlw	1	; select bank2/3
 16486  0A4C  0087               	movwf	7
 16487  0A4D  0181               	clrf	1
 16488                           
 16489                           ;buttons.c: 100:         return 1;
 16490  0A4E  3001               	movlw	1
 16491  0A4F  0008               	return
 16492  0A50                     l5326:	
 16493                           
 16494                           ;buttons.c: 103:     return 0;
 16495  0A50  3000               	movlw	0
 16496  0A51  0008               	return
 16497  0A52                     __end_of_BUTTONS_isClicked:	
 16498                           
 16499                           	psect	text51
 16500  08FA                     __ptext51:	
 16501 ;; *************** function _CLOCK_init *****************
 16502 ;; Defined at:
 16503 ;;		line 8 in file "clock.c"
 16504 ;; Parameters:    Size  Location     Type
 16505 ;;		None
 16506 ;; Auto vars:     Size  Location     Type
 16507 ;;		None
 16508 ;; Return value:  Size  Location     Type
 16509 ;;                  1    wreg      void 
 16510 ;; Registers used:
 16511 ;;		wreg, status,2, status,0, pclath, cstack
 16512 ;; Tracked objects:
 16513 ;;		On entry : 0/0
 16514 ;;		On exit  : 0/0
 16515 ;;		Unchanged: 0/0
 16516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16521 ;;Total ram usage:        0 bytes
 16522 ;; Hardware stack levels used:    1
 16523 ;; Hardware stack levels required when called:    5
 16524 ;; This function calls:
 16525 ;;		_TMR0_SetInterruptHandler
 16526 ;; This function is called by:
 16527 ;;		_main
 16528 ;; This function uses a non-reentrant model
 16529 ;;
 16530                           
 16531                           
 16532                           ;psect for function _CLOCK_init
 16533  08FA                     _CLOCK_init:	
 16534                           
 16535                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 16536                           
 16537                           ;incstack = 0
 16538                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 16539  08FA  30F9               	movlw	low _CLOCK_timerCallback
 16540  08FB  0140               	movlb	0	; select bank0
 16541  08FC  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16542  08FD  3007               	movlw	high _CLOCK_timerCallback
 16543  08FE  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16544  08FF  3189  2126         	fcall	_TMR0_SetInterruptHandler
 16545  0901  0008               	return
 16546  0902                     __end_of_CLOCK_init:	
 16547                           
 16548                           	psect	text52
 16549  0926                     __ptext52:	
 16550 ;; *************** function _TMR0_SetInterruptHandler *****************
 16551 ;; Defined at:
 16552 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16553 ;; Parameters:    Size  Location     Type
 16554 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16555 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 16556 ;; Auto vars:     Size  Location     Type
 16557 ;;		None
 16558 ;; Return value:  Size  Location     Type
 16559 ;;                  1    wreg      void 
 16560 ;; Registers used:
 16561 ;;		wreg
 16562 ;; Tracked objects:
 16563 ;;		On entry : 0/0
 16564 ;;		On exit  : 0/0
 16565 ;;		Unchanged: 0/0
 16566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16567 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16570 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16571 ;;Total ram usage:        2 bytes
 16572 ;; Hardware stack levels used:    1
 16573 ;; Hardware stack levels required when called:    4
 16574 ;; This function calls:
 16575 ;;		Nothing
 16576 ;; This function is called by:
 16577 ;;		_TMR0_Initialize
 16578 ;;		_CLOCK_init
 16579 ;; This function uses a non-reentrant model
 16580 ;;
 16581                           
 16582                           
 16583                           ;psect for function _TMR0_SetInterruptHandler
 16584  0926                     _TMR0_SetInterruptHandler:	
 16585                           
 16586                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16587                           
 16588                           ;incstack = 0
 16589                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16590  0926  0140               	movlb	0	; select bank0
 16591  0927  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16592  0928  0142               	movlb	2	; select bank2
 16593  0929  00E3               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 16594  092A  0140               	movlb	0	; select bank0
 16595  092B  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16596  092C  0142               	movlb	2	; select bank2
 16597  092D  00E2               	movwf	_TMR0_InterruptHandler^(0+256)
 16598  092E  0008               	return
 16599  092F                     __end_of_TMR0_SetInterruptHandler:	
 16600                           
 16601                           	psect	text53
 16602  03A2                     __ptext53:	
 16603 ;; *************** function _BUTTONS_task *****************
 16604 ;; Defined at:
 16605 ;;		line 56 in file "buttons.c"
 16606 ;; Parameters:    Size  Location     Type
 16607 ;;		None
 16608 ;; Auto vars:     Size  Location     Type
 16609 ;;  btn             1    8[BANK0 ] PTR struct .
 16610 ;;		 -> buttons(32), 
 16611 ;;  i               1    5[BANK0 ] unsigned char 
 16612 ;;  time            2    6[BANK0 ] unsigned short 
 16613 ;; Return value:  Size  Location     Type
 16614 ;;                  1    wreg      void 
 16615 ;; Registers used:
 16616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16617 ;; Tracked objects:
 16618 ;;		On entry : 0/0
 16619 ;;		On exit  : 0/0
 16620 ;;		Unchanged: 0/0
 16621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16623 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16624 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16625 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16626 ;;Total ram usage:        7 bytes
 16627 ;; Hardware stack levels used:    1
 16628 ;; Hardware stack levels required when called:    5
 16629 ;; This function calls:
 16630 ;;		_CLOCK_getTime
 16631 ;; This function is called by:
 16632 ;;		_main
 16633 ;; This function uses a non-reentrant model
 16634 ;;
 16635                           
 16636                           
 16637                           ;psect for function _BUTTONS_task
 16638  03A2                     _BUTTONS_task:	
 16639                           
 16640                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 16641                           
 16642                           ;incstack = 0
 16643                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16644  03A2  3189  211D  3183   	fcall	_CLOCK_getTime
 16645  03A5  0140               	movlb	0	; select bank0
 16646  03A6  0821               	movf	?_CLOCK_getTime+1,w
 16647  03A7  00A7               	movwf	BUTTONS_task@time+1
 16648  03A8  0820               	movf	?_CLOCK_getTime,w
 16649  03A9  00A6               	movwf	BUTTONS_task@time
 16650                           
 16651                           ;buttons.c: 61:     if (time - lastTime < 10)
 16652  03AA  0141               	movlb	1	; select bank1
 16653  03AB  0837               	movf	_lastTime^(0+128),w
 16654  03AC  0140               	movlb	0	; select bank0
 16655  03AD  0226               	subwf	BUTTONS_task@time,w
 16656  03AE  00A2               	movwf	??_BUTTONS_task
 16657  03AF  0141               	movlb	1	; select bank1
 16658  03B0  0838               	movf	(_lastTime+1)^(0+128),w
 16659  03B1  0140               	movlb	0	; select bank0
 16660  03B2  3B27               	subwfb	BUTTONS_task@time+1,w
 16661  03B3  00A3               	movwf	??_BUTTONS_task+1
 16662  03B4  3000               	movlw	0
 16663  03B5  0223               	subwf	??_BUTTONS_task+1,w
 16664  03B6  300A               	movlw	10
 16665  03B7  1903               	skipnz
 16666  03B8  0222               	subwf	??_BUTTONS_task,w
 16667  03B9  1C03               	btfss	3,0
 16668  03BA  0008               	return
 16669                           
 16670                           ;buttons.c: 64:     lastTime = time;
 16671  03BB  0827               	movf	BUTTONS_task@time+1,w
 16672  03BC  0141               	movlb	1	; select bank1
 16673  03BD  00B8               	movwf	(_lastTime+1)^(0+128)
 16674  03BE  0140               	movlb	0	; select bank0
 16675  03BF  0826               	movf	BUTTONS_task@time,w
 16676  03C0  0141               	movlb	1	; select bank1
 16677  03C1  00B7               	movwf	_lastTime^(0+128)
 16678                           
 16679                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 16680  03C2  0140               	movlb	0	; select bank0
 16681  03C3  01A5               	clrf	BUTTONS_task@i
 16682  03C4                     l5540:	
 16683                           
 16684                           ;buttons.c: 68:         button_t* btn = buttons + i;
 16685  03C4  0825               	movf	BUTTONS_task@i,w
 16686  03C5  00A2               	movwf	??_BUTTONS_task
 16687  03C6  3002               	movlw	2
 16688  03C7                     u4015:	
 16689  03C7  35A2               	lslf	??_BUTTONS_task,f
 16690  03C8  3EFF               	addlw	-1
 16691  03C9  1D03               	skipz
 16692  03CA  2BC7               	goto	u4015
 16693  03CB  3522               	lslf	??_BUTTONS_task,w
 16694  03CC  3E38               	addlw	(low (_buttons| (0+256)))& (0+255)
 16695  03CD  00A3               	movwf	??_BUTTONS_task+1
 16696  03CE  0823               	movf	??_BUTTONS_task+1,w
 16697  03CF  00A8               	movwf	BUTTONS_task@btn
 16698                           
 16699                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 16700  03D0  0828               	movf	BUTTONS_task@btn,w
 16701  03D1  0086               	movwf	6
 16702  03D2  3001               	movlw	1	; select bank2/3
 16703  03D3  0087               	movwf	7
 16704  03D4  3F40               	moviw [0]fsr1
 16705  03D5  00A2               	movwf	??_BUTTONS_task
 16706  03D6  3F41               	moviw [1]fsr1
 16707  03D7  00A3               	movwf	??_BUTTONS_task+1
 16708  03D8  0822               	movf	??_BUTTONS_task,w
 16709  03D9  0086               	movwf	6
 16710  03DA  0823               	movf	??_BUTTONS_task+1,w
 16711  03DB  0087               	movwf	7
 16712  03DC  3001               	movlw	1
 16713  03DD  00A4               	movwf	??_BUTTONS_task+2
 16714  03DE  0828               	movf	BUTTONS_task@btn,w
 16715  03DF  3E02               	addlw	2
 16716  03E0  0084               	movwf	4
 16717  03E1  3001               	movlw	1	; select bank2/3
 16718  03E2  0085               	movwf	5
 16719  03E3  0A00               	incf	0,w
 16720  03E4  2BE6               	goto	u4024
 16721  03E5                     u4025:	
 16722  03E5  35A4               	lslf	??_BUTTONS_task+2,f
 16723  03E6                     u4024:	
 16724  03E6  0B89               	decfsz	9,f
 16725  03E7  2BE5               	goto	u4025
 16726  03E8  0824               	movf	??_BUTTONS_task+2,w
 16727  03E9  0501               	andwf	1,w
 16728  03EA  1D03               	btfss	3,2
 16729  03EB  2C05               	goto	l5548
 16730                           
 16731                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 16732  03EC  0828               	movf	BUTTONS_task@btn,w
 16733  03ED  3E03               	addlw	3
 16734  03EE  0086               	movwf	6
 16735  03EF  3001               	movlw	1	; select bank2/3
 16736  03F0  0087               	movwf	7
 16737  03F1  0181               	clrf	1
 16738  03F2  0A81               	incf	1,f
 16739                           
 16740                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 16741  03F3  0828               	movf	BUTTONS_task@btn,w
 16742  03F4  3E07               	addlw	7
 16743  03F5  0086               	movwf	6
 16744  03F6  3001               	movlw	1	; select bank2/3
 16745  03F7  0087               	movwf	7
 16746  03F8  0801               	movf	1,w
 16747  03F9  1D03               	btfss	3,2
 16748  03FA  2C0B               	goto	l909
 16749                           
 16750                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 16751  03FB  0828               	movf	BUTTONS_task@btn,w
 16752  03FC  3E05               	addlw	5
 16753  03FD  0086               	movwf	6
 16754  03FE  3001               	movlw	1	; select bank2/3
 16755  03FF  0087               	movwf	7
 16756  0400  0826               	movf	BUTTONS_task@time,w
 16757  0401  3FC0               	movwi [0]fsr1
 16758  0402  0827               	movf	BUTTONS_task@time+1,w
 16759  0403  3FC1               	movwi [1]fsr1
 16760  0404  2C0B               	goto	l909
 16761  0405                     l5548:	
 16762                           
 16763                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 16764  0405  0828               	movf	BUTTONS_task@btn,w
 16765  0406  3E03               	addlw	3
 16766  0407  0086               	movwf	6
 16767  0408  3001               	movlw	1	; select bank2/3
 16768  0409  0087               	movwf	7
 16769  040A  0181               	clrf	1
 16770  040B                     l909:	
 16771                           ;buttons.c: 78:         }
 16772                           
 16773                           
 16774                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 16775  040B  0828               	movf	BUTTONS_task@btn,w
 16776  040C  3E03               	addlw	3
 16777  040D  0086               	movwf	6
 16778  040E  3001               	movlw	1	; select bank2/3
 16779  040F  0087               	movwf	7
 16780  0410  0801               	movf	1,w
 16781  0411  1D03               	btfss	3,2
 16782  0412  2C23               	goto	l5554
 16783  0413  0828               	movf	BUTTONS_task@btn,w
 16784  0414  3E04               	addlw	4
 16785  0415  0086               	movwf	6
 16786  0416  3001               	movlw	1	; select bank2/3
 16787  0417  0087               	movwf	7
 16788  0418  0301               	decf	1,w
 16789  0419  1D03               	btfss	3,2
 16790  041A  2C23               	goto	l5554
 16791                           
 16792                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 16793  041B  0828               	movf	BUTTONS_task@btn,w
 16794  041C  3E07               	addlw	7
 16795  041D  0086               	movwf	6
 16796  041E  3001               	movlw	1	; select bank2/3
 16797  041F  0087               	movwf	7
 16798  0420  0181               	clrf	1
 16799  0421  0A81               	incf	1,f
 16800                           
 16801                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 16802  0422  2C70               	goto	l911
 16803  0423                     l5554:	
 16804  0423  0828               	movf	BUTTONS_task@btn,w
 16805  0424  3E03               	addlw	3
 16806  0425  0086               	movwf	6
 16807  0426  3001               	movlw	1	; select bank2/3
 16808  0427  0087               	movwf	7
 16809  0428  0301               	decf	1,w
 16810  0429  1D03               	btfss	3,2
 16811  042A  2C51               	goto	l5564
 16812  042B  0828               	movf	BUTTONS_task@btn,w
 16813  042C  3E04               	addlw	4
 16814  042D  0086               	movwf	6
 16815  042E  3001               	movlw	1	; select bank2/3
 16816  042F  0087               	movwf	7
 16817  0430  0301               	decf	1,w
 16818  0431  1D03               	btfss	3,2
 16819  0432  2C51               	goto	l5564
 16820                           
 16821                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 16822  0433  0828               	movf	BUTTONS_task@btn,w
 16823  0434  3E05               	addlw	5
 16824  0435  0086               	movwf	6
 16825  0436  3001               	movlw	1	; select bank2/3
 16826  0437  0087               	movwf	7
 16827  0438  3F40               	moviw [0]fsr1
 16828  0439  0226               	subwf	BUTTONS_task@time,w
 16829  043A  00A2               	movwf	??_BUTTONS_task
 16830  043B  3F41               	moviw [1]fsr1
 16831  043C  3B27               	subwfb	BUTTONS_task@time+1,w
 16832  043D  00A3               	movwf	??_BUTTONS_task+1
 16833  043E  3000               	movlw	0
 16834  043F  0223               	subwf	??_BUTTONS_task+1,w
 16835  0440  30C9               	movlw	201
 16836  0441  1903               	skipnz
 16837  0442  0222               	subwf	??_BUTTONS_task,w
 16838  0443  1C03               	skipc
 16839  0444  2C47               	goto	l5562
 16840                           
 16841                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 16842  0445  3003               	movlw	3
 16843  0446  2C48               	goto	L13
 16844  0447                     l5562:	
 16845                           ;buttons.c: 86:             } else {
 16846                           
 16847                           
 16848                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 16849  0447  3002               	movlw	2
 16850  0448                     L13:	
 16851  0448  00A2               	movwf	??_BUTTONS_task
 16852  0449  0828               	movf	BUTTONS_task@btn,w
 16853  044A  3E07               	addlw	7
 16854  044B  0086               	movwf	6
 16855  044C  3001               	movlw	1	; select bank2/3
 16856  044D  0087               	movwf	7
 16857  044E  0822               	movf	??_BUTTONS_task,w
 16858  044F  0081               	movwf	1
 16859  0450  2C70               	goto	l911
 16860  0451                     l5564:	
 16861  0451  0828               	movf	BUTTONS_task@btn,w
 16862  0452  3E03               	addlw	3
 16863  0453  0086               	movwf	6
 16864  0454  3001               	movlw	1	; select bank2/3
 16865  0455  0087               	movwf	7
 16866  0456  0801               	movf	1,w
 16867  0457  1D03               	btfss	3,2
 16868  0458  2C70               	goto	l911
 16869  0459  0828               	movf	BUTTONS_task@btn,w
 16870  045A  3E04               	addlw	4
 16871  045B  0086               	movwf	6
 16872  045C  3001               	movlw	1	; select bank2/3
 16873  045D  0087               	movwf	7
 16874  045E  0301               	decf	1,w
 16875  045F  1D03               	btfss	3,2
 16876  0460  2C70               	goto	l911
 16877  0461  0828               	movf	BUTTONS_task@btn,w
 16878  0462  3E07               	addlw	7
 16879  0463  0086               	movwf	6
 16880  0464  3001               	movlw	1	; select bank2/3
 16881  0465  0087               	movwf	7
 16882  0466  3003               	movlw	3
 16883  0467  0601               	xorwf	1,w
 16884  0468  1D03               	btfss	3,2
 16885  0469  2C70               	goto	l911
 16886                           
 16887                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 16888  046A  0828               	movf	BUTTONS_task@btn,w
 16889  046B  3E07               	addlw	7
 16890  046C  0086               	movwf	6
 16891  046D  3001               	movlw	1	; select bank2/3
 16892  046E  0087               	movwf	7
 16893  046F  0181               	clrf	1
 16894  0470                     l911:	
 16895                           
 16896                           ;buttons.c: 93:         btn->lastState = btn->state;
 16897  0470  0828               	movf	BUTTONS_task@btn,w
 16898  0471  3E03               	addlw	3
 16899  0472  0086               	movwf	6
 16900  0473  3001               	movlw	1	; select bank2/3
 16901  0474  0087               	movwf	7
 16902  0475  0801               	movf	1,w
 16903  0476  00A2               	movwf	??_BUTTONS_task
 16904  0477  0828               	movf	BUTTONS_task@btn,w
 16905  0478  3E04               	addlw	4
 16906  0479  0086               	movwf	6
 16907  047A  3001               	movlw	1	; select bank2/3
 16908  047B  0087               	movwf	7
 16909  047C  0822               	movf	??_BUTTONS_task,w
 16910  047D  0081               	movwf	1
 16911                           
 16912                           ;buttons.c: 94:     }
 16913  047E  3001               	movlw	1
 16914  047F  00A2               	movwf	??_BUTTONS_task
 16915  0480  0822               	movf	??_BUTTONS_task,w
 16916  0481  07A5               	addwf	BUTTONS_task@i,f
 16917  0482  3004               	movlw	4
 16918  0483  0225               	subwf	BUTTONS_task@i,w
 16919  0484  1803               	btfsc	3,0
 16920  0485  0008               	return
 16921  0486  2BC4               	goto	l5540
 16922  0487                     __end_of_BUTTONS_task:	
 16923                           
 16924                           	psect	text54
 16925  0EB1                     __ptext54:	
 16926 ;; *************** function _BUTTONS_init *****************
 16927 ;; Defined at:
 16928 ;;		line 23 in file "buttons.c"
 16929 ;; Parameters:    Size  Location     Type
 16930 ;;		None
 16931 ;; Auto vars:     Size  Location     Type
 16932 ;;		None
 16933 ;; Return value:  Size  Location     Type
 16934 ;;                  1    wreg      void 
 16935 ;; Registers used:
 16936 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16937 ;; Tracked objects:
 16938 ;;		On entry : 0/0
 16939 ;;		On exit  : 0/0
 16940 ;;		Unchanged: 0/0
 16941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16946 ;;Total ram usage:        1 bytes
 16947 ;; Hardware stack levels used:    1
 16948 ;; Hardware stack levels required when called:    5
 16949 ;; This function calls:
 16950 ;;		_GPIO_init
 16951 ;;		_init
 16952 ;; This function is called by:
 16953 ;;		_main
 16954 ;; This function uses a non-reentrant model
 16955 ;;
 16956                           
 16957                           
 16958                           ;psect for function _BUTTONS_init
 16959  0EB1                     _BUTTONS_init:	
 16960                           
 16961                           ;buttons.c: 24:     menu = &buttons[0];
 16962                           
 16963                           ;incstack = 0
 16964                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16965  0EB1  3038               	movlw	(low (_buttons| (0+256)))& (0+255)
 16966  0EB2  0140               	movlb	0	; select bank0
 16967  0EB3  00A5               	movwf	??_BUTTONS_init
 16968  0EB4  0825               	movf	??_BUTTONS_init,w
 16969  0EB5  0141               	movlb	1	; select bank1
 16970  0EB6  00C9               	movwf	_menu^(0+128)
 16971                           
 16972                           ;buttons.c: 25:     up = &buttons[1];
 16973  0EB7  3040               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 16974  0EB8  0140               	movlb	0	; select bank0
 16975  0EB9  00A5               	movwf	??_BUTTONS_init
 16976  0EBA  0825               	movf	??_BUTTONS_init,w
 16977  0EBB  0141               	movlb	1	; select bank1
 16978  0EBC  00C8               	movwf	_up^(0+128)
 16979                           
 16980                           ;buttons.c: 26:     down = &buttons[2];
 16981  0EBD  3048               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 16982  0EBE  0140               	movlb	0	; select bank0
 16983  0EBF  00A5               	movwf	??_BUTTONS_init
 16984  0EC0  0825               	movf	??_BUTTONS_init,w
 16985  0EC1  0141               	movlb	1	; select bank1
 16986  0EC2  00C7               	movwf	_down^(0+128)
 16987                           
 16988                           ;buttons.c: 27:     enter = &buttons[3];
 16989  0EC3  3050               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 16990  0EC4  0140               	movlb	0	; select bank0
 16991  0EC5  00A5               	movwf	??_BUTTONS_init
 16992  0EC6  0825               	movf	??_BUTTONS_init,w
 16993  0EC7  0141               	movlb	1	; select bank1
 16994  0EC8  00C6               	movwf	_enter^(0+128)
 16995                           
 16996                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 16997  0EC9  300E               	movlw	14
 16998  0ECA  0140               	movlb	0	; select bank0
 16999  0ECB  00A0               	movwf	init@port
 17000  0ECC  3000               	movlw	0
 17001  0ECD  00A1               	movwf	init@port+1
 17002  0ECE  3002               	movlw	2
 17003  0ECF  00A5               	movwf	??_BUTTONS_init
 17004  0ED0  0825               	movf	??_BUTTONS_init,w
 17005  0ED1  00A2               	movwf	init@pin
 17006  0ED2  0141               	movlb	1	; select bank1
 17007  0ED3  0849               	movf	_menu^(0+128),w
 17008  0ED4  318B  23E5  318E   	fcall	_init
 17009                           
 17010                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 17011  0ED7  300C               	movlw	12
 17012  0ED8  0140               	movlb	0	; select bank0
 17013  0ED9  00A0               	movwf	init@port
 17014  0EDA  3000               	movlw	0
 17015  0EDB  00A1               	movwf	init@port+1
 17016  0EDC  3002               	movlw	2
 17017  0EDD  00A5               	movwf	??_BUTTONS_init
 17018  0EDE  0825               	movf	??_BUTTONS_init,w
 17019  0EDF  00A2               	movwf	init@pin
 17020  0EE0  0141               	movlb	1	; select bank1
 17021  0EE1  0846               	movf	_enter^(0+128),w
 17022  0EE2  318B  23E5  318E   	fcall	_init
 17023                           
 17024                           ;buttons.c: 31:     init(down, &PORTC, 0);
 17025  0EE5  300E               	movlw	14
 17026  0EE6  0140               	movlb	0	; select bank0
 17027  0EE7  00A0               	movwf	init@port
 17028  0EE8  3000               	movlw	0
 17029  0EE9  00A1               	movwf	init@port+1
 17030  0EEA  01A2               	clrf	init@pin
 17031  0EEB  0141               	movlb	1	; select bank1
 17032  0EEC  0847               	movf	_down^(0+128),w
 17033  0EED  318B  23E5  318E   	fcall	_init
 17034                           
 17035                           ;buttons.c: 32:     init(up, &PORTC, 1);
 17036  0EF0  300E               	movlw	14
 17037  0EF1  0140               	movlb	0	; select bank0
 17038  0EF2  00A0               	movwf	init@port
 17039  0EF3  3000               	movlw	0
 17040  0EF4  00A1               	movwf	init@port+1
 17041  0EF5  01A2               	clrf	init@pin
 17042  0EF6  0AA2               	incf	init@pin,f
 17043  0EF7  0141               	movlb	1	; select bank1
 17044  0EF8  0848               	movf	_up^(0+128),w
 17045  0EF9  318B  23E5  318E   	fcall	_init
 17046                           
 17047                           ;buttons.c: 34:     GPIO_init();
 17048  0EFC  318A  2208         	fcall	_GPIO_init
 17049  0EFE  0008               	return
 17050  0EFF                     __end_of_BUTTONS_init:	
 17051                           
 17052                           	psect	text55
 17053  0BE5                     __ptext55:	
 17054 ;; *************** function _init *****************
 17055 ;; Defined at:
 17056 ;;		line 16 in file "buttons.c"
 17057 ;; Parameters:    Size  Location     Type
 17058 ;;  btn             1    wreg     PTR struct .
 17059 ;;		 -> buttons(32), NULL(0), 
 17060 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 17061 ;;		 -> PORTA(1), PORTC(1), 
 17062 ;;  pin             1    2[BANK0 ] unsigned char 
 17063 ;; Auto vars:     Size  Location     Type
 17064 ;;  btn             1    4[BANK0 ] PTR struct .
 17065 ;;		 -> buttons(32), NULL(0), 
 17066 ;; Return value:  Size  Location     Type
 17067 ;;                  1    wreg      void 
 17068 ;; Registers used:
 17069 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17070 ;; Tracked objects:
 17071 ;;		On entry : 0/0
 17072 ;;		On exit  : 0/0
 17073 ;;		Unchanged: 0/0
 17074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17075 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17077 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17078 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17079 ;;Total ram usage:        5 bytes
 17080 ;; Hardware stack levels used:    1
 17081 ;; Hardware stack levels required when called:    4
 17082 ;; This function calls:
 17083 ;;		Nothing
 17084 ;; This function is called by:
 17085 ;;		_BUTTONS_init
 17086 ;; This function uses a non-reentrant model
 17087 ;;
 17088                           
 17089                           
 17090                           ;psect for function _init
 17091  0BE5                     _init:	
 17092                           
 17093                           ;incstack = 0
 17094                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 17095                           ;init@btn stored from wreg
 17096  0BE5  0140               	movlb	0	; select bank0
 17097  0BE6  00A4               	movwf	init@btn
 17098                           
 17099                           ;buttons.c: 17:     btn->port = port;
 17100  0BE7  0824               	movf	init@btn,w
 17101  0BE8  0086               	movwf	6
 17102  0BE9  3001               	movlw	1	; select bank2/3
 17103  0BEA  0087               	movwf	7
 17104  0BEB  0820               	movf	init@port,w
 17105  0BEC  3FC0               	movwi [0]fsr1
 17106  0BED  0821               	movf	init@port+1,w
 17107  0BEE  3FC1               	movwi [1]fsr1
 17108                           
 17109                           ;buttons.c: 18:     btn->pin = pin;
 17110  0BEF  0822               	movf	init@pin,w
 17111  0BF0  00A3               	movwf	??_init
 17112  0BF1  0824               	movf	init@btn,w
 17113  0BF2  3E02               	addlw	2
 17114  0BF3  0086               	movwf	6
 17115  0BF4  3001               	movlw	1	; select bank2/3
 17116  0BF5  0087               	movwf	7
 17117  0BF6  0823               	movf	??_init,w
 17118  0BF7  0081               	movwf	1
 17119                           
 17120                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 17121  0BF8  0824               	movf	init@btn,w
 17122  0BF9  3E03               	addlw	3
 17123  0BFA  0086               	movwf	6
 17124  0BFB  3001               	movlw	1	; select bank2/3
 17125  0BFC  0087               	movwf	7
 17126  0BFD  0181               	clrf	1
 17127                           
 17128                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 17129  0BFE  0824               	movf	init@btn,w
 17130  0BFF  3E07               	addlw	7
 17131  0C00  0086               	movwf	6
 17132  0C01  3001               	movlw	1	; select bank2/3
 17133  0C02  0087               	movwf	7
 17134  0C03  0181               	clrf	1
 17135  0C04  0008               	return
 17136  0C05                     __end_of_init:	
 17137                           
 17138                           	psect	text56
 17139  0A08                     __ptext56:	
 17140 ;; *************** function _GPIO_init *****************
 17141 ;; Defined at:
 17142 ;;		line 38 in file "buttons.c"
 17143 ;; Parameters:    Size  Location     Type
 17144 ;;		None
 17145 ;; Auto vars:     Size  Location     Type
 17146 ;;		None
 17147 ;; Return value:  Size  Location     Type
 17148 ;;                  1    wreg      void 
 17149 ;; Registers used:
 17150 ;;		None
 17151 ;; Tracked objects:
 17152 ;;		On entry : 0/0
 17153 ;;		On exit  : 0/0
 17154 ;;		Unchanged: 0/0
 17155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17160 ;;Total ram usage:        0 bytes
 17161 ;; Hardware stack levels used:    1
 17162 ;; Hardware stack levels required when called:    4
 17163 ;; This function calls:
 17164 ;;		Nothing
 17165 ;; This function is called by:
 17166 ;;		_BUTTONS_init
 17167 ;; This function uses a non-reentrant model
 17168 ;;
 17169                           
 17170                           
 17171                           ;psect for function _GPIO_init
 17172  0A08                     _GPIO_init:	
 17173                           
 17174                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 17175                           
 17176                           ;incstack = 0
 17177                           ; Regs used in _GPIO_init: []
 17178  0A08  0140               	movlb	0	; select bank0
 17179  0A09  1512               	bsf	18,2	;volatile
 17180                           
 17181                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 17182  0A0A  017E               	movlb	62	; select bank62
 17183  0A0B  1138               	bcf	56,2	;volatile
 17184                           
 17185                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 17186  0A0C  1539               	bsf	57,2	;volatile
 17187                           
 17188                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 17189  0A0D  0140               	movlb	0	; select bank0
 17190  0A0E  1414               	bsf	20,0	;volatile
 17191                           
 17192                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 17193  0A0F  1494               	bsf	20,1	;volatile
 17194                           
 17195                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 17196  0A10  1514               	bsf	20,2	;volatile
 17197                           
 17198                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 17199  0A11  017E               	movlb	62	; select bank62
 17200  0A12  104E               	bcf	78,0	;volatile
 17201                           
 17202                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 17203  0A13  10CE               	bcf	78,1	;volatile
 17204                           
 17205                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 17206  0A14  114E               	bcf	78,2	;volatile
 17207                           
 17208                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 17209  0A15  144F               	bsf	79,0	;volatile
 17210                           
 17211                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 17212  0A16  14CF               	bsf	79,1	;volatile
 17213                           
 17214                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 17215  0A17  154F               	bsf	79,2	;volatile
 17216  0A18  0008               	return
 17217  0A19                     __end_of_GPIO_init:	
 17218                           
 17219                           	psect	text57
 17220  0487                     __ptext57:	
 17221 ;; *************** function _BEAT_task *****************
 17222 ;; Defined at:
 17223 ;;		line 65 in file "beat.c"
 17224 ;; Parameters:    Size  Location     Type
 17225 ;;		None
 17226 ;; Auto vars:     Size  Location     Type
 17227 ;;  offset          2   10[BANK0 ] unsigned short 
 17228 ;; Return value:  Size  Location     Type
 17229 ;;                  1    wreg      void 
 17230 ;; Registers used:
 17231 ;;		wreg, status,2, status,0, pclath, cstack
 17232 ;; Tracked objects:
 17233 ;;		On entry : 0/0
 17234 ;;		On exit  : 0/0
 17235 ;;		Unchanged: 0/0
 17236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17238 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17239 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17240 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17241 ;;Total ram usage:        4 bytes
 17242 ;; Hardware stack levels used:    1
 17243 ;; Hardware stack levels required when called:    5
 17244 ;; This function calls:
 17245 ;;		_ADCC_SetUpperThreshold
 17246 ;;		_CLOCK_getTime
 17247 ;;		___lwdiv
 17248 ;; This function is called by:
 17249 ;;		_main
 17250 ;; This function uses a non-reentrant model
 17251 ;;
 17252                           
 17253                           
 17254                           ;psect for function _BEAT_task
 17255  0487                     _BEAT_task:	
 17256                           
 17257                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 17258                           
 17259                           ;incstack = 0
 17260                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 17261  0487  3189  211D  3184   	fcall	_CLOCK_getTime
 17262  048A  0141               	movlb	1	; select bank1
 17263  048B  082D               	movf	_lastRun^(0+128),w
 17264  048C  0140               	movlb	0	; select bank0
 17265  048D  0220               	subwf	?_CLOCK_getTime,w
 17266  048E  00A8               	movwf	??_BEAT_task
 17267  048F  0141               	movlb	1	; select bank1
 17268  0490  082E               	movf	(_lastRun+1)^(0+128),w
 17269  0491  0140               	movlb	0	; select bank0
 17270  0492  3B21               	subwfb	?_CLOCK_getTime+1,w
 17271  0493  00A9               	movwf	??_BEAT_task+1
 17272  0494  0141               	movlb	1	; select bank1
 17273  0495  0866               	movf	(_delay+1)^(0+128),w
 17274  0496  0140               	movlb	0	; select bank0
 17275  0497  0229               	subwf	??_BEAT_task+1,w
 17276  0498  1D03               	skipz
 17277  0499  2C9E               	goto	u4355
 17278  049A  0141               	movlb	1	; select bank1
 17279  049B  0865               	movf	_delay^(0+128),w
 17280  049C  0140               	movlb	0	; select bank0
 17281  049D  0228               	subwf	??_BEAT_task,w
 17282  049E                     u4355:	
 17283  049E  1C03               	btfss	3,0
 17284  049F  0008               	return
 17285                           
 17286                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 17287  04A0  3189  211D  3184   	fcall	_CLOCK_getTime
 17288  04A3  0140               	movlb	0	; select bank0
 17289  04A4  0821               	movf	?_CLOCK_getTime+1,w
 17290  04A5  0141               	movlb	1	; select bank1
 17291  04A6  00AE               	movwf	(_lastRun+1)^(0+128)
 17292  04A7  0140               	movlb	0	; select bank0
 17293  04A8  0820               	movf	?_CLOCK_getTime,w
 17294  04A9  0141               	movlb	1	; select bank1
 17295  04AA  00AD               	movwf	_lastRun^(0+128)
 17296                           
 17297                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 17298  04AB  033C               	decf	_thresholdExceeded^(0+128),w
 17299  04AC  1D03               	btfss	3,2
 17300  04AD  2CB3               	goto	l5672
 17301                           
 17302                           ;beat.c: 77:         thresholdCount++;
 17303  04AE  3001               	movlw	1
 17304  04AF  07AB               	addwf	_thresholdCount^(0+128),f
 17305  04B0  3000               	movlw	0
 17306  04B1  3DAC               	addwfc	(_thresholdCount+1)^(0+128),f
 17307                           
 17308                           ;beat.c: 78:     } else {
 17309  04B2  2CB9               	goto	l5676
 17310  04B3                     l5672:	
 17311                           
 17312                           ;beat.c: 80:         thresholdCount = 0;
 17313  04B3  01AB               	clrf	_thresholdCount^(0+128)
 17314  04B4  01AC               	clrf	(_thresholdCount+1)^(0+128)
 17315                           
 17316                           ;beat.c: 81:         delay = 20;
 17317  04B5  3014               	movlw	20
 17318  04B6  00E5               	movwf	_delay^(0+128)
 17319  04B7  3000               	movlw	0
 17320  04B8  00E6               	movwf	(_delay^(0+128)+1)
 17321  04B9                     l5676:	
 17322                           
 17323                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 17324  04B9  033C               	decf	_thresholdExceeded^(0+128),w
 17325  04BA  1D03               	btfss	3,2
 17326  04BB  2CFE               	goto	l5694
 17327  04BC  083B               	movf	_lastDetected^(0+128),w
 17328  04BD  1D03               	btfss	3,2
 17329  04BE  2CFE               	goto	l5694
 17330                           
 17331                           ;beat.c: 89:         detected = 1;
 17332  04BF  01BD               	clrf	_detected^(0+128)
 17333  04C0  0ABD               	incf	_detected^(0+128),f
 17334                           
 17335                           ;beat.c: 92:         delay = 100;
 17336  04C1  3064               	movlw	100
 17337  04C2  00E5               	movwf	_delay^(0+128)
 17338  04C3  3000               	movlw	0
 17339  04C4  00E6               	movwf	(_delay^(0+128)+1)
 17340                           
 17341                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 17342  04C5  3189  211D  3184   	fcall	_CLOCK_getTime
 17343  04C8  0141               	movlb	1	; select bank1
 17344  04C9  082F               	movf	_lastBeat^(0+128),w
 17345  04CA  0140               	movlb	0	; select bank0
 17346  04CB  0220               	subwf	?_CLOCK_getTime,w
 17347  04CC  00AA               	movwf	BEAT_task@offset
 17348  04CD  0141               	movlb	1	; select bank1
 17349  04CE  0830               	movf	(_lastBeat+1)^(0+128),w
 17350  04CF  0140               	movlb	0	; select bank0
 17351  04D0  3B21               	subwfb	?_CLOCK_getTime+1,w
 17352  04D1  00AB               	movwf	BEAT_task@offset+1
 17353                           
 17354                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 17355  04D2  3189  211D  3184   	fcall	_CLOCK_getTime
 17356  04D5  0140               	movlb	0	; select bank0
 17357  04D6  0821               	movf	?_CLOCK_getTime+1,w
 17358  04D7  0141               	movlb	1	; select bank1
 17359  04D8  00B0               	movwf	(_lastBeat+1)^(0+128)
 17360  04D9  0140               	movlb	0	; select bank0
 17361  04DA  0820               	movf	?_CLOCK_getTime,w
 17362  04DB  0141               	movlb	1	; select bank1
 17363  04DC  00AF               	movwf	_lastBeat^(0+128)
 17364                           
 17365                           ;beat.c: 99:         if (offset < 150)
 17366  04DD  3000               	movlw	0
 17367  04DE  0140               	movlb	0	; select bank0
 17368  04DF  022B               	subwf	BEAT_task@offset+1,w
 17369  04E0  3096               	movlw	150
 17370  04E1  1903               	skipnz
 17371  04E2  022A               	subwf	BEAT_task@offset,w
 17372  04E3  1803               	skipnc
 17373  04E4  2CEB               	goto	l5692
 17374                           
 17375                           ;beat.c: 100:             bpm = 400;
 17376  04E5  3090               	movlw	144
 17377  04E6  0142               	movlb	2	; select bank2
 17378  04E7  00B6               	movwf	_bpm^(0+256)
 17379  04E8  3001               	movlw	1
 17380  04E9  00B7               	movwf	(_bpm^(0+256)+1)
 17381  04EA  2CFE               	goto	l5694
 17382  04EB                     l5692:	
 17383                           
 17384                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 17385  04EB  082B               	movf	BEAT_task@offset+1,w
 17386  04EC  00A1               	movwf	___lwdiv@divisor+1
 17387  04ED  082A               	movf	BEAT_task@offset,w
 17388  04EE  00A0               	movwf	___lwdiv@divisor
 17389  04EF  3060               	movlw	96
 17390  04F0  00A2               	movwf	___lwdiv@dividend
 17391  04F1  30EA               	movlw	234
 17392  04F2  00A3               	movwf	___lwdiv@dividend+1
 17393  04F3  318D  25D9  3184   	fcall	___lwdiv
 17394  04F6  0140               	movlb	0	; select bank0
 17395  04F7  0821               	movf	?___lwdiv+1,w
 17396  04F8  0142               	movlb	2	; select bank2
 17397  04F9  00B7               	movwf	(_bpm+1)^(0+256)
 17398  04FA  0140               	movlb	0	; select bank0
 17399  04FB  0820               	movf	?___lwdiv,w
 17400  04FC  0142               	movlb	2	; select bank2
 17401  04FD  00B6               	movwf	_bpm^(0+256)
 17402  04FE                     l5694:	
 17403                           
 17404                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 17405  04FE  0141               	movlb	1	; select bank1
 17406  04FF  083C               	movf	_thresholdExceeded^(0+128),w
 17407  0500  0140               	movlb	0	; select bank0
 17408  0501  00A8               	movwf	??_BEAT_task
 17409  0502  0828               	movf	??_BEAT_task,w
 17410  0503  0141               	movlb	1	; select bank1
 17411  0504  00BB               	movwf	_lastDetected^(0+128)
 17412                           
 17413                           ;beat.c: 109:     thresholdExceeded = 0;
 17414  0505  01BC               	clrf	_thresholdExceeded^(0+128)
 17415                           
 17416                           ;beat.c: 111:     if (thresholdCount > 3) {
 17417  0506  082C               	movf	(_thresholdCount+1)^(0+128),w
 17418  0507  3A80               	xorlw	128
 17419  0508  0140               	movlb	0	; select bank0
 17420  0509  00A8               	movwf	??_BEAT_task
 17421  050A  3080               	movlw	128
 17422  050B  0228               	subwf	??_BEAT_task,w
 17423  050C  1D03               	skipz
 17424  050D  2D11               	goto	u4405
 17425  050E  3004               	movlw	4
 17426  050F  0141               	movlb	1	; select bank1
 17427  0510  022B               	subwf	_thresholdCount^(0+128),w
 17428  0511                     u4405:	
 17429  0511  1C03               	skipc
 17430  0512  2D30               	goto	l5708
 17431                           
 17432                           ;beat.c: 112:         threshold += 1;
 17433  0513  3001               	movlw	1
 17434  0514  0141               	movlb	1	; select bank1
 17435  0515  07E7               	addwf	_threshold^(0+128),f
 17436  0516  3000               	movlw	0
 17437  0517  3DE8               	addwfc	(_threshold+1)^(0+128),f
 17438                           
 17439                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 17440  0518  0868               	movf	(_threshold+1)^(0+128),w
 17441  0519  0140               	movlb	0	; select bank0
 17442  051A  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 17443  051B  0141               	movlb	1	; select bank1
 17444  051C  0867               	movf	_threshold^(0+128),w
 17445  051D  0140               	movlb	0	; select bank0
 17446  051E  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 17447  051F  3189  210B  3184   	fcall	_ADCC_SetUpperThreshold
 17448                           
 17449                           ;beat.c: 114:         thresholdCount = 0;
 17450  0522  0141               	movlb	1	; select bank1
 17451  0523  01AB               	clrf	_thresholdCount^(0+128)
 17452  0524  01AC               	clrf	(_thresholdCount+1)^(0+128)
 17453                           
 17454                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 17455  0525  3189  211D         	fcall	_CLOCK_getTime
 17456  0527  0140               	movlb	0	; select bank0
 17457  0528  0821               	movf	?_CLOCK_getTime+1,w
 17458  0529  0141               	movlb	1	; select bank1
 17459  052A  00B0               	movwf	(_lastBeat+1)^(0+128)
 17460  052B  0140               	movlb	0	; select bank0
 17461  052C  0820               	movf	?_CLOCK_getTime,w
 17462  052D  0141               	movlb	1	; select bank1
 17463  052E  00AF               	movwf	_lastBeat^(0+128)
 17464                           
 17465                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 17466  052F  0008               	return
 17467  0530                     l5708:	
 17468  0530  3189  211D  3184   	fcall	_CLOCK_getTime
 17469  0533  0141               	movlb	1	; select bank1
 17470  0534  082F               	movf	_lastBeat^(0+128),w
 17471  0535  0140               	movlb	0	; select bank0
 17472  0536  0220               	subwf	?_CLOCK_getTime,w
 17473  0537  00A8               	movwf	??_BEAT_task
 17474  0538  0141               	movlb	1	; select bank1
 17475  0539  0830               	movf	(_lastBeat+1)^(0+128),w
 17476  053A  0140               	movlb	0	; select bank0
 17477  053B  3B21               	subwfb	?_CLOCK_getTime+1,w
 17478  053C  00A9               	movwf	??_BEAT_task+1
 17479  053D  3003               	movlw	3
 17480  053E  0229               	subwf	??_BEAT_task+1,w
 17481  053F  30E9               	movlw	233
 17482  0540  1903               	skipnz
 17483  0541  0228               	subwf	??_BEAT_task,w
 17484  0542  1C03               	skipc
 17485  0543  0008               	return
 17486                           
 17487                           ;beat.c: 119:         threshold -= 1;
 17488  0544  3001               	movlw	1
 17489  0545  0141               	movlb	1	; select bank1
 17490  0546  02E7               	subwf	_threshold^(0+128),f
 17491  0547  3000               	movlw	0
 17492  0548  3BE8               	subwfb	(_threshold+1)^(0+128),f
 17493                           
 17494                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 17495  0549  0868               	movf	(_threshold+1)^(0+128),w
 17496  054A  0140               	movlb	0	; select bank0
 17497  054B  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 17498  054C  0141               	movlb	1	; select bank1
 17499  054D  0867               	movf	_threshold^(0+128),w
 17500  054E  0140               	movlb	0	; select bank0
 17501  054F  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 17502  0550  3189  210B         	fcall	_ADCC_SetUpperThreshold
 17503  0552  0008               	return
 17504  0553                     __end_of_BEAT_task:	
 17505                           
 17506                           	psect	text58
 17507  0DD9                     __ptext58:	
 17508 ;; *************** function ___lwdiv *****************
 17509 ;; Defined at:
 17510 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 17511 ;; Parameters:    Size  Location     Type
 17512 ;;  divisor         2    0[BANK0 ] unsigned int 
 17513 ;;  dividend        2    2[BANK0 ] unsigned int 
 17514 ;; Auto vars:     Size  Location     Type
 17515 ;;  quotient        2    5[BANK0 ] unsigned int 
 17516 ;;  counter         1    7[BANK0 ] unsigned char 
 17517 ;; Return value:  Size  Location     Type
 17518 ;;                  2    0[BANK0 ] unsigned int 
 17519 ;; Registers used:
 17520 ;;		wreg, status,2, status,0
 17521 ;; Tracked objects:
 17522 ;;		On entry : 0/0
 17523 ;;		On exit  : 0/0
 17524 ;;		Unchanged: 0/0
 17525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17527 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17529 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17530 ;;Total ram usage:        8 bytes
 17531 ;; Hardware stack levels used:    1
 17532 ;; Hardware stack levels required when called:    4
 17533 ;; This function calls:
 17534 ;;		Nothing
 17535 ;; This function is called by:
 17536 ;;		_TM1650_fastPrintNum
 17537 ;;		_BEAT_task
 17538 ;; This function uses a non-reentrant model
 17539 ;;
 17540                           
 17541                           
 17542                           ;psect for function ___lwdiv
 17543  0DD9                     ___lwdiv:	
 17544                           
 17545                           ;incstack = 0
 17546                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 17547  0DD9  0140               	movlb	0	; select bank0
 17548  0DDA  01A5               	clrf	___lwdiv@quotient
 17549  0DDB  01A6               	clrf	___lwdiv@quotient+1
 17550  0DDC  0820               	movf	___lwdiv@divisor,w
 17551  0DDD  0421               	iorwf	___lwdiv@divisor+1,w
 17552  0DDE  1903               	btfsc	3,2
 17553  0DDF  2E09               	goto	l3678
 17554  0DE0  01A7               	clrf	___lwdiv@counter
 17555  0DE1  0AA7               	incf	___lwdiv@counter,f
 17556  0DE2                     l3666:	
 17557  0DE2  1BA1               	btfsc	___lwdiv@divisor+1,7
 17558  0DE3  2DEE               	goto	l3668
 17559  0DE4  3001               	movlw	1
 17560  0DE5                     u1945:	
 17561  0DE5  35A0               	lslf	___lwdiv@divisor,f
 17562  0DE6  0DA1               	rlf	___lwdiv@divisor+1,f
 17563  0DE7  0B89               	decfsz	9,f
 17564  0DE8  2DE5               	goto	u1945
 17565  0DE9  3001               	movlw	1
 17566  0DEA  00A4               	movwf	??___lwdiv
 17567  0DEB  0824               	movf	??___lwdiv,w
 17568  0DEC  07A7               	addwf	___lwdiv@counter,f
 17569  0DED  2DE2               	goto	l3666
 17570  0DEE                     l3668:	
 17571  0DEE  3001               	movlw	1
 17572  0DEF                     u1965:	
 17573  0DEF  35A5               	lslf	___lwdiv@quotient,f
 17574  0DF0  0DA6               	rlf	___lwdiv@quotient+1,f
 17575  0DF1  0B89               	decfsz	9,f
 17576  0DF2  2DEF               	goto	u1965
 17577  0DF3  0821               	movf	___lwdiv@divisor+1,w
 17578  0DF4  0223               	subwf	___lwdiv@dividend+1,w
 17579  0DF5  1D03               	skipz
 17580  0DF6  2DF9               	goto	u1975
 17581  0DF7  0820               	movf	___lwdiv@divisor,w
 17582  0DF8  0222               	subwf	___lwdiv@dividend,w
 17583  0DF9                     u1975:	
 17584  0DF9  1C03               	skipc
 17585  0DFA  2E00               	goto	l3674
 17586  0DFB  0820               	movf	___lwdiv@divisor,w
 17587  0DFC  02A2               	subwf	___lwdiv@dividend,f
 17588  0DFD  0821               	movf	___lwdiv@divisor+1,w
 17589  0DFE  3BA3               	subwfb	___lwdiv@dividend+1,f
 17590  0DFF  1425               	bsf	___lwdiv@quotient,0
 17591  0E00                     l3674:	
 17592  0E00  3001               	movlw	1
 17593  0E01                     u1985:	
 17594  0E01  36A1               	lsrf	___lwdiv@divisor+1,f
 17595  0E02  0CA0               	rrf	___lwdiv@divisor,f
 17596  0E03  0B89               	decfsz	9,f
 17597  0E04  2E01               	goto	u1985
 17598  0E05  3001               	movlw	1
 17599  0E06  02A7               	subwf	___lwdiv@counter,f
 17600  0E07  1D03               	btfss	3,2
 17601  0E08  2DEE               	goto	l3668
 17602  0E09                     l3678:	
 17603  0E09  0826               	movf	___lwdiv@quotient+1,w
 17604  0E0A  00A1               	movwf	?___lwdiv+1
 17605  0E0B  0825               	movf	___lwdiv@quotient,w
 17606  0E0C  00A0               	movwf	?___lwdiv
 17607  0E0D  0008               	return
 17608  0E0E                     __end_of___lwdiv:	
 17609                           
 17610                           	psect	text59
 17611  091D                     __ptext59:	
 17612 ;; *************** function _CLOCK_getTime *****************
 17613 ;; Defined at:
 17614 ;;		line 16 in file "clock.c"
 17615 ;; Parameters:    Size  Location     Type
 17616 ;;		None
 17617 ;; Auto vars:     Size  Location     Type
 17618 ;;		None
 17619 ;; Return value:  Size  Location     Type
 17620 ;;                  2    0[BANK0 ] unsigned short 
 17621 ;; Registers used:
 17622 ;;		wreg
 17623 ;; Tracked objects:
 17624 ;;		On entry : 0/0
 17625 ;;		On exit  : 0/0
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17631 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17632 ;;Total ram usage:        2 bytes
 17633 ;; Hardware stack levels used:    1
 17634 ;; Hardware stack levels required when called:    4
 17635 ;; This function calls:
 17636 ;;		Nothing
 17637 ;; This function is called by:
 17638 ;;		_main
 17639 ;;		_BUTTONS_task
 17640 ;;		_CONTROLLER_task
 17641 ;;		_CONTROL_DMX
 17642 ;;		_BEAT_task
 17643 ;;		_LED_task
 17644 ;; This function uses a non-reentrant model
 17645 ;;
 17646                           
 17647                           
 17648                           ;psect for function _CLOCK_getTime
 17649  091D                     _CLOCK_getTime:	
 17650                           
 17651                           ;clock.c: 17:     return currentTime;
 17652                           
 17653                           ;incstack = 0
 17654                           ; Regs used in _CLOCK_getTime: [wreg]
 17655  091D  0141               	movlb	1	; select bank1
 17656  091E  0836               	movf	(_currentTime+1)^(0+128),w
 17657  091F  0140               	movlb	0	; select bank0
 17658  0920  00A1               	movwf	?_CLOCK_getTime+1
 17659  0921  0141               	movlb	1	; select bank1
 17660  0922  0835               	movf	_currentTime^(0+128),w
 17661  0923  0140               	movlb	0	; select bank0
 17662  0924  00A0               	movwf	?_CLOCK_getTime
 17663  0925  0008               	return
 17664  0926                     __end_of_CLOCK_getTime:	
 17665                           
 17666                           	psect	text60
 17667  0AA4                     __ptext60:	
 17668 ;; *************** function _BEAT_init *****************
 17669 ;; Defined at:
 17670 ;;		line 39 in file "beat.c"
 17671 ;; Parameters:    Size  Location     Type
 17672 ;;		None
 17673 ;; Auto vars:     Size  Location     Type
 17674 ;;		None
 17675 ;; Return value:  Size  Location     Type
 17676 ;;                  1    wreg      void 
 17677 ;; Registers used:
 17678 ;;		wreg, status,2, status,0, pclath, cstack
 17679 ;; Tracked objects:
 17680 ;;		On entry : 0/0
 17681 ;;		On exit  : 0/0
 17682 ;;		Unchanged: 0/0
 17683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17688 ;;Total ram usage:        0 bytes
 17689 ;; Hardware stack levels used:    1
 17690 ;; Hardware stack levels required when called:    5
 17691 ;; This function calls:
 17692 ;;		_ADCC_SetADTIInterruptHandler
 17693 ;;		_ADCC_SetUpperThreshold
 17694 ;;		_ADCC_StartConversion
 17695 ;; This function is called by:
 17696 ;;		_main
 17697 ;; This function uses a non-reentrant model
 17698 ;;
 17699                           
 17700                           
 17701                           ;psect for function _BEAT_init
 17702  0AA4                     _BEAT_init:	
 17703                           
 17704                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 17705                           
 17706                           ;incstack = 0
 17707                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 17708  0AA4  0141               	movlb	1	; select bank1
 17709  0AA5  0868               	movf	(_threshold+1)^(0+128),w
 17710  0AA6  0140               	movlb	0	; select bank0
 17711  0AA7  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 17712  0AA8  0141               	movlb	1	; select bank1
 17713  0AA9  0867               	movf	_threshold^(0+128),w
 17714  0AAA  0140               	movlb	0	; select bank0
 17715  0AAB  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 17716  0AAC  3189  210B  318A   	fcall	_ADCC_SetUpperThreshold
 17717                           
 17718                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 17719  0AAF  30ED               	movlw	low _adcThresholdHandler
 17720  0AB0  0140               	movlb	0	; select bank0
 17721  0AB1  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 17722  0AB2  3008               	movlw	high _adcThresholdHandler
 17723  0AB3  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 17724  0AB4  3189  2102  318A   	fcall	_ADCC_SetADTIInterruptHandler
 17725                           
 17726                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 17727  0AB7  300F               	movlw	15
 17728  0AB8  3189  2114         	fcall	_ADCC_StartConversion
 17729  0ABA  0008               	return
 17730  0ABB                     __end_of_BEAT_init:	
 17731                           
 17732                           	psect	text61
 17733  0914                     __ptext61:	
 17734 ;; *************** function _ADCC_StartConversion *****************
 17735 ;; Defined at:
 17736 ;;		line 121 in file "mcc_generated_files/adcc.c"
 17737 ;; Parameters:    Size  Location     Type
 17738 ;;  channel         1    wreg     enum E10867
 17739 ;; Auto vars:     Size  Location     Type
 17740 ;;  channel         1    0[BANK0 ] enum E10867
 17741 ;; Return value:  Size  Location     Type
 17742 ;;                  1    wreg      void 
 17743 ;; Registers used:
 17744 ;;		wreg
 17745 ;; Tracked objects:
 17746 ;;		On entry : 0/0
 17747 ;;		On exit  : 0/0
 17748 ;;		Unchanged: 0/0
 17749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17753 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17754 ;;Total ram usage:        1 bytes
 17755 ;; Hardware stack levels used:    1
 17756 ;; Hardware stack levels required when called:    4
 17757 ;; This function calls:
 17758 ;;		Nothing
 17759 ;; This function is called by:
 17760 ;;		_BEAT_init
 17761 ;; This function uses a non-reentrant model
 17762 ;;
 17763                           
 17764                           
 17765                           ;psect for function _ADCC_StartConversion
 17766  0914                     _ADCC_StartConversion:	
 17767                           
 17768                           ;incstack = 0
 17769                           ; Regs used in _ADCC_StartConversion: [wreg]
 17770                           ;ADCC_StartConversion@channel stored from wreg
 17771  0914  0140               	movlb	0	; select bank0
 17772  0915  00A0               	movwf	ADCC_StartConversion@channel
 17773                           
 17774                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 17775  0916  0820               	movf	ADCC_StartConversion@channel,w
 17776  0917  0141               	movlb	1	; select bank1
 17777  0918  009F               	movwf	31	;volatile
 17778                           
 17779                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 17780  0919  0142               	movlb	2	; select bank2
 17781  091A  1791               	bsf	17,7	;volatile
 17782                           
 17783                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 17784  091B  1411               	bsf	17,0	;volatile
 17785  091C  0008               	return
 17786  091D                     __end_of_ADCC_StartConversion:	
 17787                           
 17788                           	psect	text62
 17789  090B                     __ptext62:	
 17790 ;; *************** function _ADCC_SetUpperThreshold *****************
 17791 ;; Defined at:
 17792 ;;		line 251 in file "mcc_generated_files/adcc.c"
 17793 ;; Parameters:    Size  Location     Type
 17794 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 17795 ;; Auto vars:     Size  Location     Type
 17796 ;;		None
 17797 ;; Return value:  Size  Location     Type
 17798 ;;                  1    wreg      void 
 17799 ;; Registers used:
 17800 ;;		wreg, status,2
 17801 ;; Tracked objects:
 17802 ;;		On entry : 0/0
 17803 ;;		On exit  : 0/0
 17804 ;;		Unchanged: 0/0
 17805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17806 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17809 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17810 ;;Total ram usage:        2 bytes
 17811 ;; Hardware stack levels used:    1
 17812 ;; Hardware stack levels required when called:    4
 17813 ;; This function calls:
 17814 ;;		Nothing
 17815 ;; This function is called by:
 17816 ;;		_BEAT_init
 17817 ;;		_BEAT_task
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           
 17821                           
 17822                           ;psect for function _ADCC_SetUpperThreshold
 17823  090B                     _ADCC_SetUpperThreshold:	
 17824                           
 17825                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 17826                           
 17827                           ;incstack = 0
 17828                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 17829  090B  0140               	movlb	0	; select bank0
 17830  090C  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 17831  090D  0141               	movlb	1	; select bank1
 17832  090E  008F               	movwf	15	;volatile
 17833                           
 17834                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 17835  090F  0140               	movlb	0	; select bank0
 17836  0910  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 17837  0911  0141               	movlb	1	; select bank1
 17838  0912  008E               	movwf	14	;volatile
 17839  0913  0008               	return
 17840  0914                     __end_of_ADCC_SetUpperThreshold:	
 17841                           
 17842                           	psect	text63
 17843  0902                     __ptext63:	
 17844 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 17845 ;; Defined at:
 17846 ;;		line 317 in file "mcc_generated_files/adcc.c"
 17847 ;; Parameters:    Size  Location     Type
 17848 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 17849 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 17850 ;; Auto vars:     Size  Location     Type
 17851 ;;		None
 17852 ;; Return value:  Size  Location     Type
 17853 ;;                  1    wreg      void 
 17854 ;; Registers used:
 17855 ;;		wreg
 17856 ;; Tracked objects:
 17857 ;;		On entry : 0/0
 17858 ;;		On exit  : 0/0
 17859 ;;		Unchanged: 0/0
 17860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17861 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17864 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17865 ;;Total ram usage:        2 bytes
 17866 ;; Hardware stack levels used:    1
 17867 ;; Hardware stack levels required when called:    4
 17868 ;; This function calls:
 17869 ;;		Nothing
 17870 ;; This function is called by:
 17871 ;;		_ADCC_Initialize
 17872 ;;		_BEAT_init
 17873 ;; This function uses a non-reentrant model
 17874 ;;
 17875                           
 17876                           
 17877                           ;psect for function _ADCC_SetADTIInterruptHandler
 17878  0902                     _ADCC_SetADTIInterruptHandler:	
 17879                           
 17880                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 17881                           
 17882                           ;incstack = 0
 17883                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 17884  0902  0140               	movlb	0	; select bank0
 17885  0903  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 17886  0904  0142               	movlb	2	; select bank2
 17887  0905  00E1               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 17888  0906  0140               	movlb	0	; select bank0
 17889  0907  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 17890  0908  0142               	movlb	2	; select bank2
 17891  0909  00E0               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 17892  090A  0008               	return
 17893  090B                     __end_of_ADCC_SetADTIInterruptHandler:	
 17894                           
 17895                           	psect	intentry
 17896  0004                     __pintentry:	
 17897 ;; *************** function _INTERRUPT_InterruptManager *****************
 17898 ;; Defined at:
 17899 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17900 ;; Parameters:    Size  Location     Type
 17901 ;;		None
 17902 ;; Auto vars:     Size  Location     Type
 17903 ;;		None
 17904 ;; Return value:  Size  Location     Type
 17905 ;;                  1    wreg      void 
 17906 ;; Registers used:
 17907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17908 ;; Tracked objects:
 17909 ;;		On entry : 0/0
 17910 ;;		On exit  : 0/0
 17911 ;;		Unchanged: 0/0
 17912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17917 ;;Total ram usage:        0 bytes
 17918 ;; Hardware stack levels used:    1
 17919 ;; Hardware stack levels required when called:    3
 17920 ;; This function calls:
 17921 ;;		Absolute function
 17922 ;;		_ADCC_ThresholdISR
 17923 ;;		_DMX_interrupt
 17924 ;;		_EUSART1_Receive_ISR
 17925 ;;		_I2C1_BusCollisionISR
 17926 ;;		_I2C1_ISR
 17927 ;;		_TMR0_ISR
 17928 ;; This function is called by:
 17929 ;;		Interrupt level 1
 17930 ;; This function uses a non-reentrant model
 17931 ;;
 17932                           
 17933  0004                     _INTERRUPT_InterruptManager:	
 17934                           
 17935                           ;incstack = 0
 17936 ;; hardware stack exceeded
 17937  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17938                           
 17939                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17940  0005  3180               	pagesel	$
 17941                           
 17942                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 17943  0006  014E               	movlb	14	; select bank14
 17944  0007  1A96               	btfsc	22,5	;volatile
 17945  0008  1E8C               	btfss	12,5	;volatile
 17946  0009  280E               	goto	i1l429
 17947                           
 17948                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17949  000A  3189  21C0  3180   	fcall	_TMR0_ISR
 17950                           
 17951                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17952  000D  282E               	goto	i1l441
 17953  000E                     i1l429:	
 17954                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17955                           
 17956  000E  1F0B               	btfss	11,6	;volatile
 17957  000F  282E               	goto	i1l441
 17958                           
 17959                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17960  0010  1899               	btfsc	25,1	;volatile
 17961  0011  1C8F               	btfss	15,1	;volatile
 17962  0012  2817               	goto	i1l432
 17963                           
 17964                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 17965  0013  3188  20EA  3180   	fcall	_I2C1_BusCollisionISR
 17966                           
 17967                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17968  0016  282E               	goto	i1l441
 17969  0017                     i1l432:	
 17970                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 17971                           
 17972  0017  1819               	btfsc	25,0	;volatile
 17973  0018  1C0F               	btfss	15,0	;volatile
 17974  0019  281E               	goto	i1l434
 17975                           
 17976                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 17977  001A  3180  2076  3180   	fcall	_I2C1_ISR
 17978                           
 17979                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17980  001D  282E               	goto	i1l441
 17981  001E                     i1l434:	
 17982                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 17983                           
 17984  001E  1897               	btfsc	23,1	;volatile
 17985  001F  1C8D               	btfss	13,1	;volatile
 17986  0020  2825               	goto	i1l436
 17987                           
 17988                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 17989  0021  3189  21B3  3180   	fcall	_ADCC_ThresholdISR
 17990                           
 17991                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17992  0024  282E               	goto	i1l441
 17993  0025                     i1l436:	
 17994                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 17995                           
 17996  0025  1A99               	btfsc	25,5	;volatile
 17997  0026  1E8F               	btfss	15,5	;volatile
 17998  0027  282E               	goto	i1l441
 17999                           
 18000                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 18001  0028  0142               	movlb	2	; select bank2
 18002  0029  086B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 18003  002A  008A               	movwf	10
 18004  002B  086A               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 18005  002C  000A               	callw
 18006  002D  3180               	pagesel	$
 18007  002E                     i1l441:	
 18008                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 18009                           
 18010  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18011  002F  0009               	retfie
 18012  0030                     __end_of_INTERRUPT_InterruptManager:	
 18013                           
 18014                           	psect	text65
 18015  09C0                     __ptext65:	
 18016 ;; *************** function _TMR0_ISR *****************
 18017 ;; Defined at:
 18018 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 18019 ;; Parameters:    Size  Location     Type
 18020 ;;		None
 18021 ;; Auto vars:     Size  Location     Type
 18022 ;;		None
 18023 ;; Return value:  Size  Location     Type
 18024 ;;                  1    wreg      void 
 18025 ;; Registers used:
 18026 ;;		wreg, status,2, status,0, pclath, cstack
 18027 ;; Tracked objects:
 18028 ;;		On entry : 0/0
 18029 ;;		On exit  : 0/0
 18030 ;;		Unchanged: 0/0
 18031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18036 ;;Total ram usage:        0 bytes
 18037 ;; Hardware stack levels used:    1
 18038 ;; Hardware stack levels required when called:    1
 18039 ;; This function calls:
 18040 ;;		Absolute function
 18041 ;;		_CLOCK_timerCallback
 18042 ;;		_TMR0_DefaultInterruptHandler
 18043 ;; This function is called by:
 18044 ;;		_INTERRUPT_InterruptManager
 18045 ;; This function uses a non-reentrant model
 18046 ;;
 18047                           
 18048                           
 18049                           ;psect for function _TMR0_ISR
 18050  09C0                     _TMR0_ISR:	
 18051                           
 18052                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 18053                           
 18054                           ;incstack = 0
 18055 ;; hardware stack exceeded
 18056                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 18057  09C0  014E               	movlb	14	; select bank14
 18058  09C1  128C               	bcf	12,5	;volatile
 18059                           
 18060                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 18061  09C2  0142               	movlb	2	; select bank2
 18062  09C3  0862               	movf	_TMR0_InterruptHandler^(0+256),w
 18063  09C4  0463               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 18064  09C5  1903               	btfsc	3,2
 18065  09C6  0008               	return
 18066                           
 18067                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 18068  09C7  0863               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 18069  09C8  008A               	movwf	10
 18070  09C9  0862               	movf	_TMR0_InterruptHandler^(0+256),w
 18071  09CA  000A               	callw
 18072  09CB  3189               	pagesel	$
 18073  09CC  0008               	return
 18074  09CD                     __end_of_TMR0_ISR:	
 18075                           
 18076                           	psect	text66
 18077  07F9                     __ptext66:	
 18078 ;; *************** function _CLOCK_timerCallback *****************
 18079 ;; Defined at:
 18080 ;;		line 20 in file "clock.c"
 18081 ;; Parameters:    Size  Location     Type
 18082 ;;		None
 18083 ;; Auto vars:     Size  Location     Type
 18084 ;;		None
 18085 ;; Return value:  Size  Location     Type
 18086 ;;                  1    wreg      void 
 18087 ;; Registers used:
 18088 ;;		wreg
 18089 ;; Tracked objects:
 18090 ;;		On entry : 0/0
 18091 ;;		On exit  : 0/0
 18092 ;;		Unchanged: 0/0
 18093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18098 ;;Total ram usage:        0 bytes
 18099 ;; Hardware stack levels used:    1
 18100 ;; This function calls:
 18101 ;;		Nothing
 18102 ;; This function is called by:
 18103 ;;		_CLOCK_init
 18104 ;;		_TMR0_ISR
 18105 ;; This function uses a non-reentrant model
 18106 ;;
 18107                           
 18108                           
 18109                           ;psect for function _CLOCK_timerCallback
 18110  07F9                     _CLOCK_timerCallback:	
 18111                           
 18112                           ;clock.c: 21:     currentTime++;
 18113                           
 18114                           ;incstack = 0
 18115 ;; hardware stack exceeded
 18116                           ; Regs used in _CLOCK_timerCallback: [wreg]
 18117  07F9  3001               	movlw	1
 18118  07FA  0141               	movlb	1	; select bank1
 18119  07FB  07B5               	addwf	_currentTime^(0+128),f
 18120  07FC  3000               	movlw	0
 18121  07FD  3DB6               	addwfc	(_currentTime+1)^(0+128),f
 18122  07FE  0008               	return
 18123  07FF                     __end_of_CLOCK_timerCallback:	
 18124                           
 18125                           	psect	text67
 18126  07FF                     __ptext67:	
 18127 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 18128 ;; Defined at:
 18129 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 18130 ;; Parameters:    Size  Location     Type
 18131 ;;		None
 18132 ;; Auto vars:     Size  Location     Type
 18133 ;;		None
 18134 ;; Return value:  Size  Location     Type
 18135 ;;                  1    wreg      void 
 18136 ;; Registers used:
 18137 ;;		None
 18138 ;; Tracked objects:
 18139 ;;		On entry : 0/0
 18140 ;;		On exit  : 0/0
 18141 ;;		Unchanged: 0/0
 18142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18147 ;;Total ram usage:        0 bytes
 18148 ;; Hardware stack levels used:    1
 18149 ;; This function calls:
 18150 ;;		Nothing
 18151 ;; This function is called by:
 18152 ;;		_TMR0_Initialize
 18153 ;;		_TMR0_ISR
 18154 ;; This function uses a non-reentrant model
 18155 ;;
 18156                           
 18157                           
 18158                           ;psect for function _TMR0_DefaultInterruptHandler
 18159  07FF                     _TMR0_DefaultInterruptHandler:	
 18160                           
 18161                           ;incstack = 0
 18162 ;; hardware stack exceeded
 18163                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 18164  07FF  0008               	return
 18165  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 18166                           
 18167                           	psect	text68
 18168  0076                     __ptext68:	
 18169 ;; *************** function _I2C1_ISR *****************
 18170 ;; Defined at:
 18171 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 18172 ;; Parameters:    Size  Location     Type
 18173 ;;		None
 18174 ;; Auto vars:     Size  Location     Type
 18175 ;;		None
 18176 ;; Return value:  Size  Location     Type
 18177 ;;                  1    wreg      void 
 18178 ;; Registers used:
 18179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18180 ;; Tracked objects:
 18181 ;;		On entry : 0/0
 18182 ;;		On exit  : 0/0
 18183 ;;		Unchanged: 0/0
 18184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18187 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18188 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18189 ;;Total ram usage:        4 bytes
 18190 ;; Hardware stack levels used:    1
 18191 ;; Hardware stack levels required when called:    1
 18192 ;; This function calls:
 18193 ;;		_I2C1_FunctionComplete
 18194 ;;		_I2C1_Stop
 18195 ;; This function is called by:
 18196 ;;		_INTERRUPT_InterruptManager
 18197 ;; This function uses a non-reentrant model
 18198 ;;
 18199                           
 18200                           
 18201                           ;psect for function _I2C1_ISR
 18202  0076                     _I2C1_ISR:	
 18203                           
 18204                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 18205                           
 18206                           ;incstack = 0
 18207 ;; hardware stack exceeded
 18208                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18209  0076  014E               	movlb	14	; select bank14
 18210  0077  100F               	bcf	15,0	;volatile
 18211                           
 18212                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 18213  0078  0143               	movlb	3	; select bank3
 18214  0079  1F90               	btfss	16,7	;volatile
 18215  007A  2997               	goto	i1l4396
 18216                           
 18217                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 18218  007B  1390               	bcf	16,7	;volatile
 18219                           
 18220                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 18221  007C  0141               	movlb	1	; select bank1
 18222  007D  01CF               	clrf	_i2c1_state^(0+128)
 18223                           
 18224                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 18225  007E  084D               	movf	_p_i2c1_current^(0+128),w
 18226  007F  3E02               	addlw	2
 18227  0080  0086               	movwf	6
 18228  0081  0187               	clrf	7
 18229  0082  0801               	movf	1,w
 18230  0083  0086               	movwf	6
 18231  0084  0187               	clrf	7
 18232  0085  0181               	clrf	1
 18233  0086  0A81               	incf	1,f
 18234                           
 18235                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 18236  0087  01CD               	clrf	_p_i2c1_current^(0+128)
 18237  0088  0008               	return
 18238  0089                     i1l549:	
 18239                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 18240                           
 18241                           
 18242                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 18243  0089  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 18244  008A  0008               	return
 18245                           
 18246                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 18247  008B  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18248  008C  00F9               	movwf	??_I2C1_ISR
 18249  008D  0879               	movf	??_I2C1_ISR,w
 18250  008E  00CD               	movwf	_p_i2c1_current^(0+128)
 18251                           
 18252                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 18253  008F  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18254  0090  0086               	movwf	6
 18255  0091  0187               	clrf	7
 18256  0092  0801               	movf	1,w
 18257  0093  00F9               	movwf	??_I2C1_ISR
 18258  0094  0879               	movf	??_I2C1_ISR,w
 18259  0095  00CE               	movwf	_i2c1_trb_count^(0+128)
 18260                           
 18261                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 18262  0096  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18263  0097  0086               	movwf	6
 18264  0098  0187               	clrf	7
 18265  0099  3F41               	moviw [1]fsr1
 18266  009A  00F2               	movwf	_p_i2c1_trb_current
 18267                           
 18268                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 18269  009B  3003               	movlw	3
 18270  009C  00F9               	movwf	??_I2C1_ISR
 18271  009D  0879               	movf	??_I2C1_ISR,w
 18272  009E  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 18273                           
 18274                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 18275  009F  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18276  00A0  3AD5               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 18277  00A1  1D03               	skipz
 18278  00A2  28A7               	goto	i1l4284
 18279                           
 18280                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 18281  00A3  30D2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 18282  00A4  00F9               	movwf	??_I2C1_ISR
 18283  00A5  0879               	movf	??_I2C1_ISR,w
 18284  00A6  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 18285  00A7                     i1l4284:	
 18286                           
 18287                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 18288  00A7  1022               	bcf	(_i2c1_object^(0+128)+2),0
 18289                           
 18290                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 18291  00A8  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 18292  00A9  0620               	xorwf	_i2c1_object^(0+128),w
 18293  00AA  1903               	btfsc	3,2
 18294                           
 18295                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 18296  00AB  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 18297                           
 18298                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 18299                           
 18300                           ;mcc_generated_files/i2c1.c: 290:                 }
 18301  00AC  0143               	movlb	3	; select bank3
 18302  00AD  1411               	bsf	17,0	;volatile
 18303  00AE                     i1l4288:	
 18304                           
 18305                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 18306  00AE  3002               	movlw	2
 18307  00AF  00F9               	movwf	??_I2C1_ISR
 18308  00B0  0879               	movf	??_I2C1_ISR,w
 18309  00B1  0141               	movlb	1	; select bank1
 18310  00B2  00CF               	movwf	_i2c1_state^(0+128)
 18311  00B3  0008               	return
 18312  00B4                     i1l554:	
 18313                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 18314                           
 18315  00B4  2940               	goto	i1l575
 18316  00B5                     i1l555:	
 18317                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 18318                           
 18319                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 18320                           
 18321                           
 18322                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 18323  00B5  0143               	movlb	3	; select bank3
 18324  00B6  1F11               	btfss	17,6	;volatile
 18325  00B7  28C1               	goto	i1l4296
 18326                           
 18327                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 18328  00B8  3001               	movlw	1
 18329  00B9  00F9               	movwf	??_I2C1_ISR
 18330  00BA  0879               	movf	??_I2C1_ISR,w
 18331  00BB  0141               	movlb	1	; select bank1
 18332  00BC  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 18333                           
 18334                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18335  00BD  3004               	movlw	4
 18336  00BE  318A  22D3         	fcall	_I2C1_Stop
 18337                           
 18338                           ;mcc_generated_files/i2c1.c: 319:             }
 18339  00C0  0008               	return
 18340  00C1                     i1l4296:	
 18341                           
 18342                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 18343  00C1  0876               	movf	I2C1_ISR@i2c_address+1,w
 18344  00C2  00FA               	movwf	??_I2C1_ISR+1
 18345  00C3  0875               	movf	I2C1_ISR@i2c_address,w
 18346  00C4  00F9               	movwf	??_I2C1_ISR
 18347  00C5  36FA               	lsrf	??_I2C1_ISR+1,f
 18348  00C6  0CF9               	rrf	??_I2C1_ISR,f
 18349  00C7  0879               	movf	??_I2C1_ISR,w
 18350  00C8  008C               	movwf	12	;volatile
 18351                           
 18352                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 18353  00C9  1C75               	btfss	I2C1_ISR@i2c_address,0
 18354  00CA  28D1               	goto	i1l4302
 18355                           
 18356                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 18357  00CB  300B               	movlw	11
 18358  00CC  00F9               	movwf	??_I2C1_ISR
 18359  00CD  0879               	movf	??_I2C1_ISR,w
 18360  00CE  0141               	movlb	1	; select bank1
 18361  00CF  00CF               	movwf	_i2c1_state^(0+128)
 18362                           
 18363                           ;mcc_generated_files/i2c1.c: 331:                 }
 18364  00D0  0008               	return
 18365  00D1                     i1l4302:	
 18366                           
 18367                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 18368  00D1  3003               	movlw	3
 18369  00D2  00F9               	movwf	??_I2C1_ISR
 18370  00D3  0879               	movf	??_I2C1_ISR,w
 18371  00D4  0141               	movlb	1	; select bank1
 18372  00D5  00CF               	movwf	_i2c1_state^(0+128)
 18373  00D6  0008               	return
 18374  00D7                     i1l560:	
 18375                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 18376                           
 18377                           
 18378                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 18379  00D7  0143               	movlb	3	; select bank3
 18380  00D8  1F11               	btfss	17,6	;volatile
 18381  00D9  28E3               	goto	i1l561
 18382                           
 18383                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 18384  00DA  3001               	movlw	1
 18385  00DB  00F9               	movwf	??_I2C1_ISR
 18386  00DC  0879               	movf	??_I2C1_ISR,w
 18387  00DD  0141               	movlb	1	; select bank1
 18388  00DE  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 18389                           
 18390                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18391  00DF  3004               	movlw	4
 18392  00E0  318A  22D3         	fcall	_I2C1_Stop
 18393                           
 18394                           ;mcc_generated_files/i2c1.c: 347:             }
 18395  00E2  0008               	return
 18396  00E3                     i1l561:	
 18397                           ;mcc_generated_files/i2c1.c: 348:             else
 18398                           
 18399                           
 18400                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 18401  00E3  1491               	bsf	17,1	;volatile
 18402                           
 18403                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 18404  00E4  0876               	movf	I2C1_ISR@i2c_address+1,w
 18405  00E5  00FA               	movwf	??_I2C1_ISR+1
 18406  00E6  0875               	movf	I2C1_ISR@i2c_address,w
 18407  00E7  00F9               	movwf	??_I2C1_ISR
 18408  00E8  087A               	movf	??_I2C1_ISR+1,w
 18409  00E9  00F9               	movwf	??_I2C1_ISR
 18410  00EA  01FA               	clrf	??_I2C1_ISR+1
 18411  00EB  3006               	movlw	6
 18412  00EC  0579               	andwf	??_I2C1_ISR,w
 18413  00ED  00FB               	movwf	??_I2C1_ISR+2
 18414  00EE  3000               	movlw	0
 18415  00EF  057A               	andwf	??_I2C1_ISR+1,w
 18416  00F0  00FC               	movwf	??_I2C1_ISR+3
 18417  00F1  30F0               	movlw	240
 18418  00F2  047B               	iorwf	??_I2C1_ISR+2,w
 18419  00F3  00F5               	movwf	I2C1_ISR@i2c_address
 18420  00F4  3000               	movlw	0
 18421  00F5  047C               	iorwf	??_I2C1_ISR+3,w
 18422  00F6  00F6               	movwf	I2C1_ISR@i2c_address+1
 18423                           
 18424                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 18425  00F7  1475               	bsf	I2C1_ISR@i2c_address,0
 18426                           
 18427                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 18428  00F8  0141               	movlb	1	; select bank1
 18429  00F9  01CA               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 18430  00FA  0ACA               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 18431  00FB  28AE               	goto	i1l4288
 18432  00FC                     i1l4316:	
 18433                           
 18434                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 18435  00FC  034A               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 18436  00FD  1903               	btfsc	3,2
 18437  00FE  2915               	goto	i1l4336
 18438                           
 18439                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 18440  00FF  0872               	movf	_p_i2c1_trb_current,w
 18441  0100  0086               	movwf	6
 18442  0101  3001               	movlw	1	; select bank2/3
 18443  0102  0087               	movwf	7
 18444  0103  3F40               	moviw [0]fsr1
 18445  0104  00F5               	movwf	I2C1_ISR@i2c_address
 18446  0105  3F41               	moviw [1]fsr1
 18447  0106  00F6               	movwf	I2C1_ISR@i2c_address+1
 18448                           
 18449                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 18450  0107  0872               	movf	_p_i2c1_trb_current,w
 18451  0108  0086               	movwf	6
 18452  0109  3001               	movlw	1	; select bank2/3
 18453  010A  0087               	movwf	7
 18454  010B  3001               	movlw	1	; select bank2/3
 18455  010C  3F43               	moviw [3]fsr1
 18456  010D  00CC               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 18457                           
 18458                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 18459  010E  0872               	movf	_p_i2c1_trb_current,w
 18460  010F  0086               	movwf	6
 18461  0110  3001               	movlw	1	; select bank2/3
 18462  0111  0087               	movwf	7
 18463  0112  3001               	movlw	1	; select bank2/3
 18464  0113  3F42               	moviw [2]fsr1
 18465  0114  00CB               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 18466  0115                     i1l4336:	
 18467                           
 18468                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 18469  0115  0875               	movf	I2C1_ISR@i2c_address,w
 18470  0116  0143               	movlb	3	; select bank3
 18471  0117  008C               	movwf	12	;volatile
 18472                           
 18473                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 18474  0118  1C75               	btfss	I2C1_ISR@i2c_address,0
 18475  0119  28D1               	goto	i1l4302
 18476                           
 18477                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 18478  011A  3005               	movlw	5
 18479  011B  00F9               	movwf	??_I2C1_ISR
 18480  011C  0879               	movf	??_I2C1_ISR,w
 18481  011D  0141               	movlb	1	; select bank1
 18482  011E  00CF               	movwf	_i2c1_state^(0+128)
 18483                           
 18484                           ;mcc_generated_files/i2c1.c: 419:                 }
 18485  011F  0008               	return
 18486  0120                     i1l571:	
 18487                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 18488                           
 18489                           
 18490                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 18491  0120  0143               	movlb	3	; select bank3
 18492  0121  1F11               	btfss	17,6	;volatile
 18493  0122  292E               	goto	i1l4350
 18494                           
 18495                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 18496  0123  3001               	movlw	1
 18497  0124  00F9               	movwf	??_I2C1_ISR
 18498  0125  0879               	movf	??_I2C1_ISR,w
 18499  0126  0141               	movlb	1	; select bank1
 18500  0127  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 18501                           
 18502                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 18503  0128  0143               	movlb	3	; select bank3
 18504  0129  1311               	bcf	17,6	;volatile
 18505                           
 18506                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 18507  012A  3005               	movlw	5
 18508  012B  318A  22D3         	fcall	_I2C1_Stop
 18509                           
 18510                           ;mcc_generated_files/i2c1.c: 442:             }
 18511  012D  0008               	return
 18512  012E                     i1l4350:	
 18513                           
 18514                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 18515  012E  3001               	movlw	1
 18516  012F  0141               	movlb	1	; select bank1
 18517  0130  02CB               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 18518  0131  0A4B               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 18519  0132  1D03               	btfss	3,2
 18520  0133  2943               	goto	i1l4358
 18521                           
 18522                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 18523  0134  3004               	movlw	4
 18524  0135  00F9               	movwf	??_I2C1_ISR
 18525  0136  0879               	movf	??_I2C1_ISR,w
 18526  0137  07F2               	addwf	_p_i2c1_trb_current,f
 18527                           
 18528                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 18529  0138  3001               	movlw	1
 18530  0139  02CE               	subwf	_i2c1_trb_count^(0+128),f
 18531  013A  1D03               	btfss	3,2
 18532  013B  2940               	goto	i1l575
 18533                           
 18534                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18535  013C  3000               	movlw	0
 18536  013D  318A  22D3         	fcall	_I2C1_Stop
 18537                           
 18538                           ;mcc_generated_files/i2c1.c: 457:                     }
 18539  013F  0008               	return
 18540  0140                     i1l575:	
 18541                           ;mcc_generated_files/i2c1.c: 458:                     else
 18542                           
 18543                           
 18544                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 18545  0140  0143               	movlb	3	; select bank3
 18546  0141  1491               	bsf	17,1	;volatile
 18547  0142  28AE               	goto	i1l4288
 18548  0143                     i1l4358:	
 18549                           
 18550                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 18551  0143  084C               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 18552  0144  0086               	movwf	6
 18553  0145  0187               	clrf	7
 18554  0146  0801               	movf	1,w
 18555  0147  0143               	movlb	3	; select bank3
 18556  0148  008C               	movwf	12	;volatile
 18557  0149  3001               	movlw	1
 18558  014A  00F9               	movwf	??_I2C1_ISR
 18559  014B  0879               	movf	??_I2C1_ISR,w
 18560  014C  0141               	movlb	1	; select bank1
 18561  014D  07CC               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 18562  014E  0008               	return
 18563  014F                     i1l578:	
 18564                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 18565                           
 18566                           
 18567                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 18568  014F  0143               	movlb	3	; select bank3
 18569  0150  1F11               	btfss	17,6	;volatile
 18570  0151  295D               	goto	i1l579
 18571                           
 18572                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 18573  0152  3001               	movlw	1
 18574  0153  00F9               	movwf	??_I2C1_ISR
 18575  0154  0879               	movf	??_I2C1_ISR,w
 18576  0155  0141               	movlb	1	; select bank1
 18577  0156  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 18578                           
 18579                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18580  0157  3004               	movlw	4
 18581  0158  318A  22D3         	fcall	_I2C1_Stop
 18582                           
 18583                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 18584  015A  0143               	movlb	3	; select bank3
 18585  015B  1311               	bcf	17,6	;volatile
 18586                           
 18587                           ;mcc_generated_files/i2c1.c: 495:             }
 18588  015C  0008               	return
 18589  015D                     i1l579:	
 18590                           ;mcc_generated_files/i2c1.c: 496:             else
 18591                           
 18592                           
 18593                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 18594  015D  1591               	bsf	17,3	;volatile
 18595                           
 18596                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 18597  015E  3008               	movlw	8
 18598  015F  00F9               	movwf	??_I2C1_ISR
 18599  0160  0879               	movf	??_I2C1_ISR,w
 18600  0161  0141               	movlb	1	; select bank1
 18601  0162  00CF               	movwf	_i2c1_state^(0+128)
 18602  0163  0008               	return
 18603  0164                     i1l4370:	
 18604                           
 18605                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 18606  0164  3008               	movlw	8
 18607  0165  00F9               	movwf	??_I2C1_ISR
 18608  0166  0879               	movf	??_I2C1_ISR,w
 18609  0167  00CF               	movwf	_i2c1_state^(0+128)
 18610                           
 18611                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 18612  0168  0143               	movlb	3	; select bank3
 18613  0169  1591               	bsf	17,3	;volatile
 18614                           
 18615                           ;mcc_generated_files/i2c1.c: 513:             break;
 18616  016A  0008               	return
 18617  016B                     i1l4374:	
 18618                           
 18619                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 18620  016B  0143               	movlb	3	; select bank3
 18621  016C  080C               	movf	12,w	;volatile
 18622  016D  00F9               	movwf	??_I2C1_ISR
 18623  016E  0141               	movlb	1	; select bank1
 18624  016F  084C               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 18625  0170  0086               	movwf	6
 18626  0171  0187               	clrf	7
 18627  0172  0879               	movf	??_I2C1_ISR,w
 18628  0173  0081               	movwf	1
 18629  0174  3001               	movlw	1
 18630  0175  00F9               	movwf	??_I2C1_ISR
 18631  0176  0879               	movf	??_I2C1_ISR,w
 18632  0177  07CC               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 18633                           
 18634                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 18635  0178  3001               	movlw	1
 18636  0179  02CB               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 18637  017A  1903               	btfsc	3,2
 18638  017B  2984               	goto	i1l583
 18639                           
 18640                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 18641  017C  0143               	movlb	3	; select bank3
 18642  017D  1291               	bcf	17,5	;volatile
 18643                           
 18644                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 18645  017E  3006               	movlw	6
 18646  017F  00F9               	movwf	??_I2C1_ISR
 18647  0180  0879               	movf	??_I2C1_ISR,w
 18648  0181  0141               	movlb	1	; select bank1
 18649  0182  00CF               	movwf	_i2c1_state^(0+128)
 18650                           
 18651                           ;mcc_generated_files/i2c1.c: 532:             }
 18652  0183  2988               	goto	i1l4386
 18653  0184                     i1l583:	
 18654                           ;mcc_generated_files/i2c1.c: 533:             else
 18655                           
 18656                           
 18657                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 18658  0184  0143               	movlb	3	; select bank3
 18659  0185  1691               	bsf	17,5	;volatile
 18660                           
 18661                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 18662  0186  3189  21F7         	fcall	_I2C1_FunctionComplete
 18663  0188                     i1l4386:	
 18664                           
 18665                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 18666  0188  0143               	movlb	3	; select bank3
 18667  0189  1611               	bsf	17,4	;volatile
 18668                           
 18669                           ;mcc_generated_files/i2c1.c: 545:             break;
 18670  018A  0008               	return
 18671  018B                     i1l4388:	
 18672                           
 18673                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18674  018B  3000               	movlw	0
 18675  018C  318A  22D3         	fcall	_I2C1_Stop
 18676                           
 18677                           ;mcc_generated_files/i2c1.c: 552:             break;
 18678  018E  0008               	return
 18679  018F                     i1l4390:	
 18680                           
 18681                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 18682  018F  3001               	movlw	1
 18683  0190  00F9               	movwf	??_I2C1_ISR
 18684  0191  0879               	movf	??_I2C1_ISR,w
 18685  0192  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 18686                           
 18687                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 18688  0193  3006               	movlw	6
 18689  0194  318A  22D3         	fcall	_I2C1_Stop
 18690                           
 18691                           ;mcc_generated_files/i2c1.c: 560:             break;
 18692  0196  0008               	return
 18693  0197                     i1l4396:	
 18694  0197  0141               	movlb	1	; select bank1
 18695  0198  084F               	movf	_i2c1_state^(0+128),w
 18696  0199  00F9               	movwf	??_I2C1_ISR
 18697  019A  01FA               	clrf	??_I2C1_ISR+1
 18698                           
 18699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18700                           ; Switch size 1, requested type "simple"
 18701                           ; Number of cases is 1, Range of values is 0 to 0
 18702                           ; switch strategies available:
 18703                           ; Name         Instructions Cycles
 18704                           ; simple_byte            4     3 (average)
 18705                           ; direct_byte            8     6 (fixed)
 18706                           ; jumptable            260     6 (fixed)
 18707                           ;	Chosen strategy is simple_byte
 18708  019B  087A               	movf	??_I2C1_ISR+1,w
 18709  019C  3A00               	xorlw	0	; case 0
 18710  019D  1903               	skipnz
 18711  019E  29A0               	goto	i1l5902
 18712  019F  298F               	goto	i1l4390
 18713  01A0                     i1l5902:	
 18714                           
 18715                           ; Switch size 1, requested type "simple"
 18716                           ; Number of cases is 11, Range of values is 0 to 11
 18717                           ; switch strategies available:
 18718                           ; Name         Instructions Cycles
 18719                           ; direct_byte           30     6 (fixed)
 18720                           ; simple_byte           34    18 (average)
 18721                           ; jumptable            260     6 (fixed)
 18722                           ;	Chosen strategy is simple_byte
 18723  01A0  0879               	movf	??_I2C1_ISR,w
 18724  01A1  3A00               	xorlw	0	; case 0
 18725  01A2  1903               	skipnz
 18726  01A3  2889               	goto	i1l549
 18727  01A4  3A01               	xorlw	1	; case 1
 18728  01A5  1903               	skipnz
 18729  01A6  28B4               	goto	i1l554
 18730  01A7  3A03               	xorlw	3	; case 2
 18731  01A8  1903               	skipnz
 18732  01A9  28FC               	goto	i1l4316
 18733  01AA  3A01               	xorlw	1	; case 3
 18734  01AB  1903               	skipnz
 18735  01AC  2920               	goto	i1l571
 18736  01AD  3A07               	xorlw	7	; case 4
 18737  01AE  1903               	skipnz
 18738  01AF  298B               	goto	i1l4388
 18739  01B0  3A01               	xorlw	1	; case 5
 18740  01B1  1903               	skipnz
 18741  01B2  294F               	goto	i1l578
 18742  01B3  3A03               	xorlw	3	; case 6
 18743  01B4  1903               	skipnz
 18744  01B5  2964               	goto	i1l4370
 18745  01B6  3A01               	xorlw	1	; case 7
 18746  01B7  1903               	skipnz
 18747  01B8  298B               	goto	i1l4388
 18748  01B9  3A0F               	xorlw	15	; case 8
 18749  01BA  1903               	skipnz
 18750  01BB  296B               	goto	i1l4374
 18751  01BC  3A02               	xorlw	2	; case 10
 18752  01BD  1903               	skipnz
 18753  01BE  28B5               	goto	i1l555
 18754  01BF  3A01               	xorlw	1	; case 11
 18755  01C0  1903               	skipnz
 18756  01C1  28D7               	goto	i1l560
 18757  01C2  298F               	goto	i1l4390
 18758  01C3  0008               	return
 18759  01C4                     __end_of_I2C1_ISR:	
 18760                           
 18761                           	psect	text69
 18762  0AD3                     __ptext69:	
 18763 ;; *************** function _I2C1_Stop *****************
 18764 ;; Defined at:
 18765 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 18766 ;; Parameters:    Size  Location     Type
 18767 ;;  completion_c    1    wreg     enum E10866
 18768 ;; Auto vars:     Size  Location     Type
 18769 ;;  completion_c    1    1[COMMON] enum E10866
 18770 ;; Return value:  Size  Location     Type
 18771 ;;                  1    wreg      void 
 18772 ;; Registers used:
 18773 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18774 ;; Tracked objects:
 18775 ;;		On entry : 0/0
 18776 ;;		On exit  : 0/0
 18777 ;;		Unchanged: 0/0
 18778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18783 ;;Total ram usage:        2 bytes
 18784 ;; Hardware stack levels used:    1
 18785 ;; This function calls:
 18786 ;;		Nothing
 18787 ;; This function is called by:
 18788 ;;		_I2C1_ISR
 18789 ;; This function uses a non-reentrant model
 18790 ;;
 18791                           
 18792                           
 18793                           ;psect for function _I2C1_Stop
 18794  0AD3                     _I2C1_Stop:	
 18795                           
 18796                           ;incstack = 0
 18797 ;; hardware stack exceeded
 18798                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 18799                           ;I2C1_Stop@completion_code stored from wreg
 18800  0AD3  00F8               	movwf	I2C1_Stop@completion_code
 18801                           
 18802                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 18803  0AD4  0143               	movlb	3	; select bank3
 18804  0AD5  1511               	bsf	17,2	;volatile
 18805                           
 18806                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 18807  0AD6  0141               	movlb	1	; select bank1
 18808  0AD7  084D               	movf	_p_i2c1_current^(0+128),w
 18809  0AD8  3E02               	addlw	2
 18810  0AD9  0086               	movwf	6
 18811  0ADA  0187               	clrf	7
 18812  0ADB  0801               	movf	1,w
 18813  0ADC  1903               	btfsc	3,2
 18814  0ADD  2AE9               	goto	i1l4020
 18815                           
 18816                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 18817  0ADE  0878               	movf	I2C1_Stop@completion_code,w
 18818  0ADF  00F7               	movwf	??_I2C1_Stop
 18819  0AE0  084D               	movf	_p_i2c1_current^(0+128),w
 18820  0AE1  3E02               	addlw	2
 18821  0AE2  0086               	movwf	6
 18822  0AE3  0187               	clrf	7
 18823  0AE4  0801               	movf	1,w
 18824  0AE5  0086               	movwf	6
 18825  0AE6  0187               	clrf	7
 18826  0AE7  0877               	movf	??_I2C1_Stop,w
 18827  0AE8  0081               	movwf	1
 18828  0AE9                     i1l4020:	
 18829                           
 18830                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 18831  0AE9  01CF               	clrf	_i2c1_state^(0+128)
 18832  0AEA  0008               	return
 18833  0AEB                     __end_of_I2C1_Stop:	
 18834                           
 18835                           	psect	text70
 18836  09F7                     __ptext70:	
 18837 ;; *************** function _I2C1_FunctionComplete *****************
 18838 ;; Defined at:
 18839 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 18840 ;; Parameters:    Size  Location     Type
 18841 ;;		None
 18842 ;; Auto vars:     Size  Location     Type
 18843 ;;		None
 18844 ;; Return value:  Size  Location     Type
 18845 ;;                  1    wreg      void 
 18846 ;; Registers used:
 18847 ;;		wreg, status,2, status,0
 18848 ;; Tracked objects:
 18849 ;;		On entry : 0/0
 18850 ;;		On exit  : 0/0
 18851 ;;		Unchanged: 0/0
 18852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18857 ;;Total ram usage:        1 bytes
 18858 ;; Hardware stack levels used:    1
 18859 ;; This function calls:
 18860 ;;		Nothing
 18861 ;; This function is called by:
 18862 ;;		_I2C1_ISR
 18863 ;; This function uses a non-reentrant model
 18864 ;;
 18865                           
 18866                           
 18867                           ;psect for function _I2C1_FunctionComplete
 18868  09F7                     _I2C1_FunctionComplete:	
 18869                           
 18870                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 18871                           
 18872                           ;incstack = 0
 18873 ;; hardware stack exceeded
 18874                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 18875  09F7  3004               	movlw	4
 18876  09F8  00F7               	movwf	??_I2C1_FunctionComplete
 18877  09F9  0877               	movf	??_I2C1_FunctionComplete,w
 18878  09FA  07F2               	addwf	_p_i2c1_trb_current,f
 18879                           
 18880                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 18881  09FB  3001               	movlw	1
 18882  09FC  0141               	movlb	1	; select bank1
 18883  09FD  02CE               	subwf	_i2c1_trb_count^(0+128),f
 18884  09FE  1D03               	btfss	3,2
 18885  09FF  2A05               	goto	i1l590
 18886                           
 18887                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 18888  0A00  3004               	movlw	4
 18889  0A01  00F7               	movwf	??_I2C1_FunctionComplete
 18890  0A02  0877               	movf	??_I2C1_FunctionComplete,w
 18891  0A03  00CF               	movwf	_i2c1_state^(0+128)
 18892                           
 18893                           ;mcc_generated_files/i2c1.c: 575:     }
 18894  0A04  0008               	return
 18895  0A05                     i1l590:	
 18896                           ;mcc_generated_files/i2c1.c: 576:     else
 18897                           
 18898                           
 18899                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 18900  0A05  01CF               	clrf	_i2c1_state^(0+128)
 18901  0A06  0ACF               	incf	_i2c1_state^(0+128),f
 18902  0A07  0008               	return
 18903  0A08                     __end_of_I2C1_FunctionComplete:	
 18904                           
 18905                           	psect	text71
 18906  08EA                     __ptext71:	
 18907 ;; *************** function _I2C1_BusCollisionISR *****************
 18908 ;; Defined at:
 18909 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 18910 ;; Parameters:    Size  Location     Type
 18911 ;;		None
 18912 ;; Auto vars:     Size  Location     Type
 18913 ;;		None
 18914 ;; Return value:  Size  Location     Type
 18915 ;;                  1    wreg      void 
 18916 ;; Registers used:
 18917 ;;		None
 18918 ;; Tracked objects:
 18919 ;;		On entry : 0/0
 18920 ;;		On exit  : 0/0
 18921 ;;		Unchanged: 0/0
 18922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18927 ;;Total ram usage:        0 bytes
 18928 ;; Hardware stack levels used:    1
 18929 ;; This function calls:
 18930 ;;		Nothing
 18931 ;; This function is called by:
 18932 ;;		_INTERRUPT_InterruptManager
 18933 ;; This function uses a non-reentrant model
 18934 ;;
 18935                           
 18936                           
 18937                           ;psect for function _I2C1_BusCollisionISR
 18938  08EA                     _I2C1_BusCollisionISR:	
 18939                           
 18940                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 18941                           
 18942                           ;incstack = 0
 18943 ;; hardware stack exceeded
 18944                           ; Regs used in _I2C1_BusCollisionISR: []
 18945  08EA  014E               	movlb	14	; select bank14
 18946  08EB  108F               	bcf	15,1	;volatile
 18947  08EC  0008               	return
 18948  08ED                     __end_of_I2C1_BusCollisionISR:	
 18949                           
 18950                           	psect	text72
 18951  0E43                     __ptext72:	
 18952 ;; *************** function _DMX_interrupt *****************
 18953 ;; Defined at:
 18954 ;;		line 54 in file "dmx.c"
 18955 ;; Parameters:    Size  Location     Type
 18956 ;;		None
 18957 ;; Auto vars:     Size  Location     Type
 18958 ;;  dummy           1    6[COMMON] volatile unsigned char 
 18959 ;; Return value:  Size  Location     Type
 18960 ;;                  1    wreg      void 
 18961 ;; Registers used:
 18962 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18963 ;; Tracked objects:
 18964 ;;		On entry : 0/0
 18965 ;;		On exit  : 0/0
 18966 ;;		Unchanged: 0/0
 18967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18970 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18971 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18972 ;;Total ram usage:        7 bytes
 18973 ;; Hardware stack levels used:    1
 18974 ;; This function calls:
 18975 ;;		Nothing
 18976 ;; This function is called by:
 18977 ;;		_DMX_init
 18978 ;;		_INTERRUPT_InterruptManager
 18979 ;; This function uses a non-reentrant model
 18980 ;;
 18981                           
 18982                           
 18983                           ;psect for function _DMX_interrupt
 18984  0E43                     _DMX_interrupt:	
 18985                           
 18986                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 18987                           
 18988                           ;incstack = 0
 18989 ;; hardware stack exceeded
 18990                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 18991  0E43  0142               	movlb	2	; select bank2
 18992  0E44  1C9D               	btfss	29,1	;volatile
 18993  0E45  2E48               	goto	i1l4684
 18994                           
 18995                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 18996  0E46  121D               	bcf	29,4	;volatile
 18997                           
 18998                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 18999  0E47  161D               	bsf	29,4	;volatile
 19000  0E48                     i1l4684:	
 19001                           
 19002                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 19003  0E48  0141               	movlb	1	; select bank1
 19004  0E49  0863               	movf	_initial^(0+128),w
 19005  0E4A  0464               	iorwf	(_initial+1)^(0+128),w
 19006  0E4B  1D03               	btfss	3,2
 19007  0E4C  2E6D               	goto	i1l4692
 19008  0E4D  0142               	movlb	2	; select bank2
 19009  0E4E  191D               	btfsc	29,2	;volatile
 19010  0E4F  2E6D               	goto	i1l4692
 19011                           
 19012                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 19013  0E50  0819               	movf	25,w	;volatile
 19014  0E51  00F7               	movwf	??_DMX_interrupt
 19015  0E52  01F8               	clrf	??_DMX_interrupt+1
 19016  0E53  0141               	movlb	1	; select bank1
 19017  0E54  082A               	movf	(_arrayIndex+1)^(0+128),w
 19018  0E55  00FA               	movwf	??_DMX_interrupt+3
 19019  0E56  0829               	movf	_arrayIndex^(0+128),w
 19020  0E57  00F9               	movwf	??_DMX_interrupt+2
 19021  0E58  35F9               	lslf	??_DMX_interrupt+2,f
 19022  0E59  0DFA               	rlf	??_DMX_interrupt+3,f
 19023  0E5A  30EE               	movlw	238
 19024  0E5B  00FB               	movwf	??_DMX_interrupt+4
 19025  0E5C  3023               	movlw	35
 19026  0E5D  00FC               	movwf	??_DMX_interrupt+5
 19027  0E5E  0879               	movf	??_DMX_interrupt+2,w
 19028  0E5F  077B               	addwf	??_DMX_interrupt+4,w
 19029  0E60  0086               	movwf	6
 19030  0E61  087A               	movf	??_DMX_interrupt+3,w
 19031  0E62  3D7C               	addwfc	??_DMX_interrupt+5,w
 19032  0E63  0087               	movwf	7
 19033  0E64  0877               	movf	??_DMX_interrupt,w
 19034  0E65  3FC0               	movwi [0]fsr1
 19035  0E66  0878               	movf	??_DMX_interrupt+1,w
 19036  0E67  3FC1               	movwi [1]fsr1
 19037                           
 19038                           ;dmx.c: 63:         arrayIndex += 1;
 19039  0E68  3001               	movlw	1
 19040  0E69  07A9               	addwf	_arrayIndex^(0+128),f
 19041  0E6A  3000               	movlw	0
 19042  0E6B  3DAA               	addwfc	(_arrayIndex+1)^(0+128),f
 19043                           
 19044                           ;dmx.c: 64:     } else {
 19045  0E6C  2E77               	goto	i1l4696
 19046  0E6D                     i1l4692:	
 19047                           
 19048                           ;dmx.c: 65:         arrayIndex = 0;
 19049  0E6D  0141               	movlb	1	; select bank1
 19050  0E6E  01A9               	clrf	_arrayIndex^(0+128)
 19051  0E6F  01AA               	clrf	(_arrayIndex+1)^(0+128)
 19052                           
 19053                           ;dmx.c: 66:         initial = 0;
 19054  0E70  01E3               	clrf	_initial^(0+128)
 19055  0E71  01E4               	clrf	(_initial+1)^(0+128)
 19056                           
 19057                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 19058  0E72  0142               	movlb	2	; select bank2
 19059  0E73  0819               	movf	25,w	;volatile
 19060  0E74  00F7               	movwf	??_DMX_interrupt
 19061  0E75  0877               	movf	??_DMX_interrupt,w
 19062  0E76  00FD               	movwf	DMX_interrupt@dummy	;volatile
 19063  0E77                     i1l4696:	
 19064                           
 19065                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 19066  0E77  014E               	movlb	14	; select bank14
 19067  0E78  128F               	bcf	15,5	;volatile
 19068  0E79  0008               	return
 19069  0E7A                     __end_of_DMX_interrupt:	
 19070                           
 19071                           	psect	text73
 19072  0DA5                     __ptext73:	
 19073 ;; *************** function _EUSART1_Receive_ISR *****************
 19074 ;; Defined at:
 19075 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 19076 ;; Parameters:    Size  Location     Type
 19077 ;;		None
 19078 ;; Auto vars:     Size  Location     Type
 19079 ;;		None
 19080 ;; Return value:  Size  Location     Type
 19081 ;;                  1    wreg      void 
 19082 ;; Registers used:
 19083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19084 ;; Tracked objects:
 19085 ;;		On entry : 0/0
 19086 ;;		On exit  : 0/0
 19087 ;;		Unchanged: 0/0
 19088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19093 ;;Total ram usage:        0 bytes
 19094 ;; Hardware stack levels used:    1
 19095 ;; Hardware stack levels required when called:    2
 19096 ;; This function calls:
 19097 ;;		Absolute function
 19098 ;;		_EUSART1_DefaultErrorHandler
 19099 ;;		_EUSART1_DefaultFramingErrorHandler
 19100 ;;		_EUSART1_DefaultOverrunErrorHandler
 19101 ;;		_EUSART1_RxDataHandler
 19102 ;; This function is called by:
 19103 ;;		_EUSART1_Initialize
 19104 ;;		_INTERRUPT_InterruptManager
 19105 ;; This function uses a non-reentrant model
 19106 ;;
 19107                           
 19108                           
 19109                           ;psect for function _EUSART1_Receive_ISR
 19110  0DA5                     _EUSART1_Receive_ISR:	
 19111                           
 19112                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 19113                           
 19114                           ;incstack = 0
 19115 ;; hardware stack exceeded
 19116                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19117  0DA5  0874               	movf	_eusart1RxHead,w	;volatile
 19118  0DA6  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19119  0DA7  0086               	movwf	6
 19120  0DA8  3001               	movlw	1	; select bank2/3
 19121  0DA9  0087               	movwf	7
 19122  0DAA  0181               	clrf	1
 19123                           
 19124                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 19125  0DAB  0142               	movlb	2	; select bank2
 19126  0DAC  1D1D               	btfss	29,2	;volatile
 19127  0DAD  2DB9               	goto	i1l4240
 19128                           
 19129                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 19130  0DAE  0874               	movf	_eusart1RxHead,w	;volatile
 19131  0DAF  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19132  0DB0  0086               	movwf	6
 19133  0DB1  3001               	movlw	1	; select bank2/3
 19134  0DB2  0087               	movwf	7
 19135  0DB3  1481               	bsf	1,1
 19136                           
 19137                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 19138  0DB4  0869               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 19139  0DB5  008A               	movwf	10
 19140  0DB6  0868               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 19141  0DB7  000A               	callw
 19142  0DB8  318D               	pagesel	$
 19143  0DB9                     i1l4240:	
 19144                           
 19145                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 19146  0DB9  0142               	movlb	2	; select bank2
 19147  0DBA  1C9D               	btfss	29,1	;volatile
 19148  0DBB  2DC7               	goto	i1l4246
 19149                           
 19150                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 19151  0DBC  0874               	movf	_eusart1RxHead,w	;volatile
 19152  0DBD  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19153  0DBE  0086               	movwf	6
 19154  0DBF  3001               	movlw	1	; select bank2/3
 19155  0DC0  0087               	movwf	7
 19156  0DC1  1501               	bsf	1,2
 19157                           
 19158                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 19159  0DC2  0867               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 19160  0DC3  008A               	movwf	10
 19161  0DC4  0866               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 19162  0DC5  000A               	callw
 19163  0DC6  318D               	pagesel	$
 19164  0DC7                     i1l4246:	
 19165                           
 19166                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 19167  0DC7  0874               	movf	_eusart1RxHead,w	;volatile
 19168  0DC8  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19169  0DC9  0086               	movwf	6
 19170  0DCA  3001               	movlw	1	; select bank2/3
 19171  0DCB  0087               	movwf	7
 19172  0DCC  0801               	movf	1,w
 19173  0DCD  1903               	btfsc	3,2
 19174  0DCE  2DD6               	goto	i1l4250
 19175                           
 19176                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 19177  0DCF  0142               	movlb	2	; select bank2
 19178  0DD0  0865               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 19179  0DD1  008A               	movwf	10
 19180  0DD2  0864               	movf	_EUSART1_ErrorHandler^(0+256),w
 19181  0DD3  000A               	callw
 19182  0DD4  318D               	pagesel	$
 19183                           
 19184                           ;mcc_generated_files/eusart1.c: 188:     } else {
 19185  0DD5  0008               	return
 19186  0DD6                     i1l4250:	
 19187                           
 19188                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 19189  0DD6  318A  22BB         	fcall	_EUSART1_RxDataHandler
 19190  0DD8  0008               	return
 19191  0DD9                     __end_of_EUSART1_Receive_ISR:	
 19192                           
 19193                           	psect	text74
 19194  08F1                     __ptext74:	
 19195 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 19196 ;; Defined at:
 19197 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 19198 ;; Parameters:    Size  Location     Type
 19199 ;;		None
 19200 ;; Auto vars:     Size  Location     Type
 19201 ;;		None
 19202 ;; Return value:  Size  Location     Type
 19203 ;;                  1    wreg      void 
 19204 ;; Registers used:
 19205 ;;		None
 19206 ;; Tracked objects:
 19207 ;;		On entry : 0/0
 19208 ;;		On exit  : 0/0
 19209 ;;		Unchanged: 0/0
 19210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19215 ;;Total ram usage:        0 bytes
 19216 ;; Hardware stack levels used:    1
 19217 ;; This function calls:
 19218 ;;		Nothing
 19219 ;; This function is called by:
 19220 ;;		_EUSART1_Initialize
 19221 ;;		_EUSART1_Receive_ISR
 19222 ;; This function uses a non-reentrant model
 19223 ;;
 19224                           
 19225                           
 19226                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 19227  08F1                     _EUSART1_DefaultOverrunErrorHandler:	
 19228                           
 19229                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 19230                           
 19231                           ;incstack = 0
 19232 ;; hardware stack exceeded
 19233                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 19234  08F1  0142               	movlb	2	; select bank2
 19235  08F2  121D               	bcf	29,4	;volatile
 19236                           
 19237                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 19238  08F3  161D               	bsf	29,4	;volatile
 19239  08F4  0008               	return
 19240  08F5                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 19241                           
 19242                           	psect	text75
 19243  0003                     __ptext75:	
 19244 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 19245 ;; Defined at:
 19246 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 19247 ;; Parameters:    Size  Location     Type
 19248 ;;		None
 19249 ;; Auto vars:     Size  Location     Type
 19250 ;;		None
 19251 ;; Return value:  Size  Location     Type
 19252 ;;                  1    wreg      void 
 19253 ;; Registers used:
 19254 ;;		None
 19255 ;; Tracked objects:
 19256 ;;		On entry : 0/0
 19257 ;;		On exit  : 0/0
 19258 ;;		Unchanged: 0/0
 19259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19264 ;;Total ram usage:        0 bytes
 19265 ;; Hardware stack levels used:    1
 19266 ;; This function calls:
 19267 ;;		Nothing
 19268 ;; This function is called by:
 19269 ;;		_EUSART1_Initialize
 19270 ;;		_EUSART1_Receive_ISR
 19271 ;; This function uses a non-reentrant model
 19272 ;;
 19273                           
 19274                           
 19275                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 19276  0003                     _EUSART1_DefaultFramingErrorHandler:	
 19277                           
 19278                           ;incstack = 0
 19279 ;; hardware stack exceeded
 19280                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 19281  0003  0008               	return
 19282  0004                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 19283                           
 19284                           	psect	text76
 19285  08E7                     __ptext76:	
 19286 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 19287 ;; Defined at:
 19288 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 19289 ;; Parameters:    Size  Location     Type
 19290 ;;		None
 19291 ;; Auto vars:     Size  Location     Type
 19292 ;;		None
 19293 ;; Return value:  Size  Location     Type
 19294 ;;                  1    wreg      void 
 19295 ;; Registers used:
 19296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19297 ;; Tracked objects:
 19298 ;;		On entry : 0/0
 19299 ;;		On exit  : 0/0
 19300 ;;		Unchanged: 0/0
 19301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19306 ;;Total ram usage:        0 bytes
 19307 ;; Hardware stack levels used:    1
 19308 ;; Hardware stack levels required when called:    1
 19309 ;; This function calls:
 19310 ;;		_EUSART1_RxDataHandler
 19311 ;; This function is called by:
 19312 ;;		_EUSART1_Initialize
 19313 ;;		_EUSART1_Receive_ISR
 19314 ;; This function uses a non-reentrant model
 19315 ;;
 19316                           
 19317                           
 19318                           ;psect for function _EUSART1_DefaultErrorHandler
 19319  08E7                     _EUSART1_DefaultErrorHandler:	
 19320                           
 19321                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 19322                           
 19323                           ;incstack = 0
 19324 ;; hardware stack exceeded
 19325                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19326  08E7  318A  22BB         	fcall	_EUSART1_RxDataHandler
 19327  08E9  0008               	return
 19328  08EA                     __end_of_EUSART1_DefaultErrorHandler:	
 19329                           
 19330                           	psect	text77
 19331  0ABB                     __ptext77:	
 19332 ;; *************** function _EUSART1_RxDataHandler *****************
 19333 ;; Defined at:
 19334 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 19335 ;; Parameters:    Size  Location     Type
 19336 ;;		None
 19337 ;; Auto vars:     Size  Location     Type
 19338 ;;		None
 19339 ;; Return value:  Size  Location     Type
 19340 ;;                  1    wreg      void 
 19341 ;; Registers used:
 19342 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19343 ;; Tracked objects:
 19344 ;;		On entry : 0/0
 19345 ;;		On exit  : 0/0
 19346 ;;		Unchanged: 0/0
 19347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19351 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19352 ;;Total ram usage:        1 bytes
 19353 ;; Hardware stack levels used:    1
 19354 ;; This function calls:
 19355 ;;		Nothing
 19356 ;; This function is called by:
 19357 ;;		_EUSART1_Receive_ISR
 19358 ;;		_EUSART1_DefaultErrorHandler
 19359 ;; This function uses a non-reentrant model
 19360 ;;
 19361                           
 19362                           
 19363                           ;psect for function _EUSART1_RxDataHandler
 19364  0ABB                     _EUSART1_RxDataHandler:	
 19365                           
 19366                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 19367                           
 19368                           ;incstack = 0
 19369 ;; hardware stack exceeded
 19370                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 19371  0ABB  0142               	movlb	2	; select bank2
 19372  0ABC  0819               	movf	25,w	;volatile
 19373  0ABD  00F7               	movwf	??_EUSART1_RxDataHandler
 19374  0ABE  0874               	movf	_eusart1RxHead,w
 19375  0ABF  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 19376  0AC0  0086               	movwf	6
 19377  0AC1  3001               	movlw	1	; select bank2/3
 19378  0AC2  0087               	movwf	7
 19379  0AC3  0877               	movf	??_EUSART1_RxDataHandler,w
 19380  0AC4  0081               	movwf	1
 19381  0AC5  3001               	movlw	1
 19382  0AC6  00F7               	movwf	??_EUSART1_RxDataHandler
 19383  0AC7  0877               	movf	??_EUSART1_RxDataHandler,w
 19384  0AC8  07F4               	addwf	_eusart1RxHead,f	;volatile
 19385                           
 19386                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 19387  0AC9  3008               	movlw	8
 19388  0ACA  0274               	subwf	_eusart1RxHead,w	;volatile
 19389  0ACB  1803               	btfsc	3,0
 19390                           
 19391                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 19392  0ACC  01F4               	clrf	_eusart1RxHead	;volatile
 19393                           
 19394                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 19395  0ACD  3001               	movlw	1
 19396  0ACE  00F7               	movwf	??_EUSART1_RxDataHandler
 19397  0ACF  0877               	movf	??_EUSART1_RxDataHandler,w
 19398  0AD0  0141               	movlb	1	; select bank1
 19399  0AD1  07D1               	addwf	_eusart1RxCount^(0+128),f	;volatile
 19400  0AD2  0008               	return
 19401  0AD3                     __end_of_EUSART1_RxDataHandler:	
 19402                           
 19403                           	psect	text78
 19404  09B3                     __ptext78:	
 19405 ;; *************** function _ADCC_ThresholdISR *****************
 19406 ;; Defined at:
 19407 ;;		line 308 in file "mcc_generated_files/adcc.c"
 19408 ;; Parameters:    Size  Location     Type
 19409 ;;		None
 19410 ;; Auto vars:     Size  Location     Type
 19411 ;;		None
 19412 ;; Return value:  Size  Location     Type
 19413 ;;                  1    wreg      void 
 19414 ;; Registers used:
 19415 ;;		wreg, status,2, status,0, pclath, cstack
 19416 ;; Tracked objects:
 19417 ;;		On entry : 0/0
 19418 ;;		On exit  : 0/0
 19419 ;;		Unchanged: 0/0
 19420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19425 ;;Total ram usage:        0 bytes
 19426 ;; Hardware stack levels used:    1
 19427 ;; Hardware stack levels required when called:    1
 19428 ;; This function calls:
 19429 ;;		Absolute function
 19430 ;;		_ADCC_DefaultInterruptHandler
 19431 ;;		_adcThresholdHandler
 19432 ;; This function is called by:
 19433 ;;		_INTERRUPT_InterruptManager
 19434 ;; This function uses a non-reentrant model
 19435 ;;
 19436                           
 19437                           
 19438                           ;psect for function _ADCC_ThresholdISR
 19439  09B3                     _ADCC_ThresholdISR:	
 19440                           
 19441                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 19442                           
 19443                           ;incstack = 0
 19444 ;; hardware stack exceeded
 19445                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 19446  09B3  014E               	movlb	14	; select bank14
 19447  09B4  108D               	bcf	13,1	;volatile
 19448                           
 19449                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 19450  09B5  0142               	movlb	2	; select bank2
 19451  09B6  0860               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 19452  09B7  0461               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 19453  09B8  1903               	btfsc	3,2
 19454  09B9  0008               	return
 19455                           
 19456                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 19457  09BA  0861               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 19458  09BB  008A               	movwf	10
 19459  09BC  0860               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 19460  09BD  000A               	callw
 19461  09BE  3189               	pagesel	$
 19462  09BF  0008               	return
 19463  09C0                     __end_of_ADCC_ThresholdISR:	
 19464                           
 19465                           	psect	text79
 19466  0002                     __ptext79:	
 19467 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 19468 ;; Defined at:
 19469 ;;		line 320 in file "mcc_generated_files/adcc.c"
 19470 ;; Parameters:    Size  Location     Type
 19471 ;;		None
 19472 ;; Auto vars:     Size  Location     Type
 19473 ;;		None
 19474 ;; Return value:  Size  Location     Type
 19475 ;;                  1    wreg      void 
 19476 ;; Registers used:
 19477 ;;		None
 19478 ;; Tracked objects:
 19479 ;;		On entry : 0/0
 19480 ;;		On exit  : 0/0
 19481 ;;		Unchanged: 0/0
 19482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19487 ;;Total ram usage:        0 bytes
 19488 ;; Hardware stack levels used:    1
 19489 ;; This function calls:
 19490 ;;		Nothing
 19491 ;; This function is called by:
 19492 ;;		_ADCC_Initialize
 19493 ;;		_ADCC_ThresholdISR
 19494 ;; This function uses a non-reentrant model
 19495 ;;
 19496                           
 19497                           
 19498                           ;psect for function _ADCC_DefaultInterruptHandler
 19499  0002                     _ADCC_DefaultInterruptHandler:	
 19500                           
 19501                           ;incstack = 0
 19502 ;; hardware stack exceeded
 19503                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 19504  0002  0008               	return
 19505  0003                     __end_of_ADCC_DefaultInterruptHandler:	
 19506                           
 19507                           	psect	text80
 19508  08ED                     __ptext80:	
 19509 ;; *************** function _adcThresholdHandler *****************
 19510 ;; Defined at:
 19511 ;;		line 35 in file "beat.c"
 19512 ;; Parameters:    Size  Location     Type
 19513 ;;		None
 19514 ;; Auto vars:     Size  Location     Type
 19515 ;;		None
 19516 ;; Return value:  Size  Location     Type
 19517 ;;                  1    wreg      void 
 19518 ;; Registers used:
 19519 ;;		None
 19520 ;; Tracked objects:
 19521 ;;		On entry : 0/0
 19522 ;;		On exit  : 0/0
 19523 ;;		Unchanged: 0/0
 19524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19529 ;;Total ram usage:        0 bytes
 19530 ;; Hardware stack levels used:    1
 19531 ;; This function calls:
 19532 ;;		Nothing
 19533 ;; This function is called by:
 19534 ;;		_BEAT_init
 19535 ;;		_ADCC_ThresholdISR
 19536 ;; This function uses a non-reentrant model
 19537 ;;
 19538                           
 19539                           
 19540                           ;psect for function _adcThresholdHandler
 19541  08ED                     _adcThresholdHandler:	
 19542                           
 19543                           ;beat.c: 36:     thresholdExceeded = 1;
 19544                           
 19545                           ;incstack = 0
 19546 ;; hardware stack exceeded
 19547                           ; Regs used in _adcThresholdHandler: []
 19548  08ED  0141               	movlb	1	; select bank1
 19549  08EE  01BC               	clrf	_thresholdExceeded^(0+128)
 19550  08EF  0ABC               	incf	_thresholdExceeded^(0+128),f
 19551  08F0  0008               	return
 19552  08F1                     __end_of_adcThresholdHandler:	
 19553  007E                     btemp	set	126	;btemp
 19554  007E                     int$flags	set	126
 19555  007E                     wtemp0	set	126


Data Sizes:
    Strings     108
    Constant    96
    Data        13
    BSS         156
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     14      80
    BANK2            80      0      76
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_8(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_8(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2937_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[8]), STR_13(CODE[9]), 
		 -> STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_7(CODE[2]), STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    S1990$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1140$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S1163$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S1163$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_printf
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_CLOCK_getTime
    _LED_task->_PWM1_LoadDutyValue
    _LED_task->_PWM2_LoadDutyValue
    _LED_task->_PWM3_LoadDutyValue
    _LED_task->_PWM4_LoadDutyValue
    _DMX_init->_TM1650_fastPrintNum
    _CONTROLLER_task->_menuSelection
    _menuSelection->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->_I2C1_MasterWrite
    _writeData->___lwmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_CONTROLLER_task
    _TM1650_init->_printf
    _CONTROLLER_task->_printf
    _menuSelection->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   82135
                                             12 BANK1      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   18907
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0    3884
                                              2 BANK0      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_LoadDutyValue                                   2     0      2     971
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    4933
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   49742
                                             79 BANK0      1     1      0
                                             10 BANK1      2     2      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                        _CONTROL_DMX
                      _TM1650_enable
                _TM1650_fastPrintNum
                      _menuSelection
                             _printf
 ---------------------------------------------------------------------------------
 (2) _menuSelection                                        2     2      0   16206
                                             77 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   16206
                                             73 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   14775
                                             65 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   14340
                                             56 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2    9778
                                             50 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    9534
                                             41 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    4282
                                             33 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    3890
                                             25 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    2946
                                             23 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    2822
                                             20 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2701
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0    9655
                                             23 BANK0      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0    4722
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    4722
                                             20 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    2670
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1400
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     211
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     849
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1167
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _CONTROL_DMX
       _BUTTONS_isHeld
       _CLOCK_getTime
       _address_dec
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
       _address_inc
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _menuSelection
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_task
     _BEAT_detected
     _CLOCK_getTime
     _PWM1_LoadDutyValue
     _PWM2_LoadDutyValue
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     11A       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      E      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4C      10       95.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     11A      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 27 22:41:26 2019

                      ??_ADCC_SetUpperThreshold 0022                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0077                                              _up 00C8  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00CC  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 08ED  
                                           l911 0470                                             l909 040B  
                                           _PR2 028D                                             _bpm 0136  
                                           _pad 0F51                         __size_of_PMD_Initialize 000A  
                               _TMR2_Initialize 09DA                                 _PWM4_Initialize 0990  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                 __CFG_BBEN$OFF 0000                                __end_of_I2C1_ISR 01C4  
                                          l1001 0305                                            l1030 0FC4  
                                          l1033 0FFF                                            l1042 071A  
                                          l1432 0F89                                            l1429 0F69  
                                          l5014 068A                                            l5008 0669  
                                          l5024 069B                                            l5018 0690  
                                          l3700 0D0E                                            l5038 057E  
                                          l5046 0D1C                            _ADCC_StartConversion 0914  
                                          l5400 0724                                            l5048 0D39  
                                          l5074 09F5                                            l5090 0B2A  
                                          l5250 0BBE                                            l3564 0B08  
                                          l5326 0A50                                            l3566 0B14  
                                          ?_pad 0049                                            l5096 0AF5  
                                          l5088 0B26                                            l5408 0733  
                                          l5344 0FC6                                            l5336 0FB3  
                                          l5600 0312                                            l3674 0E00  
                                          l3666 0DE2                                            l3690 0CED  
                                          l5098 0AF9                                            l5418 073B  
                                          l5354 0FD3                                            l5362 0FEB  
                                          l5338 0FBA                                            l5282 0B82  
                                          l5266 0BDC                                            l3668 0DEE  
                                          l5540 03C4                                            l3692 0CF9  
                                          l5428 0742                                            l5460 0A88  
                                          l5356 0FDB                                            l5620 0335  
                                          l5612 0321                                            l3678 0E09  
                                          l5446 075E                                            l5358 0FE3  
                                          l5630 034A                                            l3696 0D05  
                                          l5384 071C                                            l5616 032E  
                                          l5472 093F                                            l5562 0447  
                                          l5554 0423                                            l4914 0B67  
                                          l5386 06E2                                            l5618 0331  
                                          l5626 033B                                            l5298 0BA0  
                                          l5730 027B                                            l5708 0530  
                                          l5564 0451                                            l5548 0405  
                                          l4908 0CDF                                            l4924 0C36  
                                          l5900 0FF4                                            l5644 0391  
                                          l5636 0371                                            l5732 021C  
                                          l5724 0205                                            l4926 0C38  
                                          l4942 0EA7                                            l5654 0397  
                                          l5646 0394                                            l5638 0375  
                                          l5750 0230                                            l5672 04B3  
                                          l4880 08F5                                            l4952 0C74  
                                          l5648 0388                                            l5744 022C  
                                          l4938 0E84                                            l4962 0F67  
                                          l5594 0308                                            l5762 0258  
                                          l5738 0220                                            l5692 04EB  
                                          l5676 04B9                                            l4892 0F37  
                                          l4972 0F95                                            l4980 0D51  
                                          l5756 024C                                            l5694 04FE  
                                          l4958 0F5F                                            l4982 0D5A  
                                          l4896 0F3E                                            l4968 0F6B  
                                          l4898 0F44                                            l5794 07EC  
                                ?_TM1650_enable 0077                                            STR_1 105B  
                                          STR_2 104F                                            STR_3 1055  
                                          STR_4 1061                                            STR_5 1049  
                                          STR_6 1067                                            STR_7 1047  
                                          STR_8 101C                                            STR_9 103C  
                       __end_of_PWM1_Initialize 097A                                            u2015 0CF0  
                                          u2035 0CFF                                            u2045 0D06  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u4015 03C7  
                                          u4024 03E6                                            u4025 03E5  
                                          _T2PR 028D                                            u3515 0EA5  
                                          u4405 0511                                            u1945 0DE5  
                                          u4355 049E                                            u3555 0F75  
                                          u3715 0BD8                                            _PMD0 0796  
                                          u1965 0DEF                                            _PMD1 0797  
                                          _PMD2 0798                                            u1975 0DF9  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u1985 0E01                                            u3745 0B7E  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u4547 07C9                                            _PMD7 079D  
                                          u3685 0BBA                                            u3855 06DC  
                                          u3775 0B9C                                            u3885 06F8  
                                          u3895 0713                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                 ?_BUTTONS_init 0077                                   ?_BUTTONS_task 0077  
                                          _dbuf 01A0                            ?_adcThresholdHandler 0077  
                                          _ctoa 0D42                                            _main 07C0  
                                          _down 00C7                                            _init 0BE5  
                                          _menu 00C9                                            _prec 0132  
                                          _nout 0130                                            pad@i 004D  
                                          pad@p 004A                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            pad@w 004F  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0030  
                       __end_of_TM1650_setDigit 0A2B                              __size_of_GPIO_init 0011  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0018  
                          __size_of_address_inc 0019                  I2C1_MasterWriteTRBBuild@length 0021  
                                _BUTTONS_isHeld 09E8                                           ??_pad 004C  
                       __end_of_PWM2_Initialize 0985                         __end_of_TMR0_Initialize 0A66  
                                    _i2c1_state 00CF                  ??_TMR0_DefaultInterruptHandler 0077  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 0965                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 0120                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_ctoa 0052  
                              __end_of_LED_task 02BD                                           ?_main 0077  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                                         _ADREF 0116                               __end_of_I2C1_Stop 0AEB  
                                         STR_10 102D                                           STR_11 1013  
                                         STR_12 1000                                           STR_13 100A  
                                         STR_14 1025                                           STR_15 1035  
                                         STR_16 1043                                   __CFG_WDTE$OFF 0000  
                              __end_of_DMX_init 0A3E                                           _ADRPT 009A  
                                         _T2CON 028E                                           _T2HLT 028F  
                               __end_of___lwdiv 0E0E                      _ADCC_ADTI_InterruptHandler 0160  
                                         _T2TMR 028C                                           _T2RST 0291  
                                         i1l432 0017                                           i1l441 002E  
                               __end_of___lwmod 0D13                                           i1l434 001E  
                                         i1l436 0025                                           i1l429 000E  
                                         i1l560 00D7                                           i1l561 00E3  
                                         i1l554 00B4                                           i1l571 0120  
                                         i1l555 00B5                                           i1l549 0089  
                                         i1l590 0A05                                           i1l583 0184  
                                         i1l575 0140                                           i1l578 014F  
                                         i1l579 015D                                           _OSCEN 0891  
                                  vfpfcnvrt@fmt 0058                              _PWM4_LoadDutyValue 0BC7  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 08ED                       ?_TMR0_SetInterruptHandler 0020  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 09CD  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                           _delay 00E5  
                                         _flags 00A7                                           _enter 00C6  
                         ?_ADCC_StartConversion 0077                                           _fputc 0E7A  
                                         _fputs 0C70                             ?_PWM4_LoadDutyValue 0020  
                                         pad@fp 0051                                           _width 00A5  
                                         ctoa@c 0052                                           _putch 0C28  
                                         ctoa@w 0055                         __end_of_PWM3_Initialize 0990  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0077  
                             __end_of_BEAT_init 0ABB                               __end_of_BEAT_task 0553  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0004     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0077             ?_EUSART1_DefaultFramingErrorHandler 0077  
            _EUSART1_DefaultFramingErrorHandler 0003                 I2C1_MasterWriteTRBBuild@address 0022  
                        __end_of_BUTTONS_isHeld 09F7                                 __initialization 0032  
                          TM1650_setDigit@digit 0036                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                                    __end_of_ctoa 0D72  
                    __end_of_EUSART1_Initialize 0DA5                                    __end_of_main 07F9  
                                  __end_of_init 0C05                                 _CONTROLLER_task 02BD  
                          ??_PWM4_LoadDutyValue 0022                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 0926                         __end_of_PWM4_Initialize 099B  
                       __end_of_TMR2_Initialize 09E8                     ?_INTERRUPT_InterruptManager 0077  
                                   _i2c1_object 00A0                                          ??_ctoa 0054  
                                        ??_main 00E1                                          ??_init 0023  
                             __end_of_GPIO_init 0A19                                 ??_TM1650_enable 0034  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                            __size_of_CONTROL_DMX 00A2  
                                        ?_fputc 0039                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          ?_fputs 0041  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR3H 0315                                          _CCPR1L 030C  
                                        _CCPR4H 0319                                          _CCPR2L 0310  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        ?_putch 0077                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RC4PPS 1F24  
                              ?_PWM1_Initialize 0077                                          _RC5PPS 1F25  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        i1l4020 0AE9                                          _RC7PPS 1F27  
                                        i1l4302 00D1                                          i1l4240 0DB9  
                                        i1l4250 0DD6                                          i1l4316 00FC  
                                        i1l4246 0DC7                                          i1l4350 012E  
                                        i1l4336 0115                                          i1l4370 0164  
                                        i1l4284 00A7                                          i1l4390 018F  
                                        i1l4374 016B                                          i1l4358 0143  
                                        i1l4296 00C1                                          i1l4288 00AE  
                                __CFG_WDTCCS$SC 0000                                          i1l4386 0188  
                                        i1l4388 018B                                          i1l4396 0197  
                                        i1l4692 0E6D                                          i1l4684 0E48  
                                        i1l5902 01A0                                          i1l4696 0E77  
                                        _OSCFRQ 0893                          __size_of_DMX_interrupt 0037  
                                        _TX1REG 011A                                          _TX1STA 011E  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0034                                 ?_BUTTONS_isHeld 0077  
                            ??_I2C1_MasterWrite 002B                                    _CCPTMRS0bits 021E  
                                  vfprintf@cfmt 0067                                  _p_i2c1_current 00CD  
                   __size_of_PWM3_LoadDutyValue 001E                     __end_of_TM1650_fastPrintNum 0615  
                             _ADCC_ThresholdISR 09B3                          __size_of_menuSelection 005C  
                                __CFG_STVREN$ON 0000                                       ??___lwdiv 0024  
                                     ??___lwmod 002C                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                ?_TMR0_Initialize 0077  
                              ?_PWM2_Initialize 0077                              ?_ADCC_ThresholdISR 0077  
                                     ?_I2C1_ISR 0077                                          _printf 0A8F  
                        __size_of_BEAT_detected 0009                                          pad@buf 0049  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                        ctoa@fp 0057                                  _lastActiveTime 00B1  
                                        _strlen 0B03                            __size_of_TM1650_init 0014  
                               _ADCC_Initialize 0C96                                          fputc@c 0039  
                                _PMD_Initialize 0965                                          fputs@c 0045  
                                  ??_CLOCK_init 0022                                          fputs@i 0046  
                                        fputs@s 0048                             ??_ADCC_ThresholdISR 0077  
                        ??_ADCC_StartConversion 0020                                          putch@n 0038  
                              __end_of_vfprintf 0D42            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 090B                   I2C1_MasterWriteTRBBuild@pdata 0020  
                                 _tm1650_status 00BF                                 _eusart1RxBuffer 0128  
                              ?_PWM3_Initialize 0077                               _SYSTEM_Initialize 0C4C  
                       __end_of__initialization 0072                         __end_of_CONTROLLER_task 03A2  
                            ?_SYSTEM_Initialize 0077                      __end_of_PWM2_LoadDutyValue 0BA9  
                                     ?_LED_task 0077                                       ?_DMX_init 0077  
                                _i2c1_trb_count 00CE                     PWM1_LoadDutyValue@dutyValue 0020  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 09C0  
                 __end_of_EUSART1_RxDataHandler 0AD3                           _I2C1_FunctionComplete 09F7  
                          _I2C1_BusCollisionISR 08EA                                  __pcstackCOMMON 0077  
                            __end_of_CLOCK_init 0902                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 09CD                             ??_SYSTEM_Initialize 0022  
                                     ?_TMR0_ISR 0077                                   __end_of_fputc 0EB1  
                                 __end_of_fputs 0C96                                   __end_of_putch 0C4C  
                            _PWM1_LoadDutyValue 0B6D                                      ??_I2C1_ISR 0079  
                              ?_TMR2_Initialize 0077                                ?_PWM4_Initialize 0077  
                                 _DMX_interrupt 0E43                            __end_of_BUTTONS_init 0EFF  
                        __end_of_PMD_Initialize 096F                            __end_of_BUTTONS_task 0487  
                   PWM4_LoadDutyValue@dutyValue 0020                             ?_PWM1_LoadDutyValue 0020  
                   __end_of_EUSART1_Receive_ISR 0DD9                               _thresholdExceeded 00BC  
                   ADCC_StartConversion@channel 0020                                   _menuSelection 0FA4  
                                       ??_fputc 003C                       __end_of_SYSTEM_Initialize 0C70  
                                       ??_fputs 0042                                         ??_putch 0037  
                                 _eusart1RxHead 0074                                   _eusart1RxTail 0073  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                 ??_EUSART1_SetRxInterruptHandler 0022  
                                 _BEAT_detected 0938                                      ??_LED_task 0022  
                                    ??_DMX_init 0037                            ??_PWM1_LoadDutyValue 0022  
                         ?_I2C1_BusCollisionISR 0077                 __end_of_EUSART1_SetErrorHandler 094A  
                                    __pmaintext 07C0                __end_of_TMR0_SetInterruptHandler 092F  
                                    ??_TMR0_ISR 0077                                 __CFG_PPS1WAY$ON 0000  
                              writeData@address 0032                         __end_of_ADCC_Initialize 0CBC  
                                    __pintentry 0004                                 _I2C1_Initialize 0B34  
                                       _CCP1CON 030E                                         _CCP2CON 0312  
                                       _CCP3CON 0316                                         _CCP4CON 031A  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                ?_DMX_interrupt 0077                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 090B           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 0902                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                                       ?_printf 00D5                                 ?_PMD_Initialize 0077  
                                       ?_strlen 0020          __end_of_EUSART1_SetFramingErrorHandler 0953  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 094A  
                  ?_EUSART1_DefaultErrorHandler 0077                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00A9  
                                     _I2C1_Stop 0AD3                                      _arrayIndex 00A9  
                                ?_menuSelection 0077                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                               __end_of_charTable 07C0  
                           _CLOCK_timerCallback 07F9                                  ?_BEAT_detected 0077  
                 I2C1_MasterTRBInsert@ptrb_list 0020                              __size_of_writeData 001D  
                                 ??_address_dec 0037                                   ??_address_inc 0037  
                              ?_CONTROLLER_task 0077                                      _enterState 00C0  
                               BUTTONS_task@btn 0028                          ?_I2C1_FunctionComplete 0077  
                                     _BEAT_init 0AA4                   __size_of_I2C1_MasterTRBInsert 0052  
                                     _BEAT_task 0487                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 0072                            ?_CLOCK_timerCallback 0077  
                                       ___lwdiv 0DD9                                         ___lwmod 0CE6  
                                     ?_vfprintf 0061                                         _address 00EB  
                                       __ptext1 0A66                                         __ptext2 0C4C  
                                       __ptext3 09DA                                         __ptext4 0A52  
                                       __ptext5 0990                                         __ptext6 0985  
                                       __ptext7 097A                                         __ptext8 096F  
                                       __ptext9 0965                                 __size_of_printf 0015  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                               __size_of_strlen 0018                                         _lastRun 00AD  
                         _OSCILLATOR_Initialize 095C                                       _T2CONbits 028E  
                                  __size_of_pad 0053                                         _initial 00E3  
                                       _buttons 0138                              _EUSART1_Initialize 0D72  
                      ??_PIN_MANAGER_Initialize 0020                                       _T2HLTbits 028F  
                               __CFG_WRTSAF$OFF 0000                                      ?_I2C1_Stop 0077  
                   __end_of_adcThresholdHandler 08F1                                         _upState 00C3  
                 ??_EUSART1_DefaultErrorHandler 0078                                         _startup 00EF  
                    __size_of_SYSTEM_Initialize 0024                            I2C1_ISR@pi2c_buf_ptr 00CC  
                                       clrloop0 099C                                _currentSelection 00ED  
                          end_of_initialization 0072                                       _T2RSTbits 0291  
                                     _GPIO_init 0A08                             ?_EUSART1_Initialize 0077  
                                       init@btn 0024                                         init@pin 0022  
                              ??_BUTTONS_isHeld 0020                                         fputc@fp 003B  
                                       init_ram 09A7                     _EUSART1_OverrunErrorHandler 0166  
                                       fputs@fp 0041                                         initloop 09A8  
                        ??_I2C1_BusCollisionISR 0077                         __end_of_I2C1_Initialize 0B50  
         __end_of_EUSART1_SetRxInterruptHandler 0938          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 092F                                      ?_BEAT_init 0077  
                                    ?_BEAT_task 0077                               __end_of_vfpfcnvrt 06BE  
                         __size_of_BUTTONS_init 004E                           __size_of_BUTTONS_task 00E5  
                         ??_CLOCK_timerCallback 0077                                 ??_DMX_interrupt 0077  
                           __end_of_address_dec 0B03                     __size_of_PWM4_LoadDutyValue 001E  
                           __end_of_address_inc 0B34                                ?_ADCC_Initialize 0077  
                                    ??_vfprintf 0064                            ??_EUSART1_Initialize 0022  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0023  
                                       strlen@s 0020                        _TMR0_SetInterruptHandler 0926  
                     __size_of_I2C1_MasterWrite 002A                               __size_of_I2C1_ISR 014E  
                             __end_of_writeData 0B6D                                 ??_menuSelection 006D  
                       ?_ADCC_SetUpperThreshold 0020                                   ??_CONTROL_DMX 0037  
                                     _TRISAbits 0012                                       _TRISCbits 0014  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 0A8F  
             I2C1_ISR@i2c_10bit_address_restart 00CA                                      ?_GPIO_init 0077  
                        __size_of_CLOCK_getTime 0009                                    _BUTTONS_init 0EB1  
                                  _BUTTONS_task 03A2                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
                    __end_of_PWM3_LoadDutyValue 0BC7            __size_of_EUSART1_DefaultErrorHandler 0003  
                      __size_of_PWM1_Initialize 000B                               __size_of_LED_task 00F9  
                             __size_of_DMX_init 0013                  ??_ADCC_DefaultInterruptHandler 0077  
                                 ??_TM1650_init 006D                                     vfpfcnvrt@ap 0059  
                                   vfpfcnvrt@fp 0060                         I2C1_MasterWrite@trBlock 015C  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0078  
                            _PWM2_LoadDutyValue 0B8B                        __size_of_TM1650_setDigit 0012  
                        ?_OSCILLATOR_Initialize 0077                  __end_of_ADCC_SetUpperThreshold 0914  
                  __size_of_TM1650_fastPrintNum 00C2                                  __end_of_printf 0AA4  
                                __end_of_strlen 0B1B                                    _lastDetected 00BB  
                           start_initialization 0032                                    _enterPressed 00C4  
                                   ??_I2C1_Stop 0077                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                             ?_PWM2_LoadDutyValue 0020  
               __size_of_PIN_MANAGER_Initialize 0035                             TM1650_setDigit@data 0034  
                                   __end_of_pad 0FA4   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 0A3E  
                           __end_of_CONTROL_DMX 0760                              ?_BUTTONS_isClicked 0077  
                                   _address_dec 0AEB                                     _address_inc 0B1B  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0077  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                          ??_PWM2_LoadDutyValue 0022                        __size_of_PWM3_Initialize 000B  
                                   vfprintf@fmt 0061                     PWM2_LoadDutyValue@dutyValue 0020  
                           ??_BUTTONS_isClicked 0020                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 0ABB                  ?_EUSART1_SetRxInterruptHandler 0020  
                                   __pdataBANK1 00E3                                   _CLOCK_getTime 091D  
                                      ??_printf 0069                                        ??_strlen 0022  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 00D1  
                                   __pbssBIGRAM 23EE                             __end_of_TM1650_init 0A7A  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 016A  
                                     ___latbits 0003                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00D5                        __size_of_PWM4_Initialize 000B  
                      __size_of_TMR2_Initialize 000E                                   _i2c1_tr_queue 00D2  
                     __end_of_BUTTONS_isClicked 0A52                                     ??_GPIO_init 0020  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0077                    __size_of_EUSART1_Receive_ISR 0034  
                                  _menuSelected 00EE                                    _currentState 0070  
                                     _charTable 0760                           _TMR0_InterruptHandler 0162  
                                     __pnvBANK2 0160                     __size_of_PWM1_LoadDutyValue 001E  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 0E0E  
                                      ?___lwdiv 0020                                        ?___lwmod 0028  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0076  
                             ??_PWM1_Initialize 0020                    ??_INTERRUPT_InterruptManager 007E  
                               writeData@status 0033                               __size_of_vfprintf 002F  
                              _I2C1_MasterWrite 0CBC                                        _BAUD1CON 011F  
                  __end_of_I2C1_MasterTRBInsert 0F51      __end_of_EUSART1_DefaultOverrunErrorHandler 08F5  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0077  
           ?_EUSART1_DefaultOverrunErrorHandler 0077              _EUSART1_DefaultOverrunErrorHandler 08F1  
                          _EUSART1_ErrorHandler 0164                                       _downState 00C2  
                                   _CONTROL_DMX 06BE                         _EUSART1_SetErrorHandler 0941  
                             ??_TM1650_setDigit 0035                                ___lwdiv@quotient 0025  
                                __size_of_fputc 0037                                        _T2CLKCON 0290  
                                     _menuState 00C1                                  __size_of_fputs 0026  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 08FA  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0077                _I2C1_WaitForLastPacketToComplete 08F5  
                        I2C1_MasterRead@trBlock 0158                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 099B  
                                      _PIE0bits 0716                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 01C4  
                                      _DMX_init 0A2B             __size_of_INTERRUPT_InterruptManager 002C  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 00E9                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0077  
                       CONTROLLER_task@isActive 006F                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 09C0                                        _SSP1STAT 018F  
                      __size_of_CONTROLLER_task 00E5                                     _TM1650_init 0A66  
                                     _threshold 00E7                                       _vfpfcnvrt 0615  
                             ??_PWM3_Initialize 0020                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                       _startTime 00B9  
                            DMX_interrupt@dummy 007D                                        _WPUAbits 1F39  
                                      _WPUCbits 1F4F                                       _writeData 0B50  
                    __size_of_BUTTONS_isClicked 0014                                      vfpfcnvrt@c 005F  
                                   _lastIncTime 00B3                               ??_TMR2_Initialize 0020  
                             ??_PWM4_Initialize 0020                    __size_of_adcThresholdHandler 0004  
                   __end_of_CLOCK_timerCallback 07FF                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 0553                                      _ADSTATbits 0115  
                    __end_of_PWM4_LoadDutyValue 0BE5                   __size_of_I2C1_BusCollisionISR 0003  
                                    vfprintf@ap 0063                                      vfprintf@fp 0066  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 00CB  
                       ??_OSCILLATOR_Initialize 0020                           __end_of_DMX_interrupt 0E7A  
                   __size_of_EUSART1_Initialize 0033                                      ?_vfpfcnvrt 0058  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
              __end_of_I2C1_MasterWriteTRBBuild 0C28                              _PWM3_LoadDutyValue 0BA9  
                                    _ANSELAbits 1F38                                      _ANSELCbits 1F4E  
                          ?_TM1650_fastPrintNum 0034                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                             TM1650_enable@enable 0034  
           __end_of_EUSART1_DefaultErrorHandler 08EA                     _EUSART1_DefaultErrorHandler 08E7  
                                   _currentTime 00B5                                      _CLOCK_init 08FA  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                                   _menuPressed 00C5                                 ___lwdiv@divisor 0020  
                         __end_of_menuSelection 1000                             I2C1_ISR@i2c_address 0075  
                               ___lwdiv@counter 0027                                        _detected 00BD  
                                    ?_writeData 002E                                        __ptext10 0E0E  
                                      __ptext11 095C                                        __ptext20 0BA9  
                                      __ptext12 0B34                                        __ptext21 0B8B  
                                      __ptext13 0D72                                        __ptext30 0615  
                                      __ptext22 0B6D                                        __ptext14 0953  
                                      __ptext31 0D42                                        __ptext23 0938  
                                      __ptext15 094A                                        __ptext40 0B1B  
                                      __ptext32 0F51                                        __ptext24 0A2B  
                                      __ptext16 0941                                        __ptext41 0AEB  
                                      __ptext33 0B03                                        __ptext25 092F  
                                      __ptext17 0C96                                        __ptext50 0A3E  
                                      __ptext42 0553                                        __ptext34 0C70  
                                      __ptext26 02BD                                        __ptext18 01C4  
                                      __ptext51 08FA                                        __ptext43 0B50  
                                      __ptext35 0E7A                                        __ptext27 0FA4  
                                      __ptext19 0BC7                                        __ptext60 0AA4  
                                      __ptext52 0926                                        __ptext44 0CBC  
                                      __ptext36 0C28                                        __ptext28 0A8F  
                                      __ptext61 0914                                        __ptext53 03A2  
                                      __ptext45 0C05                                        __ptext37 0A19  
                                      __ptext29 0D13                                        __ptext70 09F7  
                                      __ptext62 090B                                        __ptext54 0EB1  
                                      __ptext46 0EFF                                        __ptext38 0A7A  
                                      __ptext71 08EA                                        __ptext63 0902  
                                      __ptext55 0BE5                                        __ptext47 08F5  
                                      __ptext39 06BE                                        __ptext80 08ED  
                                      __ptext72 0E43                                        __ptext56 0A08  
                                      __ptext48 0CE6                                        __ptext73 0DA5  
                                      __ptext65 09C0                                        __ptext57 0487  
                                      __ptext49 09E8                                        __ptext74 08F1  
                                      __ptext66 07F9                                        __ptext58 0DD9  
                           ?_PWM3_LoadDutyValue 0020                                        __ptext75 0003  
                                      __ptext67 07FF                                        __ptext59 091D  
                                      __ptext76 08E7                                        __ptext68 0076  
                                      __ptext77 0ABB                                        __ptext69 0AD3  
                                      __ptext78 09B3                                        __ptext79 0002  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _dmxArray 23EE                            BUTTONS_isHeld@button 0020  
                         __end_of_BEAT_detected 0941                                        _lastBeat 00AF  
                                      _lastTime 00B7                                   __size_of_ctoa 0030  
                                 __size_of_main 0039                                   __size_of_init 0020  
                                  ?_address_dec 0077            __end_of_TMR0_DefaultInterruptHandler 0800  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 07FF  
                                  ?_address_inc 0077                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 0EFF                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                            ??_PWM3_LoadDutyValue 0022  
                  __end_of_ADCC_StartConversion 091D                                        int$flags 007E  
                                      _position 00BE                         __size_of_BUTTONS_isHeld 000F  
                                      _vfprintf 0D13              __end_of_INTERRUPT_InterruptManager 0030  
                    _INTERRUPT_InterruptManager 0004                                       printf@fmt 00D5  
                        __size_of_TM1650_enable 0015                     _EUSART1_FramingErrorHandler 0168  
                           _EUSART1_Receive_ISR 0DA5                           ??_TM1650_fastPrintNum 0036  
                                    _INTCONbits 000B                               ??_CONTROLLER_task 00DF  
                                      init@port 0020                                  __pstringtext10 1043  
                                __pstringtext11 1049                                  __pstringtext12 104F  
                                __pstringtext13 1055                                  __pstringtext14 105B  
                                __pstringtext15 1061                                  __pstringtext16 1067  
                                __pstringtext17 0000            __end_of_ADCC_DefaultInterruptHandler 0003  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 0002  
                                      intlevel1 0000                                  _thresholdCount 00AB  
                          ?_EUSART1_Receive_ISR 0077                                   writeData@data 002E  
                              ___lwmod@dividend 002A                         ?_PIN_MANAGER_Initialize 0077  
                      __end_of_I2C1_MasterWrite 0CE6                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 095C  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 0953  
                 __end_of_I2C1_FunctionComplete 0A08                           ?_I2C1_MasterTRBInsert 0020  
                               _PWM1_Initialize 096F                   ?_TMR0_DefaultInterruptHandler 0077  
                   __size_of_PWM2_LoadDutyValue 001E                          TM1650_fastPrintNum@num 0034  
                             _lastLedActiveTime 0134                                        printf@ap 006C  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                     PWM3_LoadDutyValue@dutyValue 0020  
                               _TM1650_setDigit 0A19                                     ??_vfpfcnvrt 005A  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 00D0  
                                 __pstringtext1 0760                                   __pstringtext2 1000  
                                 __pstringtext3 100A                                   __pstringtext4 1013  
                                 __pstringtext5 101C                                   __pstringtext6 1025  
                                 __pstringtext7 102D                                   __pstringtext8 1035  
                                 __pstringtext9 103C                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0028  
                                   ?_CLOCK_init 0077                                 _TMR0_Initialize 0A52  
                               _PWM2_Initialize 097A                                 ___lwmod@counter 002D  
                                  ?_CONTROL_DMX 0077                        _I2C1_MasterWriteTRBBuild 0C05  
                                   ??_writeData 002F                                      _TX1STAbits 011E  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0078  
                __end_of_PIN_MANAGER_Initialize 0E43                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 0A7A                              __size_of_I2C1_Stop 0018  
                 ?_ADCC_DefaultInterruptHandler 0077                      __end_of_PWM1_LoadDutyValue 0B8B  
                       ??_EUSART1_RxDataHandler 0077                                 _PWM3_Initialize 0985  
